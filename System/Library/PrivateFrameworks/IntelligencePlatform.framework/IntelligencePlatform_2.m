void sub_1B2A9140C(void *__src@<X2>, uint64_t *a2@<X0>, unint64_t a3@<X1>, char a4@<W3>, void *a5@<X8>)
{
  void *v5;
  void *v6;
  id v7;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  unsigned char *v16;
  unsigned char *v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  int v23;
  id v24;
  double v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned char *v62;
  uint64_t v63;
  unsigned char *v64;
  uint64_t v65;
  unsigned char *v66;
  id v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  void *v98;
  unsigned char v99[976];
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  id v105;
  unsigned char __dst[968];

  v7 = v5;
  v11 = *a2;
  memcpy(__dst, __src, sizeof(__dst));
  v12 = *(void *)(a3 + 16);
  if (v12 != v5[3])
  {
    sub_1B2A933C4();
    sub_1B299E4D4();
    *v17 = 0;
    goto LABEL_6;
  }
  sub_1B29A3EB4(&qword_1E9C38A78);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B2ECAB60;
  sub_1B2A7EA00();
  *(void *)(v13 + 32) = sub_1B2E82EE8();
  *(void *)(v13 + 40) = sub_1B2E82B68();
  v100 = v13;
  sub_1B2E82878();
  v14 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
  v15 = sub_1B2D53AFC(v13, 65568);
  if (v6)
  {

LABEL_4:
    sub_1B2A933C4();
    sub_1B299E4D4();
    *v16 = 1;
LABEL_6:
    swift_willThrow();
    return;
  }
  if (!v15) {
    goto LABEL_4;
  }
  v96 = v11;
  v98 = a5;
  v18 = v15;
  v19 = (unint64_t)objc_msgSend(v15, sel_count);
  if ((v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v20 = v19;
  v21 = v18;
  if (!v19) {
    goto LABEL_14;
  }
  if (!v12) {
    goto LABEL_32;
  }
  if (v19 - 1 >= v12)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_once();
    goto LABEL_27;
  }
  v22 = 0;
  v21 = v18;
  do
  {
    v23 = *(_DWORD *)(a3 + 32 + 4 * v22);
    v24 = objc_allocWithZone(NSNumber);
    LODWORD(v25) = v23;
    v7 = objc_msgSend(v24, sel_initWithFloat_, v25);
    objc_msgSend(v18, sel_setObject_atIndexedSubscript_, v7, v22);

    ++v22;
  }
  while (v20 != v22);
LABEL_14:
  sub_1B2E339B8(v21);
  a5 = v21;
  swift_retain();
  v26 = sub_1B2E33568();
  swift_release();
  if (v26 && (v27 = objc_msgSend(v26, sel_multiArrayValue), v26, v27))
  {
    swift_retain();
    v7 = sub_1B2E33568();
    swift_release();
    if (v7 && (v28 = objc_msgSend(v7, sel_multiArrayValue), v7, v28))
    {
      swift_retain();
      v7 = sub_1B2E33568();
      swift_release();
      if (v7)
      {
        v29 = objc_msgSend(v7, sel_multiArrayValue);

        if (v29)
        {
          v30 = objc_msgSend(v29, sel_objectAtIndexedSubscript_, 0);
          sub_1B2E82A58();
          v32 = v31;

          v33 = objc_msgSend(v27, sel_objectAtIndexedSubscript_, 0);
          sub_1B2E82A58();
          v35 = v34;

          v36 = objc_msgSend(v28, sel_objectAtIndexedSubscript_, 0);
          sub_1B2E82A58();
          v38 = v37;
          swift_release();

          sub_1B2A93638(v39, v40, v41, v42, v43, v44, v45);
          v46 = sub_1B2A900AC((uint64_t)v99);
          v100 = v96;
          v101 = v32;
          v102 = v35;
          v103 = v38;
          v53 = sub_1B2A93588(v46, v47, v48, v49, v50, v51, v52);
          sub_1B2A9354C(v53, v54, v55, v56, v57, v58, v59, v60, v95, v96, v97, a4, v98, a3);
          swift_bridgeObjectRetain();
          return;
        }
      }
      sub_1B2A933C4();
      v65 = sub_1B299E4D4();
      sub_1B29A18DC(v65, v66);
      swift_release();
    }
    else
    {
      sub_1B2A933C4();
      v63 = sub_1B299E4D4();
      sub_1B29A18DC(v63, v64);
      swift_release();
    }
  }
  else
  {
    sub_1B2A933C4();
    v61 = sub_1B299E4D4();
    sub_1B29A18DC(v61, v62);
    swift_release();
  }
  v105 = v7;
  v67 = v7;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if (!swift_dynamicCast() || v104 != 6)
  {

    return;
  }

  if (qword_1EB7E3A20 != -1) {
    goto LABEL_34;
  }
LABEL_27:
  v68 = sub_1B2E81FB8();
  sub_1B29A4B98(v68, (uint64_t)qword_1EB7E4AD8);
  v69 = sub_1B2E81F98();
  v70 = sub_1B2E82DB8();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v71 = 0;
    _os_log_impl(&dword_1B2996000, v69, v70, "Model execution failed. Unable to retrieve output featureValue for field.", v71, 2u);
    MEMORY[0x1B3EB30C0](v71, -1, -1);
  }

  sub_1B2A93638(v72, v73, v74, v75, v76, v77, v78);
  v79 = sub_1B2A900AC((uint64_t)v99);
  v100 = v96;
  v101 = 0;
  v103 = 0;
  v102 = 0;
  v86 = sub_1B2A93588(v79, v80, v81, v82, v83, v84, v85);
  sub_1B2A9354C(v86, v87, v88, v89, v90, v91, v92, v93, v95, v96, v97, a4, v98, a3);
  v94 = v105;
  swift_bridgeObjectRetain();
}

void sub_1B2A91A78()
{
}

id sub_1B2A91A84(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x63735F7475706E69 && a2 == 0xEC0000007365726FLL;
  if (v3 || (sub_1B2E837A8()) && (uint64_t v4 = *(void *)(v2 + 16)) != 0) {
    return objc_msgSend(self, sel_featureValueWithMultiArray_, v4);
  }
  else {
    return 0;
  }
}

uint64_t type metadata accessor for EntityRerankerInput()
{
  return self;
}

uint64_t sub_1B2A91BBC()
{
  return sub_1B29A4304(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1B2A91BD4()
{
  uint64_t v1 = v0;
  type metadata accessor for EntityRerankerHandler.EntityRerankerHandlerCache.GuardedData();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1B2E82148();
  sub_1B29A3EB4(&qword_1E9C38A08);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1B29E5380(v2);
  return v1;
}

uint64_t sub_1B2A91C60(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  v7 = *(os_unfair_lock_s **)(v6 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v7);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v6 + 16);
  swift_retain();
  sub_1B2A91D30(&v9, a1, a2, &v10);
  swift_release();
  os_unfair_lock_unlock(v7);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3) {
    return v10;
  }
  return result;
}

void sub_1B2A91D30(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v9 = *a1;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  sub_1B29B2A7C(&v64, a2, a3, v10);
  swift_bridgeObjectRelease();
  if (v65 == 1)
  {
    sub_1B2A10B50((uint64_t)&v64, &qword_1E9C38A10);
    swift_endAccess();
  }
  else
  {
    sub_1B29E5204((uint64_t)&v64, (uint64_t)&v70);
    swift_endAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v12 = Strong;
      if (qword_1EB7E3A20 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_1B2E81FB8();
      sub_1B29A4B98(v13, (uint64_t)qword_1EB7E4AD8);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v14 = sub_1B2E81F98();
      os_log_type_t v15 = sub_1B2E82DA8();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = swift_slowAlloc();
        unint64_t typea = swift_slowAlloc();
        uint64_t v66 = typea;
        *(_DWORD *)uint64_t v16 = 136315394;
        uint64_t v64 = v12;
        type metadata accessor for EntityRerankerHandler();
        swift_retain();
        uint64_t v17 = sub_1B2E823E8();
        sub_1B29BF6BC(v17, v18, (uint64_t)&v66, v19, v20, v21, v22, v23, v16 + 4, typea, (uint64_t)a4, v64, v65, v66, v67, v68, v69, v70, v71,
          v72);
        uint64_t v64 = v24;
        sub_1B2E82FB8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_1B29BF6BC(a2, a3, (uint64_t)&v66, v25, v26, v27, v28, v29, v50, typeb, v60, v64, v65, v66, v67, v68, v69, v70, v71,
          v72);
        uint64_t v64 = v30;
        a4 = v61;
        sub_1B2E82FB8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B2996000, v14, v15, "EntityRerankerHandler: using cached handler %s for %s", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1B3EB30C0](*(void *)typec, -1, -1);
        MEMORY[0x1B3EB30C0](v16, -1, -1);
      }
      else
      {
        swift_release_n();
        swift_bridgeObjectRelease_n();
      }

      sub_1B2A934D4((uint64_t)&v70);
      goto LABEL_17;
    }
    sub_1B2A934D4((uint64_t)&v70);
  }
  type metadata accessor for EntityRerankerHandler();
  uint64_t v12 = swift_allocObject();
  sub_1B2A922C0();
  if (v5) {
    return;
  }
  swift_weakInit();
  LOBYTE(v65) = 0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1B2C4568C((uint64_t)&v64, a2, a3);
  swift_endAccess();
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1B2E81FB8();
  sub_1B29A4B98(v31, (uint64_t)qword_1EB7E4AD8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v32 = sub_1B2E81F98();
  os_log_type_t v33 = sub_1B2E82DA8();
  int v34 = v33;
  if (os_log_type_enabled(v32, v33))
  {
    LODWORD(type) = v34;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    uint64_t v66 = v51;
    *(_DWORD *)uint64_t v35 = 136315394;
    uint64_t v64 = v12;
    swift_retain();
    uint64_t v36 = sub_1B2E823E8();
    sub_1B29BF6BC(v36, v37, (uint64_t)&v66, v38, v39, v40, v41, v42, v51, type, (uint64_t)a4, v64, v65, v66, v67, v68, v69, v70, v71,
      v72);
    uint64_t v64 = v43;
    sub_1B2E82FB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1B29BF6BC(a2, a3, (uint64_t)&v66, v44, v45, v46, v47, v48, v52, typed, v62, v64, v65, v66, v67, v68, v69, v70, v71,
      v72);
    uint64_t v64 = v49;
    a4 = v63;
    sub_1B2E82FB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B2996000, v32, typee, "EntityRerankerModel: caching model %s for %s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3EB30C0](v53, -1, -1);
    MEMORY[0x1B3EB30C0](v35, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
LABEL_17:
  *a4 = v12;
}

uint64_t sub_1B2A9226C()
{
  return sub_1B29A4304(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1B2A92284()
{
  type metadata accessor for EntityRerankerHandler.EntityRerankerHandlerCache();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1B2A91BD4();
  qword_1E9C38A18 = v0;
  return result;
}

uint64_t sub_1B2A922C0()
{
  type metadata accessor for EntityRerankerModel();
  uint64_t v2 = sub_1B2E3322C(objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_initWithComputeUnits_, 0));
  if (v1) {
    goto LABEL_64;
  }
  *(void *)(v0 + 16) = v2;
  id v3 = objc_msgSend(*(id *)(v2 + 16), sel_modelDescription);
  id v4 = objc_msgSend(v3, sel_metadata);

  type metadata accessor for MLModelMetadataKey(0);
  sub_1B2A934FC();
  sub_1B2E820F8();

  id v5 = (id)*MEMORY[0x1E4F1E898];
  sub_1B29B2960();

  swift_bridgeObjectRelease();
  if (v34[3])
  {
    sub_1B29A3EB4(&qword_1EB7D94D8);
    if (swift_dynamicCast())
    {
      uint64_t v6 = sub_1B29B2544(0x75746165466D756ELL, 0xEB00000000736572);
      unint64_t v8 = v7;
      uint64_t result = swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_8;
      }
    }
  }
  else
  {
    sub_1B2A10B50((uint64_t)v34, (uint64_t *)&unk_1EB7E6270);
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = 0;
  unint64_t v8 = 0xE000000000000000;
LABEL_8:
  uint64_t v10 = HIBYTE(v8) & 0xF;
  uint64_t v11 = v6 & 0xFFFFFFFFFFFFLL;
  if ((v8 & 0x2000000000000000) != 0) {
    uint64_t v12 = HIBYTE(v8) & 0xF;
  }
  else {
    uint64_t v12 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_63:
    sub_1B2A933C4();
    sub_1B299E4D4();
    unsigned char *v32 = 5;
    swift_willThrow();
    swift_release();
LABEL_64:
    swift_deallocPartialClassInstance();
    return v0;
  }
  if ((v8 & 0x1000000000000000) != 0)
  {
    uint64_t v14 = sub_1B2A71148(v6, v8, 10);
    LOBYTE(v6) = v33;
    goto LABEL_53;
  }
  if ((v8 & 0x2000000000000000) == 0)
  {
    if ((v6 & 0x1000000000000000) != 0) {
      uint64_t v13 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v13 = (unsigned __int8 *)sub_1B2E83298();
    }
    uint64_t v14 = (uint64_t)sub_1B2A71130(v13, v11);
    LOBYTE(v6) = v15 & 1;
LABEL_53:
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      *(void *)(v0 + 24) = v14;
      return v0;
    }
    goto LABEL_63;
  }
  v34[0] = v6;
  v34[1] = v8 & 0xFFFFFFFFFFFFFFLL;
  if (v6 == 43)
  {
    if (!v10) {
      goto LABEL_69;
    }
    if (v10 == 1) {
      goto LABEL_39;
    }
    sub_1B299F518();
    if (!v19 & v18) {
      goto LABEL_39;
    }
    uint64_t v14 = v21;
    if (v20 != 2)
    {
      sub_1B299F518();
      if (!v19 & v18) {
        goto LABEL_39;
      }
      uint64_t v14 = 10 * v14 + v23;
      if (v22 != 3)
      {
        while (1)
        {
          sub_1B299E61C();
          if (!v19 & v18) {
            goto LABEL_39;
          }
          sub_1B299D718();
          if (!v19) {
            goto LABEL_39;
          }
          uint64_t v14 = v25 + v24;
          if (__OFADD__(v25, v24)) {
            goto LABEL_39;
          }
          sub_1B2A935E8();
          if (v19) {
            goto LABEL_53;
          }
        }
      }
    }
LABEL_52:
    LOBYTE(v6) = 0;
    goto LABEL_53;
  }
  if (v6 != 45)
  {
    if (!v10 || (v6 - 48) > 9u) {
      goto LABEL_39;
    }
    uint64_t v14 = (v6 - 48);
    if (v10 != 1)
    {
      sub_1B299F518();
      if (!v19 & v18) {
        goto LABEL_39;
      }
      uint64_t v14 = 10 * (v6 - 48) + v27;
      if (v26 != 2)
      {
        while (1)
        {
          sub_1B299E61C();
          if (!v19 & v18) {
            goto LABEL_39;
          }
          sub_1B299D718();
          if (!v19) {
            goto LABEL_39;
          }
          uint64_t v14 = v29 + v28;
          if (__OFADD__(v29, v28)) {
            goto LABEL_39;
          }
          sub_1B2A935E8();
          if (v19) {
            goto LABEL_53;
          }
        }
      }
    }
    goto LABEL_52;
  }
  if (v10)
  {
    if (v10 != 1)
    {
      sub_1B299F518();
      if (!(!v19 & v18))
      {
        if (v16 == 2)
        {
          LOBYTE(v6) = 0;
          uint64_t v14 = -(uint64_t)v17;
          goto LABEL_53;
        }
        if ((BYTE2(v6) - 48) <= 9u)
        {
          uint64_t v14 = -10 * v17 - (BYTE2(v6) - 48);
          if (v16 == 3) {
            goto LABEL_52;
          }
          while (1)
          {
            sub_1B299E61C();
            if (!v19 & v18) {
              break;
            }
            sub_1B299D718();
            if (!v19) {
              break;
            }
            uint64_t v14 = v31 - v30;
            if (__OFSUB__(v31, v30)) {
              break;
            }
            sub_1B2A935E8();
            if (v19) {
              goto LABEL_53;
            }
          }
        }
      }
    }
LABEL_39:
    uint64_t v14 = 0;
    LOBYTE(v6) = 1;
    goto LABEL_53;
  }
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

uint64_t sub_1B2A92708(uint64_t a1)
{
  uint64_t v2 = sub_1B2E81F48();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x1F4188790](v2);
  unsigned __int8 v27 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B2E81F08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B2E81F38();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + *(int *)(v12 + 24), v8);
  unsigned __int8 v28 = *(const char **)a1;
  char v13 = *(unsigned char *)(a1 + 16);
  swift_retain();
  uint64_t v14 = sub_1B2E81F28();
  sub_1B2E81F58();
  int v24 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v23 = v5;
  if ((v13 & 1) == 0)
  {
    uint64_t v16 = v27;
    if (v28)
    {
      uint64_t v18 = v25;
      uint64_t v17 = v26;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v16, v17) == *MEMORY[0x1E4FBD340])
      {
        char v19 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
        char v19 = "";
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      os_signpost_id_t v21 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v14, (os_signpost_type_t)v24, v21, v28, v19, v20, 2u);
      MEMORY[0x1B3EB30C0](v20, -1, -1);
      uint64_t v5 = v23;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v16 = v27;
  if ((unint64_t)v28 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v28 >> 11 != 27)
  {
    uint64_t v18 = v25;
    uint64_t v17 = v26;
    if (v28 >> 16 <= 0x10)
    {
      unsigned __int8 v28 = &v29;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1B2A92A8C()
{
  return sub_1B2A92AA8(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1B2A92AA8(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityRerankerHandler()
{
  return self;
}

uint64_t type metadata accessor for EntityRerankerHandler.EntityRerankerHandlerCache()
{
  return self;
}

uint64_t type metadata accessor for EntityRerankerHandler.EntityRerankerHandlerCache.GuardedData()
{
  return self;
}

ValueMetadata *type metadata accessor for EntityRerankerHandler.EntityRerankerHandlerCache.CachedHandler()
{
  return &type metadata for EntityRerankerHandler.EntityRerankerHandlerCache.CachedHandler;
}

uint64_t sub_1B2A92B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v113 = a2;
  uint64_t v132 = *MEMORY[0x1E4F143B8];
  v126 = (void *)MEMORY[0x1E4FBC868];
  sub_1B2B1D124(&v127, a1);
  uint64_t v4 = v127;
  uint64_t v118 = v128;
  uint64_t v5 = v130;
  uint64_t v6 = v131;
  int64_t v7 = (unint64_t)(v129 + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v9 = v8 | (v5 << 6);
  while (1)
  {
    uint64_t v17 = *(void *)(v4 + 48) + 48 * v9;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
    uint64_t v20 = *(void *)(v17 + 24);
    uint64_t v21 = *(void *)(v17 + 32);
    uint64_t v22 = *(void *)(v17 + 40);
    uint64_t v23 = *(void **)(*(void *)(v4 + 56) + 8 * v9);
    v119 = *(void **)v17;
    uint64_t v120 = v18;
    uint64_t v121 = v19;
    uint64_t v122 = v20;
    uint64_t v123 = v21;
    uint64_t v124 = v22;
    uint64_t v125 = (uint64_t)v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v24 = v23;
    sub_1B2A931FC((uint64_t)&v126, (uint64_t *)&v119);
    if (v3)
    {
      swift_release();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_67:
      uint64_t result = sub_1B2E83858();
      __break(1u);
      return result;
    }
    uint64_t v3 = 0;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
    }
    if (v10 >= v7) {
      break;
    }
    unint64_t v11 = *(void *)(v118 + 8 * v10);
    if (!v11)
    {
      if (v5 + 2 >= v7) {
        break;
      }
      sub_1B2A935F8();
      if (v11) {
        goto LABEL_14;
      }
      if (v12 + 2 >= v7) {
        break;
      }
      sub_1B2A935F8();
      if (v11) {
        goto LABEL_14;
      }
      if (v14 + 3 >= v7) {
        break;
      }
      sub_1B2A935F8();
      if (v11) {
        goto LABEL_14;
      }
      if (v15 + 4 >= v7) {
        break;
      }
      sub_1B2A935F8();
      if (v11)
      {
LABEL_14:
        int64_t v10 = v13;
      }
      else
      {
        int64_t v10 = v16 + 5;
        if (v10 >= v7) {
          break;
        }
        unint64_t v11 = *(void *)(v118 + 8 * v10);
        if (!v11)
        {
          int64_t v25 = v5 + 7;
          do
          {
            if (v25 >= v7) {
              goto LABEL_25;
            }
            unint64_t v11 = *(void *)(v118 + 8 * v25++);
          }
          while (!v11);
          int64_t v10 = v25 - 1;
        }
      }
    }
    uint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v10 << 6);
    uint64_t v5 = v10;
  }
LABEL_25:
  swift_release();
  uint64_t v26 = v126;
  unsigned __int8 v27 = (char *)sub_1B2A9DD6C();
  uint64_t v28 = *((void *)v27 + 2);
  uint64_t v114 = (uint64_t)v27;
  if (v28)
  {
    char v29 = v27 + 32;
    do
    {
      char v31 = *v29++;
      char v30 = v31;
      unint64_t v32 = sub_1B2A9DD78(v31);
      if (v26[2])
      {
        sub_1B29DB060(v32, v33, v34, v35, v36, v37, v38, v39, v113, v114, v115, v118, (uint64_t)v119, v120, v121, v122, v123, v124, v125,
          (uint64_t)v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132);
        char v41 = v40;
        swift_bridgeObjectRelease();
        if (v41) {
          goto LABEL_56;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (qword_1EB7D9600 != -1) {
        swift_once();
      }
      uint64_t v42 = qword_1EB7F3370;
      unint64_t v43 = sub_1B2A9DD78(v30);
      sub_1B29FB4D4(v43, v44, v42);
      LOBYTE(v42) = v45;
      swift_bridgeObjectRelease();
      unint64_t v46 = sub_1B2A9DD78(v30);
      uint64_t v48 = v47;
      id v49 = objc_allocWithZone(NSNumber);
      if (v42)
      {
        id v50 = objc_msgSend(v49, sel_initWithInteger_, 0);
        if (!v50) {
          goto LABEL_50;
        }
        uint64_t v116 = (uint64_t)v50;
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1B2A935C0(isUniquelyReferenced_nonNull_native, v52, v53, v54, v55, v56, v57, v58, v113, v114, v116, (uint64_t)v29, (uint64_t)v119, v120, v121, v122, v123, v124, v125,
          (uint64_t)v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132);
        sub_1B2A93604();
        if (v61) {
          goto LABEL_62;
        }
        uint64_t v62 = v59;
        char v63 = v60;
        sub_1B29A3EB4(&qword_1EB7D9890);
        uint64_t v64 = sub_1B2A93618();
        if (v64)
        {
          uint64_t v64 = sub_1B29DB060(v46, v6, v66, v67, v68, v69, v70, v71, v113, v114, v115, v118, (uint64_t)v119, v120, v121, v122, v123, v124, v125,
                  (uint64_t)v126,
                  v127,
                  v128,
                  v129,
                  v130,
                  v131,
                  v132);
          if ((v63 & 1) != (v65 & 1)) {
            goto LABEL_67;
          }
          uint64_t v62 = v64;
        }
        uint64_t v26 = v119;
        if ((v63 & 1) == 0)
        {
          sub_1B29A2854(v64, v65, v66, v67, v68, v69, v70, v71, v113, v114, v115);
          if (v61) {
            goto LABEL_64;
          }
LABEL_54:
          v26[2] = v72;
          swift_bridgeObjectRetain();
          goto LABEL_55;
        }
      }
      else
      {
        id v73 = objc_msgSend(v49, sel_initWithDouble_, 0.0);
        if (!v73)
        {
LABEL_50:
          swift_bridgeObjectRetain();
          uint64_t v100 = sub_1B29DB060(v46, v48, v94, v95, v96, v97, v98, v99, v113, v114, v115, v118, (uint64_t)v119, v120, v121, v122, v123, v124, v125,
                   (uint64_t)v126,
                   v127,
                   v128,
                   v129,
                   v130,
                   v131,
                   v132);
          char v102 = v101;
          swift_bridgeObjectRelease();
          if (v102)
          {
            swift_isUniquelyReferenced_nonNull_native();
            uint64_t v6 = v48;
            v119 = v26;
            sub_1B29A3EB4(&qword_1EB7D9890);
            sub_1B2E83398();
            uint64_t v26 = v119;
            swift_bridgeObjectRelease();
            v103 = *(void **)(v26[7] + 8 * v100);
            sub_1B2A7EA00();
            sub_1B2E833B8();

            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          goto LABEL_56;
        }
        uint64_t v117 = (uint64_t)v73;
        uint64_t v74 = swift_isUniquelyReferenced_nonNull_native();
        sub_1B2A935C0(v74, v75, v76, v77, v78, v79, v80, v81, v113, v114, v117, (uint64_t)v29, (uint64_t)v119, v120, v121, v122, v123, v124, v125,
          (uint64_t)v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132);
        sub_1B2A93604();
        if (v61) {
          goto LABEL_63;
        }
        uint64_t v62 = v82;
        char v84 = v83;
        sub_1B29A3EB4(&qword_1EB7D9890);
        uint64_t v85 = sub_1B2A93618();
        if (v85)
        {
          uint64_t v85 = sub_1B29DB060(v46, v6, v87, v88, v89, v90, v91, v92, v113, v114, v115, v118, (uint64_t)v119, v120, v121, v122, v123, v124, v125,
                  (uint64_t)v126,
                  v127,
                  v128,
                  v129,
                  v130,
                  v131,
                  v132);
          if ((v84 & 1) != (v86 & 1)) {
            goto LABEL_67;
          }
          uint64_t v62 = v85;
        }
        uint64_t v26 = v119;
        if ((v84 & 1) == 0)
        {
          sub_1B29A2854(v85, v86, v87, v88, v89, v90, v91, v92, v113, v114, v115);
          if (v61) {
            goto LABEL_65;
          }
          goto LABEL_54;
        }
      }
      uint64_t v93 = v26[7];

      *(void *)(v93 + 8 * v62) = v115;
LABEL_55:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v29 = (char *)v118;
LABEL_56:
      --v28;
    }
    while (v28);
  }
  swift_bridgeObjectRelease();
  v104 = self;
  sub_1B2A7EA00();
  swift_bridgeObjectRetain();
  v105 = (void *)sub_1B2E820D8();
  swift_bridgeObjectRelease();
  v119 = 0;
  id v106 = objc_msgSend(v104, sel_dataWithJSONObject_options_error_, v105, 0, &v119);

  v107 = v119;
  if (v106)
  {
    uint64_t v108 = sub_1B2E80588();
    unint64_t v110 = v109;

    sub_1B2E7FF98();
    swift_allocObject();
    sub_1B2E7FF88();
    sub_1B2A93378();
    sub_1B2E7FF78();
    swift_release();
    sub_1B29C34DC(v108, v110);
  }
  else
  {
    v111 = v107;
    sub_1B2E80388();

    swift_willThrow();
  }
  return swift_bridgeObjectRelease();
}

void sub_1B2A931FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = (void *)a2[6];
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  if (qword_1EB7D9600 != -1) {
    swift_once();
  }
  sub_1B29FB4D4(v13, v14, qword_1EB7F3370);
  if (v3)
  {
    id v4 = objc_msgSend(v2, sel_int64Value);
    id v5 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v4);
    if (v5)
    {
LABEL_5:
      sub_1B2B2A27C((uint64_t)v5, v13, v14, v6, v7, v8, v9, v10, v13, v14);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    objc_msgSend(v2, sel_doubleValue);
    id v5 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v11);
    if (v5) {
      goto LABEL_5;
    }
  }
  uint64_t v12 = (void *)sub_1B2B29B40(v13, v14);
  swift_bridgeObjectRelease();
}

unint64_t sub_1B2A93378()
{
  unint64_t result = qword_1EB7D9608;
  if (!qword_1EB7D9608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9608);
  }
  return result;
}

unint64_t sub_1B2A933C4()
{
  unint64_t result = qword_1E9C3C4C8;
  if (!qword_1E9C3C4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C4C8);
  }
  return result;
}

uint64_t sub_1B2A93410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C37BF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2A93478(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogSignpost();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B2A934D4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B2A934FC()
{
  unint64_t result = qword_1EB7E24E8;
  if (!qword_1EB7E24E8)
  {
    type metadata accessor for MLModelMetadataKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E24E8);
  }
  return result;
}

void *sub_1B2A9354C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, void *a13, unint64_t a14)
{
  STACK[0x848] = 0;
  LOBYTE(STACK[0x850]) = 1;
  STACK[0x858] = v15;
  LOBYTE(STACK[0x860]) = a12 & 1;
  STACK[0x868] = a14;
  return memcpy(a13, &STACK[0x408], 0x468uLL);
}

uint64_t sub_1B2A93588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  STACK[0x428] = v9;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  LOBYTE(STACK[0x470]) = 0;
  return sub_1B2A93410((uint64_t)va, (uint64_t)&STACK[0x478]);
}

uint64_t sub_1B2A935C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_1B29DB060(v26, v28, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, v27, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B2A93618()
{
  return sub_1B2E83398();
}

void *sub_1B2A93638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(__dst, a7);
  return memcpy(__dst, &STACK[0x880], 0x3C8uLL);
}

unsigned char *storeEnumTagSinglePayload for ECRModelError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2A93724);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ECRModelError()
{
  return &type metadata for ECRModelError;
}

unint64_t sub_1B2A93760()
{
  unint64_t result = qword_1E9C3C4D0;
  if (!qword_1E9C3C4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C4D0);
  }
  return result;
}

IntelligencePlatform::EntityResolutionMode_optional __swiftcall EntityResolutionMode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static EntityResolutionMode.allCases.getter()
{
  return &unk_1F0AB9F50;
}

uint64_t EntityResolutionMode.rawValue.getter()
{
  uint64_t result = 0x6E6574614C776F6CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6465636E616C6162;
      break;
    case 2:
      uint64_t result = 0x6C61755168676968;
      break;
    case 3:
      uint64_t v2 = 0x786966657270;
      goto LABEL_8;
    case 4:
      uint64_t result = 0xD000000000000014;
      break;
    case 5:
      uint64_t result = 0xD000000000000010;
      break;
    case 6:
      uint64_t v2 = 0x646972627968;
LABEL_8:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2A93910()
{
  return sub_1B29AC08C();
}

uint64_t sub_1B2A9391C()
{
  return sub_1B29AE83C(*v0);
}

uint64_t sub_1B2A93924()
{
  return sub_1B2AA5684();
}

uint64_t sub_1B2A9392C()
{
  return sub_1B29F9398();
}

IntelligencePlatform::EntityResolutionMode_optional sub_1B2A93934(Swift::String *a1)
{
  return EntityResolutionMode.init(rawValue:)(*a1);
}

uint64_t sub_1B2A93940@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityResolutionMode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B2A93968(void *a1@<X8>)
{
  *a1 = &unk_1F0AB9F50;
}

uint64_t sub_1B2A93978()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2A939D8()
{
  return sub_1B2E82788();
}

uint64_t static EntityResolutionConfig.fromResource(configName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1EB7E69E0);
  MEMORY[0x1F4188790](v6 - 8);
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_1B2E80498();
  sub_1B299D278();
  uint64_t v12 = v11;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v56 = (uint64_t)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v54 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v54 - v19;
  if (qword_1EB7E6280 != -1) {
    swift_once();
  }
  uint64_t v57 = a3;
  id v21 = sub_1B2A97F20(a1, a2, 1852797802, 0xE400000000000000, 0xD000000000000019, 0x80000001B2E99110, (void *)qword_1EB7E6340);
  if (v21)
  {
    uint64_t v22 = v21;
    sub_1B2E80448();

    uint64_t v23 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
    v23(v9, v18, v10);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v9, 0, 1, v10);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, 1, v10) != 1)
    {
      v23((uint64_t)v20, (char *)v9, v10);
      sub_1B2A94000((uint64_t)v20, (uint64_t)&v59);
      sub_1B2A844A0((uint64_t)&v59, (uint64_t)v66, &qword_1EB7D88B8);
      sub_1B2A844A0((uint64_t)v66, (uint64_t)v67, &qword_1EB7D88B8);
      if (sub_1B2A97FC8((uint64_t)v67) == 1)
      {
        uint64_t v24 = v57;
        if (qword_1EB7E3A20 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_1B2E81FB8();
        sub_1B29A4B98(v25, (uint64_t)qword_1EB7E4AD8);
        uint64_t v26 = v56;
        (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v56, v20, v10);
        uint64_t v27 = sub_1B2E81F98();
        os_log_type_t v28 = sub_1B2E82DB8();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc();
          unint64_t v55 = swift_slowAlloc();
          uint64_t v59 = v55;
          *(_DWORD *)uint64_t v29 = 136315138;
          uint64_t v54 = v29 + 4;
          sub_1B29C348C();
          uint64_t v30 = sub_1B2E83748();
          sub_1B29BF6BC(v30, v31, (uint64_t)&v59, v32, v33, v34, v35, v36, (uint64_t)v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64,
            v65);
          uint64_t v58 = v37;
          sub_1B2E82FB8();
          swift_bridgeObjectRelease();
          uint64_t v38 = *(void (**)(void))(v12 + 8);
          uint64_t v24 = v57;
          sub_1B2A99BA4();
          v38();
          _os_log_impl(&dword_1B2996000, v27, v28, "Failed to load config data from %s", v29, 0xCu);
          swift_arrayDestroy();
          sub_1B299B750();
          sub_1B299B750();
        }
        else
        {

          uint64_t v38 = *(void (**)(void))(v12 + 8);
          ((void (*)(uint64_t, uint64_t))v38)(v26, v10);
        }
        sub_1B2A99BA4();
        v38();
        sub_1B2A97FC0(&v59);
        id v50 = &v59;
        uint64_t v51 = v24;
      }
      else
      {
        sub_1B2A99BA4();
        v53();
        id v50 = v67;
        uint64_t v51 = v57;
      }
      return sub_1B2A844A0((uint64_t)v50, v51, (uint64_t *)&unk_1EB7E2878);
    }
  }
  else
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v9, 1, 1, v10);
  }
  sub_1B29E9E40(v9);
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_1B2E81FB8();
  sub_1B29A4B98(v39, (uint64_t)qword_1EB7E4AD8);
  swift_bridgeObjectRetain_n();
  char v40 = sub_1B2E81F98();
  os_log_type_t v41 = sub_1B2E82DB8();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    v67[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 136315138;
    swift_bridgeObjectRetain();
    sub_1B29BF6BC(a1, a2, (uint64_t)v67, v43, v44, v45, v46, v47, (uint64_t)v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64,
      v65);
    v66[0] = v48;
    sub_1B2E82FB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B2996000, v40, v41, "Failed to get the correct URL for config file %s", v42, 0xCu);
    swift_arrayDestroy();
    sub_1B299B750();
    sub_1B299B750();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v49 = v57;
  sub_1B2A97FC0(v67);
  id v50 = v67;
  uint64_t v51 = v49;
  return sub_1B2A844A0((uint64_t)v50, v51, (uint64_t *)&unk_1EB7E2878);
}

uint64_t sub_1B2A94000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = sub_1B2E80498();
  uint64_t v42 = *(NSObject **)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v41 = (unint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B2E823C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E82338();
  sub_1B2E823B8();
  uint64_t v9 = sub_1B2E82388();
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v11 >> 60 == 15)
  {
    unint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    unint64_t v46 = 0xD00000000000001ELL;
    unint64_t v47 = 0x80000001B2E99230;
    sub_1B29C348C();
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    unint64_t v13 = v46;
    unint64_t v14 = v47;
    sub_1B2A99460();
    uint64_t v15 = (void *)swift_allocError();
    *uint64_t v16 = v13;
    v16[1] = v14;
    swift_willThrow();
    unint64_t v18 = v41;
    uint64_t v17 = v42;
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1B2E81FB8();
    sub_1B29A4B98(v19, (uint64_t)qword_1EB7E5AC0);
    ((void (*)(unint64_t, uint64_t, uint64_t))v17[2].isa)(v18, a1, v3);
    id v20 = v15;
    id v21 = v15;
    uint64_t v22 = sub_1B2E81F98();
    os_log_type_t v23 = sub_1B2E82DC8();
    uint64_t v42 = v22;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      char v40 = (void *)swift_slowAlloc();
      unint64_t v41 = swift_slowAlloc();
      unint64_t v46 = v41;
      *(_DWORD *)uint64_t v24 = 136315394;
      sub_1B29C348C();
      uint64_t v25 = sub_1B2E83748();
      sub_1B29BF6BC(v25, v26, (uint64_t)&v46, v27, v28, v29, v30, v31, (uint64_t)v40, v41, (uint64_t)v42, v43, v44[0], v44[1], v44[2], v44[3], v44[4], v44[5], v44[6],
        v44[7]);
      v45[0] = v32;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      ((void (*)(unint64_t, uint64_t))v17[1].isa)(v18, v3);
      *(_WORD *)(v24 + 12) = 2112;
      id v33 = v15;
      uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
      v45[0] = v34;
      sub_1B2E82FB8();
      uint64_t v35 = v40;
      *char v40 = v34;

      uint64_t v36 = v42;
      _os_log_impl(&dword_1B2996000, v42, v23, "Failed to load data from %s with error %@", (uint8_t *)v24, 0x16u);
      sub_1B29A3EB4(&qword_1EB7E3110);
      swift_arrayDestroy();
      MEMORY[0x1B3EB30C0](v35, -1, -1);
      unint64_t v37 = v41;
      swift_arrayDestroy();
      MEMORY[0x1B3EB30C0](v37, -1, -1);
      MEMORY[0x1B3EB30C0](v24, -1, -1);
    }
    else
    {

      ((void (*)(unint64_t, uint64_t))v17[1].isa)(v18, v3);
    }
    sub_1B2A994F8((uint64_t)&v46);
    uint64_t v39 = &v46;
  }
  else
  {
    char v40 = (void *)MEMORY[0x1B3EB2480](v12);
    sub_1B2E7FF98();
    swift_allocObject();
    sub_1B2E7FF88();
    sub_1B29A3EB4((uint64_t *)&unk_1EB7E2878);
    sub_1B2A99528(&qword_1EB7E2FE0, (uint64_t *)&unk_1EB7E2878, (void (*)(void))sub_1B2A99594);
    sub_1B2E7FF78();
    swift_release();
    sub_1B29F869C(v9, v11);
    sub_1B2A844A0((uint64_t)&v46, (uint64_t)v44, (uint64_t *)&unk_1EB7E2878);
    sub_1B2A844A0((uint64_t)v44, (uint64_t)v45, (uint64_t *)&unk_1EB7E2878);
    nullsub_1(v45);
    uint64_t v39 = v45;
  }
  return sub_1B2A844A0((uint64_t)v39, v43, &qword_1EB7D88B8);
}

void sub_1B2A945FC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = sub_1B2E80498();
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v41 = v8 - v7;
  sub_1B2E823C8();
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B29A0658();
  sub_1B2E82338();
  uint64_t v38 = v5;
  sub_1B2E823B8();
  uint64_t v10 = sub_1B2E82388();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  sub_1B2A99BA4();
  uint64_t v14 = v13();
  if (v12 >> 60 == 15)
  {
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    uint64_t v44 = 0xD00000000000001ELL;
    uint64_t v45 = 0x80000001B2E99230;
    sub_1B29C348C();
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2A99460();
    uint64_t v15 = (void *)swift_allocError();
    *uint64_t v16 = 0xD00000000000001ELL;
    v16[1] = 0x80000001B2E99230;
    swift_willThrow();
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1B2E81FB8();
    sub_1B29A4B98(v18, (uint64_t)qword_1EB7E5AC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v41, a1, v3);
    id v19 = v15;
    id v20 = v15;
    id v21 = sub_1B2E81F98();
    os_log_type_t v22 = sub_1B2E82DC8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      unint64_t v39 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v44 = v42;
      *(_DWORD *)uint64_t v23 = 136315394;
      sub_1B29C348C();
      uint64_t v24 = sub_1B2E83748();
      sub_1B29BF6BC(v24, v25, (uint64_t)&v44, v26, v27, v28, v29, v30, v37, v39, v42, (uint64_t)v43, v44, v45, v46, v47, v48, v49, v50,
        v51);
      uint64_t v46 = v31;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      sub_1B2A99BB0();
      v32();
      *(_WORD *)(v23 + 12) = 2112;
      id v33 = v15;
      uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v46 = v34;
      sub_1B2E82FB8();
      *char v40 = v34;

      _os_log_impl(&dword_1B2996000, v21, v22, "Failed to load data from %s with error %@", (uint8_t *)v23, 0x16u);
      sub_1B29A3EB4(&qword_1EB7E3110);
      swift_arrayDestroy();
      sub_1B299B750();
      swift_arrayDestroy();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {

      sub_1B2A99BB0();
      v35();
    }
    uint64_t v36 = 1;
  }
  else
  {
    uint64_t v17 = (void *)MEMORY[0x1B3EB2480](v14);
    sub_1B2E7FF98();
    swift_allocObject();
    sub_1B2E7FF88();
    sub_1B29A3EB4(&qword_1E9C3C588);
    sub_1B2A99528(&qword_1E9C3C590, &qword_1E9C3C588, (void (*)(void))sub_1B2A994AC);
    sub_1B2E7FF78();
    swift_release();
    sub_1B29F869C(v10, v12);
    uint64_t v36 = v44;
  }
  *uint64_t v43 = v36;
}

void *sub_1B2A94B14()
{
  uint64_t v0 = (void *)sub_1B2E82148();
  if (qword_1F0AB9F60)
  {
    uint64_t v1 = qword_1F0AB9F60 - 1;
    uint64_t v2 = &byte_1F0AB9F70;
    uint64_t v37 = (uint64_t)"semistructuredSearch";
    uint64_t v38 = (uint64_t)"ality";
    while (1)
    {
      int v3 = *v2++;
      unint64_t v4 = 0xEA00000000007963;
      unint64_t v5 = 0x6E6574614C776F6CLL;
      switch(v3)
      {
        case 1:
          unint64_t v4 = 0xE800000000000000;
          unint64_t v5 = 0x6465636E616C6162;
          break;
        case 2:
          unint64_t v4 = 0xEB00000000797469;
          unint64_t v5 = 0x6C61755168676968;
          break;
        case 3:
          uint64_t v6 = 0x786966657270;
          goto LABEL_10;
        case 4:
          unint64_t v5 = 0xD000000000000014;
          unint64_t v4 = v38 | 0x8000000000000000;
          break;
        case 5:
          unint64_t v4 = v37 | 0x8000000000000000;
          unint64_t v5 = 0xD000000000000010;
          break;
        case 6:
          uint64_t v6 = 0x646972627968;
LABEL_10:
          unint64_t v5 = v6 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
          unint64_t v4 = 0xEC00000068637261;
          break;
        default:
          break;
      }
      static EntityResolutionConfig.fromResource(configName:)(v5, v4, (uint64_t)__src);
      sub_1B2A844A0((uint64_t)__src, (uint64_t)v42, (uint64_t *)&unk_1EB7E2878);
      sub_1B2A844A0((uint64_t)v42, (uint64_t)v43, (uint64_t *)&unk_1EB7E2878);
      if (sub_1B2A99448((uint64_t)v43) == 1) {
        break;
      }
      swift_isUniquelyReferenced_nonNull_native();
      char v40 = v0;
      uint64_t v13 = sub_1B29DB060(v5, v4, v7, v8, v9, v10, v11, v12, v37, v38, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8],
              __dst[9],
              __dst[10],
              __dst[11],
              __dst[12],
              __dst[13],
              __dst[14],
              __dst[15]);
      uint64_t v15 = v0[2];
      BOOL v16 = (v14 & 1) == 0;
      uint64_t v0 = (void *)(v15 + v16);
      if (__OFADD__(v15, v16))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      unint64_t v17 = v13;
      char v18 = v14;
      sub_1B29A3EB4(&qword_1EB7D7668);
      if (sub_1B2E83398())
      {
        uint64_t v25 = sub_1B29DB060(v5, v4, v19, v20, v21, v22, v23, v24, v37, v38, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8],
                __dst[9],
                __dst[10],
                __dst[11],
                __dst[12],
                __dst[13],
                __dst[14],
                __dst[15]);
        if ((v18 & 1) != (v26 & 1))
        {
          sub_1B2E83858();
          __break(1u);
          JUMPOUT(0x1B2A94F00);
        }
        unint64_t v17 = v25;
      }
      sub_1B2A844A0((uint64_t)v42, (uint64_t)__src, (uint64_t *)&unk_1EB7E2878);
      if (v18)
      {
        uint64_t v0 = v40;
        uint64_t v27 = (void *)(v40[7] + 144 * v17);
        memcpy(__dst, v27, 0x8DuLL);
        sub_1B2A982E4((uint64_t)__dst);
        memcpy(v27, __src, 0x8DuLL);
      }
      else
      {
        uint64_t v0 = v40;
        v40[(v17 >> 6) + 8] |= 1 << v17;
        uint64_t v28 = (unint64_t *)(v0[6] + 16 * v17);
        *uint64_t v28 = v5;
        v28[1] = v4;
        memcpy((void *)(v0[7] + 144 * v17), __src, 0x8DuLL);
        uint64_t v29 = v0[2];
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_29;
        }
        v0[2] = v31;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v1) {
        goto LABEL_22;
      }
      --v1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB7E3A20 == -1) {
      goto LABEL_24;
    }
LABEL_30:
    swift_once();
LABEL_24:
    uint64_t v32 = sub_1B2E81FB8();
    sub_1B29A4B98(v32, (uint64_t)qword_1EB7E4AD8);
    id v33 = sub_1B2E81F98();
    os_log_type_t v34 = sub_1B2E82DB8();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_1B2996000, v33, v34, "Failed to load config from resources. Using the dynamically built config instead.", v35, 2u);
      sub_1B299B750();
    }
  }
  else
  {
LABEL_22:
    swift_bridgeObjectRelease();
  }
  return v0;
}

uint64_t sub_1B2A94F1C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B2A94F4C()
{
  sub_1B2A94F1C();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2A94F80(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001B2E99190 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001B2E991B0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001B2E991D0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001B2E991F0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    BOOL v5 = a1 == 0x72656B6E61726572 && a2 == 0xEE006769666E6F43;
    if (v5 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0x6143656C62616E65 && a2 == 0xEB00000000656863)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      char v7 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v7) {
        return 5;
      }
      else {
        return 6;
      }
    }
  }
}

unint64_t sub_1B2A95218(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0x72656B6E61726572;
      break;
    case 5:
      unint64_t result = 0x6143656C62616E65;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2A952EC()
{
  return sub_1B2A95218(*v0);
}

uint64_t sub_1B2A952F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2A94F80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2A9531C(uint64_t a1)
{
  unint64_t v2 = sub_1B2A97FEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2A95358(uint64_t a1)
{
  unint64_t v2 = sub_1B2A97FEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void EntityResolutionConfig.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3C4D8);
  sub_1B299D278();
  uint64_t v9 = v4;
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2A97FEC();
  sub_1B2E83A38();
  sub_1B2A98038();
  sub_1B2A99C84();
  sub_1B2E836D8();
  if (!v0)
  {
    sub_1B2A99C84();
    sub_1B2E836D8();
    sub_1B2A98084();
    sub_1B29A07B4();
    sub_1B2A980D0();
    sub_1B29A07B4();
    sub_1B2A9811C();
    sub_1B29A07B4();
    sub_1B2E83698();
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v3);
  sub_1B29998C8();
}

void EntityResolutionConfig.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_1B29A3EB4(&qword_1EB7E3158);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B29A0658();
  uint64_t v40 = (uint64_t)v2;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2A97FEC();
  sub_1B2E83A18();
  if (v0)
  {
    char v7 = 0;
  }
  else
  {
    unint64_t v39 = v4;
    LOBYTE(v41[0]) = 0;
    sub_1B2A98168();
    sub_1B2A99C54();
    sub_1B2A99C3C();
    uint64_t v36 = v42;
    uint64_t v37 = v44;
    uint64_t v38 = v46;
    char v10 = v47;
    char v70 = v43;
    char v69 = v45;
    char v68 = v47;
    LOBYTE(v41[0]) = 1;
    swift_bridgeObjectRetain();
    sub_1B2A99C54();
    sub_1B2A99C3C();
    if (!v5)
    {
      char v30 = v45;
      char v31 = v43;
      uint64_t v35 = v48;
      uint64_t v32 = v42;
      uint64_t v33 = v44;
      uint64_t v34 = v46;
      uint64_t v12 = v48;
      char v67 = v43;
      char v66 = v45;
      char v65 = v47;
      LOBYTE(v41[0]) = 2;
      unint64_t v13 = sub_1B2A981B4();
      swift_bridgeObjectRetain();
      sub_1B2A99C54();
      sub_1B2A99C3C();
      if (v13)
      {
        sub_1B2A99BA4();
        v14();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v9 = 0;
        uint64_t v15 = v40;
      }
      else
      {
        char v26 = v47;
        char v27 = v45;
        char v28 = v43;
        char v29 = v42;
        LOBYTE(v41[0]) = 3;
        sub_1B2A98200();
        sub_1B2A99C54();
        sub_1B2A99C3C();
        uint64_t v16 = v42;
        uint64_t v24 = v43;
        char v17 = v44;
        char v25 = BYTE1(v44);
        char v64 = v44;
        LOBYTE(v41[0]) = 4;
        unint64_t v18 = sub_1B2A9824C();
        swift_bridgeObjectRetain();
        sub_1B2A99C54();
        sub_1B2A99C3C();
        if (!v18)
        {
          char v23 = BYTE2(v44);
          char v20 = v42;
          char v21 = sub_1B2E83578();
          sub_1B2A99BA4();
          v22();
          v41[0] = v36;
          LOBYTE(v41[1]) = v31;
          v41[2] = v37;
          LOBYTE(v41[3]) = v30;
          v41[4] = v38;
          LOBYTE(v41[5]) = v10;
          v41[6] = v35;
          v41[7] = v32;
          LOBYTE(v41[8]) = v28;
          v41[9] = v33;
          LOBYTE(v41[10]) = v27;
          v41[11] = v34;
          LOBYTE(v41[12]) = v26;
          v41[13] = v12;
          LOBYTE(v41[14]) = v29;
          v41[15] = v16;
          v41[16] = v24;
          LOBYTE(v41[17]) = v17;
          BYTE1(v41[17]) = v25;
          BYTE2(v41[17]) = v23;
          BYTE3(v41[17]) = v20;
          BYTE4(v41[17]) = v21 & 1;
          sub_1B2A98298((uint64_t)v41);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          memcpy(v39, v41, 0x8DuLL);
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v40);
          uint64_t v42 = v36;
          LOBYTE(v43) = v70;
          uint64_t v44 = v37;
          char v45 = v69;
          uint64_t v46 = v38;
          char v47 = v68;
          uint64_t v48 = v35;
          uint64_t v49 = v32;
          char v50 = v67;
          uint64_t v51 = v33;
          char v52 = v66;
          uint64_t v53 = v34;
          char v54 = v65;
          uint64_t v55 = v12;
          char v56 = v29;
          uint64_t v57 = v16;
          uint64_t v58 = v24;
          char v59 = v64;
          char v60 = v25;
          char v61 = v23;
          char v62 = v20;
          char v63 = v21 & 1;
          sub_1B2A982E4((uint64_t)&v42);
          goto LABEL_11;
        }
        sub_1B2A99BA4();
        v19();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v9 = 1;
        uint64_t v15 = v40;
      }
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v15);
      int v8 = 1;
      goto LABEL_6;
    }
    sub_1B2A99BA4();
    v11();
    swift_bridgeObjectRelease();
    char v7 = 1;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v40);
  if ((v7 & 1) == 0) {
    goto LABEL_11;
  }
  int v8 = 0;
  int v9 = 0;
LABEL_6:
  swift_bridgeObjectRelease();
  if (v8)
  {
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v9) {
LABEL_10:
  }
    swift_bridgeObjectRelease();
LABEL_11:
  sub_1B29998C8();
}

uint64_t sub_1B2A95C68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x797265755178616DLL && a2 == 0xEC000000657A6953;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B2E99250 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001B2E99270 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1B2A95E1C(char a1)
{
  unint64_t result = 0x797265755178616DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 1701080941;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2A95EBC()
{
  sub_1B29A3EB4(&qword_1E9C3C520);
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B29A0498();
  sub_1B29A18FC();
  sub_1B2A98FD4();
  sub_1B299E584();
  sub_1B2A99C20();
  if (!v0)
  {
    sub_1B2A99C20();
    sub_1B2A99C20();
    sub_1B29A3EB4(&qword_1EB7E27C0);
    sub_1B2A99528(&qword_1E9C3C528, &qword_1EB7E27C0, (void (*)(void))sub_1B2A99020);
    sub_1B2E836D8();
  }
  sub_1B2A99BB0();
  return v2();
}

void sub_1B2A96058()
{
  sub_1B299F300();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1EB7E3150);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2A98FD4();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_1B2A99BE0();
    char v8 = v7;
    uint64_t v9 = sub_1B2A99BE0();
    char v19 = v10;
    uint64_t v17 = v9;
    uint64_t v11 = sub_1B2A99BE0();
    char v15 = v12;
    uint64_t v16 = v11;
    sub_1B29A3EB4(&qword_1EB7E27C0);
    sub_1B2A99528(&qword_1EB7E30F8, &qword_1EB7E27C0, (void (*)(void))sub_1B2A99280);
    sub_1B2E835B8();
    uint64_t v13 = sub_1B299B8A4();
    v14(v13);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    *(void *)uint64_t v4 = v6;
    *(unsigned char *)(v4 + 8) = v8 & 1;
    *(void *)(v4 + 16) = v17;
    *(unsigned char *)(v4 + 24) = v19 & 1;
    *(void *)(v4 + 32) = v16;
    *(unsigned char *)(v4 + 40) = v15 & 1;
    *(void *)(v4 + 48) = v18;
  }
  sub_1B29998C8();
}

uint64_t sub_1B2A96274()
{
  sub_1B29A3EB4(&qword_1E9C3C538);
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B29A18FC();
  sub_1B2A9906C();
  sub_1B299E584();
  sub_1B2A990B8();
  sub_1B299B920();
  sub_1B2A99BB0();
  return v1();
}

unint64_t sub_1B2A96360(void *a1)
{
  sub_1B29A3EB4(&qword_1EB7E3160);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  unint64_t v4 = (unint64_t)sub_1B29AEC7C(a1, a1[3]);
  sub_1B2A9906C();
  sub_1B2A99BFC();
  if (v1)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1B2A992CC();
    sub_1B2A99C60();
    sub_1B2A99BB0();
    v5();
    unint64_t v4 = v7;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  return v4;
}

uint64_t sub_1B2A96478(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x687469726F676C61 && a2 == 0xEA0000000000736DLL;
  if (v3 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6F4D686372616573 && a2 == 0xEA00000000006564;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001B2E97CF0 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000001B2E97D10)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v7 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v7) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_1B2A9662C(char a1)
{
  unint64_t result = 0x687469726F676C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F4D686372616573;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1B2A966D8()
{
  sub_1B299F300();
  BOOL v3 = v2;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3C548);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2A99104();
  sub_1B2E83A38();
  sub_1B29A3EB4(&qword_1EB7E3100);
  sub_1B2A99528(&qword_1E9C3C550, &qword_1EB7E3100, (void (*)(void))sub_1B2A99150);
  sub_1B2E836D8();
  if (!v0)
  {
    sub_1B2A9919C();
    sub_1B2E836D8();
    sub_1B2E83698();
    sub_1B2E83698();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1B29998C8();
}

void sub_1B2A968DC()
{
  sub_1B299F300();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1EB7E3168);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2A99104();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    sub_1B29A3EB4(&qword_1EB7E3100);
    sub_1B2A99528(&qword_1EB7E3108, &qword_1EB7E3100, (void (*)(void))sub_1B2A99318);
    sub_1B2E835B8();
    sub_1B2A99364();
    swift_bridgeObjectRetain();
    sub_1B2E835B8();
    char v9 = sub_1B2A99BBC(2);
    char v6 = sub_1B2A99BBC(3);
    uint64_t v7 = sub_1B299B8A4();
    v8(v7);
    *(void *)uint64_t v4 = v10;
    *(void *)(v4 + 8) = v10;
    *(unsigned char *)(v4 + 16) = v11;
    *(unsigned char *)(v4 + 17) = v9 & 1;
    *(unsigned char *)(v4 + 18) = v6 & 1;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

uint64_t sub_1B2A96B20(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x687469726F676C61 && a2 == 0xE90000000000006DLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2A96BB4()
{
  return 0x687469726F676C61;
}

uint64_t sub_1B2A96BD0()
{
  sub_1B29A3EB4(&qword_1E9C3C568);
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B29A18FC();
  sub_1B2A991E8();
  sub_1B299E584();
  sub_1B2A99234();
  sub_1B299B920();
  sub_1B2A99BB0();
  return v1();
}

unint64_t sub_1B2A96CBC(void *a1)
{
  sub_1B29A3EB4(&qword_1EB7E3148);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  unint64_t v4 = (unint64_t)sub_1B29AEC7C(a1, a1[3]);
  sub_1B2A991E8();
  sub_1B2A99BFC();
  if (v1)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1B2A993B0();
    sub_1B2A99C60();
    sub_1B2A99BB0();
    v5();
    unint64_t v4 = v7;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  return v4;
}

void sub_1B2A96DD4()
{
}

void sub_1B2A96DEC()
{
}

unint64_t sub_1B2A96E04()
{
  return sub_1B2A95E1C(*v0);
}

uint64_t sub_1B2A96E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2A95C68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2A96E34(uint64_t a1)
{
  unint64_t v2 = sub_1B2A98FD4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2A96E70(uint64_t a1)
{
  unint64_t v2 = sub_1B2A98FD4();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B2A96EAC@<D0>(uint64_t a1@<X8>)
{
  sub_1B2A96058();
  if (!v1)
  {
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    double result = *(double *)&v6;
    *(_OWORD *)(a1 + 32) = v6;
    *(void *)(a1 + 48) = v7;
  }
  return result;
}

uint64_t sub_1B2A96EFC()
{
  return sub_1B2A95EBC();
}

uint64_t sub_1B2A96F18(uint64_t a1)
{
  unint64_t v2 = sub_1B2A9906C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2A96F54(uint64_t a1)
{
  unint64_t v2 = sub_1B2A9906C();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1B2A96F90@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1B2A96360(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B2A96FBC()
{
  return sub_1B2A96274();
}

unint64_t sub_1B2A96FD8()
{
  return sub_1B2A9662C(*v0);
}

uint64_t sub_1B2A96FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2A96478(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2A97008(uint64_t a1)
{
  unint64_t v2 = sub_1B2A99104();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2A97044(uint64_t a1)
{
  unint64_t v2 = sub_1B2A99104();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B2A97080()
{
}

void sub_1B2A97098()
{
}

uint64_t sub_1B2A970B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2A96B20(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2A970DC(uint64_t a1)
{
  unint64_t v2 = sub_1B2A991E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2A97118(uint64_t a1)
{
  unint64_t v2 = sub_1B2A991E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1B2A97154@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1B2A96CBC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B2A97180()
{
  return sub_1B2A96BD0();
}

uint64_t sub_1B2A9719C(uint64_t a1, uint64_t a2)
{
  sub_1B2AA7C14();
  if ((v4 & 1) == 0) {
    return 0;
  }
  char v5 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v5 = 1;
    }
    if (v5) {
      return 0;
    }
  }
  char v6 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      char v6 = 1;
    }
    if (v6) {
      return 0;
    }
  }
  uint64_t result = *(unsigned __int8 *)(a2 + 40);
  if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
    return (*(void *)(a1 + 32) == *(void *)(a2 + 32)) & ~result;
  }
  return result;
}

uint64_t sub_1B2A9724C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B2A97248(*a1, *a2);
}

uint64_t sub_1B2A97258(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1B2DDC70C(v6);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1B2DDC70C(v8);
  BOOL v10 = sub_1B2A97308(v9, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v10) {
    return 0;
  }
  if ((v3 & 1) == 0)
  {
    if ((v5 & 1) == 0) {
      return *(float *)&v2 == *(float *)&v4;
    }
    return 0;
  }
  if (v2 == v4) {
    return v5;
  }
  else {
    return 0;
  }
}

BOOL sub_1B2A97308(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  uint64_t v32 = a1 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  if (v8 < 64) {
    uint64_t v5 = ~(-1 << v8);
  }
  unint64_t v9 = v5 & *(void *)(a1 + 56);
  int64_t v10 = (unint64_t)(v8 + 63) >> 6;
  int64_t v34 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  int64_t v12 = 0;
  while (1)
  {
    if (!v7)
    {
      int64_t v16 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
        JUMPOUT(0x1B2A97998);
      }
      if (v16 >= v34)
      {
LABEL_29:
        unint64_t v7 = 0;
        unsigned int v15 = 248;
        goto LABEL_30;
      }
      unint64_t v17 = *(void *)(v33 + 8 * v16);
      if (v17) {
        goto LABEL_13;
      }
      v11 += 2;
      if (v16 + 1 >= v34)
      {
        unint64_t v7 = 0;
        unsigned int v15 = 248;
        int64_t v11 = v16;
        goto LABEL_30;
      }
      unint64_t v17 = *(void *)(v33 + 8 * v11);
      if (v17) {
        goto LABEL_16;
      }
      int64_t v18 = v16 + 2;
      if (v16 + 2 >= v34) {
        goto LABEL_29;
      }
      unint64_t v17 = *(void *)(v33 + 8 * v18);
      if (!v17)
      {
        int64_t v11 = v16 + 3;
        if (v16 + 3 >= v34)
        {
          unint64_t v7 = 0;
          unsigned int v15 = 248;
          int64_t v11 = v16 + 2;
          goto LABEL_30;
        }
        unint64_t v17 = *(void *)(v33 + 8 * v11);
        if (v17)
        {
LABEL_16:
          int64_t v16 = v11;
LABEL_13:
          unint64_t v7 = (v17 - 1) & v17;
          unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
          int64_t v11 = v16;
          goto LABEL_9;
        }
        int64_t v18 = v16 + 4;
        if (v16 + 4 >= v34) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v33 + 8 * v18);
        if (!v17)
        {
          while (1)
          {
            int64_t v16 = v18 + 1;
            if (__OFADD__(v18, 1)) {
              goto LABEL_101;
            }
            if (v16 >= v34) {
              break;
            }
            unint64_t v17 = *(void *)(v33 + 8 * v16);
            ++v18;
            if (v17) {
              goto LABEL_13;
            }
          }
          unint64_t v7 = 0;
          unsigned int v15 = 248;
          int64_t v11 = v34 - 1;
          goto LABEL_30;
        }
      }
      int64_t v16 = v18;
      goto LABEL_13;
    }
    unint64_t v13 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v14 = v13 | (v11 << 6);
LABEL_9:
    unsigned int v15 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v14);
LABEL_30:
    if (v9)
    {
      unint64_t v19 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v20 = v19 | (v12 << 6);
LABEL_32:
      unsigned int v21 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v20);
      goto LABEL_53;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_100;
    }
    if (v22 >= v10) {
      goto LABEL_52;
    }
    unint64_t v23 = *(void *)(v32 + 8 * v22);
    if (v23) {
      goto LABEL_36;
    }
    v12 += 2;
    if (v22 + 1 >= v10)
    {
      unint64_t v9 = 0;
      unsigned int v21 = 248;
      int64_t v12 = v22;
      goto LABEL_53;
    }
    unint64_t v23 = *(void *)(v32 + 8 * v12);
    if (v23) {
      goto LABEL_39;
    }
    int64_t v24 = v22 + 2;
    if (v22 + 2 >= v10)
    {
LABEL_52:
      unint64_t v9 = 0;
      unsigned int v21 = 248;
      goto LABEL_53;
    }
    unint64_t v23 = *(void *)(v32 + 8 * v24);
    if (v23) {
      goto LABEL_43;
    }
    int64_t v12 = v22 + 3;
    if (v22 + 3 >= v10)
    {
      unint64_t v9 = 0;
      unsigned int v21 = 248;
      int64_t v12 = v22 + 2;
    }
    else
    {
      unint64_t v23 = *(void *)(v32 + 8 * v12);
      if (v23)
      {
LABEL_39:
        int64_t v22 = v12;
LABEL_36:
        unint64_t v9 = (v23 - 1) & v23;
        unint64_t v20 = __clz(__rbit64(v23)) + (v22 << 6);
        int64_t v12 = v22;
        goto LABEL_32;
      }
      int64_t v24 = v22 + 4;
      if (v22 + 4 >= v10) {
        goto LABEL_52;
      }
      unint64_t v23 = *(void *)(v32 + 8 * v24);
      if (v23)
      {
LABEL_43:
        int64_t v22 = v24;
        goto LABEL_36;
      }
      while (1)
      {
        int64_t v22 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_102;
        }
        if (v22 >= v10) {
          break;
        }
        unint64_t v23 = *(void *)(v32 + 8 * v22);
        ++v24;
        if (v23) {
          goto LABEL_36;
        }
      }
      unint64_t v9 = 0;
      unsigned int v21 = 248;
      int64_t v12 = v10 - 1;
    }
LABEL_53:
    if (v15 > 0xF7) {
      break;
    }
    if (v21 > 0xF7) {
      goto LABEL_97;
    }
    if (!(v15 >> 6))
    {
      if (v21 >= 0x40) {
        goto LABEL_97;
      }
      unint64_t v25 = 0xE800000000000000;
      uint64_t v26 = 0x6E656B6F54796E61;
      switch(v15)
      {
        case 1u:
          unint64_t v25 = 0xE600000000000000;
          uint64_t v26 = 0x786966657270;
          break;
        case 2u:
          uint64_t v26 = 0x6E656B6F546C6C61;
          unint64_t v25 = 0xE900000000000073;
          break;
        case 3u:
          uint64_t v26 = 0x69666572506C6C61;
          unint64_t v25 = 0xEB00000000736578;
          break;
        case 4u:
          unint64_t v25 = 0xE600000000000000;
          uint64_t v26 = 0x657361726870;
          break;
        case 5u:
          uint64_t v26 = 0x6850786966657270;
          unint64_t v25 = 0xEC00000065736172;
          break;
        default:
          break;
      }
      unint64_t v27 = 0xE800000000000000;
      uint64_t v28 = 0x6E656B6F54796E61;
      switch(v21)
      {
        case 1u:
LABEL_81:
          unint64_t v27 = 0xE600000000000000;
          uint64_t v28 = 0x786966657270;
          break;
        case 2u:
LABEL_82:
          uint64_t v28 = 0x6E656B6F546C6C61;
          unint64_t v27 = 0xE900000000000073;
          break;
        case 3u:
LABEL_83:
          uint64_t v28 = 0x69666572506C6C61;
          unint64_t v27 = 0xEB00000000736578;
          break;
        case 4u:
LABEL_84:
          unint64_t v27 = 0xE600000000000000;
          uint64_t v28 = 0x657361726870;
          break;
        case 5u:
LABEL_85:
          uint64_t v28 = 0x6850786966657270;
          unint64_t v27 = 0xEC00000065736172;
          break;
        default:
          goto LABEL_86;
      }
      goto LABEL_86;
    }
    if (v15 >> 6 == 1)
    {
      if ((v21 & 0xC0) != 0x40) {
        goto LABEL_97;
      }
      unint64_t v25 = 0xE800000000000000;
      uint64_t v26 = 0x6E656B6F54796E61;
      switch(v21 & 0x3F)
      {
        case 1u:
          unint64_t v25 = 0xE600000000000000;
          uint64_t v26 = 0x786966657270;
          break;
        case 2u:
          uint64_t v26 = 0x6E656B6F546C6C61;
          unint64_t v25 = 0xE900000000000073;
          break;
        case 3u:
          uint64_t v26 = 0x69666572506C6C61;
          unint64_t v25 = 0xEB00000000736578;
          break;
        case 4u:
          unint64_t v25 = 0xE600000000000000;
          uint64_t v26 = 0x657361726870;
          break;
        case 5u:
          uint64_t v26 = 0x6850786966657270;
          unint64_t v25 = 0xEC00000065736172;
          break;
        default:
          break;
      }
      unint64_t v27 = 0xE800000000000000;
      uint64_t v28 = 0x6E656B6F54796E61;
      switch(v21)
      {
        case 1u:
          goto LABEL_81;
        case 2u:
          goto LABEL_82;
        case 3u:
          goto LABEL_83;
        case 4u:
          goto LABEL_84;
        case 5u:
          goto LABEL_85;
        default:
          break;
      }
LABEL_86:
      if (v26 == v28 && v25 == v27)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v30 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0)
        {
LABEL_97:
          swift_release();
          swift_release();
          return 0;
        }
      }
    }
    else if (v15 == 128)
    {
      if (v21 != 128) {
        goto LABEL_97;
      }
    }
    else if (v15 == 129)
    {
      if (v21 != 129) {
        goto LABEL_97;
      }
    }
    else if (v21 != 130)
    {
      goto LABEL_97;
    }
  }
  swift_release();
  swift_release();
  return v21 > 0xF7;
}

uint64_t sub_1B2A979F8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = a2 + 32;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v7 = 0;
  uint64_t v8 = (uint64_t *)(a1 + 40);
  while (v7 == v3)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    unint64_t v7 = v3;
    if (!v4) {
      goto LABEL_21;
    }
LABEL_8:
    uint64_t v13 = *(v8 - 1);
    uint64_t v11 = *v8;
    swift_bridgeObjectRetain();
    if (!v9) {
      goto LABEL_21;
    }
    if (!v11) {
      goto LABEL_19;
    }
    if (v10 == v13 && v9 == v11)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v15 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    --v4;
    v8 += 2;
  }
  if (v7 >= v3)
  {
    __break(1u);
    return result;
  }
  int64_t v12 = (uint64_t *)(v5 + 16 * v7);
  uint64_t v10 = *v12;
  uint64_t v9 = v12[1];
  swift_bridgeObjectRetain();
  if (v4)
  {
    ++v7;
    goto LABEL_8;
  }
  if (v9)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v11 = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

uint64_t sub_1B2A97B7C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x7974706D65;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7974706D65;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x636E6176656C6572;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 2:
      unint64_t v5 = 0x75747865746E6F63;
      unint64_t v3 = 0xEF6C65646F4D6C61;
      break;
    case 3:
      unint64_t v3 = 0x80000001B2E8EF10;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 4:
      unint64_t v5 = 0x6553726F74636576;
      unint64_t v3 = 0xEC00000068637261;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000015;
      unint64_t v3 = 0x80000001B2E8EF30;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x636E6176656C6572;
      unint64_t v6 = 0xE900000000000065;
      break;
    case 2:
      unint64_t v2 = 0x75747865746E6F63;
      unint64_t v6 = 0xEF6C65646F4D6C61;
      break;
    case 3:
      unint64_t v6 = 0x80000001B2E8EF10;
      unint64_t v2 = 0xD000000000000011;
      break;
    case 4:
      unint64_t v2 = 0x6553726F74636576;
      unint64_t v6 = 0xEC00000068637261;
      break;
    case 5:
      unint64_t v2 = 0xD000000000000015;
      unint64_t v6 = 0x80000001B2E8EF30;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B2E837A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B2A97D98(unsigned __int8 *a1, char *a2)
{
  return sub_1B2A97B7C(*a1, *a2);
}

uint64_t static EntityResolutionConfig.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2 = *(unsigned char *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  uint64_t v4 = *(void *)(a1 + 128);
  char v5 = *(unsigned char *)(a1 + 136);
  char v6 = *(unsigned char *)(a1 + 139);
  char v7 = *(unsigned char *)(a2 + 112);
  uint64_t v8 = *(void *)(a2 + 128);
  char v9 = *(unsigned char *)(a2 + 136);
  char v10 = *(unsigned char *)(a2 + 139);
  if ((sub_1B2A9719C(a1, a2) & 1) == 0) {
    goto LABEL_17;
  }
  if ((sub_1B29ABEFC(v2, v7) & 1) == 0) {
    goto LABEL_17;
  }
  char v23 = v10;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1B2DDC70C(v3);
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1B2DDC70C(v12);
  BOOL v14 = sub_1B2A97308(v13, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_17;
  }
  if ((v5 & 1) == 0)
  {
    if ((v9 & 1) == 0 && *(float *)&v4 == *(float *)&v8) {
      goto LABEL_12;
    }
LABEL_17:
    char v21 = 0;
    return v21 & 1;
  }
  if (v4 == v8) {
    char v15 = v9;
  }
  else {
    char v15 = 0;
  }
  if ((v15 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_12:
  unint64_t v16 = sub_1B2A897E8(v6);
  uint64_t v18 = v17;
  if (v16 == sub_1B2A897E8(v23) && v18 == v19) {
    char v21 = 1;
  }
  else {
    char v21 = sub_1B2E837A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21 & 1;
}

id sub_1B2A97F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v8 = (void *)sub_1B2E82348();
  char v9 = (void *)sub_1B2E82348();
  char v10 = (void *)sub_1B2E82348();
  id v11 = objc_msgSend(a7, sel_URLForResource_withExtension_subdirectory_, v8, v9, v10);

  return v11;
}

void sub_1B2A97FC0(void *a1)
{
}

uint64_t sub_1B2A97FC8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 48);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

unint64_t sub_1B2A97FEC()
{
  unint64_t result = qword_1EB7E2FC0;
  if (!qword_1EB7E2FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2FC0);
  }
  return result;
}

unint64_t sub_1B2A98038()
{
  unint64_t result = qword_1E9C3C4E0;
  if (!qword_1E9C3C4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C4E0);
  }
  return result;
}

unint64_t sub_1B2A98084()
{
  unint64_t result = qword_1E9C3C4E8;
  if (!qword_1E9C3C4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C4E8);
  }
  return result;
}

unint64_t sub_1B2A980D0()
{
  unint64_t result = qword_1E9C3C4F0;
  if (!qword_1E9C3C4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C4F0);
  }
  return result;
}

unint64_t sub_1B2A9811C()
{
  unint64_t result = qword_1E9C3C4F8;
  if (!qword_1E9C3C4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C4F8);
  }
  return result;
}

unint64_t sub_1B2A98168()
{
  unint64_t result = qword_1EB7E2FB8;
  if (!qword_1EB7E2FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2FB8);
  }
  return result;
}

unint64_t sub_1B2A981B4()
{
  unint64_t result = qword_1EB7E3000;
  if (!qword_1EB7E3000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3000);
  }
  return result;
}

unint64_t sub_1B2A98200()
{
  unint64_t result = qword_1EB7E3020;
  if (!qword_1EB7E3020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3020);
  }
  return result;
}

unint64_t sub_1B2A9824C()
{
  unint64_t result = qword_1EB7E2F58;
  if (!qword_1EB7E2F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F58);
  }
  return result;
}

uint64_t sub_1B2A98298(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2A982E4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B2A98334()
{
  unint64_t result = qword_1E9C3C500;
  if (!qword_1E9C3C500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C500);
  }
  return result;
}

unint64_t sub_1B2A98384()
{
  unint64_t result = qword_1E9C3C508;
  if (!qword_1E9C3C508)
  {
    sub_1B29C3588(&qword_1E9C3C510);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C508);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EntityResolutionMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for EntityResolutionMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2A9852CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for EntityResolutionMode()
{
}

uint64_t destroy for EntityResolutionConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntityResolutionConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v4 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v4;
  *(_DWORD *)(a1 + 137) = *(_DWORD *)(a2 + 137);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EntityResolutionConfig(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = a2[9];
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = a2[11];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 104) = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(void *)(a1 + 120) = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[16];
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(void *)(a1 + 128) = v10;
  *(unsigned char *)(a1 + 137) = *((unsigned char *)a2 + 137);
  *(unsigned char *)(a1 + 138) = *((unsigned char *)a2 + 138);
  *(unsigned char *)(a1 + 139) = *((unsigned char *)a2 + 139);
  *(unsigned char *)(a1 + 140) = *((unsigned char *)a2 + 140);
  return a1;
}

void *initializeWithTake for EntityResolutionConfig(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x8DuLL);
}

uint64_t assignWithTake for EntityResolutionConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(unsigned char *)(a1 + 138) = *(unsigned char *)(a2 + 138);
  *(unsigned char *)(a1 + 139) = *(unsigned char *)(a2 + 139);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityResolutionConfig(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 141))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 140) = 0;
    *(_DWORD *)(result + 136) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 141) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 141) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for EntityResolutionConfig()
{
}

uint64_t type metadata accessor for EntityResolutionConfig.EntityResolutionConfigBuilder()
{
  return self;
}

void type metadata accessor for RerankerConfig()
{
}

uint64_t _s6ClauseV20FullTextSearchClauseVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2A9896C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2A989AC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

__n128 sub_1B2A98A14(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1B2A98A28(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

uint64_t sub_1B2A98A80(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 19))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2A98AC0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 19) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for CandidateGeneratorConfig()
{
}

unsigned char *sub_1B2A98B10(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2A98BDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for MentionGeneratorConfig()
{
}

uint64_t sub_1B2A98C10()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2A98C18(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2A98C78(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  uint64_t v4 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2A98CE4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2A98D48(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2A98D88(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for PreprocessorConfig()
{
}

unsigned char *_s20IntelligencePlatform22EntityResolutionConfigV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2A98EACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntityResolutionConfig.CodingKeys()
{
  return &type metadata for EntityResolutionConfig.CodingKeys;
}

unint64_t sub_1B2A98EE8()
{
  unint64_t result = qword_1E9C3C518;
  if (!qword_1E9C3C518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C518);
  }
  return result;
}

unint64_t sub_1B2A98F38()
{
  unint64_t result = qword_1EB7E2FD0;
  if (!qword_1EB7E2FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2FD0);
  }
  return result;
}

unint64_t sub_1B2A98F88()
{
  unint64_t result = qword_1EB7E2FC8;
  if (!qword_1EB7E2FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2FC8);
  }
  return result;
}

unint64_t sub_1B2A98FD4()
{
  unint64_t result = qword_1EB7E2FA0;
  if (!qword_1EB7E2FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2FA0);
  }
  return result;
}

unint64_t sub_1B2A99020()
{
  unint64_t result = qword_1E9C3C530;
  if (!qword_1E9C3C530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C530);
  }
  return result;
}

unint64_t sub_1B2A9906C()
{
  unint64_t result = qword_1EB7E2FE8;
  if (!qword_1EB7E2FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2FE8);
  }
  return result;
}

unint64_t sub_1B2A990B8()
{
  unint64_t result = qword_1E9C3C540;
  if (!qword_1E9C3C540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C540);
  }
  return result;
}

unint64_t sub_1B2A99104()
{
  unint64_t result = qword_1EB7E3008;
  if (!qword_1EB7E3008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3008);
  }
  return result;
}

unint64_t sub_1B2A99150()
{
  unint64_t result = qword_1E9C3C558;
  if (!qword_1E9C3C558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C558);
  }
  return result;
}

unint64_t sub_1B2A9919C()
{
  unint64_t result = qword_1E9C3C560;
  if (!qword_1E9C3C560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C560);
  }
  return result;
}

unint64_t sub_1B2A991E8()
{
  unint64_t result = qword_1EB7E2F40;
  if (!qword_1EB7E2F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F40);
  }
  return result;
}

unint64_t sub_1B2A99234()
{
  unint64_t result = qword_1E9C3C570;
  if (!qword_1E9C3C570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C570);
  }
  return result;
}

unint64_t sub_1B2A99280()
{
  unint64_t result = qword_1EB7E2F88;
  if (!qword_1EB7E2F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F88);
  }
  return result;
}

unint64_t sub_1B2A992CC()
{
  unint64_t result = qword_1EB7E3030;
  if (!qword_1EB7E3030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3030);
  }
  return result;
}

unint64_t sub_1B2A99318()
{
  unint64_t result = qword_1EB7E3098;
  if (!qword_1EB7E3098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3098);
  }
  return result;
}

unint64_t sub_1B2A99364()
{
  unint64_t result = qword_1EB7E2F28;
  if (!qword_1EB7E2F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F28);
  }
  return result;
}

unint64_t sub_1B2A993B0()
{
  unint64_t result = qword_1EB7E2F98;
  if (!qword_1EB7E2F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F98);
  }
  return result;
}

unint64_t sub_1B2A993FC()
{
  unint64_t result = qword_1E9C3C578;
  if (!qword_1E9C3C578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C578);
  }
  return result;
}

uint64_t sub_1B2A99448(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 48);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

unint64_t sub_1B2A99460()
{
  unint64_t result = qword_1E9C3C580;
  if (!qword_1E9C3C580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C580);
  }
  return result;
}

unint64_t sub_1B2A994AC()
{
  unint64_t result = qword_1E9C3C598;
  if (!qword_1E9C3C598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C598);
  }
  return result;
}

double sub_1B2A994F8(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 48) = 1;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(void *)(a1 + 133) = 0;
  return result;
}

uint64_t sub_1B2A99528(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2A99594()
{
  unint64_t result = qword_1EB7E2FD8;
  if (!qword_1EB7E2FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2FD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for RerankerConfig.CodingKeys()
{
  return &type metadata for RerankerConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for CandidateGeneratorConfig.CodingKeys()
{
  return &type metadata for CandidateGeneratorConfig.CodingKeys;
}

unsigned char *_s20IntelligencePlatform14RerankerConfigV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2A996A4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MentionGeneratorConfig.CodingKeys()
{
  return &type metadata for MentionGeneratorConfig.CodingKeys;
}

unsigned char *_s20IntelligencePlatform24CandidateGeneratorConfigV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2A997A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreprocessorConfig.CodingKeys()
{
  return &type metadata for PreprocessorConfig.CodingKeys;
}

unint64_t sub_1B2A997E4()
{
  unint64_t result = qword_1E9C3C5A0;
  if (!qword_1E9C3C5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C5A0);
  }
  return result;
}

unint64_t sub_1B2A99834()
{
  unint64_t result = qword_1E9C3C5A8;
  if (!qword_1E9C3C5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C5A8);
  }
  return result;
}

unint64_t sub_1B2A99884()
{
  unint64_t result = qword_1E9C3C5B0;
  if (!qword_1E9C3C5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C5B0);
  }
  return result;
}

unint64_t sub_1B2A998D4()
{
  unint64_t result = qword_1E9C3C5B8;
  if (!qword_1E9C3C5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C5B8);
  }
  return result;
}

unint64_t sub_1B2A99924()
{
  unint64_t result = qword_1EB7E2F50;
  if (!qword_1EB7E2F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F50);
  }
  return result;
}

unint64_t sub_1B2A99974()
{
  unint64_t result = qword_1EB7E2F48;
  if (!qword_1EB7E2F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F48);
  }
  return result;
}

unint64_t sub_1B2A999C4()
{
  unint64_t result = qword_1EB7E3018;
  if (!qword_1EB7E3018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3018);
  }
  return result;
}

unint64_t sub_1B2A99A14()
{
  unint64_t result = qword_1EB7E3010;
  if (!qword_1EB7E3010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3010);
  }
  return result;
}

unint64_t sub_1B2A99A64()
{
  unint64_t result = qword_1EB7E2FF8;
  if (!qword_1EB7E2FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2FF8);
  }
  return result;
}

unint64_t sub_1B2A99AB4()
{
  unint64_t result = qword_1EB7E2FF0;
  if (!qword_1EB7E2FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2FF0);
  }
  return result;
}

unint64_t sub_1B2A99B04()
{
  unint64_t result = qword_1EB7E2FB0;
  if (!qword_1EB7E2FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2FB0);
  }
  return result;
}

unint64_t sub_1B2A99B54()
{
  unint64_t result = qword_1EB7E2FA8;
  if (!qword_1EB7E2FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2FA8);
  }
  return result;
}

uint64_t sub_1B2A99BBC@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return sub_1B2E83578();
}

uint64_t sub_1B2A99BE0()
{
  return sub_1B2E83538();
}

uint64_t sub_1B2A99BFC()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B2A99C20()
{
  return sub_1B2E83658();
}

uint64_t sub_1B2A99C3C()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2A99C60()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2A99C84()
{
  return v0 - 144;
}

uint64_t sub_1B2A99C98()
{
  swift_weakInit();
  swift_weakAssign();
  swift_release();
  return v0;
}

uint64_t sub_1B2A99CD8()
{
  swift_weakDestroy();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2A99D10()
{
  swift_beginAccess();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B2A9A624(v1);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2A99D7C()
{
  return sub_1B2A9A5C0(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1B2A99D94()
{
  type metadata accessor for EntityResolutionCAEventLoggerProvider();
  swift_allocObject();
  uint64_t result = sub_1B2A99DD0();
  qword_1EB7F3468 = result;
  return result;
}

uint64_t sub_1B2A99DD0()
{
  uint64_t v1 = v0;
  type metadata accessor for EntityResolutionCAEventLoggerProvider.GuardedData();
  uint64_t v2 = swift_allocObject();
  type metadata accessor for EntityResolutionCAEventLoggerProvider.CachedLogger();
  *(void *)(v2 + 16) = sub_1B2E82148();
  sub_1B29A3EB4(&qword_1EB7E2F78);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1B29E5380(v2);
  return v1;
}

uint64_t sub_1B2A99E5C()
{
  return sub_1B2A9A5C0(MEMORY[0x1E4FBC8D0]);
}

uint64_t type metadata accessor for EntityResolutionCAEventLoggerProvider()
{
  return self;
}

uint64_t type metadata accessor for EntityResolutionCAEventLoggerProvider.CachedLogger()
{
  return self;
}

uint64_t type metadata accessor for EntityResolutionCAEventLoggerProvider.GuardedData()
{
  return self;
}

uint64_t sub_1B2A99EE0(uint64_t a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
  sub_1B29A2894();
  sub_1B2B2A2AC((uint64_t)v1, 0x6F43797469746E45, 0xEB00000000746E75, v2, v3, v4, v5, v6, v14, v16);
  swift_endAccess();
  sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7D9800);
  swift_bridgeObjectRetain();
  id v7 = sub_1B2A99FD0();
  sub_1B29A2894();
  sub_1B2B2A2AC((uint64_t)v7, 1701080941, 0xE400000000000000, v8, v9, v10, v11, v12, v15, v17);
  return swift_endAccess();
}

id sub_1B2A99FD0()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v1 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

uint64_t sub_1B2A9A044(uint64_t a1, double a2)
{
  uint64_t v4 = 0xEE0079636E657461;
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v6 = 0x4C65766C6F736572;
  switch((char)a1)
  {
    case 1:
      uint64_t v6 = 0x614C6E65676E656DLL;
      goto LABEL_4;
    case 2:
      uint64_t v6 = 0x614C6E65676E6163;
LABEL_4:
      uint64_t v4 = 0xED000079636E6574;
      break;
    case 3:
      uint64_t v6 = 0x4C676E696B6E6172;
      break;
    default:
      break;
  }
  float v7 = round((Current - a2) * 100000.0) / 100.0;
  id v8 = objc_allocWithZone(NSNumber);
  *(float *)&double v9 = v7;
  objc_msgSend(v8, sel_initWithFloat_, v9);
  sub_1B299D72C();
  sub_1B2B2A2AC(a1, v6, v4, v10, v11, v12, v13, v14, v16, v17);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2A9A188(uint64_t a1)
{
  return sub_1B2A9A1CC(a1, 0x436E6F69746E654DLL, 0xEC000000746E756FLL);
}

uint64_t sub_1B2A9A1A8(uint64_t a1)
{
  return sub_1B2A9A1CC(a1, 0x74616469646E6143, 0xEE00746E756F4365);
}

uint64_t sub_1B2A9A1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
  sub_1B299D72C();
  sub_1B2B2A2AC(a1, a2, a3, v6, v7, v8, v9, v10, v12, v13);
  return swift_endAccess();
}

void sub_1B2A9A23C(char a1)
{
  uint64_t v2 = v1;
  id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, a1 & 1);
  swift_beginAccess();
  sub_1B2B2A2AC((uint64_t)v3, 0x6561446E496E7572, 0xEB000000006E6F6DLL, v4, v5, v6, v7, v8, v11, v12);
  uint64_t v9 = swift_endAccess();
  uint64_t v10 = (void *)MEMORY[0x1B3EB2480](v9);
  sub_1B2A9A320(v2);
}

void sub_1B2A9A320(uint64_t a1)
{
  type metadata accessor for Analytics();
  swift_beginAccess();
  id v3 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  static Analytics.sendEventForProduction(eventName:prefix:eventPayload:)(36, 0xB2E993F0, 0, 0, v3);
  swift_bridgeObjectRelease();
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1B2E81FB8();
  sub_1B29A4B98(v4, (uint64_t)qword_1EB7E4AD8);
  swift_retain_n();
  uint64_t v5 = sub_1B2E81F98();
  os_log_type_t v6 = sub_1B2E82DA8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v35 = v8;
    *(_DWORD *)uint64_t v7 = 136315395;
    sub_1B29BF6BC(0xD000000000000024, 0x80000001B2E993F0, (uint64_t)&v35, v9, v10, v11, v12, v13, v23, v1, v25, v27, v29, v31, v33, v35, v36, v37, v38,
      v39);
    uint64_t v26 = v14;
    sub_1B2E82FB8();
    *(_WORD *)(v7 + 12) = 2081;
    sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7E62E8);
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1B2E82108();
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_1B29BF6BC(v15, v17, (uint64_t)&v35, v18, v19, v20, v21, v22, v7 + 14, v24, v26, v28, v30, v32, v34, v35, v36, v37, v38,
      v39);
    sub_1B2E82FB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B2996000, v5, v6, "ECR sents CA event:%s, payload:%{private}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3EB30C0](v8, -1, -1);
    MEMORY[0x1B3EB30C0](v7, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1B2A9A5C0(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityResolutionCAEventLogger()
{
  return self;
}

uint64_t sub_1B2A9A624(uint64_t isStackAllocationSafe)
{
  uint64_t v1 = isStackAllocationSafe;
  v33[3] = *MEMORY[0x1E4F143B8];
  char v2 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v3 = (unint64_t)((1 << v2) + 63) >> 6;
  if ((v2 & 0x3Fu) > 0xD)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) == 0)
    {
      uint64_t v19 = (void *)swift_slowAlloc();
      sub_1B2A0088C(0, v3, v19);
      uint64_t v20 = 0;
      int64_t v21 = 0;
      uint64_t v22 = v1 + 64;
      uint64_t v23 = 1 << *(unsigned char *)(v1 + 32);
      if (v23 < 64) {
        uint64_t v24 = ~(-1 << v23);
      }
      else {
        uint64_t v24 = -1;
      }
      unint64_t v25 = v24 & *(void *)(v1 + 64);
      int64_t v26 = (unint64_t)(v23 + 63) >> 6;
      while (1)
      {
        if (v25)
        {
          unint64_t v27 = __clz(__rbit64(v25));
          v25 &= v25 - 1;
          unint64_t v28 = v27 | (v21 << 6);
        }
        else
        {
          int64_t v29 = v21 + 1;
          if (__OFADD__(v21, 1)) {
            goto LABEL_54;
          }
          if (v29 >= v26) {
            goto LABEL_51;
          }
          unint64_t v30 = *(void *)(v22 + 8 * v29);
          ++v21;
          if (!v30)
          {
            int64_t v21 = v29 + 1;
            if (v29 + 1 >= v26) {
              goto LABEL_51;
            }
            unint64_t v30 = *(void *)(v22 + 8 * v21);
            if (!v30)
            {
              int64_t v21 = v29 + 2;
              if (v29 + 2 >= v26) {
                goto LABEL_51;
              }
              unint64_t v30 = *(void *)(v22 + 8 * v21);
              if (!v30)
              {
                int64_t v31 = v29 + 3;
                if (v31 >= v26) {
                  goto LABEL_51;
                }
                unint64_t v30 = *(void *)(v22 + 8 * v31);
                if (!v30)
                {
                  while (1)
                  {
                    int64_t v21 = v31 + 1;
                    if (__OFADD__(v31, 1)) {
                      goto LABEL_56;
                    }
                    if (v21 >= v26) {
                      break;
                    }
                    unint64_t v30 = *(void *)(v22 + 8 * v21);
                    ++v31;
                    if (v30) {
                      goto LABEL_46;
                    }
                  }
LABEL_51:
                  uint64_t v32 = sub_1B2C40228((uint64_t)v19, v3, v20);
                  MEMORY[0x1B3EB30C0](v19, -1, -1);
                  return v32;
                }
                int64_t v21 = v31;
              }
            }
          }
LABEL_46:
          unint64_t v25 = (v30 - 1) & v30;
          unint64_t v28 = __clz(__rbit64(v30)) + (v21 << 6);
        }
        if (swift_weakLoadStrong())
        {
          swift_release();
          *(void *)((char *)v19 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
          BOOL v17 = __OFADD__(v20++, 1);
          if (v17)
          {
            __break(1u);
            goto LABEL_51;
          }
        }
      }
    }
  }
  v33[1] = v33;
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v4 = (void *)((char *)v33 - ((8 * v3 + 15) & 0x3FFFFFFFFFFFFFF0));
  sub_1B2A0088C(0, v3, v4);
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = v1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
    }
    else
    {
      int64_t v14 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
      if (v14 >= v11) {
        return sub_1B2C40228((uint64_t)v4, v3, v5);
      }
      unint64_t v15 = *(void *)(v7 + 8 * v14);
      ++v6;
      if (!v15)
      {
        int64_t v6 = v14 + 1;
        if (v14 + 1 >= v11) {
          return sub_1B2C40228((uint64_t)v4, v3, v5);
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15)
        {
          int64_t v6 = v14 + 2;
          if (v14 + 2 >= v11) {
            return sub_1B2C40228((uint64_t)v4, v3, v5);
          }
          unint64_t v15 = *(void *)(v7 + 8 * v6);
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v11) {
              return sub_1B2C40228((uint64_t)v4, v3, v5);
            }
            unint64_t v15 = *(void *)(v7 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                int64_t v6 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  break;
                }
                if (v6 >= v11) {
                  return sub_1B2C40228((uint64_t)v4, v3, v5);
                }
                unint64_t v15 = *(void *)(v7 + 8 * v6);
                ++v16;
                if (v15) {
                  goto LABEL_21;
                }
              }
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
            }
            int64_t v6 = v16;
          }
        }
      }
LABEL_21:
      unint64_t v10 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
    }
    if (swift_weakLoadStrong())
    {
      swift_release();
      *(void *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      BOOL v17 = __OFADD__(v5++, 1);
      if (v17) {
        break;
      }
    }
  }
  __break(1u);
  return sub_1B2C40228((uint64_t)v4, v3, v5);
}

uint64_t sub_1B2A9A9F0()
{
  return sub_1B2A9B13C(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1B2A9AA08()
{
  uint64_t v1 = v0;
  type metadata accessor for EntityResolutionHandlerPool.EntityRerankerHandlerStore.GuardedData();
  uint64_t v2 = swift_allocObject();
  type metadata accessor for EntityRerankerHandler();
  *(void *)(v2 + 16) = sub_1B2E82148();
  sub_1B29A3EB4(&qword_1EB7E2F68);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1B29E5380(v2);
  return v1;
}

uint64_t sub_1B2A9AA98()
{
  uint64_t v1 = swift_retain();
  sub_1B2D4A040(v1);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B2A9AAEC()
{
  sub_1B2A9AA98();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2A9AB20()
{
  sub_1B299D754();
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_1B2D4A194(v2, v1, v0);
  swift_release();
  return v3;
}

uint64_t sub_1B2A9AB78(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  int64_t v6 = *(os_unfair_lock_s **)(v5 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 16);
  swift_retain();
  sub_1B2A9AC44((uint64_t)&v8, a1, a2);
  swift_release();
  os_unfair_lock_unlock(v6);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1B2A9AC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_retain();
  sub_1B2B2A2C4(v5, a2, a3, v6, v7, v8, v9, v10, v22, v24[0]);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1B2E81FB8();
  sub_1B29A4B98(v11, (uint64_t)qword_1EB7E4AD8);
  swift_bridgeObjectRetain_n();
  unint64_t v12 = sub_1B2E81F98();
  os_log_type_t v13 = sub_1B2E82DA8();
  if (os_log_type_enabled(v12, v13))
  {
    int64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v24[0] = v15;
    *(_DWORD *)int64_t v14 = 136315138;
    swift_bridgeObjectRetain();
    sub_1B29BF6BC(a2, a3, (uint64_t)v24, v16, v17, v18, v19, v20, v23, v24[0], v24[1], v24[2], v24[3], v25, v26, v27, v28, v29, v30,
      v31);
    uint64_t v25 = v21;
    sub_1B2E82FB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B2996000, v12, v13, "EntityResolutionHandlerPool: cached for %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3EB30C0](v15, -1, -1);
    MEMORY[0x1B3EB30C0](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1B2A9AE4C()
{
  sub_1B299D754();
  uint64_t v2 = swift_retain();
  sub_1B2D4A0CC(v2, v1, v0);

  return swift_release();
}

uint64_t sub_1B2A9AEA8(uint64_t a1)
{
  switch(*(unsigned char *)(a1 + 139))
  {
    case 2:
      swift_bridgeObjectRelease();
      return sub_1B2A9B008(0x746C7561666564, 0xE700000000000000);
    default:
      char v1 = sub_1B2E837A8();
      uint64_t result = swift_bridgeObjectRelease();
      if (v1) {
        return sub_1B2A9B008(0x746C7561666564, 0xE700000000000000);
      }
      return result;
  }
}

uint64_t sub_1B2A9B008(uint64_t a1, uint64_t a2)
{
  swift_retain();
  uint64_t v5 = sub_1B2A9AB20();
  swift_release();
  uint64_t result = swift_release();
  if (!v5)
  {
    type metadata accessor for EntityRerankerHandler();
    uint64_t result = sub_1B2A91080(a1, a2);
    if (!v2)
    {
      swift_retain();
      sub_1B2A9AB78(a1, a2);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B2A9B0CC()
{
  swift_retain();
  sub_1B2A9AE4C();

  return swift_release();
}

uint64_t sub_1B2A9B124()
{
  return sub_1B2A9B13C(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1B2A9B13C(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityResolutionHandlerPool()
{
  return self;
}

uint64_t type metadata accessor for EntityResolutionHandlerPool.EntityRerankerHandlerStore()
{
  return self;
}

uint64_t type metadata accessor for EntityResolutionHandlerPool.EntityRerankerHandlerStore.GuardedData()
{
  return self;
}

void sub_1B2A9B1E8(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      uint64_t v15 = MEMORY[0x1E4FBC860];
      sub_1B29C05D0();
      if (v4 < 0) {
        break;
      }
      uint64_t v5 = 0;
      uint64_t v6 = v15;
      while (v4 != v5)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v7 = (id)MEMORY[0x1B3EB1A20](v5, a1);
        }
        else {
          id v7 = *(id *)(a1 + 8 * v5 + 32);
        }
        uint64_t v8 = v7;
        id v13 = v7;
        sub_1B2A9C7F4(&v13, &v12, (unint64_t *)&v14);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_release();

          return;
        }
        uint64_t v2 = 0;

        long long v9 = v14;
        uint64_t v15 = v6;
        unint64_t v10 = *(void *)(v6 + 16);
        if (v10 >= *(void *)(v6 + 24) >> 1)
        {
          long long v11 = v14;
          sub_1B29C05D0();
          long long v9 = v11;
          uint64_t v6 = v15;
        }
        ++v5;
        *(void *)(v6 + 16) = v10 + 1;
        *(_OWORD *)(v6 + 16 * v10 + 32) = v9;
        if (v4 == v5) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1B2E83448();
      swift_bridgeObjectRelease();
      if (!v4) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B2A9B3A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1B2A9BC24();
  if (!v2)
  {
    uint64_t v5 = result;
    uint64_t v6 = sub_1B2A9C4A0();
    uint64_t v151 = 0;
    uint64_t v172 = a1;
    id v7 = objc_msgSend(v1, sel_mode);
    if ((unint64_t)v7 >= 7) {
      char v8 = 0;
    }
    else {
      char v8 = (char)v7;
    }
    char v188 = v8;
    sub_1B2A9C55C((uint64_t)&v193);
    uint64_t v10 = v193;
    uint64_t v9 = v194;
    uint64_t v11 = v195;
    uint64_t v12 = v196;
    uint64_t v13 = v197 | (v198 << 16);
    sub_1B2A9C634();
    uint64_t v192 = v14;
    if (qword_1EB7E3A20 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1B2E81FB8();
    uint64_t v158 = sub_1B29A4B98(v15, (uint64_t)qword_1EB7E4AD8);
    swift_bridgeObjectRetain();
    id v16 = v1;
    swift_bridgeObjectRetain();
    sub_1B29A4E44(v10);
    swift_bridgeObjectRetain();
    id v187 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v186 = v10;
    unsigned int v190 = v13;
    sub_1B2A9DBC0(v10, v9, v11, v12, v13);
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1B2E81F98();
    HIDWORD(v137) = sub_1B2E82DA8();
    uint64_t v165 = v5;
    uint64_t v179 = v6;
    if (os_log_type_enabled(v17, BYTE4(v137)))
    {
      os_log_t loga = v17;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v199 = v19;
      *(_DWORD *)uint64_t v18 = 136316674;
      uint64_t v20 = sub_1B2A9DBD4(v187, (SEL *)&selRef_text);
      if (v21)
      {
        uint64_t v27 = v21;
      }
      else
      {
        uint64_t v20 = 4271950;
        uint64_t v27 = 0xE300000000000000;
      }
      sub_1B29BF6BC(v20, v27, (uint64_t)&v199, v22, v23, v24, v25, v26, v102, v109, v116, v123, (uint64_t)loga, v137, v11, 0, v9, v5, v172,
        v6);
      uint64_t v193 = v28;
      sub_1B2E82FB8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v29 = v5;
      if (v5)
      {
        uint64_t v30 = v180;
        uint64_t v31 = MEMORY[0x1B3EB1020](v29, &type metadata for EntityClass);
      }
      else
      {
        uint64_t v30 = v180;
        uint64_t v31 = 0;
        uint64_t v32 = 0;
      }
      uint64_t v193 = v31;
      uint64_t v194 = v32;
      sub_1B29A3EB4(&qword_1EB7D9790);
      uint64_t v35 = sub_1B2E823E8();
      sub_1B29BF6BC(v35, v36, (uint64_t)&v199, v37, v38, v39, v40, v41, v103, v110, v117, v19, (uint64_t)logb, v138, v145, v152, v159, v166, v173,
        v180);
      uint64_t v193 = v42;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2080;
      if (v30)
      {
        uint64_t v43 = sub_1B29A3EB4(&qword_1E9C3C5C8);
        uint64_t v44 = MEMORY[0x1B3EB1020](v30, v43);
      }
      else
      {
        uint64_t v44 = 0;
        uint64_t v45 = 0;
      }
      uint64_t v193 = v44;
      uint64_t v194 = v45;
      uint64_t v46 = sub_1B2E823E8();
      sub_1B29BF6BC(v46, v47, (uint64_t)&v199, v48, v49, v50, v51, v52, v104, v111, v118, v124, (uint64_t)logc, v139, v146, v153, v160, v167, v174,
        v181);
      uint64_t v193 = v53;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 32) = 2080;
      uint64_t v59 = 0xEA00000000007963;
      unint64_t v60 = 0x6E6574614C776F6CLL;
      switch(v188)
      {
        case 1:
          uint64_t v59 = 0xE800000000000000;
          unint64_t v60 = 0x6465636E616C6162;
          break;
        case 2:
          uint64_t v59 = 0xEB00000000797469;
          unint64_t v60 = 0x6C61755168676968;
          break;
        case 3:
          uint64_t v61 = 0x786966657270;
          goto LABEL_25;
        case 4:
          unint64_t v60 = 0xD000000000000014;
          uint64_t v59 = 0x80000001B2E8EF80;
          break;
        case 5:
          uint64_t v59 = 0x80000001B2E8EFA0;
          unint64_t v60 = 0xD000000000000010;
          break;
        case 6:
          uint64_t v61 = 0x646972627968;
LABEL_25:
          unint64_t v60 = v61 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
          uint64_t v59 = 0xEC00000068637261;
          break;
        default:
          break;
      }
      sub_1B29BF6BC(v60, v59, (uint64_t)&v199, v54, v55, v56, v57, v58, v105, v112, v119, v125, (uint64_t)logd, v140, v147, v154, v161, v168, v175,
        v182);
      uint64_t v193 = v62;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 42) = 2080;
      if (BYTE2(v190) == 255)
      {
        uint64_t v68 = v126;
        uint64_t v69 = 0xE300000000000000;
        uint64_t v70 = 4271950;
      }
      else if (BYTE2(v190))
      {
        if (BYTE2(v190) == 2)
        {
          uint64_t v68 = v126;
          uint64_t v69 = 0xE600000000000000;
          uint64_t v70 = 0x746573627573;
        }
        else
        {
          uint64_t v68 = v126;
          if (BYTE2(v190) == 1) {
            uint64_t v70 = 0x6564756C637865;
          }
          else {
            uint64_t v70 = 0x7463657078656E75;
          }
          if (BYTE2(v190) == 1) {
            uint64_t v69 = 0xE700000000000000;
          }
          else {
            uint64_t v69 = 0xEA00000000006465;
          }
        }
      }
      else
      {
        uint64_t v68 = v126;
        uint64_t v69 = 0xEC00000065746163;
        uint64_t v70 = 0x6964657250736168;
      }
      sub_1B29BF6BC(v70, v69, (uint64_t)&v199, v63, v64, v65, v66, v67, v106, v113, v120, v126, (uint64_t)loge, v141, v148, v155, v162, v169, v176,
        v183);
      uint64_t v193 = v71;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      sub_1B2A2272C(v186, v163, v149, v12, v190);
      sub_1B2A2272C(v186, v163, v149, v12, v190);
      *(_WORD *)(v18 + 52) = 2080;
      if (v192)
      {
        uint64_t v77 = MEMORY[0x1B3EB1020](v192, &type metadata for EntitySourceID);
        uint64_t v79 = v78;
      }
      else
      {
        uint64_t v77 = 4271950;
        uint64_t v79 = 0xE300000000000000;
      }
      os_log_type_t v80 = BYTE4(v142);
      sub_1B29BF6BC(v77, v79, (uint64_t)&v199, v72, v73, v74, v75, v76, v107, v114, v121, v127, (uint64_t)logf, v142, v149, v156, v163, v170, v177,
        v184);
      uint64_t v193 = v81;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 62) = 2080;
      uint64_t v82 = sub_1B2A9DBD4(v187, (SEL *)&selRef_kgq);
      if (v83)
      {
        uint64_t v89 = v83;
      }
      else
      {
        uint64_t v82 = 4271950;
        uint64_t v89 = 0xE300000000000000;
      }
      uint64_t v33 = v187;
      sub_1B29BF6BC(v82, v89, (uint64_t)&v199, v84, v85, v86, v87, v88, v108, v115, v122, v128, (uint64_t)logg, v143, v150, v157, v164, v171, v178,
        v185);
      uint64_t v193 = v90;
      sub_1B2E82FB8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B2996000, log, v80, "text: %s\nentityTypeFilter: %s)\nspan: %s\nmode: %s\ncandidateConstraint: %s\nsourceIDs: %s\nkgq: %s", (uint8_t *)v18, 0x48u);
      swift_arrayDestroy();
      MEMORY[0x1B3EB30C0](v68, -1, -1);
      MEMORY[0x1B3EB30C0](v18, -1, -1);

      uint64_t v34 = v186;
      uint64_t v9 = v158;
      uint64_t v13 = v190;
      uint64_t v11 = v144;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v33 = v187;

      uint64_t v13 = v13;
      sub_1B2A2272C(v10, v9, v11, v12, v13);
      sub_1B2A2272C(v10, v9, v11, v12, v13);

      swift_bridgeObjectRelease_n();
      uint64_t v34 = v10;
    }
    uint64_t v91 = sub_1B2A9DBD4(v33, (SEL *)&selRef_text);
    uint64_t v189 = v92;
    uint64_t v191 = v91;
    LOBYTE(v199) = v188;
    uint64_t v193 = v34;
    uint64_t v194 = v9;
    uint64_t v195 = v11;
    uint64_t v196 = v12;
    unsigned __int8 v198 = BYTE2(v13);
    unsigned __int16 v197 = v13;
    sub_1B29A4E44(v34);
    uint64_t v93 = v9;
    uint64_t v94 = v34;
    uint64_t v95 = sub_1B2A9DBD4(v33, (SEL *)&selRef_kgq);
    uint64_t v96 = v12;
    uint64_t v98 = v97;
    unsigned __int8 v99 = objc_msgSend(v33, sel_includeFeatures);
    uint64_t v100 = v33;
    unsigned __int8 v101 = v99;
    BYTE1(v109) = objc_msgSend(v100, sel_includeInferredNames);
    LOBYTE(v109) = v101;
    sub_1B2AA7FC4(v191, v189, v165, v179, (uint64_t)&v199, (uint64_t)&v193, v192, v95, v98, v109, v116, v123, (uint64_t)log, v137, v144, v151, v158, v165, v172,
      v179,
      v186,
      (char)v187,
      SBYTE1(v187));
    return sub_1B2A2272C(v94, v93, v11, v96, v13);
  }
  return result;
}

uint64_t sub_1B2A9BC24()
{
  uint64_t v1 = sub_1B2A9DAD8(v0);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v77 = MEMORY[0x1E4FBC860];
  sub_1B29C0580();
  uint64_t v4 = 0;
  uint64_t v5 = v77;
  uint64_t v66 = v2 + 32;
  uint64_t v65 = v3;
  while (2)
  {
    uint64_t v70 = v4;
    uint64_t v6 = (uint64_t *)(v66 + 16 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    if ((v7 & 0x1000000000000000) != 0 || !(v7 & 0x2000000000000000 | v8 & 0x1000000000000000))
    {
      sub_1B29A28B4();
      sub_1B29A3EB4(&qword_1E9C37F68);
      sub_1B2A9DC34();
      swift_bridgeObjectRelease();
      uint64_t v9 = 162;
      goto LABEL_28;
    }
    uint64_t v9 = 162;
    if ((v7 & 0x2000000000000000) == 0)
    {
      if ((v8 & 0x1000000000000000) != 0)
      {
        uint64_t v10 = (const char *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        uint64_t v10 = (const char *)sub_1B2E83298();
        if (!v10)
        {
          uint64_t v47 = _Records_GDEntityClass_records;
          uint64_t v69 = _Records_GDEntityClass_labels;
          sub_1B29A28B4();
          uint64_t v48 = (uint64_t *)(v47 + 16);
          uint64_t v49 = 162;
          while (1)
          {
            if (!v47) {
              goto LABEL_113;
            }
            uint64_t v15 = *v48;
            if (*v48 >= 2889) {
              goto LABEL_109;
            }
            if (!v69) {
              goto LABEL_114;
            }
            if (!strcmp(&v69[v15], 0)) {
              break;
            }
            unint64_t v16 = 0;
            uint64_t v18 = 0;
            uint64_t v15 = 0;
            v48 += 3;
            char v17 = 1;
            if (!--v49) {
              goto LABEL_27;
            }
          }
          char v17 = 0;
          unint64_t v16 = *((unsigned __int8 *)v48 - 16);
          uint64_t v18 = *(v48 - 1);
          goto LABEL_27;
        }
      }
      uint64_t v11 = v5;
      uint64_t v67 = v8;
      uint64_t v12 = _Records_GDEntityClass_records;
      uint64_t v13 = _Records_GDEntityClass_labels;
      sub_1B29A28B4();
      uint64_t v14 = (uint64_t *)(v12 + 16);
      while (1)
      {
        if (!v12) {
          goto LABEL_100;
        }
        uint64_t v15 = *v14;
        if (*v14 >= 2889) {
          goto LABEL_92;
        }
        if (!v13) {
          goto LABEL_102;
        }
        if (!strcmp(&v13[v15], v10)) {
          break;
        }
        v14 += 3;
        if (!--v9)
        {
          sub_1B299D774();
          goto LABEL_26;
        }
      }
      char v17 = 0;
      unint64_t v16 = *((unsigned __int8 *)v14 - 16);
      uint64_t v18 = *(v14 - 1);
LABEL_26:
      uint64_t v5 = v11;
      uint64_t v9 = 162;
      uint64_t v8 = v67;
LABEL_27:
      unint64_t v73 = v16;
      uint64_t v74 = v18;
      uint64_t v75 = v15;
      char v76 = v17;
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    *(void *)__s2 = *v6;
    uint64_t v72 = v7 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v68 = v8;
    uint64_t v19 = v5;
    uint64_t v20 = _Records_GDEntityClass_records;
    uint64_t v21 = _Records_GDEntityClass_labels;
    swift_bridgeObjectRetain_n();
    uint64_t v22 = (uint64_t *)(v20 + 16);
    uint64_t v23 = 162;
    while (1)
    {
      if (!v20) {
        goto LABEL_99;
      }
      uint64_t v24 = *v22;
      if (*v22 >= 2889)
      {
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
        goto LABEL_95;
      }
      if (!v21) {
        goto LABEL_101;
      }
      if (!strcmp(&v21[v24], __s2)) {
        break;
      }
      v22 += 3;
      if (!--v23)
      {
        sub_1B2A9DC7C();
        goto LABEL_24;
      }
    }
    char v25 = 0;
    unint64_t v26 = *((unsigned __int8 *)v22 - 16);
    uint64_t v27 = *(v22 - 1);
LABEL_24:
    uint64_t v5 = v19;
    uint64_t v8 = v68;
    unint64_t v73 = v26;
    uint64_t v74 = v27;
    uint64_t v75 = v24;
    char v76 = v25;
    swift_bridgeObjectRelease();
LABEL_28:
    if ((v76 & 1) == 0)
    {
      if (v74 < 1336)
      {
        if (v75 < 2889)
        {
          if (_Records_GDEntityClass_classIds[0])
          {
            char v37 = v73;
            uint64_t v38 = sub_1B2E82538();
            if (_Records_GDEntityClass_labels) {
              goto LABEL_81;
            }
            goto LABEL_108;
          }
LABEL_107:
          __break(1u);
LABEL_108:
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
          uint64_t result = sub_1B2E83408();
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
          return result;
        }
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    if ((v7 & 0x1000000000000000) != 0 || !(v7 & 0x2000000000000000 | v8 & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      sub_1B29A3EB4(&qword_1E9C37F68);
      sub_1B2A9DC34();
      goto LABEL_75;
    }
    if ((v7 & 0x2000000000000000) != 0)
    {
      *(void *)__s2 = v8;
      uint64_t v72 = v7 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v40 = _Records_GDEntityClass_records;
      uint64_t v41 = _Records_GDEntityClass_classIds[0];
      swift_bridgeObjectRetain();
      uint64_t v42 = (uint64_t *)(v40 + 16);
      while (1)
      {
        if (!v40) {
          goto LABEL_103;
        }
        uint64_t v43 = *(v42 - 1);
        if (v43 >= 1336) {
          goto LABEL_93;
        }
        if (!v41) {
          goto LABEL_105;
        }
        if (!strcmp(&v41[v43], __s2)) {
          break;
        }
        v42 += 3;
        if (!--v9)
        {
          sub_1B29A430C();
          goto LABEL_55;
        }
      }
      char v44 = 0;
      unint64_t v45 = *((unsigned __int8 *)v42 - 16);
      uint64_t v46 = *v42;
LABEL_55:
      unint64_t v73 = v45;
      uint64_t v74 = v43;
      uint64_t v75 = v46;
      char v76 = v44;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v8 & 0x1000000000000000) != 0)
      {
        uint64_t v28 = (const char *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_34:
        uint64_t v29 = v5;
        uint64_t v30 = _Records_GDEntityClass_records;
        uint64_t v31 = _Records_GDEntityClass_classIds[0];
        swift_bridgeObjectRetain();
        uint64_t v32 = (uint64_t *)(v30 + 16);
        while (1)
        {
          if (!v30) {
            goto LABEL_104;
          }
          uint64_t v33 = *(v32 - 1);
          if (v33 >= 1336) {
            goto LABEL_94;
          }
          if (!v31) {
            goto LABEL_106;
          }
          if (!strcmp(&v31[v33], v28)) {
            break;
          }
          v32 += 3;
          if (!--v9)
          {
            sub_1B299F570();
LABEL_57:
            uint64_t v5 = v29;
            goto LABEL_74;
          }
        }
        char v35 = 0;
        unint64_t v34 = *((unsigned __int8 *)v32 - 16);
        uint64_t v36 = *v32;
        goto LABEL_57;
      }
      uint64_t v28 = (const char *)sub_1B2E83298();
      if (v28) {
        goto LABEL_34;
      }
      uint64_t v50 = _Records_GDEntityClass_records;
      uint64_t v51 = _Records_GDEntityClass_classIds[0];
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v53 = (uint64_t *)(v50 + 16);
      uint64_t v54 = 162;
      while (1)
      {
        if (!v50) {
          goto LABEL_116;
        }
        uint64_t v33 = *(v53 - 1);
        if (v33 >= 1336) {
          goto LABEL_112;
        }
        if (!v51) {
          goto LABEL_115;
        }
        uint64_t result = strcmp(&v51[v33], 0);
        if (!result) {
          break;
        }
        unint64_t v34 = 0;
        uint64_t v33 = 0;
        uint64_t v36 = 0;
        v53 += 3;
        char v35 = 1;
        if (!--v54) {
          goto LABEL_74;
        }
      }
      char v35 = 0;
      unint64_t v34 = *((unsigned __int8 *)v53 - 16);
      uint64_t v36 = *v53;
LABEL_74:
      unint64_t v73 = v34;
      uint64_t v74 = v33;
      uint64_t v75 = v36;
      char v76 = v35;
LABEL_75:
      swift_bridgeObjectRelease();
    }
    if ((v76 & 1) == 0)
    {
      if (v74 >= 1336) {
        goto LABEL_97;
      }
      if (v75 >= 2889) {
        goto LABEL_98;
      }
      if (!_Records_GDEntityClass_classIds[0]) {
        goto LABEL_110;
      }
      char v37 = v73;
      uint64_t v38 = sub_1B2E82538();
      if (!_Records_GDEntityClass_labels) {
        goto LABEL_111;
      }
LABEL_81:
      uint64_t v55 = v38;
      uint64_t v56 = v39;
      uint64_t v57 = sub_1B2E82538();
      uint64_t v59 = v58;
      swift_bridgeObjectRelease();
      uint64_t v77 = v5;
      unint64_t v60 = *(void *)(v5 + 16);
      if (v60 >= *(void *)(v5 + 24) >> 1)
      {
        sub_1B29C0580();
        uint64_t v5 = v77;
      }
      uint64_t v4 = v70 + 1;
      *(void *)(v5 + 16) = v60 + 1;
      uint64_t v61 = v5 + 40 * v60;
      *(void *)(v61 + 32) = v55;
      *(void *)(v61 + 40) = v56;
      *(void *)(v61 + 48) = v57;
      *(void *)(v61 + 56) = v59;
      *(unsigned char *)(v61 + 64) = v37;
      if (v70 + 1 == v65)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
      continue;
    }
    break;
  }
  unint64_t v73 = 0;
  uint64_t v74 = 0xE000000000000000;
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  unint64_t v73 = 0xD00000000000001ALL;
  uint64_t v74 = 0x80000001B2E995E0;
  sub_1B2E82518();
  unint64_t v62 = v73;
  uint64_t v63 = v74;
  sub_1B2A1F13C();
  swift_allocError();
  *(void *)uint64_t v64 = v62;
  *(void *)(v64 + 8) = v63;
  *(unsigned char *)(v64 + 16) = 2;
  swift_willThrow();
  swift_bridgeObjectRelease();
  uint64_t v5 = v77;
  swift_bridgeObjectRelease();
  swift_release();
  return v5;
}

uint64_t sub_1B2A9C4A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B2A9DB30(v0, (SEL *)&selRef_spans, &qword_1E9C3C5C0);
  if (!v2) {
    return 0;
  }
  unint64_t v3 = v2;
  sub_1B2A9DBD4(v1, (SEL *)&selRef_text);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_1B2A9B1E8(v3);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

double sub_1B2A9C55C@<D0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_constraint);
  if (v3 == (id)2)
  {
    static EntityPredicate.phoneNumber.getter();
LABEL_7:
    double result = *(double *)&v8;
    uint64_t v5 = v9;
    uint64_t v6 = v10;
    __int16 v7 = v11;
    *(_OWORD *)a1 = v8;
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 34) = 0;
    *(_WORD *)(a1 + 32) = v7;
    return result;
  }
  if (v3 == (id)1)
  {
    sub_1B2A7C538(0x23uLL, (uint64_t)&v8);
    goto LABEL_7;
  }
  if (v3)
  {
    return sub_1B2A9CB2C(v1, a1);
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(unsigned char *)(a1 + 34) = -1;
    *(_WORD *)(a1 + 32) = 0;
  }
  return result;
}

void sub_1B2A9C634()
{
  unint64_t v1 = sub_1B2A9DB30(v0, (SEL *)&selRef_sourceIDs, &qword_1E9C3C5D0);
  if (!v1) {
    return;
  }
  unint64_t v2 = v1;
  if (v1 >> 62)
  {
    uint64_t v3 = sub_1B2E83448();
    if (v3) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    goto LABEL_12;
  }
LABEL_4:
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1B29C0620();
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = 0;
    unint64_t v17 = v2 & 0xC000000000000001;
    unint64_t v5 = v2;
    do
    {
      if (v17) {
        id v6 = (id)MEMORY[0x1B3EB1A20](v4, v2);
      }
      else {
        id v6 = *(id *)(v2 + 8 * v4 + 32);
      }
      __int16 v7 = v6;
      id v8 = objc_msgSend(v6, sel_value, v17);
      uint64_t v9 = sub_1B2E82378();
      uint64_t v11 = v10;

      uint64_t v12 = sub_1B2A9DBD4(v7, (SEL *)&selRef_source);
      uint64_t v14 = v13;

      unint64_t v15 = *(void *)(v18 + 16);
      if (v15 >= *(void *)(v18 + 24) >> 1) {
        sub_1B29C0620();
      }
      ++v4;
      *(void *)(v18 + 16) = v15 + 1;
      unint64_t v16 = (void *)(v18 + 32 * v15);
      v16[4] = v9;
      v16[5] = v11;
      v16[6] = v12;
      v16[7] = v14;
      unint64_t v2 = v5;
    }
    while (v3 != v4);
    goto LABEL_12;
  }
  __break(1u);
}

unint64_t sub_1B2A9C7F4@<X0>(id *a1@<X0>, uint64_t *a2@<X3>, unint64_t *a3@<X8>)
{
  id v4 = *a1;
  id v5 = objc_msgSend(*a1, sel_rangeValue);
  uint64_t v7 = v6;
  unint64_t result = sub_1B2E824D8();
  if (v9) {
    goto LABEL_6;
  }
  if (__OFADD__(v5, v7))
  {
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  unint64_t result = sub_1B2E824D8();
  if (v11)
  {
LABEL_6:
    sub_1B2E831F8();
    sub_1B2E82518();
    id v12 = objc_msgSend(v4, sel_description);
    sub_1B2E82378();

    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2E824A8();
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (result >> 14 < v10 >> 14)
  {
    sub_1B2E831F8();
    sub_1B2E82518();
    sub_1B2E83388();
    sub_1B2E82518();
    sub_1B2E83388();
LABEL_7:
    sub_1B2A1F13C();
    uint64_t v13 = swift_allocError();
    *(void *)uint64_t v14 = 0;
    *(void *)(v14 + 8) = 0xE000000000000000;
    *(unsigned char *)(v14 + 16) = 2;
    unint64_t result = swift_willThrow();
    *a2 = v13;
    return result;
  }
  *a3 = v10;
  a3[1] = result;
  return result;
}

double sub_1B2A9CB2C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1B2E81FB8();
  sub_1B29A4B98(v4, (uint64_t)qword_1EB7E4AD8);
  id v5 = a1;
  uint64_t v6 = sub_1B2E81F98();
  os_log_type_t v7 = sub_1B2E82DB8();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v19[0] = v9;
    *(_DWORD *)id v8 = 136315138;
    id v18 = objc_msgSend(v5, sel_constraint);
    type metadata accessor for GDCandidateConstraint(0);
    uint64_t v10 = sub_1B2E823E8();
    sub_1B29BF6BC(v10, v11, (uint64_t)v19, v12, v13, v14, v15, v16, (uint64_t)v18, v19[0], v19[1], v19[2], v19[3], v19[4], v19[5], v19[6], v19[7], v19[8], v19[9],
      v19[10]);
    sub_1B2E82FB8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B2996000, v6, v7, "Unknown constraint: %s. Ignored.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3EB30C0](v9, -1, -1);
    MEMORY[0x1B3EB30C0](v8, -1, -1);
  }
  else
  {
  }
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(unsigned char *)(a2 + 34) = -1;
  *(_WORD *)(a2 + 32) = 0;
  return result;
}

unint64_t sub_1B2A9CD10()
{
  unint64_t v1 = v0;
  sub_1B2E839F8();
  sub_1B2A9DBD4(v0, (SEL *)&selRef_text);
  if (v2)
  {
    sub_1B2E839A8();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B2E839A8();
  }
  uint64_t v3 = sub_1B2A9DAD8(v0);
  if (v3)
  {
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      uint64_t v5 = v3 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1B2E82498();
        swift_bridgeObjectRelease();
        v5 += 16;
        --v4;
      }
      while (v4);
    }
    swift_bridgeObjectRelease();
  }
  unint64_t result = sub_1B2A9DB30(v0, (SEL *)&selRef_spans, &qword_1E9C3C5C0);
  if (!result) {
    goto LABEL_19;
  }
  unint64_t v7 = result;
  if (result >> 62)
  {
    unint64_t result = sub_1B2E83448();
    uint64_t v8 = result;
    if (result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_12:
      if (v8 < 1)
      {
        __break(1u);
        return result;
      }
      for (uint64_t i = 0; i != v8; ++i)
      {
        if ((v7 & 0xC000000000000001) != 0) {
          id v10 = (id)MEMORY[0x1B3EB1A20](i, v7);
        }
        else {
          id v10 = *(id *)(v7 + 8 * i + 32);
        }
        uint64_t v11 = v10;
        sub_1B2E82F18();
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_19:
  sub_1B2A9DBD4(v1, (SEL *)&selRef_kgq);
  if (v12)
  {
    sub_1B2E82498();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v1, sel_mode);
  sub_1B2E83998();
  memcpy(__dst, v13, sizeof(__dst));
  return sub_1B2E839D8();
}

id sub_1B2A9CF04()
{
  return objc_msgSend(objc_allocWithZone((Class)GDEntityFeatures), sel_initWithCandidateNameScore_candidateCommunicationScore_candidateOrganizationScore_candidateLocationScore_candidateEventLocationScore_candidateEventNameScore_topicScore_messagePopularityGivenTimeOfDay_callPopularityGivenTimeOfDay_facetimePopularityGivenTimeOfDay_timeOfDayGivenMessageWithEntity_timeOfDayGivenCallWithEntity_timeOfDayGivenFacetimeWithEntity_messageWithEntityGivenTimeOfDay_callWithEntityGivenTimeOfDay_facetimeWithEntityGivenTimeOfDay_messagePopularityGivenCoarseTimeOfDay_callPopularityGivenCoarseTimeOfDay_facetimePopularityGivenCoarseTimeOfDay_coarseTimeOfDayGivenMessageWithEntity_coarseTimeOfDayGivenCallWithEntity_coarseTimeOfDayGivenFacetimeWithEntity_messageWithEntityGivenCoarseTimeOfDay_callWithEntityGivenCoarseTimeOfDay_facetimeWithEntityGivenCoarseTimeOfDay_messagePopularityGivenDayOfWeek_callPopularityGivenDayOfWeek_facetimePopularityGivenDayOfWeek_dayOfWeekGivenMessageWithEntity_dayOfWeekGivenCallWithEntity_dayOfWeekGivenFacetimeWithEntity_messageWithEntityGivenDayOfWeek_callWithEntityGivenDayOfWeek_facetimeWithEntityGivenDayOfWeek_messagePopularityGivenFocusMode_callPopularityGivenFocusMode_facetimePopularityGivenFocusMode_focusModeGivenMessageWithEntity_focusModeGivenCallWithEntity_focusModeGivenFacetimeWithEntity_messageWithEntityGivenFocusMode_callWithEntityGivenFocusMode_facetimeWithEntityGivenFocusMode_messagePopularityGivenLOI_callPopularityGivenLOI_facetimePopularityGivenLOI_LOIGivenMessageWithEntity_LOIGivenCallWithEntity_LOIGivenFacetimeWithEntity_messageWithEntityGivenLOI_callWithEntityGivenLOI_facetimeWithEntityGivenLOI_messagePopularityGivenSpecificGeoHash_callPopularityGivenSpecificGeoHash_facetimePopularityGivenSpecificGeoHash_specificGeoHashGivenMessageWithEntity_specificGeoHashGivenCallWithEntity_specificGeoHashGivenFacetimeWithEntity_messageWithEntityGivenSpecificGeoHash_callWithEntityGivenSpecificGeoHash_facetimeWithEntityGivenSpecificGeoHash_messagePopularityGivenCoarseGeoHash_callPopularityGivenCoarseGeoHash_facetimePopularityGivenCoarseGeoHash_coarseGeoHashGivenMessageWithEntity_coarseGeoHashGivenCallWithEntity_coarseGeoHashGivenFacetimeWithEntity_messageWithEntityGivenCoarseGeoHash_callWithEntityGivenCoarseGeoHash_facetimeWithEntityGivenCoarseGeoHash_messagePopularityGivenLargeGeoHash_callPopularityGivenLargeGeoHash_facetimePopularityGivenLargeGeoHash_largeGeoHashGivenMessageWithEntity_largeGeoHashGivenCallWithEntity_largeGeoHashGivenFacetimeWithEntity_messageWithEntityGivenLargeGeoHash_callWithEntityGivenLargeGeoHash_facetimeWithEntityGivenLargeGeoHash_messagePopularityGivenMicroLocation_callPopularityGivenMicroLocation_facetimePopularityGivenMicroLocation_microLocationGivenMessageWithEntity_microLocationGivenCallWithEntity_microLocationGivenFacetimeWithEntity_messageWithEntityGivenMicroLocation_callWithEntityGivenMicroLocation_facetimeWithEntityGivenMicroLocation_messagePopularityGivenMotionState_callPopularityGivenMotionState_facetimePopularityGivenMotionState_motionStateGivenMessageWithEntity_motionStateGivenCallWithEntity_motionStateGivenFacetimeWithEntity_messageWithEntityGivenMotionState_callWithEntityGivenMotionState_facetimeWithEntityGivenMotionState_messagePopularityGivenWiFi_callPopularityGivenWiFi_facetimePopularityGivenWiFi_wiFiGivenMessageWithEntity_wiFiGivenCallWithEntity_wiFiGivenFacetimeWithEntity_messageWithEntityGivenWiFi_callWithEntityGivenWiFi_facetimeWithEntityGivenWiFi_messagePopularityGivenSequence_callPopularityGivenSequence_facetimePopularityGivenSequence_sequenceGivenMessageWithEntity_sequenceGivenCallWithEntity_sequenceGivenFacetimeWithEntity_lastExecutionAge_medianTimeIntervalBetweenExecution_dailyDoseL1Error_dailyDoseL2Error_shortTermTrendingPopularity_trendingPopularity_longTermTrendingPopularity_locationLastExecutationAge_locationPopularityGivenSpecificGeoHash_locationTrendingPopularity_, *(unsigned int *)(v0 + 896), *(unsigned int *)(v0 + 900), *(unsigned int *)(v0 + 904), *(unsigned int *)(v0 + 944), *(double *)v0, *(double *)(v0 + 8), *(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(_OWORD *)(v0 + 64), *(_OWORD *)(v0 + 80), *(_OWORD *)(v0 + 96), *(_OWORD *)(v0 + 112), *(_OWORD *)(v0 + 128),
           *(_OWORD *)(v0 + 144),
           *(_OWORD *)(v0 + 160),
           *(_OWORD *)(v0 + 176),
           *(_OWORD *)(v0 + 192),
           *(_OWORD *)(v0 + 208),
           *(_OWORD *)(v0 + 224),
           *(_OWORD *)(v0 + 240),
           *(_OWORD *)(v0 + 256),
           *(_OWORD *)(v0 + 272),
           *(_OWORD *)(v0 + 288),
           *(_OWORD *)(v0 + 304),
           *(_OWORD *)(v0 + 320),
           *(void *)(v0 + 336),
           *(void *)(v0 + 344),
           *(void *)(v0 + 352),
           *(void *)(v0 + 360),
           *(void *)(v0 + 368),
           *(void *)(v0 + 376),
           *(void *)(v0 + 384),
           *(void *)(v0 + 392),
           *(void *)(v0 + 400),
           *(void *)(v0 + 408),
           *(void *)(v0 + 416),
           *(void *)(v0 + 424),
           *(void *)(v0 + 432),
           *(void *)(v0 + 440),
           *(void *)(v0 + 448));
}

id sub_1B2A9D2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  unint64_t v7 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithText_start_end_, v7, a3, a4);

  return v8;
}

id sub_1B2A9D340()
{
  uint64_t v1 = *(void *)(v0 + 56);
  char v2 = *(unsigned char *)(v0 + 72);
  if (*(void *)(v0 + 8))
  {
    sub_1B29A07D4();
    sub_1B2A9DC58();
    sub_1B29C3CA0(0, &qword_1EB7D97F8);
    swift_bridgeObjectRetain();
    id v3 = sub_1B29A1920();
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone((Class)GDSpan), sel_init);
  }
  uint64_t v4 = v3;
  if (v1)
  {
    uint64_t v5 = *(void *)(v1 + 16);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    if (v5)
    {
      char v16 = v2;
      uint64_t v17 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B29BFD80();
      uint64_t v6 = v17;
      unint64_t v7 = (uint64_t *)(v1 + 56);
      do
      {
        uint64_t v9 = *(v7 - 1);
        uint64_t v8 = *v7;
        unint64_t v11 = *(void *)(v17 + 16);
        unint64_t v10 = *(void *)(v17 + 24);
        swift_bridgeObjectRetain();
        if (v11 >= v10 >> 1) {
          sub_1B29BFD80();
        }
        *(void *)(v17 + 16) = v11 + 1;
        uint64_t v12 = v17 + 16 * v11;
        *(void *)(v12 + 32) = v9;
        *(void *)(v12 + 40) = v8;
        v7 += 5;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      char v2 = v16;
    }
    if (v2) {
      goto LABEL_12;
    }
LABEL_14:
    uint64_t v13 = (void *)sub_1B2E82A68();
    goto LABEL_15;
  }
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if ((v2 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_12:
  uint64_t v13 = 0;
LABEL_15:
  id v14 = objc_allocWithZone((Class)GDMention);
  return sub_1B2A9D89C(v4, v6, v13);
}

void sub_1B2A9D4E4()
{
  uint64_t v1 = *v0;
  double v2 = *((double *)v0 + 1);
  double v3 = *((double *)v0 + 2);
  double v4 = *((double *)v0 + 3);
  double v5 = *((double *)v0 + 4);
  uint64_t v7 = v0[5];
  id v6 = (id)v0[6];
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[8];
  uint64_t v11 = v0[10];
  uint64_t v10 = v0[11];
  uint64_t v12 = v0[12];
  sub_1B2A93410((uint64_t)(v0 + 14), (uint64_t)v24);
  double v13 = *((double *)v0 + 138);
  char v14 = *((unsigned char *)v0 + 1112);
  if (v6)
  {
    id v15 = objc_allocWithZone((Class)GDEntitySourceID);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v6 = sub_1B2A9D808(v7, (uint64_t)v6, v8, v9);
  }
  id v16 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v1);
  if (v16)
  {
    uint64_t v17 = v16;
    if (v11)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = v10;
    }
    else
    {
      uint64_t v18 = 0;
      uint64_t v12 = 0;
    }
    sub_1B2A93410((uint64_t)v24, (uint64_t)__src);
    if (sub_1B2A9DBA4((uint64_t)__src) == 1)
    {
      id v19 = 0;
    }
    else
    {
      memcpy(__dst, __src, sizeof(__dst));
      id v19 = sub_1B2A9CF04();
    }
    uint64_t v20 = (void *)sub_1B2E83918();
    id v21 = objc_allocWithZone((Class)GDRankerItem);
    sub_1B2A9D920(v17, v6, v2, v3, v4, v5, v13, v18, v12, v19, v20, v14);
  }
  else
  {

    __break(1u);
  }
}

id sub_1B2A9D6A8()
{
  id v1 = (id)v0[1];
  double v2 = (void *)v0[7];
  uint64_t v3 = v0[10];
  if (v1)
  {
    sub_1B29A07D4();
    sub_1B2A9DC58();
    sub_1B29C3CA0(0, &qword_1EB7D97F8);
    swift_bridgeObjectRetain();
    id v1 = sub_1B29A1920();
  }
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B2E832F8();
    uint64_t v6 = 32;
    do
    {
      memcpy(v11, (const void *)(v3 + v6), sizeof(v11));
      sub_1B2A9D4E4();
      sub_1B2E832C8();
      sub_1B2E83308();
      sub_1B2E83318();
      sub_1B2E832D8();
      v6 += 1128;
      --v4;
    }
    while (v4);
    uint64_t v5 = v12;
    swift_bridgeObjectRelease();
  }
  if (v2 && v2[2])
  {
    uint64_t v7 = v2[6];
    uint64_t v8 = v2[7];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  id v9 = objc_allocWithZone((Class)GDRankerResult);
  return sub_1B2A9DA18(v1, v5, v7, v8);
}

id sub_1B2A9D808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v7 = (void *)sub_1B2E82348();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  id v8 = objc_msgSend(v4, sel_initWithValue_source_, v6, v7);

  return v8;
}

id sub_1B2A9D89C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v3, sel_initWithSpan_entityClasses_score_, a1, v6, a3);

  return v7;
}

id sub_1B2A9D920(void *a1, void *a2, double a3, double a4, double a5, double a6, double a7, uint64_t a8, uint64_t a9, void *a10, void *a11, char a12)
{
  double v13 = v12;
  if (a9)
  {
    uint64_t v24 = (void *)sub_1B2E82348();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = 0;
  }
  id v25 = objc_msgSend(v13, sel_initWithEntityID_sourceID_entityClass_features_score_nameScore_contextualScore_entityRelevance_entityRelevanceInferenceEventId_confirmationConfidence_isRelationshipMatch_, a1, a2, v24, a10, a11, a12 & 1, a3, a4, a5, a6, a7);

  return v25;
}

id sub_1B2A9DA18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B29C3CA0(0, &qword_1EB7D97B0);
  id v7 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  if (a4)
  {
    id v8 = (void *)sub_1B2E82348();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = 0;
  }
  id v9 = objc_msgSend(v4, sel_initWithSpan_rankedEntities_entityClass_, a1, v7, v8);

  return v9;
}

uint64_t sub_1B2A9DAD8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_entityClassFilter);
  if (!v1) {
    return 0;
  }
  double v2 = v1;
  uint64_t v3 = sub_1B2E82838();

  return v3;
}

uint64_t sub_1B2A9DB30(void *a1, SEL *a2, unint64_t *a3)
{
  id v4 = [a1 *a2];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  sub_1B29C3CA0(0, a3);
  uint64_t v6 = sub_1B2E82838();

  return v6;
}

uint64_t sub_1B2A9DBA4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 968)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B2A9DBC0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (BYTE2(a5) != 255) {
    return sub_1B2A22630(result, a2, a3, a4, a5, SBYTE2(a5));
  }
  return result;
}

uint64_t sub_1B2A9DBD4(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_1B2E82378();

  return v4;
}

uint64_t sub_1B2A9DC34()
{
  return sub_1B2E831C8();
}

void sub_1B2A9DC58()
{
  sub_1B2AADD98(0xFuLL, v2, v0, v1);
}

unint64_t sub_1B2A9DC90(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 6:
      unint64_t result = 0x6F63536369706F74;
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1B2A9DD6C()
{
  return &unk_1F0AB73E0;
}

unint64_t sub_1B2A9DD78(char a1)
{
  unint64_t result = 0xD000000000000027;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000030;
      break;
    case 2:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000030;
      break;
    case 5:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 7:
      unint64_t result = 0xD00000000000004FLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000053;
      break;
    case 9:
    case 12:
    case 27:
    case 30:
    case 61:
    case 64:
    case 76:
    case 79:
    case 82:
    case 89:
    case 92:
      unint64_t result = 0xD000000000000057;
      break;
    case 10:
      unint64_t result = 0xD00000000000004FLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000053;
      break;
    case 13:
      unint64_t result = 0xD000000000000051;
      break;
    case 14:
      unint64_t result = 0xD000000000000055;
      break;
    case 15:
      unint64_t result = 0xD000000000000059;
      break;
    case 16:
      unint64_t result = 0xD00000000000005BLL;
      break;
    case 17:
      unint64_t result = 0xD00000000000005FLL;
      break;
    case 18:
      unint64_t result = 0xD000000000000063;
      break;
    case 19:
      unint64_t result = 0xD00000000000005BLL;
      break;
    case 20:
      unint64_t result = 0xD00000000000005FLL;
      break;
    case 21:
      unint64_t result = 0xD000000000000063;
      break;
    case 22:
      unint64_t result = 0xD00000000000005DLL;
      break;
    case 23:
      unint64_t result = 0xD000000000000061;
      break;
    case 24:
      unint64_t result = 0xD000000000000065;
      break;
    case 25:
      unint64_t result = 0xD00000000000004FLL;
      break;
    case 26:
      unint64_t result = 0xD000000000000053;
      break;
    case 28:
      unint64_t result = 0xD00000000000004FLL;
      break;
    case 29:
      unint64_t result = 0xD000000000000053;
      break;
    case 31:
      unint64_t result = 0xD000000000000051;
      break;
    case 32:
      unint64_t result = 0xD000000000000055;
      break;
    case 33:
      unint64_t result = 0xD000000000000059;
      break;
    case 34:
      unint64_t result = 0xD00000000000004BLL;
      break;
    case 35:
      unint64_t result = 0xD00000000000004FLL;
      break;
    case 36:
      unint64_t result = 0xD000000000000053;
      break;
    case 37:
      unint64_t result = 0xD00000000000004BLL;
      break;
    case 38:
      unint64_t result = 0xD00000000000004FLL;
      break;
    case 39:
      unint64_t result = 0xD000000000000053;
      break;
    case 40:
      unint64_t result = 0xD00000000000004DLL;
      break;
    case 41:
      unint64_t result = 0xD000000000000051;
      break;
    case 42:
      unint64_t result = 0xD000000000000055;
      break;
    case 43:
      unint64_t result = 0xD000000000000043;
      break;
    case 44:
      unint64_t result = 0xD000000000000047;
      break;
    case 45:
      unint64_t result = 0xD00000000000004BLL;
      break;
    case 46:
      unint64_t result = 0xD000000000000043;
      break;
    case 47:
      unint64_t result = 0xD000000000000047;
      break;
    case 48:
      unint64_t result = 0xD00000000000004BLL;
      break;
    case 49:
      unint64_t result = 0xD000000000000045;
      break;
    case 50:
      unint64_t result = 0xD000000000000049;
      break;
    case 51:
      unint64_t result = 0xD00000000000004DLL;
      break;
    case 52:
      unint64_t result = 0xD00000000000005BLL;
      break;
    case 53:
      unint64_t result = 0xD00000000000005FLL;
      break;
    case 54:
      unint64_t result = 0xD000000000000063;
      break;
    case 55:
      unint64_t result = 0xD00000000000005BLL;
      break;
    case 56:
      unint64_t result = 0xD00000000000005FLL;
      break;
    case 57:
      unint64_t result = 0xD000000000000063;
      break;
    case 58:
      unint64_t result = 0xD00000000000005DLL;
      break;
    case 59:
      unint64_t result = 0xD000000000000061;
      break;
    case 60:
      unint64_t result = 0xD000000000000065;
      break;
    case 62:
      unint64_t result = 0xD00000000000005BLL;
      break;
    case 63:
      unint64_t result = 0xD00000000000005FLL;
      break;
    case 65:
      unint64_t result = 0xD00000000000005BLL;
      break;
    case 66:
      unint64_t result = 0xD00000000000005FLL;
      break;
    case 67:
      unint64_t result = 0xD000000000000059;
      break;
    case 68:
      unint64_t result = 0xD00000000000005DLL;
      break;
    case 69:
      unint64_t result = 0xD000000000000061;
      break;
    case 70:
      unint64_t result = 0xD000000000000055;
      break;
    case 71:
      unint64_t result = 0xD000000000000059;
      break;
    case 72:
      unint64_t result = 0xD00000000000005DLL;
      break;
    case 73:
      unint64_t result = 0xD000000000000055;
      break;
    case 74:
      unint64_t result = 0xD000000000000059;
      break;
    case 75:
      unint64_t result = 0xD00000000000005DLL;
      break;
    case 77:
      unint64_t result = 0xD00000000000005BLL;
      break;
    case 78:
      unint64_t result = 0xD00000000000005FLL;
      break;
    case 80:
      unint64_t result = 0xD00000000000005BLL;
      break;
    case 81:
      unint64_t result = 0xD00000000000005FLL;
      break;
    case 83:
      unint64_t result = 0xD00000000000005BLL;
      break;
    case 84:
      unint64_t result = 0xD00000000000005FLL;
      break;
    case 85:
      unint64_t result = 0xD000000000000059;
      break;
    case 86:
      unint64_t result = 0xD00000000000005DLL;
      break;
    case 87:
      unint64_t result = 0xD000000000000061;
      break;
    case 88:
      unint64_t result = 0xD000000000000053;
      break;
    case 90:
      unint64_t result = 0xD00000000000005BLL;
      break;
    case 91:
      unint64_t result = 0xD000000000000053;
      break;
    case 93:
      unint64_t result = 0xD00000000000005BLL;
      break;
    case 94:
      unint64_t result = 0xD000000000000055;
      break;
    case 95:
      unint64_t result = 0xD000000000000059;
      break;
    case 96:
      unint64_t result = 0xD00000000000005DLL;
      break;
    case 97:
      unint64_t result = 0xD000000000000045;
      break;
    case 98:
      unint64_t result = 0xD000000000000049;
      break;
    case 99:
      unint64_t result = 0xD00000000000004DLL;
      break;
    case 100:
      unint64_t result = 0xD000000000000045;
      break;
    case 101:
      unint64_t result = 0xD000000000000049;
      break;
    case 102:
      unint64_t result = 0xD00000000000004DLL;
      break;
    case 103:
      unint64_t result = 0xD000000000000047;
      break;
    case 104:
      unint64_t result = 0xD00000000000004BLL;
      break;
    case 105:
      unint64_t result = 0xD00000000000004FLL;
      break;
    case 106:
      unint64_t result = 0xD000000000000045;
      break;
    case 107:
      unint64_t result = 0xD000000000000049;
      break;
    case 108:
      unint64_t result = 0xD00000000000004DLL;
      break;
    case 109:
      unint64_t result = 0xD000000000000045;
      break;
    case 110:
      unint64_t result = 0xD000000000000049;
      break;
    case 111:
      unint64_t result = 0xD00000000000004DLL;
      break;
    case 112:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 113:
      unint64_t result = 0xD00000000000004DLL;
      break;
    case 114:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 115:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case 116:
      unint64_t result = 0xD000000000000046;
      break;
    case 117:
      unint64_t result = 0xD00000000000003DLL;
      break;
    case 118:
      unint64_t result = 0xD000000000000045;
      break;
    case 119:
      unint64_t result = 0xD000000000000038;
      break;
    case 120:
      unint64_t result = 0xD00000000000003ALL;
      break;
    case 121:
      unint64_t result = 0xD000000000000058;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2A9E720()
{
  uint64_t result = sub_1B2DDC660((uint64_t)&unk_1F0AB8010);
  qword_1EB7F3370 = result;
  return result;
}

BOOL static EntityFeatures.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  int8x16_t v4 = vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 256), *(float64x2_t *)(a2 + 256)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 272), *(float64x2_t *)(a2 + 272))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 288), *(float64x2_t *)(a2 + 288)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 304), *(float64x2_t *)(a2 + 304)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 320), *(float64x2_t *)(a2 + 320)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 336), *(float64x2_t *)(a2 + 336))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 352), *(float64x2_t *)(a2 + 352)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 368), *(float64x2_t *)(a2 + 368)))));
  int8x16_t v5 = vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 32), *(float64x2_t *)(a2 + 32)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 48), *(float64x2_t *)(a2 + 48)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 64), *(float64x2_t *)(a2 + 64)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 80), *(float64x2_t *)(a2 + 80))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 96), *(float64x2_t *)(a2 + 96)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 112), *(float64x2_t *)(a2 + 112)))));
  unsigned __int8 v6 = vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vandq_s8(vandq_s8(v5, v4), vandq_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 128), *(float64x2_t *)(a2 + 128)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 144), *(float64x2_t *)(a2 + 144))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 160), *(float64x2_t *)(a2 + 160)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 176),
                                                                              *(float64x2_t *)(a2 + 176)))),
                                       (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 192), *(float64x2_t *)(a2 + 192)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 208), *(float64x2_t *)(a2 + 208))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 224), *(float64x2_t *)(a2 + 224)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 240), *(float64x2_t *)(a2 + 240))))), vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 384),
                                                                              *(float64x2_t *)(a2 + 384)),
                                                                 (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 400), *(float64x2_t *)(a2 + 400))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 416), *(float64x2_t *)(a2 + 416)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 432), *(float64x2_t *)(a2 + 432)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 448), *(float64x2_t *)(a2 + 448)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 464), *(float64x2_t *)(a2 + 464))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(
                                                                              *(float64x2_t *)(a1 + 480),
                                                                              *(float64x2_t *)(a2 + 480)),
                                                                 (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 496), *(float64x2_t *)(a2 + 496))))))), 7uLL)));
  unsigned __int8 v7 = v6 & vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vandq_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 512), *(float64x2_t *)(a2 + 512)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 528), *(float64x2_t *)(a2 + 528))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 544), *(float64x2_t *)(a2 + 544)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 560), *(float64x2_t *)(a2 + 560)))), (int8x16_t)vuzp1q_s16(
                                                       (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 576), *(float64x2_t *)(a2 + 576)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 592), *(float64x2_t *)(a2 + 592))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 608), *(float64x2_t *)(a2 + 608)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 624), *(float64x2_t *)(a2 + 624))))), vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 640), *(float64x2_t *)(a2 + 640)),
                                                                    (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 656), *(float64x2_t *)(a2 + 656))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 672), *(float64x2_t *)(a2 + 672)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 688), *(float64x2_t *)(a2 + 688)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 704), *(float64x2_t *)(a2 + 704)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 720), *(float64x2_t *)(a2 + 720))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(
                                                                                 *(float64x2_t *)(a1 + 736),
                                                                                 *(float64x2_t *)(a2 + 736)),
                                                                    (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 752), *(float64x2_t *)(a2 + 752)))))), 7uLL)));
  if ((v7 & (vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 768), *(float64x2_t *)(a2 + 768)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 784), *(float64x2_t *)(a2 + 784))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 800), *(float64x2_t *)(a2 + 800)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 816), *(float64x2_t *)(a2 + 816)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32(
                                                                                     (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 832), *(float64x2_t *)(a2 + 832)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 848), *(float64x2_t *)(a2 + 848))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 864), *(float64x2_t *)(a2 + 864)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 880), *(float64x2_t *)(a2 + 880))))), 7uLL))) & vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 912), *(float64x2_t *)(a2 + 912)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 928), *(float64x2_t *)(a2 + 928)))), 0xFuLL)))) & (*(double *)(a1 + 952) == *(double *)(a2 + 952)) & (*(_DWORD *)(a1 + 896) == *(_DWORD *)(a2 + 896)) & (*(_DWORD *)(a1 + 900) == *(_DWORD *)(a2 + 900))) == 1
    && *(_DWORD *)(a1 + 904) == *(_DWORD *)(a2 + 904)
    && *(_DWORD *)(a1 + 944) == *(_DWORD *)(a2 + 944))
  {
    return *(double *)(a1 + 960) == *(double *)(a2 + 960);
  }
  return result;
}

void EntityFeatures.encode(to:)()
{
  sub_1B2999A0C();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3C5D8);
  sub_1B299D278();
  uint64_t v9 = v4;
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2A9FC6C();
  sub_1B2E83A38();
  sub_1B2E836A8();
  if (!v0)
  {
    sub_1B29A1944(1);
    sub_1B2AA434C();
    sub_1B29A1944(2);
    sub_1B2AA434C();
    sub_1B29A1944(3);
    sub_1B2AA434C();
    sub_1B29A1944(4);
    sub_1B2AA434C();
    sub_1B29A1944(5);
    sub_1B2AA434C();
    sub_1B29A1944(6);
    sub_1B2AA434C();
    sub_1B29A1944(7);
    sub_1B2AA434C();
    sub_1B29A1944(8);
    sub_1B2AA434C();
    sub_1B29A1944(9);
    sub_1B2AA434C();
    sub_1B29A1944(10);
    sub_1B2AA434C();
    sub_1B29A1944(11);
    sub_1B29A28CC();
    sub_1B29A1944(12);
    sub_1B29A28CC();
    sub_1B29A1944(13);
    sub_1B29A28CC();
    sub_1B29A1944(14);
    sub_1B29A28CC();
    sub_1B29A1944(15);
    sub_1B29A28CC();
    sub_1B29A1944(16);
    sub_1B29A28CC();
    sub_1B29A1944(17);
    sub_1B29A28CC();
    sub_1B29A1944(18);
    sub_1B29A28CC();
    sub_1B29A1944(19);
    sub_1B29A28CC();
    sub_1B29A1944(20);
    sub_1B29A28CC();
    sub_1B29A1944(21);
    sub_1B29A28CC();
    sub_1B29A1944(22);
    sub_1B29A28CC();
    sub_1B29A1944(23);
    sub_1B29A28CC();
    sub_1B29A1944(24);
    sub_1B29A28CC();
    sub_1B29A1944(25);
    sub_1B29A28CC();
    sub_1B29A1944(26);
    sub_1B29A28CC();
    sub_1B29A1944(27);
    sub_1B29A28CC();
    sub_1B29A1944(28);
    sub_1B29A28CC();
    sub_1B29A1944(29);
    sub_1B29A28CC();
    sub_1B29A1944(30);
    sub_1B29A28CC();
    sub_1B29A1944(31);
    sub_1B29A28CC();
    sub_1B29A1944(32);
    sub_1B29A28CC();
    sub_1B29A1944(33);
    sub_1B29A28CC();
    sub_1B29A1944(34);
    sub_1B29A28CC();
    sub_1B29A1944(35);
    sub_1B29A28CC();
    sub_1B29A1944(36);
    sub_1B29A28CC();
    sub_1B29A1944(37);
    sub_1B29A28CC();
    sub_1B29A1944(38);
    sub_1B29A28CC();
    sub_1B29A1944(39);
    sub_1B29A28CC();
    sub_1B29A1944(40);
    sub_1B29A28CC();
    sub_1B29A1944(41);
    sub_1B29A28CC();
    sub_1B29A1944(42);
    sub_1B29A28CC();
    sub_1B29A1944(43);
    sub_1B29A28CC();
    sub_1B29A1944(44);
    sub_1B29A28CC();
    sub_1B29A1944(45);
    sub_1B29A28CC();
    sub_1B29A1944(46);
    sub_1B29A28CC();
    sub_1B29A1944(47);
    sub_1B29A28CC();
    sub_1B29A1944(48);
    sub_1B29A28CC();
    sub_1B29A1944(49);
    sub_1B29A28CC();
    sub_1B29A1944(50);
    sub_1B29A28CC();
    sub_1B29A1944(51);
    sub_1B29A28CC();
    sub_1B29A1944(52);
    sub_1B29A28CC();
    sub_1B29A1944(53);
    sub_1B29A28CC();
    sub_1B29A1944(54);
    sub_1B29A28CC();
    sub_1B29A1944(55);
    sub_1B29A28CC();
    sub_1B29A1944(56);
    sub_1B29A28CC();
    sub_1B29A1944(57);
    sub_1B29A28CC();
    sub_1B29A1944(58);
    sub_1B29A28CC();
    sub_1B29A1944(59);
    sub_1B29A28CC();
    sub_1B29A1944(60);
    sub_1B29A28CC();
    sub_1B29A1944(61);
    sub_1B29A28CC();
    sub_1B29A1944(62);
    sub_1B29A28CC();
    sub_1B29A1944(63);
    sub_1B29A28CC();
    sub_1B29A1944(64);
    sub_1B29A28CC();
    sub_1B29A1944(65);
    sub_1B29A28CC();
    sub_1B29A1944(66);
    sub_1B29A28CC();
    sub_1B29A1944(67);
    sub_1B29A28CC();
    sub_1B29A1944(68);
    sub_1B29A28CC();
    sub_1B29A1944(69);
    sub_1B29A28CC();
    sub_1B29A1944(70);
    sub_1B29A28CC();
    sub_1B29A1944(71);
    sub_1B29A28CC();
    sub_1B29A1944(72);
    sub_1B29A28CC();
    sub_1B29A1944(73);
    sub_1B29A28CC();
    sub_1B29A1944(74);
    sub_1B29A28CC();
    sub_1B29A1944(75);
    sub_1B29A28CC();
    sub_1B29A1944(76);
    sub_1B29A28CC();
    sub_1B29A1944(77);
    sub_1B29A28CC();
    sub_1B29A1944(78);
    sub_1B29A28CC();
    sub_1B29A1944(79);
    sub_1B29A28CC();
    sub_1B29A1944(80);
    sub_1B29A28CC();
    sub_1B29A1944(81);
    sub_1B29A28CC();
    sub_1B29A1944(82);
    sub_1B29A28CC();
    sub_1B29A1944(83);
    sub_1B29A28CC();
    sub_1B29A1944(84);
    sub_1B29A28CC();
    sub_1B29A1944(85);
    sub_1B29A28CC();
    sub_1B29A1944(86);
    sub_1B29A28CC();
    sub_1B29A1944(87);
    sub_1B29A28CC();
    sub_1B29A1944(88);
    sub_1B29A28CC();
    sub_1B29A1944(89);
    sub_1B29A28CC();
    sub_1B29A1944(90);
    sub_1B29A28CC();
    sub_1B29A1944(91);
    sub_1B29A28CC();
    sub_1B29A1944(92);
    sub_1B29A28CC();
    sub_1B29A1944(93);
    sub_1B29A28CC();
    sub_1B29A1944(94);
    sub_1B29A28CC();
    sub_1B29A1944(95);
    sub_1B29A28CC();
    sub_1B29A1944(96);
    sub_1B29A28CC();
    sub_1B29A1944(97);
    sub_1B29A28CC();
    sub_1B29A1944(98);
    sub_1B29A28CC();
    sub_1B29A1944(99);
    sub_1B29A28CC();
    sub_1B29A1944(100);
    sub_1B29A28CC();
    sub_1B29A1944(101);
    sub_1B29A28CC();
    sub_1B29A1944(102);
    sub_1B29A28CC();
    sub_1B29A1944(103);
    sub_1B29A28CC();
    sub_1B29A1944(104);
    sub_1B29A28CC();
    sub_1B29A1944(105);
    sub_1B29A28CC();
    sub_1B29A1944(106);
    sub_1B29A28CC();
    sub_1B29A1944(107);
    sub_1B29A28CC();
    sub_1B29A1944(108);
    sub_1B29A28CC();
    sub_1B29A1944(109);
    sub_1B29A28CC();
    sub_1B29A1944(110);
    sub_1B2AA434C();
    sub_1B29A1944(111);
    sub_1B2AA434C();
    sub_1B2AA456C(112);
    sub_1B2AA446C();
    sub_1B2AA456C(113);
    sub_1B2AA446C();
    sub_1B2AA456C(114);
    sub_1B2AA446C();
    sub_1B29A1944(115);
    sub_1B2AA434C();
    sub_1B29A1944(116);
    sub_1B2AA434C();
    sub_1B29A1944(117);
    sub_1B2AA434C();
    sub_1B29A1944(118);
    sub_1B2AA434C();
    sub_1B2AA456C(119);
    sub_1B2AA446C();
    sub_1B29A1944(120);
    sub_1B2AA434C();
    sub_1B29A1944(121);
    sub_1B2AA434C();
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v3);
  sub_1B2AA44F0();
}

unint64_t sub_1B2A9FC6C()
{
  unint64_t result = qword_1EB7D95E8;
  if (!qword_1EB7D95E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D95E8);
  }
  return result;
}

void EntityFeatures.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  sub_1B2999A0C();
  a30 = v32;
  a31 = v33;
  char v35 = v34;
  uint64_t v37 = v36;
  sub_1B29A3EB4(&qword_1EB7D98A0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v38);
  sub_1B299E4A0();
  sub_1B29AEC7C(v35, v35[3]);
  sub_1B2A9FC6C();
  sub_1B2E83A18();
  if (!v31)
  {
    a21 = 0;
    sub_1B2E83588();
    uint64_t v40 = v39;
    sub_1B299D788(1);
    uint64_t v42 = v41;
    sub_1B299D788(2);
    uint64_t v44 = v43;
    sub_1B299D788(3);
    uint64_t v46 = v45;
    sub_1B299D788(4);
    uint64_t v48 = v47;
    sub_1B299D788(5);
    uint64_t v50 = v49;
    sub_1B299D788(6);
    uint64_t v52 = v51;
    sub_1B299D788(7);
    uint64_t v307 = v53;
    sub_1B299D788(8);
    uint64_t v55 = v54;
    sub_1B299D788(9);
    uint64_t v306 = v56;
    sub_1B299D788(10);
    uint64_t v305 = v57;
    sub_1B299D788(11);
    uint64_t v304 = v58;
    sub_1B299D788(12);
    uint64_t v303 = v59;
    sub_1B299D788(13);
    uint64_t v302 = v60;
    sub_1B299D788(14);
    uint64_t v301 = v61;
    sub_1B299D788(15);
    uint64_t v300 = v62;
    sub_1B299D788(16);
    uint64_t v299 = v63;
    sub_1B299D788(17);
    uint64_t v298 = v64;
    sub_1B299D788(18);
    uint64_t v297 = v65;
    sub_1B299D788(19);
    uint64_t v296 = v66;
    sub_1B299D788(20);
    uint64_t v295 = v67;
    sub_1B299D788(21);
    sub_1B2AA4368((uint64_t)&a29, v68);
    sub_1B299D788(22);
    sub_1B2AA4368((uint64_t)&a28, v69);
    sub_1B299D788(23);
    sub_1B2AA4368((uint64_t)&a27, v70);
    sub_1B299D788(24);
    sub_1B2AA4368((uint64_t)&a26, v71);
    sub_1B299D788(25);
    sub_1B2AA4368((uint64_t)&a25, v72);
    sub_1B299D788(26);
    sub_1B2AA4368((uint64_t)&a24, v73);
    sub_1B299D788(27);
    sub_1B2AA4368((uint64_t)&a23, v74);
    sub_1B299D788(28);
    sub_1B2AA4368((uint64_t)&a22, v75);
    sub_1B299D788(29);
    sub_1B2AA4368((uint64_t)&a18, v76);
    sub_1B299D788(30);
    sub_1B2AA4368((uint64_t)&a17, v77);
    sub_1B299D788(31);
    sub_1B2AA4368((uint64_t)&a16, v78);
    sub_1B299D788(32);
    sub_1B2AA4368((uint64_t)&a15, v79);
    sub_1B299D788(33);
    sub_1B2AA4368((uint64_t)&a14, v80);
    sub_1B299D788(34);
    sub_1B2AA4368((uint64_t)&a13, v81);
    sub_1B299D788(35);
    sub_1B2AA4368((uint64_t)&a12, v82);
    sub_1B299D788(36);
    sub_1B2AA4368((uint64_t)&a11, v83);
    sub_1B299D788(37);
    sub_1B2AA4368((uint64_t)&a10, v84);
    sub_1B299D788(38);
    sub_1B2AA4368((uint64_t)&a9, v85);
    sub_1B299D788(39);
    sub_1B2AA4368((uint64_t)&v308, v86);
    sub_1B299D788(40);
    sub_1B2AA4368((uint64_t)&v307, v87);
    sub_1B299D788(41);
    sub_1B2AA4368((uint64_t)&v306, v88);
    sub_1B299D788(42);
    sub_1B2AA4368((uint64_t)&v305, v89);
    sub_1B299D788(43);
    sub_1B2AA4368((uint64_t)&v304, v90);
    sub_1B299D788(44);
    sub_1B2AA4368((uint64_t)&v303, v91);
    sub_1B299D788(45);
    sub_1B2AA4368((uint64_t)&v302, v92);
    sub_1B299D788(46);
    sub_1B2AA4368((uint64_t)&v301, v93);
    sub_1B299D788(47);
    sub_1B2AA4368((uint64_t)&v300, v94);
    sub_1B299D788(48);
    sub_1B2AA4368((uint64_t)&v299, v95);
    sub_1B299D788(49);
    sub_1B2AA4368((uint64_t)&v298, v96);
    sub_1B299D788(50);
    sub_1B2AA4368((uint64_t)&v297, v97);
    sub_1B299D788(51);
    sub_1B2AA4368((uint64_t)&v296, v98);
    sub_1B299D788(52);
    sub_1B2AA4368((uint64_t)&v295, v99);
    sub_1B299D788(53);
    sub_1B2AA4368((uint64_t)&v294, v100);
    sub_1B299D788(54);
    sub_1B2AA4368((uint64_t)&v293, v101);
    sub_1B299D788(55);
    sub_1B2AA4368((uint64_t)&v292, v102);
    sub_1B299D788(56);
    sub_1B2AA4368((uint64_t)&v291, v103);
    sub_1B299D788(57);
    sub_1B2AA4368((uint64_t)&v290, v104);
    sub_1B299D788(58);
    sub_1B2AA4368((uint64_t)&v289, v105);
    sub_1B299D788(59);
    sub_1B2AA4368((uint64_t)&v288, v106);
    sub_1B299D788(60);
    sub_1B2AA4368((uint64_t)&v287, v107);
    sub_1B299D788(61);
    sub_1B2AA4368((uint64_t)&v286, v108);
    sub_1B299D788(62);
    sub_1B2AA4368((uint64_t)&v285, v109);
    sub_1B299D788(63);
    sub_1B2AA4368((uint64_t)&v284, v110);
    sub_1B299D788(64);
    sub_1B2AA4368((uint64_t)&v283, v111);
    sub_1B299D788(65);
    sub_1B2AA4368((uint64_t)&v282, v112);
    sub_1B299D788(66);
    sub_1B2AA4368((uint64_t)&v281, v113);
    sub_1B299D788(67);
    sub_1B2AA4368((uint64_t)&v280, v114);
    sub_1B299D788(68);
    sub_1B2AA4368((uint64_t)&v279, v115);
    sub_1B299D788(69);
    sub_1B2AA4368((uint64_t)&v278, v116);
    sub_1B299D788(70);
    sub_1B2AA4368((uint64_t)&v277, v117);
    sub_1B299D788(71);
    sub_1B2AA4368((uint64_t)&v276, v118);
    sub_1B299D788(72);
    sub_1B2AA4368((uint64_t)&v275, v119);
    sub_1B299D788(73);
    sub_1B2AA4368((uint64_t)&v274, v120);
    sub_1B299D788(74);
    sub_1B2AA4368((uint64_t)&v273, v121);
    sub_1B299D788(75);
    sub_1B2AA4368((uint64_t)&v272, v122);
    sub_1B299D788(76);
    sub_1B2AA4368((uint64_t)&v271, v123);
    sub_1B299D788(77);
    sub_1B2AA4368((uint64_t)&v270, v124);
    sub_1B299D788(78);
    sub_1B2AA4368((uint64_t)&v269, v125);
    sub_1B299D788(79);
    sub_1B2AA4368((uint64_t)&v268, v126);
    sub_1B299D788(80);
    sub_1B2AA4368((uint64_t)&v267, v127);
    sub_1B299D788(81);
    sub_1B2AA4368((uint64_t)&v266, v128);
    sub_1B299D788(82);
    sub_1B2AA4368((uint64_t)&v265, v129);
    sub_1B299D788(83);
    sub_1B2AA4368((uint64_t)&v264, v130);
    sub_1B299D788(84);
    sub_1B2AA4368((uint64_t)&v263, v131);
    sub_1B299D788(85);
    sub_1B2AA4368((uint64_t)&v262, v132);
    sub_1B299D788(86);
    sub_1B2AA4368((uint64_t)&v261, v133);
    sub_1B299D788(87);
    sub_1B2AA4368((uint64_t)&v260, v134);
    sub_1B299D788(88);
    sub_1B2AA4368((uint64_t)&v259, v135);
    sub_1B299D788(89);
    sub_1B2AA4368((uint64_t)&v258, v136);
    sub_1B299D788(90);
    sub_1B2AA4368((uint64_t)&v257, v137);
    sub_1B299D788(91);
    sub_1B2AA4368((uint64_t)&v256, v138);
    sub_1B299D788(92);
    sub_1B2AA4368((uint64_t)&v255, v139);
    sub_1B299D788(93);
    sub_1B2AA4368((uint64_t)&v254, v140);
    sub_1B299D788(94);
    sub_1B2AA4368((uint64_t)&v253, v141);
    sub_1B299D788(95);
    sub_1B2AA4368((uint64_t)&v252, v142);
    sub_1B299D788(96);
    sub_1B2AA4368((uint64_t)&v251, v143);
    sub_1B299D788(97);
    sub_1B2AA4368((uint64_t)&v250, v144);
    sub_1B299D788(98);
    sub_1B2AA4368((uint64_t)&v249, v145);
    sub_1B299D788(99);
    sub_1B2AA4368((uint64_t)&v248, v146);
    sub_1B299D788(100);
    sub_1B2AA4368((uint64_t)&v247, v147);
    sub_1B299D788(101);
    sub_1B2AA4368((uint64_t)&v246, v148);
    sub_1B299D788(102);
    sub_1B2AA4368((uint64_t)&v245, v149);
    sub_1B299D788(103);
    sub_1B2AA4368((uint64_t)&v244, v150);
    sub_1B299D788(104);
    sub_1B2AA4368((uint64_t)&v243, v151);
    sub_1B299D788(105);
    sub_1B2AA4368((uint64_t)&v242, v152);
    sub_1B299D788(106);
    sub_1B2AA4368((uint64_t)&v241, v153);
    sub_1B299D788(107);
    sub_1B2AA4368((uint64_t)&v240, v154);
    sub_1B299D788(108);
    sub_1B2AA4368((uint64_t)&v239, v155);
    sub_1B299D788(109);
    sub_1B2AA4368((uint64_t)&v238, v156);
    sub_1B299D788(110);
    sub_1B2AA4368((uint64_t)&v237, v157);
    sub_1B299D788(111);
    sub_1B2AA4368((uint64_t)&v236, v158);
    a18 = sub_1B29A4320(112);
    int v204 = sub_1B29A4320(113);
    int v159 = sub_1B29A4320(114);
    sub_1B299D788(115);
    sub_1B2AA4368((uint64_t)v235, v160);
    sub_1B299D788(116);
    sub_1B2AA4368((uint64_t)&v234, v161);
    sub_1B299D788(117);
    sub_1B2AA4368((uint64_t)&v233, v162);
    sub_1B299D788(118);
    sub_1B2AA4368((uint64_t)&v232, v163);
    int v164 = sub_1B29A4320(119);
    sub_1B299D788(120);
    sub_1B2AA4368((uint64_t)&v231, v165);
    sub_1B299D788(121);
    sub_1B2AA4368((uint64_t)&v230, v166);
    uint64_t v167 = sub_1B29A07F8();
    v168(v167);
    *(void *)uint64_t v37 = v40;
    *(void *)(v37 + 8) = v42;
    *(void *)(v37 + 16) = v44;
    *(void *)(v37 + 24) = v46;
    *(void *)(v37 + 32) = v48;
    *(void *)(v37 + 40) = v50;
    uint64_t v169 = v307;
    *(void *)(v37 + 48) = v52;
    *(void *)(v37 + 56) = v169;
    uint64_t v170 = v306;
    *(void *)(v37 + 64) = v55;
    *(void *)(v37 + 72) = v170;
    uint64_t v171 = v304;
    *(void *)(v37 + 80) = v305;
    *(void *)(v37 + 88) = v171;
    uint64_t v172 = v302;
    *(void *)(v37 + 96) = v303;
    *(void *)(v37 + 104) = v172;
    uint64_t v173 = v300;
    *(void *)(v37 + 112) = v301;
    *(void *)(v37 + 120) = v173;
    uint64_t v174 = v298;
    *(void *)(v37 + 128) = v299;
    *(void *)(v37 + 136) = v174;
    uint64_t v175 = v296;
    *(void *)(v37 + 144) = v297;
    *(void *)(v37 + 152) = v175;
    uint64_t v176 = v294;
    *(void *)(v37 + 160) = v295;
    *(void *)(v37 + 168) = v176;
    uint64_t v177 = v292;
    *(void *)(v37 + 176) = v293;
    *(void *)(v37 + 184) = v177;
    uint64_t v178 = v290;
    *(void *)(v37 + 192) = v291;
    *(void *)(v37 + 200) = v178;
    uint64_t v179 = v288;
    *(void *)(v37 + 208) = v289;
    *(void *)(v37 + 216) = v179;
    uint64_t v180 = v286;
    *(void *)(v37 + 224) = v287;
    *(void *)(v37 + 232) = v180;
    uint64_t v181 = v284;
    *(void *)(v37 + 240) = v285;
    *(void *)(v37 + 248) = v181;
    uint64_t v182 = v282;
    *(void *)(v37 + 256) = v283;
    *(void *)(v37 + 264) = v182;
    uint64_t v183 = v280;
    *(void *)(v37 + 272) = v281;
    *(void *)(v37 + 280) = v183;
    uint64_t v184 = v278;
    *(void *)(v37 + 288) = v279;
    *(void *)(v37 + 296) = v184;
    uint64_t v185 = v276;
    *(void *)(v37 + 304) = v277;
    *(void *)(v37 + 312) = v185;
    uint64_t v186 = v274;
    *(void *)(v37 + 320) = v275;
    *(void *)(v37 + 328) = v186;
    uint64_t v187 = v272;
    *(void *)(v37 + 336) = v273;
    *(void *)(v37 + 344) = v187;
    uint64_t v188 = v270;
    *(void *)(v37 + 352) = v271;
    *(void *)(v37 + 360) = v188;
    uint64_t v189 = v268;
    *(void *)(v37 + 368) = v269;
    *(void *)(v37 + 376) = v189;
    uint64_t v190 = v266;
    *(void *)(v37 + 384) = v267;
    *(void *)(v37 + 392) = v190;
    uint64_t v191 = v264;
    *(void *)(v37 + 400) = v265;
    *(void *)(v37 + 408) = v191;
    uint64_t v192 = v262;
    *(void *)(v37 + 416) = v263;
    *(void *)(v37 + 424) = v192;
    uint64_t v193 = v260;
    *(void *)(v37 + 432) = v261;
    *(void *)(v37 + 440) = v193;
    uint64_t v194 = v258;
    *(void *)(v37 + 448) = v259;
    *(void *)(v37 + 456) = v194;
    uint64_t v195 = v256;
    *(void *)(v37 + 464) = v257;
    *(void *)(v37 + 472) = v195;
    uint64_t v196 = v254;
    *(void *)(v37 + 480) = v255;
    *(void *)(v37 + 488) = v196;
    uint64_t v197 = v252;
    *(void *)(v37 + 496) = v253;
    *(void *)(v37 + 504) = v197;
    *(void *)(v37 + 512) = v251;
    *(void *)(v37 + 520) = v250;
    *(void *)(v37 + 528) = v249;
    *(void *)(v37 + 536) = v248;
    *(void *)(v37 + 544) = v247;
    *(void *)(v37 + 552) = v246;
    *(void *)(v37 + 560) = v245;
    *(void *)(v37 + 568) = v244;
    *(void *)(v37 + 576) = v243;
    *(void *)(v37 + 584) = v242;
    *(void *)(v37 + 592) = v241;
    *(void *)(v37 + 600) = v240;
    *(void *)(v37 + 608) = v239;
    *(void *)(v37 + 616) = v238;
    *(void *)(v37 + 624) = v237;
    *(void *)(v37 + 632) = v236;
    *(void *)(v37 + 640) = v235[1];
    *(void *)(v37 + 648) = v235[0];
    *(void *)(v37 + 656) = v234;
    *(void *)(v37 + 664) = v233;
    *(void *)(v37 + 672) = v232;
    *(void *)(v37 + 680) = v231;
    *(void *)(v37 + 688) = v230;
    *(void *)(v37 + 696) = v229;
    *(void *)(v37 + 704) = v228;
    *(void *)(v37 + 712) = v227;
    *(void *)(v37 + 720) = v226;
    *(void *)(v37 + 728) = v225;
    *(void *)(v37 + 736) = v224;
    *(void *)(v37 + 744) = v223;
    *(void *)(v37 + 752) = v222;
    *(void *)(v37 + 760) = v221;
    *(void *)(v37 + 768) = v220;
    *(void *)(v37 + 776) = v219;
    *(void *)(v37 + 784) = v218;
    *(void *)(v37 + 792) = v217;
    *(void *)(v37 + 800) = v216;
    *(void *)(v37 + 808) = v215;
    *(void *)(v37 + 816) = v214;
    *(void *)(v37 + 824) = v213;
    *(void *)(v37 + 832) = v212;
    *(void *)(v37 + 840) = v211;
    *(void *)(v37 + 848) = v210;
    *(void *)(v37 + 856) = v209;
    *(void *)(v37 + 864) = v208;
    *(void *)(v37 + 872) = v207;
    *(void *)(v37 + 880) = v206;
    *(void *)(v37 + 888) = v205;
    *(_DWORD *)(v37 + 896) = a18;
    *(_DWORD *)(v37 + 900) = v204;
    *(_DWORD *)(v37 + 904) = v159;
    *(void *)(v37 + 912) = v203;
    *(void *)(v37 + 920) = v202;
    *(void *)(v37 + 928) = v201;
    *(void *)(v37 + 936) = v200;
    *(_DWORD *)(v37 + 944) = v164;
    *(void *)(v37 + 952) = v199;
    *(void *)(v37 + 960) = v198;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v35);
  sub_1B2AA44F0();
}

uint64_t sub_1B2AA0BFC()
{
  unint64_t v0 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B2AA0C48()
{
  uint64_t v0 = sub_1B2E83808();
  swift_bridgeObjectRelease();
  uint64_t v1 = 0;
  uint64_t result = 29;
  switch(v0)
  {
    case 0:
      goto LABEL_31;
    case 1:
      uint64_t v1 = 1;
      goto LABEL_31;
    case 2:
      uint64_t v1 = 2;
      goto LABEL_31;
    case 3:
      uint64_t v1 = 3;
      goto LABEL_31;
    case 4:
      uint64_t v1 = 4;
      goto LABEL_31;
    case 5:
      uint64_t v1 = 5;
      goto LABEL_31;
    case 6:
      uint64_t v1 = 6;
      goto LABEL_31;
    case 7:
      uint64_t v1 = 7;
      goto LABEL_31;
    case 8:
      uint64_t v1 = 8;
      goto LABEL_31;
    case 9:
      uint64_t v1 = 9;
      goto LABEL_31;
    case 10:
      uint64_t v1 = 10;
      goto LABEL_31;
    case 11:
      uint64_t v1 = 11;
      goto LABEL_31;
    case 12:
      uint64_t v1 = 12;
      goto LABEL_31;
    case 13:
      uint64_t v1 = 13;
      goto LABEL_31;
    case 14:
      uint64_t v1 = 14;
      goto LABEL_31;
    case 15:
      uint64_t v1 = 15;
      goto LABEL_31;
    case 16:
      uint64_t v1 = 16;
      goto LABEL_31;
    case 17:
      uint64_t v1 = 17;
      goto LABEL_31;
    case 18:
      uint64_t v1 = 18;
      goto LABEL_31;
    case 19:
      uint64_t v1 = 19;
      goto LABEL_31;
    case 20:
      uint64_t v1 = 20;
      goto LABEL_31;
    case 21:
      uint64_t v1 = 21;
      goto LABEL_31;
    case 22:
      uint64_t v1 = 22;
      goto LABEL_31;
    case 23:
      uint64_t v1 = 23;
      goto LABEL_31;
    case 24:
      uint64_t v1 = 24;
      goto LABEL_31;
    case 25:
      uint64_t v1 = 25;
      goto LABEL_31;
    case 26:
      uint64_t v1 = 26;
      goto LABEL_31;
    case 27:
      uint64_t v1 = 27;
      goto LABEL_31;
    case 28:
      uint64_t v1 = 28;
LABEL_31:
      uint64_t result = v1;
      break;
    case 29:
      return result;
    case 30:
      uint64_t result = 30;
      break;
    case 31:
      uint64_t result = 31;
      break;
    case 32:
      uint64_t result = 32;
      break;
    case 33:
      uint64_t result = 33;
      break;
    case 34:
      uint64_t result = 34;
      break;
    case 35:
      uint64_t result = 35;
      break;
    case 36:
      uint64_t result = 36;
      break;
    case 37:
      uint64_t result = 37;
      break;
    case 38:
      uint64_t result = 38;
      break;
    case 39:
      uint64_t result = 39;
      break;
    case 40:
      uint64_t result = 40;
      break;
    case 41:
      uint64_t result = 41;
      break;
    case 42:
      uint64_t result = 42;
      break;
    case 43:
      uint64_t result = 43;
      break;
    case 44:
      uint64_t result = 44;
      break;
    case 45:
      uint64_t result = 45;
      break;
    case 46:
      uint64_t result = 46;
      break;
    case 47:
      uint64_t result = 47;
      break;
    case 48:
      uint64_t result = 48;
      break;
    case 49:
      uint64_t result = 49;
      break;
    case 50:
      uint64_t result = 50;
      break;
    case 51:
      uint64_t result = 51;
      break;
    case 52:
      uint64_t result = 52;
      break;
    case 53:
      uint64_t result = 53;
      break;
    case 54:
      uint64_t result = 54;
      break;
    case 55:
      uint64_t result = 55;
      break;
    case 56:
      uint64_t result = 56;
      break;
    case 57:
      uint64_t result = 57;
      break;
    case 58:
      uint64_t result = 58;
      break;
    case 59:
      uint64_t result = 59;
      break;
    case 60:
      uint64_t result = 60;
      break;
    case 61:
      uint64_t result = 61;
      break;
    case 62:
      uint64_t result = 62;
      break;
    case 63:
      uint64_t result = 63;
      break;
    case 64:
      uint64_t result = 64;
      break;
    case 65:
      uint64_t result = 65;
      break;
    case 66:
      uint64_t result = 66;
      break;
    case 67:
      uint64_t result = 67;
      break;
    case 68:
      uint64_t result = 68;
      break;
    case 69:
      uint64_t result = 69;
      break;
    case 70:
      uint64_t result = 70;
      break;
    case 71:
      uint64_t result = 71;
      break;
    case 72:
      uint64_t result = 72;
      break;
    case 73:
      uint64_t result = 73;
      break;
    case 74:
      uint64_t result = 74;
      break;
    case 75:
      uint64_t result = 75;
      break;
    case 76:
      uint64_t result = 76;
      break;
    case 77:
      uint64_t result = 77;
      break;
    case 78:
      uint64_t result = 78;
      break;
    case 79:
      uint64_t result = 79;
      break;
    case 80:
      uint64_t result = 80;
      break;
    case 81:
      uint64_t result = 81;
      break;
    case 82:
      uint64_t result = 82;
      break;
    case 83:
      uint64_t result = 83;
      break;
    case 84:
      uint64_t result = 84;
      break;
    case 85:
      uint64_t result = 85;
      break;
    case 86:
      uint64_t result = 86;
      break;
    case 87:
      uint64_t result = 87;
      break;
    case 88:
      uint64_t result = 88;
      break;
    case 89:
      uint64_t result = 89;
      break;
    case 90:
      uint64_t result = 90;
      break;
    case 91:
      uint64_t result = 91;
      break;
    case 92:
      uint64_t result = 92;
      break;
    case 93:
      uint64_t result = 93;
      break;
    case 94:
      uint64_t result = 94;
      break;
    case 95:
      uint64_t result = 95;
      break;
    case 96:
      uint64_t result = 96;
      break;
    case 97:
      uint64_t result = 97;
      break;
    case 98:
      uint64_t result = 98;
      break;
    case 99:
      uint64_t result = 99;
      break;
    case 100:
      uint64_t result = 100;
      break;
    case 101:
      uint64_t result = 101;
      break;
    case 102:
      uint64_t result = 102;
      break;
    case 103:
      uint64_t result = 103;
      break;
    case 104:
      uint64_t result = 104;
      break;
    case 105:
      uint64_t result = 105;
      break;
    case 106:
      uint64_t result = 106;
      break;
    case 107:
      uint64_t result = 107;
      break;
    case 108:
      uint64_t result = 108;
      break;
    case 109:
      uint64_t result = 109;
      break;
    case 110:
      uint64_t result = 110;
      break;
    case 111:
      uint64_t result = 111;
      break;
    case 112:
      uint64_t result = 112;
      break;
    case 113:
      uint64_t result = 113;
      break;
    case 114:
      uint64_t result = 114;
      break;
    case 115:
      uint64_t result = 115;
      break;
    case 116:
      uint64_t result = 116;
      break;
    case 117:
      uint64_t result = 117;
      break;
    case 118:
      uint64_t result = 118;
      break;
    case 119:
      uint64_t result = 119;
      break;
    case 120:
      uint64_t result = 120;
      break;
    case 121:
      uint64_t result = 121;
      break;
    default:
      uint64_t result = 122;
      break;
  }
  return result;
}

#error "1B2AA1288: call analysis failed (funcsize=6)"

void sub_1B2AA1294()
{
}

uint64_t sub_1B2AA12B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B29ADF04(*a1, *a2);
}

uint64_t sub_1B2AA12BC()
{
  return sub_1B29AE5DC(*v0);
}

uint64_t sub_1B2AA12C4(uint64_t a1)
{
  return sub_1B2AA63A8(a1, *v1);
}

uint64_t sub_1B2AA12CC()
{
  return sub_1B29F9914();
}

uint64_t sub_1B2AA12D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2AA0BFC();
  *a1 = result;
  return result;
}

unint64_t sub_1B2AA1304@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B2A9DC90(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B2AA1330(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B29ADEEC(*a1, *a2);
}

uint64_t sub_1B2AA133C()
{
  return sub_1B29AE5F4(*v0);
}

uint64_t sub_1B2AA1344(uint64_t a1)
{
  return sub_1B2AA6390(a1, *v1);
}

uint64_t sub_1B2AA134C()
{
  return sub_1B29F98FC();
}

uint64_t sub_1B2AA1354@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2AA0C48();
  *a1 = result;
  return result;
}

unint64_t sub_1B2AA1384@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B2A9DD78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B2AA13B0()
{
  return sub_1B2AA1278(*v0);
}

uint64_t sub_1B2AA13B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2AA1274();
  *a1 = result;
  return result;
}

void sub_1B2AA13E0(unsigned char *a1@<X8>)
{
  *a1 = 122;
}

void sub_1B2AA13EC(void *a1@<X8>)
{
  *a1 = &unk_1F0AB73E0;
}

uint64_t sub_1B2AA13FC(uint64_t a1)
{
  unint64_t v2 = sub_1B2A9FC6C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AA1438(uint64_t a1)
{
  unint64_t v2 = sub_1B2A9FC6C();

  return MEMORY[0x1F41862B0](a1, v2);
}

IntelligencePlatform::PopularityMetric __swiftcall PopularityMetric.init(name:columnName:)(Swift::String name, Swift::String columnName)
{
  *unint64_t v2 = name;
  v2[1] = columnName;
  result.columnName = columnName;
  result.name = name;
  return result;
}

uint64_t PopularityMetric.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PopularityMetric.columnName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

IntelligencePlatform::PopularityMetric_optional __swiftcall PopularityMetric.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v4 = v1;
  unint64_t v5 = 0xE900000000000065;
  unint64_t v6 = 0x6B6E615265676170;
  BOOL v7 = rawValue._countAndFlagsBits == 0x6B6E615265676170 && rawValue._object == (void *)0xE800000000000000;
  if (v7)
  {
    sub_1B2AA4458();
    object = (void *)0xE800000000000000;
    uint64_t v10 = swift_bridgeObjectRelease();
    unint64_t v5 = 0xE90000000000006BLL;
    goto LABEL_9;
  }
  object = rawValue._object;
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  if ((sub_1B299D7AC() & 1) == 0)
  {
    unint64_t v6 = 0x6565726765446E69;
    if (countAndFlagsBits == 0x6565726765446E69 && object == (void *)0xE800000000000000)
    {
      sub_1B2AA4424();
      object = (void *)0xE800000000000000;
      uint64_t v10 = swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    if (sub_1B299D7AC())
    {
      sub_1B2AA4424();
      uint64_t v10 = swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    unint64_t v6 = 0x657267654474756FLL;
    BOOL v15 = countAndFlagsBits == 0x657267654474756FLL && object == (void *)0xE900000000000065;
    if (v15 || (sub_1B299D7AC() & 1) != 0)
    {
      unint64_t v5 = 0xEA00000000006565;
      sub_1B2AA44B4();
      uint64_t v10 = swift_bridgeObjectRelease();
      object = (void *)0xE900000000000065;
      goto LABEL_9;
    }
    unint64_t v3 = 0xD000000000000011;
    sub_1B2AA4518();
    unint64_t v6 = 0x6E4967654474756FLL;
    BOOL v17 = countAndFlagsBits == 0x6E4967654474756FLL && object == v16;
    if (v17 || (sub_1B299B940(), (sub_1B299D7AC() & 1) != 0))
    {
      uint64_t v10 = swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000010;
      unint64_t v5 = 0x80000001B2E99760;
      object = (void *)0xEE00656572676544;
      goto LABEL_9;
    }
    sub_1B2AA4518();
    unint64_t v6 = 0x754F67654474756FLL;
    BOOL v19 = countAndFlagsBits == 0x754F67654474756FLL && object == v18;
    if (v19 || (sub_1B299B940(), (sub_1B299D7AC() & 1) != 0))
    {
      uint64_t v10 = swift_bridgeObjectRelease();
      unint64_t v5 = 0x80000001B2E99780;
      object = (void *)0xEF65657267654474;
      goto LABEL_9;
    }
    uint64_t v20 = "sameTypeInDegree";
    if (countAndFlagsBits == 0xD000000000000010 && (sub_1B299F584(), v7)
      || (unint64_t v2 = (unint64_t)(v20 - 32) | 0x8000000000000000, (sub_1B299D7AC() & 1) != 0))
    {
      uint64_t v10 = swift_bridgeObjectRelease();
      unint64_t v5 = 0x80000001B2E99760;
      unint64_t v6 = 0xD000000000000010;
      object = (void *)v2;
      unint64_t v3 = 0xD000000000000010;
      goto LABEL_9;
    }
    id v21 = "sameTypeOutDegree";
    if (countAndFlagsBits == 0xD000000000000011 && (sub_1B299F584(), v7)
      || (unint64_t v2 = (unint64_t)(v21 - 32) | 0x8000000000000000, (sub_1B299D7AC() & 1) != 0)
      || (uint64_t v22 = "otherTypeInDegree", countAndFlagsBits == 0xD000000000000011) && (sub_1B299F584(), v7)
      || (unint64_t v2 = (unint64_t)(v22 - 32) | 0x8000000000000000, (sub_1B299D7AC() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000014;
      sub_1B2AA45E0();
LABEL_47:
      object = (void *)v2;
      goto LABEL_9;
    }
    uint64_t v23 = "otherTypeOutDegree";
    if (countAndFlagsBits == 0xD000000000000012 && (sub_1B299F584(), v7)
      || (unint64_t v2 = (unint64_t)(v23 - 32) | 0x8000000000000000, (sub_1B299D7AC() & 1) != 0))
    {
      uint64_t v10 = swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000012;
      unint64_t v3 = 0xD000000000000015;
      unint64_t v5 = 0x80000001B2E99700;
      goto LABEL_47;
    }
    unint64_t v6 = 0x656572676564;
    if (countAndFlagsBits == 0x656572676564 && object == (void *)0xE600000000000000)
    {
      object = (void *)0xE600000000000000;
      uint64_t v10 = swift_bridgeObjectRelease();
    }
    else
    {
      if ((sub_1B299D7AC() & 1) == 0)
      {
        sub_1B2AA4518();
        unint64_t v6 = 0x6544656572676564;
        BOOL v26 = countAndFlagsBits == 0x6544656572676564 && object == v25;
        if (v26 || (sub_1B299B940(), (sub_1B299D7AC() & 1) != 0))
        {
          sub_1B2AA4398();
          uint64_t v10 = swift_bridgeObjectRelease();
          object = (void *)0xEC00000065657267;
          goto LABEL_9;
        }
        uint64_t v27 = "entitySameDegree";
        if (countAndFlagsBits == 0xD000000000000010 && (sub_1B299F584(), v7)
          || (unint64_t v2 = (unint64_t)(v27 - 32) | 0x8000000000000000, (sub_1B299D7AC() & 1) != 0))
        {
          uint64_t v10 = swift_bridgeObjectRelease();
          unint64_t v3 = 0xD000000000000012;
          unint64_t v5 = 0x80000001B2E996E0;
          unint64_t v6 = 0xD000000000000010;
          goto LABEL_47;
        }
        if (countAndFlagsBits == 0xD000000000000011 && (sub_1B2AA4488(), v7)
          || (sub_1B2AA4528(), (sub_1B299D7AC() & 1) != 0))
        {
          swift_bridgeObjectRelease();
          unint64_t v3 = 0xD000000000000013;
          sub_1B2AA45E0();
          object = (void *)0xD000000000000010;
          goto LABEL_9;
        }
        unint64_t v6 = 0x6C6169636F73;
        if (countAndFlagsBits == 0x6C6169636F73 && object == (void *)0xE600000000000000)
        {
          object = (void *)0xE600000000000000;
          uint64_t v10 = swift_bridgeObjectRelease();
        }
        else
        {
          if ((sub_1B299D7AC() & 1) == 0)
          {
            uint64_t v10 = swift_bridgeObjectRetain();
            unint64_t v6 = countAndFlagsBits;
            unint64_t v3 = countAndFlagsBits;
            unint64_t v5 = (unint64_t)object;
            goto LABEL_9;
          }
          uint64_t v10 = swift_bridgeObjectRelease();
          object = (void *)0xE600000000000000;
        }
        unint64_t v3 = 0x6C6169636F73;
LABEL_67:
        unint64_t v5 = 0xE600000000000000;
        goto LABEL_9;
      }
      uint64_t v10 = swift_bridgeObjectRelease();
      object = (void *)0xE600000000000000;
    }
    unint64_t v3 = 0x656572676564;
    goto LABEL_67;
  }
  sub_1B2AA4458();
  uint64_t v10 = swift_bridgeObjectRelease();
  unint64_t v5 = 0xE90000000000006BLL;
LABEL_7:
  object = (void *)0xE800000000000000;
LABEL_9:
  *unint64_t v4 = v6;
  v4[1] = (unint64_t)object;
  v4[2] = v3;
  v4[3] = v5;
  result.value.columnName._object = v13;
  result.value.columnName._uint64_t countAndFlagsBits = v12;
  result.value.name._object = v11;
  result.value.name._uint64_t countAndFlagsBits = v10;
  return result;
}

IntelligencePlatform::PopularityMetric_optional __swiftcall PopularityMetric.init(columnName:)(Swift::String columnName)
{
  unint64_t v4 = v1;
  unint64_t v5 = 0xE900000000000065;
  sub_1B2AA4458();
  unint64_t v8 = 0xE90000000000006BLL;
  BOOL v9 = v6 == v3 && v7 == 0xE90000000000006BLL;
  if (v9)
  {
    sub_1B2AA45AC();
    uint64_t v11 = swift_bridgeObjectRelease();
    unint64_t v5 = 0xE800000000000000;
LABEL_8:
    unint64_t v10 = v8;
    goto LABEL_15;
  }
  unint64_t v10 = v7;
  unint64_t v2 = v6;
  if (sub_1B299D7AC())
  {
    sub_1B2AA45AC();
    uint64_t v11 = swift_bridgeObjectRelease();
    unint64_t v10 = 0xE90000000000006BLL;
    unint64_t v5 = 0xE800000000000000;
    goto LABEL_15;
  }
  sub_1B2AA4424();
  BOOL v15 = v2 == v3 && v10 == 0xE900000000000065;
  if (v15 || (sub_1B299D7AC() & 1) != 0)
  {
    sub_1B2AA4598();
    uint64_t v11 = swift_bridgeObjectRelease();
    unint64_t v5 = 0xE800000000000000;
    unint64_t v10 = 0xE900000000000065;
    goto LABEL_15;
  }
  sub_1B2AA44B4();
  BOOL v17 = v2 == v3 && v10 == v16;
  if (v17 || (sub_1B299D7AC() & 1) != 0)
  {
    sub_1B2AA4584();
    uint64_t v11 = swift_bridgeObjectRelease();
    unint64_t v10 = 0xEA00000000006565;
    goto LABEL_15;
  }
  sub_1B2AA4578();
  uint64_t v18 = "entity_in_degree";
  if (v2 == v3 && (sub_1B2AA4488(), v9)
    || (unint64_t v19 = (unint64_t)(v18 - 32),
        unint64_t v8 = (unint64_t)(v18 - 32) | 0x8000000000000000,
        (sub_1B299D7AC() & 1) != 0))
  {
    sub_1B2AA43E0();
    uint64_t v11 = swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v20 = "entity_out_degree";
  if (v2 == v3 + 1 && (sub_1B2AA4488(), v9)
    || (unint64_t v8 = (unint64_t)(v20 - 32) | 0x8000000000000000, (sub_1B299D7AC() & 1) != 0))
  {
    sub_1B2AA43BC();
    uint64_t v11 = swift_bridgeObjectRelease();
    ++v3;
    goto LABEL_8;
  }
  unint64_t v8 = v3 + 3;
  if (v2 == v3 + 3 && v10 == 0x80000001B2E997A0 || (sub_1B299D7AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    unint64_t v10 = v19 | 0x8000000000000000;
    sub_1B2AA45CC();
    goto LABEL_15;
  }
  unint64_t v21 = v3 + 4;
  uint64_t v22 = "same_type_out_degree";
  if (v2 == v3 + 4 && (sub_1B299F584(), v9)
    || (v19 = (unint64_t)(v22 - 32) | 0x8000000000000000, unint64_t v5 = v21, (sub_1B299D7AC() & 1) != 0)
    || (uint64_t v23 = "other_type_in_degree", v2 == v5) && (sub_1B299F584(), v9))
  {
    swift_bridgeObjectRelease();
    unint64_t v2 = v3 + 1;
    v3 += 4;
LABEL_44:
    sub_1B2AA45C0();
LABEL_45:
    unint64_t v10 = v19;
    goto LABEL_15;
  }
  unint64_t v19 = 0xD000000000000014;
  unint64_t v24 = (unint64_t)(v23 - 32) | 0x8000000000000000;
  if (sub_1B299D7AC())
  {
    swift_bridgeObjectRelease();
    unint64_t v2 = 0xD000000000000011;
    sub_1B2AA45C0();
    unint64_t v10 = v24;
    unint64_t v3 = 0xD000000000000014;
    goto LABEL_15;
  }
  id v25 = "other_type_out_degree";
  if (v2 == 0xD000000000000015 && (sub_1B299F584(), v9)
    || (unint64_t v19 = (unint64_t)(v25 - 32) | 0x8000000000000000, (sub_1B299D7AC() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    sub_1B2AA4578();
    unint64_t v2 = v24 + 2;
    unint64_t v3 = v24 + 5;
    goto LABEL_44;
  }
  if (v2 == 0x656572676564 && v10 == 0xE600000000000000)
  {
    unint64_t v5 = 0xE600000000000000;
    uint64_t v11 = swift_bridgeObjectRelease();
    goto LABEL_65;
  }
  if (sub_1B299D7AC())
  {
    uint64_t v11 = swift_bridgeObjectRelease();
    unint64_t v5 = 0xE600000000000000;
LABEL_65:
    unint64_t v3 = 0x656572676564;
    unint64_t v10 = 0xE600000000000000;
    unint64_t v2 = 0x656572676564;
    goto LABEL_15;
  }
  BOOL v27 = v2 == 0x645F797469746E65 && v10 == 0xED00006565726765;
  if (v27 || (sub_1B299B940(), (sub_1B299D7AC() & 1) != 0))
  {
    sub_1B2AA4404();
    uint64_t v11 = swift_bridgeObjectRelease();
    unint64_t v3 = 0x645F797469746E65;
    unint64_t v10 = 0xED00006565726765;
    goto LABEL_15;
  }
  uint64_t v28 = "entity_same_degree";
  if (v2 == 0xD000000000000012 && (sub_1B299F584(), v9)
    || (unint64_t v19 = (unint64_t)(v28 - 32) | 0x8000000000000000, (sub_1B299D7AC() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    sub_1B2AA4578();
    unint64_t v3 = v24 + 2;
    sub_1B2AA45CC();
    goto LABEL_45;
  }
  uint64_t v29 = "entity_other_degree";
  if (v2 == v8)
  {
    sub_1B2AA4488();
    if (v9)
    {
      swift_bridgeObjectRelease();
      sub_1B2AA4578();
      unint64_t v2 = v24 + 1;
      unint64_t v3 = v24 + 3;
      sub_1B2AA45C0();
      goto LABEL_8;
    }
  }
  unint64_t v19 = (unint64_t)(v29 - 32) | 0x8000000000000000;
  if (sub_1B299D7AC())
  {
    swift_bridgeObjectRelease();
    unint64_t v2 = 0xD000000000000011;
    sub_1B2AA45C0();
    unint64_t v3 = 0xD000000000000013;
    goto LABEL_45;
  }
  if (v2 == 0x6C6169636F73 && v10 == 0xE600000000000000)
  {
    unint64_t v5 = 0xE600000000000000;
    uint64_t v11 = swift_bridgeObjectRelease();
  }
  else
  {
    if ((sub_1B299D7AC() & 1) == 0)
    {
      uint64_t v11 = swift_bridgeObjectRetain();
      unint64_t v5 = v10;
      unint64_t v3 = v2;
      goto LABEL_15;
    }
    uint64_t v11 = swift_bridgeObjectRelease();
    unint64_t v5 = 0xE600000000000000;
  }
  unint64_t v3 = 0x6C6169636F73;
  unint64_t v10 = 0xE600000000000000;
  unint64_t v2 = 0x6C6169636F73;
LABEL_15:
  *unint64_t v4 = v2;
  v4[1] = v5;
  v4[2] = v3;
  v4[3] = v10;
  result.value.columnName._object = v14;
  result.value.columnName._uint64_t countAndFlagsBits = v13;
  result.value.name._object = v12;
  result.value.name._uint64_t countAndFlagsBits = v11;
  return result;
}

uint64_t sub_1B2AA20F8()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2AA2158()
{
  return sub_1B2E82788();
}

unint64_t sub_1B2AA21A8(Swift::String *a1)
{
  return (unint64_t)PopularityMetric.init(rawValue:)(*a1);
}

uint64_t sub_1B2AA21B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PopularityMetric.name.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2AA21DC()
{
  return sub_1B29AE63C(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1B2AA21E8(uint64_t a1)
{
  return sub_1B2AA5D4C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1B2AA21F4(uint64_t a1)
{
  return sub_1B29F9704(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1B2AA2200(uint64_t a1, uint64_t a2)
{
  return sub_1B2AA2660(a1, a2, (uint64_t (*)(void))sub_1B2AA4198, (uint64_t (*)(void))sub_1B2AA414C);
}

uint64_t sub_1B2AA222C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2AA2708(a1, a2, a3, (uint64_t (*)(void))sub_1B2AA4100, (uint64_t (*)(void))sub_1B2AA414C);
}

uint64_t sub_1B2AA2258(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2AA2794(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_1B29B19C8);
}

uint64_t sub_1B2AA2270(uint64_t a1)
{
  unint64_t v2 = sub_1B2AA40B4();

  return MEMORY[0x1F411AFE0](a1, v2);
}

uint64_t sub_1B2AA22BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2AA40B4();

  return MEMORY[0x1F411AFF0](a1, a2, a3, v6);
}

IntelligencePlatform::DescriptionSignal_optional __swiftcall DescriptionSignal.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  unint64_t v6 = v1;
  unint64_t v7 = 0xD000000000000011;
  if (rawValue._countAndFlagsBits == 0xD000000000000011
    && (unint64_t v2 = 0x80000001B2E997C0, rawValue._object == (void *)0x80000001B2E997C0)
    || (sub_1B2AA4528(), (sub_1B2AA4498() & 1) != 0))
  {
    uint64_t v8 = swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = 0xD000000000000013;
    unint64_t v3 = 0x80000001B2E997E0;
    object = (void *)v2;
  }
  else
  {
    unint64_t v7 = 0x6E6F437361696C61;
    BOOL v12 = countAndFlagsBits == 0x6E6F437361696C61 && object == (void *)0xEB00000000746163;
    if (v12 || (sub_1B2AA4498() & 1) != 0)
    {
      sub_1B299E650();
      uint64_t v8 = swift_bridgeObjectRelease();
      object = (void *)0xEB00000000746163;
    }
    else
    {
      uint64_t v8 = swift_bridgeObjectRetain();
      unint64_t v7 = countAndFlagsBits;
      unint64_t v3 = (unint64_t)object;
    }
  }
  *unint64_t v6 = v7;
  v6[1] = (unint64_t)object;
  v6[2] = countAndFlagsBits;
  v6[3] = v3;
  result.value.columnName._object = v11;
  result.value.columnName._uint64_t countAndFlagsBits = v10;
  result.value.name._object = v9;
  result.value.name._uint64_t countAndFlagsBits = v8;
  return result;
}

IntelligencePlatform::DescriptionSignal_optional __swiftcall DescriptionSignal.init(columnName:)(Swift::String columnName)
{
  object = columnName._object;
  uint64_t countAndFlagsBits = columnName._countAndFlagsBits;
  unint64_t v5 = v1;
  unint64_t v6 = 0xD000000000000013;
  if (columnName._countAndFlagsBits == 0xD000000000000013 && columnName._object == (void *)0x80000001B2E997E0
    || (sub_1B2AA4498() & 1) != 0)
  {
    uint64_t v7 = swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = 0xD000000000000011;
    unint64_t v2 = 0x80000001B2E997C0;
    object = (void *)0x80000001B2E997E0;
  }
  else
  {
    unint64_t v6 = 0x6F635F7361696C61;
    BOOL v11 = countAndFlagsBits == 0x6F635F7361696C61 && object == (void *)0xEC0000007461636ELL;
    if (v11 || (sub_1B2AA4498() & 1) != 0)
    {
      sub_1B2AA4438();
      uint64_t v7 = swift_bridgeObjectRelease();
      object = (void *)0xEC0000007461636ELL;
    }
    else
    {
      uint64_t v7 = swift_bridgeObjectRetain();
      unint64_t v2 = (unint64_t)object;
      unint64_t v6 = countAndFlagsBits;
    }
  }
  *unint64_t v5 = countAndFlagsBits;
  v5[1] = v2;
  v5[2] = v6;
  v5[3] = (uint64_t)object;
  result.value.columnName._object = v10;
  result.value.columnName._uint64_t countAndFlagsBits = v9;
  result.value.name._object = v8;
  result.value.name._uint64_t countAndFlagsBits = v7;
  return result;
}

uint64_t sub_1B2AA2578()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2AA25D8()
{
  return sub_1B2E82788();
}

unint64_t sub_1B2AA2628(Swift::String *a1)
{
  return (unint64_t)DescriptionSignal.init(rawValue:)(*a1);
}

uint64_t sub_1B2AA2634(uint64_t a1, uint64_t a2)
{
  return sub_1B2AA2660(a1, a2, (uint64_t (*)(void))sub_1B2AA4068, (uint64_t (*)(void))sub_1B2AA401C);
}

uint64_t sub_1B2AA2660(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v7 = a3();
  uint64_t v8 = a4();
  uint64_t v9 = MEMORY[0x1E4F62F70];

  return MEMORY[0x1F411B018](a1, a2, v7, v8, v9);
}

uint64_t sub_1B2AA26DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2AA2708(a1, a2, a3, (uint64_t (*)(void))sub_1B2AA3FD0, (uint64_t (*)(void))sub_1B2AA401C);
}

uint64_t sub_1B2AA2708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v9 = a4();
  uint64_t v10 = a5();
  uint64_t v11 = MEMORY[0x1E4F62F70];

  return MEMORY[0x1F411B028](a1, a2, a3, v9, v10, v11);
}

uint64_t sub_1B2AA2794(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void, void, void))
{
  return a5(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1B2AA27B8(uint64_t a1)
{
  unint64_t v2 = sub_1B2AA3F84();

  return MEMORY[0x1F411AFE0](a1, v2);
}

uint64_t sub_1B2AA2804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2AA3F84();

  return MEMORY[0x1F411AFF0](a1, a2, a3, v6);
}

__n128 Neighbor.init(identifier:relationPredicate:direction:type:)@<Q0>(unint64_t *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unsigned __int8 *a4@<X3>, __n128 *a5@<X4>, __n128 *a6@<X8>)
{
  unsigned __int8 v6 = *a4;
  __n128 result = *a5;
  unint64_t v8 = a5[1].n128_u64[0];
  unint64_t v9 = a5[1].n128_u64[1];
  unsigned __int8 v10 = a5[2].n128_u8[0];
  a6->n128_u64[0] = *a1;
  a6->n128_u64[1] = a2;
  a6[1].n128_u64[0] = a3;
  a6[1].n128_u8[8] = v6;
  a6[2] = result;
  a6[3].n128_u64[0] = v8;
  a6[3].n128_u64[1] = v9;
  a6[4].n128_u8[0] = v10;
  return result;
}

uint64_t static Neighbor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  char v2 = *(unsigned char *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  BOOL v8 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (v8 || (v9 = sub_1B2E837A8(), uint64_t result = 0, (v9 & 1) != 0))
  {
    if (sub_1B29AB618(v2, v5))
    {
      if (v3 == v6 && v4 == v7) {
        return 1;
      }
      return sub_1B2E837A8();
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B2AA2968(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B2E99800 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 1701869940 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_1B2AA2B1C(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6F69746365726964;
      break;
    case 3:
      unint64_t result = 1701869940;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2AA2BB4()
{
  return sub_1B2AA2B1C(*v0);
}

uint64_t sub_1B2AA2BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AA2968(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AA2BE4(uint64_t a1)
{
  unint64_t v2 = sub_1B2AA2E34();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AA2C20(uint64_t a1)
{
  unint64_t v2 = sub_1B2AA2E34();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Neighbor.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3C5E0);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AA2E34();
  sub_1B2E83A38();
  sub_1B29CB42C();
  sub_1B2AA4374();
  if (!v1)
  {
    sub_1B2E83688();
    sub_1B2AA2E80();
    sub_1B2AA4374();
    sub_1B2A6F5AC();
    sub_1B2AA4374();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t sub_1B2AA2E34()
{
  unint64_t result = qword_1E9C3C5E8;
  if (!qword_1E9C3C5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C5E8);
  }
  return result;
}

unint64_t sub_1B2AA2E80()
{
  unint64_t result = qword_1E9C3C5F0;
  if (!qword_1E9C3C5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C5F0);
  }
  return result;
}

uint64_t Neighbor.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C3C5F8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AA2E34();
  sub_1B2E83A18();
  if (v2) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  sub_1B29CB3E0();
  sub_1B2AA44C8();
  uint64_t v6 = v14;
  LOBYTE(v14) = 1;
  uint64_t v7 = sub_1B2E83568();
  uint64_t v10 = v9;
  uint64_t v13 = v7;
  sub_1B2AA3130();
  swift_bridgeObjectRetain();
  sub_1B2E835B8();
  sub_1B2A6F514();
  sub_1B2AA44C8();
  uint64_t v11 = sub_1B2AA4540();
  v12(v11);
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v10;
  *(unsigned char *)(a2 + 24) = 1;
  *(void *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = v15;
  *(void *)(a2 + 48) = v16;
  *(void *)(a2 + 56) = v17;
  *(unsigned char *)(a2 + 64) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B2AA3130()
{
  unint64_t result = qword_1E9C3C600;
  if (!qword_1E9C3C600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C600);
  }
  return result;
}

uint64_t sub_1B2AA317C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Neighbor.init(from:)(a1, a2);
}

uint64_t sub_1B2AA3194(void *a1)
{
  return Neighbor.encode(to:)(a1);
}

IntelligencePlatform::RelationDirection_optional __swiftcall RelationDirection.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t RelationDirection.rawValue.getter()
{
  if (*v0) {
    return 0x6472617774756FLL;
  }
  else {
    return 0x647261776E69;
  }
}

unint64_t sub_1B2AA3250()
{
  unint64_t result = qword_1E9C3C608;
  if (!qword_1E9C3C608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C608);
  }
  return result;
}

unint64_t sub_1B2AA32A0()
{
  unint64_t result = qword_1E9C3C610;
  if (!qword_1E9C3C610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C610);
  }
  return result;
}

unint64_t sub_1B2AA32F0()
{
  unint64_t result = qword_1E9C3C618;
  if (!qword_1E9C3C618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C618);
  }
  return result;
}

unint64_t sub_1B2AA3340()
{
  unint64_t result = qword_1E9C3C620;
  if (!qword_1E9C3C620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C620);
  }
  return result;
}

unint64_t sub_1B2AA3390()
{
  unint64_t result = qword_1E9C3C628;
  if (!qword_1E9C3C628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C628);
  }
  return result;
}

unint64_t sub_1B2AA33E0()
{
  unint64_t result = qword_1E9C3C630;
  if (!qword_1E9C3C630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C630);
  }
  return result;
}

uint64_t sub_1B2AA342C(char *a1, char *a2)
{
  return sub_1B29AB618(*a1, *a2);
}

unint64_t sub_1B2AA343C()
{
  unint64_t result = qword_1E9C3C638;
  if (!qword_1E9C3C638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C638);
  }
  return result;
}

uint64_t sub_1B2AA3488()
{
  return sub_1B29AE7A0();
}

uint64_t sub_1B2AA3490()
{
  return sub_1B2AA5AD4();
}

uint64_t sub_1B2AA3498()
{
  return sub_1B29F9668();
}

IntelligencePlatform::RelationDirection_optional sub_1B2AA34A0(Swift::String *a1)
{
  return RelationDirection.init(rawValue:)(*a1);
}

uint64_t sub_1B2AA34AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RelationDirection.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2AA34D4()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2AA3534()
{
  return sub_1B2E82788();
}

void *initializeWithCopy for EntityFeatures(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x3C8uLL);
}

uint64_t getEnumTagSinglePayload for EntityFeatures(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 968)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EntityFeatures(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 968) = v3;
  return result;
}

void type metadata accessor for EntityFeatures()
{
}

void type metadata accessor for PopularityMetric()
{
}

void type metadata accessor for DescriptionSignal()
{
}

uint64_t destroy for Neighbor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Neighbor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Neighbor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

void *initializeWithTake for Neighbor(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t assignWithTake for Neighbor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for Neighbor(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Neighbor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for Neighbor()
{
}

unsigned char *storeEnumTagSinglePayload for RelationDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AA3A40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for RelationDirection()
{
}

unsigned char *storeEnumTagSinglePayload for Neighbor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AA3B40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Neighbor.CodingKeys()
{
  return &type metadata for Neighbor.CodingKeys;
}

uint64_t sub_1B2AA3B78(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0x87)
  {
    if (a2 + 121 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 121) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 122;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x7A;
  int v5 = v6 - 122;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_1B2AA3C00(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 121 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 121) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x87) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x86)
  {
    unsigned int v6 = ((a2 - 135) >> 8) + 1;
    *uint64_t result = a2 + 121;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AA3CCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 121;
        break;
    }
  }
  return result;
}

void type metadata accessor for EntityFeatures.CodingKeys()
{
}

unint64_t sub_1B2AA3D04()
{
  unint64_t result = qword_1E9C3C640;
  if (!qword_1E9C3C640)
  {
    sub_1B29C3588(&qword_1E9C3C648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C640);
  }
  return result;
}

unint64_t sub_1B2AA3D5C()
{
  unint64_t result = qword_1E9C3C650;
  if (!qword_1E9C3C650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C650);
  }
  return result;
}

unint64_t sub_1B2AA3DAC()
{
  unint64_t result = qword_1E9C3C658;
  if (!qword_1E9C3C658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C658);
  }
  return result;
}

unint64_t sub_1B2AA3DFC()
{
  unint64_t result = qword_1E9C3C660;
  if (!qword_1E9C3C660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C660);
  }
  return result;
}

unint64_t sub_1B2AA3E4C()
{
  unint64_t result = qword_1E9C3C668;
  if (!qword_1E9C3C668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C668);
  }
  return result;
}

unint64_t sub_1B2AA3E9C()
{
  unint64_t result = qword_1EB7D95F8;
  if (!qword_1EB7D95F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D95F8);
  }
  return result;
}

unint64_t sub_1B2AA3EEC()
{
  unint64_t result = qword_1EB7D95F0;
  if (!qword_1EB7D95F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D95F0);
  }
  return result;
}

unint64_t sub_1B2AA3F38()
{
  unint64_t result = qword_1E9C3C670;
  if (!qword_1E9C3C670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C670);
  }
  return result;
}

unint64_t sub_1B2AA3F84()
{
  unint64_t result = qword_1E9C3C678;
  if (!qword_1E9C3C678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C678);
  }
  return result;
}

unint64_t sub_1B2AA3FD0()
{
  unint64_t result = qword_1E9C3C680;
  if (!qword_1E9C3C680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C680);
  }
  return result;
}

unint64_t sub_1B2AA401C()
{
  unint64_t result = qword_1E9C3C688;
  if (!qword_1E9C3C688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C688);
  }
  return result;
}

unint64_t sub_1B2AA4068()
{
  unint64_t result = qword_1E9C3C690;
  if (!qword_1E9C3C690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C690);
  }
  return result;
}

unint64_t sub_1B2AA40B4()
{
  unint64_t result = qword_1E9C3C698;
  if (!qword_1E9C3C698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C698);
  }
  return result;
}

unint64_t sub_1B2AA4100()
{
  unint64_t result = qword_1E9C3C6A0;
  if (!qword_1E9C3C6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C6A0);
  }
  return result;
}

unint64_t sub_1B2AA414C()
{
  unint64_t result = qword_1E9C3C6A8;
  if (!qword_1E9C3C6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C6A8);
  }
  return result;
}

unint64_t sub_1B2AA4198()
{
  unint64_t result = qword_1E9C3C6B0;
  if (!qword_1E9C3C6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C6B0);
  }
  return result;
}

unsigned char *sub_1B2AA41E4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AA42B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for EntityFeatures.ContextualFeatures()
{
}

unint64_t sub_1B2AA42E8()
{
  unint64_t result = qword_1E9C38A00;
  if (!qword_1E9C38A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38A00);
  }
  return result;
}

uint64_t sub_1B2AA434C()
{
  return sub_1B2E836A8();
}

void sub_1B2AA4368(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)(a1 - 256) = a2;
}

uint64_t sub_1B2AA4374()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2AA446C()
{
  return sub_1B2E836E8();
}

uint64_t sub_1B2AA4498()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2AA44C8()
{
  return sub_1B2E835B8();
}

unint64_t sub_1B2AA4528()
{
  return 0xD000000000000011;
}

uint64_t sub_1B2AA4540()
{
  return v0;
}

uint64_t sub_1B2AA4558()
{
  return v0;
}

void sub_1B2AA456C(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
}

uint64_t sub_1B2AA45F4(uint64_t a1)
{
  uint64_t v17 = MEMORY[0x1E4FBC860];
  sub_1B29C0710();
  uint64_t v3 = v17;
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v18 = a1;
  if (v4)
  {
    uint64_t v5 = 0;
    unsigned int v6 = (double *)(a1 + 64);
    while (1)
    {
      double v7 = *(v6 - 4);
      double v8 = *(v6 - 3);
      uint64_t v13 = v5;
      v14[0] = v7;
      v14[1] = v8;
      long long v15 = *((_OWORD *)v6 - 1);
      long long v16 = *(_OWORD *)v6;
      swift_bridgeObjectRetain();
      sub_1B2AB2DC4(v5, v14, __src);
      if (v1) {
        break;
      }
      swift_bridgeObjectRelease();
      memcpy(__dst, __src, sizeof(__dst));
      uint64_t v17 = v3;
      unint64_t v9 = *(void *)(v3 + 16);
      if (v9 >= *(void *)(v3 + 24) >> 1)
      {
        sub_1B29C0710();
        uint64_t v3 = v17;
      }
      ++v5;
      v6 += 6;
      *(void *)(v3 + 16) = v9 + 1;
      memcpy((void *)(v3 + 1128 * v9 + 32), __dst, 0x468uLL);
      if (v4 == v5) {
        goto LABEL_9;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1B2AA476C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1B29C0670();
    uint64_t v7 = v14;
    double v8 = (long long *)(a1 + 32);
    do
    {
      long long v13 = *v8;
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v9 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1) {
        sub_1B29C0670();
      }
      *(void *)(v14 + 16) = v10 + 1;
      uint64_t v11 = v14 + 32 * v10;
      *(void *)(v11 + 32) = a2;
      *(void *)(v11 + 40) = a3;
      *(_OWORD *)(v11 + 48) = v13;
      ++v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v7;
}

uint64_t sub_1B2AA4874()
{
  swift_bridgeObjectRetain();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA48CC()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA4968()
{
  swift_bridgeObjectRetain();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA49C0(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_1B2ABAC10();
      break;
    case 6:
      sub_1B2ABB74C();
      break;
    case 7:
      goto LABEL_5;
    case 8:
      sub_1B299F3A0();
LABEL_5:
      sub_1B2ABAB68();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA4B1C()
{
  sub_1B2ABAF3C();
  switch(v0)
  {
    case 1:
      sub_1B2ABB300();
      break;
    case 2:
      sub_1B2ABB724();
      break;
    case 3:
      sub_1B2ABAED0();
      break;
    case 4:
      sub_1B2ABB738();
      break;
    case 5:
      sub_1B299B18C();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA4BC0()
{
  sub_1B2ABB788();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA4CA0(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_1B29B1D9C();
      break;
    case 3:
      sub_1B299F3A0();
      sub_1B2ABAB68();
      break;
    case 4:
      sub_1B2ABAC10();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA4DC0()
{
  Features.FeatureFlag.feature.getter();
  sub_1B2E83228();
  sub_1B2ABACB4();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA4E10()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA4E70(uint64_t a1, uint64_t a2)
{
  return sub_1B2AA5898(a1, a2, (void (*)(void))PersonalKnowledgeToolResultAttributeSemanticType.rawValue.getter);
}

uint64_t sub_1B2AA4E88(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 3:
      sub_1B2ABABAC();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA4F48(uint64_t a1, uint64_t a2)
{
  return sub_1B2AA5898(a1, a2, (void (*)(void))KGQ.Keyword.rawValue.getter);
}

uint64_t sub_1B2AA4F60(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 5:
      sub_1B2ABB74C();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5060(uint64_t a1, uint64_t a2)
{
  return sub_1B2AA63C0(a1, a2, (void (*)(uint64_t))sub_1B2CA6C38);
}

uint64_t sub_1B2AA5078()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA50E8(uint64_t a1, uint64_t a2)
{
  return sub_1B2AA63C0(a1, a2, (void (*)(uint64_t))sub_1B2CDFE84);
}

uint64_t sub_1B2AA5100()
{
  sub_1B2ABADE8();
  switch(v0)
  {
    case 1:
      sub_1B2ABB310();
      break;
    case 2:
      sub_1B2ABAE68();
      break;
    case 3:
      sub_1B29B1DF0();
      sub_1B2ABB300();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5188()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA520C()
{
  return sub_1B2E83998();
}

uint64_t sub_1B2AA5238()
{
  sub_1B299F3A0();
  if (!v0) {
    sub_1B2ABAB68();
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA52BC()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA532C()
{
  return sub_1B2E82498();
}

uint64_t sub_1B2AA533C()
{
  sub_1B2ABB568();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5388()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5400()
{
  sub_1B2ABB1BC();
  switch(v0)
  {
    case 2:
      sub_1B29B1D9C();
      break;
    case 3:
      sub_1B2ABAD4C();
      break;
    case 4:
      sub_1B2ABAD28();
      break;
    case 5:
      sub_1B2ABAB44();
      break;
    case 6:
      sub_1B2ABB1D4();
      break;
    case 7:
      sub_1B2ABABAC();
      break;
    case 8:
      sub_1B299AE08();
      break;
    case 9:
      sub_1B2ABAE2C();
      break;
    case 10:
      sub_1B2ABAE40();
      break;
    case 11:
      sub_1B2ABAD64();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5530()
{
  sub_1B2ABB788();
  sub_1B2ABB74C();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA55F0()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5658()
{
  return sub_1B2E839C8();
}

uint64_t sub_1B2AA5684()
{
  sub_1B2ABADE8();
  switch(v0)
  {
    case 1:
      sub_1B2ABB310();
      break;
    case 2:
      sub_1B2ABAE68();
      break;
    case 3:
      sub_1B2ABB300();
      goto LABEL_7;
    case 4:
      sub_1B299F3A0();
      sub_1B2ABAB68();
      break;
    case 5:
      sub_1B2ABAC10();
      break;
    case 6:
LABEL_7:
      sub_1B29B1DF0();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5750()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA57C0(uint64_t a1, uint64_t a2)
{
  return sub_1B2AA5898(a1, a2, (void (*)(void))PersonEntityTagType.rawValue.getter);
}

uint64_t sub_1B2AA57D8()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5868(uint64_t a1, uint64_t a2)
{
  return sub_1B2AA63C0(a1, a2, (void (*)(uint64_t))sub_1B2ADFFBC);
}

uint64_t sub_1B2AA5880(uint64_t a1, uint64_t a2)
{
  return sub_1B2AA5898(a1, a2, (void (*)(void))UserInterestsType.rawValue.getter);
}

uint64_t sub_1B2AA5898(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_1B2ABACB4();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA58E8()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5964()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA59CC()
{
  sub_1B2ABB788();
  switch(v0)
  {
    case 1:
      sub_1B29B1D9C();
      break;
    case 3:
    case 5:
      sub_1B2ABAB68();
      break;
    case 4:
      sub_1B29B1DF0();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5AD4()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5B3C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_1B29B1D9C();
      break;
    case 2:
      sub_1B2ABB4A8();
      break;
    case 3:
    case 6:
      sub_1B2ABAB68();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5C88()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5D50()
{
  sub_1B2ABB788();
  switch(v0)
  {
    case 1:
      sub_1B29B1D9C();
      break;
    case 2:
      sub_1B2ABAD4C();
      break;
    case 3:
      sub_1B2ABAD28();
      break;
    case 4:
      sub_1B2ABAB44();
      break;
    case 5:
      sub_1B2ABB1D4();
      break;
    case 6:
      sub_1B2ABABAC();
      break;
    case 7:
      sub_1B299AE08();
      break;
    case 8:
      sub_1B2ABAE2C();
      break;
    case 9:
      sub_1B2ABAE40();
      break;
    case 10:
      sub_1B2ABAD64();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5E58(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_1B2ABB74C();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5F20()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA5F70(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      sub_1B2ABAB68();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA60A4()
{
  sub_1B2ABB398();
  switch(v0)
  {
    case 1:
      sub_1B29B1D9C();
      break;
    case 3:
      sub_1B2ABAB68();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA6180(uint64_t a1, char a2)
{
  if (!a2) {
    sub_1B2ABB398();
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA61FC(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      sub_1B2ABAD4C();
      break;
    case 3:
      sub_1B2ABAD28();
      break;
    case 4:
      sub_1B2ABAB44();
      break;
    case 5:
      sub_1B2ABB1D4();
      break;
    case 6:
      sub_1B2ABABAC();
      break;
    case 7:
      sub_1B299AE08();
      break;
    case 8:
      sub_1B2ABAE2C();
      break;
    case 9:
      sub_1B2ABAE40();
      break;
    case 10:
      sub_1B2ABAD64();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA630C()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA6390(uint64_t a1, uint64_t a2)
{
  return sub_1B2AA63C0(a1, a2, (void (*)(uint64_t))sub_1B2A9DD78);
}

uint64_t sub_1B2AA63A8(uint64_t a1, uint64_t a2)
{
  return sub_1B2AA63C0(a1, a2, (void (*)(uint64_t))sub_1B2A9DC90);
}

uint64_t sub_1B2AA63C0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  sub_1B2ABACB4();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA6404(uint64_t a1, char a2)
{
  if (!a2) {
    sub_1B2ABAB68();
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA649C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      sub_1B2ABAB68();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA65A4()
{
  sub_1B2ABAF3C();
  switch(v0)
  {
    case 1:
      sub_1B2ABB724();
      break;
    case 2:
      sub_1B2ABAED0();
      break;
    case 3:
      sub_1B2ABB738();
      break;
    case 4:
      sub_1B299B18C();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA665C()
{
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA6720()
{
  sub_1B2ABB1BC();
  switch(v0)
  {
    case 1:
    case 3:
      sub_1B2ABAC10();
      break;
    case 2:
      sub_1B299F3A0();
      sub_1B2ABAB68();
      break;
    default:
      break;
  }
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AA67D0()
{
  return sub_1B2E839B8();
}

uint64_t sub_1B2AA67FC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2DCA5F0();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1B2AB43B4(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1B2AA6868(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t result = a1[4];
  if (result != a2[4] || a1[5] != a2[5])
  {
    sub_1B2E837A8();
    uint64_t result = sub_1B2ABAD7C();
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  if (v2 == 1) {
    return 1;
  }
  double v8 = a2 + 7;
  unint64_t v9 = a1 + 7;
  unint64_t v10 = 1;
  while (v10 < v2)
  {
    uint64_t result = *(v9 - 1);
    if (result != *(v8 - 1) || *v9 != *v8)
    {
      uint64_t result = sub_1B2E837A8();
      if ((result & 1) == 0) {
        return 0;
      }
    }
    ++v10;
    v8 += 2;
    v9 += 2;
    if (v2 == v10) {
      return 1;
    }
  }
  __break(1u);
  return result;
}

void sub_1B2AA6934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B299B720();
  a19 = v22;
  a20 = v23;
  sub_1B2ABB34C();
  uint64_t v24 = type metadata accessor for KGQ.Value() - 8;
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  BOOL v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v30 = (char *)&a9 - v29;
  uint64_t v31 = *(void *)(v21 + 16);
  if (v31 == *(void *)(v20 + 16) && v31 && v21 != v20)
  {
    unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v33 = *(void *)(v28 + 72);
    uint64_t v34 = v31 - 1;
    do
    {
      sub_1B2ABA724();
      sub_1B2ABA724();
      char v35 = sub_1B2CA7678((uint64_t)v30, (uint64_t)v27);
      sub_1B2ABA780((uint64_t)v27, (void (*)(void))type metadata accessor for KGQ.Value);
      sub_1B2ABA780((uint64_t)v30, (void (*)(void))type metadata accessor for KGQ.Value);
      BOOL v37 = v34-- != 0;
      if ((v35 & 1) == 0) {
        break;
      }
      v32 += v33;
    }
    while (v37);
  }
  sub_1B299B738();
}

void sub_1B2AA6AAC()
{
  sub_1B299B720();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for KGQ.Value() - 8;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v57 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v49 - v8;
  unint64_t v10 = *(void *)(v3 + 16);
  if (v10 == *(void *)(v1 + 16) && v10 && v3 != v1)
  {
    uint64_t v53 = v7;
    uint64_t v11 = *(void *)(v3 + 40);
    int v12 = *(unsigned __int8 *)(v3 + 48);
    uint64_t v13 = *(void *)(v1 + 40);
    int v56 = *(unsigned __int8 *)(v1 + 48);
    char v14 = *(unsigned char *)(v1 + 32);
    uint64_t v15 = sub_1B2CA6C38(*(unsigned char *)(v3 + 32));
    uint64_t v17 = v16;
    if (v15 == sub_1B2CA6C38(v14) && v17 == v18)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v20 = sub_1B2E837A8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        goto LABEL_93;
      }
    }
    uint64_t v21 = *(void *)(v11 + 16);
    if (v21 != *(void *)(v13 + 16))
    {
LABEL_93:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_94;
    }
    uint64_t v50 = v1 + 32;
    uint64_t v51 = v3 + 32;
    uint64_t v22 = 1;
    unint64_t v52 = v10;
    while (1)
    {
      unint64_t v54 = v22;
      int v55 = v12;
      if (v21 && v11 != v13)
      {
        unint64_t v23 = 0;
        unint64_t v24 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
        uint64_t v25 = *(void *)(v53 + 72);
        while (1)
        {
          sub_1B2ABA724();
          if (v23 >= *(void *)(v13 + 16)) {
            break;
          }
          uint64_t v26 = v13;
          uint64_t v27 = (uint64_t)v9;
          uint64_t v28 = (uint64_t)v57;
          sub_1B2ABA724();
          char v29 = sub_1B2CA7678(v27, v28);
          uint64_t v30 = v28;
          unint64_t v9 = (char *)v27;
          sub_1B2ABA780(v30, (void (*)(void))type metadata accessor for KGQ.Value);
          sub_1B2ABA780(v27, (void (*)(void))type metadata accessor for KGQ.Value);
          if ((v29 & 1) == 0) {
            goto LABEL_93;
          }
          ++v23;
          v24 += v25;
          uint64_t v13 = v26;
          if (v21 == v23) {
            goto LABEL_20;
          }
        }
        __break(1u);
LABEL_96:
        __break(1u);
        JUMPOUT(0x1B2AA72D4);
      }
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v55 != v56 || v54 == v52) {
        break;
      }
      if (v54 >= v52) {
        goto LABEL_96;
      }
      uint64_t v22 = v54 + 1;
      unint64_t v32 = (unsigned __int8 *)(v51 + 24 * v54);
      uint64_t v11 = *((void *)v32 + 1);
      int v12 = v32[16];
      uint64_t v33 = *v32;
      uint64_t v34 = (unsigned __int8 *)(v50 + 24 * v54);
      uint64_t v35 = *v34;
      uint64_t v13 = *((void *)v34 + 1);
      int v36 = v34[16];
      unint64_t v37 = 0xE400000000000000;
      uint64_t v38 = "relationshipName";
      uint64_t v39 = 1701667182;
      switch(v33)
      {
        case 1:
          uint64_t v39 = 0x6D614E7473726966;
          goto LABEL_45;
        case 2:
          unint64_t v37 = 0xE800000000000000;
          uint64_t v39 = 0x656D614E7473616CLL;
          break;
        case 3:
          unint64_t v37 = 0xE700000000000000;
          uint64_t v39 = 0x73736572646461;
          break;
        case 4:
          unint64_t v37 = 0xE800000000000000;
          uint64_t v39 = 0x7961646874726962;
          break;
        case 5:
          uint64_t v39 = 0x6D754E656E6F6870;
          uint64_t v40 = 7497058;
          goto LABEL_43;
        case 6:
          uint64_t v39 = 0x6464416C69616D65;
          uint64_t v41 = 1936942450;
          goto LABEL_33;
        case 7:
          uint64_t v39 = sub_1B29A2920(0x616C6572u);
          uint64_t v41 = 1885956211;
LABEL_33:
          unint64_t v37 = v41 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8:
          unint64_t v37 = 0xE800000000000000;
          uint64_t v39 = 0x6565646E65747461;
          break;
        case 9:
          uint64_t v39 = sub_1B2ABB5BC();
          uint64_t v40 = 7300718;
          goto LABEL_43;
        case 10:
          unint64_t v37 = 0xE800000000000000;
          unsigned int v42 = 1633906540;
          goto LABEL_48;
        case 11:
          uint64_t v39 = 1836020326;
          break;
        case 12:
          unint64_t v37 = 0xE200000000000000;
          uint64_t v39 = 28532;
          break;
        case 13:
          unint64_t v37 = 0x80000001B2E95700;
          uint64_t v39 = sub_1B29B1E20();
          break;
        case 14:
          unint64_t v37 = 0xE800000000000000;
          uint64_t v39 = 0x7473657265746E69;
          break;
        case 15:
          unint64_t v37 = 0xE600000000000000;
          uint64_t v39 = 0x6E6F73726570;
          break;
        case 16:
          uint64_t v39 = 0x6765746143707061;
          uint64_t v40 = 7959151;
LABEL_43:
          unint64_t v37 = v40 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 17:
          uint64_t v39 = 0x7461447472617473;
LABEL_45:
          unint64_t v37 = 0xE900000000000065;
          break;
        case 18:
          unint64_t v37 = 0xE700000000000000;
          uint64_t v39 = 0x65746144646E65;
          break;
        case 19:
          unint64_t v37 = 0xE800000000000000;
          unsigned int v42 = 1634891108;
LABEL_48:
          uint64_t v39 = sub_1B29A2920(v42);
          break;
        case 20:
          uint64_t v39 = 1701869940;
          break;
        case 21:
          unint64_t v37 = 0xE500000000000000;
          uint64_t v39 = 0x74696D696CLL;
          break;
        case 22:
          unint64_t v37 = 0xE700000000000000;
          uint64_t v39 = 0x63734174726F73;
          break;
        case 23:
          unint64_t v37 = 0xE800000000000000;
          uint64_t v39 = 0x6373654474726F73;
          break;
        case 24:
          unint64_t v37 = 0xE600000000000000;
          uint64_t v39 = 0x656372756F73;
          break;
        case 25:
          unint64_t v37 = 0xE500000000000000;
          uint64_t v39 = 0x65756C6176;
          break;
        default:
          break;
      }
      unint64_t v43 = 0xE400000000000000;
      unint64_t v44 = 1701667182;
      switch(v35)
      {
        case 1:
          unint64_t v44 = 0x6D614E7473726966;
          goto LABEL_75;
        case 2:
          unint64_t v43 = 0xE800000000000000;
          unint64_t v44 = 0x656D614E7473616CLL;
          break;
        case 3:
          unint64_t v43 = 0xE700000000000000;
          unint64_t v44 = 0x73736572646461;
          break;
        case 4:
          unint64_t v43 = 0xE800000000000000;
          unint64_t v44 = 0x7961646874726962;
          break;
        case 5:
          unint64_t v44 = 0x6D754E656E6F6870;
          uint64_t v45 = 7497058;
          goto LABEL_73;
        case 6:
          unint64_t v44 = 0x6464416C69616D65;
          uint64_t v46 = 1936942450;
          goto LABEL_63;
        case 7:
          sub_1B2ABB4F0();
          uint64_t v46 = 1885956211;
LABEL_63:
          unint64_t v43 = v46 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8:
          unint64_t v43 = 0xE800000000000000;
          unint64_t v44 = 0x6565646E65747461;
          break;
        case 9:
          sub_1B2ABB4DC();
          uint64_t v45 = 7300718;
          goto LABEL_73;
        case 10:
          unint64_t v43 = 0xE800000000000000;
          goto LABEL_78;
        case 11:
          unint64_t v44 = 1836020326;
          break;
        case 12:
          unint64_t v43 = 0xE200000000000000;
          unint64_t v44 = 28532;
          break;
        case 13:
          unint64_t v43 = (unint64_t)(v38 - 32) | 0x8000000000000000;
          unint64_t v44 = 0xD000000000000010;
          break;
        case 14:
          unint64_t v43 = 0xE800000000000000;
          unint64_t v44 = 0x7473657265746E69;
          break;
        case 15:
          unint64_t v43 = 0xE600000000000000;
          unint64_t v44 = 0x6E6F73726570;
          break;
        case 16:
          unint64_t v44 = 0x6765746143707061;
          uint64_t v45 = 7959151;
LABEL_73:
          unint64_t v43 = v45 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 17:
          unint64_t v44 = 0x7461447472617473;
LABEL_75:
          unint64_t v43 = 0xE900000000000065;
          break;
        case 18:
          unint64_t v43 = 0xE700000000000000;
          unint64_t v44 = 0x65746144646E65;
          break;
        case 19:
          unint64_t v43 = 0xE800000000000000;
LABEL_78:
          sub_1B2ABB4F0();
          break;
        case 20:
          unint64_t v44 = 1701869940;
          break;
        case 21:
          unint64_t v43 = 0xE500000000000000;
          unint64_t v44 = 0x74696D696CLL;
          break;
        case 22:
          unint64_t v43 = 0xE700000000000000;
          unint64_t v44 = 0x63734174726F73;
          break;
        case 23:
          unint64_t v43 = 0xE800000000000000;
          unint64_t v44 = 0x6373654474726F73;
          break;
        case 24:
          unint64_t v43 = 0xE600000000000000;
          unint64_t v44 = 0x656372756F73;
          break;
        case 25:
          unint64_t v43 = 0xE500000000000000;
          unint64_t v44 = 0x65756C6176;
          break;
        default:
          break;
      }
      if (v39 == v44 && v37 == v43)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v48 = sub_1B2E837A8();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v48 & 1) == 0) {
          goto LABEL_93;
        }
      }
      int v56 = v36;
      uint64_t v21 = *(void *)(v11 + 16);
      if (v21 != *(void *)(v13 + 16)) {
        goto LABEL_93;
      }
    }
  }
LABEL_94:
  sub_1B299B738();
}

uint64_t sub_1B2AA73A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      unsigned int v6 = *v3++;
      uint64_t v5 = v6;
      unsigned int v8 = *v4++;
      uint64_t v7 = v8;
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 0x6E6F73726570;
      switch(v5)
      {
        case 1:
          uint64_t v10 = sub_1B29A2920(0x616C6572u);
          unint64_t v9 = 0xEC00000070696873;
          break;
        case 2:
          uint64_t v10 = sub_1B2ABB5BC();
          unint64_t v9 = 0xEB000000006F666ELL;
          break;
        case 3:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x746E657665;
          break;
        case 4:
          uint64_t v10 = 0x69746E6565726373;
          unint64_t v9 = 0xEA0000000000656DLL;
          break;
        case 5:
          unint64_t v9 = 0xE800000000000000;
          uint64_t v10 = sub_1B29A2920(0x61636F6Cu);
          break;
        default:
          break;
      }
      unint64_t v11 = 0xE600000000000000;
      uint64_t v12 = 0x6E6F73726570;
      switch(v7)
      {
        case 1:
          sub_1B2ABB4F0();
          unint64_t v11 = 0xEC00000070696873;
          break;
        case 2:
          sub_1B2ABB4DC();
          unint64_t v11 = 0xEB000000006F666ELL;
          break;
        case 3:
          unint64_t v11 = 0xE500000000000000;
          uint64_t v12 = 0x746E657665;
          break;
        case 4:
          uint64_t v12 = 0x69746E6565726373;
          unint64_t v11 = 0xEA0000000000656DLL;
          break;
        case 5:
          unint64_t v11 = 0xE800000000000000;
          sub_1B2ABB4F0();
          break;
        default:
          break;
      }
      if (v10 == v12 && v9 == v11)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v14 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          return 0;
        }
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1B2AA75C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return sub_1B29DA4DC();
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (uint64_t *)(a1 + 32);
  uint64_t v4 = (uint64_t *)(a2 + 32);
  uint64_t v5 = v2 - 1;
  do
  {
    uint64_t v7 = *v3++;
    uint64_t v6 = v7;
    uint64_t v9 = *v4++;
    uint64_t v8 = v9;
    BOOL v11 = v5-- != 0;
    uint64_t result = v6 == v8;
  }
  while (v6 == v8 && v11);
  return result;
}

uint64_t sub_1B2AA7620(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v6 = *(i - 1);
      uint64_t v5 = *i;
      uint64_t v8 = *(v3 - 1);
      uint64_t v7 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_1B2E837A8() & 1) == 0) {
        break;
      }
      if (v5)
      {
        if (!v7) {
          return 0;
        }
        BOOL v10 = v6 == v8 && v5 == v7;
        if (!v10 && (sub_1B2E837A8() & 1) == 0) {
          return 0;
        }
      }
      else if (v7)
      {
        return 0;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1B2AA76F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (void *)(a2 + 56);
    for (uint64_t i = (void *)(a1 + 56); ; i += 5)
    {
      BOOL v5 = *(i - 1) == *(v3 - 1) && *i == *v3;
      if (!v5 && (sub_1B2E837A8() & 1) == 0) {
        break;
      }
      v3 += 5;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1B2AA7778(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v7 = 1;
    }
    else
    {
      uint64_t v3 = (char *)(a1 + 32);
      uint64_t v4 = (char *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        memcpy(__dst, v3, sizeof(__dst));
        memcpy(v9, v4, sizeof(v9));
        char v7 = static RerankedEntity.== infix(_:_:)((uint64_t)__dst);
        if ((v7 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 1128;
        v3 += 1128;
      }
      while (v6);
    }
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1B2AA7824(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = a2 + 56;
    for (uint64_t i = a1 + 56; ; i += 32)
    {
      uint64_t v23 = v2;
      BOOL v5 = *(void *)(i - 24) == *(void *)(v3 - 24) && *(void *)(i - 16) == *(void *)(v3 - 16);
      if (!v5 && (sub_1B2E837A8() & 1) == 0) {
        break;
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1B2E82628();
      uint64_t v7 = MEMORY[0x1B3EB0C00](v6);
      uint64_t v9 = v8;
      swift_bridgeObjectRelease();
      uint64_t v10 = sub_1B2E82628();
      uint64_t v12 = v11;
      uint64_t v14 = v13;
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      uint64_t v17 = MEMORY[0x1B3EB0C00](v10, v12, v14, v16);
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      if (v7 == v17 && v9 == v19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v21 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0) {
          return 0;
        }
      }
      v3 += 32;
      uint64_t v2 = v23 - 1;
      if (v23 == 1) {
        return 1;
      }
    }
  }
  return 0;
}

void sub_1B2AA79E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B299B720();
  a19 = v22;
  a20 = v23;
  sub_1B2ABB34C();
  uint64_t v24 = type metadata accessor for CodableLocation();
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (double *)((char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  uint64_t v30 = (double *)((char *)&a9 - v29);
  uint64_t v31 = *(void *)(v21 + 16);
  if (v31 == *(void *)(v20 + 16) && v31 && v21 != v20)
  {
    unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v33 = *(void *)(v28 + 72);
    uint64_t v34 = v31 - 1;
    while (1)
    {
      sub_1B2ABA724();
      sub_1B2ABA724();
      if (*v30 != *v27
        || v30[1] != v27[1]
        || v30[2] != v27[2]
        || v30[3] != v27[3]
        || v30[4] != v27[4]
        || v30[5] != v27[5]
        || v30[6] != v27[6])
      {
        break;
      }
      char v35 = sub_1B2E80608();
      sub_1B2ABA780((uint64_t)v27, (void (*)(void))type metadata accessor for CodableLocation);
      sub_1B2ABA780((uint64_t)v30, (void (*)(void))type metadata accessor for CodableLocation);
      BOOL v37 = v34-- != 0;
      if (v35)
      {
        v32 += v33;
        if (v37) {
          continue;
        }
      }
      goto LABEL_20;
    }
    sub_1B2ABA780((uint64_t)v27, (void (*)(void))type metadata accessor for CodableLocation);
    sub_1B2ABA780((uint64_t)v30, (void (*)(void))type metadata accessor for CodableLocation);
  }
LABEL_20:
  sub_1B299B738();
}

void sub_1B2AA7C14()
{
  sub_1B299B720();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2 == *(void *)(v1 + 16) && v2 && v0 != v1)
  {
    uint64_t v3 = (unsigned __int8 *)(v0 + 32);
    uint64_t v4 = (unsigned __int8 *)(v1 + 32);
    do
    {
      unsigned int v6 = *v3++;
      uint64_t v5 = v6;
      unsigned int v8 = *v4++;
      uint64_t v7 = v8;
      unint64_t v9 = 0xEE007372657A696CLL;
      unint64_t v10 = 0x616D726F4E6C6C61;
      switch(v5)
      {
        case 1:
          sub_1B29B1D9C();
          break;
        case 2:
          sub_1B2ABB4A8();
          break;
        case 3:
          unint64_t v10 = 0xD000000000000016;
          unint64_t v9 = 0x80000001B2E919E0;
          break;
        case 4:
          unint64_t v10 = 0x696C617469706163;
          unint64_t v9 = 0xEA0000000000657ALL;
          break;
        case 5:
          unint64_t v9 = 0xE700000000000000;
          unint64_t v10 = 0x74786554646170;
          break;
        case 6:
          unint64_t v9 = 0x80000001B2E91A10;
          unint64_t v10 = 0xD000000000000012;
          break;
        case 7:
          unint64_t v9 = 0xE700000000000000;
          unint64_t v10 = 0x6E756870726F6DLL;
          break;
        default:
          break;
      }
      unint64_t v11 = 0x616D726F4E6C6C61;
      unint64_t v12 = 0xEE007372657A696CLL;
      switch(v7)
      {
        case 1:
          unint64_t v11 = 0x7361637265776F6CLL;
          unint64_t v12 = 0xE900000000000065;
          break;
        case 2:
          unint64_t v11 = 0x6F72706572506F6ELL;
          unint64_t v12 = 0xEF676E6973736563;
          break;
        case 3:
          unint64_t v11 = 0xD000000000000016;
          unint64_t v12 = 0x80000001B2E919E0;
          break;
        case 4:
          unint64_t v11 = 0x696C617469706163;
          unint64_t v12 = 0xEA0000000000657ALL;
          break;
        case 5:
          unint64_t v12 = 0xE700000000000000;
          unint64_t v11 = 0x74786554646170;
          break;
        case 6:
          unint64_t v12 = 0x80000001B2E91A10;
          unint64_t v11 = 0xD000000000000012;
          break;
        case 7:
          unint64_t v12 = 0xE700000000000000;
          unint64_t v11 = 0x6E756870726F6DLL;
          break;
        default:
          break;
      }
      if (v10 == v11 && v9 == v12)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v14 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          break;
        }
      }
      --v2;
    }
    while (v2);
  }
  sub_1B299B738();
}

BOOL sub_1B2AA7EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = (float *)(a1 + 36);
  unsigned int v6 = (float *)(a2 + 36);
  do
  {
    float v7 = *v5++;
    float v8 = v7;
    float v9 = *v6++;
    float v10 = v9;
    BOOL v12 = v4-- != 0;
    BOOL result = v8 == v10;
  }
  while (v8 == v10 && v12);
  return result;
}

uint64_t sub_1B2AA7F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return sub_1B29DA4DC();
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return sub_1B29DA4DC();
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = (double *)(a1 + 40);
  unsigned int v6 = (double *)(a2 + 40);
  do
  {
    double v7 = *v5++;
    double v8 = v7;
    double v9 = *v6++;
    double v10 = v9;
    BOOL v12 = v4-- != 0;
    uint64_t result = v8 == v10;
  }
  while (v8 == v10 && v12);
  return result;
}

void sub_1B2AA7FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,char a23)
{
  sub_1B299B720();
  uint64_t v52 = v23;
  uint64_t v53 = v24;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v51 = v37;
  sub_1B2E806B8();
  sub_1B299D278();
  MEMORY[0x1F4188790](v38);
  sub_1B299E4A0();
  int v39 = *((unsigned __int16 *)v26 + 16) | (*((unsigned __int8 *)v26 + 34) << 16);
  uint64_t v49 = v26[1];
  uint64_t v50 = *v26;
  uint64_t v47 = v26[3];
  uint64_t v48 = v26[2];
  char v46 = *v28;
  if (!v30) {
    goto LABEL_5;
  }
  if (!v32)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v40 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v40 = sub_1B2AA476C(v30, v34, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_6:
  sub_1B2E806A8();
  uint64_t v41 = sub_1B2E80678();
  uint64_t v43 = v42;
  uint64_t v44 = sub_1B2ABB7E4();
  v45(v44);
  *(void *)uint64_t v36 = v34;
  *(void *)(v36 + 8) = v32;
  *(void *)(v36 + 16) = v51;
  *(void *)(v36 + 24) = v40;
  *(void *)(v36 + 32) = v41;
  *(void *)(v36 + 40) = v43;
  *(unsigned char *)(v36 + 48) = v46;
  *(_DWORD *)(v36 + 49) = *(_DWORD *)v56;
  *(_DWORD *)(v36 + 52) = *(_DWORD *)&v56[3];
  *(void *)(v36 + 56) = v50;
  *(void *)(v36 + 64) = v49;
  *(void *)(v36 + 72) = v48;
  *(void *)(v36 + 80) = v47;
  *(unsigned char *)(v36 + 90) = BYTE2(v39);
  *(_WORD *)(v36 + 88) = v39;
  *(_DWORD *)(v36 + 91) = v54;
  *(unsigned char *)(v36 + 95) = v55;
  *(void *)(v36 + 96) = v52;
  *(void *)(v36 + 104) = v53;
  *(void *)(v36 + 112) = a21;
  *(unsigned char *)(v36 + 120) = a22 & 1;
  *(unsigned char *)(v36 + 121) = a23 & 1;
  sub_1B299B738();
}

void EntityResolutionError.description.getter()
{
  uint64_t v1 = *v0;
  switch(*((unsigned char *)v0 + 16))
  {
    case 1:
LABEL_5:
      sub_1B299B7D8();
      return;
    case 2:
      sub_1B2ABAB9C();
      sub_1B2E831F8();
      sub_1B2E82518();
      goto LABEL_10;
    case 3:
      return;
    case 4:
    case 7:
      sub_1B2ABB604();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 5:
      sub_1B2ABAB9C();
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      sub_1B2ABAE88();
      goto LABEL_10;
    case 6:
    case 8:
      sub_1B2ABAB9C();
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
LABEL_9:
      sub_1B2ABB130();
      goto LABEL_10;
    case 9:
      sub_1B299B7D8();
      switch(v1)
      {
        case 1:
        case 2:
        case 3:
        case 4:
          goto LABEL_5;
        default:
          return;
      }
      return;
    default:
      sub_1B2ABAB9C();
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      sub_1B2ABB130();
      sub_1B2ABAE88();
LABEL_10:
      sub_1B2E82518();
      return;
  }
}

IntelligencePlatform::PreprocessingStep_optional __swiftcall PreprocessingStep.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void PreprocessingStep.rawValue.getter()
{
  switch(*v0)
  {
    case 3:
    case 6:
      sub_1B299B7D8();
      break;
    default:
      return;
  }
}

uint64_t sub_1B2AA85B0(unsigned __int8 *a1, char *a2)
{
  return sub_1B29ACC7C(*a1, *a2);
}

uint64_t sub_1B2AA85BC()
{
  return sub_1B29AE788(*v0);
}

uint64_t sub_1B2AA85C4(uint64_t a1)
{
  return sub_1B2AA5B3C(a1, *v1);
}

uint64_t sub_1B2AA85CC()
{
  return sub_1B29F96D4();
}

IntelligencePlatform::PreprocessingStep_optional sub_1B2AA85D4(Swift::String *a1)
{
  return PreprocessingStep.init(rawValue:)(*a1);
}

void sub_1B2AA85E0(void *a1@<X8>)
{
  PreprocessingStep.rawValue.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B2AA8608()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2AA8668()
{
  return sub_1B2E82788();
}

uint64_t static CandidateConstraint.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v422 = a1[1];
  uint64_t v419 = a1[2];
  uint64_t v420 = a1[3];
  unsigned int v421 = *((unsigned __int16 *)a1 + 16);
  char v4 = *((unsigned char *)a1 + 34);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(unsigned __int16 *)(a2 + 32);
  int v10 = *(unsigned __int8 *)(a2 + 34);
  switch(v4)
  {
    case 1:
      if (v10 != 1) {
        goto LABEL_18;
      }
      uint64_t v14 = sub_1B2ABABC4();
      sub_1B2A22630(v14, v15, v16, v17, v18, 1);
      sub_1B2A22630(v2, v422, v419, v420, v421, 1);
      sub_1B2A22740(v2, v422, v419, v420, v421, 1);
      uint64_t v19 = sub_1B2ABB26C();
      char v24 = 1;
      goto LABEL_24;
    case 2:
      if (v10 != 2) {
        goto LABEL_18;
      }
      uint64_t v25 = sub_1B2ABABC4();
      sub_1B2A22630(v25, v26, v27, v28, v29, 2);
      uint64_t v30 = sub_1B2ABAF5C();
      sub_1B2A22630(v30, v31, v32, v33, v421, 2);
      uint64_t v34 = sub_1B2ABB440();
      sub_1B2A22740(v34, v35, v36, v37, v421, 2);
      uint64_t v19 = sub_1B2ABB26C();
      char v24 = 2;
      goto LABEL_24;
    case 3:
      if (v10 != 3) {
        goto LABEL_18;
      }
      uint64_t v38 = *(void *)(v3 + 24);
      uint64_t v39 = *(void *)(v3 + 32);
      uint64_t v399 = *(void *)(v3 + 40);
      uint64_t v40 = *(void *)(v3 + 56);
      uint64_t v261 = *(void *)(v3 + 64);
      uint64_t v337 = *(void *)(v3 + 80);
      uint64_t v347 = *(void *)(v3 + 72);
      unsigned int v410 = *(unsigned __int16 *)(v3 + 48);
      LODWORD(v412) = *(unsigned __int16 *)(v3 + 88);
      HIDWORD(v416) = *(unsigned __int8 *)(v3 + 90);
      uint64_t v41 = *(void *)(v6 + 24);
      uint64_t v383 = *(void *)(v6 + 16);
      uint64_t v42 = *(void *)(v6 + 40);
      uint64_t v357 = *(void *)(v6 + 32);
      unsigned __int16 v43 = *(_WORD *)(v6 + 48);
      unsigned int v367 = v43;
      char v377 = *(unsigned char *)(v3 + 50);
      char v44 = *(unsigned char *)(v6 + 50);
      uint64_t v270 = *(void *)(v6 + 64);
      uint64_t v309 = *(void *)(v6 + 56);
      uint64_t v319 = *(void *)(v6 + 72);
      uint64_t v299 = *(void *)(v6 + 80);
      HIDWORD(v280) = *(unsigned __int8 *)(v6 + 90);
      LODWORD(v289) = *(unsigned __int16 *)(v6 + 88);
      uint64_t v429 = *(void *)(v3 + 16);
      uint64_t v393 = v429;
      uint64_t v430 = v38;
      uint64_t v431 = v39;
      uint64_t v432 = v399;
      __int16 v433 = v410;
      char v434 = v377;
      uint64_t v423 = v383;
      uint64_t v424 = v41;
      uint64_t v425 = v357;
      uint64_t v426 = v42;
      unsigned __int16 v427 = v43;
      char v428 = v44;
      uint64_t v45 = sub_1B2ABAD00(v5);
      sub_1B2A22630(v45, v46, v47, v48, v49, 3);
      uint64_t v50 = sub_1B2ABB118();
      sub_1B2A22630(v50, v51, v52, v53, v54, 3);
      uint64_t v250 = v39;
      uint64_t v55 = v261;
      sub_1B2A22630(v429, v38, v39, v399, v410, v377);
      sub_1B2A22630(v383, v41, v357, v42, v367, v44);
      uint64_t v56 = sub_1B2ABB42C();
      sub_1B2A22630(v56, v57, v58, v59, v412, SBYTE4(v416));
      sub_1B2A22630(v309, v270, v319, v299, v289, SBYTE4(v280));
      if (static CandidateConstraint.== infix(_:_:)(&v429, &v423))
      {
        uint64_t v429 = v40;
        uint64_t v430 = v261;
        uint64_t v431 = v347;
        uint64_t v432 = v337;
        __int16 v433 = v412;
        char v434 = BYTE4(v416);
        uint64_t v423 = v309;
        uint64_t v424 = v270;
        uint64_t v425 = v319;
        uint64_t v426 = v299;
        uint64_t v60 = sub_1B2ABB468();
        uint64_t v61 = v309;
        char v4 = v60;
        uint64_t v69 = sub_1B2ABB0D0(v60, v62, v63, v64, v65, v66, v67, v68, v207, v216, v44, v42, v41, v38, v250, v261, v270, v280, v289,
                v299,
                v309,
                v319,
                v40,
                v337,
                v347,
                v357,
                v367,
                v383);
        sub_1B2ABB4BC(v69, v70, v71, v72, v73, v74, v75, v76, v208, v217, v225, v233, v241, v251, v262, v271, v281, v290, v300,
          v310,
          v320,
          v329,
          v338,
          v348,
          v358,
          v368,
          v378,
          v384,
          v393,
          v399,
          v405,
          v410);
        sub_1B2ABB230(v61);
        uint64_t v77 = sub_1B2A22740(v330, v55, v349, v339, v412, SBYTE4(v416));
        sub_1B2ABB064(v77, v78, v79, v80, v81, v82, v83, v84, v209, v218, v226, v234, v242, v252, v263, v272, v282, v291, v301,
          v311,
          v321,
          v330,
          v339,
          v349,
          v359,
          v369,
          v385,
          v394,
          v400,
          v406,
          v412,
          v416,
          v417);
        uint64_t v19 = sub_1B2ABAF84();
        goto LABEL_24;
      }
      sub_1B2ABB230(v309);
      uint64_t v150 = sub_1B2A22740(v40, v261, v347, v337, v412, SBYTE4(v416));
      uint64_t v158 = sub_1B2ABB0D0(v150, v151, v152, v153, v154, v155, v156, v157, v207, v216, v44, v42, v41, v38, v39, v261, v270, v280, v289,
               v299,
               v309,
               v319,
               v40,
               v337,
               v347,
               v357,
               v367,
               v383);
      uint64_t v166 = sub_1B2ABB4BC(v158, v159, v160, v161, v162, v163, v164, v165, v212, v221, v229, v237, v246, v256, v266, v276, v285, v295, v305,
               v315,
               v324,
               v333,
               v343,
               v353,
               v363,
               v373,
               v381,
               v389,
               v393,
               v399,
               v405,
               v410);
      sub_1B2ABB064(v166, v167, v168, v169, v170, v171, v172, v173, v213, v222, v230, v238, v247, v257, v267, v277, v286, v296, v306,
        v316,
        v325,
        v334,
        v344,
        v354,
        v364,
        v374,
        v390,
        v397,
        v403,
        v408,
        v412,
        v416,
        v417);
      uint64_t v144 = sub_1B2ABAF84();
      goto LABEL_19;
    case 4:
      if (v10 != 4) {
        goto LABEL_18;
      }
      uint64_t v395 = *(void *)(v3 + 24);
      uint64_t v401 = *(void *)(v3 + 32);
      uint64_t v413 = *(void *)(v3 + 40);
      unsigned __int16 v85 = *(_WORD *)(v3 + 48);
      unsigned int v411 = v85;
      uint64_t v86 = *(void *)(v3 + 56);
      uint64_t v253 = *(void *)(v3 + 64);
      uint64_t v340 = *(void *)(v3 + 80);
      uint64_t v350 = *(void *)(v3 + 72);
      uint64_t v87 = *(unsigned __int16 *)(v3 + 88);
      HIDWORD(v416) = *(unsigned __int8 *)(v3 + 90);
      uint64_t v88 = *(void *)(v6 + 24);
      uint64_t v386 = *(void *)(v6 + 16);
      uint64_t v89 = *(void *)(v6 + 32);
      uint64_t v360 = *(void *)(v6 + 40);
      unsigned __int16 v90 = *(_WORD *)(v6 + 48);
      unsigned int v370 = v90;
      char v379 = *(unsigned char *)(v3 + 50);
      char v91 = *(unsigned char *)(v6 + 50);
      uint64_t v273 = *(void *)(v6 + 64);
      uint64_t v312 = *(void *)(v6 + 72);
      uint64_t v292 = *(void *)(v6 + 56);
      uint64_t v302 = *(void *)(v6 + 80);
      HIDWORD(v280) = *(unsigned __int16 *)(v6 + 88);
      LODWORD(v260) = *(unsigned __int8 *)(v6 + 90);
      uint64_t v429 = *(void *)(v3 + 16);
      uint64_t v430 = v395;
      uint64_t v431 = v401;
      uint64_t v432 = v413;
      __int16 v433 = v85;
      char v434 = v379;
      uint64_t v423 = v386;
      uint64_t v424 = v88;
      uint64_t v425 = v89;
      uint64_t v426 = v360;
      unsigned __int16 v427 = v90;
      char v428 = v91;
      uint64_t v92 = sub_1B2ABAD00(v5);
      sub_1B2A22630(v92, v93, v94, v95, v96, 4);
      uint64_t v97 = sub_1B2ABB118();
      sub_1B2A22630(v97, v98, v99, v100, v101, 4);
      uint64_t v243 = v429;
      uint64_t v102 = v253;
      sub_1B2A22630(v429, v395, v401, v413, v411, v379);
      sub_1B2A22630(v386, v88, v89, v360, v370, v91);
      uint64_t v103 = sub_1B2ABB42C();
      LODWORD(v328) = v87;
      uint64_t v104 = v87;
      uint64_t v105 = v292;
      sub_1B2A22630(v103, v106, v107, v108, v104, SBYTE4(v416));
      sub_1B2A22630(v292, v273, v312, v302, HIDWORD(v280), v260);
      if (static CandidateConstraint.== infix(_:_:)(&v429, &v423))
      {
        uint64_t v429 = v86;
        uint64_t v430 = v253;
        uint64_t v431 = v350;
        uint64_t v432 = v340;
        __int16 v433 = v328;
        char v434 = BYTE4(v416);
        uint64_t v423 = v292;
        uint64_t v424 = v273;
        uint64_t v425 = v312;
        uint64_t v426 = v302;
        uint64_t v109 = sub_1B2ABB468();
        uint64_t v110 = v273;
        char v4 = v109;
        uint64_t v118 = sub_1B2ABB0F4(v109, v111, v112, v113, v114, v115, v116, v117, v207, v216, v91, v89, v88, v243, v253, v260, v273, v280, v292,
                 v302,
                 v312,
                 v86,
                 v328,
                 v340,
                 v350,
                 v360,
                 v370,
                 v386);
        sub_1B2ABAFEC(v118, v119, v120, v121, v122, v123, v124, v125, v210, v219, v227, v235, v244, v254, v264, v274, v283, v293, v303,
          v313,
          v322,
          v331,
          v341,
          v351,
          v361,
          v371,
          v380,
          v387,
          v395,
          v401,
          v405,
          v411,
          v413);
        sub_1B2ABB6C0(v105, v110);
        uint64_t v126 = sub_1B2A22740(v323, v102, v352, v342, v332, SBYTE4(v416));
        sub_1B2ABB088(v126, v127, v128, v129, v130, v131, v132, v133, v211, v220, v228, v236, v245, v255, v265, v275, v284, v294, v304,
          v314,
          v323,
          v332,
          v342,
          v352,
          v362,
          v372,
          v388,
          v396,
          v402,
          v407,
          v414,
          v416,
          v417);
        uint64_t v19 = sub_1B2ABAFA0();
        goto LABEL_24;
      }
      sub_1B2ABB6C0(v292, v273);
      uint64_t v174 = sub_1B2A22740(v86, v253, v350, v340, v328, SBYTE4(v416));
      uint64_t v182 = sub_1B2ABB0F4(v174, v175, v176, v177, v178, v179, v180, v181, v207, v216, v91, v89, v88, v243, v253, v260, v273, v280, v292,
               v302,
               v312,
               v86,
               v328,
               v340,
               v350,
               v360,
               v370,
               v386);
      uint64_t v190 = sub_1B2ABAFEC(v182, v183, v184, v185, v186, v187, v188, v189, v214, v223, v231, v239, v248, v258, v268, v278, v287, v297, v307,
               v317,
               v326,
               v335,
               v345,
               v355,
               v365,
               v375,
               v382,
               v391,
               v395,
               v401,
               v405,
               v411,
               v413);
      sub_1B2ABB088(v190, v191, v192, v193, v194, v195, v196, v197, v215, v224, v232, v240, v249, v259, v269, v279, v288, v298, v308,
        v318,
        v327,
        v336,
        v346,
        v356,
        v366,
        v376,
        v392,
        v398,
        v404,
        v409,
        v415,
        v416,
        v417);
      uint64_t v144 = sub_1B2ABAFA0();
      goto LABEL_19;
    default:
      if (*(unsigned char *)(a2 + 34))
      {
LABEL_18:
        uint64_t v418 = *(void *)(a2 + 8);
        sub_1B2A22630(*(void *)a2, v418, v8, v7, v9, v10);
        uint64_t v134 = sub_1B2ABB254();
        sub_1B2A22630(v134, v135, v136, v137, v138, v4);
        uint64_t v139 = sub_1B2ABB254();
        sub_1B2A22740(v139, v140, v141, v142, v143, v4);
        uint64_t v144 = v6;
        uint64_t v145 = v418;
        uint64_t v146 = v8;
        uint64_t v147 = v7;
        uint64_t v148 = v9;
        char v149 = v10;
LABEL_19:
        sub_1B2A22740(v144, v145, v146, v147, v148, v149);
        char v4 = 0;
      }
      else
      {
        if (v3 == v6 && v422 == v5)
        {
          char v4 = 1;
        }
        else
        {
          uint64_t v12 = *(void *)(a2 + 8);
          char v13 = sub_1B2E837A8();
          uint64_t v5 = v12;
          char v4 = v13;
        }
        sub_1B2A22630(v6, v5, v8, v7, v9, 0);
        uint64_t v198 = sub_1B2ABAF5C();
        sub_1B2A22630(v198, v199, v200, v201, v421, 0);
        uint64_t v202 = sub_1B2ABB440();
        sub_1B2A22740(v202, v203, v204, v205, v421, 0);
        uint64_t v19 = sub_1B29A4150();
        uint64_t v21 = v8;
        uint64_t v22 = v7;
        uint64_t v23 = v9;
        char v24 = 0;
LABEL_24:
        sub_1B2A22740(v19, v20, v21, v22, v23, v24);
      }
      return v4 & 1;
  }
}

void CandidateConstraint.hash(into:)(uint64_t a1)
{
  switch(*(unsigned char *)(v1 + 34))
  {
    case 1:
    case 2:
      sub_1B2E83998();
      sub_1B2A19B38();
      sub_1B2AB4ABC();
      break;
    case 3:
    case 4:
      sub_1B29A4368();
      sub_1B2E83998();
      sub_1B2A22630(v7, v8, v6, v3, v5, v4);
      uint64_t v12 = sub_1B2ABB040();
      sub_1B2A22630(v12, v13, v16, v15, v14, v2);
      CandidateConstraint.hash(into:)(a1);
      CandidateConstraint.hash(into:)(a1);
      sub_1B2A22740(v7, v8, v6, v3, v5, v4);
      sub_1B2A22740(v18, v17, v16, v15, v14, v2);
      sub_1B2A19B38();
      break;
    default:
      sub_1B2E83998();
      swift_bridgeObjectRetain();
      sub_1B2E82498();
      sub_1B2A19B38();
      swift_bridgeObjectRelease();
      break;
  }
}

uint64_t sub_1B2AA8F04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6964657250736168 && a2 == 0xEC00000065746163;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6564756C637865 && a2 == 0xE700000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x746573627573 && a2 == 0xE600000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 6581857 && a2 == 0xE300000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 29295 && a2 == 0xE200000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_1B2AA90FC(char a1)
{
  uint64_t result = 0x6964657250736168;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6564756C637865;
      break;
    case 2:
      uint64_t result = 0x746573627573;
      break;
    case 3:
      uint64_t result = 6581857;
      break;
    case 4:
      uint64_t result = 29295;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2AA919C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7461636964657270 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2AA9230()
{
  return 0x7461636964657270;
}

uint64_t sub_1B2AA924C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v4 || (sub_1B2ABB764(), (sub_1B299D7C8() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v3 == 12639 && v2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B299D7C8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2AA92F8(char a1)
{
  if (a1) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_1B2AA9310(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2AA9398()
{
  return 0x7365697469746E65;
}

uint64_t sub_1B2AA93B0(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4BE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AA93EC(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4BE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AA9428()
{
  return sub_1B2AA90FC(*v0);
}

uint64_t sub_1B2AA9430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AA8F04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AA9458(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4AFC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AA9494(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4AFC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AA94D4(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4C78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AA9510(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4C78();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AA9550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AA919C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2AA957C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4CC4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AA95B8(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4CC4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AA95F4()
{
  return sub_1B2AA92F8(*v0);
}

uint64_t sub_1B2AA95FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AA924C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AA9624(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4B48();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AA9660(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4B48();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AA969C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AA9310(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2AA96C8(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4C2C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AA9704(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4C2C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void CandidateConstraint.encode(to:)()
{
  sub_1B299F300();
  char v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3C6B8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3C6C0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3C6C8);
  sub_1B299D278();
  char v62 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  unsigned int v61 = v9;
  sub_1B29A3EB4(&qword_1E9C3C6D0);
  sub_1B299D278();
  uint64_t v57 = v11;
  uint64_t v59 = v10;
  MEMORY[0x1F4188790](v10);
  sub_1B299B6D0();
  uint64_t v55 = v12;
  uint64_t v13 = sub_1B29A3EB4(&qword_1E9C3C6D8);
  sub_1B299D278();
  uint64_t v53 = v14;
  MEMORY[0x1F4188790](v15);
  sub_1B299B0C8();
  sub_1B29A3EB4(&qword_1E9C3C6E0);
  sub_1B299D278();
  uint64_t v70 = v16;
  MEMORY[0x1F4188790](v16);
  sub_1B299B6D0();
  uint64_t v17 = *v0;
  uint64_t v18 = *((unsigned __int8 *)v0 + 34);
  sub_1B29AEC7C(v4, v4[3]);
  sub_1B2AB4AFC();
  sub_1B2ABB704();
  switch(v18)
  {
    case 1:
      sub_1B2AB4C78();
      uint64_t v19 = v70;
      sub_1B2ABB6EC();
      sub_1B29A3EB4(&qword_1E9C38970);
      sub_1B2ABAA44(&qword_1E9C3C710, &qword_1E9C38970, (void (*)(void))sub_1B29CB42C);
      sub_1B2E836D8();
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v59);
      goto LABEL_4;
    case 2:
      sub_1B2AB4C2C();
      sub_1B2ABB6EC();
      sub_1B29A3EB4(&qword_1E9C38970);
      sub_1B2ABAA44(&qword_1E9C3C710, &qword_1E9C38970, (void (*)(void))sub_1B29CB42C);
      sub_1B2E836D8();
      sub_1B299B798();
      v23();
      uint64_t v20 = sub_1B2ABB6E0();
      uint64_t v22 = v70;
      goto LABEL_6;
    case 3:
      uint64_t v63 = *(void *)(v17 + 16);
      uint64_t v24 = *(void *)(v17 + 40);
      uint64_t v67 = *(void *)(v17 + 24);
      uint64_t v68 = *(void *)(v17 + 32);
      uint64_t v25 = *(unsigned __int16 *)(v17 + 48);
      char v26 = *(unsigned char *)(v17 + 50);
      uint64_t v27 = *(void *)(v17 + 64);
      uint64_t v69 = *(void *)(v17 + 56);
      uint64_t v29 = *(void *)(v17 + 72);
      uint64_t v28 = *(void *)(v17 + 80);
      sub_1B2A22630(v63, v67, v68, v24, v25, v26);
      uint64_t v56 = v27;
      uint64_t v58 = v29;
      uint64_t v60 = v28;
      sub_1B2ABB658(v69, v27, v29, v28);
      sub_1B2AB4BE0();
      sub_1B2ABB6EC();
      uint64_t v51 = v24;
      unsigned int v52 = v25;
      char v54 = v26;
      sub_1B2AB4B94();
      sub_1B2ABB49C();
      sub_1B2E836D8();
      if (v1)
      {
        sub_1B2ABB5D0(v69);
        sub_1B299B798();
        v30();
        sub_1B299B798();
        v31();
        uint64_t v32 = v63;
        uint64_t v33 = v67;
        uint64_t v34 = v68;
        goto LABEL_11;
      }
      sub_1B2ABACD8();
      sub_1B2ABB49C();
      sub_1B299F594();
      sub_1B2ABB2A4(v63, v67, v68);
      sub_1B299B798();
      v47();
      sub_1B299B798();
      v48();
      uint64_t v32 = v69;
      goto LABEL_14;
    case 4:
      uint64_t v64 = *(void *)(v17 + 16);
      uint64_t v65 = *(void *)(v17 + 24);
      uint64_t v35 = *(void *)(v17 + 40);
      uint64_t v36 = *(unsigned __int16 *)(v17 + 48);
      char v37 = *(unsigned char *)(v17 + 50);
      uint64_t v38 = *(void *)(v17 + 64);
      uint64_t v66 = *(void *)(v17 + 56);
      uint64_t v40 = *(void *)(v17 + 72);
      uint64_t v39 = *(void *)(v17 + 80);
      uint64_t v41 = *(void *)(v17 + 32);
      sub_1B2A22630(v64, v65, v41, v35, v36, v37);
      uint64_t v56 = v38;
      uint64_t v58 = v40;
      uint64_t v60 = v39;
      sub_1B2ABB658(v66, v38, v40, v39);
      sub_1B2AB4B48();
      sub_1B2E83618();
      uint64_t v51 = v35;
      unsigned int v52 = v36;
      char v54 = v37;
      sub_1B2AB4B94();
      sub_1B2ABB49C();
      sub_1B2E836D8();
      if (v1)
      {
        sub_1B2ABB5D0(v66);
        sub_1B299B798();
        v42();
        sub_1B299B798();
        v43();
        uint64_t v32 = v64;
        uint64_t v33 = v65;
        uint64_t v34 = v41;
LABEL_11:
        uint64_t v44 = v51;
        uint64_t v45 = v52;
        char v46 = v54;
      }
      else
      {
        sub_1B2ABACD8();
        sub_1B2ABB49C();
        sub_1B2E836D8();
        sub_1B2ABB2A4(v64, v65, v41);
        sub_1B299B798();
        v49();
        sub_1B299B798();
        v50();
        uint64_t v32 = v66;
LABEL_14:
        uint64_t v33 = v56;
        uint64_t v34 = v58;
        uint64_t v44 = v60;
        uint64_t v45 = v61;
        char v46 = v62;
      }
      sub_1B2A22740(v32, v33, v34, v44, v45, v46);
LABEL_16:
      sub_1B2A4AA78();
      sub_1B29998C8();
      return;
    default:
      sub_1B2AB4CC4();
      uint64_t v19 = v70;
      sub_1B2ABB6EC();
      sub_1B2A7D6D8();
      sub_1B2E836D8();
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v2, v13);
LABEL_4:
      uint64_t v20 = sub_1B2ABB6E0();
      uint64_t v22 = v19;
LABEL_6:
      v21(v20, v22);
      goto LABEL_16;
  }
}

uint64_t CandidateConstraint.hashValue.getter()
{
  __int16 v1 = *((_WORD *)v0 + 16);
  char v2 = *((unsigned char *)v0 + 34);
  long long v3 = v0[1];
  long long v6 = *v0;
  long long v7 = v3;
  __int16 v8 = v1;
  char v9 = v2;
  sub_1B29B1A78();
  CandidateConstraint.hash(into:)((uint64_t)v5);
  return sub_1B2E839E8();
}

void CandidateConstraint.init(from:)()
{
  sub_1B299F300();
  long long v3 = v2;
  uint64_t v40 = v4;
  sub_1B29A3EB4(&qword_1E9C3C728);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3C730);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3C738);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3C740);
  sub_1B299D278();
  MEMORY[0x1F4188790](v8);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C3C748);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B299E4A0();
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C3C750);
  sub_1B299D278();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1B29A0498();
  uint64_t v41 = v3;
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2AB4AFC();
  sub_1B2E83A18();
  if (v0) {
    goto LABEL_13;
  }
  uint64_t v14 = sub_1B2E835F8();
  if (!*(void *)(v14 + 16))
  {
    uint64_t v22 = v1;
LABEL_8:
    uint64_t v23 = sub_1B2E83288();
    swift_allocError();
    uint64_t v25 = v24;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v25 = &type metadata for CandidateConstraint;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x1E4FBBA70], v23);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v22, v10);
LABEL_13:
    uint64_t v26 = (uint64_t)v41;
    goto LABEL_14;
  }
  uint64_t v15 = v1;
  uint64_t v16 = v10;
  uint64_t v17 = *(unsigned __int8 *)(v14 + 32);
  sub_1B29B142C(1);
  uint64_t v19 = v18;
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v19 != v21 >> 1)
  {
    uint64_t v22 = v15;
    uint64_t v10 = v16;
    goto LABEL_8;
  }
  switch(v17)
  {
    case 1:
      LOBYTE(v42) = 1;
      sub_1B2AB4C78();
      sub_1B2ABAB20();
      sub_1B29A3EB4(&qword_1E9C38970);
      sub_1B2ABAA44(&qword_1E9C3C760, &qword_1E9C38970, (void (*)(void))sub_1B29CB3E0);
      sub_1B2E835B8();
      sub_1B299B798();
      v34();
      swift_unknownObjectRelease();
      sub_1B2ABB6E0();
      goto LABEL_15;
    case 2:
      LOBYTE(v42) = 2;
      sub_1B2AB4C2C();
      sub_1B2ABAB20();
      sub_1B29A3EB4(&qword_1E9C38970);
      sub_1B2ABAA44(&qword_1E9C3C760, &qword_1E9C38970, (void (*)(void))sub_1B29CB3E0);
      sub_1B2E835B8();
      uint64_t v35 = sub_1B2ABB0AC();
      v36(v35);
      swift_unknownObjectRelease();
LABEL_15:
      sub_1B299B798();
      v37();
      sub_1B2ABB488();
      uint64_t v30 = v42;
      break;
    case 3:
      sub_1B2AB4BE0();
      sub_1B2ABAB20();
      uint64_t v30 = swift_allocObject();
      sub_1B2AB4D68();
      sub_1B2ABB328();
      sub_1B2ABB328();
      sub_1B2ABB294();
      goto LABEL_16;
    case 4:
      sub_1B2AB4B48();
      sub_1B2ABAB20();
      uint64_t v30 = swift_allocObject();
      sub_1B2AB4D68();
      sub_1B2ABB140();
      sub_1B2ABB140();
      sub_1B2ABB284();
LABEL_16:
      sub_1B299B798();
      v38();
      swift_unknownObjectRelease();
      sub_1B2ABAF78();
      v39();
      sub_1B2ABB488();
      break;
    default:
      LOBYTE(v42) = 0;
      sub_1B2AB4CC4();
      sub_1B2ABAB20();
      sub_1B2A7D640();
      sub_1B2E835B8();
      sub_1B299B798();
      v27();
      swift_unknownObjectRelease();
      sub_1B299B798();
      v28();
      uint64_t v30 = v42;
      uint64_t v29 = v43;
      uint64_t v31 = v44;
      uint64_t v32 = v45;
      __int16 v33 = v46;
      break;
  }
  uint64_t v26 = (uint64_t)v3;
  *(void *)uint64_t v40 = v30;
  *(void *)(v40 + 8) = v29;
  *(void *)(v40 + 16) = v31;
  *(void *)(v40 + 24) = v32;
  *(_WORD *)(v40 + 32) = v33;
  *(unsigned char *)(v40 + 34) = v17;
LABEL_14:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v26);
  sub_1B29998C8();
}

void sub_1B2AAA8F0()
{
}

void sub_1B2AAA908()
{
}

uint64_t sub_1B2AAA928()
{
  __int16 v1 = *((_WORD *)v0 + 16);
  char v2 = *((unsigned char *)v0 + 34);
  long long v3 = v0[1];
  long long v6 = *v0;
  long long v7 = v3;
  __int16 v8 = v1;
  char v9 = v2;
  sub_1B2E83988();
  CandidateConstraint.hash(into:)((uint64_t)v5);
  return sub_1B2E839E8();
}

uint64_t EntitySourceID.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  uint64_t result = swift_bridgeObjectRelease();
  if (v1)
  {
    return sub_1B2E82498();
  }
  return result;
}

uint64_t static EntitySourceID.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (sub_1B2E837A8(), uint64_t result = sub_1B2ABAD7C(), (v8 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        BOOL v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_1B2E837A8() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B2AAAAA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2AAAB88(char a1)
{
  if (a1) {
    return 0x656372756F73;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_1B2AAABB8()
{
  return sub_1B2AAAB88(*v0);
}

uint64_t sub_1B2AAABC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AAAAA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AAABE8(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4DB4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AAAC24(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4DB4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void EntitySourceID.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C3C768);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29A0498();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2AB4DB4();
  sub_1B2ABB638();
  sub_1B2E83688();
  if (!v0) {
    sub_1B2E83628();
  }
  uint64_t v4 = sub_1B299B834();
  v5(v4);
  sub_1B2A4AA78();
  sub_1B29998C8();
}

uint64_t EntitySourceID.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1B29B1A78();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  if (v1) {
    sub_1B2E82498();
  }
  return sub_1B2E839E8();
}

void EntitySourceID.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3C778);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E524();
  sub_1B2AB4DB4();
  sub_1B2A4A928();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v2);
  }
  else
  {
    uint64_t v6 = sub_1B2E83568();
    uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B2E83508();
    uint64_t v11 = v10;
    uint64_t v13 = v9;
    sub_1B29A15FC();
    v12();
    *uint64_t v4 = v6;
    v4[1] = v8;
    v4[2] = v13;
    v4[3] = v11;
    swift_bridgeObjectRetain();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B2ABB164();
  sub_1B29998C8();
}

void sub_1B2AAAF70()
{
}

void sub_1B2AAAF88()
{
}

uint64_t sub_1B2AAAFAC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  if (v1) {
    sub_1B2E82498();
  }
  return sub_1B2E839E8();
}

uint64_t EntitySourceID.description.getter()
{
  sub_1B2ABAB9C();
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  sub_1B2ABB130();
  swift_bridgeObjectRetain();
  sub_1B2ABAE88();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2ABAE88();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static EntityResolutionRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v74 = *(void *)(a1 + 40);
  int v72 = *(unsigned __int8 *)(a1 + 90);
  int v7 = *(unsigned __int16 *)(a1 + 88);
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v16 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  int v17 = *(unsigned __int8 *)(a2 + 90);
  int v73 = *(unsigned __int16 *)(a2 + 88);
  if (v3)
  {
    if (!v8) {
      return 0;
    }
    uint64_t v66 = *(void *)(a2 + 96);
    uint64_t v67 = *(void *)(a1 + 96);
    *(void *)&long long v65 = *(void *)(a2 + 112);
    *((void *)&v65 + 1) = *(void *)(a1 + 112);
    uint64_t v63 = *(void *)(a2 + 104);
    uint64_t v64 = *(void *)(a1 + 104);
    uint64_t v68 = *(void *)(a1 + 56);
    uint64_t v69 = *(void *)(a1 + 64);
    uint64_t v70 = *(void *)(a1 + 72);
    uint64_t v71 = *(void *)(a1 + 80);
    if (*(void *)a1 != *(void *)a2 || v3 != v8)
    {
      sub_1B2E837A8();
      uint64_t result = sub_1B2ABAD7C();
      if ((v20 & 1) == 0) {
        return result;
      }
    }
  }
  else
  {
    uint64_t v66 = *(void *)(a2 + 96);
    uint64_t v67 = *(void *)(a1 + 96);
    *(void *)&long long v65 = *(void *)(a2 + 112);
    *((void *)&v65 + 1) = *(void *)(a1 + 112);
    uint64_t v63 = *(void *)(a2 + 104);
    uint64_t v64 = *(void *)(a1 + 104);
    uint64_t v68 = *(void *)(a1 + 56);
    uint64_t v69 = *(void *)(a1 + 64);
    uint64_t v70 = *(void *)(a1 + 72);
    uint64_t v71 = *(void *)(a1 + 80);
    if (v8) {
      return 0;
    }
  }
  if (v4)
  {
    if (!v9) {
      return 0;
    }
    uint64_t v21 = sub_1B2999874();
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v61 = v6;
    uint64_t v26 = v14;
    uint64_t v27 = v16;
    int v29 = v28;
    uint64_t v31 = v30;
    char v33 = sub_1B2AA76F4(v21, v32);
    uint64_t v10 = v31;
    int v17 = v29;
    uint64_t v16 = v27;
    uint64_t v14 = v26;
    uint64_t v6 = v61;
    uint64_t v5 = v25;
    uint64_t v15 = v23;
    if ((v33 & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if (v6)
  {
    if (!v10) {
      return 0;
    }
    uint64_t v60 = v5;
    uint64_t v62 = v15;
    int v59 = v17;
    uint64_t v34 = v10;
    swift_bridgeObjectRetain();
    uint64_t v35 = swift_bridgeObjectRetain();
    char v36 = sub_1B2AA7824(v35, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v17 = v59;
    uint64_t v5 = v60;
    uint64_t v15 = v62;
    if ((v36 & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  if (v5 != v11 || v74 != v12)
  {
    sub_1B2E837A8();
    uint64_t result = sub_1B2ABAD7C();
    if ((v38 & 1) == 0) {
      return result;
    }
  }
  int v39 = v17;
  int v40 = v7;
  uint64_t v41 = v15;
  if ((sub_1B29AC08C() & 1) == 0) {
    return 0;
  }
  uint64_t v42 = v40 | (v72 << 16);
  uint64_t v43 = v73 | (v39 << 16);
  uint64_t v44 = v67;
  uint64_t v45 = v41;
  if (BYTE2(v42) == 255)
  {
    if (BYTE2(v43) == 255) {
      goto LABEL_35;
    }
LABEL_31:
    uint64_t v46 = v45;
    sub_1B2A9DBC0(v13, v14, v16, v45, v43);
    sub_1B2A2272C(v68, v69, v70, v71, v42);
    sub_1B2A2272C(v13, v14, v16, v46, v43);
    return 0;
  }
  v78[0] = v68;
  v78[1] = v69;
  v78[2] = v70;
  v78[3] = v71;
  __int16 v79 = v40;
  char v80 = (v40 | (v72 << 16)) >> 16;
  if (BYTE2(v43) == 255)
  {
    sub_1B299B460(v68, v69);
    sub_1B2A22740(v68, v69, v70, v71, v42, SBYTE2(v42));
    uint64_t v45 = v41;
    goto LABEL_31;
  }
  v75[0] = v13;
  v75[1] = v14;
  v75[2] = v16;
  v75[3] = v41;
  __int16 v76 = v73;
  char v77 = (v73 | (v39 << 16)) >> 16;
  sub_1B299B460(v68, v69);
  char v47 = static CandidateConstraint.== infix(_:_:)(v78, (uint64_t)v75);
  uint64_t v48 = sub_1B2ABB04C();
  sub_1B2A22740(v48, v49, v50, v51, v52, SBYTE2(v42));
  uint64_t v53 = sub_1B2ABB04C();
  sub_1B2A2272C(v53, v54, v55, v56, v57);
  uint64_t v44 = v67;
  if ((v47 & 1) == 0) {
    return 0;
  }
LABEL_35:
  if (!v44)
  {
    if (!v66) {
      goto LABEL_40;
    }
    return 0;
  }
  if (!v66 || (sub_1B2AA7620(v44, v66) & 1) == 0) {
    return 0;
  }
LABEL_40:
  uint64_t result = v65 == 0;
  if (*((void *)&v65 + 1) && (void)v65)
  {
    if (v64 == v63 && *((void *)&v65 + 1) == (void)v65)
    {
      return 1;
    }
    else
    {
      return sub_1B2E837A8();
    }
  }
  return result;
}

void EntityResolutionRequest.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  int v5 = *(unsigned __int8 *)(v1 + 90);
  int v6 = *(unsigned __int16 *)(v1 + 88);
  if (*(void *)(v1 + 8))
  {
    sub_1B2ABB770();
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_3:
      sub_1B2ABB770();
      swift_bridgeObjectRetain();
      sub_1B2AB4E94(a1, v3);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1B2ABB794();
    if (v3) {
      goto LABEL_3;
    }
  }
  sub_1B2ABB794();
LABEL_6:
  unsigned int v7 = v6 | (v5 << 16);
  if (v4)
  {
    sub_1B2ABB770();
    swift_bridgeObjectRetain();
    sub_1B2AB4E00(a1, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B2ABB794();
  }
  sub_1B2AA5684();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  if (v7 < 0xFF0000)
  {
    sub_1B2ABB770();
    CandidateConstraint.hash(into:)(a1);
  }
  else
  {
    sub_1B2ABB794();
  }
}

uint64_t sub_1B2AAB684(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B2E99C10 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x736E617073 && a2 == 0xE500000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x4974736575716572 && a2 == 0xE900000000000064;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 1701080941 && a2 == 0xE400000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000001B2E99C30 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 0x4449656372756F73 && a2 == 0xE900000000000073;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            BOOL v10 = a1 == 7432043 && a2 == 0xE300000000000000;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              BOOL v11 = a1 == 0x466564756C636E69 && a2 == 0xEF73657275746165;
              if (v11 || (sub_1B2E837A8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD000000000000014 && a2 == 0x80000001B2E99C50)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                char v12 = sub_1B2E837A8();
                swift_bridgeObjectRelease();
                if (v12) {
                  return 9;
                }
                else {
                  return 10;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B2AABA5C()
{
  return 10;
}

unint64_t sub_1B2AABA64(char a1)
{
  unint64_t result = 1954047348;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x736E617073;
      break;
    case 3:
      unint64_t result = 0x4974736575716572;
      break;
    case 4:
      unint64_t result = 1701080941;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x4449656372756F73;
      break;
    case 7:
      unint64_t result = 7432043;
      break;
    case 8:
      unint64_t result = 0x466564756C636E69;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2AABBA4()
{
  return sub_1B2AABA64(*v0);
}

uint64_t sub_1B2AABBAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AAB684(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AABBD4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2AABA5C();
  *a1 = result;
  return result;
}

uint64_t sub_1B2AABBFC(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4F24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AABC38(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB4F24();

  return MEMORY[0x1F41862B0](a1, v2);
}

void EntityResolutionRequest.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3C780);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2AB4F24();
  sub_1B2ABB704();
  sub_1B2E83628();
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  }
  else
  {
    sub_1B2ABAD40();
    sub_1B29A3EB4(&qword_1E9C3C790);
    sub_1B2ABAA44(&qword_1E9C3C798, &qword_1E9C3C790, (void (*)(void))sub_1B2A6F5AC);
    sub_1B299E670();
    sub_1B29A3EB4(&qword_1E9C3C7A0);
    sub_1B2ABAA44(&qword_1E9C3C7A8, &qword_1E9C3C7A0, (void (*)(void))sub_1B2AB4F70);
    sub_1B299E670();
    sub_1B2E83688();
    sub_1B2AB4FBC();
    sub_1B2ABB5F0();
    sub_1B2E836D8();
    sub_1B2AB4B94();
    sub_1B2ABB5F0();
    sub_1B2E83668();
    sub_1B29A3EB4(&qword_1E9C3C7C0);
    sub_1B2ABAA44(&qword_1E9C3C7C8, &qword_1E9C3C7C0, (void (*)(void))sub_1B2AB5008);
    sub_1B299E670();
    sub_1B2E83628();
    sub_1B2E83698();
    sub_1B2E83698();
    sub_1B2ABAF78();
    v10();
  }
  sub_1B2A4AA78();
  sub_1B29998C8();
}

uint64_t EntityResolutionRequest.hashValue.getter()
{
  sub_1B29B1A78();
  EntityResolutionRequest.hash(into:)((uint64_t)v1);
  return sub_1B2E839E8();
}

void EntityResolutionRequest.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3C7D8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299F280();
  uint64_t v62 = (uint64_t)v2;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2AB4F24();
  sub_1B2E83A18();
  if (v0)
  {
    unsigned int v6 = 0;
  }
  else
  {
    LOBYTE(v37) = 0;
    uint64_t v7 = sub_1B2ABB59C();
    uint64_t v9 = v8;
    sub_1B29A3EB4(&qword_1E9C3C790);
    LOBYTE(v36[0]) = 1;
    uint64_t v10 = sub_1B2ABAA44(&qword_1E9C3C7E0, &qword_1E9C3C790, (void (*)(void))sub_1B2A6F514);
    swift_bridgeObjectRetain();
    sub_1B2ABAD88();
    uint64_t v29 = v9;
    if (v10)
    {
      uint64_t v11 = sub_1B29A28EC();
      v12(v11);
      swift_bridgeObjectRelease();
      unsigned int v6 = 1;
    }
    else
    {
      uint64_t v13 = v37;
      sub_1B29A3EB4(&qword_1E9C3C7A0);
      LOBYTE(v36[0]) = 2;
      uint64_t v14 = sub_1B2ABAA44(&qword_1E9C3C7E8, &qword_1E9C3C7A0, (void (*)(void))sub_1B2AB5054);
      swift_bridgeObjectRetain();
      sub_1B2ABAD88();
      if (!v14)
      {
        uint64_t v17 = v37;
        LOBYTE(v37) = 3;
        swift_bridgeObjectRetain();
        sub_1B2ABB588();
        uint64_t v28 = v17;
        uint64_t v26 = sub_1B2E83568();
        uint64_t v19 = v18;
        sub_1B2AB50A0();
        swift_bridgeObjectRetain();
        sub_1B2ABB534();
        sub_1B2E835B8();
        uint64_t v27 = v19;
        sub_1B2AB4D68();
        sub_1B2ABB534();
        sub_1B2E83548();
        uint64_t v33 = v37;
        uint64_t v34 = v38;
        uint64_t v35 = v39;
        sub_1B29A3EB4(&qword_1E9C3C7C0);
        LOBYTE(v36[0]) = 6;
        uint64_t v32 = v40;
        unsigned int v31 = (unsigned __int16)v41 | (BYTE2(v41) << 16);
        sub_1B2A9DBC0(v37, v38, v39, v40, v31);
        sub_1B2ABAA44(&qword_1E9C3C800, &qword_1E9C3C7C0, (void (*)(void))sub_1B2AB50EC);
        sub_1B2E83548();
        swift_bridgeObjectRetain();
        uint64_t v30 = v37;
        uint64_t v25 = sub_1B2ABB59C();
        LOBYTE(v37) = 8;
        uint64_t v21 = v20;
        swift_bridgeObjectRetain();
        sub_1B2ABB588();
        char v24 = sub_1B2E83578();
        char v58 = 9;
        char v22 = sub_1B2E83578();
        v24 &= 1u;
        sub_1B299B798();
        v23();
        v36[0] = v7;
        v36[1] = v29;
        v36[2] = v13;
        v36[3] = v28;
        v36[4] = v26;
        v36[5] = v27;
        LOBYTE(v36[6]) = 3;
        v36[7] = v33;
        v36[8] = v34;
        v36[9] = v35;
        v36[10] = v32;
        BYTE2(v36[11]) = BYTE2(v31);
        LOWORD(v36[11]) = v31;
        v36[12] = v30;
        v36[13] = v25;
        v36[14] = v21;
        LOBYTE(v36[15]) = v24;
        BYTE1(v36[15]) = v22 & 1;
        sub_1B2AB5138((uint64_t)v36);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2A2272C(v33, v34, v35, v32, v31);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        memcpy(v4, v36, 0x7AuLL);
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v62);
        uint64_t v37 = v7;
        uint64_t v38 = v29;
        uint64_t v39 = v13;
        uint64_t v40 = v28;
        uint64_t v41 = v26;
        uint64_t v42 = v27;
        char v43 = 3;
        *(_DWORD *)uint64_t v44 = v61[0];
        *(_DWORD *)&v44[3] = *(_DWORD *)((char *)v61 + 3);
        uint64_t v45 = v33;
        uint64_t v46 = v34;
        uint64_t v47 = v35;
        uint64_t v48 = v32;
        char v50 = BYTE2(v31);
        __int16 v49 = v31;
        int v51 = v59;
        char v52 = v60;
        uint64_t v53 = v30;
        uint64_t v54 = v25;
        uint64_t v55 = v21;
        char v56 = v24;
        char v57 = v22 & 1;
        sub_1B2AB51F4((uint64_t)&v37);
        goto LABEL_10;
      }
      uint64_t v15 = sub_1B29A28EC();
      v16(v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned int v6 = 3;
    }
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_6;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    if (((v6 >> 2) & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  if ((v6 >> 1)) {
    goto LABEL_9;
  }
LABEL_6:
  if ((v6 >> 2)) {
LABEL_7:
  }
    swift_bridgeObjectRelease();
LABEL_10:
  sub_1B2ABB164();
  sub_1B29998C8();
}

void sub_1B2AAC854()
{
}

void sub_1B2AAC86C()
{
}

uint64_t sub_1B2AAC890()
{
  sub_1B2E83988();
  EntityResolutionRequest.hash(into:)((uint64_t)v1);
  return sub_1B2E839E8();
}

uint64_t sub_1B2AAC8CC()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 48);
  sub_1B2ABAE54();
  switch(v1)
  {
    case 1:
      sub_1B2ABAB88();
      break;
    case 2:
      sub_1B2ABAB74();
      break;
    case 3:
      uint64_t v2 = sub_1B299AD6C();
      goto LABEL_6;
    case 5:
LABEL_13:
      swift_bridgeObjectRelease();
      char v4 = 0;
      return v4 & 1;
    case 6:
      uint64_t v2 = sub_1B2ABAC48();
LABEL_6:
      sub_1B2ABB404(v2);
      break;
    default:
      break;
  }
  char v3 = sub_1B2E837A8();
  swift_bridgeObjectRelease();
  char v4 = 0;
  if ((v3 & 1) == 0)
  {
    sub_1B29B1E20();
    switch((int)v1)
    {
      case 0:
        sub_1B2ABAE54();
        goto LABEL_15;
      case 1:
        sub_1B2ABAB88();
        goto LABEL_15;
      case 2:
        sub_1B2ABAB74();
        goto LABEL_15;
      case 3:
        sub_1B299AD6C();
        goto LABEL_15;
      case 4:
        goto LABEL_13;
      case 5:
        goto LABEL_15;
      case 6:
        sub_1B2ABAC48();
LABEL_15:
        char v5 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        char v4 = v5 ^ 1;
        break;
      default:
        JUMPOUT(0);
    }
  }
  return v4 & 1;
}

__n128 Mention.init(span:entityClasses:score:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v6;
  *(void *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = 0;
  *(void *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = a2;
  *(void *)(a5 + 64) = a3;
  *(unsigned char *)(a5 + 72) = a4 & 1;
  return result;
}

void sub_1B2AACADC(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 96);
  switch(v4)
  {
    case 1:
      sub_1B2ABAB88();
      goto LABEL_7;
    case 2:
      sub_1B2ABAB74();
      goto LABEL_7;
    case 3:
      sub_1B299AD6C();
      goto LABEL_7;
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 6:
      sub_1B2ABAC48();
      goto LABEL_7;
    default:
LABEL_7:
      char v7 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if ((v7 & 1) == 0) {
        goto LABEL_22;
      }
LABEL_8:
      if (v5)
      {
        long long v8 = 0uLL;
        if (v3 && *(void *)(v3 + 16))
        {
          uint64_t v9 = *(void *)(v3 + 32);
          long long v22 = *(_OWORD *)(v3 + 48);
          uint64_t v10 = swift_bridgeObjectRetain();
          long long v8 = v22;
        }
        else
        {
          uint64_t v9 = 0;
          uint64_t v10 = 0;
        }
        v23[0] = v9;
        v23[1] = v10;
        long long v24 = v8;
        if (v2) {
          uint64_t v11 = v2;
        }
        else {
          uint64_t v11 = MEMORY[0x1E4FBC860];
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        Mention.init(sourceIDs:span:entityClasses:)(v5, v23, v11, (uint64_t)v25);
        uint64_t v12 = v26;
        char v13 = v27;
        long long v14 = v25[1];
        *(_OWORD *)a1 = v25[0];
        *(_OWORD *)(a1 + 16) = v14;
        long long v15 = v25[3];
        *(_OWORD *)(a1 + 32) = v25[2];
        *(_OWORD *)(a1 + 48) = v15;
        *(void *)(a1 + 64) = v12;
        *(unsigned char *)(a1 + 72) = v13;
      }
      else
      {
        if (qword_1EB7E3A20 != -1) {
          swift_once();
        }
        uint64_t v16 = sub_1B2E81FB8();
        sub_1B29A4B98(v16, (uint64_t)qword_1EB7E4AD8);
        uint64_t v17 = sub_1B2E81F98();
        os_log_type_t v18 = sub_1B2E82DB8();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = (_WORD *)swift_slowAlloc();
          *uint64_t v19 = 0;
          sub_1B299F5AC(&dword_1B2996000, v20, v21, "No sourceIDs available for a structured input.");
          MEMORY[0x1B3EB30C0](v19, -1, -1);
        }

LABEL_22:
        sub_1B2ABB7D0((__n128)xmmword_1B2EC00B0);
      }
      return;
  }
}

uint64_t Mention.init(sourceIDs:span:entityClasses:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = a3;
  uint64_t v6 = a4;
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v17 = a2[3];
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B29BFD80();
    uint64_t v11 = a1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1B2ABB040();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v12 = *(void *)(v18 + 16);
      if (v12 >= *(void *)(v18 + 24) >> 1) {
        sub_1B29BFD80();
      }
      v11 += 32;
      *(void *)(v18 + 16) = v12 + 1;
      uint64_t v13 = v18 + 16 * v12;
      *(void *)(v13 + 32) = 39;
      *(void *)(v13 + 40) = 0xE100000000000000;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v4 = a3;
    uint64_t v6 = a4;
  }
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2A20660();
  sub_1B2ABB758();
  sub_1B2E822D8();
  swift_bridgeObjectRelease();
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B2E82518();
  *(void *)uint64_t v6 = v7;
  *(void *)(v6 + 8) = v8;
  *(void *)(v6 + 16) = v9;
  *(void *)(v6 + 24) = v17;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = 0xD000000000000013;
  *(void *)(v6 + 48) = 0x80000001B2E99A30;
  *(void *)(v6 + 56) = v4;
  *(void *)(v6 + 64) = 0;
  *(unsigned char *)(v6 + 72) = 1;
  return result;
}

void sub_1B2AACF8C(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  unint64_t v2 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 104);
  uint64_t v5 = *(void *)(v1 + 112);
  switch(*(unsigned char *)(v1 + 48))
  {
    case 1:
      sub_1B2ABAB88();
      goto LABEL_8;
    case 2:
      sub_1B2ABAB74();
      goto LABEL_8;
    case 3:
      sub_1B299AD6C();
      goto LABEL_8;
    case 4:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 5:
      sub_1B29B1E20();
      goto LABEL_8;
    case 6:
      sub_1B2ABAC48();
      goto LABEL_8;
    default:
LABEL_8:
      sub_1B299F3A0();
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0) {
        goto LABEL_30;
      }
LABEL_9:
      if (v5)
      {
        uint64_t v9 = HIBYTE(v2) & 0xF;
        if ((v2 & 0x2000000000000000) == 0) {
          uint64_t v9 = v3;
        }
        uint64_t v10 = 7;
        if (((v2 >> 60) & ((v3 & 0x800000000000000) == 0)) != 0) {
          uint64_t v10 = 11;
        }
        uint64_t v11 = MEMORY[0x1E4FBC860];
        if (v2) {
          uint64_t v12 = v3;
        }
        else {
          uint64_t v12 = 0;
        }
        *(void *)a1 = v12;
        *(void *)(a1 + 8) = v2;
        uint64_t v13 = v10 | (v9 << 16);
        uint64_t v14 = 15;
        if (!v2)
        {
          uint64_t v14 = 0;
          uint64_t v13 = 0;
        }
        *(void *)(a1 + 16) = v14;
        *(void *)(a1 + 24) = v13;
        *(void *)(a1 + 32) = 0;
        *(void *)(a1 + 40) = v6;
        if (v4) {
          uint64_t v15 = v4;
        }
        else {
          uint64_t v15 = v11;
        }
        *(void *)(a1 + 48) = v5;
        *(void *)(a1 + 56) = v15;
        *(void *)(a1 + 64) = 0;
        *(unsigned char *)(a1 + 72) = 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        if (qword_1EB7E3A20 != -1) {
          swift_once();
        }
        uint64_t v16 = sub_1B2E81FB8();
        sub_1B29A4B98(v16, (uint64_t)qword_1EB7E4AD8);
        uint64_t v17 = sub_1B2E81F98();
        os_log_type_t v18 = sub_1B2E82DB8();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = (_WORD *)swift_slowAlloc();
          *uint64_t v19 = 0;
          sub_1B299F5AC(&dword_1B2996000, v20, v21, "No kgq available for a semi-structured input.");
          MEMORY[0x1B3EB30C0](v19, -1, -1);
        }

LABEL_30:
        sub_1B2ABB7D0((__n128)xmmword_1B2EC00B0);
      }
      return;
  }
}

__n128 Mention.init(kgq:span:entityClasses:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __n128 result = *(__n128 *)a3;
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a3;
  *(_OWORD *)(a5 + 16) = v6;
  *(void *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = a1;
  *(void *)(a5 + 48) = a2;
  *(void *)(a5 + 56) = a4;
  *(void *)(a5 + 64) = 0;
  *(unsigned char *)(a5 + 72) = 1;
  return result;
}

uint64_t EntityResolutionRequest.description.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v7 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v10 = *(void *)(v0 + 64);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 72);
  int v3 = *(unsigned __int8 *)(v0 + 90);
  int v4 = *(unsigned __int16 *)(v0 + 88);
  uint64_t v12 = *(void *)(v0 + 96);
  sub_1B2E831F8();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  if (v2) {
    MEMORY[0x1B3EB1020](v2, &type metadata for EntityClass);
  }
  else {
    _s20IntelligencePlatform16FeedbackProtocolPAAE7variantSSSgvg_0();
  }
  sub_1B29A3EB4(&qword_1EB7D9790);
  sub_1B2E823E8();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  if (v1) {
    MEMORY[0x1B3EB1020](v1, &type metadata for Span);
  }
  else {
    _s20IntelligencePlatform16FeedbackProtocolPAAE7variantSSSgvg_0();
  }
  sub_1B2E823E8();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2ABAB88();
  switch(v7)
  {
    case 1:
    case 4:
      break;
    case 2:
      sub_1B2ABAB74();
      break;
    case 3:
      uint64_t v5 = sub_1B299AD6C();
      goto LABEL_13;
    case 5:
      sub_1B29B1E20();
      break;
    case 6:
      uint64_t v5 = sub_1B2ABAC48();
LABEL_13:
      sub_1B2ABB404(v5);
      break;
    default:
      sub_1B2ABAE54();
      break;
  }
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2A9DBC0(v11, v10, v9, v8, v4 | (v3 << 16));
  sub_1B29A3EB4((uint64_t *)&unk_1EB7D89E0);
  sub_1B2E823E8();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  if (v12) {
    MEMORY[0x1B3EB1020](v12, &type metadata for EntitySourceID);
  }
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B2AAD618()
{
  uint64_t v0 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1B2AAD670(char a1)
{
  if (a1) {
    return 1954047348;
  }
  else {
    return 0x65676E6172;
  }
}

uint64_t sub_1B2AAD69C(char *a1, char *a2)
{
  return sub_1B29AB750(*a1, *a2);
}

uint64_t sub_1B2AAD6A8()
{
  return sub_1B29AEAB0();
}

uint64_t sub_1B2AAD6B0()
{
  return sub_1B2AA4E10();
}

uint64_t sub_1B2AAD6B8()
{
  return sub_1B29F8E00();
}

uint64_t sub_1B2AAD6C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2AAD618();
  *a1 = result;
  return result;
}

uint64_t sub_1B2AAD6F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B2AAD670(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B2AAD71C()
{
  return sub_1B2AAD670(*v0);
}

uint64_t sub_1B2AAD724@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2AAD66C();
  *a1 = result;
  return result;
}

uint64_t sub_1B2AAD74C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB52B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AAD788(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB52B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void Span.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3C810);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E524();
  sub_1B2AB52B0();
  sub_1B2A4A928();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v2);
LABEL_4:
    sub_1B2ABB164();
    sub_1B29998C8();
    return;
  }
  sub_1B2ABAD40();
  unint64_t v6 = sub_1B2E83568();
  unint64_t v8 = v7;
  uint64_t v14 = v4;
  sub_1B29A3EB4(&qword_1E9C37CF0);
  sub_1B2AB53E0(&qword_1E9C3C820, &qword_1E9C37CF0);
  swift_bridgeObjectRetain();
  sub_1B2E835B8();
  if (!v15[2])
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v13 = sub_1B2AAD9FC(0xFuLL, v15[4], v6, v8);
  if (v15[2] < 2uLL)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v9 = v15[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v10 = sub_1B2AAD9FC(0xFuLL, v9, v6, v8);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1B2ABB1A4();
  v12(v11);
  if (v10 >> 14 >= v13 >> 14)
  {
    unint64_t *v14 = v6;
    v14[1] = v8;
    double v14[2] = v13;
    v14[3] = v10;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v2);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
LABEL_11:
  __break(1u);
}

unint64_t sub_1B2AAD9FC(unint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t result = sub_1B2AB42A4(a1, a3, a4);
  if (a2 < 0)
  {
    uint64_t v14 = 0;
    while (1)
    {
      if (result < 0x10000) {
        goto LABEL_39;
      }
      if ((a4 & 0x1000000000000000) == 0) {
        break;
      }
      unint64_t result = sub_1B2E82458();
LABEL_36:
      if (--v14 <= a2) {
        return result;
      }
    }
    unint64_t v15 = result >> 16;
    if ((a4 & 0x2000000000000000) != 0)
    {
      unint64_t v21 = a3;
      uint64_t v22 = a4 & 0xFFFFFFFFFFFFFFLL;
      if ((*((unsigned char *)&v21 + v15 - 1) & 0xC0) == 0x80)
      {
        uint64_t v17 = 0;
        do
          int v19 = *((unsigned char *)&v21 + v15 + v17-- - 2) & 0xC0;
        while (v19 == 128);
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v16 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a3 & 0x1000000000000000) == 0) {
        uint64_t v16 = sub_1B2E83298();
      }
      if ((*(unsigned char *)(v15 + v16 - 1) & 0xC0) == 0x80)
      {
        uint64_t v17 = 0;
        do
          int v18 = *(unsigned char *)(v16 + v15 - 2 + v17--) & 0xC0;
        while (v18 == 128);
LABEL_33:
        uint64_t v20 = 1 - v17;
LABEL_35:
        unint64_t result = ((v15 - v20) << 16) | 5;
        goto LABEL_36;
      }
    }
    uint64_t v20 = 1;
    goto LABEL_35;
  }
  if (a2)
  {
    if ((a4 & 0x2000000000000000) != 0) {
      unint64_t v8 = HIBYTE(a4) & 0xF;
    }
    else {
      unint64_t v8 = a3 & 0xFFFFFFFFFFFFLL;
    }
    while (1)
    {
      unint64_t v9 = result >> 16;
      if (result >> 16 >= v8) {
        break;
      }
      if ((a4 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1B2E82448();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          unint64_t v21 = a3;
          uint64_t v22 = a4 & 0xFFFFFFFFFFFFFFLL;
          int v11 = *((unsigned __int8 *)&v21 + v9);
        }
        else
        {
          uint64_t v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0) {
            uint64_t v10 = sub_1B2E83298();
          }
          int v11 = *(unsigned __int8 *)(v10 + v9);
        }
        int v12 = (char)v11;
        unsigned int v13 = __clz(v11 ^ 0xFF) - 24;
        if (v12 >= 0) {
          LOBYTE(v13) = 1;
        }
        unint64_t result = ((v9 + v13) << 16) | 5;
      }
      if (!--a2) {
        return result;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
  }
  return result;
}

void Span.encode(to:)()
{
  sub_1B299F300();
  int v3 = v2;
  sub_1B29A3EB4(&qword_1E9C3C828);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A0498();
  unint64_t v5 = *v0;
  unint64_t v6 = v0[1];
  uint64_t v11 = v0[2];
  uint64_t v12 = v0[3];
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2AB52B0();
  sub_1B2E83A38();
  sub_1B2E83688();
  if (v1) {
    goto LABEL_4;
  }
  sub_1B2AADD98(0xFuLL, v11, v5, v6);
  uint64_t v8 = v7;
  sub_1B2AADD98(0xFuLL, v12, v5, v6);
  if (v9 >= v8)
  {
    sub_1B29A3EB4(&qword_1E9C3C830);
    sub_1B2AB53E0(&qword_1E9C3C838, &qword_1E9C3C830);
    sub_1B299F594();
LABEL_4:
    sub_1B2ABAF78();
    v10();
    sub_1B2A4AA78();
    sub_1B29998C8();
    return;
  }
  __break(1u);
}

void sub_1B2AADD98(unint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v6 = sub_1B2AB42A4(a1, a3, a4);
  sub_1B2ABB548();
  unint64_t v10 = sub_1B2AB42A4(v7, v8, v9) >> 14;
  if (v6 >> 14 >= v10)
  {
    if (v10 >= v6 >> 14) {
      return;
    }
    uint64_t v17 = 0;
    while (1)
    {
      if (__OFSUB__(v17--, 1)) {
        goto LABEL_36;
      }
      if ((a4 & 0x1000000000000000) == 0) {
        break;
      }
      sub_1B2ABB548();
      unint64_t v6 = sub_1B2E82458();
LABEL_32:
      if (v10 >= v6 >> 14) {
        return;
      }
    }
    if ((a4 & 0x2000000000000000) != 0)
    {
      unint64_t v23 = a3;
      uint64_t v24 = a4 & 0xFFFFFFFFFFFFFFLL;
      if ((*((unsigned char *)&v23 + (v6 >> 16) - 1) & 0xC0) == 0x80)
      {
        do
          sub_1B2ABB4FC();
        while (v21);
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v19 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a3 & 0x1000000000000000) == 0) {
        uint64_t v19 = sub_1B2E83298();
      }
      if ((*(unsigned char *)(v19 + (v6 >> 16) - 1) & 0xC0) == 0x80)
      {
        do
          sub_1B2ABB4FC();
        while (v21);
LABEL_29:
        uint64_t v22 = 1 - v20;
LABEL_31:
        unint64_t v6 = (v6 - (v22 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
        goto LABEL_32;
      }
    }
    uint64_t v22 = 1;
    goto LABEL_31;
  }
  for (uint64_t i = 0; !__OFADD__(i, 1); ++i)
  {
    if ((a4 & 0x1000000000000000) != 0)
    {
      sub_1B2ABB548();
      unint64_t v6 = sub_1B2E82448();
    }
    else
    {
      unint64_t v12 = v6 >> 16;
      if ((a4 & 0x2000000000000000) != 0)
      {
        unint64_t v23 = a3;
        uint64_t v24 = a4 & 0xFFFFFFFFFFFFFFLL;
        int v14 = *((unsigned __int8 *)&v23 + v12);
      }
      else
      {
        uint64_t v13 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((a3 & 0x1000000000000000) == 0) {
          uint64_t v13 = sub_1B2E83298();
        }
        int v14 = *(unsigned __int8 *)(v13 + v12);
      }
      int v15 = (char)v14;
      unsigned int v16 = __clz(v14 ^ 0xFF) - 24;
      if (v15 >= 0) {
        LOBYTE(v16) = 1;
      }
      unint64_t v6 = ((v12 + v16) << 16) | 5;
    }
    if (v10 <= v6 >> 14) {
      return;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_1B2AADF9C()
{
}

void sub_1B2AADFB4()
{
}

uint64_t Span.hash(into:)()
{
  return sub_1B2E839C8();
}

void static Span.== infix(_:_:)()
{
  sub_1B299B720();
  BOOL v2 = *v0 == *v1 && v0[1] == v1[1];
  if (v2 || (sub_1B299D7C8() & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2ABB040();
    uint64_t v3 = sub_1B2E82628();
    uint64_t v5 = v4;
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1B3EB0C00](v3, v5, v7, v9);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_1B2ABB554();
    sub_1B2E82628();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1B2ABB3B0();
    uint64_t v14 = MEMORY[0x1B3EB0C00](v13);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    if (v10 != v14 || v12 != v16) {
      sub_1B299D7C8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B299B738();
}

uint64_t Span.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2AAE1F0()
{
  return sub_1B2E839E8();
}

uint64_t Span.description.getter()
{
  unint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  unint64_t v3 = v0[2];
  unint64_t v4 = v0[3];
  uint64_t v5 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0) {
    uint64_t v5 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v6 = v5 << 16;
  unint64_t v7 = 4 * v5;
  if (v7 >= v3 >> 14) {
    unint64_t v8 = v0[2];
  }
  else {
    unint64_t v8 = v6;
  }
  if (v7 >= v4 >> 14) {
    unint64_t v9 = v0[3];
  }
  else {
    unint64_t v9 = v6;
  }
  unint64_t v10 = v9 >> 14;
  if (v3 >> 14 == v8 >> 14 && v10 == v4 >> 14)
  {
    v14[0] = 91;
    v14[1] = 0xE100000000000000;
    sub_1B2AADD98(0xFuLL, v3, v2, v1);
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2ABB758();
    sub_1B2E82518();
    sub_1B2AADD98(0xFuLL, v4, v2, v1);
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
    sub_1B2E82628();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1B2ABB3B0();
    MEMORY[0x1B3EB0C00](v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B2ABB1E4();
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    strcpy((char *)v14, "Span: range: ");
    HIWORD(v14[1]) = -4864;
    sub_1B2AB4A24();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
  }
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  return v14[0];
}

uint64_t sub_1B2AAE4B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1851879539 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x4449656372756F73 && a2 == 0xE900000000000073;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 7432043 && a2 == 0xE300000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6C43797469746E65 && a2 == 0xED00007365737361;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_1B2AAE6C8(char a1)
{
  uint64_t result = 1851879539;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4449656372756F73;
      break;
    case 2:
      uint64_t result = 7432043;
      break;
    case 3:
      uint64_t result = 0x6C43797469746E65;
      break;
    case 4:
      uint64_t result = 0x65726F6373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2AAE774()
{
  return sub_1B2AAE6C8(*v0);
}

uint64_t sub_1B2AAE77C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AAE4B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AAE7A4(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB52FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AAE7E0(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB52FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void Mention.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C3C840);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29A0498();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2AB52FC();
  sub_1B2ABB638();
  sub_1B2AB4F70();
  sub_1B2E83668();
  if (!v0)
  {
    sub_1B2ABAD40();
    sub_1B29A3EB4(&qword_1E9C3C7C0);
    sub_1B2ABAA44(&qword_1E9C3C7C8, &qword_1E9C3C7C0, (void (*)(void))sub_1B2AB5008);
    sub_1B2ABAEA4();
    sub_1B2E83628();
    sub_1B29A3EB4(&qword_1E9C3C790);
    sub_1B2ABAA44(&qword_1E9C3C798, &qword_1E9C3C790, (void (*)(void))sub_1B2A6F5AC);
    sub_1B2ABAEA4();
    sub_1B2E83648();
  }
  sub_1B2ABAF78();
  v4();
  sub_1B2A4AA78();
  sub_1B29998C8();
}

void Mention.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3C850);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B0C8();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2AB52FC();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    sub_1B2AB5054();
    sub_1B2E83548();
    uint64_t v14 = v15;
    sub_1B29A3EB4(&qword_1E9C3C7C0);
    sub_1B2ABAD40();
    sub_1B2ABAA44(&qword_1E9C3C800, &qword_1E9C3C7C0, (void (*)(void))sub_1B2AB50EC);
    swift_bridgeObjectRetain();
    sub_1B2E83548();
    uint64_t v6 = v15;
    LOBYTE(v15) = 2;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1B2E83508();
    uint64_t v8 = v7;
    sub_1B29A3EB4(&qword_1E9C3C790);
    sub_1B2ABAA44(&qword_1E9C3C7E0, &qword_1E9C3C790, (void (*)(void))sub_1B2A6F514);
    uint64_t v13 = v8;
    swift_bridgeObjectRetain();
    sub_1B2E83548();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B2E83528();
    char v19 = v10;
    sub_1B29A15FC();
    v11();
    *(void *)uint64_t v4 = v14;
    *(void *)(v4 + 8) = v16;
    *(void *)(v4 + 16) = v17;
    *(void *)(v4 + 24) = v18;
    *(void *)(v4 + 32) = v6;
    *(void *)(v4 + 40) = v12;
    *(void *)(v4 + 48) = v13;
    *(void *)(v4 + 56) = v15;
    *(void *)(v4 + 64) = v9;
    *(unsigned char *)(v4 + 72) = v19 & 1;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B2ABB164();
  sub_1B29998C8();
}

void sub_1B2AAEED4()
{
}

void sub_1B2AAEEEC()
{
}

uint64_t static Mention.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 32);
  double v4 = *(double *)(a1 + 64);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  double v7 = *(double *)(a2 + 64);
  if (!v2)
  {
    sub_1B2ABB3C0();
    if (v5) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v5) {
    return 0;
  }
  sub_1B2ABB3C0();
  BOOL v10 = *v8 == *v9 && v2 == v5;
  if (v10 || (sub_1B2E837A8(), uint64_t result = sub_1B2ABAD7C(), (v12 & 1) != 0))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_1B2E82628();
    uint64_t v14 = MEMORY[0x1B3EB0C00](v13);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1B2E82628();
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v24 = MEMORY[0x1B3EB0C00](v17, v19, v21, v23);
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    if (v14 == v24 && v16 == v26)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v3) {
        goto LABEL_16;
      }
      goto LABEL_20;
    }
    char v28 = sub_1B299D7AC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v28 & 1) == 0) {
      return result;
    }
LABEL_15:
    if (v3)
    {
LABEL_16:
      if (!v6) {
        return 0;
      }
      uint64_t v29 = sub_1B2ABB040();
      if ((sub_1B2AA7620(v29, v30) & 1) == 0) {
        return 0;
      }
LABEL_21:
      if (v42)
      {
        if (!v41) {
          return 0;
        }
        if (v43 != v40 || v42 != v41)
        {
          sub_1B2E837A8();
          uint64_t result = sub_1B2ABAD7C();
          if ((v32 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v41)
      {
        return 0;
      }
      if (!v39)
      {
        char v35 = v36;
        unsigned int v34 = v37;
        if (v38)
        {
          char v35 = 1;
          uint64_t result = 0;
        }
        else
        {
          uint64_t result = v37;
        }
        if (v35) {
          return result;
        }
        return (v4 == v7) & ~v34;
      }
      if (v38)
      {
        int v33 = sub_1B2AA76F4(v39, v38);
        unsigned int v34 = v37;
        if (v36 & 1 | ((v33 & 1) == 0)) {
          return v33 & v37;
        }
        return (v4 == v7) & ~v34;
      }
      return 0;
    }
LABEL_20:
    if (v6) {
      return 0;
    }
    goto LABEL_21;
  }
  return result;
}

unint64_t Mention.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (v1)
  {
    v4[0] = *(void *)v0;
    v4[1] = v1;
    long long v5 = *(_OWORD *)(v0 + 16);
    return Span.description.getter();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 32);
    if (v3)
    {
      return MEMORY[0x1B3EB1020](v3, &type metadata for EntitySourceID);
    }
    else if (*(void *)(v0 + 48))
    {
      sub_1B2ABAB9C();
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      strcpy((char *)v4, "Knosis Query: ");
      HIBYTE(v4[1]) = -18;
      sub_1B2E82518();
      return v4[0];
    }
    else
    {
      sub_1B299B7D8();
      return sub_1B29B1E20();
    }
  }
}

BOOL static CandidateConfidenceMetric.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CandidateConfidenceMetric.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t CandidateConfidenceMetric.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t RetrievedCandidate.description.getter()
{
  sub_1B2ABB1E4();
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  sub_1B2ABB380();
  EntityIdentifier.description.getter();
  sub_1B2ABAFD4();
  swift_bridgeObjectRelease();
  sub_1B2ABAC24();
  sub_1B2ABB7AC();
  sub_1B2ABAFD4();
  swift_bridgeObjectRelease();
  sub_1B299B7D8();
  sub_1B2E82518();
  Double.toString(decimalPlaces:)(3);
  sub_1B2ABAFD4();
  swift_bridgeObjectRelease();
  return v1;
}

BOOL static RetrievedCandidate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 24) == *(double *)(a2 + 24);
}

uint64_t PopulatedCandidate.description.getter()
{
  char v1 = *(unsigned char *)(v0 + 292);
  sub_1B2ABB1E4();
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  sub_1B2ABB380();
  EntityIdentifier.description.getter();
  sub_1B2ABAFD4();
  swift_bridgeObjectRelease();
  sub_1B2ABAC24();
  sub_1B2ABB7AC();
  sub_1B2ABAFD4();
  swift_bridgeObjectRelease();
  sub_1B2ABAF10();
  _s20IntelligencePlatform16FeedbackProtocolPAAE7variantSSSgvg_0();
  if ((v1 & 1) == 0) {
    Float.toString(decimalPlaces:)(3);
  }
  sub_1B29A3EB4(&qword_1EB7D9790);
  sub_1B2E823E8();
  sub_1B2ABAFD4();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1B2AAF4A0()
{
  uint64_t v1 = v0;
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  long long v13 = *(_OWORD *)(v0 + 80);
  Mention.description.getter();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2ABADB8();
  if ((void)v13)
  {
    uint64_t v2 = *(void *)(v13 + 16);
    if (v2)
    {
      uint64_t v14 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B29BFD80();
      uint64_t v3 = (uint64_t *)(v13 + 56);
      do
      {
        uint64_t v5 = *(v3 - 1);
        uint64_t v4 = *v3;
        unint64_t v7 = *(void *)(v14 + 16);
        unint64_t v6 = *(void *)(v14 + 24);
        swift_bridgeObjectRetain();
        if (v7 >= v6 >> 1) {
          sub_1B29BFD80();
        }
        *(void *)(v14 + 16) = v7 + 1;
        uint64_t v8 = v14 + 16 * v7;
        *(void *)(v8 + 32) = v5;
        *(void *)(v8 + 40) = v4;
        v3 += 5;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2A20660();
    sub_1B2ABB758();
    sub_1B2E822D8();
    swift_bridgeObjectRelease();
  }
  sub_1B29A4150();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B299B7D8();
  sub_1B2E82518();
  swift_beginAccess();
  sub_1B2E83748();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  uint64_t result = 0x3A6E6F69746E656DLL;
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    do
    {
      char v12 = *(unsigned char *)(v10 + 324);
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      EntityIdentifier.description.getter();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2ABAC24();
      sub_1B2ABB7AC();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2ABAF10();
      _s20IntelligencePlatform16FeedbackProtocolPAAE7variantSSSgvg_0();
      if ((v12 & 1) == 0) {
        Float.toString(decimalPlaces:)(3);
      }
      sub_1B29A3EB4(&qword_1EB7D9790);
      sub_1B2E823E8();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      v10 += 296;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    return 0x3A6E6F69746E656DLL;
  }
  return result;
}

uint64_t PopulatedCandidatesForMention.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PopulatedCandidatesForMention.__deallocating_deinit()
{
  PopulatedCandidatesForMention.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2AAF8B0()
{
  return sub_1B2AAF4A0();
}

uint64_t static RerankedEntity.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = *(void *)v1;
  uint64_t v6 = v1 + 1096;
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v48 = *(void *)(v1 + 56);
  uint64_t v49 = *(void *)(v1 + 64);
  uint64_t v41 = *(void *)(v1 + 72);
  uint64_t v47 = *(void *)(v1 + 80);
  uint64_t v44 = *(void *)(v1 + 88);
  uint64_t v45 = *(void *)(v1 + 96);
  uint64_t v9 = (uint64_t)(v2 + 14);
  float64x2_t v52 = *(float64x2_t *)(v1 + 24);
  float64x2_t v53 = *(float64x2_t *)(v1 + 8);
  sub_1B2A93410(v1 + 112, (uint64_t)v58);
  uint64_t v38 = *(void *)(v4 + 1088);
  char v39 = *(unsigned char *)(v4 + 1096);
  double v10 = *(double *)(v4 + 1104);
  int v37 = *(unsigned __int8 *)(v6 + 16);
  uint64_t v36 = *(void *)(v4 + 1120);
  double v11 = *(double *)v3;
  float64x2_t v50 = *(float64x2_t *)(v3 + 3);
  float64x2_t v51 = *(float64x2_t *)(v3 + 1);
  uint64_t v12 = v3[5];
  uint64_t v13 = v3[6];
  uint64_t v15 = v3[7];
  uint64_t v14 = v3[8];
  uint64_t v40 = v3[9];
  uint64_t v46 = v3[10];
  uint64_t v42 = v3[11];
  uint64_t v43 = v3[12];
  sub_1B2A93410(v9, (uint64_t)v59);
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v53, v51), (int32x4_t)vceqq_f64(v52, v50))), 0xFuLL))) & 1) == 0|| v5 != *(void *)&v11)
  {
    return result;
  }
  uint64_t v17 = v3[136];
  int v18 = *((unsigned __int8 *)v3 + 1096);
  double v19 = *((double *)v3 + 138);
  int v20 = *((unsigned __int8 *)v3 + 1112);
  uint64_t v21 = v3[140];
  if (!v7)
  {
    if (!v13) {
      goto LABEL_23;
    }
LABEL_21:
    uint64_t v26 = sub_1B2ABB454();
    sub_1B2A28A1C(v26, v27);
    sub_1B29D1EF4(v8, v7);
    uint64_t v28 = sub_1B2ABB454();
    sub_1B29D1EF4(v28, v29);
    return 0;
  }
  if (!v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  BOOL v22 = v8 == v12 && v7 == v13;
  if (v22 || (sub_1B2E837A8(), uint64_t result = sub_1B2ABAD7C(), (v23 & 1) != 0))
  {
    if (v49)
    {
      if (!v14) {
        return 0;
      }
      if (v48 != v15 || v49 != v14)
      {
        sub_1B2E837A8();
        uint64_t result = sub_1B2ABAD7C();
        if ((v25 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v14)
    {
      return 0;
    }
LABEL_23:
    if (v47)
    {
      if (v46)
      {
        if (v44 != v42 || v45 != v43)
        {
          sub_1B2E837A8();
          uint64_t result = sub_1B2ABAD7C();
          if ((v31 & 1) == 0) {
            return result;
          }
        }
        goto LABEL_35;
      }
    }
    else if (!v46)
    {
LABEL_35:
      uint64_t v34 = v17;
      sub_1B2A93410((uint64_t)v59, (uint64_t)v56);
      sub_1B2A93410((uint64_t)v58, (uint64_t)v57);
      if (sub_1B2A9DBA4((uint64_t)v57) == 1)
      {
        sub_1B2A93410((uint64_t)v59, (uint64_t)v55);
        if (sub_1B2A9DBA4((uint64_t)v55) != 1) {
          return 0;
        }
      }
      else
      {
        sub_1B2A93410((uint64_t)v58, (uint64_t)v54);
        sub_1B2A93410((uint64_t)v59, (uint64_t)v55);
        if (sub_1B2A9DBA4((uint64_t)v55) == 1
          || !static EntityFeatures.== infix(_:_:)((uint64_t)v54, (uint64_t)v56))
        {
          return 0;
        }
      }
      if (v39)
      {
        if (!v18) {
          return 0;
        }
      }
      else
      {
        if (v38 == v34) {
          char v35 = v18;
        }
        else {
          char v35 = 1;
        }
        if (v35) {
          return 0;
        }
      }
      if (v10 == v19 && v37 == v20)
      {
        if (v36)
        {
          if (v21 && sub_1B2AA7EE0(v36, v21)) {
            return 1;
          }
        }
        else if (!v21)
        {
          return 1;
        }
      }
      return 0;
    }
    sub_1B2A90100(v41, v47);
    sub_1B2A90100(v40, v46);
    uint64_t v32 = sub_1B2ABB554();
    sub_1B29D1EF4(v32, v33);
    sub_1B29D1EF4(v40, v46);
    return 0;
  }
  return result;
}

uint64_t sub_1B2AAFCFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x726F6353656D616ELL && a2 == 0xE900000000000065;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x75747865746E6F63 && a2 == 0xEF65726F63536C61;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6552797469746E65 && a2 == 0xEF65636E6176656CLL;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x4449656372756F73 && a2 == 0xE800000000000000;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x6C43797469746E65 && a2 == 0xEB00000000737361;
              if (v11 || (sub_1B2E837A8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x6546797469746E65 && a2 == 0xEE00736572757461;
                if (v12 || (sub_1B2E837A8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001B2E99C70 || (sub_1B2E837A8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else if (a1 == 0xD000000000000016 && a2 == 0x80000001B2E99C90 || (sub_1B2E837A8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else if (a1 == 0xD000000000000013 && a2 == 0x80000001B2E99CB0 || (sub_1B2E837A8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else if (a1 == 0x7574616546776172 && a2 == 0xEB00000000736572)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else
                {
                  char v14 = sub_1B2E837A8();
                  swift_bridgeObjectRelease();
                  if (v14) {
                    return 11;
                  }
                  else {
                    return 12;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B2AB0238()
{
  return 12;
}

unint64_t sub_1B2AB0240(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65726F6373;
      break;
    case 2:
      unint64_t result = 0x726F6353656D616ELL;
      break;
    case 3:
      unint64_t result = 0x75747865746E6F63;
      break;
    case 4:
      unint64_t result = 0x6552797469746E65;
      break;
    case 5:
      unint64_t result = 0x4449656372756F73;
      break;
    case 6:
      unint64_t result = 0x6C43797469746E65;
      break;
    case 7:
      unint64_t result = 0x6546797469746E65;
      break;
    case 8:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    case 10:
      unint64_t result = 0xD000000000000013;
      break;
    case 11:
      unint64_t result = 0x7574616546776172;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2AB03FC()
{
  return sub_1B2AB37A0();
}

unint64_t sub_1B2AB0418()
{
  return sub_1B2AB0240(*v0);
}

uint64_t sub_1B2AB0420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AAFCFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AB0448@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2AB0238();
  *a1 = result;
  return result;
}

uint64_t sub_1B2AB0470(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB5348();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AB04AC(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB5348();

  return MEMORY[0x1F41862B0](a1, v2);
}

void RerankedEntity.encode(to:)()
{
  sub_1B2ABB510();
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3C858);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0480();
  uint64_t v8 = *v0;
  uint64_t v12 = v0[9];
  uint64_t v13 = v0[10];
  uint64_t v14 = v0[11];
  uint64_t v15 = v0[12];
  char v16 = *((unsigned char *)v0 + 104);
  sub_1B2A93410((uint64_t)(v0 + 14), (uint64_t)v20);
  uint64_t v11 = v0[140];
  sub_1B29AEC7C(v4, v4[3]);
  sub_1B2AB5348();
  sub_1B299E584();
  v17[0] = v8;
  char v19 = 0;
  sub_1B29CB42C();
  sub_1B2E836D8();
  if (v1)
  {
    uint64_t v9 = sub_1B2ABB7E4();
    v10(v9);
  }
  else
  {
    sub_1B2ABB0C4(1);
    sub_1B2ABB218();
    sub_1B2ABB0C4(2);
    sub_1B2ABB218();
    sub_1B2ABB0C4(3);
    sub_1B2ABB218();
    sub_1B2ABB0C4(4);
    sub_1B2ABB218();
    sub_1B2AB5008();
    sub_1B2ABAE0C();
    v17[0] = v12;
    v17[1] = v13;
    v17[2] = v14;
    v17[3] = v15;
    char v18 = v16;
    char v19 = 6;
    sub_1B2A6F5AC();
    sub_1B2ABAE0C();
    sub_1B2A93410((uint64_t)v20, (uint64_t)v17);
    char v19 = 7;
    sub_1B2AB5394();
    sub_1B2ABAE0C();
    LOBYTE(v17[0]) = 8;
    sub_1B2E83678();
    sub_1B2ABB0C4(9);
    sub_1B2ABB218();
    LOBYTE(v17[0]) = 10;
    sub_1B2E83698();
    v17[0] = v11;
    char v19 = 11;
    sub_1B29A3EB4(&qword_1E9C3A1E0);
    sub_1B2AB53E0(&qword_1E9C3C870, &qword_1E9C3A1E0);
    sub_1B2E83668();
    (*(void (**)(uint64_t))(v6 + 8))(v2);
  }
  sub_1B2ABB3E0();
}

void RerankedEntity.init(from:)()
{
  sub_1B2ABB510();
  uint64_t v2 = (void *)MEMORY[0x1F4188790](v1);
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3C878);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299F280();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2AB5348();
  sub_1B2ABB1F4();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    uint64_t v41 = v4;
    sub_1B29CB3E0();
    sub_1B2ABB2E4();
    v49[0] = v44[0];
    sub_1B29A4344(1);
    uint64_t v7 = v6;
    uint64_t v40 = v44[0];
    v49[1] = v6;
    sub_1B29A4344(2);
    uint64_t v9 = v8;
    v49[2] = v8;
    sub_1B29A4344(3);
    uint64_t v11 = v10;
    v49[3] = v10;
    sub_1B29A4344(4);
    uint64_t v13 = v12;
    v49[4] = v12;
    sub_1B2AB50EC();
    sub_1B2ABAEF0();
    v49[5] = v44[0];
    v49[6] = v44[1];
    v49[7] = v44[2];
    v49[8] = v44[3];
    LOBYTE(v43[0]) = 6;
    uint64_t v37 = v44[1];
    uint64_t v38 = v44[2];
    uint64_t v39 = v44[3];
    sub_1B2A28A1C(v44[0], v44[1]);
    sub_1B2A6F514();
    sub_1B2ABAEF0();
    uint64_t v36 = v44[0];
    char v14 = v44[4];
    v49[9] = v44[0];
    v49[10] = v44[1];
    v49[11] = v44[2];
    v49[12] = v44[3];
    sub_1B2ABB3D4();
    *(unsigned char *)(v15 + 104) = v44[4];
    v47[975] = 7;
    uint64_t v32 = v16;
    uint64_t v33 = v17;
    uint64_t v34 = v18;
    uint64_t v35 = v19;
    sub_1B2A90100(v16, v17);
    sub_1B2A93378();
    sub_1B2ABAEF0();
    char v31 = v14;
    sub_1B2A93410((uint64_t)&v48, (uint64_t)v47);
    sub_1B2ABB3D4();
    sub_1B2A93410((uint64_t)v47, v20 + 112);
    uint64_t v21 = sub_1B2E83558();
    v49[136] = v21;
    char v23 = v22;
    LOBYTE(v49[137]) = v22 & 1;
    sub_1B29A4344(9);
    uint64_t v25 = v24;
    v49[138] = v24;
    LOBYTE(v44[0]) = 10;
    sub_1B2E83578();
    sub_1B2ABB3D4();
    char v30 = v26;
    *(unsigned char *)(v27 + 1112) = v26;
    sub_1B29A3EB4(&qword_1E9C3A1E0);
    char v45 = 11;
    sub_1B2AB53E0(&qword_1E9C3C880, &qword_1E9C3A1E0);
    sub_1B2E83548();
    uint64_t v28 = sub_1B2ABB028();
    v29(v28);
    uint64_t v42 = v46;
    v49[140] = v46;
    v43[0] = v40;
    v43[1] = v7;
    v43[2] = v9;
    v43[3] = v11;
    v43[4] = v13;
    v43[5] = v36;
    v43[6] = v37;
    v43[7] = v38;
    v43[8] = v39;
    v43[9] = v32;
    v43[10] = v33;
    v43[11] = v34;
    v43[12] = v35;
    LOBYTE(v43[13]) = v31;
    sub_1B2A93410((uint64_t)v47, (uint64_t)&v43[14]);
    v43[136] = v21;
    LOBYTE(v43[137]) = v23 & 1;
    v43[138] = v25;
    LOBYTE(v43[139]) = v30;
    v43[140] = v42;
    sub_1B2A90C90(v43);
    sub_1B29D1EF4(v32, v33);
    sub_1B29D1EF4(v36, v37);
    memcpy(v41, v43, 0x468uLL);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    memcpy(v44, v49, sizeof(v44));
    sub_1B2A90144(v44);
  }
  sub_1B2ABB3E0();
}

void sub_1B2AB0E2C()
{
}

void sub_1B2AB0E44()
{
}

uint64_t RerankedEntity.description.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[10];
  uint64_t v11 = v0[11];
  uint64_t v12 = v0[9];
  uint64_t v10 = v0[12];
  char v7 = *((unsigned char *)v0 + 104);
  sub_1B2A93410((uint64_t)(v0 + 14), (uint64_t)v20);
  uint64_t v9 = v0[136];
  char v13 = *((unsigned char *)v0 + 1096);
  sub_1B2ABB624();
  sub_1B2E831F8();
  sub_1B2E82518();
  __dst[0] = v1;
  EntityIdentifier.description.getter();
  sub_1B2ABAFBC();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  Double.toString(decimalPlaces:)(3);
  sub_1B2ABAFBC();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  Double.toString(decimalPlaces:)(3);
  sub_1B2ABAFBC();
  swift_bridgeObjectRelease();
  sub_1B2ABB35C();
  Double.toString(decimalPlaces:)(3);
  sub_1B2ABAFBC();
  swift_bridgeObjectRelease();
  sub_1B2ABB35C();
  sub_1B2ABB7AC();
  sub_1B2ABAFBC();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  Double.toString(decimalPlaces:)(3);
  sub_1B2ABAFBC();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  uint64_t v18 = __src[0];
  uint64_t v19 = __src[1];
  if (v3)
  {
    __dst[0] = 0x656372756F73200ALL;
    __dst[1] = 0xE90000000000003ALL;
    __src[0] = v2;
    __src[1] = v3;
    __src[2] = v4;
    __src[3] = v5;
    EntitySourceID.description.getter();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2ABB2C8();
    swift_bridgeObjectRelease();
  }
  if (v6)
  {
    sub_1B2ABB624();
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    strcpy((char *)__dst, "\n entityClass:");
    HIBYTE(__dst[1]) = -18;
    __src[0] = v12;
    __src[1] = v6;
    __src[2] = v11;
    __src[3] = v10;
    LOBYTE(__src[4]) = v7;
    EntityClass.description.getter();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2ABB2C8();
    swift_bridgeObjectRelease();
  }
  sub_1B2A93410((uint64_t)v20, (uint64_t)__src);
  if (sub_1B2A9DBA4((uint64_t)__src) != 1)
  {
    uint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_1B2E82518();
    memcpy(__dst, __src, sizeof(__dst));
    sub_1B2E83388();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
  }
  if ((v13 & 1) == 0)
  {
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    __dst[0] = 0xD000000000000023;
    __dst[1] = 0x80000001B2E99B70;
    uint64_t v15 = v9;
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2ABB2C8();
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t static RerankedEntitiesForMention.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 64);
  char v3 = *(unsigned char *)(a1 + 72);
  uint64_t v4 = *(void *)(a2 + 64);
  char v5 = *(unsigned char *)(a2 + 72);
  long long v6 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v16[2] = *(_OWORD *)(a1 + 32);
  v16[3] = v7;
  uint64_t v17 = v2;
  char v18 = v3;
  long long v8 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v9;
  uint64_t v14 = v4;
  char v15 = v5;
  if ((static Mention.== infix(_:_:)((uint64_t)v16, (uint64_t)v13) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = sub_1B2999874();

  return sub_1B2AA7778(v10, v11);
}

uint64_t sub_1B2AB1384(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F69746E656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2AB1474(char a1)
{
  if (a1) {
    return 0x7365697469746E65;
  }
  else {
    return 0x6E6F69746E656DLL;
  }
}

uint64_t sub_1B2AB14AC()
{
  return sub_1B2AB1474(*v0);
}

uint64_t sub_1B2AB14B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AB1384(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AB14DC(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB5440();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AB1518(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB5440();

  return MEMORY[0x1F41862B0](a1, v2);
}

void RerankedEntitiesForMention.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C3C888);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29A0498();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2AB5440();
  sub_1B299E584();
  sub_1B2AB548C();
  sub_1B2E836D8();
  if (!v0)
  {
    sub_1B2ABAD40();
    sub_1B29A3EB4(&qword_1E9C3C8A0);
    sub_1B2ABAA44(&qword_1E9C3C8A8, &qword_1E9C3C8A0, (void (*)(void))sub_1B2AB54D8);
    sub_1B2ABAC90();
  }
  uint64_t v4 = sub_1B299B834();
  v5(v4);
  sub_1B2A4AA78();
  sub_1B29998C8();
}

void RerankedEntitiesForMention.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3C8B8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299F280();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2AB5440();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    sub_1B2AB5524();
    sub_1B2E835B8();
    sub_1B29A3EB4(&qword_1E9C3C8A0);
    sub_1B2ABAD40();
    sub_1B2ABAA44(&qword_1E9C3C8C8, &qword_1E9C3C8A0, (void (*)(void))sub_1B2AB5570);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2E835B8();
    sub_1B29A15FC();
    v6();
    *(void *)uint64_t v4 = v7;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = v9;
    *(void *)(v4 + 24) = v10;
    *(void *)(v4 + 32) = v11;
    *(void *)(v4 + 40) = v12;
    *(void *)(v4 + 48) = v13;
    *(void *)(v4 + 56) = v14;
    *(void *)(v4 + 64) = v15;
    *(unsigned char *)(v4 + 72) = v16;
    *(void *)(v4 + 80) = v7;
    swift_bridgeObjectRetain();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

void sub_1B2AB19DC()
{
}

void sub_1B2AB19F4()
{
}

void RerankedEntitiesForMention.description.getter()
{
  sub_1B299B720();
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v21 = v0[8];
  __dst[0] = 0;
  char v20 = *((unsigned char *)v0 + 72);
  uint64_t v9 = v0[10];
  sub_1B2E831F8();
  __dst[143] = 0;
  __dst[144] = 0xE000000000000000;
  sub_1B2E82518();
  __dst[0] = v2;
  __dst[1] = v1;
  __dst[2] = v3;
  __dst[3] = v4;
  __dst[4] = v5;
  __dst[5] = v6;
  __dst[6] = v8;
  __dst[7] = v7;
  __dst[8] = v21;
  LOBYTE(__dst[9]) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Mention.description.getter();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2ABADB8();
  if (v7)
  {
    uint64_t v10 = *(void *)(v7 + 16);
    uint64_t v11 = MEMORY[0x1E4FBC860];
    if (v10)
    {
      __dst[0] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B29BFD80();
      uint64_t v11 = __dst[0];
      uint64_t v12 = (uint64_t *)(v7 + 56);
      do
      {
        uint64_t v14 = *(v12 - 1);
        uint64_t v13 = *v12;
        __dst[0] = v11;
        unint64_t v16 = *(void *)(v11 + 16);
        unint64_t v15 = *(void *)(v11 + 24);
        swift_bridgeObjectRetain();
        if (v16 >= v15 >> 1)
        {
          sub_1B29BFD80();
          uint64_t v11 = __dst[0];
        }
        *(void *)(v11 + 16) = v16 + 1;
        uint64_t v17 = v11 + 16 * v16;
        *(void *)(v17 + 32) = v14;
        *(void *)(v17 + 40) = v13;
        v12 += 5;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
    }
    __dst[0] = v11;
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2A20660();
    sub_1B2ABB758();
    sub_1B2E822D8();
    swift_bridgeObjectRelease();
  }
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B299B7D8();
  sub_1B2E82518();
  __dst[0] = *(void *)(v9 + 16);
  sub_1B2E83748();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v9 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = 32;
    do
    {
      memcpy(__dst, (const void *)(v9 + v19), 0x468uLL);
      __dst[141] = 32;
      __dst[142] = 0xE100000000000000;
      RerankedEntity.description.getter();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      v19 += 1128;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  sub_1B299B738();
}

uint64_t sub_1B2AB1CF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6769666E6F63 && a2 == 0xE600000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x736E6F69746E656DLL && a2 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1B2AB1EA4(char a1)
{
  uint64_t result = 0x74736575716572;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6769666E6F63;
      break;
    case 2:
      uint64_t result = 0x65736E6F70736572;
      break;
    case 3:
      uint64_t result = 0x736E6F69746E656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2AB1F38()
{
  return sub_1B2AB1EA4(*v0);
}

uint64_t sub_1B2AB1F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AB1CF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AB1F68(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB55BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AB1FA4(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB55BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void EntityResolutionSession.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v0;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3C8D8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29A0498();
  uint64_t v6 = v2[35];
  uint64_t v8 = v2[34];
  sub_1B29AEC7C(v4, v4[3]);
  sub_1B2AB55BC();
  sub_1B299E584();
  memcpy(v9, v2, 0x7AuLL);
  sub_1B2AB5608();
  sub_1B299F594();
  if (!v1)
  {
    memcpy(v9, v2 + 16, 0x8DuLL);
    sub_1B2ABAD40();
    sub_1B2AB5654();
    sub_1B299F594();
    v9[0] = v8;
    sub_1B29A3EB4(&qword_1E9C3C8F8);
    sub_1B2ABAA44(&qword_1E9C3C900, &qword_1E9C3C8F8, (void (*)(void))sub_1B2AB56A0);
    sub_1B2ABAC90();
    v9[0] = v6;
    sub_1B29A3EB4(&qword_1E9C3C910);
    sub_1B2ABAA44(&qword_1E9C3C918, &qword_1E9C3C910, (void (*)(void))sub_1B2AB548C);
    sub_1B2ABAC90();
  }
  sub_1B29A15FC();
  v7();
  sub_1B2A4AA78();
  sub_1B29998C8();
}

void EntityResolutionSession.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3C920);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299F280();
  uint64_t v11 = v2;
  uint64_t v6 = (void *)sub_1B2ABB7E4();
  sub_1B29AEC7C(v6, v7);
  sub_1B2AB55BC();
  sub_1B2ABB1F4();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v2);
  }
  else
  {
    sub_1B2AB56EC();
    sub_1B2ABB2E4();
    memcpy(v17, v18, 0x7AuLL);
    memcpy(v19, v18, 0x7AuLL);
    sub_1B2AB5138((uint64_t)v17);
    sub_1B2A99594();
    sub_1B2ABB2E4();
    memcpy(v15, v16, 0x8DuLL);
    memcpy(&v19[128], v16, 0x8DuLL);
    sub_1B29A3EB4(&qword_1E9C3C8F8);
    LOBYTE(v12[0]) = 2;
    sub_1B2A98298((uint64_t)v15);
    sub_1B2ABAA44(&qword_1E9C3C930, &qword_1E9C3C8F8, (void (*)(void))sub_1B2AB5738);
    sub_1B2E835B8();
    uint64_t v8 = v13[0];
    sub_1B29A3EB4(&qword_1E9C3C910);
    sub_1B2ABAA44(&qword_1E9C3C940, &qword_1E9C3C910, (void (*)(void))sub_1B2AB5524);
    swift_bridgeObjectRetain();
    sub_1B2E835B8();
    sub_1B29A15FC();
    v9();
    uint64_t v10 = v14;
    memcpy(v12, v17, 0x7AuLL);
    memcpy(&v12[16], v15, 0x8DuLL);
    v12[34] = v8;
    v12[35] = v14;
    sub_1B2AB5784((uint64_t)v12);
    swift_bridgeObjectRelease();
    sub_1B2A982E4((uint64_t)v15);
    sub_1B2AB51F4((uint64_t)v17);
    memcpy(v4, v12, 0x120uLL);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v11);
    memcpy(v13, v19, 0x110uLL);
    v13[34] = v8;
    v13[35] = v10;
    sub_1B2AB5884((uint64_t)v13);
  }
  sub_1B2A4AA78();
  sub_1B29998C8();
}

void sub_1B2AB2610()
{
}

void sub_1B2AB2628()
{
}

uint64_t NeighborSignal.name.getter()
{
  return sub_1B2999874();
}

uint64_t NeighborSignal.columnName.getter()
{
  return sub_1B2999874();
}

IntelligencePlatform::NeighborSignal_optional __swiftcall NeighborSignal.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = 0xE900000000000073;
  uint64_t v4 = 0x6E6F697461636F6CLL;
  if (rawValue._countAndFlagsBits == 0x6E6F697461636F6CLL && rawValue._object == (void *)0xE900000000000073) {
    goto LABEL_29;
  }
  object = rawValue._object;
  uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  sub_1B29A2920(0x61636F6Cu);
  if (sub_1B299D7AC()) {
    goto LABEL_29;
  }
  uint64_t v4 = 0x73746E657665;
  unint64_t v3 = 0xE600000000000000;
  BOOL v8 = countAndFlagsBits == 0x73746E657665 && object == (void *)0xE600000000000000;
  if (v8
    || (sub_1B299D7AC() & 1) != 0
    || ((uint64_t v4 = 0x656C706F6570, countAndFlagsBits == 0x656C706F6570)
      ? (BOOL v9 = object == (void *)0xE600000000000000)
      : (BOOL v9 = 0),
        v9
     || (sub_1B299D7AC() & 1) != 0
     || ((uint64_t v4 = 0x736369706F74, countAndFlagsBits == 0x736369706F74)
       ? (BOOL v10 = object == (void *)0xE600000000000000)
       : (BOOL v10 = 0),
         v10
      || (sub_1B299D7AC() & 1) != 0
      || ((unint64_t v3 = 0xED0000736E6F6974, v4 = 0x617A696E6167726FLL, countAndFlagsBits == 0x617A696E6167726FLL)
        ? (BOOL v11 = object == (void *)0xED0000736E6F6974)
        : (BOOL v11 = 0),
          v11 || (sub_1B299D7AC() & 1) != 0))))
  {
LABEL_29:
    uint64_t v12 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v4 = countAndFlagsBits;
    unint64_t v3 = (unint64_t)object;
  }
  *uint64_t v2 = v4;
  v2[1] = v3;
  v2[2] = v4;
  v2[3] = v3;
  result.value.columnName._object = v15;
  result.value.columnName._uint64_t countAndFlagsBits = v14;
  result.value.name._object = v13;
  result.value.name._uint64_t countAndFlagsBits = v12;
  return result;
}

IntelligencePlatform::NeighborSignal_optional __swiftcall NeighborSignal.init(columnName:)(Swift::String columnName)
{
  uint64_t v2 = v1;
  IntelligencePlatform::NeighborSignal_optional result = NeighborSignal.init(rawValue:)(columnName);
  *uint64_t v2 = v3;
  v2[1] = v4;
  return result;
}

uint64_t sub_1B2AB2884()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2AB28E4()
{
  return sub_1B2E82788();
}

unint64_t sub_1B2AB2934(Swift::String *a1)
{
  return (unint64_t)NeighborSignal.init(rawValue:)(*a1);
}

uint64_t sub_1B2AB2940@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = NeighborSignal.name.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2AB2968()
{
  return sub_1B2AA533C();
}

uint64_t sub_1B2AB2988(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1B2ABA8C0();
  unint64_t v5 = sub_1B2ABA874();
  uint64_t v6 = MEMORY[0x1E4F62F70];

  return MEMORY[0x1F411B018](a1, a2, v4, v5, v6);
}

uint64_t sub_1B2AB29F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2ABA828();
  unint64_t v7 = sub_1B2ABA874();
  uint64_t v8 = MEMORY[0x1E4F62F70];

  return MEMORY[0x1F411B028](a1, a2, a3, v6, v7, v8);
}

uint64_t sub_1B2AB2A70(uint64_t *a1, uint64_t *a2)
{
  return sub_1B29ADBC0(*a1, a1[1], a1[2], a1[3], *a2, a2[1]);
}

uint64_t sub_1B2AB2A8C(uint64_t a1)
{
  unint64_t v2 = sub_1B2ABA7DC();

  return MEMORY[0x1F411AFE0](a1, v2);
}

uint64_t sub_1B2AB2AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2ABA7DC();

  return MEMORY[0x1F411AFF0](a1, a2, a3, v6);
}

uint64_t sub_1B2AB2B2C()
{
  sub_1B2E80498();
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B29A0480();
  sub_1B29A4150();
  sub_1B2E803E8();
  uint64_t v2 = sub_1B2E804D8();
  if (v0)
  {
    uint64_t v4 = sub_1B2ABB010();
    return v5(v4);
  }
  else
  {
    uint64_t v7 = v2;
    unint64_t v8 = v3;
    uint64_t v9 = sub_1B2ABB010();
    uint64_t v11 = v10(v9);
    uint64_t v12 = (void *)MEMORY[0x1B3EB2480](v11);
    sub_1B29A4150();
    sub_1B2AB2C3C(v13);
    sub_1B29C34DC(v7, v8);
    return v14;
  }
}

uint64_t sub_1B2AB2C3C@<X0>(uint64_t *a1@<X8>)
{
  sub_1B2E7FF98();
  swift_allocObject();
  sub_1B2E7FF88();
  sub_1B29A3EB4(&qword_1E9C3CB58);
  sub_1B2ABAA44(&qword_1E9C3CB60, &qword_1E9C3CB58, (void (*)(void))sub_1B2ABAAB0);
  sub_1B2E7FF78();
  uint64_t result = swift_release();
  if (!v1)
  {
    uint64_t v4 = sub_1B2AA45F4(v6);
    swift_bridgeObjectRelease();
    uint64_t v6 = v4;
    swift_bridgeObjectRetain();
    sub_1B2AA67FC(&v6);
    swift_bridgeObjectRelease();
    uint64_t v5 = v6;
    sub_1B29A3EB4(&qword_1EB7D9910);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1B2EC00A0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(void *)(result + 96) = 0;
    *(unsigned char *)(result + 104) = 1;
    *(void *)(result + 112) = v5;
    *a1 = result;
  }
  return result;
}

void *sub_1B2AB2DC4@<X0>(uint64_t a1@<X0>, double *a2@<X1>, void *a3@<X8>)
{
  double v7 = *a2;
  uint64_t v6 = *((void *)a2 + 1);
  uint64_t v9 = *((void *)a2 + 2);
  double v8 = a2[3];
  double v10 = a2[4];
  double v11 = a2[5];
  sub_1B29A3EB4(&qword_1E9C3CB70);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1B2EC89A0;
  v25[0] = a1;
  uint64_t result = (void *)EntityIdentifier.stringValue.getter();
  *(void *)(v12 + 32) = 0xD000000000000027;
  *(void *)(v12 + 40) = 0x80000001B2E99D60;
  *(void *)(v12 + 48) = 0xD000000000000010;
  *(void *)(v12 + 56) = 0x80000001B2E99D90;
  *(void *)(v12 + 64) = result;
  *(void *)(v12 + 72) = v14;
  if ((~*(void *)&v11 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v11 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v11 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  double v23 = v7;
  uint64_t v27 = a3;
  unint64_t v15 = self;
  *(void *)(v12 + 80) = objc_msgSend(v15, sel_featureValueWithInt64_, (uint64_t)v11);
  uint64_t v16 = EntityIdentifier.stringValue.getter();
  *(void *)(v12 + 88) = 0xD000000000000027;
  *(void *)(v12 + 96) = 0x80000001B2E99D60;
  *(void *)(v12 + 104) = 0xD000000000000012;
  *(void *)(v12 + 112) = 0x80000001B2E99DB0;
  *(void *)(v12 + 120) = v16;
  *(void *)(v12 + 128) = v17;
  *(void *)(v12 + 136) = objc_msgSend(v15, sel_featureValueWithDouble_, v10);
  v25[0] = a1;
  uint64_t v18 = EntityIdentifier.stringValue.getter();
  *(void *)(v12 + 144) = 0xD000000000000029;
  *(void *)(v12 + 152) = 0x80000001B2E99DD0;
  *(void *)(v12 + 160) = 0xD00000000000002ELL;
  *(void *)(v12 + 168) = 0x80000001B2E99E00;
  *(void *)(v12 + 176) = v18;
  *(void *)(v12 + 184) = v19;
  *(void *)(v12 + 192) = objc_msgSend(v15, sel_featureValueWithDouble_, v8);
  sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7E2C30);
  sub_1B2A8E4C0();
  uint64_t v20 = sub_1B2E82148();
  uint64_t v21 = swift_bridgeObjectRetain();
  char v22 = (void *)MEMORY[0x1B3EB2480](v21);
  sub_1B2A92B84(v20, (uint64_t)__src);
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    memcpy(__dst, __src, 0x3C8uLL);
    sub_1B2A900AC((uint64_t)__dst);
    v25[0] = a1;
    v25[1] = v9;
    v25[3] = 0;
    v25[2] = 0;
    _OWORD v25[4] = v9;
    *(double *)&v25[5] = v23;
    v25[6] = v6;
    memset(&v25[7], 0, 49);
    sub_1B2A93410((uint64_t)__dst, (uint64_t)&v25[14]);
    v25[136] = 0;
    LOBYTE(v25[137]) = 1;
    v25[138] = 0x3FF0000000000000;
    LOBYTE(v25[139]) = 0;
    v25[140] = 0;
    return memcpy(v27, v25, 0x468uLL);
  }
}

uint64_t sub_1B2AB30E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632941 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001B2E99CD0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B2AB3220(char a1)
{
  if (!a1) {
    return 1684632941;
  }
  if (a1 == 1) {
    return 0xD000000000000014;
  }
  return 0x7365727574616566;
}

uint64_t sub_1B2AB3274()
{
  return sub_1B2AB3220(*v0);
}

uint64_t sub_1B2AB327C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AB30E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AB32A4(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB5980();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AB32E0(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB5980();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MockRankerResult.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C3C948);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29A0498();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AB5980();
  sub_1B2E83A38();
  sub_1B2ABB040();
  sub_1B2E83688();
  if (!v1)
  {
    sub_1B2E836A8();
    sub_1B2AB59CC();
    sub_1B299F594();
  }
  sub_1B2ABAF78();
  return v4();
}

void MockRankerResult.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C3C960);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E524();
  sub_1B2AB5980();
  sub_1B2A4A928();
  if (v2)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
  }
  else
  {
    sub_1B2ABB418();
    uint64_t v6 = sub_1B2E83568();
    uint64_t v8 = v7;
    LOBYTE(v12) = 1;
    swift_bridgeObjectRetain();
    sub_1B2ABB418();
    sub_1B2E83588();
    uint64_t v10 = v9;
    sub_1B2AB5A18();
    sub_1B2E835B8();
    sub_1B29A15FC();
    v11();
    *(void *)a2 = v6;
    *(void *)(a2 + 8) = v8;
    *(void *)(a2 + 16) = v10;
    *(_OWORD *)(a2 + 24) = v12;
    *(void *)(a2 + 40) = v13;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
    swift_bridgeObjectRelease();
  }
  sub_1B2ABB164();
}

uint64_t sub_1B2AB3658(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000026 && a2 == 0x80000001B2E99CF0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001B2E99D20 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001B2E99D40)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B2AB37A0()
{
  return sub_1B2E839E8();
}

unint64_t sub_1B2AB37E0(char a1)
{
  if (!a1) {
    return 0xD000000000000026;
  }
  if (a1 == 1) {
    return 0xD00000000000001ALL;
  }
  return 0xD000000000000018;
}

void sub_1B2AB383C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1B2AB3854(void *a1)
{
  return MockRankerResult.encode(to:)(a1);
}

unint64_t sub_1B2AB386C()
{
  return sub_1B2AB37E0(*v0);
}

uint64_t sub_1B2AB3874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AB3658(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AB389C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB5A64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AB38D8(uint64_t a1)
{
  unint64_t v2 = sub_1B2AB5A64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MockLocationFeatures.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C3C970);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29A0498();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AB5A64();
  sub_1B299E584();
  sub_1B29A2904();
  if (!v1)
  {
    sub_1B29A2904();
    sub_1B29A2904();
  }
  uint64_t v4 = sub_1B299B834();
  return v5(v4);
}

uint64_t MockLocationFeatures.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C3C980);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E524();
  sub_1B2AB5A64();
  sub_1B2E83A18();
  if (!v2)
  {
    sub_1B2ABB170();
    uint64_t v7 = v6;
    sub_1B2ABB170();
    uint64_t v10 = v9;
    sub_1B2ABB170();
    uint64_t v12 = v11;
    sub_1B29A15FC();
    v13();
    *a2 = v7;
    a2[1] = v10;
    a2[2] = v12;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
}

uint64_t sub_1B2AB3BA4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return MockLocationFeatures.init(from:)(a1, a2);
}

uint64_t sub_1B2AB3BBC(void *a1)
{
  return MockLocationFeatures.encode(to:)(a1);
}

uint64_t static NSUserDefaults.ecrRankerResultsMockFile.getter()
{
  if (qword_1EB7D97E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  v4[0] = xmmword_1EB7D97C0;
  v4[1] = *(_OWORD *)&qword_1EB7D97D0;
  uint64_t v5 = qword_1EB7D97E0;
  uint64_t v0 = sub_1B2AB5AB0((uint64_t)v4);
  uint64_t v1 = (void *)MEMORY[0x1B3EB2480](v0);
  uint64_t v2 = sub_1B2AB403C((uint64_t *)v4);
  sub_1B2AB5AF4((uint64_t)v4);
  return v2;
}

uint64_t static NSUserDefaults.ecrRankerResultsMockFile.setter()
{
  sub_1B2ABB764();
  if (qword_1EB7D97E8 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_beginAccess();
  uint64_t v1 = (void *)MEMORY[0x1B3EB2480](v0);
  sub_1B2ABB548();
  sub_1B2AB413C(v2, v3, v4);
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void (*static NSUserDefaults.ecrRankerResultsMockFile.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = malloc(0x58uLL);
  *a1 = v2;
  if (qword_1EB7D97E8 != -1) {
    swift_once();
  }
  uint64_t v3 = swift_beginAccess();
  long long v4 = *(_OWORD *)&qword_1EB7D97D0;
  *uint64_t v2 = xmmword_1EB7D97C0;
  v2[1] = v4;
  *((void *)v2 + 4) = qword_1EB7D97E0;
  uint64_t v5 = (void *)MEMORY[0x1B3EB2480](v3);
  uint64_t v6 = sub_1B2AB403C((uint64_t *)v2);
  *((void *)v2 + 10) = 0;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  *((void *)v2 + 8) = v7;
  *((void *)v2 + 9) = v9;
  return sub_1B2AB3E48;
}

void sub_1B2AB3E48(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 64);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = (void *)MEMORY[0x1B3EB2480](v5);
    sub_1B2AB413C((uint64_t)&xmmword_1EB7D97C0, v3, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x1B3EB2480]();
    sub_1B2AB413C((uint64_t)&xmmword_1EB7D97C0, v3, v4);
  }
  swift_bridgeObjectRelease();
  swift_endAccess();

  free(v2);
}

uint64_t sub_1B2AB3F18()
{
  sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7E61B0);
  uint64_t result = static NSUserDefaults.makeIntelligencePlatformUserDefaults()();
  xmmword_1EB7D97C0 = 0uLL;
  qword_1EB7D97D0 = 0xD000000000000018;
  qword_1EB7D97D8 = 0x80000001B2E99E30;
  qword_1EB7D97E0 = result;
  return result;
}

id static NSUserDefaults.$ecrRankerResultsMockFile.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB7D97E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = qword_1EB7D97D8;
  id v5 = (id)qword_1EB7D97E0;
  uint64_t v2 = qword_1EB7D97E0;
  *(void *)a1 = xmmword_1EB7D97C0;
  *(_OWORD *)(a1 + 8) = *(long long *)((char *)&xmmword_1EB7D97C0 + 8);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return v5;
}

uint64_t sub_1B2AB403C(uint64_t *a1)
{
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = (void *)sub_1B2E82348();
  id v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  if (v4)
  {
    sub_1B2E83058();
    swift_unknownObjectRelease();
    sub_1B29E4FEC(&v7, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E6270);
  sub_1B29A3EB4(&qword_1EB7D9790);
  if (swift_dynamicCast() && *((void *)&v7 + 1) != 1) {
    return v7;
  }
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  return v5;
}

void sub_1B2AB413C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  id v4 = v3;
  sub_1B29A3EB4(&qword_1EB7D9790);
  uint64_t v5 = sub_1B2E83838();
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setObject_forKey_, v5, v6, a2, a3);

  swift_unknownObjectRelease();
}

void sub_1B2AB41FC(uint64_t a1)
{
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = sub_1B2E83838();
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);

  swift_unknownObjectRelease();
}

unint64_t sub_1B2AB42A4(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_1B2AB4344(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1B2D2E3B0(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1B2AB4344(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    uint64_t result = sub_1B2A7101C(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B2AB43B4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return (uint64_t)sub_1B2A8F398(0, (char *)v3, (char *)1, a1);
      }
      return result;
    }
    goto LABEL_127;
  }
  uint64_t v5 = result;
  uint64_t v91 = v1;
  uint64_t result = sub_1B29B6B2C(v3 / 2);
  uint64_t v86 = result;
  uint64_t v87 = v3;
  uint64_t v88 = v6;
  uint64_t v84 = a1;
  if (v3 <= 0)
  {
    uint64_t v89 = MEMORY[0x1E4FBC860];
    unint64_t v23 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_93:
    if (v23 < 2)
    {
LABEL_104:
      uint64_t result = swift_bridgeObjectRelease();
      if (v87 >= -1)
      {
        *(void *)(v86 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_132;
    }
    uint64_t v75 = *v84;
    while (1)
    {
      unint64_t v76 = v23 - 2;
      if (v23 < 2) {
        break;
      }
      if (!v75) {
        goto LABEL_136;
      }
      uint64_t v77 = v89;
      uint64_t v78 = *(void *)(v89 + 32 + 16 * v76);
      uint64_t v79 = *(void *)(v89 + 32 + 16 * (v23 - 1) + 8);
      uint64_t v80 = v91;
      uint64_t result = sub_1B2A8F6D4((char *)(v75 + 1128 * v78), (char *)(v75 + 1128 * *(void *)(v89 + 32 + 16 * (v23 - 1))), v75 + 1128 * v79, v88);
      uint64_t v91 = v80;
      if (v80) {
        goto LABEL_89;
      }
      if (v79 < v78) {
        goto LABEL_122;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B2DCA54C();
        uint64_t v77 = result;
      }
      if (v76 >= *(void *)(v77 + 16)) {
        goto LABEL_123;
      }
      uint64_t v81 = (void *)(v77 + 32 + 16 * v76);
      *uint64_t v81 = v78;
      v81[1] = v79;
      unint64_t v82 = *(void *)(v77 + 16);
      if (v23 > v82) {
        goto LABEL_124;
      }
      uint64_t result = (uint64_t)memmove((void *)(v77 + 32 + 16 * (v23 - 1)), (const void *)(v77 + 32 + 16 * v23), 16 * (v82 - v23));
      uint64_t v89 = v77;
      *(void *)(v77 + 16) = v82 - 1;
      unint64_t v23 = v82 - 1;
      if (v82 <= 2) {
        goto LABEL_104;
      }
    }
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
    return result;
  }
  uint64_t v85 = v5;
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v83 = v8 - 1128;
  uint64_t v89 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v9 = v7++;
    if (v7 < v3)
    {
      double v10 = *(double *)(v8 + 1128 * v7 + 8);
      double v11 = *(double *)(v8 + 1128 * v9 + 8);
      uint64_t v7 = v9 + 2;
      if (v9 + 2 < v3)
      {
        uint64_t v12 = (double *)(v8 + 2264 + 1128 * v9);
        double v13 = v10;
        while (1)
        {
          double v14 = v13;
          double v13 = *v12;
          if (v11 < v10 == v14 >= *v12) {
            break;
          }
          ++v7;
          v12 += 141;
          if (v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v11 < v10)
      {
        if (v7 < v9) {
          goto LABEL_129;
        }
        if (v9 < v7)
        {
          unint64_t v15 = (char *)(v83 + 1128 * v7);
          uint64_t v16 = v7;
          uint64_t v17 = v9;
          uint64_t v18 = (char *)(v8 + 1128 * v9);
          do
          {
            if (v17 != --v16)
            {
              if (!v8) {
                goto LABEL_135;
              }
              memcpy(__dst, v18, sizeof(__dst));
              memmove(v18, v15, 0x468uLL);
              uint64_t result = (uint64_t)memcpy(v15, __dst, 0x468uLL);
            }
            ++v17;
            v15 -= 1128;
            v18 += 1128;
          }
          while (v17 < v16);
          uint64_t v3 = v87;
        }
      }
    }
    if (v7 >= v3) {
      goto LABEL_28;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_126;
    }
    if (v7 - v9 >= v85) {
      goto LABEL_28;
    }
    if (__OFADD__(v9, v85)) {
      goto LABEL_130;
    }
    if (v9 + v85 >= v3) {
      uint64_t v19 = v3;
    }
    else {
      uint64_t v19 = v9 + v85;
    }
    if (v19 < v9) {
      goto LABEL_131;
    }
    if (v7 == v19)
    {
LABEL_28:
      uint64_t v20 = v89;
    }
    else
    {
      int v72 = (double *)(v83 + 1128 * v7);
      uint64_t v20 = v89;
      do
      {
        uint64_t v73 = v9;
        uint64_t v74 = v72;
        do
        {
          if (v74[1] >= v74[142]) {
            break;
          }
          if (!v8) {
            goto LABEL_133;
          }
          memcpy(__dst, v74 + 141, sizeof(__dst));
          memcpy(v74 + 141, v74, 0x468uLL);
          uint64_t result = (uint64_t)memcpy(v74, __dst, 0x468uLL);
          v74 -= 141;
          ++v9;
        }
        while (v7 != v9);
        ++v7;
        v72 += 141;
        uint64_t v9 = v73;
      }
      while (v7 != v19);
      uint64_t v7 = v19;
    }
    if (v7 < v9) {
      goto LABEL_125;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454(0, *(void *)(v20 + 16) + 1, 1, (char *)v20);
      uint64_t v20 = result;
    }
    unint64_t v22 = *(void *)(v20 + 16);
    unint64_t v21 = *(void *)(v20 + 24);
    unint64_t v23 = v22 + 1;
    if (v22 >= v21 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454((char *)(v21 > 1), v22 + 1, 1, (char *)v20);
      uint64_t v20 = result;
    }
    *(void *)(v20 + 16) = v23;
    uint64_t v24 = v20 + 32;
    uint64_t v25 = (uint64_t *)(v20 + 32 + 16 * v22);
    *uint64_t v25 = v9;
    v25[1] = v7;
    uint64_t v89 = v20;
    if (v22) {
      break;
    }
    unint64_t v23 = 1;
LABEL_77:
    uint64_t v3 = v87;
    if (v7 >= v87) {
      goto LABEL_93;
    }
  }
  while (1)
  {
    unint64_t v26 = v23 - 1;
    if (v23 >= 4)
    {
      unint64_t v31 = v24 + 16 * v23;
      uint64_t v32 = *(void *)(v31 - 64);
      uint64_t v33 = *(void *)(v31 - 56);
      BOOL v37 = __OFSUB__(v33, v32);
      uint64_t v34 = v33 - v32;
      if (v37) {
        goto LABEL_110;
      }
      uint64_t v36 = *(void *)(v31 - 48);
      uint64_t v35 = *(void *)(v31 - 40);
      BOOL v37 = __OFSUB__(v35, v36);
      uint64_t v29 = v35 - v36;
      char v30 = v37;
      if (v37) {
        goto LABEL_111;
      }
      unint64_t v38 = v23 - 2;
      uint64_t v39 = (uint64_t *)(v24 + 16 * (v23 - 2));
      uint64_t v41 = *v39;
      uint64_t v40 = v39[1];
      BOOL v37 = __OFSUB__(v40, v41);
      uint64_t v42 = v40 - v41;
      if (v37) {
        goto LABEL_112;
      }
      BOOL v37 = __OFADD__(v29, v42);
      uint64_t v43 = v29 + v42;
      if (v37) {
        goto LABEL_114;
      }
      if (v43 >= v34)
      {
        uint64_t v61 = (uint64_t *)(v24 + 16 * v26);
        uint64_t v63 = *v61;
        uint64_t v62 = v61[1];
        BOOL v37 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v37) {
          goto LABEL_120;
        }
        BOOL v54 = v29 < v64;
        goto LABEL_66;
      }
    }
    else
    {
      if (v23 != 3)
      {
        uint64_t v55 = *(void *)(v20 + 32);
        uint64_t v56 = *(void *)(v20 + 40);
        BOOL v37 = __OFSUB__(v56, v55);
        uint64_t v48 = v56 - v55;
        char v49 = v37;
        goto LABEL_60;
      }
      uint64_t v28 = *(void *)(v20 + 32);
      uint64_t v27 = *(void *)(v20 + 40);
      BOOL v37 = __OFSUB__(v27, v28);
      uint64_t v29 = v27 - v28;
      char v30 = v37;
    }
    if (v30) {
      goto LABEL_113;
    }
    unint64_t v38 = v23 - 2;
    uint64_t v44 = (uint64_t *)(v24 + 16 * (v23 - 2));
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    BOOL v47 = __OFSUB__(v45, v46);
    uint64_t v48 = v45 - v46;
    char v49 = v47;
    if (v47) {
      goto LABEL_115;
    }
    float64x2_t v50 = (uint64_t *)(v24 + 16 * v26);
    uint64_t v52 = *v50;
    uint64_t v51 = v50[1];
    BOOL v37 = __OFSUB__(v51, v52);
    uint64_t v53 = v51 - v52;
    if (v37) {
      goto LABEL_117;
    }
    if (__OFADD__(v48, v53)) {
      goto LABEL_119;
    }
    if (v48 + v53 >= v29)
    {
      BOOL v54 = v29 < v53;
LABEL_66:
      if (v54) {
        unint64_t v26 = v38;
      }
      goto LABEL_68;
    }
LABEL_60:
    if (v49) {
      goto LABEL_116;
    }
    char v57 = (uint64_t *)(v24 + 16 * v26);
    uint64_t v59 = *v57;
    uint64_t v58 = v57[1];
    BOOL v37 = __OFSUB__(v58, v59);
    uint64_t v60 = v58 - v59;
    if (v37) {
      goto LABEL_118;
    }
    if (v60 < v48) {
      goto LABEL_77;
    }
LABEL_68:
    unint64_t v65 = v26 - 1;
    if (v26 - 1 >= v23)
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    if (!v8) {
      goto LABEL_134;
    }
    uint64_t v66 = (uint64_t *)(v24 + 16 * v65);
    uint64_t v67 = *v66;
    uint64_t v68 = (void *)(v24 + 16 * v26);
    uint64_t v69 = v68[1];
    uint64_t v70 = v91;
    uint64_t result = sub_1B2A8F6D4((char *)(v8 + 1128 * *v66), (char *)(v8 + 1128 * *v68), v8 + 1128 * v69, v88);
    uint64_t v91 = v70;
    if (v70) {
      break;
    }
    if (v69 < v67) {
      goto LABEL_107;
    }
    if (v26 > *(void *)(v89 + 16)) {
      goto LABEL_108;
    }
    *uint64_t v66 = v67;
    *(void *)(v24 + 16 * v65 + 8) = v69;
    unint64_t v71 = *(void *)(v89 + 16);
    if (v26 >= v71) {
      goto LABEL_109;
    }
    uint64_t v20 = v89;
    unint64_t v23 = v71 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v24 + 16 * v26), v68 + 2, 16 * (v71 - 1 - v26));
    *(void *)(v89 + 16) = v71 - 1;
    if (v71 <= 2) {
      goto LABEL_77;
    }
  }
LABEL_89:
  uint64_t result = swift_bridgeObjectRelease();
  if (v87 < -1) {
    goto LABEL_128;
  }
  *(void *)(v86 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AB4A24()
{
  return 0;
}

uint64_t sub_1B2AB4ABC()
{
  uint64_t result = sub_1B2ABB678();
  if (v0)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      v3 += 8;
      uint64_t result = sub_1B2E839C8();
      --v0;
    }
    while (v0);
  }
  return result;
}

unint64_t sub_1B2AB4AFC()
{
  unint64_t result = qword_1E9C3C6E8;
  if (!qword_1E9C3C6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C6E8);
  }
  return result;
}

unint64_t sub_1B2AB4B48()
{
  unint64_t result = qword_1E9C3C6F0;
  if (!qword_1E9C3C6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C6F0);
  }
  return result;
}

unint64_t sub_1B2AB4B94()
{
  unint64_t result = qword_1E9C3C6F8;
  if (!qword_1E9C3C6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C6F8);
  }
  return result;
}

unint64_t sub_1B2AB4BE0()
{
  unint64_t result = qword_1E9C3C700;
  if (!qword_1E9C3C700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C700);
  }
  return result;
}

unint64_t sub_1B2AB4C2C()
{
  unint64_t result = qword_1E9C3C708;
  if (!qword_1E9C3C708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C708);
  }
  return result;
}

unint64_t sub_1B2AB4C78()
{
  unint64_t result = qword_1E9C3C718;
  if (!qword_1E9C3C718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C718);
  }
  return result;
}

unint64_t sub_1B2AB4CC4()
{
  unint64_t result = qword_1E9C3C720;
  if (!qword_1E9C3C720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C720);
  }
  return result;
}

uint64_t sub_1B2AB4D10()
{
  sub_1B2A22740(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int16 *)(v0 + 48), *(unsigned char *)(v0 + 50));
  sub_1B2A22740(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned __int16 *)(v0 + 88), *(unsigned char *)(v0 + 90));

  return MEMORY[0x1F4186498](v0, 91, 7);
}

unint64_t sub_1B2AB4D68()
{
  unint64_t result = qword_1E9C3C758;
  if (!qword_1E9C3C758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C758);
  }
  return result;
}

unint64_t sub_1B2AB4DB4()
{
  unint64_t result = qword_1E9C3C770;
  if (!qword_1E9C3C770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C770);
  }
  return result;
}

uint64_t sub_1B2AB4E00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1B2E83998();
  if (v3)
  {
    uint64_t v5 = a2 + 56;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B2E82498();
      sub_1B2E839C8();
      sub_1B2E839C8();
      uint64_t result = swift_bridgeObjectRelease();
      v5 += 32;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1B2AB4E94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1B2E83998();
  if (v3)
  {
    uint64_t v5 = a2 + 56;
    do
    {
      v5 += 40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1B2E82498();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
      --v3;
    }
    while (v3);
  }
  return result;
}

unint64_t sub_1B2AB4F24()
{
  unint64_t result = qword_1E9C3C788;
  if (!qword_1E9C3C788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C788);
  }
  return result;
}

unint64_t sub_1B2AB4F70()
{
  unint64_t result = qword_1E9C3C7B0;
  if (!qword_1E9C3C7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C7B0);
  }
  return result;
}

unint64_t sub_1B2AB4FBC()
{
  unint64_t result = qword_1E9C3C7B8;
  if (!qword_1E9C3C7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C7B8);
  }
  return result;
}

unint64_t sub_1B2AB5008()
{
  unint64_t result = qword_1E9C3C7D0;
  if (!qword_1E9C3C7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C7D0);
  }
  return result;
}

unint64_t sub_1B2AB5054()
{
  unint64_t result = qword_1E9C3C7F0;
  if (!qword_1E9C3C7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C7F0);
  }
  return result;
}

unint64_t sub_1B2AB50A0()
{
  unint64_t result = qword_1E9C3C7F8;
  if (!qword_1E9C3C7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C7F8);
  }
  return result;
}

unint64_t sub_1B2AB50EC()
{
  unint64_t result = qword_1E9C3C808;
  if (!qword_1E9C3C808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C808);
  }
  return result;
}

uint64_t sub_1B2AB5138(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2A9DBC0(v2, v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2AB51F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2A2272C(v2, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1B2AB52B0()
{
  unint64_t result = qword_1E9C3C818;
  if (!qword_1E9C3C818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C818);
  }
  return result;
}

unint64_t sub_1B2AB52FC()
{
  unint64_t result = qword_1E9C3C848;
  if (!qword_1E9C3C848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C848);
  }
  return result;
}

unint64_t sub_1B2AB5348()
{
  unint64_t result = qword_1E9C3C860;
  if (!qword_1E9C3C860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C860);
  }
  return result;
}

unint64_t sub_1B2AB5394()
{
  unint64_t result = qword_1E9C3C868;
  if (!qword_1E9C3C868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C868);
  }
  return result;
}

uint64_t sub_1B2AB53E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2AB5440()
{
  unint64_t result = qword_1E9C3C890;
  if (!qword_1E9C3C890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C890);
  }
  return result;
}

unint64_t sub_1B2AB548C()
{
  unint64_t result = qword_1E9C3C898;
  if (!qword_1E9C3C898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C898);
  }
  return result;
}

unint64_t sub_1B2AB54D8()
{
  unint64_t result = qword_1E9C3C8B0;
  if (!qword_1E9C3C8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C8B0);
  }
  return result;
}

unint64_t sub_1B2AB5524()
{
  unint64_t result = qword_1E9C3C8C0;
  if (!qword_1E9C3C8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C8C0);
  }
  return result;
}

unint64_t sub_1B2AB5570()
{
  unint64_t result = qword_1E9C3C8D0;
  if (!qword_1E9C3C8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C8D0);
  }
  return result;
}

unint64_t sub_1B2AB55BC()
{
  unint64_t result = qword_1E9C3C8E0;
  if (!qword_1E9C3C8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C8E0);
  }
  return result;
}

unint64_t sub_1B2AB5608()
{
  unint64_t result = qword_1E9C3C8E8;
  if (!qword_1E9C3C8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C8E8);
  }
  return result;
}

unint64_t sub_1B2AB5654()
{
  unint64_t result = qword_1E9C3C8F0;
  if (!qword_1E9C3C8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C8F0);
  }
  return result;
}

unint64_t sub_1B2AB56A0()
{
  unint64_t result = qword_1E9C3C908;
  if (!qword_1E9C3C908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C908);
  }
  return result;
}

unint64_t sub_1B2AB56EC()
{
  unint64_t result = qword_1E9C3C928;
  if (!qword_1E9C3C928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C928);
  }
  return result;
}

unint64_t sub_1B2AB5738()
{
  unint64_t result = qword_1E9C3C938;
  if (!qword_1E9C3C938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C938);
  }
  return result;
}

uint64_t sub_1B2AB5784(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2A9DBC0(v2, v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2AB5884(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  uint64_t v7 = *(void *)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2A2272C(v7, v2, v3, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1B2AB5980()
{
  unint64_t result = qword_1E9C3C950;
  if (!qword_1E9C3C950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C950);
  }
  return result;
}

unint64_t sub_1B2AB59CC()
{
  unint64_t result = qword_1E9C3C958;
  if (!qword_1E9C3C958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C958);
  }
  return result;
}

unint64_t sub_1B2AB5A18()
{
  unint64_t result = qword_1E9C3C968;
  if (!qword_1E9C3C968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C968);
  }
  return result;
}

unint64_t sub_1B2AB5A64()
{
  unint64_t result = qword_1E9C3C978;
  if (!qword_1E9C3C978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C978);
  }
  return result;
}

uint64_t sub_1B2AB5AB0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t sub_1B2AB5AF4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1B2AB5B40()
{
  unint64_t result = qword_1E9C3C988;
  if (!qword_1E9C3C988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C988);
  }
  return result;
}

unint64_t sub_1B2AB5B90()
{
  unint64_t result = qword_1E9C3C990;
  if (!qword_1E9C3C990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C990);
  }
  return result;
}

unint64_t sub_1B2AB5BE0()
{
  unint64_t result = qword_1E9C3C998;
  if (!qword_1E9C3C998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C998);
  }
  return result;
}

unint64_t sub_1B2AB5C30()
{
  unint64_t result = qword_1E9C3C9A0;
  if (!qword_1E9C3C9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C9A0);
  }
  return result;
}

unint64_t sub_1B2AB5C80()
{
  unint64_t result = qword_1E9C3C9A8;
  if (!qword_1E9C3C9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C9A8);
  }
  return result;
}

unint64_t sub_1B2AB5CD0()
{
  unint64_t result = qword_1E9C3C9B0;
  if (!qword_1E9C3C9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C9B0);
  }
  return result;
}

unint64_t sub_1B2AB5D20()
{
  unint64_t result = qword_1E9C3C9B8;
  if (!qword_1E9C3C9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C9B8);
  }
  return result;
}

unint64_t sub_1B2AB5D70()
{
  unint64_t result = qword_1E9C3C9C0;
  if (!qword_1E9C3C9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C9C0);
  }
  return result;
}

unint64_t sub_1B2AB5DC0()
{
  unint64_t result = qword_1E9C3C9C8;
  if (!qword_1E9C3C9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C9C8);
  }
  return result;
}

uint64_t sub_1B2AB5E10(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 8u && a3 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for EntityResolutionError(uint64_t a1)
{
  return sub_1B2AB5E3C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1B2AB5E3C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 8u && a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s20IntelligencePlatform21EntityResolutionErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B2AB5E10(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for EntityResolutionError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B2AB5E10(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B2AB5E3C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for EntityResolutionError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B2AB5E3C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityResolutionError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xF7 && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 246;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 9) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 247;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B2AB5FC8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 8u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 9);
  }
}

uint64_t sub_1B2AB5FE0(uint64_t result, unsigned int a2)
{
  if (a2 >= 9)
  {
    *(void *)uint64_t result = a2 - 9;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 9;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

void type metadata accessor for EntityResolutionError()
{
}

unsigned char *storeEnumTagSinglePayload for PreprocessingStep(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AB60D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for PreprocessingStep()
{
}

uint64_t destroy for CandidateConstraint(uint64_t a1)
{
  return sub_1B2A22740(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int16 *)(a1 + 32), *(unsigned char *)(a1 + 34));
}

uint64_t initializeWithCopy for CandidateConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 34);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 32);
  sub_1B2A22630(*(void *)a2, v4, v5, v6, v8, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 34) = v7;
  return a1;
}

uint64_t assignWithCopy for CandidateConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 34);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 32);
  sub_1B2A22630(*(void *)a2, v4, v5, v6, v8, v7);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v13 = *(unsigned __int16 *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v8;
  char v14 = *(unsigned char *)(a1 + 34);
  *(unsigned char *)(a1 + 34) = v7;
  sub_1B2A22740(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 initializeWithTake for CandidateConstraint(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CandidateConstraint(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 34);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  uint64_t v10 = *(unsigned __int16 *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v3;
  char v11 = *(unsigned char *)(a1 + 34);
  *(unsigned char *)(a1 + 34) = v4;
  sub_1B2A22740(v5, v7, v6, v8, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CandidateConstraint(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 35))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 34);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CandidateConstraint(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 35) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 35) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 34) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B2AB6318(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 34);
}

uint64_t sub_1B2AB6320(uint64_t result, char a2)
{
  *(unsigned char *)(result + 34) = a2;
  return result;
}

void type metadata accessor for CandidateConstraint()
{
}

void type metadata accessor for EntitySourceID()
{
}

uint64_t destroy for EntityResolutionRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 90) != 255)
  {
    uint64_t v2 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
    sub_1B2A22740(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), v2, SBYTE2(v2));
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntityResolutionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 90);
  int v8 = *(unsigned __int16 *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    long long v9 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v9;
    *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
  }
  else
  {
    uint64_t v10 = v8 & 0xFF00FFFF | (v7 << 16);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = *(void *)(a2 + 72);
    uint64_t v14 = *(void *)(a2 + 80);
    sub_1B2A22630(v11, v12, v13, v14, v10, SBYTE2(v10));
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v13;
    *(void *)(a1 + 80) = v14;
    *(_WORD *)(a1 + 88) = v10;
    *(unsigned char *)(a1 + 90) = BYTE2(v10);
  }
  uint64_t v15 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v15;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EntityResolutionRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = (long long *)(a1 + 56);
  uint64_t v5 = (long long *)(a2 + 56);
  int v6 = *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16);
  char v7 = *(unsigned char *)(a2 + 90);
  if (*(unsigned __int8 *)(a1 + 90) == 255)
  {
    if (*(unsigned __int8 *)(a2 + 90) == 255)
    {
      long long v8 = *v5;
      long long v9 = *(_OWORD *)(a2 + 72);
      *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
      *uint64_t v4 = v8;
      *(_OWORD *)(a1 + 72) = v9;
    }
    else
    {
      uint64_t v12 = *(void *)(a2 + 56);
      uint64_t v13 = *(void *)(a2 + 64);
      uint64_t v14 = *(void *)(a2 + 72);
      uint64_t v15 = *(void *)(a2 + 80);
      sub_1B2A22630(v12, v13, v14, v15, *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16), v7);
      *(void *)(a1 + 56) = v12;
      *(void *)(a1 + 64) = v13;
      *(void *)(a1 + 72) = v14;
      *(void *)(a1 + 80) = v15;
      *(_WORD *)(a1 + 88) = v6;
      *(unsigned char *)(a1 + 90) = BYTE2(v6);
    }
  }
  else if (*(unsigned __int8 *)(a2 + 90) == 255)
  {
    sub_1B2AB66BC(a1 + 56);
    int v10 = *(_DWORD *)(a2 + 87);
    long long v11 = *(_OWORD *)(a2 + 72);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 72) = v11;
    *(_DWORD *)(a1 + 87) = v10;
  }
  else
  {
    uint64_t v16 = *(void *)(a2 + 56);
    uint64_t v17 = *(void *)(a2 + 64);
    uint64_t v18 = *(void *)(a2 + 72);
    uint64_t v19 = *(void *)(a2 + 80);
    sub_1B2A22630(v16, v17, v18, v19, *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16), v7);
    uint64_t v20 = *(void *)(a1 + 56);
    uint64_t v21 = *(void *)(a1 + 64);
    uint64_t v22 = *(void *)(a1 + 72);
    uint64_t v23 = *(void *)(a1 + 80);
    *(void *)(a1 + 56) = v16;
    *(void *)(a1 + 64) = v17;
    *(void *)(a1 + 72) = v18;
    *(void *)(a1 + 80) = v19;
    uint64_t v24 = *(unsigned __int16 *)(a1 + 88);
    *(_WORD *)(a1 + 88) = v6;
    char v25 = *(unsigned char *)(a1 + 90);
    *(unsigned char *)(a1 + 90) = BYTE2(v6);
    sub_1B2A22740(v20, v21, v22, v23, v24, v25);
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  return a1;
}

uint64_t sub_1B2AB66BC(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for EntityResolutionRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x7AuLL);
}

uint64_t assignWithTake for EntityResolutionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 90) != 255)
  {
    unsigned int v6 = *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16);
    if (HIWORD(v6) <= 0xFEu)
    {
      uint64_t v8 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
      uint64_t v9 = *(void *)(a1 + 56);
      uint64_t v10 = *(void *)(a1 + 64);
      uint64_t v11 = *(void *)(a1 + 72);
      uint64_t v12 = *(void *)(a1 + 80);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_WORD *)(a1 + 88) = v6;
      *(unsigned char *)(a1 + 90) = BYTE2(v6);
      sub_1B2A22740(v9, v10, v11, v12, v8, SBYTE2(v8));
      goto LABEL_6;
    }
    sub_1B2AB66BC(a1 + 56);
  }
  long long v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v7;
  *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
LABEL_6:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityResolutionRequest(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 122))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 120) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 122) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 122) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for EntityResolutionRequest()
{
}

uint64_t initializeWithCopy for Span(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Span(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for Span(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

void type metadata accessor for Span()
{
}

uint64_t destroy for Mention()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Mention(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Mention(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  return a1;
}

void *initializeWithTake for Mention(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for Mention(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for Mention(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 73))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Mention(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for Mention()
{
}

void type metadata accessor for CandidateConfidenceMetric()
{
}

uint64_t destroy for RetrievedCandidate(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RetrievedCandidate(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v5;
    uint64_t v6 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v7;
  }
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RetrievedCandidate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = (_OWORD *)(a1 + 40);
  uint64_t v5 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v6)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B2AB6ECC(a1 + 40);
      long long v7 = *(_OWORD *)(a2 + 56);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 56) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 56);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 56) = v8;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t sub_1B2AB6ECC(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for RetrievedCandidate(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x61uLL);
}

uint64_t assignWithTake for RetrievedCandidate(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (!*(void *)(a1 + 48)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 48);
  if (!v4)
  {
    sub_1B2AB6ECC(a1 + 40);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v6;
    goto LABEL_6;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for RetrievedCandidate(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 97))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RetrievedCandidate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for RetrievedCandidate()
{
}

uint64_t destroy for PopulatedCandidate(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 120);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PopulatedCandidate(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v5;
    uint64_t v6 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v7;
  }
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    uint64_t v10 = *(void *)(a2 + 128);
    uint64_t v11 = *(void *)(a2 + 136);
    *(void *)(a1 + 120) = v9;
    *(void *)(a1 + 128) = v10;
    uint64_t v12 = *(void *)(a2 + 144);
    uint64_t v13 = *(void *)(a2 + 152);
    *(void *)(a1 + 136) = v11;
    *(void *)(a1 + 144) = v12;
    uint64_t v14 = *(void *)(a2 + 160);
    uint64_t v15 = *(void *)(a2 + 168);
    *(void *)(a1 + 152) = v13;
    *(void *)(a1 + 160) = v14;
    uint64_t v16 = *(void *)(a2 + 176);
    uint64_t v17 = *(void *)(a2 + 184);
    *(void *)(a1 + 168) = v15;
    *(void *)(a1 + 176) = v16;
    uint64_t v18 = *(void *)(a2 + 192);
    uint64_t v19 = *(void *)(a2 + 200);
    *(void *)(a1 + 184) = v17;
    *(void *)(a1 + 192) = v18;
    uint64_t v20 = *(void *)(a2 + 208);
    uint64_t v21 = *(void *)(a2 + 216);
    *(void *)(a1 + 200) = v19;
    *(void *)(a1 + 208) = v20;
    uint64_t v22 = *(void *)(a2 + 224);
    uint64_t v23 = *(void *)(a2 + 232);
    *(void *)(a1 + 216) = v21;
    *(void *)(a1 + 224) = v22;
    uint64_t v24 = *(void *)(a2 + 248);
    uint64_t v27 = *(void *)(a2 + 240);
    *(void *)(a1 + 232) = v23;
    *(void *)(a1 + 240) = v27;
    uint64_t v25 = *(void *)(a2 + 256);
    uint64_t v28 = *(void *)(a2 + 264);
    *(void *)(a1 + 248) = v24;
    *(void *)(a1 + 256) = v25;
    *(void *)(a1 + 264) = v28;
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0xB8uLL);
  }
  *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
  return a1;
}

uint64_t assignWithCopy for PopulatedCandidate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = (_OWORD *)(a1 + 40);
  uint64_t v5 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v6)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B2AB6ECC(a1 + 40);
      long long v7 = *(_OWORD *)(a2 + 56);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 56) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 56);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 56) = v8;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 120);
  if (!*(void *)(a1 + 120))
  {
    if (v9)
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
LABEL_14:
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0xB8uLL);
    goto LABEL_15;
  }
  if (!v9)
  {
    sub_1B2AB7748(a1 + 104);
    goto LABEL_14;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
LABEL_15:
  int v10 = *(_DWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
  *(_DWORD *)(a1 + 288) = v10;
  return a1;
}

uint64_t sub_1B2AB7748(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for PopulatedCandidate(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x125uLL);
}

uint64_t assignWithTake for PopulatedCandidate(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (*(void *)(a1 + 48))
  {
    uint64_t v4 = *(void *)(a2 + 48);
    if (v4)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v4;
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1B2AB6ECC(a1 + 40);
  }
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v6;
LABEL_6:
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  if (!*(void *)(a1 + 120))
  {
LABEL_10:
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0xB8uLL);
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)(a2 + 120);
  if (!v8)
  {
    sub_1B2AB7748(a1 + 104);
    goto LABEL_10;
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
LABEL_11:
  *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
  return a1;
}

uint64_t getEnumTagSinglePayload for PopulatedCandidate(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 293))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PopulatedCandidate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 292) = 0;
    *(_DWORD *)(result + 288) = 0;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 293) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 293) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for PopulatedCandidate()
{
}

uint64_t type metadata accessor for PopulatedCandidatesForMention()
{
  return self;
}

uint64_t method lookup function for PopulatedCandidatesForMention(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PopulatedCandidatesForMention);
}

uint64_t dispatch thunk of PopulatedCandidatesForMention.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t destroy for RerankedEntity(uint64_t a1)
{
  if (*(void *)(a1 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RerankedEntity(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  if (v5)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v5;
    uint64_t v6 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v7;
  }
  uint64_t v8 = *(void *)(a2 + 80);
  if (v8)
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v8;
    uint64_t v9 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v9;
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v10;
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  }
  memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x3C9uLL);
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(unsigned char *)(a1 + 1096) = *(unsigned char *)(a2 + 1096);
  *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
  *(unsigned char *)(a1 + 1112) = *(unsigned char *)(a2 + 1112);
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RerankedEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v4 = (_OWORD *)(a1 + 40);
  uint64_t v5 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v6)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B2AB6ECC(a1 + 40);
      long long v7 = v5[1];
      *long long v4 = *v5;
      v4[1] = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 56);
    *long long v4 = *v5;
    *(_OWORD *)(a1 + 56) = v8;
  }
  uint64_t v9 = (_OWORD *)(a1 + 72);
  long long v10 = (_OWORD *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v11)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    }
    else
    {
      sub_1B2AB7E50(a1 + 72);
      char v12 = *(unsigned char *)(a2 + 104);
      long long v13 = *(_OWORD *)(a2 + 88);
      *uint64_t v9 = *v10;
      *(_OWORD *)(a1 + 88) = v13;
      *(unsigned char *)(a1 + 104) = v12;
    }
  }
  else if (v11)
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *v10;
    long long v15 = *(_OWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *uint64_t v9 = v14;
    *(_OWORD *)(a1 + 88) = v15;
  }
  memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x3C9uLL);
  uint64_t v16 = *(void *)(a2 + 1088);
  *(unsigned char *)(a1 + 1096) = *(unsigned char *)(a2 + 1096);
  *(void *)(a1 + 1088) = v16;
  *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
  *(unsigned char *)(a1 + 1112) = *(unsigned char *)(a2 + 1112);
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2AB7E50(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for RerankedEntity(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x468uLL);
}

uint64_t assignWithTake for RerankedEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  long long v4 = (_OWORD *)(a1 + 40);
  uint64_t v5 = (_OWORD *)(a2 + 40);
  if (*(void *)(a1 + 48))
  {
    uint64_t v6 = *(void *)(a2 + 48);
    if (v6)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1B2AB6ECC((uint64_t)v4);
  }
  long long v8 = v5[1];
  *long long v4 = *v5;
  v4[1] = v8;
LABEL_6:
  if (!*(void *)(a1 + 80))
  {
LABEL_10:
    long long v11 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v11;
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(a2 + 80);
  if (!v9)
  {
    sub_1B2AB7E50(a1 + 72);
    goto LABEL_10;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
LABEL_11:
  memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x3C9uLL);
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(unsigned char *)(a1 + 1096) = *(unsigned char *)(a2 + 1096);
  *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
  *(unsigned char *)(a1 + 1112) = *(unsigned char *)(a2 + 1112);
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RerankedEntity(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 1128))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 48);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RerankedEntity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 1128) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 1128) = 0;
    }
    if (a2) {
      *(void *)(result + 48) = a2;
    }
  }
  return result;
}

void type metadata accessor for RerankedEntity()
{
}

uint64_t destroy for RerankedEntitiesForMention()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RerankedEntitiesForMention(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RerankedEntitiesForMention(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for KnosisInternalFact(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for RerankedEntitiesForMention(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RerankedEntitiesForMention(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 80);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RerankedEntitiesForMention(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for RerankedEntitiesForMention()
{
}

uint64_t destroy for EntityResolutionSession(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 90) != 255)
  {
    uint64_t v2 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
    sub_1B2A22740(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), v2, SBYTE2(v2));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntityResolutionSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 90);
  int v8 = *(unsigned __int16 *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    long long v9 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v9;
    *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
  }
  else
  {
    uint64_t v10 = v8 & 0xFF00FFFF | (v7 << 16);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = *(void *)(a2 + 72);
    uint64_t v14 = *(void *)(a2 + 80);
    sub_1B2A22630(v11, v12, v13, v14, v10, SBYTE2(v10));
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v13;
    *(void *)(a1 + 80) = v14;
    *(_WORD *)(a1 + 88) = v10;
    *(unsigned char *)(a1 + 90) = BYTE2(v10);
  }
  uint64_t v16 = *(void *)(a2 + 128);
  uint64_t v15 = a2 + 128;
  uint64_t v17 = *(void *)(v15 - 24);
  *(void *)(a1 + 96) = *(void *)(v15 - 32);
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = *(void *)(v15 - 16);
  *(_WORD *)(a1 + 120) = *(_WORD *)(v15 - 8);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(v15 + 8);
  *(void *)(a1 + 128) = v16;
  *(void *)(a1 + 144) = *(void *)(v15 + 16);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(v15 + 24);
  uint64_t v18 = *(void *)(v15 + 32);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(v15 + 40);
  *(void *)(a1 + 160) = v18;
  uint64_t v19 = *(void *)(v15 + 56);
  *(void *)(a1 + 176) = *(void *)(v15 + 48);
  *(void *)(a1 + 184) = v19;
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(v15 + 64);
  *(void *)(a1 + 200) = *(void *)(v15 + 72);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(v15 + 80);
  *(void *)(a1 + 216) = *(void *)(v15 + 88);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(v15 + 96);
  *(void *)(a1 + 232) = *(void *)(v15 + 104);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(v15 + 112);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(v15 + 136);
  uint64_t v20 = *(void *)(v15 + 128);
  *(void *)(a1 + 248) = *(void *)(v15 + 120);
  *(void *)(a1 + 256) = v20;
  *(_DWORD *)(a1 + 265) = *(_DWORD *)(v15 + 137);
  uint64_t v22 = *(void *)(v15 + 144);
  uint64_t v21 = *(void *)(v15 + 152);
  *(void *)(a1 + 272) = v22;
  *(void *)(a1 + 280) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EntityResolutionSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 265);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = (long long *)(a1 + 56);
  uint64_t v6 = (long long *)(a2 + 56);
  int v7 = *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16);
  char v8 = *(unsigned char *)(a2 + 90);
  if (*(unsigned __int8 *)(a1 + 90) == 255)
  {
    if (*(unsigned __int8 *)(a2 + 90) == 255)
    {
      long long v9 = *v6;
      long long v10 = *(_OWORD *)(a2 + 72);
      *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
      *uint64_t v5 = v9;
      *(_OWORD *)(a1 + 72) = v10;
    }
    else
    {
      uint64_t v13 = *(void *)(a2 + 56);
      uint64_t v14 = *(void *)(a2 + 64);
      uint64_t v15 = *(void *)(a2 + 72);
      uint64_t v16 = *(void *)(a2 + 80);
      sub_1B2A22630(v13, v14, v15, v16, *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16), v8);
      *(void *)(a1 + 56) = v13;
      *(void *)(a1 + 64) = v14;
      *(void *)(a1 + 72) = v15;
      *(void *)(a1 + 80) = v16;
      *(_WORD *)(a1 + 88) = v7;
      *(unsigned char *)(a1 + 90) = BYTE2(v7);
    }
  }
  else if (*(unsigned __int8 *)(a2 + 90) == 255)
  {
    sub_1B2AB66BC(a1 + 56);
    int v11 = *(_DWORD *)(a2 + 87);
    long long v12 = *(_OWORD *)(a2 + 72);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 72) = v12;
    *(_DWORD *)(a1 + 87) = v11;
  }
  else
  {
    uint64_t v17 = *(void *)(a2 + 56);
    uint64_t v18 = *(void *)(a2 + 64);
    uint64_t v19 = *(void *)(a2 + 72);
    uint64_t v20 = *(void *)(a2 + 80);
    sub_1B2A22630(v17, v18, v19, v20, *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16), v8);
    uint64_t v21 = *(void *)(a1 + 56);
    uint64_t v22 = *(void *)(a1 + 64);
    uint64_t v23 = *(void *)(a1 + 72);
    uint64_t v24 = *(void *)(a1 + 80);
    *(void *)(a1 + 56) = v17;
    *(void *)(a1 + 64) = v18;
    *(void *)(a1 + 72) = v19;
    *(void *)(a1 + 80) = v20;
    uint64_t v25 = *(unsigned __int16 *)(a1 + 88);
    *(_WORD *)(a1 + 88) = v7;
    char v26 = *(unsigned char *)(a1 + 90);
    *(unsigned char *)(a1 + 90) = BYTE2(v7);
    sub_1B2A22740(v21, v22, v23, v24, v25, v26);
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  uint64_t v27 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v27;
  uint64_t v28 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v28;
  uint64_t v29 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v29;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 184) = v30;
  uint64_t v31 = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 200) = v31;
  uint64_t v32 = *(void *)(a2 + 216);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(void *)(a1 + 216) = v32;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 256) = v33;
  *(unsigned char *)(a1 + 265) = *v4;
  *(unsigned char *)(a1 + 266) = v4[1];
  *(unsigned char *)(a1 + 267) = *(unsigned char *)(a2 + 267);
  *(unsigned char *)(a1 + 268) = v4[3];
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for EntityResolutionSession(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t assignWithTake for EntityResolutionSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 265);
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 90) != 255)
  {
    unsigned int v7 = *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16);
    if (HIWORD(v7) <= 0xFEu)
    {
      uint64_t v9 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
      uint64_t v10 = *(void *)(a1 + 56);
      uint64_t v11 = *(void *)(a1 + 64);
      uint64_t v12 = *(void *)(a1 + 72);
      uint64_t v13 = *(void *)(a1 + 80);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_WORD *)(a1 + 88) = v7;
      *(unsigned char *)(a1 + 90) = BYTE2(v7);
      sub_1B2A22740(v10, v11, v12, v13, v9, SBYTE2(v9));
      goto LABEL_6;
    }
    sub_1B2AB66BC(a1 + 56);
  }
  long long v8 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v8;
  *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
LABEL_6:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(unsigned char *)(a1 + 265) = *v4;
  *(unsigned char *)(a1 + 266) = v4[1];
  *(unsigned char *)(a1 + 267) = *(unsigned char *)(a2 + 267);
  *(unsigned char *)(a1 + 268) = v4[3];
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityResolutionSession(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 288))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionSession(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 288) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 288) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for EntityResolutionSession()
{
}

void *_s20IntelligencePlatform14EntitySourceIDVwca_0()
{
  sub_1B2ABB764();
  *uint64_t v3 = *v2;
  v1[1] = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1[2] = *(void *)(v0 + 16);
  v1[3] = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v1;
}

void *_s20IntelligencePlatform14EntitySourceIDVwta_0()
{
  sub_1B2ABB764();
  uint64_t v3 = v2[1];
  *uint64_t v1 = *v2;
  v1[1] = v3;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v0 + 24);
  v1[2] = *(void *)(v0 + 16);
  v1[3] = v4;
  swift_bridgeObjectRelease();
  return v1;
}

void type metadata accessor for NeighborSignal()
{
}

uint64_t initializeWithCopy for MockRankerResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MockRankerResult(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for MockRankerResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

void type metadata accessor for MockRankerResult()
{
}

void type metadata accessor for MockLocationFeatures()
{
}

ValueMetadata *type metadata accessor for MockLocationFeatures.CodingKeys()
{
  return &type metadata for MockLocationFeatures.CodingKeys;
}

uint64_t _s20IntelligencePlatform14KnosisQueryArgOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_1B2ABB6B8(-1);
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_1B2ABB6B8((*a1 | (v4 << 8)) - 3);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_1B2ABB6B8((*a1 | (v4 << 8)) - 3);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_1B2ABB6B8((*a1 | (v4 << 8)) - 3);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return sub_1B2ABB6B8(v8);
}

unsigned char *_s20IntelligencePlatform20MockLocationFeaturesV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_1B2ABB6B0((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_1B2ABB698((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AB9034);
      case 4:
        uint64_t result = (unsigned char *)sub_1B2ABB6A0((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_1B2ABB6A8(result, a2 + 2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MockRankerResult.CodingKeys()
{
  return &type metadata for MockRankerResult.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for EntityResolutionSession.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AB9138);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntityResolutionSession.CodingKeys()
{
  return &type metadata for EntityResolutionSession.CodingKeys;
}

ValueMetadata *type metadata accessor for RerankedEntitiesForMention.CodingKeys()
{
  return &type metadata for RerankedEntitiesForMention.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RerankedEntity.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 11) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v5 = v6 - 12;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for RerankedEntity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AB92DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RerankedEntity.CodingKeys()
{
  return &type metadata for RerankedEntity.CodingKeys;
}

ValueMetadata *type metadata accessor for Mention.CodingKeys()
{
  return &type metadata for Mention.CodingKeys;
}

void type metadata accessor for Span.CodingKeys()
{
}

uint64_t getEnumTagSinglePayload for EntityResolutionRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 9) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v5 = v6 - 10;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for EntityResolutionRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AB9484);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntityResolutionRequest.CodingKeys()
{
  return &type metadata for EntityResolutionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for EntitySourceID.CodingKeys()
{
  return &type metadata for EntitySourceID.CodingKeys;
}

uint64_t _s6ClauseV13JoinConditionOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_1B2ABB6B8(-1);
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_1B2ABB6B8((*a1 | (v4 << 8)) - 5);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_1B2ABB6B8((*a1 | (v4 << 8)) - 5);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_1B2ABB6B8((*a1 | (v4 << 8)) - 5);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return sub_1B2ABB6B8(v8);
}

unsigned char *_s20IntelligencePlatform25CandidateConfidenceMetricOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_1B2ABB6B0((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_1B2ABB698((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AB960CLL);
      case 4:
        uint64_t result = (unsigned char *)sub_1B2ABB6A0((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_1B2ABB6A8(result, a2 + 4);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CandidateConstraint.CodingKeys()
{
  return &type metadata for CandidateConstraint.CodingKeys;
}

ValueMetadata *type metadata accessor for CandidateConstraint.HasPredicateCodingKeys()
{
  return &type metadata for CandidateConstraint.HasPredicateCodingKeys;
}

ValueMetadata *type metadata accessor for CandidateConstraint.ExcludeCodingKeys()
{
  return &type metadata for CandidateConstraint.ExcludeCodingKeys;
}

uint64_t _s20IntelligencePlatform19CandidateConstraintO22HasPredicateCodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return sub_1B29DA4DC();
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s20IntelligencePlatform19CandidateConstraintO22HasPredicateCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2AB9754);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CandidateConstraint.SubsetCodingKeys()
{
  return &type metadata for CandidateConstraint.SubsetCodingKeys;
}

ValueMetadata *type metadata accessor for CandidateConstraint.AndCodingKeys()
{
  return &type metadata for CandidateConstraint.AndCodingKeys;
}

uint64_t _s6ClauseV22AggregateLogicFunctionOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_1B2ABB6B8(-1);
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_1B2ABB6B8((*a1 | (v4 << 8)) - 2);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_1B2ABB6B8((*a1 | (v4 << 8)) - 2);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_1B2ABB6B8((*a1 | (v4 << 8)) - 2);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return sub_1B2ABB6B8(v8);
}

unsigned char *_s20IntelligencePlatform26RerankedEntitiesForMentionV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_1B2ABB6B0((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_1B2ABB698((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AB98DCLL);
      case 4:
        uint64_t result = (unsigned char *)sub_1B2ABB6A0((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_1B2ABB6A8(result, a2 + 1);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CandidateConstraint.OrCodingKeys()
{
  return &type metadata for CandidateConstraint.OrCodingKeys;
}

unint64_t sub_1B2AB9918()
{
  unint64_t result = qword_1E9C3C9D0;
  if (!qword_1E9C3C9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C9D0);
  }
  return result;
}

unint64_t sub_1B2AB9968()
{
  unint64_t result = qword_1E9C3C9D8;
  if (!qword_1E9C3C9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C9D8);
  }
  return result;
}

unint64_t sub_1B2AB99B8()
{
  unint64_t result = qword_1E9C3C9E0;
  if (!qword_1E9C3C9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C9E0);
  }
  return result;
}

unint64_t sub_1B2AB9A08()
{
  unint64_t result = qword_1E9C3C9E8;
  if (!qword_1E9C3C9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C9E8);
  }
  return result;
}

unint64_t sub_1B2AB9A58()
{
  unint64_t result = qword_1E9C3C9F0;
  if (!qword_1E9C3C9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C9F0);
  }
  return result;
}

unint64_t sub_1B2AB9AA8()
{
  unint64_t result = qword_1E9C3C9F8;
  if (!qword_1E9C3C9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3C9F8);
  }
  return result;
}

unint64_t sub_1B2AB9AF8()
{
  unint64_t result = qword_1E9C3CA00;
  if (!qword_1E9C3CA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA00);
  }
  return result;
}

unint64_t sub_1B2AB9B48()
{
  unint64_t result = qword_1E9C3CA08;
  if (!qword_1E9C3CA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA08);
  }
  return result;
}

unint64_t sub_1B2AB9B98()
{
  unint64_t result = qword_1E9C3CA10;
  if (!qword_1E9C3CA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA10);
  }
  return result;
}

unint64_t sub_1B2AB9BE8()
{
  unint64_t result = qword_1E9C3CA18;
  if (!qword_1E9C3CA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA18);
  }
  return result;
}

unint64_t sub_1B2AB9C38()
{
  unint64_t result = qword_1E9C3CA20;
  if (!qword_1E9C3CA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA20);
  }
  return result;
}

unint64_t sub_1B2AB9C88()
{
  unint64_t result = qword_1E9C3CA28;
  if (!qword_1E9C3CA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA28);
  }
  return result;
}

unint64_t sub_1B2AB9CD8()
{
  unint64_t result = qword_1E9C3CA30;
  if (!qword_1E9C3CA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA30);
  }
  return result;
}

unint64_t sub_1B2AB9D28()
{
  unint64_t result = qword_1E9C3CA38;
  if (!qword_1E9C3CA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA38);
  }
  return result;
}

unint64_t sub_1B2AB9D78()
{
  unint64_t result = qword_1E9C3CA40;
  if (!qword_1E9C3CA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA40);
  }
  return result;
}

unint64_t sub_1B2AB9DC8()
{
  unint64_t result = qword_1E9C3CA48;
  if (!qword_1E9C3CA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA48);
  }
  return result;
}

unint64_t sub_1B2AB9E18()
{
  unint64_t result = qword_1E9C3CA50;
  if (!qword_1E9C3CA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA50);
  }
  return result;
}

unint64_t sub_1B2AB9E68()
{
  unint64_t result = qword_1E9C3CA58;
  if (!qword_1E9C3CA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA58);
  }
  return result;
}

unint64_t sub_1B2AB9EB8()
{
  unint64_t result = qword_1E9C3CA60;
  if (!qword_1E9C3CA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA60);
  }
  return result;
}

unint64_t sub_1B2AB9F08()
{
  unint64_t result = qword_1E9C3CA68;
  if (!qword_1E9C3CA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA68);
  }
  return result;
}

unint64_t sub_1B2AB9F58()
{
  unint64_t result = qword_1E9C3CA70;
  if (!qword_1E9C3CA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA70);
  }
  return result;
}

unint64_t sub_1B2AB9FA8()
{
  unint64_t result = qword_1E9C3CA78;
  if (!qword_1E9C3CA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA78);
  }
  return result;
}

unint64_t sub_1B2AB9FF8()
{
  unint64_t result = qword_1E9C3CA80;
  if (!qword_1E9C3CA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA80);
  }
  return result;
}

unint64_t sub_1B2ABA048()
{
  unint64_t result = qword_1E9C3CA88;
  if (!qword_1E9C3CA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA88);
  }
  return result;
}

unint64_t sub_1B2ABA098()
{
  unint64_t result = qword_1E9C3CA90;
  if (!qword_1E9C3CA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA90);
  }
  return result;
}

unint64_t sub_1B2ABA0E8()
{
  unint64_t result = qword_1E9C3CA98;
  if (!qword_1E9C3CA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CA98);
  }
  return result;
}

unint64_t sub_1B2ABA138()
{
  unint64_t result = qword_1E9C3CAA0;
  if (!qword_1E9C3CAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CAA0);
  }
  return result;
}

unint64_t sub_1B2ABA188()
{
  unint64_t result = qword_1E9C3CAA8;
  if (!qword_1E9C3CAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CAA8);
  }
  return result;
}

unint64_t sub_1B2ABA1D8()
{
  unint64_t result = qword_1E9C3CAB0;
  if (!qword_1E9C3CAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CAB0);
  }
  return result;
}

unint64_t sub_1B2ABA228()
{
  unint64_t result = qword_1E9C3CAB8;
  if (!qword_1E9C3CAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CAB8);
  }
  return result;
}

unint64_t sub_1B2ABA278()
{
  unint64_t result = qword_1E9C3CAC0;
  if (!qword_1E9C3CAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CAC0);
  }
  return result;
}

unint64_t sub_1B2ABA2C8()
{
  unint64_t result = qword_1E9C3CAC8;
  if (!qword_1E9C3CAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CAC8);
  }
  return result;
}

unint64_t sub_1B2ABA318()
{
  unint64_t result = qword_1E9C3CAD0;
  if (!qword_1E9C3CAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CAD0);
  }
  return result;
}

unint64_t sub_1B2ABA368()
{
  unint64_t result = qword_1E9C3CAD8;
  if (!qword_1E9C3CAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CAD8);
  }
  return result;
}

unint64_t sub_1B2ABA3B8()
{
  unint64_t result = qword_1E9C3CAE0;
  if (!qword_1E9C3CAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CAE0);
  }
  return result;
}

unint64_t sub_1B2ABA408()
{
  unint64_t result = qword_1E9C3CAE8;
  if (!qword_1E9C3CAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CAE8);
  }
  return result;
}

unint64_t sub_1B2ABA458()
{
  unint64_t result = qword_1E9C3CAF0;
  if (!qword_1E9C3CAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CAF0);
  }
  return result;
}

unint64_t sub_1B2ABA4A8()
{
  unint64_t result = qword_1E9C3CAF8;
  if (!qword_1E9C3CAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CAF8);
  }
  return result;
}

unint64_t sub_1B2ABA4F8()
{
  unint64_t result = qword_1E9C3CB00;
  if (!qword_1E9C3CB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CB00);
  }
  return result;
}

unint64_t sub_1B2ABA548()
{
  unint64_t result = qword_1E9C3CB08;
  if (!qword_1E9C3CB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CB08);
  }
  return result;
}

unint64_t sub_1B2ABA598()
{
  unint64_t result = qword_1E9C3CB10;
  if (!qword_1E9C3CB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CB10);
  }
  return result;
}

unint64_t sub_1B2ABA5E8()
{
  unint64_t result = qword_1E9C3CB18;
  if (!qword_1E9C3CB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CB18);
  }
  return result;
}

unint64_t sub_1B2ABA638()
{
  unint64_t result = qword_1E9C3CB20;
  if (!qword_1E9C3CB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CB20);
  }
  return result;
}

unint64_t sub_1B2ABA688()
{
  unint64_t result = qword_1E9C3CB28;
  if (!qword_1E9C3CB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CB28);
  }
  return result;
}

unint64_t sub_1B2ABA6D8()
{
  unint64_t result = qword_1E9C3CB30;
  if (!qword_1E9C3CB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CB30);
  }
  return result;
}

uint64_t sub_1B2ABA724()
{
  uint64_t v1 = sub_1B2ABB34C();
  v2(v1);
  uint64_t v3 = sub_1B2999874();
  v4(v3);
  return v0;
}

uint64_t sub_1B2ABA780(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B299B798();
  v3();
  return a1;
}

unint64_t sub_1B2ABA7DC()
{
  unint64_t result = qword_1E9C3CB38;
  if (!qword_1E9C3CB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CB38);
  }
  return result;
}

unint64_t sub_1B2ABA828()
{
  unint64_t result = qword_1E9C3CB40;
  if (!qword_1E9C3CB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CB40);
  }
  return result;
}

unint64_t sub_1B2ABA874()
{
  unint64_t result = qword_1E9C3CB48;
  if (!qword_1E9C3CB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CB48);
  }
  return result;
}

unint64_t sub_1B2ABA8C0()
{
  unint64_t result = qword_1E9C3CB50;
  if (!qword_1E9C3CB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CB50);
  }
  return result;
}

unint64_t sub_1B2ABA90C()
{
  unint64_t result = qword_1EB7E2F80;
  if (!qword_1EB7E2F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F80);
  }
  return result;
}

uint64_t sub_1B2ABA958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_1B2E83998();
  if (v4)
  {
    uint64_t v6 = a2 + 56;
    do
    {
      uint64_t result = KnosisInternalFact.hash(into:)(a1);
      v6 += 88;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_1B2ABA9E4()
{
  uint64_t result = sub_1B2ABB678();
  if (v0)
  {
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B2ABB3B0();
      sub_1B2E82498();
      uint64_t result = swift_bridgeObjectRelease();
      v3 += 16;
      --v0;
    }
    while (v0);
  }
  return result;
}

uint64_t sub_1B2ABAA44(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2ABAAB0()
{
  unint64_t result = qword_1E9C3CB68;
  if (!qword_1E9C3CB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CB68);
  }
  return result;
}

uint64_t sub_1B2ABAB20()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B2ABAB74()
{
  return 0x6C61755168676968;
}

uint64_t sub_1B2ABAB88()
{
  return 0x6465636E616C6162;
}

uint64_t sub_1B2ABABC4()
{
  sub_1B2AA75C8(v0, v1);
  return v1;
}

uint64_t sub_1B2ABAC24()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2ABAC48()
{
  return 0x646972627968;
}

uint64_t sub_1B2ABAC58()
{
  sub_1B2A2272C(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 112), *(unsigned int *)(v0 + 108));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2ABAC90()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2ABACB4()
{
  return sub_1B2E82498();
}

void sub_1B2ABACD8()
{
  uint64_t v1 = *(void *)(v0 - 232);
  *(void *)(v0 - 112) = *(void *)(v0 - 240);
  *(void *)(v0 - 104) = v1;
  *(_WORD *)(v0 - 96) = *(_DWORD *)(v0 - 224);
  *(unsigned char *)(v0 - 94) = *(_DWORD *)(v0 - 216);
  *(unsigned char *)(v0 - 65) = 1;
}

uint64_t sub_1B2ABAD00@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = v1;
  *(void *)(v2 - 208) = a1;
  return result;
}

void sub_1B2ABAD40()
{
  *(unsigned char *)(v0 - 65) = 1;
}

uint64_t sub_1B2ABAD7C()
{
  return 0;
}

uint64_t sub_1B2ABAD88()
{
  return sub_1B2E83548();
}

uint64_t sub_1B2ABADB8()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2ABAE0C()
{
  return sub_1B2E83668();
}

uint64_t sub_1B2ABAE54()
{
  return 0x6E6574614C776F6CLL;
}

uint64_t sub_1B2ABAE88()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2ABAEA4()
{
  return sub_1B2E83668();
}

uint64_t sub_1B2ABAEF0()
{
  return sub_1B2E83548();
}

uint64_t sub_1B2ABAF10()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2ABAF5C()
{
  return v0;
}

uint64_t sub_1B2ABAF84()
{
  return v0;
}

uint64_t sub_1B2ABAFA0()
{
  return v0;
}

uint64_t sub_1B2ABAFBC()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2ABAFD4()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2ABAFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32,uint64_t a33)
{
  return sub_1B2A22740(a13, a29, a30, a33, a32, a27);
}

uint64_t sub_1B2ABB010()
{
  return v0;
}

uint64_t sub_1B2ABB028()
{
  return v0;
}

uint64_t sub_1B2ABB040()
{
  return v0;
}

uint64_t sub_1B2ABB04C()
{
  return v0;
}

uint64_t sub_1B2ABB064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v35 = *(void *)(v33 - 176);
  uint64_t v36 = *(void *)(v33 - 200);
  uint64_t v37 = *(void *)(v33 - 192);
  uint64_t v38 = *(unsigned int *)(v33 - 180);
  return sub_1B2A22740(a33, v35, v36, v37, v38, 3);
}

uint64_t sub_1B2ABB088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v35 = *(void *)(v33 - 176);
  uint64_t v36 = *(void *)(v33 - 200);
  uint64_t v37 = *(void *)(v33 - 192);
  uint64_t v38 = *(unsigned int *)(v33 - 180);
  return sub_1B2A22740(a33, v35, v36, v37, v38, 4);
}

uint64_t sub_1B2ABB0AC()
{
  return v0;
}

uint64_t sub_1B2ABB0C4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 120) = a1;
  return v1 + 120;
}

uint64_t sub_1B2ABB0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned int a27,uint64_t a28)
{
  return sub_1B2A22740(a28, a13, a26, a12, a27, a11);
}

uint64_t sub_1B2ABB0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned int a27,uint64_t a28)
{
  return sub_1B2A22740(a28, a13, a12, a26, a27, a11);
}

uint64_t sub_1B2ABB118()
{
  return v0;
}

uint64_t sub_1B2ABB140()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2ABB170()
{
  return sub_1B2E83588();
}

uint64_t sub_1B2ABB1A4()
{
  return v0;
}

uint64_t sub_1B2ABB1F4()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B2ABB218()
{
  return sub_1B2E836A8();
}

uint64_t sub_1B2ABB230(uint64_t a1)
{
  return sub_1B2A22740(a1, v4, v2, v3, v5, v1);
}

uint64_t sub_1B2ABB254()
{
  return v0;
}

uint64_t sub_1B2ABB26C()
{
  return v0;
}

uint64_t sub_1B2ABB284()
{
  return v0;
}

uint64_t sub_1B2ABB294()
{
  return v0;
}

uint64_t sub_1B2ABB2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(v3 - 272);
  uint64_t v6 = *(unsigned int *)(v3 - 264);
  int v7 = *(_DWORD *)(v3 - 256);
  return sub_1B2A22740(a1, a2, a3, v5, v6, v7);
}

uint64_t sub_1B2ABB2C8()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2ABB2E4()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2ABB328()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2ABB34C()
{
  return 0;
}

uint64_t sub_1B2ABB35C()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2ABB3B0()
{
  return v0;
}

uint64_t sub_1B2ABB404(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
}

uint64_t sub_1B2ABB418()
{
  return v0 - 112;
}

uint64_t sub_1B2ABB42C()
{
  return v0;
}

uint64_t sub_1B2ABB440()
{
  return v0;
}

uint64_t sub_1B2ABB454()
{
  return v0;
}

uint64_t sub_1B2ABB468()
{
  *(_WORD *)(v2 - 136) = v1;
  *(unsigned char *)(v2 - 134) = v0;
  return static CandidateConstraint.== infix(_:_:)(v2 - 128, v2 - 168);
}

uint64_t sub_1B2ABB49C()
{
  return v0 - 128;
}

uint64_t sub_1B2ABB4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32)
{
  return sub_1B2A22740(a29, a13, a14, a30, a32, a27);
}

uint64_t sub_1B2ABB554()
{
  return v0;
}

uint64_t sub_1B2ABB568()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2ABB588()
{
  return v0 - 224;
}

uint64_t sub_1B2ABB59C()
{
  return sub_1B2E83508();
}

uint64_t sub_1B2ABB5BC()
{
  return 0x49746361746E6F63;
}

uint64_t sub_1B2ABB5D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 248);
  uint64_t v4 = *(void *)(v1 - 240);
  uint64_t v5 = *(void *)(v1 - 232);
  uint64_t v6 = *(unsigned int *)(v1 - 224);
  int v7 = *(_DWORD *)(v1 - 216);
  return sub_1B2A22740(a1, v3, v4, v5, v6, v7);
}

uint64_t sub_1B2ABB5F0()
{
  return v0 - 120;
}

uint64_t sub_1B2ABB604()
{
  return sub_1B2E831F8();
}

void sub_1B2ABB624()
{
  STACK[0x408] = 0;
  STACK[0x410] = 0xE000000000000000;
}

uint64_t sub_1B2ABB638()
{
  return sub_1B2E83A38();
}

uint64_t sub_1B2ABB658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)(v6 - 224) = v5;
  *(_DWORD *)(v6 - 216) = v4;
  return sub_1B2A22630(a1, a2, a3, a4, v5, v4);
}

uint64_t sub_1B2ABB678()
{
  return sub_1B2E83998();
}

uint64_t sub_1B2ABB698@<X0>(uint64_t result@<X0>, __int16 a2@<W8>)
{
  *(_WORD *)(result + 1) = a2;
  return result;
}

uint64_t sub_1B2ABB6A0@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 1) = a2;
  return result;
}

unsigned char *sub_1B2ABB6A8@<X0>(unsigned char *result@<X0>, char a2@<W8>)
{
  *uint64_t result = a2;
  return result;
}

uint64_t sub_1B2ABB6B0@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 1) = a2;
  return result;
}

uint64_t sub_1B2ABB6B8@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_1B2ABB6C0(uint64_t a1, uint64_t a2)
{
  return sub_1B2A22740(a1, a2, v3, v4, v5, v2);
}

uint64_t sub_1B2ABB6E0()
{
  return v0;
}

uint64_t sub_1B2ABB6EC()
{
  return sub_1B2E83618();
}

uint64_t sub_1B2ABB704()
{
  return sub_1B2E83A38();
}

uint64_t sub_1B2ABB758()
{
  return 44;
}

uint64_t sub_1B2ABB770()
{
  return sub_1B2E839A8();
}

uint64_t sub_1B2ABB794()
{
  return sub_1B2E839A8();
}

uint64_t sub_1B2ABB7AC()
{
  return Double.toString(decimalPlaces:)(3)._countAndFlagsBits;
}

uint64_t _s20IntelligencePlatform14EntitySourceIDV_6sourceACSS_SSSgtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

void sub_1B2ABB7D0(__n128 a1)
{
  *(__n128 *)uint64_t v1 = a1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 57) = 0u;
}

uint64_t sub_1B2ABB7E4()
{
  return v0;
}

__n128 EntityResolutionRankingService.TextResolutionOptions.init(typeFilter:candidateConstraints:mode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  __n128 result = *(__n128 *)a2;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a4 + 8) = *(_OWORD *)a2;
  __int16 v6 = *(_WORD *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 34);
  uint64_t v8 = *a3;
  char v9 = *((unsigned char *)a3 + 8);
  *(void *)a4 = a1;
  *(_OWORD *)(a4 + 24) = v5;
  *(unsigned char *)(a4 + 42) = v7;
  *(_WORD *)(a4 + 40) = v6;
  *(void *)(a4 + 48) = v8;
  *(unsigned char *)(a4 + 56) = v9;
  return result;
}

uint64_t EntityResolutionRankingService.TextResolutionOptions.typeFilter.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*EntityResolutionRankingService.TextResolutionOptions.typeFilter.modify())(void)
{
  return nullsub_1;
}

uint64_t EntityResolutionRankingService.TextResolutionOptions.candidateConstraints.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  int v6 = *(unsigned __int8 *)(v1 + 42);
  int v7 = *(unsigned __int16 *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 34) = v6;
  *(_WORD *)(a1 + 32) = v7;
  return sub_1B2ABB89C(v2, v3, v4, v5, v7 | (v6 << 16));
}

uint64_t sub_1B2ABB89C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (BYTE2(a5) != 255) {
    return sub_1B2ABB8B0(result, a2, a3, a4, a5, SBYTE2(a5));
  }
  return result;
}

uint64_t sub_1B2ABB8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 1:
    case 2:
LABEL_6:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 3:
    case 4:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

__n128 EntityResolutionRankingService.TextResolutionOptions.candidateConstraints.setter(__n128 *a1)
{
  __n128 v9 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int16 v4 = a1[2].n128_u16[0];
  unsigned __int8 v5 = a1[2].n128_u8[2];
  int v7 = *(unsigned __int16 *)(v1 + 40);
  uint64_t v6 = v1 + 40;
  sub_1B2ABB9B8(*(void *)(v6 - 32), *(void *)(v6 - 24), *(void *)(v6 - 16), *(void *)(v6 - 8), v7 | (*(unsigned __int8 *)(v6 + 2) << 16));
  __n128 result = v9;
  *(__n128 *)(v6 - 32) = v9;
  *(void *)(v6 - 16) = v2;
  *(void *)(v6 - 8) = v3;
  *(unsigned char *)(v6 + 2) = v5;
  *(_WORD *)uint64_t v6 = v4;
  return result;
}

uint64_t sub_1B2ABB9B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (BYTE2(a5) != 255) {
    return sub_1B2ABB9CC(result, a2, a3, a4, a5, SBYTE2(a5));
  }
  return result;
}

uint64_t sub_1B2ABB9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 1:
    case 2:
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
    case 4:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t (*EntityResolutionRankingService.TextResolutionOptions.candidateConstraints.modify())(void)
{
  return nullsub_1;
}

void EntityResolutionRankingService.TextResolutionOptions.mode.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 48);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t EntityResolutionRankingService.TextResolutionOptions.mode.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 48) = *(void *)result;
  *(unsigned char *)(v1 + 56) = v2;
  return result;
}

uint64_t (*EntityResolutionRankingService.TextResolutionOptions.mode.modify())(void)
{
  return nullsub_1;
}

uint64_t EntityResolutionRankingService.resolveEntitiesInUnstructuredText(_:using:resolutionOptions:)()
{
  return MEMORY[0x1F4188298](sub_1B2ABBAE4, 0, 0);
}

uint64_t sub_1B2ABBAE4()
{
  return sub_1B2E83418();
}

IntelligencePlatform::UnstructuredText __swiftcall UnstructuredText.init(text:)(IntelligencePlatform::UnstructuredText text)
{
  *uint64_t v1 = text;
  return text;
}

uint64_t UnstructuredText.text.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UnstructuredText.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*UnstructuredText.text.modify())(void)
{
  return nullsub_1;
}

uint64_t TextMention.init(span:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = result;
  a3[2] = a2;
  return result;
}

uint64_t TextMention.entityTypes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*TextMention.entityTypes.modify())(void)
{
  return nullsub_1;
}

uint64_t TextMention.span.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t TextMention.span.setter(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 8) = result;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*TextMention.span.modify())(void)
{
  return nullsub_1;
}

uint64_t _s21TextResolutionOptionsVwxx(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 42) != 255)
  {
    uint64_t v3 = *(unsigned __int16 *)(a1 + 40) | (*(unsigned __int8 *)(a1 + 42) << 16);
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 16);
    uint64_t v6 = *(void *)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 32);
    return sub_1B2ABB9CC(v4, v5, v6, v7, v3, SBYTE2(v3));
  }
  return result;
}

uint64_t _s21TextResolutionOptionsVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 42);
  int v6 = *(unsigned __int16 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *uint64_t v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
    *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
  }
  else
  {
    uint64_t v8 = v6 & 0xFF00FFFF | (v5 << 16);
    uint64_t v9 = *(void *)(a2 + 8);
    uint64_t v10 = *(void *)(a2 + 16);
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    sub_1B2ABB8B0(v9, v10, v11, v12, v8, SBYTE2(v8));
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 42) = BYTE2(v8);
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t _s21TextResolutionOptionsVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 8);
  unsigned __int8 v5 = (long long *)(a2 + 8);
  int v6 = *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16);
  char v7 = *(unsigned char *)(a2 + 42);
  if (*(unsigned __int8 *)(a1 + 42) == 255)
  {
    if (*(unsigned __int8 *)(a2 + 42) == 255)
    {
      long long v8 = *v5;
      long long v9 = *(_OWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
      *uint64_t v4 = v8;
      *(_OWORD *)(a1 + 24) = v9;
    }
    else
    {
      uint64_t v12 = *(void *)(a2 + 8);
      uint64_t v13 = *(void *)(a2 + 16);
      uint64_t v14 = *(void *)(a2 + 24);
      uint64_t v15 = *(void *)(a2 + 32);
      sub_1B2ABB8B0(v12, v13, v14, v15, *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16), v7);
      *(void *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = v14;
      *(void *)(a1 + 32) = v15;
      *(_WORD *)(a1 + 40) = v6;
      *(unsigned char *)(a1 + 42) = BYTE2(v6);
    }
  }
  else if (*(unsigned __int8 *)(a2 + 42) == 255)
  {
    sub_1B2ABBEEC(a1 + 8);
    int v10 = *(_DWORD *)(a2 + 39);
    long long v11 = *(_OWORD *)(a2 + 24);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 24) = v11;
    *(_DWORD *)(a1 + 39) = v10;
  }
  else
  {
    uint64_t v16 = *(void *)(a2 + 8);
    uint64_t v17 = *(void *)(a2 + 16);
    uint64_t v18 = *(void *)(a2 + 24);
    uint64_t v19 = *(void *)(a2 + 32);
    sub_1B2ABB8B0(v16, v17, v18, v19, *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16), v7);
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = *(void *)(a1 + 16);
    uint64_t v22 = *(void *)(a1 + 24);
    uint64_t v23 = *(void *)(a1 + 32);
    *(void *)(a1 + 8) = v16;
    *(void *)(a1 + 16) = v17;
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v19;
    uint64_t v24 = *(unsigned __int16 *)(a1 + 40);
    *(_WORD *)(a1 + 40) = v6;
    char v25 = *(unsigned char *)(a1 + 42);
    *(unsigned char *)(a1 + 42) = BYTE2(v6);
    sub_1B2ABB9CC(v20, v21, v22, v23, v24, v25);
  }
  uint64_t v26 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v26;
  return a1;
}

uint64_t sub_1B2ABBEEC(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for Subfact(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s21TextResolutionOptionsVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 42) != 255)
  {
    unsigned int v4 = *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16);
    if (HIWORD(v4) <= 0xFEu)
    {
      uint64_t v6 = *(unsigned __int16 *)(a1 + 40) | (*(unsigned __int8 *)(a1 + 42) << 16);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      uint64_t v10 = *(void *)(a1 + 32);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_WORD *)(a1 + 40) = v4;
      *(unsigned char *)(a1 + 42) = BYTE2(v4);
      sub_1B2ABB9CC(v7, v8, v9, v10, v6, SBYTE2(v6));
      goto LABEL_6;
    }
    sub_1B2ABBEEC(a1 + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
LABEL_6:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t _s21TextResolutionOptionsVwet(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 57))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s21TextResolutionOptionsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

void type metadata accessor for EntityResolutionRankingService.TextResolutionOptions()
{
}

void type metadata accessor for UnstructuredText()
{
}

uint64_t initializeBufferWithCopyOfBuffer for TextMention(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TextMention(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for TextMention(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextMention(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextMention(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

void type metadata accessor for TextMention()
{
}

__n128 EntityResolutionRankingService.ImageResolutionOptions.init(typeFilter:candidateConstraints:mode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  __n128 result = *(__n128 *)a2;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a4 + 8) = *(_OWORD *)a2;
  __int16 v6 = *(_WORD *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 34);
  uint64_t v8 = *a3;
  char v9 = *((unsigned char *)a3 + 8);
  *(void *)a4 = a1;
  *(_OWORD *)(a4 + 24) = v5;
  *(unsigned char *)(a4 + 42) = v7;
  *(_WORD *)(a4 + 40) = v6;
  *(void *)(a4 + 48) = v8;
  *(unsigned char *)(a4 + 56) = v9;
  return result;
}

uint64_t EntityResolutionRankingService.ImageResolutionOptions.typeFilter.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EntityResolutionRankingService.ImageResolutionOptions.typeFilter.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*EntityResolutionRankingService.ImageResolutionOptions.typeFilter.modify())(void)
{
  return nullsub_1;
}

uint64_t EntityResolutionRankingService.ImageResolutionOptions.candidateConstraints.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  int v6 = *(unsigned __int8 *)(v1 + 42);
  int v7 = *(unsigned __int16 *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 34) = v6;
  *(_WORD *)(a1 + 32) = v7;
  return sub_1B2ABB89C(v2, v3, v4, v5, v7 | (v6 << 16));
}

__n128 EntityResolutionRankingService.ImageResolutionOptions.candidateConstraints.setter(__n128 *a1)
{
  __n128 v9 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int16 v4 = a1[2].n128_u16[0];
  unsigned __int8 v5 = a1[2].n128_u8[2];
  int v7 = *(unsigned __int16 *)(v1 + 40);
  uint64_t v6 = v1 + 40;
  sub_1B2ABB9B8(*(void *)(v6 - 32), *(void *)(v6 - 24), *(void *)(v6 - 16), *(void *)(v6 - 8), v7 | (*(unsigned __int8 *)(v6 + 2) << 16));
  __n128 result = v9;
  *(__n128 *)(v6 - 32) = v9;
  *(void *)(v6 - 16) = v2;
  *(void *)(v6 - 8) = v3;
  *(unsigned char *)(v6 + 2) = v5;
  *(_WORD *)uint64_t v6 = v4;
  return result;
}

uint64_t (*EntityResolutionRankingService.ImageResolutionOptions.candidateConstraints.modify())(void)
{
  return nullsub_1;
}

void EntityResolutionRankingService.ImageResolutionOptions.mode.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 48);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t EntityResolutionRankingService.ImageResolutionOptions.mode.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 48) = *(void *)result;
  *(unsigned char *)(v1 + 56) = v2;
  return result;
}

uint64_t (*EntityResolutionRankingService.ImageResolutionOptions.mode.modify())(void)
{
  return nullsub_1;
}

uint64_t EntityResolutionRankingService.resolveEntitiesInUnstructuredImage(_:using:resolutionOptions:)()
{
  return MEMORY[0x1F4188298](sub_1B2ABC428, 0, 0);
}

uint64_t sub_1B2ABC428()
{
  return sub_1B2E83418();
}

uint64_t UnstructuredImage.init(image:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2ABC4A0(a1, a2);
}

uint64_t sub_1B2ABC4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnstructuredImage.Asset(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for UnstructuredImage.Asset(uint64_t a1)
{
  return sub_1B29DAD3C(a1, qword_1E9C3CB98);
}

uint64_t UnstructuredImage.image.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2ABC530(v1, a1);
}

uint64_t sub_1B2ABC530(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnstructuredImage.Asset(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

IntelligencePlatform::ImageMention __swiftcall ImageMention.init(observation:)(IntelligencePlatform::ImageMention observation)
{
  v1->observation.super.isa = observation.observation.super.isa;
  return observation;
}

id ImageMention.observation.getter()
{
  return *v0;
}

void ImageMention.observation.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*ImageMention.observation.modify())(void)
{
  return nullsub_1;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.ImageResolutionOptions()
{
  return &type metadata for EntityResolutionRankingService.ImageResolutionOptions;
}

char *initializeBufferWithCopyOfBuffer for UnstructuredImage(char *a1, char **a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for UnstructuredImage.Asset(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    int v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_1B2E806B8();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = sub_1B2E80498();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      __n128 v9 = *a2;
      *(void *)a1 = *a2;
      uint64_t v10 = v9;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for UnstructuredImage(void **a1)
{
  type metadata accessor for UnstructuredImage.Asset(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v4 = sub_1B2E806B8();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (!EnumCaseMultiPayload)
      {
        unint64_t v3 = *a1;
      }
      return;
    }
    uint64_t v4 = sub_1B2E80498();
  }
  unsigned __int8 v5 = *(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8);

  v5(a1, v4);
}

void **initializeWithCopy for UnstructuredImage(void **a1, void **a2)
{
  type metadata accessor for UnstructuredImage.Asset(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = sub_1B2E806B8();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_1B2E80498();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  }
  else
  {
    int v7 = *a2;
    *a1 = *a2;
    id v8 = v7;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for UnstructuredImage(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1B2ABCA48((uint64_t)a1);
    type metadata accessor for UnstructuredImage.Asset(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v6 = sub_1B2E806B8();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_1B2E80498();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      int v7 = *a2;
      *a1 = *a2;
      id v8 = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B2ABCA48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnstructuredImage.Asset(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for UnstructuredImage(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for UnstructuredImage.Asset(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_1B2E806B8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      return a1;
    }
    uint64_t v6 = sub_1B2E80498();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for UnstructuredImage(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1B2ABCA48((uint64_t)a1);
    uint64_t v4 = type metadata accessor for UnstructuredImage.Asset(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = sub_1B2E806B8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        return a1;
      }
      uint64_t v6 = sub_1B2E80498();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for UnstructuredImage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2ABCCF0);
}

uint64_t sub_1B2ABCCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnstructuredImage.Asset(0);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for UnstructuredImage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2ABCD4C);
}

uint64_t sub_1B2ABCD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnstructuredImage.Asset(0);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for UnstructuredImage(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1E9C3CB88);
}

uint64_t sub_1B2ABCDB8()
{
  uint64_t result = type metadata accessor for UnstructuredImage.Asset(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for UnstructuredImage.Asset(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = sub_1B2E806B8();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_1B2E80498();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      uint64_t v10 = *a2;
      *(void *)a1 = *a2;
      long long v11 = v10;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for UnstructuredImage.Asset(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v4 = sub_1B2E806B8();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (!EnumCaseMultiPayload)
      {
        unint64_t v3 = *a1;
      }
      return;
    }
    uint64_t v4 = sub_1B2E80498();
  }
  int v5 = *(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8);

  v5(a1, v4);
}

void **initializeWithCopy for UnstructuredImage.Asset(void **a1, void **a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = sub_1B2E806B8();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_1B2E80498();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  }
  else
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    id v8 = v7;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for UnstructuredImage.Asset(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1B2ABCA48((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v6 = sub_1B2E806B8();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_1B2E80498();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      uint64_t v7 = *a2;
      *a1 = *a2;
      id v8 = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for UnstructuredImage.Asset(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = sub_1B2E806B8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = sub_1B2E80498();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for UnstructuredImage.Asset(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B2ABCA48((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_1B2E806B8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = sub_1B2E80498();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B2ABD498()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1B2ABD4A8()
{
  uint64_t result = sub_1B2E80498();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1B2E806B8();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageMention()
{
  return &type metadata for ImageMention;
}

void *sub_1B2ABD58C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  if (!v6)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v7 = &v28;
  sub_1B2E832F8();
  uint64_t v10 = (uint64_t *)(a1 + 32);
  while (1)
  {
    uint64_t v12 = *v10++;
    uint64_t v11 = v12;
    uint64_t v25 = v12;
    LOBYTE(v27) = a4;
    uint64_t v13 = sub_1B2A839DC(&v25, (char *)&v27);
    if (!v5)
    {
      uint64_t v19 = v16;
      uint64_t v20 = v13;
      uint64_t v21 = v14;
      uint64_t v22 = v15;
      type metadata accessor for EntityResolutionRankingService.RankedEntities.ScoredEntity();
      uint64_t v23 = (void *)swift_allocObject();
      uint64_t v23[2] = v11;
      v23[3] = v19;
      v23[4] = v20;
      v23[5] = v21;
      v23[6] = v22;
      v23[7] = 1;
      goto LABEL_8;
    }
    id v27 = v5;
    id v17 = v5;
    sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_12;
    }
    if (v26 != 1) {
      break;
    }
    sub_1B29EB530();

    type metadata accessor for EntityResolutionRankingService.RankedEntities.ScoredEntity();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 56) = 1;
    *(void *)(v18 + 16) = v11;
    *(_OWORD *)(v18 + 24) = 0u;
    *(_OWORD *)(v18 + 40) = 0u;

    uint64_t v5 = 0;
LABEL_8:
    sub_1B2E832C8();
    sub_1B2E83308();
    sub_1B2E83318();
    uint64_t v7 = &v28;
    sub_1B2E832D8();
    if (!--v6)
    {
      uint64_t v7 = v28;
      goto LABEL_10;
    }
  }
  sub_1B29EB530();
LABEL_12:

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B2ABD784(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1B2E832F8();
    type metadata accessor for EntityResolutionRankingService.RankedEntities.ScoredEntity();
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      v4 += 2;
      uint64_t v7 = (void *)swift_allocObject();
      v7[2] = v5;
      v7[3] = v6;
      v7[6] = 0;
      v7[7] = 1;
      v7[4] = 0;
      v7[5] = 0;
      sub_1B2E832C8();
      sub_1B2E83308();
      sub_1B2E83318();
      sub_1B2E832D8();
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

__n128 EntityResolutionRankingService.RankingOptions.init(rankingType:typeFilter:candidateConstraints:mode:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  __n128 result = *(__n128 *)a3;
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a5 + 8) = *(_OWORD *)a3;
  uint64_t v7 = *a1;
  char v8 = *((unsigned char *)a1 + 8);
  __int16 v9 = *(_WORD *)(a3 + 32);
  char v10 = *(unsigned char *)(a3 + 34);
  uint64_t v11 = *a4;
  char v12 = *((unsigned char *)a4 + 8);
  *(void *)a5 = a2;
  *(_OWORD *)(a5 + 24) = v6;
  *(unsigned char *)(a5 + 42) = v10;
  *(_WORD *)(a5 + 40) = v9;
  *(void *)(a5 + 48) = v7;
  *(unsigned char *)(a5 + 56) = v8;
  *(void *)(a5 + 64) = v11;
  *(unsigned char *)(a5 + 72) = v12;
  return result;
}

uint64_t sub_1B2ABD8AC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1B2DCEF70(v2);
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1B2AC4860(v6);
  return sub_1B2E832D8();
}

uint64_t sub_1B2ABD928@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || 1 << *(unsigned char *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 36) != a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v4 = *(void *)(a3 + 48) + 40 * result;
  uint64_t v6 = *(void *)v4;
  uint64_t v5 = *(void *)(v4 + 8);
  uint64_t v7 = *(void *)(v4 + 16);
  uint64_t v8 = *(void *)(v4 + 24);
  LOBYTE(v4) = *(unsigned char *)(v4 + 32);
  *(void *)a4 = v6;
  *(void *)(a4 + 8) = v5;
  *(void *)(a4 + 16) = v7;
  *(void *)(a4 + 24) = v8;
  *(unsigned char *)(a4 + 32) = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2ABD9C4@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  if (result < 0 || 1 << *(unsigned char *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    *a4 = *(void *)(*(void *)(a3 + 48) + 8 * result);
    return result;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t EntityResolutionRankingService.RankedEntities.ScoredEntity.__allocating_init(id:score:explanation:inferenceEventId:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = *a1;
  *(double *)(result + 24) = a5;
  *(void *)(result + 32) = a2;
  *(void *)(result + 40) = a3;
  *(void *)(result + 48) = a4;
  *(void *)(result + 56) = 1;
  return result;
}

uint64_t sub_1B2ABDA88(uint64_t a1)
{
  v41[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v36 = OBJC_IVAR___GDSwiftViewService_databaseCache;
    id v37 = *(id *)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
    uint64_t v4 = v2 - 1;
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t *)(v33 + 40);
    *(void *)&long long v6 = 136315138;
    long long v35 = v6;
    uint64_t v34 = MEMORY[0x1E4FBC840] + 8;
    while (1)
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v8 = *v5;
      swift_bridgeObjectRetain();
      __int16 v9 = (void *)sub_1B2E82348();
      v41[0] = 0;
      id v10 = objc_msgSend(v37, sel_requestAssertionForViewName_error_, v9, v41);

      id v11 = v41[0];
      if (v10)
      {
        uint64_t v39 = v8;
        uint64_t v12 = v3;
        uint64_t v13 = *(void **)(v3 + v36);
        uint64_t v14 = v13[5];
        uint64_t v15 = v13[6];
        sub_1B29AEC7C(v13 + 2, v14);
        uint64_t v38 = *(void (**)(id, uint64_t, uint64_t))(v15 + 8);
        id v16 = v11;
        v38(v10, v14, v15);
        id v17 = v40;
        if (!v40)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v10;
        }
        swift_unknownObjectRelease();
        uint64_t v40 = 0;
        uint64_t v3 = v12;
        uint64_t v8 = v39;
      }
      else
      {
        id v18 = v41[0];
        id v17 = (void *)sub_1B2E80388();

        swift_willThrow();
        uint64_t v40 = 0;
      }
      if (qword_1EB7E5AE0 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1B2E81FB8();
      sub_1B29A4B98(v19, (uint64_t)qword_1EB7E5AC0);
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1B2E81F98();
      os_log_type_t v21 = sub_1B2E82DB8();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v23 = (void *)swift_slowAlloc();
        v41[0] = v23;
        *(_DWORD *)uint64_t v22 = v35;
        swift_bridgeObjectRetain();
        sub_1B29BF6BC(v7, v8, (uint64_t)v41, v24, v25, v26, v27, v28, v31, v32, v33, v34, v35, *((uint64_t *)&v35 + 1), v36, (uint64_t)v37, (uint64_t)v38, v39, v7,
          0);
        *(void *)(v22 + 4) = v29;
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B2996000, v20, v21, "EntityResolutionRanking: view assertion failure for %s", (uint8_t *)v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B3EB30C0](v23, -1, -1);
        MEMORY[0x1B3EB30C0](v22, -1, -1);

        if (!v4) {
          goto LABEL_14;
        }
      }
      else
      {

        swift_bridgeObjectRelease_n();
        if (!v4)
        {
LABEL_14:
          swift_bridgeObjectRelease();
          return swift_willThrow();
        }
      }
      v5 += 2;

      --v4;
    }
  }
  uint64_t result = sub_1B2E83418();
  __break(1u);
  return result;
}

void sub_1B2ABDE14()
{
  qword_1EB7E30A0 = (uint64_t)&unk_1F0ABE480;
}

uint64_t EntityResolutionRankingService.__allocating_init(config:viewService:)(uint64_t a1, void *a2)
{
  uint64_t v3 = swift_allocObject();
  EntityResolutionRankingService.init(config:viewService:)(v3, a2);
  return v3;
}

void *EntityResolutionRankingService.init(config:viewService:)(uint64_t a1, void *a2)
{
  if (qword_1EB7E30B0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1B2ABDA88(qword_1EB7E30A0);
  if (v3)
  {

    type metadata accessor for EntityResolutionRankingService();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v5;
    uint64_t v9 = v6;
    uint64_t v10 = v7;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v2[3] = sub_1B2A8368C(v8, v9, v10);
    v2[4] = v12;
    v2[5] = a2;
    v2[6] = a2;
    id v13 = objc_allocWithZone((Class)type metadata accessor for FeedbackService());
    id v14 = a2;
    id v15 = objc_msgSend(v13, sel_init);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v2[2] = v15;
  }
  return v2;
}

uint64_t sub_1B2ABDFB0()
{
  return sub_1B299D7F8((uint64_t)sub_1B2ABDFC4);
}

uint64_t sub_1B2ABDFC4()
{
  return sub_1B2E83418();
}

uint64_t sub_1B2ABE030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v7 = a1;
  uint64_t v9 = *(void *)a2;
  uint64_t v10 = *(void *)(a2 + 48);
  int v11 = *(unsigned __int8 *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 64);
  int v13 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a2 + 42) != 255)
  {
    uint64_t v33 = *(void *)(a2 + 64);
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1B2E81FB8();
    sub_1B29A4B98(v14, (uint64_t)qword_1EB7E5AC0);
    uint64_t v3 = sub_1B2E81F98();
    os_log_type_t v15 = sub_1B2E82DB8();
    if (os_log_type_enabled(v3, v15))
    {
      id v16 = a3;
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      id v18 = v17;
      a3 = v16;
      uint64_t v5 = v4;
      MEMORY[0x1B3EB30C0](v18, -1, -1);
    }

    uint64_t v12 = v33;
    uint64_t v7 = a1;
  }
  if (v11)
  {
    if (v11 == 1)
    {
      if (*(void *)(v10 + 16) != 1) {
        goto LABEL_40;
      }
      uint64_t v19 = sub_1B2AC5034(v10);
      if (v21)
      {
        __break(1u);
        goto LABEL_40;
      }
      if (*(_DWORD *)(v10 + 36) == v20)
      {
        if (v19 != 1 << *(unsigned char *)(v10 + 32))
        {
          sub_1B2ABD9C4(v19, v20, v10, &v35);
          uint64_t isa = (uint64_t)v6[5].isa;
          if (isa)
          {
            uint64_t result = sub_1B2D88430(MEMORY[0x1E4FBC870], &v35, isa);
            if (!v5)
            {
              uint64_t v24 = a3;
              uint64_t v25 = sub_1B2ABD784(result);
              uint64_t result = swift_bridgeObjectRelease();
              *uint64_t v24 = v25;
              v24[1] = 0;
            }
            return result;
          }
          sub_1B2ACA160();
          goto LABEL_42;
        }
LABEL_40:
        sub_1B2ACA160();
LABEL_42:
        sub_1B2E83418();
        __break(1u);
LABEL_43:
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      __break(1u);
      goto LABEL_38;
    }
    if (!v10)
    {
      if (v13) {
        uint64_t v30 = 0;
      }
      else {
        uint64_t v30 = v12;
      }
      LOBYTE(v35) = 1;
      uint64_t v31 = v9;
      char v32 = v13;
      goto LABEL_34;
    }
    char v26 = 2;
  }
  else
  {
    char v26 = v10 & 1;
  }
  uint64_t v27 = (uint64_t)v6[3].isa;
  uint64_t v28 = (uint64_t)v6[4].isa;
  if (v7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (uint64_t)sub_1B2ABD58C(v7, v27, v28, v26);
    uint64_t v3 = v5;
    if (v5) {
      return result;
    }
    if ((result & 0x8000000000000000) == 0 && (result & 0x4000000000000000) == 0)
    {
      uint64_t v29 = result & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      goto LABEL_24;
    }
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v29 = (uint64_t)sub_1B2A439C0();
    swift_bridgeObjectRelease();
LABEL_24:
    uint64_t v35 = v29;
    sub_1B2ABD8AC(&v35);
    if (!v3)
    {
      uint64_t result = swift_bridgeObjectRelease();
      *a3 = v35;
      a3[1] = 0;
      return result;
    }
    goto LABEL_43;
  }
  if (v13) {
    uint64_t v30 = 0;
  }
  else {
    uint64_t v30 = v12;
  }
  LOBYTE(v35) = v26;
  uint64_t v31 = v9;
  char v32 = v13;
LABEL_34:
  uint64_t result = sub_1B2A83D2C(v31, v30, v32, &v35);
  if (!v5)
  {
    *a3 = result;
    a3[1] = 0;
  }
  return result;
}

char *sub_1B2ABE3EC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  if (v3)
  {
    uint64_t v4 = *a2;
    uint64_t v7 = *a1;
    uint64_t v6 = v4;
    return sub_1B2D88FF4((char *)&v7, &v6, v3);
  }
  else
  {
    sub_1B2ACA160();
    uint64_t result = (char *)sub_1B2E83418();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B2ABE474(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_1B299D7F8((uint64_t)sub_1B2ABE48C);
}

uint64_t sub_1B2ABE48C()
{
  sub_1B29FD2A0();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2ABE510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return sub_1B299D7F8((uint64_t)sub_1B2ABE530);
}

uint64_t sub_1B2ABE530()
{
  if (*(void *)(v0[2] + 16))
  {
    type metadata accessor for EntityResolutionRankingDirectFeedback();
    swift_bridgeObjectRetain();
    uint64_t v1 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v2 = sub_1B299E698();
      if ((sub_1B2AC9CC8(v2) & 1) == 0)
      {
        sub_1B2AC9AE0();
        uint64_t v1 = v5;
      }
      sub_1B2AC9CA4();
      if (v3)
      {
        sub_1B299F5CC();
        uint64_t v1 = v6;
      }
      sub_1B2AC9BB4();
    }
    while (!v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  if (*(void *)(v0[3] + 16))
  {
    type metadata accessor for EntityResolutionRankingDirectFeedback();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v7 = sub_1B299E698();
      if ((sub_1B2AC9CC8(v7) & 1) == 0)
      {
        sub_1B2AC9AE0();
        uint64_t v1 = v8;
      }
      sub_1B2AC9CA4();
      if (v3)
      {
        sub_1B299F5CC();
        uint64_t v1 = v9;
      }
      sub_1B2AC9BB4();
    }
    while (!v4);
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0[4] + 16))
  {
    type metadata accessor for EntityResolutionRankingDirectFeedback();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v10 = sub_1B299E698();
      if ((sub_1B2AC9CC8(v10) & 1) == 0)
      {
        sub_1B2AC9AE0();
        uint64_t v1 = v11;
      }
      sub_1B2AC9CA4();
      if (v3)
      {
        sub_1B299F5CC();
        uint64_t v1 = v12;
      }
      sub_1B2AC9BB4();
    }
    while (!v4);
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0[5] + 16))
  {
    type metadata accessor for EntityResolutionRankingDirectFeedback();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v13 = sub_1B299E698();
      if ((sub_1B2AC9CC8(v13) & 1) == 0)
      {
        sub_1B2AC9AE0();
        uint64_t v1 = v14;
      }
      sub_1B2AC9CA4();
      if (v3)
      {
        sub_1B299F5CC();
        uint64_t v1 = v15;
      }
      sub_1B2AC9BB4();
    }
    while (!v4);
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = *(void *)(v1 + 16);
  if (v16)
  {
    uint64_t v17 = v1 + 40;
    do
    {
      swift_retain();
      sub_1B29FD520();
      swift_release();
      v17 += 16;
      --v16;
    }
    while (v16);
  }
  swift_bridgeObjectRelease();
  sub_1B299AD7C();
  return v18();
}

uint64_t EntityResolutionRankingDirectFeedback.__allocating_init(kind:)(unsigned char *a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = *a1;
  return result;
}

id *EntityResolutionRankingService.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t EntityResolutionRankingService.__deallocating_deinit()
{
  EntityResolutionRankingService.deinit();
  sub_1B2AC9D1C();

  return swift_deallocClassInstance();
}

uint64_t EntityResolutionRankingService.UnresolvedMentions.entityCandidates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static EntityResolutionRankingService.CandidateConstraint.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v438 = *(void *)(a1 + 8);
  uint64_t v435 = *(void *)(a1 + 16);
  uint64_t v436 = *(void *)(a1 + 24);
  unsigned int v437 = *(unsigned __int16 *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 34);
  uint64_t v5 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 32);
  uint64_t v9 = *(unsigned __int8 *)(a2 + 34);
  switch(v3)
  {
    case 1:
      if (v9 != 1) {
        goto LABEL_19;
      }
      int v15 = sub_1B2AC9C78();
      uint64_t v16 = sub_1B2AC9D88(v15);
      sub_1B2ABB8B0(v16, v17, v18, v19, v20, 1);
      uint64_t v21 = sub_1B2AC9C34();
      sub_1B2ABB8B0(v21, v22, v23, v24, v25, 1);
      uint64_t v26 = sub_1B299AE1C();
      sub_1B2ABB9CC(v26, v27, v28, v29, v30, 1);
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v8;
      uint64_t v35 = v9;
      char v36 = 1;
      goto LABEL_12;
    case 2:
      if (v9 != 2) {
        goto LABEL_19;
      }
      int v37 = sub_1B2AC9C78();
      uint64_t v38 = sub_1B2AC9D88(v37);
      sub_1B2ABB8B0(v38, v39, v40, v41, v42, 2);
      uint64_t v43 = sub_1B2AC9C34();
      sub_1B2ABB8B0(v43, v44, v45, v46, v47, 2);
      uint64_t v48 = sub_1B299AE1C();
      sub_1B2ABB9CC(v48, v49, v50, v51, v52, 2);
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v8;
      uint64_t v35 = v9;
      char v36 = 2;
LABEL_12:
      sub_1B2ABB9CC(v31, v32, v33, v34, v35, v36);
      return v433 & 1;
    case 3:
      if (v9 != 3) {
        goto LABEL_19;
      }
      uint64_t v54 = *(void *)(v2 + 24);
      uint64_t v55 = *(void *)(v2 + 32);
      uint64_t v414 = *(void *)(v2 + 40);
      uint64_t v56 = *(void *)(v2 + 56);
      uint64_t v276 = *(void *)(v2 + 64);
      uint64_t v352 = *(void *)(v2 + 80);
      uint64_t v362 = *(void *)(v2 + 72);
      unsigned int v425 = *(unsigned __int16 *)(v2 + 48);
      LODWORD(v427) = *(unsigned __int16 *)(v2 + 88);
      HIDWORD(v431) = *(unsigned __int8 *)(v2 + 90);
      uint64_t v57 = *(void *)(v5 + 24);
      uint64_t v398 = *(void *)(v5 + 16);
      uint64_t v58 = *(void *)(v5 + 40);
      uint64_t v372 = *(void *)(v5 + 32);
      unsigned __int16 v59 = *(_WORD *)(v5 + 48);
      unsigned int v382 = v59;
      char v392 = *(unsigned char *)(v2 + 50);
      char v60 = *(unsigned char *)(v5 + 50);
      uint64_t v285 = *(void *)(v5 + 64);
      uint64_t v324 = *(void *)(v5 + 56);
      uint64_t v334 = *(void *)(v5 + 72);
      uint64_t v314 = *(void *)(v5 + 80);
      HIDWORD(v295) = *(unsigned __int8 *)(v5 + 90);
      LODWORD(v304) = *(unsigned __int16 *)(v5 + 88);
      uint64_t v445 = *(void *)(v2 + 16);
      uint64_t v408 = v445;
      uint64_t v446 = v54;
      uint64_t v447 = v55;
      uint64_t v448 = v414;
      __int16 v449 = v425;
      char v450 = v392;
      uint64_t v439 = v398;
      uint64_t v440 = v57;
      uint64_t v441 = v372;
      uint64_t v442 = v58;
      unsigned __int16 v443 = v59;
      char v444 = v60;
      uint64_t v61 = sub_1B2AC9C0C(v4);
      sub_1B2ABB8B0(v61, v62, v63, v64, v65, 3);
      uint64_t v66 = sub_1B2ABB118();
      sub_1B2ABB8B0(v66, v67, v68, v69, v70, 3);
      uint64_t v265 = v55;
      uint64_t v71 = v276;
      sub_1B2ABB8B0(v445, v54, v55, v414, v425, v392);
      sub_1B2ABB8B0(v398, v57, v372, v58, v382, v60);
      uint64_t v72 = sub_1B2ABB42C();
      sub_1B2ABB8B0(v72, v73, v74, v75, v427, SBYTE4(v431));
      sub_1B2ABB8B0(v324, v285, v334, v314, v304, SBYTE4(v295));
      if (static EntityResolutionRankingService.CandidateConstraint.== infix(_:_:)(&v445, &v439))
      {
        uint64_t v445 = v56;
        uint64_t v446 = v276;
        uint64_t v447 = v362;
        uint64_t v448 = v352;
        __int16 v449 = v427;
        char v450 = BYTE4(v431);
        uint64_t v439 = v324;
        uint64_t v440 = v285;
        uint64_t v441 = v334;
        uint64_t v442 = v314;
        uint64_t v76 = sub_1B2ACA268();
        uint64_t v77 = v324;
        char v14 = v76;
        uint64_t v85 = sub_1B2ACA024(v76, v78, v79, v80, v81, v82, v83, v84, v222, v231, v60, v58, v57, v54, v265, v276, v285, v295, v304,
                v314,
                v324,
                v334,
                v56,
                v352,
                v362,
                v372,
                v382,
                v398);
        sub_1B2ACA288(v85, v86, v87, v88, v89, v90, v91, v92, v223, v232, v240, v248, v256, v266, v277, v286, v296, v305, v315,
          v325,
          v335,
          v344,
          v353,
          v363,
          v373,
          v383,
          v393,
          v399,
          v408,
          v414,
          v420,
          v425);
        sub_1B2ACA06C(v77);
        uint64_t v93 = sub_1B2ABB9CC(v345, v71, v364, v354, v427, SBYTE4(v431));
        sub_1B2AC9F70(v93, v94, v95, v96, v97, v98, v99, v100, v224, v233, v241, v249, v257, v267, v278, v287, v297, v306, v316,
          v326,
          v336,
          v345,
          v354,
          v364,
          v374,
          v384,
          v400,
          v409,
          v415,
          v421,
          v427,
          v431,
          v432);
        uint64_t v101 = sub_1B2AC9E94();
        goto LABEL_25;
      }
      sub_1B2ACA06C(v324);
      uint64_t v172 = sub_1B2ABB9CC(v56, v276, v362, v352, v427, SBYTE4(v431));
      uint64_t v180 = sub_1B2ACA024(v172, v173, v174, v175, v176, v177, v178, v179, v222, v231, v60, v58, v57, v54, v55, v276, v285, v295, v304,
               v314,
               v324,
               v334,
               v56,
               v352,
               v362,
               v372,
               v382,
               v398);
      uint64_t v188 = sub_1B2ACA288(v180, v181, v182, v183, v184, v185, v186, v187, v227, v236, v244, v252, v261, v271, v281, v291, v300, v310, v320,
               v330,
               v339,
               v348,
               v358,
               v368,
               v378,
               v388,
               v396,
               v404,
               v408,
               v414,
               v420,
               v425);
      sub_1B2AC9F70(v188, v189, v190, v191, v192, v193, v194, v195, v228, v237, v245, v253, v262, v272, v282, v292, v301, v311, v321,
        v331,
        v340,
        v349,
        v359,
        v369,
        v379,
        v389,
        v405,
        v412,
        v418,
        v423,
        v427,
        v431,
        v432);
      uint64_t v166 = sub_1B2AC9E94();
      goto LABEL_20;
    case 4:
      if (v9 != 4) {
        goto LABEL_19;
      }
      uint64_t v410 = *(void *)(v2 + 24);
      uint64_t v416 = *(void *)(v2 + 32);
      uint64_t v428 = *(void *)(v2 + 40);
      unsigned __int16 v107 = *(_WORD *)(v2 + 48);
      unsigned int v426 = v107;
      uint64_t v108 = *(void *)(v2 + 56);
      uint64_t v268 = *(void *)(v2 + 64);
      uint64_t v355 = *(void *)(v2 + 80);
      uint64_t v365 = *(void *)(v2 + 72);
      uint64_t v109 = *(unsigned __int16 *)(v2 + 88);
      HIDWORD(v431) = *(unsigned __int8 *)(v2 + 90);
      uint64_t v110 = *(void *)(v5 + 24);
      uint64_t v401 = *(void *)(v5 + 16);
      uint64_t v111 = *(void *)(v5 + 32);
      uint64_t v375 = *(void *)(v5 + 40);
      unsigned __int16 v112 = *(_WORD *)(v5 + 48);
      unsigned int v385 = v112;
      char v394 = *(unsigned char *)(v2 + 50);
      char v113 = *(unsigned char *)(v5 + 50);
      uint64_t v288 = *(void *)(v5 + 64);
      uint64_t v327 = *(void *)(v5 + 72);
      uint64_t v307 = *(void *)(v5 + 56);
      uint64_t v317 = *(void *)(v5 + 80);
      HIDWORD(v295) = *(unsigned __int16 *)(v5 + 88);
      LODWORD(v275) = *(unsigned __int8 *)(v5 + 90);
      uint64_t v445 = *(void *)(v2 + 16);
      uint64_t v446 = v410;
      uint64_t v447 = v416;
      uint64_t v448 = v428;
      __int16 v449 = v107;
      char v450 = v394;
      uint64_t v439 = v401;
      uint64_t v440 = v110;
      uint64_t v441 = v111;
      uint64_t v442 = v375;
      unsigned __int16 v443 = v112;
      char v444 = v113;
      uint64_t v114 = sub_1B2AC9C0C(v4);
      sub_1B2ABB8B0(v114, v115, v116, v117, v118, 4);
      uint64_t v119 = sub_1B2ABB118();
      sub_1B2ABB8B0(v119, v120, v121, v122, v123, 4);
      uint64_t v258 = v445;
      uint64_t v124 = v268;
      sub_1B2ABB8B0(v445, v410, v416, v428, v426, v394);
      sub_1B2ABB8B0(v401, v110, v111, v375, v385, v113);
      uint64_t v125 = sub_1B2ABB42C();
      LODWORD(v343) = v109;
      uint64_t v126 = v109;
      uint64_t v127 = v307;
      sub_1B2ABB8B0(v125, v128, v129, v130, v126, SBYTE4(v431));
      sub_1B2ABB8B0(v307, v288, v327, v317, HIDWORD(v295), v275);
      if (static EntityResolutionRankingService.CandidateConstraint.== infix(_:_:)(&v445, &v439))
      {
        uint64_t v445 = v108;
        uint64_t v446 = v268;
        uint64_t v447 = v365;
        uint64_t v448 = v355;
        __int16 v449 = v343;
        char v450 = BYTE4(v431);
        uint64_t v439 = v307;
        uint64_t v440 = v288;
        uint64_t v441 = v327;
        uint64_t v442 = v317;
        uint64_t v131 = sub_1B2ACA268();
        uint64_t v132 = v288;
        char v14 = v131;
        uint64_t v140 = sub_1B2ACA048(v131, v133, v134, v135, v136, v137, v138, v139, v222, v231, v113, v111, v110, v258, v268, v275, v288, v295, v307,
                 v317,
                 v327,
                 v108,
                 v343,
                 v355,
                 v365,
                 v375,
                 v385,
                 v401);
        sub_1B2AC9EAC(v140, v141, v142, v143, v144, v145, v146, v147, v225, v234, v242, v250, v259, v269, v279, v289, v298, v308, v318,
          v328,
          v337,
          v346,
          v356,
          v366,
          v376,
          v386,
          v395,
          v402,
          v410,
          v416,
          v420,
          v426,
          v428);
        sub_1B2ACA1C8(v127, v132);
        uint64_t v148 = sub_1B2ABB9CC(v338, v124, v367, v357, v347, SBYTE4(v431));
        sub_1B2AC9F4C(v148, v149, v150, v151, v152, v153, v154, v155, v226, v235, v243, v251, v260, v270, v280, v290, v299, v309, v319,
          v329,
          v338,
          v347,
          v357,
          v367,
          v377,
          v387,
          v403,
          v411,
          v417,
          v422,
          v429,
          v431,
          v432);
        uint64_t v101 = sub_1B2AC9E7C();
        goto LABEL_25;
      }
      sub_1B2ACA1C8(v307, v288);
      uint64_t v196 = sub_1B2ABB9CC(v108, v268, v365, v355, v343, SBYTE4(v431));
      uint64_t v204 = sub_1B2ACA048(v196, v197, v198, v199, v200, v201, v202, v203, v222, v231, v113, v111, v110, v258, v268, v275, v288, v295, v307,
               v317,
               v327,
               v108,
               v343,
               v355,
               v365,
               v375,
               v385,
               v401);
      uint64_t v212 = sub_1B2AC9EAC(v204, v205, v206, v207, v208, v209, v210, v211, v229, v238, v246, v254, v263, v273, v283, v293, v302, v312, v322,
               v332,
               v341,
               v350,
               v360,
               v370,
               v380,
               v390,
               v397,
               v406,
               v410,
               v416,
               v420,
               v426,
               v428);
      sub_1B2AC9F4C(v212, v213, v214, v215, v216, v217, v218, v219, v230, v239, v247, v255, v264, v274, v284, v294, v303, v313, v323,
        v333,
        v342,
        v351,
        v361,
        v371,
        v381,
        v391,
        v407,
        v413,
        v419,
        v424,
        v430,
        v431,
        v432);
      uint64_t v166 = sub_1B2AC9E7C();
      goto LABEL_20;
    default:
      if (*(unsigned char *)(a2 + 34))
      {
LABEL_19:
        uint64_t v434 = *(void *)(a2 + 8);
        sub_1B2ABB8B0(*(void *)a2, v434, v7, v6, v8, v9);
        uint64_t v156 = sub_1B2ABB254();
        sub_1B2ABB8B0(v156, v157, v158, v159, v160, v3);
        uint64_t v161 = sub_1B2ABB254();
        sub_1B2ABB9CC(v161, v162, v163, v164, v165, v3);
        uint64_t v166 = v5;
        uint64_t v167 = v434;
        uint64_t v168 = v7;
        uint64_t v169 = v6;
        uint64_t v170 = v8;
        char v171 = v9;
LABEL_20:
        sub_1B2ABB9CC(v166, v167, v168, v169, v170, v171);
        char v14 = 0;
      }
      else
      {
        if (v2 == v5 && v438 == v4)
        {
          char v14 = 1;
          uint64_t v12 = *(void *)a1;
        }
        else
        {
          uint64_t v11 = *(void *)(a2 + 8);
          uint64_t v12 = *(void *)a1;
          char v13 = sub_1B2E837A8();
          uint64_t v4 = v11;
          char v14 = v13;
        }
        uint64_t v220 = v6;
        uint64_t v221 = v4;
        sub_1B2ABB8B0(v5, v4, v7, v220, v8, 0);
        sub_1B2ABB8B0(v12, v438, v435, v436, v437, 0);
        sub_1B2ABB9CC(v12, v438, v435, v436, v437, 0);
        uint64_t v101 = v5;
        uint64_t v102 = v221;
        uint64_t v103 = v7;
        uint64_t v104 = v220;
        uint64_t v105 = v8;
        char v106 = 0;
LABEL_25:
        sub_1B2ABB9CC(v101, v102, v103, v104, v105, v106);
      }
      return v14 & 1;
  }
}

void EntityResolutionRankingService.CandidateConstraint.hash(into:)(uint64_t a1)
{
  switch(*(unsigned char *)(v1 + 34))
  {
    case 1:
    case 2:
      sub_1B2E83998();
      sub_1B2A19B38();
      sub_1B2AB4ABC();
      break;
    case 3:
    case 4:
      sub_1B29A4368();
      sub_1B2E83998();
      sub_1B2ABB8B0(v7, v8, v6, v3, v5, v4);
      sub_1B2ABB8B0(v16, v15, v14, v13, v12, v2);
      EntityResolutionRankingService.CandidateConstraint.hash(into:)(a1);
      EntityResolutionRankingService.CandidateConstraint.hash(into:)(a1);
      sub_1B2ABB9CC(v7, v8, v6, v3, v5, v4);
      sub_1B2ABB9CC(v16, v15, v14, v13, v12, v2);
      sub_1B2A19B38();
      break;
    default:
      sub_1B2E83998();
      swift_bridgeObjectRetain();
      sub_1B2E82498();
      sub_1B2A19B38();
      swift_bridgeObjectRelease();
      break;
  }
}

uint64_t sub_1B2ABF0E0(char a1)
{
  uint64_t result = 0x6964657250736168;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6564756C637865;
      break;
    case 2:
      uint64_t result = 0x746573627573;
      break;
    case 3:
      uint64_t result = 6581857;
      break;
    case 4:
      uint64_t result = 29295;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2ABF180(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1B2A0F6F4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_1B2A0F6F4();
    sub_1B299B414();
    if (a1) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2ABF230(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    sub_1B2A0F6F4();
    sub_1B299B414();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2ABF2AC(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC51D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2ABF2E8(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC51D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2ABF324()
{
  return sub_1B2ABF0E0(*v0);
}

uint64_t sub_1B2ABF32C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC50F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2ABF368(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC50F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2ABF3A4(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC526C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2ABF3E0(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC526C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2ABF41C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC52B8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2ABF458(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC52B8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2ABF494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2ABF180(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2ABF4BC(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC513C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2ABF4F8(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC513C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2ABF534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2ABF230(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2ABF560(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5220();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2ABF59C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5220();

  return MEMORY[0x1F41862B0](a1, v2);
}

void EntityResolutionRankingService.CandidateConstraint.encode(to:)()
{
  sub_1B299F300();
  char v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3CBC0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B2AC9DC0(v6, v50);
  sub_1B29A3EB4(&qword_1E9C3CBC8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3CBD0);
  sub_1B299D278();
  char v60 = v9;
  uint64_t v61 = v8;
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  unsigned int v59 = v10;
  sub_1B29A3EB4(&qword_1E9C3CBD8);
  sub_1B299D278();
  uint64_t v55 = v12;
  uint64_t v57 = v11;
  MEMORY[0x1F4188790](v11);
  sub_1B299F280();
  uint64_t v13 = sub_1B29A3EB4(&qword_1E9C3CBE0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v14);
  sub_1B299B0C8();
  sub_1B29A3EB4(&qword_1E9C3CBE8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v15);
  sub_1B299B6D0();
  uint64_t v16 = *v0;
  uint64_t v17 = *((unsigned __int8 *)v0 + 34);
  sub_1B29AEC7C(v4, v4[3]);
  sub_1B2AC50F0();
  sub_1B2E83A38();
  switch(v17)
  {
    case 1:
      sub_1B2AC526C();
      sub_1B2AC9D58();
      sub_1B29A3EB4(&qword_1E9C38970);
      sub_1B2AC53A8((uint64_t)&qword_1E9C3C710);
      uint64_t v21 = v57;
      sub_1B2E836D8();
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
      uint64_t v18 = v2;
      goto LABEL_5;
    case 2:
      sub_1B2AC5220();
      sub_1B2AC9D58();
      sub_1B29A3EB4(&qword_1E9C38970);
      sub_1B2AC53A8((uint64_t)&qword_1E9C3C710);
      uint64_t v21 = v61;
      sub_1B2E836D8();
      uint64_t v18 = sub_1B2AC9FB0();
LABEL_5:
      uint64_t v20 = v21;
      goto LABEL_6;
    case 3:
      uint64_t v62 = *(void *)(v16 + 16);
      uint64_t v23 = *(void *)(v16 + 40);
      uint64_t v66 = *(void *)(v16 + 24);
      uint64_t v67 = *(void *)(v16 + 32);
      uint64_t v24 = *(unsigned __int16 *)(v16 + 48);
      char v25 = *(unsigned char *)(v16 + 50);
      uint64_t v26 = *(void *)(v16 + 64);
      uint64_t v68 = *(void *)(v16 + 56);
      uint64_t v28 = *(void *)(v16 + 72);
      uint64_t v27 = *(void *)(v16 + 80);
      sub_1B2ABB8B0(v62, v66, v67, v23, v24, v25);
      uint64_t v54 = v26;
      uint64_t v56 = v28;
      uint64_t v58 = v27;
      sub_1B2ACA1E8(v68, v26, v28, v27);
      sub_1B2AC51D4();
      sub_1B2E83618();
      uint64_t v51 = v23;
      unsigned int v52 = v24;
      char v53 = v25;
      sub_1B2AC5188();
      sub_1B2ABB49C();
      sub_1B2E836D8();
      if (v1)
      {
        sub_1B2ACA1A8(v68);
        sub_1B299B798();
        v29();
        sub_1B299B798();
        v30();
        uint64_t v31 = v62;
        uint64_t v32 = v66;
        uint64_t v33 = v67;
        goto LABEL_11;
      }
      sub_1B2ABACD8();
      sub_1B2ABB49C();
      sub_1B2E836D8();
      sub_1B2AC9FD4(v62, v66, v67);
      sub_1B299B798();
      v46();
      sub_1B2ACA250();
      sub_1B299B798();
      v47();
      uint64_t v31 = v68;
      goto LABEL_14;
    case 4:
      uint64_t v63 = *(void *)(v16 + 16);
      uint64_t v64 = *(void *)(v16 + 24);
      uint64_t v34 = *(void *)(v16 + 40);
      uint64_t v35 = *(unsigned __int16 *)(v16 + 48);
      char v36 = *(unsigned char *)(v16 + 50);
      uint64_t v37 = *(void *)(v16 + 64);
      uint64_t v65 = *(void *)(v16 + 56);
      uint64_t v39 = *(void *)(v16 + 72);
      uint64_t v38 = *(void *)(v16 + 80);
      uint64_t v40 = *(void *)(v16 + 32);
      sub_1B2ABB8B0(v63, v64, v40, v34, v35, v36);
      uint64_t v54 = v37;
      uint64_t v56 = v39;
      uint64_t v58 = v38;
      sub_1B2ACA1E8(v65, v37, v39, v38);
      sub_1B2AC513C();
      sub_1B2E83618();
      uint64_t v51 = v34;
      unsigned int v52 = v35;
      char v53 = v36;
      sub_1B2AC5188();
      sub_1B2ABB49C();
      sub_1B2E836D8();
      if (v1)
      {
        sub_1B2ACA1A8(v65);
        sub_1B299B798();
        v41();
        sub_1B299B798();
        v42();
        uint64_t v31 = v63;
        uint64_t v32 = v64;
        uint64_t v33 = v40;
LABEL_11:
        uint64_t v43 = v51;
        uint64_t v44 = v52;
        char v45 = v53;
      }
      else
      {
        sub_1B2ABACD8();
        sub_1B2ABB49C();
        sub_1B2E836D8();
        sub_1B2AC9FD4(v63, v64, v40);
        sub_1B299B798();
        v48();
        sub_1B299B798();
        v49();
        uint64_t v31 = v65;
LABEL_14:
        uint64_t v32 = v54;
        uint64_t v33 = v56;
        uint64_t v43 = v58;
        uint64_t v44 = v59;
        char v45 = v60;
      }
      sub_1B2ABB9CC(v31, v32, v33, v43, v44, v45);
LABEL_16:
      sub_1B29998C8();
      return;
    default:
      sub_1B2AC52B8();
      sub_1B2AC9D58();
      sub_1B2A7D6D8();
      sub_1B2E836D8();
      uint64_t v18 = sub_1B2ACA250();
      uint64_t v20 = v13;
LABEL_6:
      v19(v18, v20);
      sub_1B299B798();
      v22();
      goto LABEL_16;
  }
}

uint64_t EntityResolutionRankingService.CandidateConstraint.hashValue.getter()
{
  __int16 v1 = *((_WORD *)v0 + 16);
  char v2 = *((unsigned char *)v0 + 34);
  long long v3 = v0[1];
  long long v6 = *v0;
  long long v7 = v3;
  __int16 v8 = v1;
  char v9 = v2;
  sub_1B29B1A78();
  EntityResolutionRankingService.CandidateConstraint.hash(into:)((uint64_t)v5);
  return sub_1B2E839E8();
}

void EntityResolutionRankingService.CandidateConstraint.init(from:)()
{
  sub_1B299F300();
  long long v3 = v2;
  uint64_t v49 = v4;
  sub_1B29A3EB4(&qword_1E9C3CC28);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29B1CCC(v6, v46);
  sub_1B29A3EB4(&qword_1E9C3CC30);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B2AC9DF8(v8, v47);
  sub_1B29A3EB4(&qword_1E9C3CC38);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B2AC9E30(v10, v48);
  sub_1B29A3EB4(&qword_1E9C3CC40);
  sub_1B299D278();
  MEMORY[0x1F4188790](v11);
  sub_1B29A0658();
  sub_1B29A3EB4(&qword_1E9C3CC48);
  sub_1B299D278();
  MEMORY[0x1F4188790](v12);
  sub_1B29A0480();
  unint64_t v13 = sub_1B29A3EB4(&qword_1E9C3CC50);
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B2999928();
  uint64_t v17 = v3[4];
  uint64_t v50 = v3;
  sub_1B2ACA16C(v3);
  sub_1B2AC50F0();
  sub_1B2E83A18();
  if (v1) {
    goto LABEL_13;
  }
  uint64_t v56 = v15;
  uint64_t v18 = sub_1B2E835F8();
  if (!*(void *)(v18 + 16))
  {
    uint64_t v21 = v0;
LABEL_8:
    sub_1B2E83288();
    swift_allocError();
    uint64_t v23 = v22;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v23 = &type metadata for EntityResolutionRankingService.CandidateConstraint;
    sub_1B2E834F8();
    sub_1B2AC9B6C();
    sub_1B299B1AC();
    uint64_t v24 = sub_1B2AC9CB4();
    v25(v24);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, unint64_t))(v56 + 8))(v21, v13);
LABEL_13:
    uint64_t v26 = (uint64_t)v50;
    goto LABEL_14;
  }
  uint64_t v19 = v0;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 32);
  sub_1B29B142C(1);
  sub_1B2ACA208();
  if (v17 != v13 >> 1)
  {
    uint64_t v21 = v19;
    goto LABEL_8;
  }
  switch(v20)
  {
    case 1:
      LOBYTE(v51) = 1;
      sub_1B2AC526C();
      sub_1B29A1950();
      sub_1B29A3EB4(&qword_1E9C38970);
      sub_1B2AC53A8((uint64_t)&qword_1E9C3C760);
      sub_1B2ACA0C8();
      sub_1B2E835B8();
      sub_1B299B798();
      v37(v36);
      swift_unknownObjectRelease();
      sub_1B2ACA014();
      goto LABEL_15;
    case 2:
      LOBYTE(v51) = 2;
      sub_1B2AC5220();
      sub_1B29A1950();
      sub_1B29A3EB4(&qword_1E9C38970);
      sub_1B2AC53A8((uint64_t)&qword_1E9C3C760);
      sub_1B2E835B8();
      sub_1B299B798();
      v39(v38);
      swift_unknownObjectRelease();
LABEL_15:
      sub_1B299B798();
      v41(v40);
      sub_1B2ABB488();
      uint64_t v32 = v51;
      break;
    case 3:
      sub_1B2AC51D4();
      sub_1B29A1950();
      uint64_t v32 = swift_allocObject();
      sub_1B2AC535C();
      sub_1B2AC9B04();
      sub_1B2AC9B04();
      goto LABEL_16;
    case 4:
      sub_1B2AC513C();
      sub_1B29A1950();
      uint64_t v32 = swift_allocObject();
      sub_1B2AC535C();
      sub_1B2AC9B04();
      sub_1B2AC9B04();
LABEL_16:
      sub_1B299B798();
      v43(v42);
      swift_unknownObjectRelease();
      uint64_t v44 = sub_1B2AC9F10();
      v45(v44);
      sub_1B2ABB488();
      break;
    default:
      LOBYTE(v51) = 0;
      sub_1B2AC52B8();
      sub_1B29A1950();
      sub_1B2A7D640();
      sub_1B2E835B8();
      sub_1B299B798();
      v28(v27);
      swift_unknownObjectRelease();
      sub_1B2ACA014();
      sub_1B299B798();
      v30(v29);
      uint64_t v32 = v51;
      uint64_t v31 = v52;
      uint64_t v33 = v53;
      uint64_t v34 = v54;
      __int16 v35 = v55;
      break;
  }
  uint64_t v26 = (uint64_t)v3;
  *(void *)uint64_t v49 = v32;
  *(void *)(v49 + 8) = v31;
  *(void *)(v49 + 16) = v33;
  *(void *)(v49 + 24) = v34;
  *(_WORD *)(v49 + 32) = v35;
  *(unsigned char *)(v49 + 34) = v20;
LABEL_14:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v26);
  sub_1B29998C8();
}

void sub_1B2AC06C8()
{
}

void sub_1B2AC06E0()
{
}

uint64_t sub_1B2AC0700()
{
  __int16 v1 = *((_WORD *)v0 + 16);
  char v2 = *((unsigned char *)v0 + 34);
  long long v3 = v0[1];
  long long v6 = *v0;
  long long v7 = v3;
  __int16 v8 = v1;
  char v9 = v2;
  sub_1B2E83988();
  EntityResolutionRankingService.CandidateConstraint.hash(into:)((uint64_t)v5);
  return sub_1B2E839E8();
}

uint64_t EntityResolutionRankingService.MentionedEntities.MentionedRankedEntities.init(mention:entities:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t result = type metadata accessor for EntityResolutionRankingService.MentionedEntities.MentionedRankedEntities();
  __int16 v8 = (void *)(a4 + *(int *)(result + 28));
  *__int16 v8 = v5;
  v8[1] = v6;
  return result;
}

uint64_t _s20IntelligencePlatform30EntityResolutionRankingServiceC18UnresolvedMentionsV7mentionxvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t EntityResolutionRankingService.MentionedEntities.MentionedRankedEntities.entities.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v3 = (uint64_t *)(v2 + *(int *)(a1 + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t EntityResolutionRankingService.MentionedEntities.init(mentions:inferenceEventId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t EntityResolutionRankingService.MentionedEntities.inferenceEventId.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t EntityResolutionRankingService.RankingOptions.typeFilter.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *__int16 v1 = a1;
  return result;
}

uint64_t (*EntityResolutionRankingService.RankingOptions.typeFilter.modify())(void)
{
  return nullsub_1;
}

uint64_t EntityResolutionRankingService.RankingOptions.candidateConstraints.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  int v6 = *(unsigned __int8 *)(v1 + 42);
  int v7 = *(unsigned __int16 *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 34) = v6;
  *(_WORD *)(a1 + 32) = v7;
  return sub_1B2ABB89C(v2, v3, v4, v5, v7 | (v6 << 16));
}

__n128 EntityResolutionRankingService.RankingOptions.candidateConstraints.setter(__n128 *a1)
{
  __n128 v9 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int16 v4 = a1[2].n128_u16[0];
  unsigned __int8 v5 = a1[2].n128_u8[2];
  int v7 = *(unsigned __int16 *)(v1 + 40);
  uint64_t v6 = v1 + 40;
  sub_1B2ABB9B8(*(void *)(v6 - 32), *(void *)(v6 - 24), *(void *)(v6 - 16), *(void *)(v6 - 8), v7 | (*(unsigned __int8 *)(v6 + 2) << 16));
  __n128 result = v9;
  *(__n128 *)(v6 - 32) = v9;
  *(void *)(v6 - 16) = v2;
  *(void *)(v6 - 8) = v3;
  *(unsigned char *)(v6 + 2) = v5;
  *(_WORD *)uint64_t v6 = v4;
  return result;
}

uint64_t (*EntityResolutionRankingService.RankingOptions.candidateConstraints.modify())(void)
{
  return nullsub_1;
}

uint64_t EntityResolutionRankingService.RankingOptions.rankingType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  char v3 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 8) = v3;
  return sub_1B2AC542C(v2, v3);
}

uint64_t EntityResolutionRankingService.RankingOptions.rankingType.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t result = sub_1B2AC5440(*(void *)(v1 + 48), *(unsigned char *)(v1 + 56));
  *(void *)(v1 + 48) = v2;
  *(unsigned char *)(v1 + 56) = v3;
  return result;
}

uint64_t (*EntityResolutionRankingService.RankingOptions.rankingType.modify())(void)
{
  return nullsub_1;
}

void EntityResolutionRankingService.RankingOptions.mode.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 72);
  *(void *)a1 = *(void *)(v1 + 64);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t EntityResolutionRankingService.RankingOptions.mode.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 64) = *(void *)result;
  *(unsigned char *)(v1 + 72) = v2;
  return result;
}

uint64_t (*EntityResolutionRankingService.RankingOptions.mode.modify())(void)
{
  return nullsub_1;
}

BOOL static EntityResolutionRankingService.RankingFilter.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t EntityResolutionRankingService.RankingFilter.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t EntityResolutionRankingService.RankingFilter.hashValue.getter()
{
  return sub_1B2E839E8();
}

IntelligencePlatform::EntityResolutionRankingService::EntityResolutionMode_optional __swiftcall EntityResolutionRankingService.EntityResolutionMode.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

void *static EntityResolutionRankingService.EntityResolutionMode.allCases.getter()
{
  return &unk_1F0ABE3D8;
}

uint64_t EntityResolutionRankingService.EntityResolutionMode.rawValue.getter()
{
  uint64_t result = 0x6E6574614C776F6CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6465636E616C6162;
      break;
    case 2:
      uint64_t result = 0x6C61755168676968;
      break;
    case 3:
      uint64_t result = 0x6553786966657270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2AC0B90()
{
  return sub_1B29ABBC4();
}

uint64_t sub_1B2AC0B9C()
{
  return sub_1B29AE9D0(*v0);
}

uint64_t sub_1B2AC0BA4()
{
  return sub_1B2AA5100();
}

uint64_t sub_1B2AC0BAC()
{
  return sub_1B29F8F68();
}

IntelligencePlatform::EntityResolutionRankingService::EntityResolutionMode_optional sub_1B2AC0BB4(Swift::String *a1)
{
  return EntityResolutionRankingService.EntityResolutionMode.init(rawValue:)(*a1);
}

uint64_t sub_1B2AC0BC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityResolutionRankingService.EntityResolutionMode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B2AC0BE8(void *a1@<X8>)
{
  *a1 = &unk_1F0ABE3D8;
}

uint64_t sub_1B2AC0BF8()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2AC0C58()
{
  return sub_1B2E82788();
}

uint64_t EntityResolutionRankingService.Explanation.Feature.__allocating_init(name:value:zScore:importance:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  sub_1B2AC9D1C();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(double *)(result + 32) = a3;
  *(double *)(result + 40) = a4;
  *(double *)(result + 48) = a5;
  return result;
}

uint64_t EntityResolutionRankingService.Explanation.Feature.init(name:value:zScore:importance:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(double *)(v5 + 32) = a3;
  *(double *)(v5 + 40) = a4;
  *(double *)(v5 + 48) = a5;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

uint64_t EntityResolutionRankingService.Explanation.Feature.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double EntityResolutionRankingService.Explanation.Feature.value.getter()
{
  return *(double *)(v0 + 32);
}

double EntityResolutionRankingService.Explanation.Feature.zScore.getter()
{
  return *(double *)(v0 + 40);
}

double EntityResolutionRankingService.Explanation.Feature.importance.getter()
{
  return *(double *)(v0 + 48);
}

uint64_t sub_1B2AC0D5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x65726F63537ALL && a2 == 0xE600000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6E6174726F706D69 && a2 == 0xEA00000000006563)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1B2AC0EF8(char a1)
{
  uint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65756C6176;
      break;
    case 2:
      uint64_t result = 0x65726F63537ALL;
      break;
    case 3:
      uint64_t result = 0x6E6174726F706D69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2AC0F80()
{
  return sub_1B2AC0EF8(*v0);
}

uint64_t sub_1B2AC0F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AC0D5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AC0FB0(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5454();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC0FEC(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5454();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EntityResolutionRankingService.Explanation.Feature.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EntityResolutionRankingService.Explanation.Feature.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1B2AC9D1C();

  return swift_deallocClassInstance();
}

uint64_t EntityResolutionRankingService.Explanation.Feature.encode(to:)()
{
  sub_1B2ACA154();
  sub_1B29A3EB4(&qword_1E9C389B8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B29A18FC();
  sub_1B2AC5454();
  sub_1B299E584();
  sub_1B2E83688();
  if (!v0)
  {
    sub_1B2AC9ED0();
    sub_1B2AC9ED0();
    sub_1B2AC9ED0();
  }
  sub_1B2AC9CF4();
  return v2();
}

uint64_t EntityResolutionRankingService.Explanation.Feature.__allocating_init(from:)()
{
  sub_1B2AC9D04();
  swift_allocObject();
  sub_1B2AC9CE4();
  EntityResolutionRankingService.Explanation.Feature.init(from:)();
  return v0;
}

void *EntityResolutionRankingService.Explanation.Feature.init(from:)()
{
  sub_1B2AC9B4C();
  sub_1B29A3EB4(&qword_1E9C3CC60);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2AC5454();
  sub_1B2AC9F28();
  if (v1)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v0[2] = sub_1B2E83568();
    v0[3] = v4;
    sub_1B2AC9F94();
    v0[4] = v5;
    sub_1B2AC9F94();
    v0[5] = v7;
    sub_1B2AC9F94();
    uint64_t v9 = v8;
    uint64_t v10 = sub_1B2ACA090();
    v11(v10);
    v0[6] = v9;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  return v0;
}

uint64_t sub_1B2AC13AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityResolutionRankingService.Explanation.Feature.__allocating_init(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1B2AC13D8()
{
  return EntityResolutionRankingService.Explanation.Feature.encode(to:)();
}

uint64_t EntityResolutionRankingService.Explanation.__allocating_init(positiveContributions:negativeContributions:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t EntityResolutionRankingService.Explanation.init(positiveContributions:negativeContributions:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

uint64_t EntityResolutionRankingService.Explanation.positiveContributions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EntityResolutionRankingService.Explanation.negativeContributions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2AC1454(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000001B2E9A0E0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001B2E9A100)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1B2AC1540()
{
  return 0xD000000000000015;
}

uint64_t sub_1B2AC1574()
{
  return sub_1B2E839E8();
}

unint64_t sub_1B2AC15B0()
{
  return sub_1B2AC1540();
}

uint64_t sub_1B2AC15B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AC1454(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AC15E0(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC54A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC161C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC54A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EntityResolutionRankingService.Explanation.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EntityResolutionRankingService.Explanation.__deallocating_deinit()
{
  EntityResolutionRankingService.Explanation.deinit();

  return swift_deallocClassInstance();
}

uint64_t EntityResolutionRankingService.Explanation.encode(to:)()
{
  sub_1B2ACA154();
  sub_1B29A3EB4(&qword_1E9C389B0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B29A18FC();
  sub_1B2AC54A0();
  sub_1B299E584();
  sub_1B29A3EB4(&qword_1E9C38980);
  sub_1B2AC54EC((uint64_t)&unk_1E9C38988);
  sub_1B2AC9D2C();
  if (!v0) {
    sub_1B2AC9D2C();
  }
  sub_1B2AC9CF4();
  return v2();
}

uint64_t EntityResolutionRankingService.Explanation.__allocating_init(from:)()
{
  sub_1B2AC9D04();
  swift_allocObject();
  uint64_t v1 = sub_1B2AC9CE4();
  EntityResolutionRankingService.Explanation.init(from:)(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11);
  return v0;
}

void EntityResolutionRankingService.Explanation.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  sub_1B2AC9B4C();
  sub_1B29A3EB4(&qword_1E9C3CC68);
  sub_1B299D278();
  MEMORY[0x1F4188790](v13);
  sub_1B29AEC7C(v12, v12[3]);
  sub_1B2AC54A0();
  sub_1B2AC9F28();
  if (v11)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1B29A3EB4(&qword_1E9C38980);
    sub_1B2AC54EC((uint64_t)&unk_1E9C3CC70);
    sub_1B2AC9E58();
    *(void *)(v10 + 16) = a10;
    sub_1B2AC9E58();
    sub_1B299B798();
    v14();
    *(void *)(v10 + 24) = a10;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
  sub_1B29998C8();
}

uint64_t sub_1B2AC1A04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityResolutionRankingService.Explanation.__allocating_init(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1B2AC1A30()
{
  return EntityResolutionRankingService.Explanation.encode(to:)();
}

uint64_t EntityResolutionRankingService.RankedEntities.ScoredEntity.init(id:score:explanation:inferenceEventId:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  *(void *)(v5 + 16) = *a1;
  *(double *)(v5 + 24) = a5;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 56) = 1;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

uint64_t type metadata accessor for EntityResolutionRankingService()
{
  return self;
}

void EntityResolutionRankingService.RankedEntities.ScoredEntity.id.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

double EntityResolutionRankingService.RankedEntities.ScoredEntity.score.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t EntityResolutionRankingService.RankedEntities.ScoredEntity.explanation.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EntityResolutionRankingService.RankedEntities.ScoredEntity.inferenceEventId.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_1B2AC1AE0()
{
  uint64_t v0 = swift_retain();
  return sub_1B2AC1C80(v0);
}

uint64_t sub_1B2AC1B0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[7];
  uint64_t v3 = v2;
  if (v2 == 1)
  {
    unint64_t v4 = v1[5];
    if (v4)
    {
      unint64_t v5 = v1[4];
      uint64_t v6 = (void *)MEMORY[0x1B3EB2480]();
      sub_1B2E7FF98();
      swift_allocObject();
      sub_1B2E7FF88();
      type metadata accessor for EntityResolutionRankingService.Explanation();
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1B2A39274(v5, v4);
      unint64_t v9 = v8;
      sub_1B2AC5E74((uint64_t)&unk_1E9C3CC80);
      sub_1B2E7FF78();
      sub_1B29C34DC(v7, v9);
      swift_release();
      uint64_t v3 = v12;
      uint64_t v10 = v1[7];
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v10 = 1;
    }
    v1[7] = v3;
    swift_retain();
    sub_1B2AC55A0(v10);
  }
  sub_1B2AC55B0(v2);
  return v3;
}

uint64_t sub_1B2AC1C80(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)(v1 + 56) = a1;
  return sub_1B2AC55A0(v2);
}

uint64_t (*sub_1B2AC1C90(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_1B2AC1B0C();
  return sub_1B2AC1CD8;
}

uint64_t sub_1B2AC1CD8(uint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return sub_1B2AC1C80(*a1);
  }
  uint64_t v2 = swift_retain();
  sub_1B2AC1C80(v2);

  return swift_release();
}

uint64_t EntityResolutionRankingService.RankedEntities.ScoredEntity.deinit()
{
  swift_bridgeObjectRelease();
  sub_1B2AC55A0(*(void *)(v0 + 56));
  return v0;
}

uint64_t EntityResolutionRankingService.RankedEntities.ScoredEntity.__deallocating_deinit()
{
  EntityResolutionRankingService.RankedEntities.ScoredEntity.deinit();

  return swift_deallocClassInstance();
}

uint64_t EntityResolutionRankingService.RankedEntities.inferenceEventId.getter()
{
  return *(void *)(v0 + 8);
}

__n128 StructuredInput.init(data:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 32);
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  *(unsigned char *)(a2 + 32) = v2;
  return result;
}

uint64_t sub_1B2AC1DAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7465536E75 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6465726165707061 && a2 == 0xE800000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6465747065636361 && a2 == 0xE800000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x64657463656A6572 && a2 == 0xE800000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x6165707061736964 && a2 == 0xEB00000000646572)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_1B2AC1FD0(char a1)
{
  uint64_t result = 0x7465536E75;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x726165707061;
      goto LABEL_5;
    case 2:
      uint64_t v3 = 0x747065636361;
      goto LABEL_5;
    case 3:
      uint64_t v3 = 0x7463656A6572;
LABEL_5:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
      break;
    case 4:
      uint64_t result = 0x6165707061736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2AC207C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736449746E657665 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    sub_1B2A0F6F4();
    sub_1B299B414();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2AC20F4()
{
  return 0x736449746E657665;
}

uint64_t sub_1B2AC2110(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC56C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC214C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC56C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AC2188(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5714();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC21C4(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5714();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AC2200()
{
  return sub_1B2AC1FD0(*v0);
}

uint64_t sub_1B2AC2208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AC1DAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AC2230(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC55E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC226C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC55E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AC22A8(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5630();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC22E4(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5630();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AC2320(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC567C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC235C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC567C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AC2398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AC207C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2AC23C4(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5760();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC2400(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5760();

  return MEMORY[0x1F41862B0](a1, v2);
}

void EntityResolutionRankingStatefulFeedback.FeedbackKind.encode(to:)()
{
  sub_1B299F300();
  uint64_t v2 = v0;
  char v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3CC88);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3CC90);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B2AC9E30(v7, v19);
  sub_1B29A3EB4(&qword_1E9C3CC98);
  sub_1B299D278();
  uint64_t v21 = v8;
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3CCA0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B299F280();
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C3CCA8);
  sub_1B299D278();
  uint64_t v20 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1B29A0658();
  sub_1B29A3EB4(&qword_1E9C3CCB0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v13);
  sub_1B2999928();
  uint64_t v14 = *(unsigned __int8 *)(v2 + 8);
  sub_1B29AEC7C(v4, v4[3]);
  sub_1B2AC55E4();
  sub_1B2E83A38();
  switch(v14)
  {
    case 1:
      sub_1B2AC5714();
      sub_1B2AC9BE8();
      sub_1B2AC9E4C();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2AC57AC((uint64_t)&unk_1E9C3CCD0);
      sub_1B2ACA008();
      sub_1B2E83668();
      goto LABEL_9;
    case 2:
      sub_1B2AC56C8();
      sub_1B2ACA188();
      sub_1B2AC9E4C();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2AC57AC((uint64_t)&unk_1E9C3CCD0);
      sub_1B2ACA008();
      sub_1B2E83668();
      uint64_t v15 = sub_1B2AC9FB0();
      v16(v15, v21);
      break;
    case 3:
      sub_1B2AC567C();
      sub_1B2AC9BE8();
      sub_1B2AC9E4C();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2AC57AC((uint64_t)&unk_1E9C3CCD0);
      sub_1B2ACA008();
      sub_1B2ACA0A8();
      goto LABEL_8;
    case 4:
      sub_1B2AC5630();
      sub_1B2AC9BE8();
      sub_1B2AC9E4C();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2AC57AC((uint64_t)&unk_1E9C3CCD0);
      sub_1B2ACA008();
      sub_1B2ACA0A8();
LABEL_8:
      sub_1B2AC9FB0();
LABEL_9:
      sub_1B299B798();
      v17();
      break;
    default:
      sub_1B2AC5760();
      sub_1B2ACA188();
      sub_1B2AC9E4C();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2AC57AC((uint64_t)&unk_1E9C3CCD0);
      sub_1B2ACA008();
      sub_1B2E83668();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v1, v10);
      break;
  }
  sub_1B299B798();
  v18();
  sub_1B29998C8();
}

void EntityResolutionRankingStatefulFeedback.FeedbackKind.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  uint64_t v13 = v12;
  uint64_t v40 = v14;
  sub_1B29A3EB4(&qword_1E9C3CCF8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v15);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3CD00);
  sub_1B299D278();
  MEMORY[0x1F4188790](v16);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3CD08);
  sub_1B299D278();
  MEMORY[0x1F4188790](v17);
  sub_1B2AC9E14(v18, v38);
  sub_1B29A3EB4(&qword_1E9C3CD10);
  sub_1B299D278();
  MEMORY[0x1F4188790](v19);
  sub_1B29A0658();
  sub_1B29A3EB4(&qword_1E9C3CD18);
  sub_1B299D278();
  MEMORY[0x1F4188790](v20);
  sub_1B29A0480();
  unint64_t v21 = sub_1B29A3EB4(&qword_1E9C3CD20);
  sub_1B299D278();
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v24);
  sub_1B29A0498();
  uint64_t v25 = v13[4];
  uint64_t v41 = v13;
  sub_1B2ACA16C(v13);
  sub_1B2AC55E4();
  sub_1B2E83A18();
  if (v10) {
    goto LABEL_13;
  }
  uint64_t v26 = sub_1B2E835F8();
  if (!*(void *)(v26 + 16))
  {
    uint64_t v27 = v11;
LABEL_8:
    sub_1B2E83288();
    swift_allocError();
    uint64_t v29 = v28;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v29 = &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind;
    sub_1B2E834F8();
    sub_1B2AC9B6C();
    sub_1B299B1AC();
    uint64_t v30 = sub_1B2AC9CB4();
    v31(v30);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, unint64_t))(v23 + 8))(v27, v21);
LABEL_13:
    uint64_t v32 = (uint64_t)v41;
    goto LABEL_14;
  }
  uint64_t v39 = *(unsigned __int8 *)(v26 + 32);
  sub_1B29B142C(1);
  sub_1B2ACA208();
  if (v25 != v21 >> 1)
  {
    uint64_t v27 = v11;
    goto LABEL_8;
  }
  switch(v39)
  {
    case 1:
      LOBYTE(a10) = 1;
      sub_1B2AC5714();
      sub_1B2AC9B28();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2AC57AC((uint64_t)&unk_1E9C3CD28);
      sub_1B2AC9D78();
      sub_1B2AC9C58();
      sub_1B299B798();
      v36();
      swift_unknownObjectRelease();
      sub_1B2ACA140();
      sub_1B299B798();
      v37();
      goto LABEL_17;
    case 2:
      LOBYTE(a10) = 2;
      sub_1B2AC56C8();
      sub_1B2AC9B28();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2AC57AC((uint64_t)&unk_1E9C3CD28);
      sub_1B2ACA0C8();
      sub_1B2E83548();
      sub_1B2ACA110();
      goto LABEL_15;
    case 3:
      LOBYTE(a10) = 3;
      sub_1B2AC567C();
      sub_1B2E834E8();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2AC57AC((uint64_t)&unk_1E9C3CD28);
      sub_1B2AC9D78();
      sub_1B2E83548();
      sub_1B2ACA110();
      goto LABEL_16;
    case 4:
      LOBYTE(a10) = 4;
      sub_1B2AC5630();
      sub_1B2AC9B28();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2AC57AC((uint64_t)&unk_1E9C3CD28);
      sub_1B2AC9D78();
      sub_1B2AC9C58();
      sub_1B2ACA110();
      goto LABEL_15;
    default:
      LOBYTE(a10) = 0;
      sub_1B2AC5760();
      sub_1B2AC9B28();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2AC57AC((uint64_t)&unk_1E9C3CD28);
      sub_1B2AC9D78();
      sub_1B2AC9C58();
      sub_1B2ACA110();
LABEL_15:
      sub_1B2ACA250();
LABEL_16:
      sub_1B299B798();
      v33();
      swift_unknownObjectRelease();
      uint64_t v34 = sub_1B2ACA228();
      v35(v34);
LABEL_17:
      uint64_t v32 = (uint64_t)v13;
      *(void *)uint64_t v40 = a10;
      *(unsigned char *)(v40 + 8) = v39;
      break;
  }
LABEL_14:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v32);
  sub_1B29998C8();
}

void sub_1B2AC30A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  EntityResolutionRankingStatefulFeedback.FeedbackKind.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1B2AC30B8()
{
}

uint64_t EntityResolutionRankingStatefulFeedback.__allocating_init(kind:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  char v3 = *(unsigned char *)(a1 + 8);
  *(void *)(result + 16) = *(void *)a1;
  *(unsigned char *)(result + 24) = v3;
  return result;
}

uint64_t EntityResolutionRankingStatefulFeedback.init(kind:)(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  *(void *)(v1 + 16) = *(void *)a1;
  *(unsigned char *)(v1 + 24) = v2;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

unint64_t static EntityResolutionRankingStatefulFeedback.type.getter()
{
  return 0xD00000000000003CLL;
}

void sub_1B2AC3140()
{
}

uint64_t sub_1B2AC3150(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5820();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC318C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5820();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EntityResolutionRankingStatefulFeedback.deinit()
{
  sub_1B2AC580C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  return v0;
}

uint64_t EntityResolutionRankingStatefulFeedback.__deallocating_deinit()
{
  sub_1B2AC580C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t sub_1B2AC3228()
{
  sub_1B2ACA154();
  sub_1B29A3EB4(&qword_1E9C3CD30);
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B29A18FC();
  sub_1B2AC5820();
  sub_1B299E584();
  sub_1B2AC586C();
  sub_1B2E836D8();
  sub_1B2AC9CF4();
  return v1();
}

uint64_t EntityResolutionRankingStatefulFeedback.__allocating_init(from:)()
{
  sub_1B2AC9D04();
  swift_allocObject();
  sub_1B2AC9CE4();
  EntityResolutionRankingStatefulFeedback.init(from:)();
  return v0;
}

void EntityResolutionRankingStatefulFeedback.init(from:)()
{
  sub_1B299F300();
  char v3 = v2;
  sub_1B29A3EB4(&qword_1E9C3CD48);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B2ACA16C(v3);
  sub_1B2AC5820();
  sub_1B2AC9EEC();
  if (v1)
  {
    type metadata accessor for EntityResolutionRankingStatefulFeedback();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1B2AC58DC();
    sub_1B2ACA0DC();
    uint64_t v5 = sub_1B29A2514();
    v6(v5);
    *(void *)(v0 + 16) = v7;
    *(unsigned char *)(v0 + 24) = v8;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
  sub_1B29998C8();
}

unint64_t sub_1B2AC3494()
{
  return 0xD00000000000003CLL;
}

uint64_t sub_1B2AC34B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityResolutionRankingStatefulFeedback.__allocating_init(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1B2AC34E0()
{
  return sub_1B2AC3228();
}

BOOL static EntityResolutionRankingDirectFeedback.FeedbackKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EntityResolutionRankingDirectFeedback.FeedbackKind.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t sub_1B2AC3544(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7465736E75 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x64656761676E65 && a2 == 0xE700000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x64657463656A6572 && a2 == 0xE800000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6465726F6E6769 && a2 == 0xE700000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x657250726576656ELL && a2 == 0xEE006465746E6573)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_1B2AC3770(char a1)
{
  uint64_t result = 0x7465736E75;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x656761676E65;
      goto LABEL_5;
    case 2:
      uint64_t result = 0x64657463656A6572;
      break;
    case 3:
      uint64_t v3 = 0x65726F6E6769;
LABEL_5:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
      break;
    case 4:
      uint64_t result = 0x657250726576656ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2AC3824()
{
  return sub_1B2AC3770(*v0);
}

uint64_t sub_1B2AC382C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AC3544(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AC3854(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5928();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC3890(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5928();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AC38CC(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5A58();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC3908(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5A58();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AC3944(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC59C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC3980(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC59C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AC39BC(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5974();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC39F8(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5974();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AC3A34(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5A0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC3A70(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5A0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AC3AAC(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5AA4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC3AE8(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5AA4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void EntityResolutionRankingDirectFeedback.FeedbackKind.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C3CD58);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B2AC9DDC(v4, v16);
  sub_1B29A3EB4(&qword_1E9C3CD60);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B2AC9DF8(v6, v17);
  sub_1B29A3EB4(&qword_1E9C3CD68);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B2AC9DC0(v8, v18);
  sub_1B29A3EB4(&qword_1E9C3CD70);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B29A0480();
  sub_1B29A3EB4(&qword_1E9C3CD78);
  sub_1B299D278();
  MEMORY[0x1F4188790](v10);
  sub_1B299B0C8();
  sub_1B29A3EB4(&qword_1E9C3CD80);
  sub_1B299D278();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = *v0;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2AC5928();
  sub_1B2E83A38();
  switch(v12)
  {
    case 1:
      sub_1B2AC5A58();
      sub_1B2AC9B94();
      goto LABEL_8;
    case 2:
      sub_1B2AC5A0C();
      sub_1B2AC9B94();
      goto LABEL_7;
    case 3:
      sub_1B2AC59C0();
      sub_1B2AC9B94();
      goto LABEL_7;
    case 4:
      sub_1B2AC5974();
      sub_1B2AC9B94();
LABEL_7:
      sub_1B2ACA25C();
LABEL_8:
      sub_1B299B798();
      v14();
      sub_1B2AC9FB0();
      break;
    default:
      sub_1B2AC5AA4();
      sub_1B2E83618();
      sub_1B299B798();
      v13();
      sub_1B2AC9FB0();
      break;
  }
  sub_1B299B798();
  v15();
  sub_1B29998C8();
}

uint64_t EntityResolutionRankingDirectFeedback.FeedbackKind.hashValue.getter()
{
  return sub_1B2E839E8();
}

void EntityResolutionRankingDirectFeedback.FeedbackKind.init(from:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v37 = v4;
  sub_1B29A3EB4(&qword_1E9C3CDB8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B2AC9E14(v6, v33);
  sub_1B29A3EB4(&qword_1E9C3CDC0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B2AC9DDC(v8, v34);
  sub_1B29A3EB4(&qword_1E9C3CDC8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B29B1CCC(v10, v35);
  sub_1B29A3EB4(&qword_1E9C3CDD0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v11);
  sub_1B29A0498();
  sub_1B29A3EB4(&qword_1E9C3CDD8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v12);
  sub_1B299F280();
  uint64_t v13 = sub_1B29A3EB4(&qword_1E9C3CDE0);
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B2999928();
  uint64_t v38 = (uint64_t)v3;
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2AC5928();
  sub_1B2E83A18();
  if (v1) {
    goto LABEL_10;
  }
  uint64_t v17 = sub_1B2E835F8();
  if (!*(void *)(v17 + 16))
  {
    uint64_t v25 = v0;
LABEL_9:
    sub_1B2E83288();
    swift_allocError();
    uint64_t v27 = v26;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v27 = &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind;
    sub_1B2E834F8();
    sub_1B2AC9B6C();
    sub_1B299B1AC();
    uint64_t v28 = sub_1B2AC9CB4();
    v29(v28);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v25, v13);
LABEL_10:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v38);
    goto LABEL_11;
  }
  uint64_t v36 = v13;
  uint64_t v18 = v0;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 32);
  sub_1B29B142C(1);
  uint64_t v21 = v20;
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (v21 != v23 >> 1)
  {
    uint64_t v25 = v18;
    uint64_t v13 = v36;
    goto LABEL_9;
  }
  switch(v19)
  {
    case 1:
      uint64_t v24 = v37;
      sub_1B2AC5A58();
      sub_1B2E834E8();
      goto LABEL_6;
    case 2:
      uint64_t v24 = v37;
      sub_1B2AC5A0C();
      sub_1B2AC9BC8();
      goto LABEL_6;
    case 3:
      uint64_t v24 = v37;
      sub_1B2AC59C0();
      sub_1B2AC9BC8();
      goto LABEL_6;
    case 4:
      uint64_t v24 = v37;
      sub_1B2AC5974();
      sub_1B2AC9BC8();
      sub_1B2ACA25C();
      goto LABEL_16;
    default:
      uint64_t v24 = v37;
      sub_1B2AC5AA4();
      sub_1B2AC9BC8();
LABEL_6:
      sub_1B2ACA25C();
LABEL_16:
      sub_1B299B798();
      v30();
      swift_unknownObjectRelease();
      uint64_t v31 = sub_1B2AC9FBC();
      v32(v31);
      *uint64_t v24 = v19;
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
      break;
  }
LABEL_11:
  sub_1B29998C8();
}

void sub_1B2AC4410()
{
}

void sub_1B2AC4428()
{
}

uint64_t EntityResolutionRankingDirectFeedback.init(kind:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 16) = *a1;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

unint64_t static EntityResolutionRankingDirectFeedback.type.getter()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_1B2AC4468(uint64_t a1, uint64_t a2)
{
  if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    sub_1B2A0F6F4();
    sub_1B299B414();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2AC44D0()
{
  return 1684957547;
}

uint64_t sub_1B2AC44E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AC4468(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2AC450C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5AF0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AC4548(uint64_t a1)
{
  unint64_t v2 = sub_1B2AC5AF0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EntityResolutionRankingDirectFeedback.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B2AC4598()
{
  sub_1B2ACA154();
  sub_1B29A3EB4(&qword_1E9C3CDE8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B29A18FC();
  sub_1B2AC5AF0();
  sub_1B299E584();
  sub_1B2AC5B3C();
  sub_1B2E836D8();
  sub_1B2AC9CF4();
  return v1();
}

uint64_t EntityResolutionRankingDirectFeedback.__allocating_init(from:)()
{
  sub_1B2AC9D04();
  swift_allocObject();
  uint64_t v1 = sub_1B2AC9CE4();
  EntityResolutionRankingDirectFeedback.init(from:)(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, SWORD2(v11), SBYTE6(v11), SHIBYTE(v11));
  return v0;
}

void EntityResolutionRankingDirectFeedback.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_1B299F300();
  uint64_t v16 = v15;
  sub_1B29A3EB4(&qword_1E9C3CE00);
  sub_1B299D278();
  MEMORY[0x1F4188790](v17);
  sub_1B2ACA16C(v16);
  sub_1B2AC5AF0();
  sub_1B2AC9EEC();
  if (v14)
  {
    type metadata accessor for EntityResolutionRankingDirectFeedback();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1B2AC5B88();
    sub_1B2ACA0DC();
    uint64_t v18 = sub_1B29A2514();
    v19(v18);
    *(unsigned char *)(v13 + 16) = a13;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v16);
  sub_1B29998C8();
}

unint64_t sub_1B2AC47F0()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_1B2AC4810@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityResolutionRankingDirectFeedback.__allocating_init(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1B2AC483C()
{
  return sub_1B2AC4598();
}

uint64_t sub_1B2AC4860(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_124;
    }
    if (v3) {
      return sub_1B2AC4E44(0, v3, 1, a1);
    }
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1B29B6A34(v3 / 2);
  uint64_t v89 = v6;
  uint64_t v90 = result;
  uint64_t v87 = v3;
  uint64_t v85 = a1;
  if (v3 <= 0) {
    goto LABEL_88;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v84 = *a1 - 8;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v86 = v5;
  uint64_t v88 = *a1;
  while (1)
  {
    uint64_t v10 = v7++;
    if (v7 < v3)
    {
      uint64_t v11 = *(void *)(v8 + 8 * v7);
      double v12 = *(double *)(v11 + 24);
      double v13 = *(double *)(*(void *)(v8 + 8 * v10) + 24);
      uint64_t v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        double v14 = *(double *)(v11 + 24);
        while (1)
        {
          double v15 = v14;
          double v14 = *(double *)(*(void *)(v8 + 8 * v7) + 24);
          if (v13 < v12 == v15 >= v14) {
            break;
          }
          if (++v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v13 < v12)
      {
        if (v7 < v10) {
          goto LABEL_125;
        }
        if (v10 < v7)
        {
          uint64_t v16 = (uint64_t *)(v84 + 8 * v7);
          uint64_t v17 = v7;
          uint64_t v18 = v10;
          uint64_t v19 = (uint64_t *)(v8 + 8 * v10);
          do
          {
            if (v18 != --v17)
            {
              if (!v8) {
                goto LABEL_131;
              }
              uint64_t v20 = *v19;
              *uint64_t v19 = *v16;
              *uint64_t v16 = v20;
            }
            ++v18;
            --v16;
            ++v19;
          }
          while (v18 < v17);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_123;
      }
      if (v7 - v10 < v5)
      {
        uint64_t v21 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_126;
        }
        if (v21 >= v3) {
          uint64_t v21 = v3;
        }
        if (v21 < v10)
        {
LABEL_127:
          __break(1u);
          goto LABEL_128;
        }
        if (v7 != v21)
        {
          unint64_t v22 = (void *)(v84 + 8 * v7);
          do
          {
            uint64_t v23 = *(void *)(v8 + 8 * v7);
            uint64_t v24 = v10;
            uint64_t v25 = v22;
            do
            {
              uint64_t v26 = *v25;
              if (*(double *)(*v25 + 24) >= *(double *)(v23 + 24)) {
                break;
              }
              if (!v8) {
                goto LABEL_129;
              }
              *uint64_t v25 = v23;
              v25[1] = v26;
              --v25;
              ++v24;
            }
            while (v7 != v24);
            ++v7;
            ++v22;
          }
          while (v7 != v21);
          uint64_t v7 = v21;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v28 = *(void *)(v9 + 16);
    unint64_t v27 = *(void *)(v9 + 24);
    unint64_t v29 = v28 + 1;
    uint64_t v8 = v88;
    if (v28 >= v27 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454((char *)(v27 > 1), v28 + 1, 1, (char *)v9);
      uint64_t v8 = v88;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v29;
    uint64_t v30 = v9 + 32;
    uint64_t v31 = (uint64_t *)(v9 + 32 + 16 * v28);
    *uint64_t v31 = v10;
    v31[1] = v7;
    if (v28) {
      break;
    }
    unint64_t v29 = 1;
LABEL_81:
    uint64_t v5 = v86;
    uint64_t v3 = v87;
    if (v7 >= v87) {
      goto LABEL_89;
    }
  }
  while (1)
  {
    unint64_t v32 = v29 - 1;
    if (v29 >= 4)
    {
      unint64_t v37 = v30 + 16 * v29;
      uint64_t v38 = *(void *)(v37 - 64);
      uint64_t v39 = *(void *)(v37 - 56);
      BOOL v43 = __OFSUB__(v39, v38);
      uint64_t v40 = v39 - v38;
      if (v43) {
        goto LABEL_107;
      }
      uint64_t v42 = *(void *)(v37 - 48);
      uint64_t v41 = *(void *)(v37 - 40);
      BOOL v43 = __OFSUB__(v41, v42);
      uint64_t v35 = v41 - v42;
      char v36 = v43;
      if (v43) {
        goto LABEL_108;
      }
      unint64_t v44 = v29 - 2;
      char v45 = (uint64_t *)(v30 + 16 * (v29 - 2));
      uint64_t v47 = *v45;
      uint64_t v46 = v45[1];
      BOOL v43 = __OFSUB__(v46, v47);
      uint64_t v48 = v46 - v47;
      if (v43) {
        goto LABEL_109;
      }
      BOOL v43 = __OFADD__(v35, v48);
      uint64_t v49 = v35 + v48;
      if (v43) {
        goto LABEL_111;
      }
      if (v49 >= v40)
      {
        uint64_t v67 = (uint64_t *)(v30 + 16 * v32);
        uint64_t v69 = *v67;
        uint64_t v68 = v67[1];
        BOOL v43 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v43) {
          goto LABEL_117;
        }
        BOOL v60 = v35 < v70;
        goto LABEL_70;
      }
    }
    else
    {
      if (v29 != 3)
      {
        uint64_t v61 = *(void *)(v9 + 32);
        uint64_t v62 = *(void *)(v9 + 40);
        BOOL v43 = __OFSUB__(v62, v61);
        uint64_t v54 = v62 - v61;
        char v55 = v43;
        goto LABEL_64;
      }
      uint64_t v34 = *(void *)(v9 + 32);
      uint64_t v33 = *(void *)(v9 + 40);
      BOOL v43 = __OFSUB__(v33, v34);
      uint64_t v35 = v33 - v34;
      char v36 = v43;
    }
    if (v36) {
      goto LABEL_110;
    }
    unint64_t v44 = v29 - 2;
    uint64_t v50 = (uint64_t *)(v30 + 16 * (v29 - 2));
    uint64_t v52 = *v50;
    uint64_t v51 = v50[1];
    BOOL v53 = __OFSUB__(v51, v52);
    uint64_t v54 = v51 - v52;
    char v55 = v53;
    if (v53) {
      goto LABEL_112;
    }
    uint64_t v56 = (uint64_t *)(v30 + 16 * v32);
    uint64_t v58 = *v56;
    uint64_t v57 = v56[1];
    BOOL v43 = __OFSUB__(v57, v58);
    uint64_t v59 = v57 - v58;
    if (v43) {
      goto LABEL_114;
    }
    if (__OFADD__(v54, v59)) {
      goto LABEL_116;
    }
    if (v54 + v59 >= v35)
    {
      BOOL v60 = v35 < v59;
LABEL_70:
      if (v60) {
        unint64_t v32 = v44;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v55) {
      goto LABEL_113;
    }
    uint64_t v63 = (uint64_t *)(v30 + 16 * v32);
    uint64_t v65 = *v63;
    uint64_t v64 = v63[1];
    BOOL v43 = __OFSUB__(v64, v65);
    uint64_t v66 = v64 - v65;
    if (v43) {
      goto LABEL_115;
    }
    if (v66 < v54) {
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v71 = v9;
    unint64_t v72 = v32 - 1;
    if (v32 - 1 >= v29)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_130;
    }
    uint64_t v73 = (uint64_t *)(v30 + 16 * v72);
    uint64_t v74 = *v73;
    uint64_t v75 = (void *)(v30 + 16 * v32);
    uint64_t v76 = v75[1];
    uint64_t result = sub_1B2AC4EA4((void *)(v8 + 8 * *v73), (void *)(v8 + 8 * *v75), v8 + 8 * v76, v89);
    if (v1) {
      break;
    }
    if (v76 < v74) {
      goto LABEL_104;
    }
    if (v32 > *(void *)(v71 + 16)) {
      goto LABEL_105;
    }
    *uint64_t v73 = v74;
    *(void *)(v30 + 16 * v72 + 8) = v76;
    unint64_t v77 = *(void *)(v71 + 16);
    if (v32 >= v77) {
      goto LABEL_106;
    }
    uint64_t v9 = v71;
    unint64_t v29 = v77 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v30 + 16 * v32), v75 + 2, 16 * (v77 - 1 - v32));
    *(void *)(v71 + 16) = v77 - 1;
    uint64_t v8 = v88;
    if (v77 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v87 >= -1) {
    goto LABEL_101;
  }
  __break(1u);
LABEL_88:
  uint64_t v9 = MEMORY[0x1E4FBC860];
  unint64_t v29 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_89:
  if (v29 >= 2)
  {
    uint64_t v78 = *v85;
    while (1)
    {
      unint64_t v79 = v29 - 2;
      if (v29 < 2) {
        break;
      }
      if (!v78) {
        goto LABEL_132;
      }
      uint64_t v80 = *(void *)(v9 + 32 + 16 * v79);
      uint64_t v81 = *(void *)(v9 + 32 + 16 * (v29 - 1) + 8);
      uint64_t result = sub_1B2AC4EA4((void *)(v78 + 8 * v80), (void *)(v78 + 8 * *(void *)(v9 + 32 + 16 * (v29 - 1))), v78 + 8 * v81, v89);
      if (v1) {
        goto LABEL_86;
      }
      if (v81 < v80) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B2DCA54C();
        uint64_t v9 = result;
      }
      if (v79 >= *(void *)(v9 + 16)) {
        goto LABEL_120;
      }
      uint64_t v82 = (void *)(v9 + 32 + 16 * v79);
      *uint64_t v82 = v80;
      v82[1] = v81;
      unint64_t v83 = *(void *)(v9 + 16);
      if (v29 > v83) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v29 - 1)), (const void *)(v9 + 32 + 16 * v29), 16 * (v83 - v29));
      *(void *)(v9 + 16) = v83 - 1;
      unint64_t v29 = v83 - 1;
      if (v83 <= 2) {
        goto LABEL_100;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
    goto LABEL_127;
  }
LABEL_100:
  uint64_t result = swift_bridgeObjectRelease();
  if (v87 >= -1)
  {
LABEL_101:
    *(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1B2E82878();
    return swift_bridgeObjectRelease();
  }
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
  return result;
}

uint64_t sub_1B2AC4E44(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 8 * a3);
      uint64_t v7 = result;
      uint64_t v8 = (void *)v5;
      do
      {
        uint64_t v9 = *v8;
        if (*(double *)(*v8 + 24) >= *(double *)(v6 + 24)) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *uint64_t v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1B2AC4EA4(void *a1, void *a2, unint64_t a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_1B29BE70C(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    unint64_t v12 = (unint64_t)&v4[v11];
    if (v7 >= v6 || v10 < 8) {
      goto LABEL_39;
    }
    uint64_t v18 = (void *)(a3 - 8);
    while (1)
    {
      uint64_t v19 = v18 + 1;
      uint64_t v20 = *(v6 - 1);
      if (*(double *)(v20 + 24) >= *(double *)(*(void *)(v12 - 8) + 24))
      {
        BOOL v22 = v19 != (void *)v12 || (unint64_t)v18 >= v12;
        uint64_t v20 = *(void *)(v12 - 8);
        v12 -= 8;
        if (!v22) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v21 = v19 != v6 || v18 >= v6;
        --v6;
        if (!v21) {
          goto LABEL_35;
        }
      }
      *uint64_t v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_39;
      }
    }
  }
  sub_1B29BE70C(a1, a2 - a1, a4);
  unint64_t v12 = (unint64_t)&v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      uint64_t v14 = *v6;
      if (*(double *)(*v4 + 24) < *(double *)(*v6 + 24)) {
        break;
      }
      uint64_t v14 = *v4;
      BOOL v15 = v7 == v4++;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_12:
      ++v7;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    BOOL v15 = v7 == v6++;
    if (v15) {
      goto LABEL_12;
    }
LABEL_11:
    void *v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v6 = v7;
LABEL_39:
  sub_1B29BE70C(v4, (uint64_t)(v12 - (void)v4) / 8, v6);
  return 1;
}

uint64_t sub_1B2AC5034(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 128;
  for (uint64_t i = 10; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t type metadata accessor for EntityResolutionRankingDirectFeedback()
{
  return self;
}

unint64_t sub_1B2AC50F0()
{
  unint64_t result = qword_1E9C3CBF0;
  if (!qword_1E9C3CBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CBF0);
  }
  return result;
}

unint64_t sub_1B2AC513C()
{
  unint64_t result = qword_1E9C3CBF8;
  if (!qword_1E9C3CBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CBF8);
  }
  return result;
}

unint64_t sub_1B2AC5188()
{
  unint64_t result = qword_1E9C3CC00;
  if (!qword_1E9C3CC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CC00);
  }
  return result;
}

unint64_t sub_1B2AC51D4()
{
  unint64_t result = qword_1E9C3CC08;
  if (!qword_1E9C3CC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CC08);
  }
  return result;
}

unint64_t sub_1B2AC5220()
{
  unint64_t result = qword_1E9C3CC10;
  if (!qword_1E9C3CC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CC10);
  }
  return result;
}

unint64_t sub_1B2AC526C()
{
  unint64_t result = qword_1E9C3CC18;
  if (!qword_1E9C3CC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CC18);
  }
  return result;
}

unint64_t sub_1B2AC52B8()
{
  unint64_t result = qword_1E9C3CC20;
  if (!qword_1E9C3CC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CC20);
  }
  return result;
}

uint64_t sub_1B2AC5304()
{
  sub_1B2ABB9CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int16 *)(v0 + 48), *(unsigned char *)(v0 + 50));
  sub_1B2ABB9CC(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned __int16 *)(v0 + 88), *(unsigned char *)(v0 + 90));

  return MEMORY[0x1F4186498](v0, 91, 7);
}

unint64_t sub_1B2AC535C()
{
  unint64_t result = qword_1E9C3CC58;
  if (!qword_1E9C3CC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CC58);
  }
  return result;
}

unint64_t sub_1B2AC53A8(uint64_t a1)
{
  unint64_t result = sub_1B2ACA11C(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_1B29C3588(&qword_1E9C38970);
    v4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t type metadata accessor for EntityResolutionRankingService.MentionedEntities.MentionedRankedEntities()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2AC542C(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B2AC5440(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1B2AC5454()
{
  unint64_t result = qword_1E9C38648;
  if (!qword_1E9C38648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38648);
  }
  return result;
}

unint64_t sub_1B2AC54A0()
{
  unint64_t result = qword_1E9C38630;
  if (!qword_1E9C38630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38630);
  }
  return result;
}

unint64_t sub_1B2AC54EC(uint64_t a1)
{
  unint64_t result = sub_1B2ACA11C(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_1B29C3588(&qword_1E9C38980);
    sub_1B2AC5E74(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t type metadata accessor for EntityResolutionRankingService.Explanation.Feature()
{
  return self;
}

uint64_t sub_1B2AC55A0(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1B2AC55B0(uint64_t result)
{
  if (result != 1) {
    return swift_retain();
  }
  return result;
}

uint64_t type metadata accessor for EntityResolutionRankingService.Explanation()
{
  return self;
}

unint64_t sub_1B2AC55E4()
{
  unint64_t result = qword_1E9C3CCB8;
  if (!qword_1E9C3CCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CCB8);
  }
  return result;
}

unint64_t sub_1B2AC5630()
{
  unint64_t result = qword_1E9C3CCC0;
  if (!qword_1E9C3CCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CCC0);
  }
  return result;
}

unint64_t sub_1B2AC567C()
{
  unint64_t result = qword_1E9C3CCD8;
  if (!qword_1E9C3CCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CCD8);
  }
  return result;
}

unint64_t sub_1B2AC56C8()
{
  unint64_t result = qword_1E9C3CCE0;
  if (!qword_1E9C3CCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CCE0);
  }
  return result;
}

unint64_t sub_1B2AC5714()
{
  unint64_t result = qword_1E9C3CCE8;
  if (!qword_1E9C3CCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CCE8);
  }
  return result;
}

unint64_t sub_1B2AC5760()
{
  unint64_t result = qword_1E9C3CCF0;
  if (!qword_1E9C3CCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CCF0);
  }
  return result;
}

unint64_t sub_1B2AC57AC(uint64_t a1)
{
  unint64_t result = sub_1B2ACA11C(a1);
  if (!result)
  {
    sub_1B29C3588(&qword_1E9C3CCC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1B2AC580C(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 4u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1B2AC5820()
{
  unint64_t result = qword_1E9C3CD38;
  if (!qword_1E9C3CD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CD38);
  }
  return result;
}

unint64_t sub_1B2AC586C()
{
  unint64_t result = qword_1E9C3CD40;
  if (!qword_1E9C3CD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CD40);
  }
  return result;
}

uint64_t type metadata accessor for EntityResolutionRankingStatefulFeedback()
{
  return self;
}

unint64_t sub_1B2AC58DC()
{
  unint64_t result = qword_1E9C3CD50;
  if (!qword_1E9C3CD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CD50);
  }
  return result;
}

unint64_t sub_1B2AC5928()
{
  unint64_t result = qword_1E9C3CD88;
  if (!qword_1E9C3CD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CD88);
  }
  return result;
}

unint64_t sub_1B2AC5974()
{
  unint64_t result = qword_1E9C3CD90;
  if (!qword_1E9C3CD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CD90);
  }
  return result;
}

unint64_t sub_1B2AC59C0()
{
  unint64_t result = qword_1E9C3CD98;
  if (!qword_1E9C3CD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CD98);
  }
  return result;
}

unint64_t sub_1B2AC5A0C()
{
  unint64_t result = qword_1E9C3CDA0;
  if (!qword_1E9C3CDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CDA0);
  }
  return result;
}

unint64_t sub_1B2AC5A58()
{
  unint64_t result = qword_1E9C3CDA8;
  if (!qword_1E9C3CDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CDA8);
  }
  return result;
}

unint64_t sub_1B2AC5AA4()
{
  unint64_t result = qword_1E9C3CDB0;
  if (!qword_1E9C3CDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CDB0);
  }
  return result;
}

unint64_t sub_1B2AC5AF0()
{
  unint64_t result = qword_1E9C3CDF0;
  if (!qword_1E9C3CDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CDF0);
  }
  return result;
}

unint64_t sub_1B2AC5B3C()
{
  unint64_t result = qword_1E9C3CDF8;
  if (!qword_1E9C3CDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CDF8);
  }
  return result;
}

unint64_t sub_1B2AC5B88()
{
  unint64_t result = qword_1E9C3CE08;
  if (!qword_1E9C3CE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CE08);
  }
  return result;
}

unint64_t sub_1B2AC5BD8()
{
  unint64_t result = qword_1E9C3CE10;
  if (!qword_1E9C3CE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CE10);
  }
  return result;
}

unint64_t sub_1B2AC5C28()
{
  unint64_t result = qword_1E9C3CE18;
  if (!qword_1E9C3CE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CE18);
  }
  return result;
}

unint64_t sub_1B2AC5C78()
{
  unint64_t result = qword_1E9C3CE20;
  if (!qword_1E9C3CE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CE20);
  }
  return result;
}

unint64_t sub_1B2AC5CC8()
{
  unint64_t result = qword_1E9C3CE28;
  if (!qword_1E9C3CE28)
  {
    sub_1B29C3588(&qword_1E9C3CE30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CE28);
  }
  return result;
}

unint64_t sub_1B2AC5D1C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B2AC5E74((uint64_t)&unk_1E9C3CE38);
  unint64_t result = sub_1B2AC5E74((uint64_t)&qword_1E9C3B208);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B2AC5DA4()
{
  unint64_t result = qword_1E9C3CE40;
  if (!qword_1E9C3CE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CE40);
  }
  return result;
}

unint64_t sub_1B2AC5DF0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B2AC5E74((uint64_t)&unk_1E9C3CE48);
  unint64_t result = sub_1B2AC5E74((uint64_t)&qword_1E9C3B200);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B2AC5E74(uint64_t a1)
{
  unint64_t result = sub_1B2ACA11C(a1);
  if (!result)
  {
    v3();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1B2AC5EB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B2AC1B0C();
  *a1 = result;
  return result;
}

uint64_t sub_1B2AC5EE4(uint64_t a1)
{
  sub_1B299B708();
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t method lookup function for EntityResolutionRankingService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EntityResolutionRankingService);
}

uint64_t dispatch thunk of EntityResolutionRankingService.__allocating_init(config:viewService:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.resolveEntitiesInStructuredData(_:options:)(uint64_t a1, uint64_t a2)
{
  sub_1B299F5F0();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 120) + **(int **)(v4 + 120));
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_1B299B4A8(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_1B2AC9ADC;
  return v9(a1, a2);
}

uint64_t dispatch thunk of EntityResolutionRankingService.rankEntities(_:options:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.similarity(entity1:entity2:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.recordStatefulFeedback(_:)(uint64_t a1)
{
  sub_1B299F5F0();
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(v2 + 144) + **(int **)(v2 + 144));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_1B299B4A8(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1B2AC9AC0;
  return v7(a1);
}

uint64_t dispatch thunk of EntityResolutionRankingService.recordDirectFeedback(engaged:rejected:ignored:neverPresented:)()
{
  sub_1B2ACA23C();
  sub_1B299F5F0();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_1B299B4A8(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1B2AC6360;
  uint64_t v3 = sub_1B2AC9DA4();
  return v4(v3);
}

uint64_t sub_1B2AC6360()
{
  sub_1B299B708();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

void type metadata accessor for EntityResolutionRankingService.Configuration()
{
}

uint64_t sub_1B2AC6438()
{
  return sub_1B2AC6C74();
}

uint64_t *sub_1B2AC6444(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1B2AC6544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2AC65C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2AC6650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B2AC66CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2AC6750(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B2AC6894);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

void sub_1B2AC68A8(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1B2AC6A84);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFE)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            *unint64_t v17 = 0;
            *(_DWORD *)unint64_t v17 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *unint64_t v17 = a2;
          }
        }
        else
        {
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for EntityResolutionRankingService.UnresolvedMentions()
{
  return sub_1B29A1278();
}

uint64_t destroy for EntityResolutionRankingService.CandidateConstraint(uint64_t a1)
{
  return sub_1B2ABB9CC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int16 *)(a1 + 32), *(unsigned char *)(a1 + 34));
}

uint64_t initializeWithCopy for EntityResolutionRankingService.CandidateConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 34);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 32);
  sub_1B2ABB8B0(*(void *)a2, v4, v5, v6, v8, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 34) = v7;
  return a1;
}

uint64_t assignWithCopy for EntityResolutionRankingService.CandidateConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 34);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 32);
  sub_1B2ABB8B0(*(void *)a2, v4, v5, v6, v8, v7);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v13 = *(unsigned __int16 *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v8;
  char v14 = *(unsigned char *)(a1 + 34);
  *(unsigned char *)(a1 + 34) = v7;
  sub_1B2ABB9CC(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for EntityResolutionRankingService.CandidateConstraint(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 34);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  uint64_t v10 = *(unsigned __int16 *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v3;
  char v11 = *(unsigned char *)(a1 + 34);
  *(unsigned char *)(a1 + 34) = v4;
  sub_1B2ABB9CC(v5, v7, v6, v8, v10, v11);
  return a1;
}

void type metadata accessor for EntityResolutionRankingService.CandidateConstraint()
{
}

uint64_t type metadata accessor for EntityResolutionRankingService.MentionedEntities()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2AC6C68()
{
  return sub_1B2AC6C74();
}

uint64_t sub_1B2AC6C74()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B2AC6D08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *char v4 = *a2;
    char v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    char v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1B2AC6E0C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AC6E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2AC6F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1B2AC6F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B2AC7014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1B2AC70A0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B2AC71DCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1B2AC71F0(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1B2AC73C0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *unint64_t v17 = v18;
        }
        else
        {
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t destroy for EntityResolutionRankingService.RankingOptions(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 42) != 255)
  {
    uint64_t v2 = *(unsigned __int16 *)(a1 + 40) | (*(unsigned __int8 *)(a1 + 42) << 16);
    sub_1B2ABB9CC(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), v2, SBYTE2(v2));
  }
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);

  return sub_1B2AC5440(v3, v4);
}

uint64_t initializeWithCopy for EntityResolutionRankingService.RankingOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  char v4 = (_OWORD *)(a1 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 42);
  int v6 = *(unsigned __int16 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *char v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
    *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
  }
  else
  {
    uint64_t v8 = v6 & 0xFF00FFFF | (v5 << 16);
    uint64_t v9 = *(void *)(a2 + 8);
    uint64_t v10 = *(void *)(a2 + 16);
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    sub_1B2ABB8B0(v9, v10, v11, v12, v8, SBYTE2(v8));
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 42) = BYTE2(v8);
  }
  uint64_t v13 = *(void *)(a2 + 48);
  char v14 = *(unsigned char *)(a2 + 56);
  sub_1B2AC542C(v13, v14);
  *(void *)(a1 + 48) = v13;
  *(unsigned char *)(a1 + 56) = v14;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t assignWithCopy for EntityResolutionRankingService.RankingOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v4 = (long long *)(a1 + 8);
  unsigned __int8 v5 = (long long *)(a2 + 8);
  int v6 = *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16);
  char v7 = *(unsigned char *)(a2 + 42);
  if (*(unsigned __int8 *)(a1 + 42) == 255)
  {
    if (*(unsigned __int8 *)(a2 + 42) == 255)
    {
      long long v8 = *v5;
      long long v9 = *(_OWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
      *char v4 = v8;
      *(_OWORD *)(a1 + 24) = v9;
    }
    else
    {
      uint64_t v12 = *(void *)(a2 + 8);
      uint64_t v13 = *(void *)(a2 + 16);
      uint64_t v14 = *(void *)(a2 + 24);
      uint64_t v15 = *(void *)(a2 + 32);
      sub_1B2ABB8B0(v12, v13, v14, v15, *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16), v7);
      *(void *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = v14;
      *(void *)(a1 + 32) = v15;
      *(_WORD *)(a1 + 40) = v6;
      *(unsigned char *)(a1 + 42) = BYTE2(v6);
    }
  }
  else if (*(unsigned __int8 *)(a2 + 42) == 255)
  {
    sub_1B2ABBEEC(a1 + 8);
    int v10 = *(_DWORD *)(a2 + 39);
    long long v11 = *(_OWORD *)(a2 + 24);
    *char v4 = *v5;
    *(_OWORD *)(a1 + 24) = v11;
    *(_DWORD *)(a1 + 39) = v10;
  }
  else
  {
    uint64_t v16 = *(void *)(a2 + 8);
    uint64_t v17 = *(void *)(a2 + 16);
    uint64_t v18 = *(void *)(a2 + 24);
    uint64_t v19 = *(void *)(a2 + 32);
    sub_1B2ABB8B0(v16, v17, v18, v19, *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16), v7);
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = *(void *)(a1 + 16);
    uint64_t v22 = *(void *)(a1 + 24);
    uint64_t v23 = *(void *)(a1 + 32);
    *(void *)(a1 + 8) = v16;
    *(void *)(a1 + 16) = v17;
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v19;
    uint64_t v24 = *(unsigned __int16 *)(a1 + 40);
    *(_WORD *)(a1 + 40) = v6;
    char v25 = *(unsigned char *)(a1 + 42);
    *(unsigned char *)(a1 + 42) = BYTE2(v6);
    sub_1B2ABB9CC(v20, v21, v22, v23, v24, v25);
  }
  uint64_t v26 = *(void *)(a2 + 48);
  char v27 = *(unsigned char *)(a2 + 56);
  sub_1B2AC542C(v26, v27);
  uint64_t v28 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v26;
  char v29 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v27;
  sub_1B2AC5440(v28, v29);
  uint64_t v30 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v30;
  return a1;
}

uint64_t assignWithTake for EntityResolutionRankingService.RankingOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 42) != 255)
  {
    unsigned int v4 = *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16);
    if (HIWORD(v4) <= 0xFEu)
    {
      uint64_t v6 = *(unsigned __int16 *)(a1 + 40) | (*(unsigned __int8 *)(a1 + 42) << 16);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      uint64_t v10 = *(void *)(a1 + 32);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_WORD *)(a1 + 40) = v4;
      *(unsigned char *)(a1 + 42) = BYTE2(v4);
      sub_1B2ABB9CC(v7, v8, v9, v10, v6, SBYTE2(v6));
      goto LABEL_6;
    }
    sub_1B2ABBEEC(a1 + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
LABEL_6:
  char v11 = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  char v13 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v11;
  sub_1B2AC5440(v12, v13);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityResolutionRankingService.RankingOptions(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 73))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionRankingService.RankingOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

void type metadata accessor for EntityResolutionRankingService.RankingOptions()
{
}

uint64_t initializeBufferWithCopyOfBuffer for EntityResolutionRankingService.RankingType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1B2AC542C(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for EntityResolutionRankingService.RankingType(uint64_t a1)
{
  return sub_1B2AC5440(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t *assignWithCopy for EntityResolutionRankingService.RankingType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B2AC7FE8(a1, a2, a3, (void (*)(void, void))sub_1B2AC542C, (void (*)(uint64_t, uint64_t))sub_1B2AC5440);
}

uint64_t assignWithTake for EntityResolutionRankingService.RankingType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1B2AC5440(v4, v5);
  return a1;
}

void type metadata accessor for EntityResolutionRankingService.RankingType()
{
}

void type metadata accessor for EntityResolutionRankingService.RankingFilter()
{
}

uint64_t getEnumTagSinglePayload for InferenceServiceCachePolicy(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for InferenceServiceCachePolicy(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1B2AC7988(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B2AC79A4(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 8) = v2;
  return result;
}

void type metadata accessor for EntityResolutionRankingService.RankingMode()
{
}

void type metadata accessor for EntityResolutionRankingService.EntityResolutionMode()
{
}

uint64_t method lookup function for EntityResolutionRankingService.Explanation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EntityResolutionRankingService.Explanation);
}

uint64_t dispatch thunk of EntityResolutionRankingService.Explanation.__allocating_init(positiveContributions:negativeContributions:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.Explanation.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for EntityResolutionRankingService.Explanation.Feature(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EntityResolutionRankingService.Explanation.Feature);
}

uint64_t dispatch thunk of EntityResolutionRankingService.Explanation.Feature.__allocating_init(name:value:zScore:importance:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.Explanation.Feature.__allocating_init(from:)()
{
  sub_1B2AC9FF8();
  return v0();
}

void *initializeBufferWithCopyOfBuffer for EntityResolutionRankingService.RankedEntities(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s20IntelligencePlatform30EntityResolutionRankingServiceC14RankedEntitiesVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for EntityResolutionRankingService.RankedEntities(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void type metadata accessor for EntityResolutionRankingService.RankedEntities()
{
}

uint64_t type metadata accessor for EntityResolutionRankingService.RankedEntities.ScoredEntity()
{
  return self;
}

uint64_t method lookup function for EntityResolutionRankingService.RankedEntities.ScoredEntity(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EntityResolutionRankingService.RankedEntities.ScoredEntity);
}

uint64_t dispatch thunk of EntityResolutionRankingService.RankedEntities.ScoredEntity.__allocating_init(id:score:explanation:inferenceEventId:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.RankedEntities.ScoredEntity.entityRelevanceExplanation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.RankedEntities.ScoredEntity.entityRelevanceExplanation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.RankedEntities.ScoredEntity.entityRelevanceExplanation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_1B2AC7C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 1 >= 3)
  {
    if (a5) {
      return result;
    }
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2AC7C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 1 >= 3)
  {
    if (a5) {
      return result;
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void type metadata accessor for StructuredInput()
{
}

uint64_t _s20IntelligencePlatform15StructuredInputV4DataOwxx_0(uint64_t a1)
{
  return sub_1B2AC7C74(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t _s20IntelligencePlatform15StructuredInputV4DataOwcp_0(uint64_t a1, uint64_t a2)
{
  sub_1B299B950(a1, a2);
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v4;
  *(void *)(v2 + 16) = v5;
  *(void *)(v2 + 24) = v6;
  *(unsigned char *)(v2 + 32) = v7;
  return v2;
}

uint64_t _s20IntelligencePlatform15StructuredInputV4DataOwca_0(uint64_t a1, uint64_t a2)
{
  sub_1B299B950(a1, a2);
  uint64_t v8 = *(void *)v2;
  uint64_t v9 = *(void *)(v2 + 8);
  uint64_t v10 = *(void *)(v2 + 16);
  uint64_t v11 = *(void *)(v2 + 24);
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v4;
  *(void *)(v2 + 16) = v5;
  *(void *)(v2 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v2 + 32) = v7;
  sub_1B2AC7C74(v8, v9, v10, v11, v12);
  return v2;
}

uint64_t _s20IntelligencePlatform15StructuredInputV4DataOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1B2AC7C74(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t _s20IntelligencePlatform15StructuredInputV4DataOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return sub_1B2ABB6B8(-1);
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 33)) {
    return sub_1B2ABB6B8(*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 > 3) {
    return sub_1B2ABB6B8(v3 ^ 0xFF);
  }
  else {
    return sub_1B2ABB6B8(-1);
  }
}

uint64_t storeEnumTagSinglePayload for InferenceServerErrorInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B2AC7E6C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1B2AC7E74(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

void type metadata accessor for StructuredInput.Data()
{
}

uint64_t method lookup function for EntityResolutionRankingStatefulFeedback(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EntityResolutionRankingStatefulFeedback);
}

uint64_t dispatch thunk of EntityResolutionRankingStatefulFeedback.__allocating_init(kind:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of EntityResolutionRankingStatefulFeedback.variant.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of EntityResolutionRankingStatefulFeedback.processImmediately.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of EntityResolutionRankingStatefulFeedback.encode(to:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of EntityResolutionRankingStatefulFeedback.__allocating_init(from:)()
{
  sub_1B2AC9FF8();
  return v0();
}

uint64_t initializeBufferWithCopyOfBuffer for EntityResolutionRankingStatefulFeedback.FeedbackKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1B2AC7F98(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1B2AC7F98(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 4u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for EntityResolutionRankingStatefulFeedback.FeedbackKind(uint64_t a1)
{
  return sub_1B2AC580C(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t *assignWithCopy for EntityResolutionRankingStatefulFeedback.FeedbackKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B2AC7FE8(a1, a2, a3, (void (*)(void, void))sub_1B2AC7F98, (void (*)(uint64_t, uint64_t))sub_1B2AC580C);
}

uint64_t *sub_1B2AC7FE8(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, void), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  unsigned __int8 v8 = *((unsigned char *)a2 + 8);
  a4(*a2, v8);
  uint64_t v9 = *a1;
  *a1 = v7;
  uint64_t v10 = *((unsigned __int8 *)a1 + 8);
  *((unsigned char *)a1 + 8) = v8;
  a5(v9, v10);
  return a1;
}

uint64_t assignWithTake for EntityResolutionRankingStatefulFeedback.FeedbackKind(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1B2AC580C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityResolutionRankingStatefulFeedback.FeedbackKind(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionRankingStatefulFeedback.FeedbackKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B2AC810C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1B2AC8114(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

void type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind()
{
}

uint64_t method lookup function for EntityResolutionRankingDirectFeedback(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EntityResolutionRankingDirectFeedback);
}

uint64_t dispatch thunk of EntityResolutionRankingDirectFeedback.__allocating_init(kind:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of EntityResolutionRankingDirectFeedback.variant.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of EntityResolutionRankingDirectFeedback.processImmediately.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of EntityResolutionRankingDirectFeedback.encode(to:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of EntityResolutionRankingDirectFeedback.__allocating_init(from:)()
{
  sub_1B2AC9FF8();
  return v0();
}

void type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind()
{
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.CodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind.CodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind.UnsetCodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.UnsetCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind.EngagedCodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.EngagedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind.RejectedCodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.RejectedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind.IgnoredCodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.IgnoredCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind.NeverPresentedCodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.NeverPresentedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.CodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind.CodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind.UnSetCodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.UnSetCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind.AppearedCodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.AppearedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind.AcceptedCodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.AcceptedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind.RejectedCodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.RejectedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind.DisappearedCodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.DisappearedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.Explanation.CodingKeys()
{
  return &type metadata for EntityResolutionRankingService.Explanation.CodingKeys;
}

uint64_t _s20IntelligencePlatform30EntityResolutionRankingServiceC20EntityResolutionModeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_1B2ABB6B8(-1);
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_1B2ABB6B8((*a1 | (v4 << 8)) - 4);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_1B2ABB6B8((*a1 | (v4 << 8)) - 4);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_1B2ABB6B8((*a1 | (v4 << 8)) - 4);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return sub_1B2ABB6B8(v8);
}

unsigned char *_s20IntelligencePlatform30EntityResolutionRankingServiceC20EntityResolutionModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_1B2ABB6B0((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_1B2ABB698((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AC8434);
      case 4:
        uint64_t result = (unsigned char *)sub_1B2ABB6A0((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_1B2ABB6A8(result, a2 + 3);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.Explanation.Feature.CodingKeys()
{
  return &type metadata for EntityResolutionRankingService.Explanation.Feature.CodingKeys;
}

unsigned char *_s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackC12FeedbackKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_1B2ABB6B0((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_1B2ABB698((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AC8528);
      case 4:
        uint64_t result = (unsigned char *)sub_1B2ABB6A0((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_1B2ABB6A8(result, a2 + 4);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.CandidateConstraint.CodingKeys()
{
  return &type metadata for EntityResolutionRankingService.CandidateConstraint.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.CandidateConstraint.HasPredicateCodingKeys()
{
  return &type metadata for EntityResolutionRankingService.CandidateConstraint.HasPredicateCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.CandidateConstraint.ExcludeCodingKeys()
{
  return &type metadata for EntityResolutionRankingService.CandidateConstraint.ExcludeCodingKeys;
}

unsigned char *_s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackC10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2AC861CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.CandidateConstraint.SubsetCodingKeys()
{
  return &type metadata for EntityResolutionRankingService.CandidateConstraint.SubsetCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.CandidateConstraint.AndCodingKeys()
{
  return &type metadata for EntityResolutionRankingService.CandidateConstraint.AndCodingKeys;
}

unsigned char *_s20IntelligencePlatform30EntityResolutionRankingServiceC13RankingFilterOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_1B2ABB6B0((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_1B2ABB698((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AC8720);
      case 4:
        uint64_t result = (unsigned char *)sub_1B2ABB6A0((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_1B2ABB6A8(result, a2 + 1);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.CandidateConstraint.OrCodingKeys()
{
  return &type metadata for EntityResolutionRankingService.CandidateConstraint.OrCodingKeys;
}

unint64_t sub_1B2AC875C()
{
  unint64_t result = qword_1E9C3CFE8;
  if (!qword_1E9C3CFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CFE8);
  }
  return result;
}

unint64_t sub_1B2AC87AC()
{
  unint64_t result = qword_1E9C3CFF0;
  if (!qword_1E9C3CFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CFF0);
  }
  return result;
}

unint64_t sub_1B2AC87FC()
{
  unint64_t result = qword_1E9C3CFF8;
  if (!qword_1E9C3CFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3CFF8);
  }
  return result;
}

unint64_t sub_1B2AC884C()
{
  unint64_t result = qword_1E9C3D000;
  if (!qword_1E9C3D000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D000);
  }
  return result;
}

unint64_t sub_1B2AC889C()
{
  unint64_t result = qword_1E9C3D008;
  if (!qword_1E9C3D008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D008);
  }
  return result;
}

unint64_t sub_1B2AC88EC()
{
  unint64_t result = qword_1E9C3D010;
  if (!qword_1E9C3D010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D010);
  }
  return result;
}

unint64_t sub_1B2AC893C()
{
  unint64_t result = qword_1E9C3D018;
  if (!qword_1E9C3D018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D018);
  }
  return result;
}

unint64_t sub_1B2AC898C()
{
  unint64_t result = qword_1E9C3D020;
  if (!qword_1E9C3D020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D020);
  }
  return result;
}

unint64_t sub_1B2AC89DC()
{
  unint64_t result = qword_1E9C3D028;
  if (!qword_1E9C3D028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D028);
  }
  return result;
}

unint64_t sub_1B2AC8A2C()
{
  unint64_t result = qword_1E9C3D030;
  if (!qword_1E9C3D030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D030);
  }
  return result;
}

unint64_t sub_1B2AC8A7C()
{
  unint64_t result = qword_1E9C3D038;
  if (!qword_1E9C3D038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D038);
  }
  return result;
}

unint64_t sub_1B2AC8ACC()
{
  unint64_t result = qword_1E9C3D040;
  if (!qword_1E9C3D040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D040);
  }
  return result;
}

unint64_t sub_1B2AC8B1C()
{
  unint64_t result = qword_1E9C3D048;
  if (!qword_1E9C3D048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D048);
  }
  return result;
}

unint64_t sub_1B2AC8B6C()
{
  unint64_t result = qword_1E9C3D050;
  if (!qword_1E9C3D050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D050);
  }
  return result;
}

unint64_t sub_1B2AC8BBC()
{
  unint64_t result = qword_1E9C3D058;
  if (!qword_1E9C3D058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D058);
  }
  return result;
}

unint64_t sub_1B2AC8C0C()
{
  unint64_t result = qword_1E9C3D060;
  if (!qword_1E9C3D060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D060);
  }
  return result;
}

unint64_t sub_1B2AC8C5C()
{
  unint64_t result = qword_1E9C3D068;
  if (!qword_1E9C3D068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D068);
  }
  return result;
}

unint64_t sub_1B2AC8CAC()
{
  unint64_t result = qword_1E9C3D070;
  if (!qword_1E9C3D070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D070);
  }
  return result;
}

unint64_t sub_1B2AC8CFC()
{
  unint64_t result = qword_1E9C3D078;
  if (!qword_1E9C3D078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D078);
  }
  return result;
}

unint64_t sub_1B2AC8D4C()
{
  unint64_t result = qword_1E9C3D080;
  if (!qword_1E9C3D080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D080);
  }
  return result;
}

unint64_t sub_1B2AC8D9C()
{
  unint64_t result = qword_1E9C3D088;
  if (!qword_1E9C3D088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D088);
  }
  return result;
}

unint64_t sub_1B2AC8DEC()
{
  unint64_t result = qword_1E9C3D090;
  if (!qword_1E9C3D090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D090);
  }
  return result;
}

unint64_t sub_1B2AC8E3C()
{
  unint64_t result = qword_1E9C3D098;
  if (!qword_1E9C3D098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D098);
  }
  return result;
}

unint64_t sub_1B2AC8E8C()
{
  unint64_t result = qword_1E9C3D0A0;
  if (!qword_1E9C3D0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D0A0);
  }
  return result;
}

unint64_t sub_1B2AC8EDC()
{
  unint64_t result = qword_1E9C3D0A8;
  if (!qword_1E9C3D0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D0A8);
  }
  return result;
}

unint64_t sub_1B2AC8F2C()
{
  unint64_t result = qword_1E9C3D0B0;
  if (!qword_1E9C3D0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D0B0);
  }
  return result;
}

unint64_t sub_1B2AC8F7C()
{
  unint64_t result = qword_1E9C3D0B8;
  if (!qword_1E9C3D0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D0B8);
  }
  return result;
}

unint64_t sub_1B2AC8FCC()
{
  unint64_t result = qword_1E9C3D0C0;
  if (!qword_1E9C3D0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D0C0);
  }
  return result;
}

unint64_t sub_1B2AC901C()
{
  unint64_t result = qword_1E9C3D0C8;
  if (!qword_1E9C3D0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D0C8);
  }
  return result;
}

unint64_t sub_1B2AC906C()
{
  unint64_t result = qword_1E9C3D0D0;
  if (!qword_1E9C3D0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D0D0);
  }
  return result;
}

unint64_t sub_1B2AC90BC()
{
  unint64_t result = qword_1E9C3D0D8;
  if (!qword_1E9C3D0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D0D8);
  }
  return result;
}

unint64_t sub_1B2AC910C()
{
  unint64_t result = qword_1E9C3D0E0;
  if (!qword_1E9C3D0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D0E0);
  }
  return result;
}

unint64_t sub_1B2AC915C()
{
  unint64_t result = qword_1E9C3D0E8;
  if (!qword_1E9C3D0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D0E8);
  }
  return result;
}

unint64_t sub_1B2AC91AC()
{
  unint64_t result = qword_1E9C3D0F0;
  if (!qword_1E9C3D0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D0F0);
  }
  return result;
}

unint64_t sub_1B2AC91FC()
{
  unint64_t result = qword_1E9C3D0F8;
  if (!qword_1E9C3D0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D0F8);
  }
  return result;
}

unint64_t sub_1B2AC924C()
{
  unint64_t result = qword_1E9C3D100;
  if (!qword_1E9C3D100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D100);
  }
  return result;
}

unint64_t sub_1B2AC929C()
{
  unint64_t result = qword_1E9C3D108;
  if (!qword_1E9C3D108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D108);
  }
  return result;
}

unint64_t sub_1B2AC92EC()
{
  unint64_t result = qword_1E9C3D110;
  if (!qword_1E9C3D110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D110);
  }
  return result;
}

unint64_t sub_1B2AC933C()
{
  unint64_t result = qword_1E9C3D118;
  if (!qword_1E9C3D118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D118);
  }
  return result;
}

unint64_t sub_1B2AC938C()
{
  unint64_t result = qword_1E9C3D120;
  if (!qword_1E9C3D120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D120);
  }
  return result;
}

unint64_t sub_1B2AC93DC()
{
  unint64_t result = qword_1E9C3D128;
  if (!qword_1E9C3D128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D128);
  }
  return result;
}

unint64_t sub_1B2AC942C()
{
  unint64_t result = qword_1E9C3D130;
  if (!qword_1E9C3D130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D130);
  }
  return result;
}

unint64_t sub_1B2AC947C()
{
  unint64_t result = qword_1E9C3D138;
  if (!qword_1E9C3D138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D138);
  }
  return result;
}

unint64_t sub_1B2AC94CC()
{
  unint64_t result = qword_1E9C3D140;
  if (!qword_1E9C3D140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D140);
  }
  return result;
}

unint64_t sub_1B2AC951C()
{
  unint64_t result = qword_1E9C3D148;
  if (!qword_1E9C3D148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D148);
  }
  return result;
}

unint64_t sub_1B2AC956C()
{
  unint64_t result = qword_1E9C38640;
  if (!qword_1E9C38640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38640);
  }
  return result;
}

unint64_t sub_1B2AC95BC()
{
  unint64_t result = qword_1E9C38638;
  if (!qword_1E9C38638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38638);
  }
  return result;
}

unint64_t sub_1B2AC960C()
{
  unint64_t result = qword_1E9C38658;
  if (!qword_1E9C38658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38658);
  }
  return result;
}

unint64_t sub_1B2AC965C()
{
  unint64_t result = qword_1E9C38650;
  if (!qword_1E9C38650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38650);
  }
  return result;
}

unint64_t sub_1B2AC96AC()
{
  unint64_t result = qword_1E9C3D150;
  if (!qword_1E9C3D150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D150);
  }
  return result;
}

unint64_t sub_1B2AC96FC()
{
  unint64_t result = qword_1E9C3D158;
  if (!qword_1E9C3D158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D158);
  }
  return result;
}

unint64_t sub_1B2AC974C()
{
  unint64_t result = qword_1E9C3D160;
  if (!qword_1E9C3D160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D160);
  }
  return result;
}

unint64_t sub_1B2AC979C()
{
  unint64_t result = qword_1E9C3D168;
  if (!qword_1E9C3D168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D168);
  }
  return result;
}

unint64_t sub_1B2AC97EC()
{
  unint64_t result = qword_1E9C3D170;
  if (!qword_1E9C3D170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D170);
  }
  return result;
}

unint64_t sub_1B2AC983C()
{
  unint64_t result = qword_1E9C3D178;
  if (!qword_1E9C3D178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D178);
  }
  return result;
}

unint64_t sub_1B2AC988C()
{
  unint64_t result = qword_1E9C3D180;
  if (!qword_1E9C3D180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D180);
  }
  return result;
}

unint64_t sub_1B2AC98DC()
{
  unint64_t result = qword_1E9C3D188;
  if (!qword_1E9C3D188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D188);
  }
  return result;
}

unint64_t sub_1B2AC992C()
{
  unint64_t result = qword_1E9C3D190;
  if (!qword_1E9C3D190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D190);
  }
  return result;
}

unint64_t sub_1B2AC997C()
{
  unint64_t result = qword_1E9C3D198;
  if (!qword_1E9C3D198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D198);
  }
  return result;
}

unint64_t sub_1B2AC99CC()
{
  unint64_t result = qword_1E9C3D1A0;
  if (!qword_1E9C3D1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D1A0);
  }
  return result;
}

unint64_t sub_1B2AC9A1C()
{
  unint64_t result = qword_1E9C3D1A8;
  if (!qword_1E9C3D1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D1A8);
  }
  return result;
}

unint64_t sub_1B2AC9A68()
{
  unint64_t result = qword_1E9C3D1B0;
  if (!qword_1E9C3D1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D1B0);
  }
  return result;
}

void sub_1B2AC9AE0()
{
  sub_1B29B8848();
}

uint64_t sub_1B2AC9B04()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2AC9B28()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B2AC9B6C()
{
  return sub_1B2E83278();
}

uint64_t sub_1B2AC9B94()
{
  return sub_1B2E83618();
}

void sub_1B2AC9BB4()
{
  *(void *)(v0 + 16) = v2;
  uint64_t v5 = v0 + 16 * v4;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v1;
}

uint64_t sub_1B2AC9BC8()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B2AC9BE8()
{
  return sub_1B2E83618();
}

uint64_t sub_1B2AC9C0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = v1;
  *(void *)(v2 - 208) = a1;
  return result;
}

uint64_t sub_1B2AC9C34()
{
  return v0;
}

uint64_t sub_1B2AC9C58()
{
  return sub_1B2E83548();
}

uint64_t sub_1B2AC9C78()
{
  return sub_1B2AA6AA8(v0, v1);
}

uint64_t sub_1B2AC9CB4()
{
  return v0;
}

uint64_t sub_1B2AC9CC8(uint64_t a1)
{
  *(unsigned char *)(a1 + 16) = v1;
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1B2AC9CE4()
{
  return v0;
}

uint64_t sub_1B2AC9D04()
{
  return v0;
}

uint64_t _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0()
{
  return v0;
}

uint64_t sub_1B2AC9D1C()
{
  return v0;
}

uint64_t sub_1B2AC9D2C()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2AC9D58()
{
  return sub_1B2E83618();
}

uint64_t sub_1B2AC9D78()
{
  return v0;
}

uint64_t sub_1B2AC9D88(int a1)
{
  *(_DWORD *)(v2 - 208) = a1;
  return v1;
}

uint64_t sub_1B2AC9DA4()
{
  return v0;
}

void sub_1B2AC9DC0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1B2AC9DDC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1B2AC9DF8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1B2AC9E14(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1B2AC9E30(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1B2AC9E4C()
{
  *(void *)(v0 - 72) = *(void *)(v0 - 112);
}

uint64_t sub_1B2AC9E58()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2AC9E7C()
{
  return v0;
}

uint64_t sub_1B2AC9E94()
{
  return v0;
}

uint64_t sub_1B2AC9EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32,uint64_t a33)
{
  return sub_1B2ABB9CC(a13, a29, a30, a33, a32, a27);
}

uint64_t sub_1B2AC9ED0()
{
  return sub_1B2E836A8();
}

uint64_t sub_1B2AC9EEC()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B2AC9F10()
{
  return *(void *)(v0 - 160);
}

uint64_t sub_1B2AC9F28()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B2AC9F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v35 = *(void *)(v33 - 176);
  uint64_t v36 = *(void *)(v33 - 200);
  uint64_t v37 = *(void *)(v33 - 192);
  uint64_t v38 = *(unsigned int *)(v33 - 180);
  return sub_1B2ABB9CC(a33, v35, v36, v37, v38, 4);
}

uint64_t sub_1B2AC9F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v35 = *(void *)(v33 - 176);
  uint64_t v36 = *(void *)(v33 - 200);
  uint64_t v37 = *(void *)(v33 - 192);
  uint64_t v38 = *(unsigned int *)(v33 - 180);
  return sub_1B2ABB9CC(a33, v35, v36, v37, v38, 3);
}

uint64_t sub_1B2AC9F94()
{
  return sub_1B2E83588();
}

uint64_t sub_1B2AC9FB0()
{
  return v0;
}

uint64_t sub_1B2AC9FBC()
{
  return v0;
}

uint64_t sub_1B2AC9FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(v3 - 272);
  uint64_t v6 = *(unsigned int *)(v3 - 264);
  int v7 = *(_DWORD *)(v3 - 256);
  return sub_1B2ABB9CC(a1, a2, a3, v5, v6, v7);
}

uint64_t sub_1B2ACA008()
{
  return v0 - 72;
}

uint64_t sub_1B2ACA014()
{
  return v0;
}

uint64_t sub_1B2ACA024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned int a27,uint64_t a28)
{
  return sub_1B2ABB9CC(a28, a13, a26, a12, a27, a11);
}

uint64_t sub_1B2ACA048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned int a27,uint64_t a28)
{
  return sub_1B2ABB9CC(a28, a13, a12, a26, a27, a11);
}

uint64_t sub_1B2ACA06C(uint64_t a1)
{
  return sub_1B2ABB9CC(a1, v4, v2, v3, v5, v1);
}

uint64_t sub_1B2ACA090()
{
  return v0;
}

uint64_t sub_1B2ACA0A8()
{
  return sub_1B2E83668();
}

uint64_t sub_1B2ACA0DC()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2ACA0FC()
{
  return v0;
}

uint64_t sub_1B2ACA11C(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_1B2ACA128()
{
  return sub_1B2E83998();
}

uint64_t sub_1B2ACA140()
{
  return v0;
}

void *sub_1B2ACA16C(void *a1)
{
  return sub_1B29AEC7C(a1, v1);
}

uint64_t sub_1B2ACA188()
{
  return sub_1B2E83618();
}

uint64_t sub_1B2ACA1A8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 248);
  uint64_t v4 = *(void *)(v1 - 240);
  uint64_t v5 = *(void *)(v1 - 232);
  uint64_t v6 = *(unsigned int *)(v1 - 224);
  int v7 = *(_DWORD *)(v1 - 216);
  return sub_1B2ABB9CC(a1, v3, v4, v5, v6, v7);
}

uint64_t sub_1B2ACA1C8(uint64_t a1, uint64_t a2)
{
  return sub_1B2ABB9CC(a1, a2, v3, v4, v5, v2);
}

uint64_t sub_1B2ACA1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)(v6 - 224) = v5;
  *(_DWORD *)(v6 - 216) = v4;
  return sub_1B2ABB8B0(a1, a2, a3, a4, v5, v4);
}

uint64_t sub_1B2ACA208()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2ACA228()
{
  return v0;
}

uint64_t sub_1B2ACA250()
{
  return v0;
}

uint64_t sub_1B2ACA25C()
{
  return v0;
}

uint64_t sub_1B2ACA268()
{
  *(_WORD *)(v2 - 136) = v1;
  *(unsigned char *)(v2 - 134) = v0;
  return static EntityResolutionRankingService.CandidateConstraint.== infix(_:_:)(v2 - 128, v2 - 168);
}

uint64_t sub_1B2ACA288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32)
{
  return sub_1B2ABB9CC(a29, a13, a14, a30, a32, a27);
}

uint64_t sub_1B2ACA2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1B29C06C0();
    uint64_t v17 = a2;
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = v19;
    if (!v6) {
      uint64_t v6 = v5;
    }
    uint64_t v18 = v6;
    int v8 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v9 = *(v8 - 3);
      uint64_t v10 = *(v8 - 2);
      uint64_t v11 = *(v8 - 1);
      uint64_t v12 = *v8;
      unint64_t v14 = *(void *)(v19 + 16);
      unint64_t v13 = *(void *)(v19 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1) {
        sub_1B29C06C0();
      }
      v8 += 4;
      *(void *)(v19 + 16) = v14 + 1;
      uint64_t v15 = v19 + 80 * v14;
      *(void *)(v15 + 32) = v9;
      *(void *)(v15 + 40) = v10;
      *(void *)(v15 + 48) = v11;
      *(void *)(v15 + 56) = v12;
      *(void *)(v15 + 64) = 0;
      *(void *)(v15 + 72) = 0;
      *(void *)(v15 + 80) = 0;
      *(void *)(v15 + 88) = v18;
      *(void *)(v15 + 96) = 0;
      *(unsigned char *)(v15 + 104) = 1;
      --v3;
    }
    while (v3);
    sub_1B2AB51F4(v17);
  }
  else
  {
    sub_1B2AB51F4(a2);
    return MEMORY[0x1E4FBC860];
  }
  return v7;
}

uint64_t sub_1B2ACA3F4(void *__src, unsigned char *a2, uint64_t a3, uint64_t a4, char a5)
{
  memcpy(__dst, __src, 0x7AuLL);
  char v11 = a2[139];
  char v12 = a2[140];
  uint64_t v13 = *(void *)(a4 + 16);
  memcpy((void *)(v5 + 16), __src, 0x7AuLL);
  memcpy((void *)(v5 + 144), a2, 0x8BuLL);
  *(unsigned char *)(v5 + 283) = v11;
  *(unsigned char *)(v5 + 284) = v12;
  *(unsigned char *)(v5 + 285) = a5;
  *(void *)(v5 + 288) = a3;
  *(unsigned char *)(v5 + 296) = v11;
  *(_OWORD *)(v5 + 304) = *(_OWORD *)a4;
  *(void *)(v5 + 320) = v13;
  sub_1B2AB5138((uint64_t)__dst);
  if (qword_1EB7E2888 != -1) {
    swift_once();
  }
  uint64_t v14 = *(void *)(qword_1EB7F3468 + 16);
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1B2D49EB0(v14);
  sub_1B2AB51F4((uint64_t)__dst);
  *(void *)(v5 + 328) = v15;
  return v5;
}

uint64_t sub_1B2ACA524()
{
  uint64_t v2 = v0;
  sub_1B299C02C();
  static NSUserDefaults.ecrRankerResultsMockFile.getter();
  if (v3)
  {
    if (qword_1EB7E3A20 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1B2E81FB8();
    sub_1B29A4B98(v4, (uint64_t)qword_1EB7E4AD8);
    uint64_t v5 = sub_1B2E81F98();
    os_log_type_t v6 = sub_1B2E82D98();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)sub_1B299B8CC();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1B2996000, v5, v6, "ECR request manager: using mocked results.", v7, 2u);
      sub_1B299B750();
    }

    uint64_t v8 = sub_1B2AB2B2C();
    swift_bridgeObjectRelease();
    return v8;
  }
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1B2E81FB8();
  uint64_t v10 = sub_1B29A4B98(v9, (uint64_t)qword_1EB7E4AD8);
  sub_1B2AD0D64();
  char v11 = sub_1B2E81F98();
  os_log_type_t v12 = sub_1B2E82DD8();
  uint64_t v8 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v184 = v10;
    uint64_t v13 = sub_1B2AD0E24();
    uint64_t v173 = sub_1B2AD0E0C();
    uint64_t v204 = v173;
    *(_DWORD *)uint64_t v13 = 136315395;
    uint64_t v15 = *(void *)(v0 + 48);
    uint64_t v14 = *(void *)(v0 + 56);
    swift_bridgeObjectRetain();
    sub_1B29BF6BC(v15, v14, (uint64_t)&v204, v16, v17, v18, v19, v20, v144, v151, type, v166, v173, v184, v191, *((uint64_t *)&v191 + 1), v192, *((uint64_t *)&v192 + 1), v193,
      v194);
    *(void *)&long long v191 = v21;
    sub_1B2E82FB8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2085;
    char v22 = *(unsigned char *)(v0 + 64);
    __int16 v23 = *(_WORD *)(v0 + 104);
    char v24 = *(unsigned char *)(v0 + 106);
    uint64_t v25 = *(void *)(v0 + 128);
    char v26 = *(unsigned char *)(v0 + 136);
    char v27 = *(unsigned char *)(v0 + 137);
    long long v28 = *(_OWORD *)(v0 + 32);
    long long v191 = *(_OWORD *)(v0 + 16);
    long long v192 = v28;
    uint64_t v193 = v15;
    uint64_t v194 = v14;
    char v195 = v22;
    long long v196 = *(_OWORD *)(v0 + 72);
    long long v197 = *(_OWORD *)(v0 + 88);
    char v199 = v24;
    __int16 v198 = v23;
    long long v200 = *(_OWORD *)(v0 + 112);
    uint64_t v201 = v25;
    char v202 = v26;
    char v203 = v27;
    uint64_t v29 = EntityResolutionRequest.description.getter();
    sub_1B29BF6BC(v29, v30, (uint64_t)&v204, v31, v32, v33, v34, v35, v145, v152, typeb, v167, v174, v185, v191, *((uint64_t *)&v191 + 1), v192, *((uint64_t *)&v192 + 1), v15,
      v14);
    *(void *)&long long v191 = v36;
    sub_1B2E82FB8();
    sub_1B2AD0CD8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B2996000, v11, (os_log_type_t)v8, "ECR Request Submitted -- %s : %{sensitive}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    sub_1B299B750();
    uint64_t v10 = v183;
    sub_1B299B750();
  }
  else
  {

    sub_1B2AD0CD8();
  }
  sub_1B2AD0D98();
  uint64_t v37 = sub_1B2ACAED8();
  if (!v1)
  {
    uint64_t v40 = v37;
    unint64_t v41 = v38;
    LODWORD(v166) = v39;
    swift_bridgeObjectRetain_n();
    sub_1B2AD0D64();
    uint64_t v42 = sub_1B2E81F98();
    os_log_type_t v43 = sub_1B2E82D98();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v175 = v40;
      uint64_t v44 = sub_1B2AD0E24();
      uint64_t typec = sub_1B2AD0E0C();
      *(_DWORD *)uint64_t v44 = 136315394;
      uint64_t v186 = v10;
      uint64_t v45 = v2;
      uint64_t v46 = swift_bridgeObjectRetain();
      sub_1B2AD0D7C(v46, v47, v48, v49, v50, v51, v52, v53, v144, v151, typec, v166, v175, v186, typec, *((uint64_t *)&v191 + 1), v192, *((uint64_t *)&v192 + 1), v193,
        v194);
      sub_1B2AD0DF4(v54);
      sub_1B2E82FB8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      if (v41) {
        uint64_t v1 = v176;
      }
      else {
        uint64_t v1 = 0;
      }
      if (v41) {
        uint64_t v55 = v41;
      }
      else {
        uint64_t v55 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      sub_1B29BF6BC(v1, v55, (uint64_t)&v191, v56, v57, v58, v59, v60, v146, v153, typea, v168, v176, v187, v191, *((uint64_t *)&v191 + 1), v192, *((uint64_t *)&v192 + 1), v193,
        v194);
      uint64_t v204 = v61;
      sub_1B2E82FB8();
      sub_1B2AD0E60();
      uint64_t v2 = v45;
      uint64_t v10 = v183;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B2996000, v42, v43, "Preprocessed text -- %s : %s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      sub_1B299B750();
      uint64_t v40 = *(void *)v177;
      sub_1B299B750();
    }
    else
    {

      sub_1B2AD0E60();
      sub_1B2AD0CD8();
    }
    sub_1B2AD0D98();
    uint64_t v64 = sub_1B2ACB674(v62, v63);
    if (v1)
    {
      uint64_t v8 = v41;
      goto LABEL_34;
    }
    uint64_t v8 = (uint64_t)v64;
    sub_1B2AD0D64();
    swift_bridgeObjectRetain_n();
    uint64_t v65 = sub_1B2E81F98();
    os_log_type_t v66 = sub_1B2E82D98();
    int v67 = v66;
    unint64_t v154 = v41;
    uint64_t v178 = v40;
    if (os_log_type_enabled(v65, v66))
    {
      LODWORD(type) = v67;
      uint64_t v68 = sub_1B2AD0E24();
      uint64_t v147 = sub_1B2AD0E0C();
      *(_DWORD *)uint64_t v68 = 136315394;
      *(void *)&long long v191 = v147;
      uint64_t v1 = *(void *)(v2 + 48);
      uint64_t v69 = swift_bridgeObjectRetain();
      sub_1B2AD0D7C(v69, v70, v71, v72, v73, v74, v75, v76, v147, v41, type, v166, v40, v10, v191, *((uint64_t *)&v191 + 1), v192, *((uint64_t *)&v192 + 1), v193,
        v194);
      uint64_t v204 = v77;
      sub_1B2E82FB8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2080;
      uint64_t v78 = swift_bridgeObjectRetain();
      uint64_t v79 = MEMORY[0x1B3EB1020](v78, &type metadata for Mention);
      uint64_t v81 = v80;
      swift_bridgeObjectRelease();
      sub_1B29BF6BC(v79, v81, (uint64_t)&v191, v82, v83, v84, v85, v86, v148, v155, typed, v169, v179, v188, v191, *((uint64_t *)&v191 + 1), v192, *((uint64_t *)&v192 + 1), v193,
        v194);
      uint64_t v204 = v87;
      uint64_t v10 = v183;
      sub_1B2E82FB8();
      sub_1B2AD0E48();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B2996000, v65, (os_log_type_t)type, "Mentions -- %s : %s", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {

      sub_1B2AD0E48();
      sub_1B2AD0CD8();
    }
    sub_1B2AD0D98();
    uint64_t v91 = sub_1B2ACC248(v88, v89, v90);
    if (!v1)
    {
      uint64_t v92 = v91;
      uint64_t v170 = v8;
      sub_1B2AD0D64();
      swift_bridgeObjectRetain_n();
      uint64_t v93 = sub_1B2E81F98();
      os_log_type_t v94 = sub_1B2E82D98();
      int v95 = v94;
      if (os_log_type_enabled(v93, v94))
      {
        uint64_t v96 = sub_1B2AD0E24();
        uint64_t typee = sub_1B2AD0E0C();
        *(void *)&long long v191 = typee;
        *(_DWORD *)uint64_t v96 = 136315394;
        LODWORD(v144) = v95;
        uint64_t v97 = swift_bridgeObjectRetain();
        sub_1B2AD0D7C(v97, v98, v99, v100, v101, v102, v103, v104, v144, v154, typee, v8, v178, v183, v191, *((uint64_t *)&v191 + 1), v192, *((uint64_t *)&v192 + 1), v193,
          v194);
        sub_1B2AD0DF4(v105);
        sub_1B2E82FB8();
        sub_1B2AD0CD8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v96 + 12) = 2080;
        uint64_t v1 = type metadata accessor for PopulatedCandidatesForMention();
        uint64_t v106 = swift_bridgeObjectRetain();
        uint64_t v107 = MEMORY[0x1B3EB1020](v106, v1);
        uint64_t v109 = v108;
        swift_bridgeObjectRelease();
        sub_1B29BF6BC(v107, v109, (uint64_t)&v191, v110, v111, v112, v113, v114, v149, v156, typef, v171, v180, v10, v191, *((uint64_t *)&v191 + 1), v192, *((uint64_t *)&v192 + 1), v193,
          v194);
        uint64_t v204 = v115;
        sub_1B2E82FB8();
        sub_1B2AD0E60();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B2996000, v93, (os_log_type_t)v144, "Candidates retrieved -- %s : %s", (uint8_t *)v96, 0x16u);
        swift_arrayDestroy();
        sub_1B299B750();
        sub_1B299B750();
      }
      else
      {

        sub_1B2AD0E60();
        sub_1B2AD0CD8();
      }
      sub_1B2AD0D98();
      uint64_t v8 = (uint64_t)sub_1B2ACCF40(v116, v117, v118, v119);
      swift_bridgeObjectRelease();
      if (!v1)
      {
        swift_bridgeObjectRelease();
        sub_1B2AD0D64();
        swift_bridgeObjectRetain_n();
        uint64_t v121 = sub_1B2E81F98();
        os_log_type_t v122 = sub_1B2E82D98();
        int v123 = v122;
        if (os_log_type_enabled(v121, v122))
        {
          uint64_t v124 = sub_1B2AD0E24();
          uint64_t v189 = sub_1B2AD0E0C();
          *(void *)&long long v191 = v189;
          *(_DWORD *)uint64_t v124 = 136315394;
          uint64_t v1 = *(void *)(v2 + 48);
          uint64_t v125 = *(void *)(v2 + 56);
          swift_bridgeObjectRetain();
          sub_1B29BF6BC(v1, v125, (uint64_t)&v191, v126, v127, v128, v129, v130, v144, v154, type, v170, v178, v189, v191, *((uint64_t *)&v191 + 1), v192, *((uint64_t *)&v192 + 1), v193,
            v194);
          uint64_t v204 = v131;
          sub_1B2E82FB8();
          sub_1B2AD0CD8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v124 + 12) = 2080;
          LODWORD(v181) = v123;
          uint64_t v132 = swift_bridgeObjectRetain();
          uint64_t v133 = MEMORY[0x1B3EB1020](v132, &type metadata for RerankedEntitiesForMention);
          uint64_t v135 = v134;
          swift_bridgeObjectRelease();
          sub_1B29BF6BC(v133, v135, (uint64_t)&v191, v136, v137, v138, v139, v140, v150, v157, typeg, v172, v181, v190, v191, *((uint64_t *)&v191 + 1), v192, *((uint64_t *)&v192 + 1), v193,
            v194);
          uint64_t v204 = v141;
          sub_1B2E82FB8();
          sub_1B2AD0E48();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1B2996000, v121, v182, "Ranked results -- %s : %s", (uint8_t *)v124, 0x16u);
          swift_arrayDestroy();
          sub_1B299B750();
          sub_1B299B750();
        }
        else
        {

          sub_1B2AD0E48();
          sub_1B2AD0CD8();
        }
        if (*(unsigned char *)(v2 + 285) == 1)
        {
          sub_1B2AD0D98();
          sub_1B2ACD4F8(v142, v143);
          swift_bridgeObjectRelease();
          if (!v1) {
            return v8;
          }
        }
LABEL_34:
        swift_bridgeObjectRelease();
        return v8;
      }
      uint64_t v8 = v92;
    }
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  return v8;
}

uint64_t sub_1B2ACAED8()
{
  uint64_t v1 = v0;
  uint64_t v46 = sub_1B2E81F08();
  uint64_t v2 = *(void *)(v46 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  os_log_type_t v6 = (char *)v42 - v5;
  uint64_t v7 = sub_1B2E81FB8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1B2E81F38();
  uint64_t v11 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for LogSignpost();
  MEMORY[0x1F4188790](v43);
  uint64_t v56 = (void *)((char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1B29A4B98(v7, (uint64_t)qword_1EB7E6600);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v15, v7);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v16 = sub_1B2E81F28();
  os_signpost_type_t v17 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    os_signpost_id_t v19 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v16, v17, v19, "ECR.Manager.preprocess", "", v18, 2u);
    MEMORY[0x1B3EB30C0](v18, -1, -1);
  }

  uint64_t v20 = v46;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v45, v6, v46);
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v21 = sub_1B2E81F68();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v20);
  uint64_t v22 = (uint64_t)v56;
  *uint64_t v56 = "ECR.Manager.preprocess";
  *(void *)(v22 + 8) = 22;
  *(unsigned char *)(v22 + 16) = 2;
  *(void *)(v22 + 24) = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v22 + *(int *)(v43 + 24), v13, v44);
  uint64_t v23 = *(void *)(v1 + 16);
  unint64_t v24 = *(void *)(v1 + 24);
  memcpy(v51, (const void *)(v1 + 32), 0x50uLL);
  uint64_t v25 = *(void *)(v1 + 112);
  long long v52 = *(_OWORD *)(v1 + 120);
  __int16 v53 = *(_WORD *)(v1 + 136);
  uint64_t v49 = v23;
  unint64_t v50 = v24;
  v51[10] = v25;
  if ((sub_1B2AAC8CC() & 1) == 0)
  {
    if (v25)
    {
      unint64_t v31 = *(void *)(v25 + 16);
      int64_t v32 = *(void *)(v1 + 176);
      int v33 = *(unsigned __int8 *)(v1 + 184);
      if (v33 == 1)
      {
        if (v31 <= 0x64) {
          goto LABEL_20;
        }
      }
      else if (v32 >= (uint64_t)v31)
      {
        goto LABEL_20;
      }
      uint64_t v49 = 0;
      unint64_t v50 = 0xE000000000000000;
      sub_1B2E831F8();
      sub_1B2E82518();
      unint64_t v47 = v31;
      sub_1B2E83748();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      unint64_t v47 = v32;
      char v48 = v33;
      sub_1B29A3EB4(&qword_1E9C3D1C0);
      sub_1B2E823E8();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      uint64_t v35 = v49;
      unint64_t v36 = v50;
      sub_1B2A1F13C();
      swift_allocError();
      *(void *)uint64_t v34 = v35;
      *(void *)(v34 + 8) = v36;
      goto LABEL_24;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  if (!v24) {
    goto LABEL_21;
  }
  uint64_t v26 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
  }
  if (!v26)
  {
LABEL_21:
    sub_1B2A1F13C();
    swift_allocError();
    *(_OWORD *)uint64_t v34 = xmmword_1B2ECFD70;
LABEL_24:
    *(unsigned char *)(v34 + 16) = 2;
    swift_willThrow();
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B2A1D354(v23, v24);
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  if (v29)
  {
    if (v27 == 32 && v29 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B2E837A8();
      swift_bridgeObjectRelease();
    }
  }
  long long v37 = *(_OWORD *)(v1 + 160);
  v54[0] = *(_OWORD *)(v1 + 144);
  v54[1] = v37;
  v54[2] = *(_OWORD *)(v1 + 176);
  uint64_t v55 = *(void *)(v1 + 192);
  swift_bridgeObjectRetain();
  sub_1B2DD7248((uint64_t)v54, (uint64_t)&v49);
  uint64_t v38 = v51[5];
  uint64_t v39 = v42[1];
  uint64_t v40 = sub_1B2DD7528(v23, v24);
  if (!v39) {
    uint64_t v23 = v40;
  }
  swift_bridgeObjectRelease();
  sub_1B2AD0AE0(v38);
LABEL_29:
  sub_1B2AD0778(v22);
  sub_1B2AD0BA4(v22, (void (*)(void))type metadata accessor for LogSignpost);
  return v23;
}

unsigned char *sub_1B2ACB674(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v83 = a1;
  unint64_t v84 = a2;
  uint64_t v4 = sub_1B2E81F08();
  uint64_t v91 = *(void *)(v4 - 8);
  uint64_t v92 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  int v90 = &v80[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v80[-v7];
  uint64_t v9 = sub_1B2E81FB8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v80[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1B2E81F38();
  uint64_t v88 = *(void *)(v13 - 8);
  uint64_t v89 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = &v80[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v87 = type metadata accessor for LogSignpost();
  MEMORY[0x1F4188790](v87);
  os_signpost_type_t v17 = &v80[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1B29A4B98(v9, (uint64_t)qword_1EB7E6600);
  os_signpost_id_t v19 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v85 = v9;
  v19(v12, v18, v9);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v20 = sub_1B2E81F28();
  os_signpost_type_t v21 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v22 = v17;
    uint64_t v23 = v3;
    unint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v24 = 0;
    os_signpost_id_t v25 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v20, v21, v25, "ECR.Manager.mengen", "", v24, 2u);
    uint64_t v26 = v24;
    uint64_t v3 = v23;
    os_signpost_type_t v17 = v22;
    MEMORY[0x1B3EB30C0](v26, -1, -1);
  }

  uint64_t v27 = v91;
  uint64_t v28 = v92;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v91 + 16))(v90, v8, v92);
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v29 = sub_1B2E81F68();
  (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v8, v28);
  *(void *)os_signpost_type_t v17 = "ECR.Manager.mengen";
  *((void *)v17 + 1) = 18;
  v17[16] = 2;
  *((void *)v17 + 3) = v29;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v88 + 32))(&v17[*(int *)(v87 + 24)], v15, v89);
  double Current = CFAbsoluteTimeGetCurrent();
  memcpy(__dst, (const void *)(v3 + 16), 0x7AuLL);
  memcpy(v94, (const void *)(v3 + 16), 0x7AuLL);
  sub_1B2AACADC((uint64_t)&v95);
  uint64_t v31 = v96;
  uint64_t v93 = v17;
  if (v96 == 1)
  {
    memcpy(v94, __dst, 0x7AuLL);
    sub_1B2AACF8C((uint64_t)&v95);
    uint64_t v32 = v96;
    if (v96 == 1)
    {
      memcpy(v94, __dst, 0x7AuLL);
      sub_1B2AB5138((uint64_t)__dst);
      if (sub_1B2AAC8CC())
      {
        sub_1B29C4020((uint64_t)&__dst[3], (uint64_t)v106, &qword_1EB7D97A8);
        sub_1B29C4020((uint64_t)v106, (uint64_t)&v107, &qword_1EB7D97A8);
        uint64_t v33 = v107;
        if (v107)
        {
          sub_1B2AB5138((uint64_t)__dst);
          uint64_t v15 = (unsigned char *)sub_1B2ACA2A8(v33, (uint64_t)__dst);
          sub_1B2AB51F4((uint64_t)__dst);
          uint64_t v34 = v85;
          if (qword_1EB7E3A20 != -1) {
            swift_once();
          }
          sub_1B29A4B98(v34, (uint64_t)qword_1EB7E4AD8);
          swift_bridgeObjectRetain();
          uint64_t v35 = sub_1B2E81F98();
          os_log_type_t v36 = sub_1B2E82DD8();
          if (os_log_type_enabled(v35, v36))
          {
            long long v37 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)long long v37 = 134217984;
            v94[0] = *((void *)v15 + 2);
            sub_1B2E82FB8();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1B2996000, v35, v36, "ECR request manager: generate %ld preset mentions.", v37, 0xCu);
            uint64_t v38 = v37;
LABEL_49:
            MEMORY[0x1B3EB30C0](v38, -1, -1);

            goto LABEL_36;
          }
          goto LABEL_51;
        }
      }
      sub_1B2AB51F4((uint64_t)__dst);
      uint64_t v68 = v85;
      uint64_t v67 = v86;
      if (v84)
      {
        if (__dst[2]) {
          uint64_t v69 = __dst[2];
        }
        else {
          uint64_t v69 = MEMORY[0x1E4FBC860];
        }
        if (*(unsigned char *)(v3 + 256))
        {
          if (*(unsigned char *)(v3 + 256) == 1)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v70 = sub_1B2D50F70(v83, v84, v69);
            if (v67)
            {
              swift_bridgeObjectRelease();
LABEL_40:
              swift_bridgeObjectRelease();
              goto LABEL_36;
            }
            uint64_t v15 = (unsigned char *)v70;
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            uint64_t v75 = sub_1B2D5146C(v83, v84);
            if (v67) {
              goto LABEL_40;
            }
            uint64_t v15 = (unsigned char *)v75;
          }
        }
        else
        {
          uint64_t v74 = sub_1B2D50E98(v83, v84, v69);
          if (v67)
          {
            swift_bridgeObjectRetain();
            goto LABEL_40;
          }
          uint64_t v15 = (unsigned char *)v74;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        if (v15)
        {
          uint64_t v76 = *((void *)v15 + 2);
          sub_1B2A9A188(v76);
          if (qword_1EB7E3A20 != -1) {
            swift_once();
          }
          sub_1B29A4B98(v68, (uint64_t)qword_1EB7E4AD8);
          swift_bridgeObjectRetain();
          uint64_t v35 = sub_1B2E81F98();
          os_log_type_t v77 = sub_1B2E82DD8();
          if (os_log_type_enabled(v35, v77))
          {
            uint64_t v78 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v78 = 134217984;
            v94[0] = v76;
            sub_1B2E82FB8();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1B2996000, v35, v77, "ECR request manager: generate %ld mentions from unstructured input.", v78, 0xCu);
            uint64_t v38 = v78;
            goto LABEL_49;
          }
LABEL_51:

          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
      }
      sub_1B2A1F13C();
      swift_allocError();
      *(void *)uint64_t v79 = 0xD00000000000002FLL;
      *(void *)(v79 + 8) = 0x80000001B2E9A4B0;
      *(unsigned char *)(v79 + 16) = 3;
      swift_willThrow();
      goto LABEL_36;
    }
    uint64_t v91 = v3;
    unint64_t v50 = v95;
    unint64_t v51 = v97;
    uint64_t v52 = v98;
    uint64_t v53 = v99;
    uint64_t v92 = v100;
    uint64_t v89 = v102;
    int v90 = v101;
    uint64_t v88 = v103;
    LODWORD(v87) = v104;
    if (qword_1EB7E3A20 != -1) {
      swift_once();
    }
    sub_1B29A4B98(v85, (uint64_t)qword_1EB7E4AD8);
    uint64_t v54 = sub_1B2E81F98();
    os_log_type_t v55 = sub_1B2E82DD8();
    if (os_log_type_enabled(v54, v55))
    {
      unint64_t v56 = v51;
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl(&dword_1B2996000, v54, v55, "ECR request manager: generate semi-structured mentions.", v57, 2u);
      uint64_t v58 = v57;
      unint64_t v51 = v56;
      MEMORY[0x1B3EB30C0](v58, -1, -1);
    }

    sub_1B29A3EB4((uint64_t *)&unk_1EB7D9920);
    uint64_t v59 = swift_allocObject();
    uint64_t v15 = (unsigned char *)v59;
    *(_OWORD *)(v59 + 16) = xmmword_1B2EC00A0;
    *(void *)(v59 + 32) = v50;
    *(void *)(v59 + 40) = v32;
    *(void *)(v59 + 48) = v51;
    *(void *)(v59 + 56) = v52;
    uint64_t v60 = v92;
    *(void *)(v59 + 64) = v53;
    *(void *)(v59 + 72) = v60;
    uint64_t v61 = v89;
    *(void *)(v59 + 80) = v90;
    *(void *)(v59 + 88) = v61;
    *(void *)(v59 + 96) = v88;
    char v62 = v87;
  }
  else
  {
    uint64_t v39 = v98;
    unint64_t v83 = v95;
    unint64_t v84 = v97;
    uint64_t v40 = v99;
    uint64_t v87 = v100;
    unint64_t v41 = v101;
    uint64_t v91 = v3;
    uint64_t v92 = v102;
    uint64_t v42 = v103;
    int v43 = v104;
    if (qword_1EB7E3A20 != -1) {
      swift_once();
    }
    sub_1B29A4B98(v85, (uint64_t)qword_1EB7E4AD8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1B2E81F98();
    int v45 = sub_1B2E82DD8();
    BOOL v46 = os_log_type_enabled(v44, (os_log_type_t)v45);
    uint64_t v89 = v42;
    int v90 = (unsigned char *)v40;
    LODWORD(v88) = v43;
    if (v46)
    {
      int v81 = v45;
      os_log_t v82 = v44;
      uint64_t v85 = v39;
      unint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v47 = 134217984;
      char v48 = v41;
      if (v40) {
        uint64_t v49 = *(void *)(v40 + 16);
      }
      else {
        uint64_t v49 = 0;
      }
      v94[0] = v49;
      sub_1B2E82FB8();
      unint64_t v64 = v83;
      unint64_t v63 = v84;
      uint64_t v66 = v85;
      uint64_t v65 = v87;
      sub_1B2AD0A78(v83, v31);
      uint64_t v44 = v82;
      _os_log_impl(&dword_1B2996000, v82, (os_log_type_t)v81, "ECR request manager: generate structured mentions for %ld IDs.", v47, 0xCu);
      MEMORY[0x1B3EB30C0](v47, -1, -1);
    }
    else
    {
      char v48 = v41;
      unint64_t v64 = v83;
      unint64_t v63 = v84;
      uint64_t v65 = v87;
      sub_1B2AD0A78(v83, v31);
      uint64_t v66 = v39;
    }

    sub_1B29A3EB4((uint64_t *)&unk_1EB7D9920);
    uint64_t v59 = swift_allocObject();
    uint64_t v15 = (unsigned char *)v59;
    *(_OWORD *)(v59 + 16) = xmmword_1B2EC00A0;
    *(void *)(v59 + 32) = v64;
    *(void *)(v59 + 40) = v31;
    *(void *)(v59 + 48) = v63;
    *(void *)(v59 + 56) = v66;
    *(void *)(v59 + 64) = v90;
    *(void *)(v59 + 72) = v65;
    uint64_t v71 = v92;
    *(void *)(v59 + 80) = v48;
    *(void *)(v59 + 88) = v71;
    *(void *)(v59 + 96) = v89;
    char v62 = v88;
  }
  *(unsigned char *)(v59 + 104) = v62 & 1;
  uint64_t v3 = v91;
LABEL_36:
  uint64_t v72 = (uint64_t)v93;
  sub_1B2ACDC14(Current, v3, (uint64_t)v93, 1);
  sub_1B2AD0BA4(v72, (void (*)(void))type metadata accessor for LogSignpost);
  return v15;
}

uint64_t sub_1B2ACC248(uint64_t a1, int a2, int a3)
{
  uint64_t v4 = v3;
  LODWORD(v91) = a3;
  LODWORD(v90) = a2;
  uint64_t v72 = a1;
  unint64_t v5 = sub_1B2E81F08();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t)&v62 - v10;
  uint64_t v12 = sub_1B2E81FB8();
  unint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1B2E81F38();
  unint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v17 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for LogSignpost();
  MEMORY[0x1F4188790](v92);
  uint64_t v71 = (uint64_t *)((char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EB7E6618 != -1) {
LABEL_57:
  }
    swift_once();
  uint64_t v19 = sub_1B29A4B98(v12, (uint64_t)qword_1EB7E6600);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v65 = v12;
  v20(v15, v19, v12);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  unint64_t v13 = sub_1B2E81F28();
  uint64_t v12 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    os_signpost_type_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v89 = v6;
    uint64_t v22 = v9;
    unint64_t v23 = v5;
    uint64_t v24 = v4;
    os_signpost_id_t v25 = v21;
    *(_WORD *)os_signpost_type_t v21 = 0;
    os_signpost_id_t v26 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, (os_log_t)v13, (os_signpost_type_t)v12, v26, "ECR.Manager.cangen", "", v25, 2u);
    uint64_t v27 = v25;
    uint64_t v4 = v24;
    unint64_t v5 = v23;
    uint64_t v9 = v22;
    uint64_t v6 = v89;
    MEMORY[0x1B3EB30C0](v27, -1, -1);
  }

  (*(void (**)(char *, uint64_t, unint64_t))(v6 + 16))(v9, v11, v5);
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v28 = sub_1B2E81F68();
  (*(void (**)(uint64_t, unint64_t))(v6 + 8))(v11, v5);
  uint64_t v29 = v71;
  *uint64_t v71 = "ECR.Manager.cangen";
  v29[1] = 18;
  *((unsigned char *)v29 + 16) = 2;
  v29[3] = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))((char *)v29 + *(int *)(v92 + 24), v17, v94);
  double Current = CFAbsoluteTimeGetCurrent();
  unint64_t v108 = MEMORY[0x1E4FBC860];
  uint64_t v6 = v72;
  uint64_t v15 = *(char **)(v72 + 16);
  if (v15)
  {
    unint64_t v5 = *(void *)(v4 + 288);
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_1B2E83448();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v88 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v9 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = v6 + 32;
    unint64_t v77 = v5 & 0xC000000000000001;
    unsigned int v76 = v90 & 1;
    unsigned int v75 = v91 & 1;
    uint64_t v67 = v4;
    unint64_t v73 = v5;
    unint64_t v64 = v15;
    uint64_t v63 = v6 + 32;
    while (1)
    {
      if (v31 == v15)
      {
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      if (!v88) {
        break;
      }
      uint64_t v33 = v32 + 80 * (void)v31;
      uint64_t v85 = *(void *)v33;
      long long v34 = *(_OWORD *)(v33 + 8);
      uint64_t v82 = *(void *)(v33 + 24);
      long long v35 = *(_OWORD *)(v33 + 32);
      uint64_t v36 = *(void *)(v33 + 48);
      long long v37 = *(_OWORD *)(v33 + 56);
      int v78 = *(unsigned __int8 *)(v33 + 72);
      uint64_t v66 = v31 + 1;
      uint64_t v11 = *(void *)(v4 + 72);
      uint64_t v87 = *(void *)(v4 + 80);
      unint64_t v86 = *(void *)(v4 + 88);
      uint64_t v84 = *(void *)(v4 + 96);
      unsigned int v80 = *(unsigned __int16 *)(v4 + 104) | (*(unsigned __int8 *)(v4 + 106) << 16);
      long long v83 = v34;
      uint64_t v38 = v34;
      long long v81 = v35;
      uint64_t v39 = v35;
      long long v79 = v37;
      uint64_t v68 = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v70 = v38;
      swift_bridgeObjectRetain();
      uint64_t v69 = v39;
      swift_bridgeObjectRetain();
      uint64_t v89 = v36;
      swift_bridgeObjectRetain();
      uint64_t v91 = 0;
      unint64_t v13 = 4;
      uint64_t v74 = (char *)v11;
      do
      {
        uint64_t v12 = v13 - 4;
        if (v77)
        {
          uint64_t v15 = (char *)MEMORY[0x1B3EB1A20](v13 - 4, v5);
        }
        else
        {
          uint64_t v15 = *(char **)(v5 + 8 * v13);
          swift_retain();
        }
        uint64_t v6 = v87;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        unint64_t v93 = v13;
        uint64_t v92 = v13 - 3;
        unint64_t v40 = v5;
        uint64_t v101 = (char *)v85;
        long long v102 = v83;
        uint64_t v103 = v82;
        long long v104 = v81;
        uint64_t v105 = v89;
        long long v106 = v79;
        char v107 = v78;
        *(void *)&long long v96 = v11;
        *((void *)&v96 + 1) = v87;
        unint64_t v5 = v86;
        uint64_t v4 = v11;
        uint64_t v41 = v84;
        uint64_t v97 = v86;
        uint64_t v98 = v84;
        uint64_t v17 = v80;
        char v100 = BYTE2(v80);
        __int16 v99 = v80;
        sub_1B2A9DBC0(v4, v87, v86, v84, v80);
        uint64_t v94 = (uint64_t)v15;
        uint64_t v42 = v95;
        uint64_t v43 = sub_1B2A26C70((uint64_t *)&v101, &v96, v76, v75, (uint64_t)sub_1B2A26BE8, 0);
        uint64_t v15 = v42;
        if (v42)
        {
          swift_release();
          swift_release();
          sub_1B2A2272C(v4, v6, v5, v41, v17);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v4 = v67;
          goto LABEL_41;
        }
        uint64_t v12 = v43;
        sub_1B2A2272C(v4, v6, v5, v41, v17);
        unint64_t v44 = v91;
        unint64_t v95 = 0;
        if (v91)
        {
          int v90 = v9;
          swift_beginAccess();
          uint64_t v17 = *(void *)(v12 + 16);
          swift_beginAccess();
          uint64_t v11 = *(void *)(v17 + 16);
          uint64_t v9 = *(char **)(v44 + 16);
          unint64_t v45 = v44;
          unint64_t v13 = *((void *)v9 + 2);
          uint64_t v6 = v13 + v11;
          if (__OFADD__(v13, v11)) {
            goto LABEL_52;
          }
          unint64_t v5 = v45;
          swift_retain();
          swift_bridgeObjectRetain();
          if (!swift_isUniquelyReferenced_nonNull_native() || v6 > *((void *)v9 + 3) >> 1)
          {
            sub_1B29B8A38();
            uint64_t v9 = v46;
          }
          if (*(void *)(v17 + 16))
          {
            uint64_t v47 = *((void *)v9 + 2);
            if ((*((void *)v9 + 3) >> 1) - v47 < v11) {
              goto LABEL_54;
            }
            unint64_t v48 = (unint64_t)&v9[296 * v47 + 32];
            if (v17 + 32 < v48 + 296 * v11 && v48 < v17 + 32 + 296 * v11)
            {
              uint64_t result = sub_1B2E834A8();
              __break(1u);
              return result;
            }
            swift_arrayInitWithCopy();
            if (v11)
            {
              uint64_t v50 = *((void *)v9 + 2);
              BOOL v51 = __OFADD__(v50, v11);
              uint64_t v52 = (char *)(v50 + v11);
              if (v51) {
                goto LABEL_55;
              }
              *((void *)v9 + 2) = v52;
            }
          }
          else if (v11)
          {
            goto LABEL_53;
          }
          swift_bridgeObjectRelease();
          *(void *)(v5 + 16) = v9;
          swift_endAccess();
          swift_release();
          swift_release();
          uint64_t v9 = v90;
          unint64_t v5 = v73;
          uint64_t v11 = (uint64_t)v74;
        }
        else
        {
          swift_release();
          swift_retain();
          uint64_t v91 = v12;
          unint64_t v5 = v40;
          uint64_t v11 = v4;
        }
        swift_beginAccess();
        uint64_t v15 = *(char **)(v12 + 16);
        swift_bridgeObjectRetain();
        swift_release();
        uint64_t v6 = *((void *)v15 + 2);
        swift_bridgeObjectRelease();
        BOOL v51 = __OFADD__(v9, v6);
        v9 += v6;
        unint64_t v13 = v93;
        if (v51) {
          goto LABEL_51;
        }
        unint64_t v13 = v93 + 1;
      }
      while (v92 != v88);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v53 = swift_retain();
      MEMORY[0x1B3EB0FE0](v53);
      unint64_t v13 = *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v13 >= *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1B2E828A8();
      }
      sub_1B2E828F8();
      sub_1B2E82878();
      swift_release();
      uint64_t v15 = v64;
      uint64_t v31 = v66;
      uint64_t v4 = v67;
      uint64_t v6 = v72;
      uint64_t v32 = v63;
      if (v66 == v64)
      {
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A1F13C();
    swift_allocError();
    *(void *)uint64_t v60 = 0xD000000000000024;
    *(void *)(v60 + 8) = 0x80000001B2E9A460;
    *(unsigned char *)(v60 + 16) = 7;
    swift_willThrow();
LABEL_41:
    uint64_t v54 = v71;
    sub_1B2ACDC14(Current, v4, (uint64_t)v71, 2);
    sub_1B2AD0BA4((uint64_t)v54, (void (*)(void))type metadata accessor for LogSignpost);
  }
  else
  {
    uint64_t v9 = 0;
LABEL_43:
    sub_1B2A9A1A8((uint64_t)v9);
    uint64_t v55 = v65;
    if (qword_1EB7E3A20 != -1) {
      swift_once();
    }
    sub_1B29A4B98(v55, (uint64_t)qword_1EB7E4AD8);
    unint64_t v56 = sub_1B2E81F98();
    os_log_type_t v57 = sub_1B2E82DD8();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 134217984;
      uint64_t v101 = v9;
      sub_1B2E82FB8();
      _os_log_impl(&dword_1B2996000, v56, v57, "ECR request manager: generate %ld candidate entities.", v58, 0xCu);
      MEMORY[0x1B3EB30C0](v58, -1, -1);
    }

    uint64_t v54 = (void *)v108;
    uint64_t v59 = v71;
    sub_1B2ACDC14(Current, v4, (uint64_t)v71, 2);
    sub_1B2AD0BA4((uint64_t)v59, (void (*)(void))type metadata accessor for LogSignpost);
  }
  return (uint64_t)v54;
}

char *sub_1B2ACCF40(unint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v51 = a4;
  uint64_t v48 = a3;
  int v46 = a2;
  unint64_t v47 = a1;
  uint64_t v4 = sub_1B2E81F08();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = sub_1B2E81FB8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1B2E81F38();
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for LogSignpost();
  MEMORY[0x1F4188790](v43);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1B29A4B98(v11, (uint64_t)qword_1EB7E6600);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v19, v11);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v20 = sub_1B2E81F28();
  os_signpost_type_t v21 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = v5;
    unint64_t v23 = v8;
    uint64_t v24 = v4;
    os_signpost_id_t v25 = v22;
    *(_WORD *)uint64_t v22 = 0;
    os_signpost_id_t v26 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v20, v21, v26, "ECR.Manager.rerank", "", v25, 2u);
    uint64_t v27 = v25;
    uint64_t v4 = v24;
    uint64_t v8 = v23;
    uint64_t v5 = v42;
    MEMORY[0x1B3EB30C0](v27, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v28 = sub_1B2E81F68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  *(void *)uint64_t v18 = "ECR.Manager.rerank";
  *((void *)v18 + 1) = 18;
  v18[16] = 2;
  *((void *)v18 + 3) = v28;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(&v18[*(int *)(v43 + 24)], v16, v45);
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v30 = (void *)v50;
  uint64_t v31 = *(void *)(v50 + 304);
  uint64_t v32 = *(void *)(v50 + 312);
  uint64_t v33 = *(void *)(v50 + 320);
  LOBYTE(v52) = *(unsigned char *)(v50 + 296);
  uint64_t v53 = v31;
  v54[0] = v32;
  v54[1] = v33;
  sub_1B2A8E50C(v31, v32);
  uint64_t v34 = v49;
  uint64_t v35 = sub_1B2A89A04(v47, v46 & 1, v48, v51);
  if (v34)
  {
    sub_1B2A8FC80(v31, v32);
    goto LABEL_15;
  }
  uint64_t v8 = (char *)v35;
  sub_1B2A8FC80(v31, v32);
  if (!v8)
  {
    sub_1B2A1F13C();
    swift_allocError();
    *(_OWORD *)uint64_t v38 = xmmword_1B2ECFD80;
    char v39 = 9;
LABEL_14:
    *(unsigned char *)(v38 + 16) = v39;
    swift_willThrow();
    goto LABEL_15;
  }
  uint64_t v37 = v30[2];
  uint64_t v36 = v30[3];
  memcpy(v54, v30 + 4, 0x6AuLL);
  uint64_t v52 = v37;
  uint64_t v53 = v36;
  if ((sub_1B2AAC8CC() & 1) != 0 && (!v36 || !v51))
  {
    swift_bridgeObjectRelease();
    sub_1B2A1F13C();
    swift_allocError();
    *(void *)uint64_t v38 = 0xD000000000000019;
    *(void *)(v38 + 8) = 0x80000001B2E9A420;
    char v39 = 2;
    goto LABEL_14;
  }
LABEL_15:
  sub_1B2ACDC14(Current, (uint64_t)v30, (uint64_t)v18, 3);
  sub_1B2AD0BA4((uint64_t)v18, (void (*)(void))type metadata accessor for LogSignpost);
  return v8;
}

uint64_t sub_1B2ACD4F8(void *a1, void *a2)
{
  uint64_t v68 = a2;
  uint64_t v3 = v2;
  uint64_t v67 = a1;
  v79[36] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1B2E80498();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v66 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v71 = (char *)&v64 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v64 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v64 - v13;
  uint64_t v15 = NSTemporaryDirectory();
  sub_1B2E82378();

  sub_1B2E803E8();
  swift_bridgeObjectRelease();
  sub_1B2E80418();
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  unint64_t v16 = v5 + 8;
  uint64_t v70 = v4;
  uint64_t v18 = v4;
  uint64_t v19 = v17;
  v17(v12, v18);
  id v20 = objc_msgSend(self, sel_defaultManager);
  uint64_t v72 = v14;
  sub_1B2E80468();
  os_signpost_type_t v21 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  v79[0] = 0;
  unsigned int v22 = objc_msgSend(v20, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v21, 1, 0, v79);

  if (v22)
  {
    unint64_t v64 = v19;
    unint64_t v65 = v16;
    v76[0] = 0;
    v76[1] = 0xE000000000000000;
    id v23 = v79[0];
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    v76[0] = 0x65736E6F70736572;
    v76[1] = 0xE90000000000005FLL;
    uint64_t v24 = *(void *)(v3 + 48);
    uint64_t v25 = *(void *)(v3 + 56);
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    uint64_t v26 = (uint64_t)v72;
    sub_1B2E80428();
    swift_bridgeObjectRelease();
    char v27 = *(unsigned char *)(v3 + 64);
    __int16 v28 = *(_WORD *)(v3 + 104);
    char v29 = *(unsigned char *)(v3 + 106);
    uint64_t v30 = *(void *)(v3 + 128);
    char v31 = *(unsigned char *)(v3 + 136);
    char v32 = *(unsigned char *)(v3 + 137);
    long long v33 = *(_OWORD *)(v3 + 32);
    v77[0] = *(_OWORD *)(v3 + 16);
    v77[1] = v33;
    *(void *)&v77[2] = v24;
    *((void *)&v77[2] + 1) = v25;
    LOBYTE(v77[3]) = v27;
    *(_OWORD *)((char *)&v77[3] + 8) = *(_OWORD *)(v3 + 72);
    *(_OWORD *)((char *)&v77[4] + 8) = *(_OWORD *)(v3 + 88);
    BYTE10(v77[5]) = v29;
    WORD4(v77[5]) = v28;
    v77[6] = *(_OWORD *)(v3 + 112);
    *(void *)&v77[7] = v30;
    BYTE8(v77[7]) = v31;
    BYTE9(v77[7]) = v32;
    memcpy(v78, (const void *)(v3 + 144), 0x8DuLL);
    memcpy(v79, v77, 0x7AuLL);
    memcpy(&v79[16], (const void *)(v3 + 144), 0x8DuLL);
    v79[34] = v67;
    v79[35] = v68;
    sub_1B2E7FFF8();
    swift_allocObject();
    sub_1B2AB5138((uint64_t)v77);
    sub_1B2A98298((uint64_t)v78);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2E7FFE8();
    memcpy(v76, v79, sizeof(v76));
    sub_1B2AD0A2C();
    uint64_t v34 = v69;
    uint64_t v35 = sub_1B2E7FFD8();
    uint64_t v37 = (uint64_t)v71;
    if (v34)
    {
      swift_release();
      uint64_t v38 = v70;
      if (qword_1EB7E3A20 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_1B2E81FB8();
      sub_1B29A4B98(v45, (uint64_t)qword_1EB7E4AD8);
      int v46 = v34;
      unint64_t v47 = v34;
      uint64_t v48 = sub_1B2E81F98();
      os_log_type_t v49 = sub_1B2E82DB8();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = (uint8_t *)swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        v76[0] = v51;
        *(_DWORD *)uint64_t v50 = 136315138;
        uint64_t v69 = v50 + 4;
        swift_getErrorValue();
        uint64_t v52 = sub_1B2E838A8();
        sub_1B29BF6BC(v52, v53, (uint64_t)v76, v54, v55, v56, v57, v58, (uint64_t)v64, v65, v66, (uint64_t)v67, (uint64_t)v68, (uint64_t)v69, v70, (uint64_t)v71, (uint64_t)v72, v73, v74,
          v75);
        uint64_t v73 = v59;
        sub_1B2E82FB8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1B2996000, v48, v49, "Failed to write session logger JSON data: %s", v50, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B3EB30C0](v51, -1, -1);
        MEMORY[0x1B3EB30C0](v50, -1, -1);
        sub_1B2AB5884((uint64_t)v79);

        uint64_t v60 = v70;
        uint64_t v61 = v64;
        v64(v71, v70);
        return v61(v72, v60);
      }
      else
      {
        sub_1B2AB5884((uint64_t)v79);

        uint64_t v62 = v64;
        v64(v71, v38);
        return v62(v72, v38);
      }
    }
    else
    {
      uint64_t v41 = v35;
      unint64_t v42 = v36;
      swift_release();
      sub_1B2E80468();
      uint64_t v43 = v66;
      sub_1B2E803E8();
      swift_bridgeObjectRelease();
      sub_1B2E805A8();
      uint64_t v44 = v70;
      sub_1B29C34DC(v41, v42);
      sub_1B2AB5884((uint64_t)v79);
      uint64_t v63 = (void (*)(uint64_t, uint64_t))v64;
      v64((char *)v43, v44);
      v63(v37, v44);
      return ((uint64_t (*)(uint64_t, uint64_t))v63)(v26, v44);
    }
  }
  else
  {
    id v39 = v79[0];
    sub_1B2E80388();

    swift_willThrow();
    return v19(v72, v70);
  }
}

uint64_t sub_1B2ACDC14(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B2E81F48();
  sub_1B299D278();
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  sub_1B2E81F08();
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B299E4A0();
  uint64_t v10 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1B299ADB4();
  sub_1B2A9A044(a4, a1);
  type metadata accessor for LogSignpost();
  sub_1B29A080C();
  v14();
  char v27 = *(const char **)a3;
  char v15 = *(unsigned char *)(a3 + 16);
  swift_retain();
  unint64_t v16 = sub_1B2E81F28();
  sub_1B2E81F58();
  os_signpost_type_t v26 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    sub_1B2AD0DA4();
    v25();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v4, v10);
  }
  if ((v15 & 1) == 0)
  {
    if (v27) {
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v27 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v27 >> 11 != 27)
  {
    if (v27 >> 16 <= 0x10)
    {
      char v27 = &v28;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      uint64_t v18 = sub_1B2999A4C();
      if (v19(v18) == *MEMORY[0x1E4FBD340])
      {
        id v20 = "[Error] Interval already ended";
      }
      else
      {
        uint64_t v21 = sub_1B2AD0DC4();
        v22(v21);
        id v20 = "";
      }
      id v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v23 = 0;
      os_signpost_id_t v24 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v16, v26, v24, v27, v20, v23, 2u);
      MEMORY[0x1B3EB30C0](v23, -1, -1);
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t *sub_1B2ACDEF0()
{
  memcpy(v2, v0 + 2, 0x7AuLL);
  sub_1B2AB51F4((uint64_t)v2);
  memcpy(__dst, v0 + 18, 0x8DuLL);
  sub_1B2A982E4((uint64_t)__dst);
  swift_bridgeObjectRelease();
  sub_1B2A8FC80(v0[38], v0[39]);
  swift_release();
  return v0;
}

uint64_t sub_1B2ACDF64()
{
  sub_1B2ACDEF0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityResolutionRequestManager()
{
  return self;
}

uint64_t sub_1B2ACDFBC(uint64_t a1)
{
  uint64_t v4 = sub_1B2E81868();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B2AD0D10();
  sub_1B2E80498();
  sub_1B299D278();
  MEMORY[0x1F4188790](v8);
  sub_1B299ADB4();
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v2, a1);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v1, *MEMORY[0x1E4FB3B18], v4);
  return sub_1B2E81818();
}

unint64_t sub_1B2ACE0E8(const void *a1, const void *a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, void *a7, void *a8, uint64_t *a9, uint64_t a10, char a11)
{
  uint64_t __dst[18] = *MEMORY[0x1E4F143B8];
  sub_1B29C4020((uint64_t)a5, (uint64_t)&v257, &qword_1EB7D9668);
  uint64_t v192 = v257;
  uint64_t v14 = sub_1B29A3EB4(&qword_1E9C37F30);
  uint64_t v15 = sub_1B299B0F0(v14);
  MEMORY[0x1F4188790](v15);
  sub_1B299B6D0();
  uint64_t v216 = v16;
  uint64_t v202 = sub_1B2E80498();
  sub_1B299D278();
  uint64_t v198 = v17;
  MEMORY[0x1F4188790](v18);
  sub_1B299B6D0();
  uint64_t v201 = v19;
  uint64_t v20 = sub_1B2E81838();
  uint64_t v21 = sub_1B299B0F0(v20);
  MEMORY[0x1F4188790](v21);
  sub_1B299B6D0();
  uint64_t v22 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D96E8);
  uint64_t v23 = sub_1B299B0F0(v22);
  MEMORY[0x1F4188790](v23);
  sub_1B2999940();
  uint64_t v211 = v24;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v25);
  sub_1B29A43C0();
  uint64_t v210 = v26;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v27);
  sub_1B29A43C0();
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v28);
  sub_1B29A43C0();
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v29);
  sub_1B29A43C0();
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v30);
  sub_1B29A43C0();
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v31);
  sub_1B29A43C0();
  uint64_t v200 = v32;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v33);
  sub_1B29A43C0();
  uint64_t v199 = v34;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v35);
  sub_1B29A43C0();
  uint64_t v215 = v36;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v37);
  sub_1B2AD0E78();
  uint64_t v214 = v38;
  uint64_t v39 = sub_1B29A3EB4(&qword_1EB7E2F60);
  uint64_t v40 = sub_1B299B0F0(v39);
  MEMORY[0x1F4188790](v40);
  sub_1B299B6D0();
  uint64_t v227 = v41;
  uint64_t v222 = type metadata accessor for SearchableViewDatabaseTable();
  sub_1B2999864();
  MEMORY[0x1F4188790](v42);
  sub_1B2999940();
  uint64_t v209 = v43;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v44);
  sub_1B29A43C0();
  uint64_t v221 = v45;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v46);
  sub_1B29A43C0();
  uint64_t v213 = v47;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v48);
  sub_1B2AD0E78();
  uint64_t v223 = v49;
  sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v51 = v50;
  MEMORY[0x1F4188790](v52);
  sub_1B2999940();
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v53);
  uint64_t v54 = sub_1B299B4B4();
  sub_1B299D278();
  uint64_t v56 = v55;
  MEMORY[0x1F4188790](v57);
  sub_1B2AD0D10();
  sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v231 = v59;
  uint64_t v233 = v58;
  MEMORY[0x1F4188790](v58);
  sub_1B299E6C4();
  uint64_t v228 = type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v60);
  sub_1B299B6D0();
  uint64_t v212 = v61;
  memcpy(v259, a1, 0x7AuLL);
  memcpy(__dst, a2, 0x8DuLL);
  uint64_t v218 = a4[1];
  uint64_t v219 = *a4;
  uint64_t v196 = a4[3];
  uint64_t v197 = a4[2];
  uint64_t v194 = a4[5];
  uint64_t v195 = a4[4];
  uint64_t v193 = a4[6];
  uint64_t v204 = *a6;
  uint64_t v205 = a6[1];
  uint64_t v206 = a6[2];
  uint64_t v207 = *a9;
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v62 = sub_1B29A4B98(v54, (uint64_t)qword_1EB7E6600);
  uint64_t v203 = v54;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v11, v62, v54);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v63 = sub_1B2E81F28();
  os_signpost_type_t v64 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    unint64_t v65 = (uint8_t *)sub_1B299B8CC();
    *(_WORD *)unint64_t v65 = 0;
    os_signpost_id_t v66 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v63, v64, v66, "ECR.Manager.initWithViews", "", v65, 2u);
    sub_1B299B750();
  }

  sub_1B29A080C();
  v67();
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v68 = (void *)sub_1B2E81F68();
  uint64_t v69 = v51 + 8;
  sub_1B2AD0DA4();
  v70();
  *(void *)uint64_t v212 = "ECR.Manager.initWithViews";
  *(void *)(v212 + 8) = 25;
  *(unsigned char *)(v212 + 16) = 2;
  *(void *)(v212 + 24) = v68;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v231 + 32))(v212 + *(int *)(v228 + 24), v12, v233);
  sub_1B2AD0D2C();
  uint64_t v240 = __dst[15];
  uint64_t v74 = v219;
  if (BYTE1(__dst[17]) == 1)
  {
    sub_1B29C4020((uint64_t)a5, (uint64_t)v258, &qword_1EB7D9668);
    if (v258[0])
    {
      uint64_t v54 = v258[1];
      uint64_t v75 = v258[2];
      uint64_t v76 = v258[3];
      uint64_t v77 = v258[4];
      uint64_t v78 = v258[5];
      uint64_t v68 = (void *)v258[6];
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      uint64_t v73 = v76;
      uint64_t v69 = v75;
      uint64_t v74 = v219;
      uint64_t v72 = v77;
      uint64_t v71 = v78;
    }
    else
    {
      if (qword_1EB7E3A20 != -1) {
        swift_once();
      }
      sub_1B29A4B98(v54, (uint64_t)qword_1EB7E4AD8);
      uint64_t v68 = (void *)sub_1B2E81F98();
      os_log_type_t v79 = sub_1B2E82DB8();
      if (sub_1B2A0F11C(v79))
      {
        *(_WORD *)sub_1B299B8CC() = 0;
        sub_1B29A1994(&dword_1B2996000, v80, v81, "View(entitySummary) is not available.");
        sub_1B299B750();
      }

      sub_1B2AD0D2C();
    }
  }
  uint64_t v232 = v54;
  v258[7] = v54;
  v258[8] = v69;
  v258[9] = v73;
  v258[10] = v72;
  v258[11] = v71;
  v258[12] = v68;
  sub_1B2AD0B20();
  uint64_t v82 = sub_1B2E82148();
  uint64_t v83 = v82;
  uint64_t v238 = v69;
  if (v74)
  {
    static EntityClass.person.getter();
    v252[0] = v255[0];
    v252[1] = v255[1];
    char v253 = v255[2];
    uint64_t v246 = v218;
    uint64_t v247 = v197;
    uint64_t v248 = v196;
    uint64_t v249 = v195;
    uint64_t v250 = v194;
    uint64_t v251 = v193;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    v256[0] = v83;
    sub_1B29DF304();
    uint64_t v229 = v256[0];
    swift_bridgeObjectRelease();
    sub_1B29C5E2C((uint64_t)v252);
    sub_1B2AD0BFC(v219);
  }
  else
  {
    uint64_t v229 = v82;
    if (qword_1EB7E3A20 != -1) {
      swift_once();
    }
    sub_1B29A4B98(v203, (uint64_t)qword_1EB7E4AD8);
    uint64_t v84 = (void *)sub_1B2E81F98();
    os_log_type_t v85 = sub_1B2E82DB8();
    if (sub_1B2A0F11C(v85))
    {
      *(_WORD *)sub_1B299B8CC() = 0;
      sub_1B29A1994(&dword_1B2996000, v86, v87, "View(peopleSubgraph) is not available.");
      sub_1B299B750();
    }
  }
  uint64_t v88 = v240;
  uint64_t v89 = v259[2];
  if (!v259[2]) {
    goto LABEL_24;
  }
  if (*(void *)(v259[2] + 16) != 1) {
    goto LABEL_24;
  }
  sub_1B2AB5138((uint64_t)v259);
  static EntityClass.person.getter();
  v244[0] = v255[0];
  v244[1] = v255[1];
  char v245 = v255[2];
  char v90 = sub_1B2A1BC58((uint64_t)v244, v89);
  sub_1B29C5E2C((uint64_t)v244);
  sub_1B2AB51F4((uint64_t)v259);
  if (v90)
  {
    sub_1B2AD0BFC(v207);
    uint64_t v91 = v229;
    uint64_t v92 = a3;
  }
  else
  {
LABEL_24:
    uint64_t v92 = a3;
    if (v207)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2AD0BFC(v207);
      static EntityClass.entity.getter();
      v242[0] = v255[0];
      v242[1] = v255[1];
      char v243 = v255[2];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_isUniquelyReferenced_nonNull_native();
      v256[0] = v229;
      sub_1B29DF304();
      uint64_t v91 = v256[0];
      swift_bridgeObjectRelease();
      sub_1B29C5E2C((uint64_t)v242);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EB7E3A20 != -1) {
        swift_once();
      }
      sub_1B29A4B98(v203, (uint64_t)qword_1EB7E4AD8);
      unint64_t v93 = (void *)sub_1B2E81F98();
      os_log_type_t v94 = sub_1B2E82DB8();
      if (sub_1B2A0F11C(v94))
      {
        *(_WORD *)sub_1B299B8CC() = 0;
        sub_1B29A1994(&dword_1B2996000, v95, v96, "Subgraph view is not available");
        uint64_t v88 = v240;
        sub_1B299B750();
      }

      uint64_t v91 = v229;
    }
  }
  uint64_t v241 = MEMORY[0x1E4FBC860];
  uint64_t v97 = v224;
  uint64_t v98 = v227;
  uint64_t v220 = *(void *)(v88 + 16);
  if (v220)
  {
    uint64_t v230 = v91;
    swift_bridgeObjectRetain();
    uint64_t v99 = 0;
    while (1)
    {
      unint64_t v100 = *(unsigned __int8 *)(v88 + v99 + 32);
      if (!(v100 >> 6)) {
        break;
      }
      if (v100 >> 6 == 1)
      {
        *((void *)&v255[1] + 1) = &type metadata for Features.FeatureFlag;
        *(void *)&v255[2] = sub_1B299BFE0();
        LOBYTE(v255[0]) = 25;
        char v101 = sub_1B2E80848();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v255);
        if ((v101 & 1) == 0)
        {
          sub_1B2AD0C90();
          sub_1B2A982E4((uint64_t)__dst);
          sub_1B2AB51F4((uint64_t)v259);
          swift_bridgeObjectRelease();
          sub_1B2AD0CA8();
          swift_bridgeObjectRelease();
          sub_1B2A1F13C();
          sub_1B299E4D4();
          sub_1B299F3A0();
          *(void *)uint64_t v185 = v186 + 36;
          *(void *)(v185 + 8) = 0x80000001B2E9A560;
          char v187 = 8;
          goto LABEL_105;
        }
        sub_1B29C3FC4(a10, v216, &qword_1E9C37F30);
        uint64_t v102 = type metadata accessor for LemmatizedSubgraphView();
        if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v216, 1, v102) == 1)
        {
          sub_1B29C4148(v216, &qword_1E9C37F30);
          sub_1B2AD0C90();
          sub_1B2A982E4((uint64_t)__dst);
          sub_1B2AB51F4((uint64_t)v259);
          swift_bridgeObjectRelease();
          sub_1B2AD0CA8();
          swift_bridgeObjectRelease();
          sub_1B2A1F13C();
          sub_1B299E4D4();
          sub_1B299F3A0();
          *(void *)uint64_t v185 = v188 + 2;
          *(void *)(v185 + 8) = 0x80000001B2E98760;
LABEL_104:
          char v187 = 5;
LABEL_105:
          *(unsigned char *)(v185 + 16) = v187;
          swift_willThrow();
          sub_1B29A1974();
          sub_1B2AD0CC0();
LABEL_106:
          swift_release();

          goto LABEL_115;
        }
        uint64_t v225 = v97;
        sub_1B2A28E3C(v216 + *(int *)(v102 + 20), v209);
        sub_1B2AD0BA4(v216, (void (*)(void))type metadata accessor for LemmatizedSubgraphView);
        sub_1B2A20750(v209, v221);
        v256[0] = v88;
        sub_1B29A292C();
        uint64_t v97 = a7;
        if (a7)
        {
          uint64_t v103 = type metadata accessor for EntityResolutionRankingService();
          *(void *)&v255[2] = &off_1F0AD4058;
          *((void *)&v255[1] + 1) = v103;
          *(void *)&v255[0] = a7;
        }
        else
        {
          sub_1B2AD0C7C();
        }
        uint64_t v119 = sub_1B2AD0D00();
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v119, v120, v121, v222);
        sub_1B2A28E3C(v221, v211);
        uint64_t v122 = sub_1B2AD0CF0();
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v122, v123, v124, v222);
        type metadata accessor for CandidateGenerator();
        uint64_t v125 = sub_1B2A6B8B4();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1B29A43A0();
        swift_bridgeObjectRetain();
        uint64_t v126 = (uint64_t *)sub_1B2AD0D48();
        unint64_t v100 = v125;
        sub_1B2A25E30(v126, v127, v128, v129, v130, v230, v210, v211, v192);
        sub_1B2AD0E3C();
        if (v225)
        {
          sub_1B2AD0C90();
          sub_1B2A982E4((uint64_t)__dst);
          sub_1B2AB51F4((uint64_t)v259);
          sub_1B29A1974();
          sub_1B2AD0BA4(v221, (void (*)(void))type metadata accessor for SearchableViewDatabaseTable);
          swift_bridgeObjectRelease();
          sub_1B2AD0CA8();
          swift_bridgeObjectRelease();
          sub_1B2AD0CC0();
          goto LABEL_113;
        }
        MEMORY[0x1B3EB0FE0]();
        sub_1B2AD0E98();
        uint64_t v92 = a3;
        if (v118) {
          sub_1B2AD0C5C();
        }
        sub_1B2E828F8();
        sub_1B2E82878();
        sub_1B2AD0BA4(v221, (void (*)(void))type metadata accessor for SearchableViewDatabaseTable);
        uint64_t v88 = v240;
        uint64_t v98 = v227;
      }
      else
      {
        if (v100 == 128)
        {
          uint64_t v131 = v97;
          type metadata accessor for ViewService();
          uint64_t v132 = (char *)static ViewService.clientService.getter();
          uint64_t v133 = *(void **)&v132[OBJC_IVAR___GDSwiftViewService_accessRequester];
          uint64_t v134 = (void *)sub_1B2E82348();
          *(void *)&v255[0] = 0;
          id v135 = objc_msgSend(v133, sel_requestAssertionForViewName_error_, v134, v255);

          unint64_t v100 = *(void *)&v255[0];
          if (!v135)
          {
            id v190 = *(id *)&v255[0];
            sub_1B2AD0C90();
            sub_1B2A982E4((uint64_t)__dst);
            sub_1B2AB51F4((uint64_t)v259);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B2E80388();

            swift_willThrow();
            sub_1B29A1974();

            sub_1B2AD0CC0();
            goto LABEL_106;
          }
          id v136 = *(id *)&v255[0];
          id v137 = objc_msgSend(v135, sel_viewArtifactURL);
          sub_1B2E80448();

          sub_1B2ACDFBC(v201);
          (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v201, v202);
          sub_1B2E81808();
          swift_allocObject();
          uint64_t v138 = sub_1B2E817B8();
          sub_1B2E817E8();
          v256[0] = v240;
          sub_1B29A292C();
          if (a7)
          {
            uint64_t v139 = type metadata accessor for EntityResolutionRankingService();
            *(void *)&v255[2] = &off_1F0AD4058;
            *((void *)&v255[1] + 1) = v139;
            *(void *)&v255[0] = a7;
          }
          else
          {
            sub_1B2AD0C7C();
          }
          uint64_t v140 = sub_1B2AD0D00();
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v140, v141, v142, v222);
          uint64_t v143 = sub_1B299E6E0();
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v143, v144, v145, v222);
          type metadata accessor for CandidateGenerator();
          unint64_t v100 = sub_1B2A6B8B4();
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1B29A43A0();
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v146 = (uint64_t *)sub_1B2AD0DB4();
          sub_1B2A25E30(v146, 128, v147, v148, 0, v230, v199, v200, v138);
          sub_1B2AD0E3C();
          if (v131)
          {
            sub_1B2AD0C90();
            sub_1B2A982E4((uint64_t)__dst);
            swift_release();

            swift_unknownObjectRelease();
            sub_1B2AB51F4((uint64_t)v259);
            sub_1B29A1974();
            swift_bridgeObjectRelease();
            sub_1B2AD0CA8();
            swift_bridgeObjectRelease();
            sub_1B2AD0CC0();
LABEL_113:
            swift_release();

LABEL_114:
            uint64_t v92 = a3;
LABEL_115:
            sub_1B2AD0B6C(a5);
            sub_1B29C4148(a10, &qword_1E9C37F30);
            sub_1B29C4148(v92, &qword_1EB7E2F60);
            sub_1B2AD0BA4(v100, (void (*)(void))type metadata accessor for LogSignpost);
            return v100;
          }
          MEMORY[0x1B3EB0FE0]();
          if (*(void *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1B2AD0C5C();
          }
          sub_1B2E828F8();
          sub_1B2E82878();

          swift_unknownObjectRelease();
          swift_release();
          uint64_t v92 = a3;
          uint64_t v97 = 0;
          goto LABEL_94;
        }
        if (v100 != 129)
        {
          unint64_t v100 = 0xEA00000000007963;
          switch(LOBYTE(v259[6]))
          {
            case 1:
              sub_1B29B1F2C();
              break;
            case 2:
              sub_1B29B1B8C();
              break;
            case 3:
              uint64_t v167 = 0x786966657270;
              goto LABEL_85;
            case 4:
              sub_1B299F3A0();
              unint64_t v100 = 0x80000001B2E8EF80;
              break;
            case 5:
              swift_bridgeObjectRelease();
              goto LABEL_87;
            case 6:
              uint64_t v167 = 0x646972627968;
LABEL_85:
              sub_1B2AD0EB8(v167);
              break;
            default:
              break;
          }
          char v168 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          if ((v168 & 1) == 0)
          {
LABEL_109:
            sub_1B2AD0C90();
            sub_1B2A982E4((uint64_t)__dst);
            sub_1B2AB51F4((uint64_t)v259);
            swift_bridgeObjectRelease();
            sub_1B2AD0CA8();
            swift_bridgeObjectRelease();
            sub_1B2A1F13C();
            sub_1B299E4D4();
            *(_OWORD *)uint64_t v189 = xmmword_1B2ECFD90;
            *(unsigned char *)(v189 + 16) = 9;
            swift_willThrow();
            sub_1B29A1974();
            sub_1B2AD0CC0();
            goto LABEL_106;
          }
LABEL_87:
          v256[0] = v88;
          sub_1B29A292C();
          uint64_t v169 = v97;
          if (a7)
          {
            uint64_t v170 = type metadata accessor for EntityResolutionRankingService();
            *(void *)&v255[2] = &off_1F0AD4058;
            *((void *)&v255[1] + 1) = v170;
            *(void *)&v255[0] = a7;
          }
          else
          {
            sub_1B2AD0C7C();
          }
          uint64_t v171 = sub_1B299E6E0();
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v171, v172, v173, v222);
          uint64_t v174 = sub_1B2AD0D00();
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v174, v175, v176, v222);
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v97 = a8;
          id v158 = a8;
          unint64_t v100 = sub_1B2E82148();
          type metadata accessor for CandidateGenerator();
          sub_1B2A6B8B4();
          sub_1B29A43A0();
          sub_1B2AD0DB4();
          sub_1B2AD0DDC();
          sub_1B2A25E30(v177, v178, v179, v180, v181, v182, v183, v184, 0);
          sub_1B2AD0E3C();
          if (v169)
          {
LABEL_111:
            sub_1B2AD0C90();
            sub_1B2A982E4((uint64_t)__dst);
            sub_1B2AB51F4((uint64_t)v259);
            sub_1B29A1974();
            swift_bridgeObjectRelease();
            sub_1B2AD0CA8();
            swift_bridgeObjectRelease();
            sub_1B2AD0CC0();
            swift_release();

            goto LABEL_114;
          }
          MEMORY[0x1B3EB0FE0]();
          sub_1B2AD0E84();
          uint64_t v92 = a3;
          if (v118) {
            sub_1B2AD0C5C();
          }
          sub_1B2E828F8();
          sub_1B2E82878();
LABEL_94:
          uint64_t v98 = v227;
LABEL_95:
          uint64_t v88 = v240;
          goto LABEL_96;
        }
        unint64_t v100 = 0xEA00000000007963;
        switch(LOBYTE(v259[6]))
        {
          case 1:
            sub_1B29B1F2C();
            break;
          case 2:
            sub_1B29B1B8C();
            break;
          case 3:
            uint64_t v149 = 0x786966657270;
            goto LABEL_71;
          case 4:
            swift_bridgeObjectRelease();
            goto LABEL_73;
          case 5:
            unint64_t v100 = 0x80000001B2E8EFA0;
            break;
          case 6:
            uint64_t v149 = 0x646972627968;
LABEL_71:
            sub_1B2AD0EB8(v149);
            break;
          default:
            break;
        }
        sub_1B299F3A0();
        char v150 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        if ((v150 & 1) == 0) {
          goto LABEL_109;
        }
LABEL_73:
        v256[0] = v88;
        sub_1B29A292C();
        uint64_t v226 = v97;
        if (a7)
        {
          uint64_t v151 = type metadata accessor for EntityResolutionRankingService();
          *(void *)&v255[2] = &off_1F0AD4058;
          *((void *)&v255[1] + 1) = v151;
          *(void *)&v255[0] = a7;
        }
        else
        {
          sub_1B2AD0C7C();
        }
        uint64_t v152 = sub_1B299E6E0();
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v152, v153, v154, v222);
        uint64_t v155 = sub_1B2AD0D00();
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v155, v156, v157, v222);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v97 = a8;
        id v158 = a8;
        unint64_t v100 = sub_1B2E82148();
        type metadata accessor for CandidateGenerator();
        sub_1B2A6B8B4();
        sub_1B29A43A0();
        sub_1B2AD0DB4();
        sub_1B2AD0DDC();
        sub_1B2A25E30(v159, v160, v161, v162, v163, v164, v165, v166, 0);
        sub_1B2AD0E3C();
        if (v226) {
          goto LABEL_111;
        }
        MEMORY[0x1B3EB0FE0]();
        sub_1B2AD0E84();
        if (v118) {
          sub_1B2AD0C5C();
        }
        sub_1B2E828F8();
        sub_1B2E82878();
        uint64_t v98 = v227;
        uint64_t v88 = v240;
        uint64_t v92 = a3;
      }
LABEL_96:
      if (v220 == ++v99)
      {
        swift_bridgeObjectRelease();
        uint64_t v69 = v238;
        goto LABEL_98;
      }
    }
    sub_1B29C3FC4(v92, v98, &qword_1EB7E2F60);
    uint64_t v104 = type metadata accessor for EntityAliasView();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v98, 1, v104) == 1)
    {
      sub_1B29C4148(v98, &qword_1EB7E2F60);
      sub_1B2AD0C90();
      sub_1B2A982E4((uint64_t)__dst);
      sub_1B2AB51F4((uint64_t)v259);
      swift_bridgeObjectRelease();
      sub_1B2AD0CA8();
      swift_bridgeObjectRelease();
      sub_1B2A1F13C();
      sub_1B299E4D4();
      *(_OWORD *)uint64_t v185 = xmmword_1B2ECFDA0;
      goto LABEL_104;
    }
    sub_1B2A28E3C(v98 + *(int *)(v104 + 20), v213);
    sub_1B2AD0BA4(v98, (void (*)(void))type metadata accessor for EntityAliasView);
    sub_1B2A20750(v213, v223);
    v256[0] = v88;
    sub_1B29A292C();
    if (a7)
    {
      uint64_t v105 = type metadata accessor for EntityResolutionRankingService();
      *(void *)&v255[2] = &off_1F0AD4058;
      *((void *)&v255[1] + 1) = v105;
      *(void *)&v255[0] = a7;
    }
    else
    {
      sub_1B2AD0C7C();
    }
    sub_1B2A28E3C(v223, v214);
    uint64_t v106 = sub_1B2AD0CF0();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v106, v107, v108, v222);
    uint64_t v109 = sub_1B299E6E0();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v109, v110, v111, v222);
    type metadata accessor for CandidateGenerator();
    uint64_t v112 = sub_1B2A6B8B4();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B29A43A0();
    uint64_t v113 = (uint64_t *)sub_1B2AD0D48();
    unint64_t v100 = v112;
    sub_1B2A25E30(v113, v114, v115, v116, v117, v230, v214, v215, v192);
    if (v97)
    {
      sub_1B2AD0C90();
      sub_1B2A982E4((uint64_t)__dst);
      sub_1B2AB51F4((uint64_t)v259);
      sub_1B29A1974();
      sub_1B2AD0BA4(v223, (void (*)(void))type metadata accessor for SearchableViewDatabaseTable);
      swift_bridgeObjectRelease();
      sub_1B2AD0CA8();
      swift_bridgeObjectRelease();
      sub_1B2AD0CC0();
      swift_release();

      goto LABEL_114;
    }
    MEMORY[0x1B3EB0FE0]();
    sub_1B2AD0E98();
    uint64_t v92 = a3;
    if (v118) {
      sub_1B2AD0C5C();
    }
    sub_1B2E828F8();
    sub_1B2E82878();
    sub_1B2AD0BA4(v223, (void (*)(void))type metadata accessor for SearchableViewDatabaseTable);
    uint64_t v98 = v227;
    uint64_t v97 = 0;
    goto LABEL_95;
  }
LABEL_98:
  swift_bridgeObjectRelease();
  memcpy(v256, v259, 0x7AuLL);
  memcpy(v255, __dst, 0x8DuLL);
  v254[0] = v204;
  v254[1] = v205;
  v254[2] = v206;
  unint64_t v100 = swift_allocObject();
  sub_1B2ACA3F4(v256, v255, v241, (uint64_t)v254, a11 & 1);
  if (v97)
  {
    sub_1B2A289C4(v232, v69);
    sub_1B2AD0CC0();

    swift_release();
    goto LABEL_115;
  }
  sub_1B2A289C4(v232, v69);
  sub_1B2AD0778(v212);

  swift_release();
  sub_1B2AD0B6C(a5);
  sub_1B29C4148(a10, &qword_1E9C37F30);
  sub_1B29C4148(v92, &qword_1EB7E2F60);
  sub_1B2AD0BA4(v212, (void (*)(void))type metadata accessor for LogSignpost);
  return v100;
}

unint64_t sub_1B2ACFBD8(const void *a1, const void *a2, unint64_t a3, char a4)
{
  uint64_t v7 = v4;
  unint64_t v125 = a3;
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C37F30);
  uint64_t v9 = sub_1B299B0F0(v8);
  MEMORY[0x1F4188790](v9);
  sub_1B2999940();
  uint64_t v96 = v10;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v11);
  sub_1B29A43C0();
  uint64_t v94 = v12;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v13);
  sub_1B2AD0E78();
  uint64_t v98 = v14;
  uint64_t v15 = sub_1B29A3EB4(&qword_1EB7E2F60);
  uint64_t v16 = sub_1B299B0F0(v15);
  MEMORY[0x1F4188790](v16);
  sub_1B2999940();
  uint64_t v97 = v17;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v18);
  sub_1B29A43C0();
  uint64_t v93 = v19;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v20);
  sub_1B2AD0E78();
  uint64_t v99 = v21;
  uint64_t v22 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v24 = v23;
  MEMORY[0x1F4188790](v25);
  sub_1B2999940();
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v26);
  uint64_t v27 = sub_1B299B4B4();
  sub_1B299D278();
  uint64_t v29 = v28;
  MEMORY[0x1F4188790](v30);
  sub_1B299E6C4();
  sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v106 = v32;
  uint64_t v108 = v31;
  MEMORY[0x1F4188790](v31);
  sub_1B299E4A0();
  uint64_t v35 = v34 - v33;
  uint64_t v104 = type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v36);
  sub_1B299B6D0();
  uint64_t v111 = v37;
  memcpy(v123, a1, 0x7AuLL);
  memcpy(__dst, a2, 0x8DuLL);
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1B29A4B98(v27, (uint64_t)qword_1EB7E6600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v5, v38, v27);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v39 = sub_1B2E81F28();
  os_signpost_type_t v40 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v41 = (uint8_t *)sub_1B299B8CC();
    *(_WORD *)uint64_t v41 = 0;
    os_signpost_id_t v42 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v39, v40, v42, "ECR.Manager.init", "", v41, 2u);
    uint64_t v7 = v4;
    sub_1B299B750();
  }

  sub_1B29A080C();
  v43();
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v44 = sub_1B2E81F68();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v6, v22);
  *(void *)uint64_t v111 = "ECR.Manager.init";
  *(void *)(v111 + 8) = 16;
  *(unsigned char *)(v111 + 16) = 2;
  *(void *)(v111 + 24) = v44;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 32))(v111 + *(int *)(v104 + 24), v35, v108);
  uint64_t v45 = v125;
  unint64_t v46 = v125;
  sub_1B2AD0ECC();
  if (v7)
  {
    sub_1B2AB51F4((uint64_t)v123);
    sub_1B2A982E4((uint64_t)__dst);
    sub_1B2AD0778(v111);
    swift_release();
    sub_1B2AD0BA4(v111, (void (*)(void))type metadata accessor for LogSignpost);
  }
  else
  {
    uint64_t v47 = v118[0];
    long long v109 = *(_OWORD *)&v118[3];
    uint64_t v90 = v118[5];
    uint64_t v91 = v118[1];
    uint64_t v107 = v118[6];
    uint64_t v48 = __dst[15];
    int v49 = BYTE2(__dst[17]);
    if (BYTE1(__dst[17]) == 1)
    {
      sub_1B2AD0EF8((uint64_t)v120);
      uint64_t v105 = v118[2];
      uint64_t v50 = v120[0];
      uint64_t v51 = v120[1];
      uint64_t v52 = v120[2];
      uint64_t v53 = v120[3];
      uint64_t v54 = v120[4];
      uint64_t v55 = v120[5];
      uint64_t v56 = v120[6];
    }
    else
    {
      uint64_t v105 = v118[2];
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      uint64_t v54 = 0;
      uint64_t v55 = 0;
      uint64_t v56 = 0;
    }
    v121[0] = v50;
    v121[1] = v51;
    v121[2] = v52;
    v121[3] = v53;
    v121[4] = v54;
    v121[5] = v55;
    v121[6] = v56;
    if (v49)
    {
      uint64_t v57 = *(void *)(v45 + 16);
      uint64_t v58 = *(os_unfair_lock_s **)(v57 + 24);
      swift_retain();
      os_unfair_lock_lock(v58);
      swift_beginAccess();
      v119[0] = *(void *)(v57 + 16);
      swift_retain();
      sub_1B2AD2640(v119, v118);
      swift_release();
      os_unfair_lock_unlock(v58);
      swift_release();
      uint64_t v92 = v118[0];
      uint64_t v101 = v118[1];
      uint64_t v103 = v118[2];
      uint64_t v59 = *(void *)(v45 + 16);
      uint64_t v60 = *(os_unfair_lock_s **)(v59 + 24);
      swift_retain();
      os_unfair_lock_lock(v60);
      swift_beginAccess();
      v119[0] = *(void *)(v59 + 16);
      swift_retain();
      sub_1B2AD28B8(v119, v45, v118);
      swift_release();
      os_unfair_lock_unlock(v60);
      swift_release();
      uint64_t v61 = (void *)v118[0];
    }
    else
    {
      uint64_t v61 = 0;
      uint64_t v92 = 0;
      uint64_t v101 = 0;
      uint64_t v103 = 0;
    }
    uint64_t v62 = v123[2];
    if (v123[2]
      && *(void *)(v123[2] + 16) == 1
      && (sub_1B2AB5138((uint64_t)v123),
          static EntityClass.person.getter(),
          char v63 = sub_1B2A1BC58((uint64_t)v122, v62),
          sub_1B29C5E2C((uint64_t)v122),
          sub_1B2AB51F4((uint64_t)v123),
          (v63 & 1) != 0))
    {
      uint64_t v87 = 0;
      uint64_t v88 = v61;
      uint64_t v81 = 0;
      uint64_t v82 = 0;
      uint64_t v83 = 0;
      uint64_t v84 = 0;
      uint64_t v85 = 0;
      uint64_t v86 = 0;
    }
    else
    {
      sub_1B2AD0FC0();
      uint64_t v81 = v118[0];
      uint64_t v82 = v118[1];
      uint64_t v83 = v118[2];
      uint64_t v84 = v118[3];
      uint64_t v85 = v118[4];
      uint64_t v86 = v118[5];
      uint64_t v87 = v118[6];
      uint64_t v88 = v61;
    }
    uint64_t v65 = type metadata accessor for EntityAliasView();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v99, 1, 1, v65);
    uint64_t v89 = type metadata accessor for LemmatizedSubgraphView();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v98, 1, 1, v89);
    uint64_t v66 = *(void *)(v48 + 16);
    uint64_t v67 = v97;
    if (v66)
    {
      uint64_t v80 = v47;
      swift_bridgeObjectRetain();
      uint64_t v110 = 0;
      for (uint64_t i = 0; i != v66; ++i)
      {
        unsigned int v69 = *(unsigned __int8 *)(v48 + i + 32);
        if (v69 >> 6)
        {
          if (v69 >> 6 == 1)
          {
            v118[3] = &type metadata for Features.FeatureFlag;
            v118[4] = sub_1B299BFE0();
            LOBYTE(v118[0]) = 25;
            char v70 = sub_1B2E80848();
            _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v118);
            if (v70)
            {
              sub_1B2AD0EAC();
              sub_1B2AD11B8();
              sub_1B29C4148(v98, &qword_1E9C37F30);
              uint64_t v71 = sub_1B2AD0CF0();
              _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v71, v72, v73, v89);
              sub_1B29C4020(v96, v98, &qword_1E9C37F30);
              uint64_t v67 = v97;
            }
          }
          else if (v69 != 128)
          {
            if (v69 == 129)
            {
              sub_1B2AD0EAC();
              uint64_t v77 = sub_1B2AD10E0();
            }
            else
            {
              sub_1B2AD0EAC();
              uint64_t v77 = sub_1B2AD10A0();
            }
            uint64_t v78 = (void *)v77;

            uint64_t v110 = v78;
          }
        }
        else
        {
          sub_1B2AD0EAC();
          sub_1B2AD1074();
          sub_1B29C4148(v99, &qword_1EB7E2F60);
          uint64_t v74 = sub_1B2AD0CF0();
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v74, v75, v76, v65);
          sub_1B29C4020(v67, v99, &qword_1EB7E2F60);
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v47 = v80;
      os_log_type_t v79 = v110;
    }
    else
    {
      os_log_type_t v79 = 0;
    }
    memcpy(v119, v123, 0x7AuLL);
    memcpy(v118, __dst, 0x8DuLL);
    sub_1B29C3FC4(v99, v93, &qword_1EB7E2F60);
    v114[0] = v47;
    v114[1] = v91;
    long long v115 = v109;
    v114[2] = v105;
    uint64_t v116 = v90;
    uint64_t v117 = v107;
    v113[0] = v92;
    v113[1] = v101;
    v113[2] = v103;
    v112[0] = v81;
    v112[1] = v82;
    v112[2] = v83;
    v112[3] = v84;
    v112[4] = v85;
    v112[5] = v86;
    v112[6] = v87;
    sub_1B29C3FC4(v98, v94, &qword_1E9C37F30);
    unint64_t v46 = sub_1B2ACE0E8(v119, v118, v93, v114, v121, v113, v88, v79, v112, v94, a4 & 1);
    sub_1B29C4148(v98, &qword_1E9C37F30);
    sub_1B29C4148(v99, &qword_1EB7E2F60);
    sub_1B2AD0778(v111);
    swift_release();
    sub_1B2AD0BA4(v111, (void (*)(void))type metadata accessor for LogSignpost);
  }
  return v46;
}

uint64_t sub_1B2AD0778(uint64_t a1)
{
  sub_1B2E81F48();
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299B6D0();
  sub_1B2E81F08();
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299E4A0();
  uint64_t v5 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1B299E6C4();
  type metadata accessor for LogSignpost();
  sub_1B29A080C();
  v9();
  uint64_t v22 = *(const char **)a1;
  char v10 = *(unsigned char *)(a1 + 16);
  swift_retain();
  uint64_t v11 = sub_1B2E81F28();
  sub_1B2E81F58();
  os_signpost_type_t v21 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    sub_1B2AD0DA4();
    v20();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  }
  if ((v10 & 1) == 0)
  {
    if (v22) {
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v22 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v22 >> 11 != 27)
  {
    if (v22 >> 16 <= 0x10)
    {
      uint64_t v22 = &v23;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      uint64_t v13 = sub_1B2999A4C();
      if (v14(v13) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v15 = "[Error] Interval already ended";
      }
      else
      {
        uint64_t v16 = sub_1B2AD0DC4();
        v17(v16);
        uint64_t v15 = "";
      }
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      os_signpost_id_t v19 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v11, v21, v19, v22, v15, v18, 2u);
      MEMORY[0x1B3EB30C0](v18, -1, -1);
      goto LABEL_13;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

unint64_t sub_1B2AD0A2C()
{
  unint64_t result = qword_1E9C3D1B8;
  if (!qword_1E9C3D1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D1B8);
  }
  return result;
}

uint64_t sub_1B2AD0A78(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2AD0AE0(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_1B2AD0B20()
{
  unint64_t result = qword_1EB7E3C30;
  if (!qword_1EB7E3C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3C30);
  }
  return result;
}

uint64_t *sub_1B2AD0B6C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1B2AD0BA4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1B2AD0BFC(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2AD0C5C()
{
  return sub_1B2E828A8();
}

double sub_1B2AD0C7C()
{
  *(void *)(v0 + 784) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 752) = 0u;
  *(_OWORD *)(v0 + 768) = 0u;
  return result;
}

uint64_t sub_1B2AD0C90()
{
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 216);
  return sub_1B2A8FC80(v2, v3);
}

uint64_t sub_1B2AD0CA8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AD0CC0()
{
  uint64_t v2 = *(void *)(v0 + 280);
  return sub_1B2AD0778(v2);
}

uint64_t sub_1B2AD0CD8()
{
  return swift_release_n();
}

uint64_t sub_1B2AD0CF0()
{
  return v0;
}

uint64_t sub_1B2AD0D00()
{
  return v0;
}

uint64_t sub_1B2AD0D10()
{
  return 0;
}

uint64_t sub_1B2AD0D48()
{
  return v0 + 904;
}

uint64_t sub_1B2AD0D64()
{
  return swift_retain_n();
}

void sub_1B2AD0D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B29BF6BC(v20, v21, (uint64_t)&a15, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1B2AD0DB4()
{
  return v0 + 904;
}

uint64_t sub_1B2AD0DC4()
{
  return v0;
}

uint64_t sub_1B2AD0DF4(uint64_t a1)
{
  *(void *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_1B2AD0E0C()
{
  return swift_slowAlloc();
}

uint64_t sub_1B2AD0E24()
{
  return swift_slowAlloc();
}

uint64_t sub_1B2AD0E48()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B2AD0E60()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B2AD0EB8(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
}

uint64_t sub_1B2AD0ECC()
{
  return sub_1B2AD0FEC();
}

__n128 sub_1B2AD0EF8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 24);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1B299D804();
  uint64_t v10 = *(void *)(v4 + 16);
  swift_retain();
  sub_1B2AD20D0(&v10, v11);
  swift_release();
  os_unfair_lock_unlock(v5);
  swift_release();
  if (!v2)
  {
    uint64_t v7 = v11[1];
    uint64_t v8 = v14;
    __n128 result = v13;
    long long v9 = v12;
    *(void *)a1 = v11[0];
    *(void *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = v9;
    *(__n128 *)(a1 + 32) = result;
    *(void *)(a1 + 48) = v8;
  }
  return result;
}

uint64_t sub_1B2AD0FC0()
{
  return sub_1B2AD0FEC();
}

uint64_t sub_1B2AD0FEC()
{
  sub_1B29A2950();
  os_unfair_lock_lock(v1);
  sub_1B299D804();
  uint64_t v18 = *(void *)(v2 + 16);
  uint64_t v3 = swift_retain();
  uint64_t v11 = sub_1B2AD2DC0(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14, v15, v16, v17, v18);
  v0(v11);
  swift_release();
  os_unfair_lock_unlock(v1);
  return swift_release();
}

uint64_t sub_1B2AD1074()
{
  return sub_1B2AD11E4();
}

uint64_t sub_1B2AD10A0()
{
  return sub_1B2AD1120((uint64_t)sub_1B2AD22E0, (uint64_t (*)(uint64_t, _OWORD *))sub_1B2D4A264);
}

uint64_t sub_1B2AD10E0()
{
  return sub_1B2AD1120((uint64_t)sub_1B2AD2490, (uint64_t (*)(uint64_t, _OWORD *))sub_1B2D4A364);
}

uint64_t sub_1B2AD1120(uint64_t a1, uint64_t (*a2)(uint64_t, _OWORD *))
{
  sub_1B2AD0FEC();
  if (!v3)
  {
    v11[0] = v7;
    v11[1] = v8;
    uint64_t v11[2] = v9;
    uint64_t v12 = v10;
    uint64_t v5 = *(void *)(v2 + 16);
    sub_1B2AD2B04((uint64_t)v11);
    uint64_t v2 = a2(v5, v11);
    sub_1B2AD2B58((uint64_t)v11);
  }
  return v2;
}

uint64_t sub_1B2AD11B8()
{
  return sub_1B2AD11E4();
}

uint64_t sub_1B2AD11E4()
{
  sub_1B29A2950();
  os_unfair_lock_lock(v1);
  sub_1B299D804();
  uint64_t v18 = *(void *)(v2 + 16);
  uint64_t v3 = swift_retain();
  uint64_t v11 = sub_1B2AD2DC0(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14, v15, v16, v17, v18);
  v0(v11);
  swift_release();
  os_unfair_lock_unlock(v1);
  return swift_release();
}

uint64_t *sub_1B2AD126C()
{
  sub_1B2AD0BFC(v0[2]);
  sub_1B2AD0BFC(v0[9]);
  sub_1B2AD0BFC(v0[16]);
  sub_1B29C4148((uint64_t)v0 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityAliasView, &qword_1EB7E2F60);
  sub_1B2A8FC80(*(uint64_t *)((char *)v0+ OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView), *(uint64_t *)((char *)v0+ OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView+ 8));
  swift_release();
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_peopleKnosisServer));
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityKnosisServer));
  sub_1B29C4148((uint64_t)v0+ OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_lemmatizedSubgraphView, &qword_1E9C37F30);
  return v0;
}

uint64_t sub_1B2AD1338()
{
  sub_1B2AD126C();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2AD1390()
{
  bzero((void *)(v0 + 16), 0xA8uLL);
  uint64_t v1 = type metadata accessor for EntityAliasView();
  sub_1B29A0818(v1);
  uint64_t v2 = (void *)(v0
                + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView);
  v2[1] = 0;
  v2[2] = 0;
  *uint64_t v2 = 0;
  *(void *)(v0 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_rankingService) = 0;
  *(void *)(v0 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_peopleKnosisServer) = 0;
  *(void *)(v0 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityKnosisServer) = 0;
  uint64_t v3 = type metadata accessor for LemmatizedSubgraphView();
  sub_1B29A0818(v3);
  return v0;
}

uint64_t sub_1B2AD1424(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + 24) = a1;
  type metadata accessor for EntityResolutionServicePool.GuardedData();
  uint64_t v3 = swift_allocObject();
  sub_1B2AD1390();
  sub_1B29A3EB4(&qword_1EB7E2F70);
  swift_allocObject();
  *(void *)(v2 + 16) = sub_1B29E5380(v3);
  return v2;
}

uint64_t sub_1B2AD1494()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 24);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 16);
  sub_1B2AD1AB8(&v4);
  os_unfair_lock_unlock(v2);
  swift_release();

  return v0;
}

uint64_t sub_1B2AD1514()
{
  sub_1B2AD1494();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityResolutionServicePool()
{
  return self;
}

uint64_t sub_1B2AD156C()
{
  return type metadata accessor for EntityResolutionServicePool.GuardedData();
}

uint64_t type metadata accessor for EntityResolutionServicePool.GuardedData()
{
  uint64_t result = qword_1EB7E4AC8;
  if (!qword_1EB7E4AC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B2AD15BC()
{
  sub_1B2AD16E4(319, &qword_1EB7E5610, (void (*)(uint64_t))type metadata accessor for EntityAliasView);
  if (v0 <= 0x3F)
  {
    sub_1B2AD16E4(319, &qword_1EB7D9DC0, (void (*)(uint64_t))type metadata accessor for LemmatizedSubgraphView);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1B2AD16E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B2E82F38();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B2AD1738(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for LemmatizedSubgraphView();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for EntityAliasView();
  MEMORY[0x1F4188790](v9 - 8);
  sub_1B299E4A0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = *(void *)(a1 + 120);
  int v14 = *(unsigned __int8 *)(a1 + 138);
  if (*(unsigned char *)(a1 + 137) == 1)
  {
    sub_1B2AD0EF8((uint64_t)&v33);
    if (v2) {
      return;
    }
    swift_unknownObjectRelease();
    long long v37 = v34;
    sub_1B2A227D4((uint64_t)&v37);
    swift_unknownObjectRelease();
    long long v36 = v35;
    sub_1B2A227D4((uint64_t)&v36);
  }
  if (v14)
  {
    uint64_t v15 = *(void *)(v1 + 16);
    uint64_t v16 = *(os_unfair_lock_s **)(v15 + 24);
    swift_retain();
    os_unfair_lock_lock(v16);
    sub_1B299D804();
    swift_retain();
    uint64_t v17 = (void *)sub_1B29A43CC();
    sub_1B2AD2640(v17, v18);
    if (v2)
    {
      swift_release();
      os_unfair_lock_unlock(v16);
      __break(1u);
      swift_release();
      os_unfair_lock_unlock(v16);
      swift_release();
      __break(1u);
      return;
    }
    swift_release();
    os_unfair_lock_unlock(v16);
    swift_release();
    sub_1B2A8FC80(v32[0], v32[1]);
    os_signpost_id_t v19 = *(os_unfair_lock_s **)(v15 + 24);
    swift_retain();
    os_unfair_lock_lock(v19);
    swift_retain();
    uint64_t v20 = (uint64_t *)sub_1B29A43CC();
    sub_1B2AD28B8(v20, v21, v22);
    uint64_t v3 = 0;
    swift_release();
    os_unfair_lock_unlock(v19);
    swift_release();
    swift_release();
  }
  uint64_t v23 = *(void *)(v13 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = 0;
    while (1)
    {
      unsigned int v25 = *(unsigned __int8 *)(v13 + v24 + 32);
      if (!(v25 >> 6)) {
        break;
      }
      if (v25 >> 6 == 1)
      {
        v32[3] = (uint64_t)&type metadata for Features.FeatureFlag;
        v32[4] = sub_1B299BFE0();
        LOBYTE(v32[0]) = 25;
        char v26 = sub_1B2E80848();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v32);
        if (v26)
        {
          sub_1B2AD11E4();
          if (v3) {
            goto LABEL_24;
          }
          uint64_t v27 = type metadata accessor for LemmatizedSubgraphView;
          uint64_t v28 = v8;
LABEL_16:
          sub_1B2AD2D54(v28, (void (*)(void))v27);
        }
      }
      else if (v25 != 128)
      {
        if (v25 == 129)
        {
          uint64_t v29 = sub_1B2AD2490;
          uint64_t v30 = sub_1B2D4A364;
        }
        else
        {
          uint64_t v29 = sub_1B2AD22E0;
          uint64_t v30 = sub_1B2D4A264;
        }
        uint64_t v31 = (void *)sub_1B2AD1120((uint64_t)v29, (uint64_t (*)(uint64_t, _OWORD *))v30);
        if (v3)
        {
LABEL_24:
          swift_bridgeObjectRelease();
          return;
        }
      }
      if (v23 == ++v24) {
        goto LABEL_24;
      }
    }
    sub_1B2AD11E4();
    if (v3) {
      goto LABEL_24;
    }
    uint64_t v27 = type metadata accessor for EntityAliasView;
    uint64_t v28 = v12;
    goto LABEL_16;
  }
}

void sub_1B2AD1AB8(uint64_t *a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7E2F60);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1B299E4A0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = *a1;
  uint64_t v7 = type metadata accessor for EntityAliasView();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5, 1, 1, v7);
  uint64_t v8 = v6 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityAliasView;
  swift_beginAccess();
  sub_1B2AD2C44(v5, v8, &qword_1EB7E2F60);
  swift_endAccess();
  uint64_t v9 = *(void *)(v6 + 128);
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(void *)(v6 + 176) = 0;
  sub_1B2AD0BFC(v9);
  uint64_t v10 = *(void *)(v6 + 16);
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(void *)(v6 + 64) = 0;
  sub_1B2AD0BFC(v10);
  uint64_t v11 = (void *)(v6
                 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView);
  uint64_t v12 = *(void *)(v6
                  + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView);
  uint64_t v13 = *(void *)(v6
                  + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView
                  + 8);
  v11[1] = 0;
  uint64_t v11[2] = 0;
  *uint64_t v11 = 0;
  sub_1B2A8FC80(v12, v13);
  uint64_t v14 = *(void *)(v6 + 72);
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 104) = 0u;
  *(void *)(v6 + 120) = 0;
  sub_1B2AD0BFC(v14);
  *(void *)(v6 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_rankingService) = 0;
  swift_release();
  uint64_t v15 = *(void **)(v6
                 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_peopleKnosisServer);
  *(void *)(v6 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_peopleKnosisServer) = 0;

  uint64_t v16 = *(void **)(v6
                 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityKnosisServer);
  *(void *)(v6 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityKnosisServer) = 0;
}

uint64_t sub_1B2AD1C60(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1EB7E2F60);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = &v17[-v8];
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v17[-v10];
  uint64_t v12 = *a1 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityAliasView;
  swift_beginAccess();
  sub_1B2AD2BAC(v12, (uint64_t)v11, &qword_1EB7E2F60);
  uint64_t v13 = type metadata accessor for EntityAliasView();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v11, 1, v13) != 1) {
    return sub_1B2AD2CA0();
  }
  uint64_t v14 = sub_1B29C4148((uint64_t)v11, &qword_1EB7E2F60);
  uint64_t result = ViewService.entityAliasView.getter(v14);
  if (!v1)
  {
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v13) == 1)
    {
      sub_1B29C4148((uint64_t)v9, &qword_1EB7E2F60);
      sub_1B2A1F13C();
      swift_allocError();
      *(_OWORD *)uint64_t v16 = xmmword_1B2ECFDA0;
      *(unsigned char *)(v16 + 16) = 5;
      return swift_willThrow();
    }
    else
    {
      sub_1B2AD2CA0();
      sub_1B2AD2BFC();
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 0, 1, v13);
      swift_beginAccess();
      sub_1B2AD2C44((uint64_t)v6, v12, &qword_1EB7E2F60);
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_1B2AD1EC0(void *a1)
{
  uint64_t v3 = type metadata accessor for LemmatizedSubgraphView();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C37F30);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v13[-v8];
  uint64_t v10 = *a1 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_lemmatizedSubgraphView;
  swift_beginAccess();
  sub_1B2AD2BAC(v10, (uint64_t)v9, &qword_1E9C37F30);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v3) == 1)
  {
    uint64_t v11 = sub_1B29C4148((uint64_t)v9, &qword_1E9C37F30);
    uint64_t result = ViewService.lemmatizedSubgraphView.getter(v11);
    if (v1) {
      return result;
    }
    sub_1B2AD2BFC();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v3);
    swift_beginAccess();
    sub_1B2AD2C44((uint64_t)v7, v10, &qword_1E9C37F30);
    swift_endAccess();
  }
  return sub_1B2AD2CA0();
}

uint64_t sub_1B2AD20D0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v6 = (uint64_t *)(*a1 + 16);
  uint64_t v5 = *v6;
  uint64_t v8 = *(void *)(*a1 + 24);
  uint64_t v7 = *(void *)(*a1 + 32);
  uint64_t v9 = *(void *)(*a1 + 40);
  uint64_t v10 = *(void *)(*a1 + 48);
  uint64_t v11 = *(void *)(*a1 + 56);
  uint64_t v12 = *(void *)(*a1 + 64);
  if (*v6)
  {
    *a2 = v5;
    a2[1] = v8;
    a2[2] = v7;
    a2[3] = v9;
    a2[4] = v10;
    a2[5] = v11;
    a2[6] = v12;
    return sub_1B2AD2CF4(v5);
  }
  uint64_t v27 = *(void *)(*a1 + 24);
  uint64_t result = sub_1B2A4E930();
  if (!v2)
  {
    sub_1B2AD2278((uint64_t)v20, (uint64_t)&v21);
    uint64_t v14 = v21;
    if (v21)
    {
      long long v15 = v22;
      *(_OWORD *)(a2 + 1) = v22;
      long long v16 = v24;
      *(_OWORD *)(a2 + 5) = v24;
      long long v25 = v16;
      long long v26 = v15;
      uint64_t v18 = *(void *)(v4 + 16);
      long long v19 = v23;
      sub_1B2AD2278((uint64_t)v20, (uint64_t)v6);
      swift_unknownObjectRetain();
      sub_1B2A28D1C((uint64_t)&v26);
      swift_unknownObjectRetain();
      sub_1B2A28D1C((uint64_t)&v25);
      sub_1B2AD0BFC(v18);
      *a2 = v14;
      *(_OWORD *)(a2 + 3) = v19;
      return sub_1B2AD2CF4(v5);
    }
    sub_1B2A1F13C();
    swift_allocError();
    *(_OWORD *)uint64_t v17 = xmmword_1B2ECFE00;
    *(unsigned char *)(v17 + 16) = 5;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B2AD2278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7D9668);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B2AD22E0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, void *a6@<X8>)
{
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(*(void *)a1 + 72);
  if (v9)
  {
    uint64_t v10 = *(void *)(*(void *)a1 + 72);
    uint64_t v11 = *(void *)(*(void *)a1 + 80);
    uint64_t v12 = *(void *)(*(void *)a1 + 88);
    uint64_t v13 = *(void *)(*(void *)a1 + 96);
    uint64_t v14 = *(void *)(*(void *)a1 + 104);
    uint64_t v15 = *(void *)(*(void *)a1 + 112);
    uint64_t v16 = *(void *)(*(void *)a1 + 120);
LABEL_3:
    *a6 = v10;
    a6[1] = v11;
    a6[2] = v12;
    a6[3] = v13;
    a6[4] = v14;
    a6[5] = v15;
    a6[6] = v16;
    sub_1B2AD2CF4(v9);
    return;
  }
  ViewService.peopleSubgraphView.getter(a1, a2, *(void *)(*(void *)a1 + 88), *(void *)(*(void *)a1 + 96), *(void *)(*(void *)a1 + 104), a3, a4, a5, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, *(void *)(*(void *)a1 + 104),
    *(void *)(*(void *)a1 + 96),
    *(void *)(*(void *)a1 + 88),
    v29);
  if (!v6)
  {
    uint64_t v10 = v30;
    if (v30)
    {
      uint64_t v13 = v33;
      uint64_t v12 = v32;
      uint64_t v17 = v8[9];
      v8[9] = v30;
      v8[10] = v31;
      v8[11] = v32;
      v8[12] = v33;
      v8[13] = v34;
      v8[14] = v35;
      v8[15] = v36;
      uint64_t v16 = v36;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2AD0BFC(v17);
      uint64_t v14 = v34;
      uint64_t v11 = v31;
      uint64_t v15 = v35;
      goto LABEL_3;
    }
    sub_1B2A1F13C();
    swift_allocError();
    *(_OWORD *)uint64_t v18 = xmmword_1B2ECFE10;
    *(unsigned char *)(v18 + 16) = 5;
    swift_willThrow();
  }
}

void sub_1B2AD2490(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, void *a6@<X8>)
{
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(*(void *)a1 + 128);
  if (v9)
  {
    uint64_t v10 = *(void *)(*(void *)a1 + 128);
    uint64_t v11 = *(void *)(*(void *)a1 + 136);
    uint64_t v12 = *(void *)(*(void *)a1 + 144);
    uint64_t v13 = *(void *)(*(void *)a1 + 152);
    uint64_t v14 = *(void *)(*(void *)a1 + 160);
    uint64_t v15 = *(void *)(*(void *)a1 + 168);
    uint64_t v16 = *(void *)(*(void *)a1 + 176);
LABEL_3:
    *a6 = v10;
    a6[1] = v11;
    a6[2] = v12;
    a6[3] = v13;
    a6[4] = v14;
    a6[5] = v15;
    a6[6] = v16;
    sub_1B2AD2CF4(v9);
    return;
  }
  ViewService.entitySubgraphView.getter(a1, a2, *(void *)(*(void *)a1 + 144), *(void *)(*(void *)a1 + 152), *(void *)(*(void *)a1 + 160), a3, a4, a5, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, *(void *)(*(void *)a1 + 160),
    *(void *)(*(void *)a1 + 152),
    *(void *)(*(void *)a1 + 144),
    v29);
  if (!v6)
  {
    uint64_t v10 = v30;
    if (v30)
    {
      uint64_t v13 = v33;
      uint64_t v12 = v32;
      uint64_t v17 = v8[16];
      v8[16] = v30;
      v8[17] = v31;
      v8[18] = v32;
      v8[19] = v33;
      v8[20] = v34;
      v8[21] = v35;
      v8[22] = v36;
      uint64_t v16 = v36;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2AD0BFC(v17);
      uint64_t v14 = v34;
      uint64_t v11 = v31;
      uint64_t v15 = v35;
      goto LABEL_3;
    }
    sub_1B2A1F13C();
    swift_allocError();
    *(_OWORD *)uint64_t v18 = xmmword_1B2ECFE20;
    *(unsigned char *)(v18 + 16) = 5;
    swift_willThrow();
  }
}

uint64_t sub_1B2AD2640@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView;
  os_log_t v6 = *(os_log_t *)v4;
  uint64_t v5 = *(void *)(v4 + 8);
  uint64_t v7 = *(void *)(v4 + 16);
  if (v5)
  {
    *a2 = v6;
    a2[1] = v5;
    a2[2] = v7;
  }
  else
  {
    ViewService.inferenceFeatureView.getter(v23);
    if (v2)
    {
      if (qword_1EB7E3A20 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1B2E81FB8();
      sub_1B29A4B98(v8, (uint64_t)qword_1EB7E4AD8);
      id v9 = v2;
      id v10 = v2;
      uint64_t v11 = sub_1B2E81F98();
      os_log_type_t v12 = sub_1B2E82DB8();
      if (os_log_type_enabled(v11, v12))
      {
        os_log_t log = v11;
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 138412290;
        id v14 = v2;
        uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
        v23[0] = v15;
        sub_1B2E82FB8();
        *uint64_t v21 = v15;

        os_log_t v16 = log;
        _os_log_impl(&dword_1B2996000, log, v12, "Failed to fetch inferenceFeatureView with error: %@", v13, 0xCu);
        sub_1B29A3EB4(&qword_1EB7E3110);
        swift_arrayDestroy();
        sub_1B299B750();
        sub_1B299B750();
      }
      else
      {
      }
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0;
    }
    else
    {
      uint64_t v17 = v23[0];
      uint64_t v18 = v23[1];
      uint64_t v19 = v23[2];
      os_log_t log = *(os_log_t *)v4;
      uint64_t v22 = *(void *)(v4 + 8);
      *(void *)uint64_t v4 = v23[0];
      *(void *)(v4 + 8) = v18;
      *(void *)(v4 + 16) = v19;
      sub_1B2A8E50C(v17, v18);
      sub_1B2A8FC80((uint64_t)log, v22);
      *a2 = v17;
      a2[1] = v18;
      a2[2] = v19;
    }
  }
  return sub_1B2A8E50C((uint64_t)v6, v5);
}

uint64_t sub_1B2AD28B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_rankingService;
  if (*(void *)(*a1 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_rankingService))
  {
    uint64_t v7 = *(void **)(*a1
                    + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_rankingService);
  }
  else
  {
    uint64_t v8 = *(void **)(a2 + 24);
    type metadata accessor for EntityResolutionRankingService();
    swift_allocObject();
    id v9 = EntityResolutionRankingService.init(config:viewService:)((uint64_t)&v20, v8);
    if (v3)
    {
      if (qword_1EB7E3A20 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1B2E81FB8();
      sub_1B29A4B98(v10, (uint64_t)qword_1EB7E4AD8);
      id v11 = v3;
      id v12 = v3;
      uint64_t v13 = sub_1B2E81F98();
      os_log_type_t v14 = sub_1B2E82DB8();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v18 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 138412290;
        id v16 = v3;
        uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
        sub_1B2E82FB8();
        *uint64_t v18 = v19;

        _os_log_impl(&dword_1B2996000, v13, v14, "Failed to fetch Entity Resolution Ranking Service with error: %@", v15, 0xCu);
        sub_1B29A3EB4(&qword_1EB7E3110);
        swift_arrayDestroy();
        sub_1B299B750();
        sub_1B299B750();
      }
      else
      {
      }
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = v9;
      *(void *)(v5 + v6) = v9;
      swift_retain();
      swift_release();
    }
  }
  *a3 = v7;
  return swift_retain();
}

uint64_t sub_1B2AD2B04(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2AD2B58(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2AD2BAC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B29A3EB4(a3);
  sub_1B2999864();
  uint64_t v4 = sub_1B2AD2DAC();
  v5(v4);
  return a2;
}

uint64_t sub_1B2AD2BFC()
{
  uint64_t v1 = sub_1B299F5FC();
  v2(v1);
  sub_1B2999864();
  uint64_t v3 = sub_1B2AD2DAC();
  v4(v3);
  return v0;
}

uint64_t sub_1B2AD2C44(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B29A3EB4(a3);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(a2, a1);
  return a2;
}

uint64_t sub_1B2AD2CA0()
{
  uint64_t v2 = sub_1B299F5FC();
  v3(v2);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_1B2AD2CF4(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B2AD2D54(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1B2AD2DAC()
{
  return v0;
}

char *sub_1B2AD2DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  return &a14;
}

void sub_1B2AD2DD4()
{
  sub_1B29A19B4();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1B2ADA8A0() || (sub_1B2ADA894(), !(v6 ^ v4 | v5)))
  {
    sub_1B2999A68();
    sub_1B29B7048();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1B2ADA780();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1B299F610();
  sub_1B2AEEC30();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1B2ADA888();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1B2AD2E7C()
{
  sub_1B29A19B4();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1B2ADA8A0() || (sub_1B2ADA894(), !(v6 ^ v4 | v5)))
  {
    sub_1B2999A68();
    sub_1B29B7148();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1B2ADA780();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = sub_1B299F610();
  sub_1B2AEEF04(v8, v9);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1B2ADA888();
  if (!v4)
  {
    *(void *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1B2AD2F24()
{
  sub_1B29A19B4();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1B2ADA8A0() || (sub_1B2ADA894(), !(v6 ^ v4 | v5)))
  {
    sub_1B2999A68();
    sub_1B29B717C();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1B2ADA780();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1B299F610();
  sub_1B2AEEE4C();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1B2ADA888();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1B2AD2FD0()
{
  sub_1B29A19B4();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1B2ADA8A0() || (sub_1B2ADA894(), !(v6 ^ v4 | v5)))
  {
    sub_1B2999A68();
    sub_1B29B7260();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1B2ADA780();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1B299F610();
  sub_1B2AEF060();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1B2ADA888();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1B2AD307C()
{
  sub_1B2ADAD00();
  if (v6)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v7 = v4;
  if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t v8 = *(void *)(v0 + 24) >> 1, v8 < v3))
  {
    sub_1B29B7148();
    uint64_t v0 = v9;
    uint64_t v8 = *(void *)(v9 + 24) >> 1;
  }
  uint64_t v10 = v8 - *(void *)(v0 + 16);
  sub_1B2A488D8();
  if (v11 < v2) {
    goto LABEL_12;
  }
  if (v11)
  {
    uint64_t v12 = *(void *)(v0 + 16);
    BOOL v6 = __OFADD__(v12, v11);
    uint64_t v13 = v12 + v11;
    if (v6)
    {
      __break(1u);
      goto LABEL_43;
    }
    *(void *)(v0 + 16) = v13;
  }
  if (v11 != v10)
  {
LABEL_10:
    uint64_t result = sub_1B2A47690();
    *uint64_t v1 = v0;
    return result;
  }
LABEL_13:
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t result = v42;
  uint64_t v15 = v43;
  uint64_t v16 = v44;
  int64_t v17 = v45;
  if (v46)
  {
    unint64_t v18 = (v46 - 1) & v46;
    unint64_t v19 = __clz(__rbit64(v46)) | (v45 << 6);
    goto LABEL_15;
  }
  int64_t v5 = v45 + 1;
  if (!__OFADD__(v45, 1))
  {
    int64_t v21 = (unint64_t)(v44 + 64) >> 6;
    if (v5 >= v21) {
      goto LABEL_10;
    }
    uint64_t v24 = v43;
    unint64_t v35 = *(void *)(v43 + 8 * v5);
    if (v35) {
      goto LABEL_47;
    }
    int64_t v36 = v45 + 2;
    if (v45 + 2 >= v21) {
      goto LABEL_10;
    }
    unint64_t v35 = *(void *)(v43 + 8 * v36);
    if (!v35)
    {
      if (v45 + 3 >= v21) {
        goto LABEL_10;
      }
      unint64_t v35 = *(void *)(v43 + 8 * (v45 + 3));
      if (v35)
      {
        int64_t v5 = v45 + 3;
        goto LABEL_47;
      }
LABEL_57:
      int64_t v36 = v5 + 3;
      if (v5 + 3 >= v21) {
        goto LABEL_10;
      }
      unint64_t v35 = *(void *)(v24 + 8 * v36);
      if (!v35)
      {
        v5 += 4;
        if (v5 >= v21) {
          goto LABEL_10;
        }
        unint64_t v35 = *(void *)(v24 + 8 * v5);
        if (!v35)
        {
          int64_t v37 = v17 + 6;
          while (v37 < v21)
          {
            unint64_t v35 = *(void *)(v24 + 8 * v37++);
            if (v35)
            {
              int64_t v5 = v37 - 1;
              goto LABEL_47;
            }
          }
          goto LABEL_10;
        }
        goto LABEL_47;
      }
    }
    int64_t v5 = v36;
LABEL_47:
    unint64_t v18 = (v35 - 1) & v35;
    unint64_t v19 = __clz(__rbit64(v35)) + (v5 << 6);
    int64_t v17 = v5;
    uint64_t v15 = v24;
LABEL_15:
    uint64_t v20 = *(void *)(*(void *)(result + 48) + 8 * v19);
    int64_t v21 = (unint64_t)(v16 + 64) >> 6;
    int64_t v22 = v21 - 1;
LABEL_16:
    uint64_t v23 = *(void *)(v0 + 24) >> 1;
    if (v23 < v7 + 1)
    {
      int64_t v39 = v21;
      int64_t v40 = v22;
      uint64_t v41 = result;
      uint64_t v38 = v15;
      uint64_t v32 = v16;
      unint64_t v33 = v18;
      sub_1B29B7148();
      unint64_t v18 = v33;
      int64_t v21 = v39;
      int64_t v22 = v40;
      uint64_t v16 = v32;
      uint64_t v15 = v38;
      uint64_t v0 = v34;
      uint64_t result = v41;
      uint64_t v23 = *(void *)(v0 + 24) >> 1;
    }
    uint64_t v24 = v0 + 32;
    while (1)
    {
      if (v7 >= v23)
      {
        *(void *)(v0 + 16) = v7;
        goto LABEL_16;
      }
      *(void *)(v24 + 8 * v7++) = v20;
      if (v18)
      {
        unint64_t v25 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v26 = v25 | (v17 << 6);
        goto LABEL_32;
      }
      int64_t v27 = v17 + 1;
      if (__OFADD__(v17, 1))
      {
        __break(1u);
        goto LABEL_57;
      }
      if (v27 >= v21) {
        goto LABEL_43;
      }
      unint64_t v28 = *(void *)(v15 + 8 * v27);
      if (!v28)
      {
        int64_t v29 = v17 + 2;
        int64_t v5 = v17 + 1;
        if (v17 + 2 >= v21) {
          goto LABEL_43;
        }
        unint64_t v28 = *(void *)(v15 + 8 * v29);
        if (!v28)
        {
          int64_t v5 = v17 + 2;
          if (v17 + 3 >= v21) {
            goto LABEL_43;
          }
          unint64_t v28 = *(void *)(v15 + 8 * (v17 + 3));
          if (v28)
          {
            int64_t v27 = v17 + 3;
            goto LABEL_31;
          }
          int64_t v29 = v17 + 4;
          int64_t v5 = v17 + 3;
          if (v17 + 4 >= v21) {
            goto LABEL_43;
          }
          unint64_t v28 = *(void *)(v15 + 8 * v29);
          if (!v28)
          {
            int64_t v27 = v17 + 5;
            int64_t v5 = v17 + 4;
            if (v17 + 5 >= v21) {
              goto LABEL_43;
            }
            unint64_t v28 = *(void *)(v15 + 8 * v27);
            if (!v28)
            {
              int64_t v31 = v17 + 6;
              while (v31 < v21)
              {
                unint64_t v28 = *(void *)(v15 + 8 * v31++);
                if (v28)
                {
                  int64_t v27 = v31 - 1;
                  goto LABEL_31;
                }
              }
LABEL_43:
              *(void *)(v0 + 16) = v7;
              goto LABEL_10;
            }
            goto LABEL_31;
          }
        }
        int64_t v27 = v29;
      }
LABEL_31:
      unint64_t v30 = __clz(__rbit64(v28));
      unint64_t v18 = (v28 - 1) & v28;
      unint64_t v26 = v30 + (v27 << 6);
      int64_t v17 = v27;
LABEL_32:
      uint64_t v20 = *(void *)(*(void *)(result + 48) + 8 * v26);
    }
  }
  __break(1u);
  return result;
}

void sub_1B2AD3404()
{
  sub_1B29A19B4();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1B2ADA8A0() || (sub_1B2ADA894(), !(v6 ^ v4 | v5)))
  {
    sub_1B2999A68();
    sub_1B29B75A4();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1B2ADA780();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = sub_1B299F610();
  sub_1B2AEF47C(v8, v9);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1B2ADA888();
  if (!v4)
  {
    *(void *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1B2AD34B0()
{
  sub_1B29A19B4();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1B2ADA8A0() || (sub_1B2ADA894(), !(v6 ^ v4 | v5)))
  {
    sub_1B2999A68();
    sub_1B29B75D8();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1B2ADA780();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1B299F610();
  sub_1B2AEF52C();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1B2ADA888();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1B2AD355C()
{
  sub_1B29A19B4();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1B2ADA8A0() || (sub_1B2ADA894(), !(v6 ^ v4 | v5)))
  {
    sub_1B2999A68();
    sub_1B29B7480();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1B2ADA780();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1B299F610();
  sub_1B2AEF330();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1B2ADA888();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1B2AD3608()
{
  sub_1B29A19B4();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1B2ADA8A0() || (sub_1B2ADA894(), !(v6 ^ v4 | v5)))
  {
    sub_1B2999A68();
    sub_1B29B7848();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1B2ADA780();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = sub_1B299F610();
  sub_1B2AEEF04(v8, v9);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1B2ADA888();
  if (!v4)
  {
    *(void *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1B2AD36B0()
{
  sub_1B29A19B4();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1B2ADA8A0() || (sub_1B2ADA894(), !(v6 ^ v4 | v5)))
  {
    sub_1B2999A68();
    sub_1B29B8680();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1B2ADA780();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = sub_1B299F610();
  sub_1B2AEF724(v8, v9);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1B2ADA888();
  if (!v4)
  {
    *(void *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1B2AD3758(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(void *)(v3 + 24) >> 1)
  {
    sub_1B29B8C5C();
    uint64_t v3 = v6;
  }
  if (!*(void *)(a1 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1B2AF0000();
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1B2AD3838()
{
  sub_1B2ADAD00();
  if (v5)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v6 = v4;
  if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t v7 = *(void *)(v0 + 24) >> 1, v7 < v3))
  {
    sub_1B29B8C90();
    uint64_t v0 = v8;
    uint64_t v7 = *(void *)(v8 + 24) >> 1;
  }
  uint64_t v9 = v7 - *(void *)(v0 + 16);
  sub_1B2A49704();
  if (v10 < v2) {
    goto LABEL_12;
  }
  if (v10)
  {
    uint64_t v14 = *(void *)(v0 + 16);
    BOOL v5 = __OFADD__(v14, v10);
    uint64_t v15 = v14 + v10;
    if (v5)
    {
      __break(1u);
LABEL_49:
      int64_t v21 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        return;
      }
      int64_t v22 = (unint64_t)(v12 + 64) >> 6;
      if (v21 >= v22) {
        goto LABEL_10;
      }
      uint64_t v24 = v11;
      unint64_t v38 = *(void *)(v11 + 8 * v21);
      if (v38) {
        goto LABEL_52;
      }
      int64_t v39 = v13 + 2;
      if (v13 + 2 >= v22) {
        goto LABEL_10;
      }
      unint64_t v38 = *(void *)(v11 + 8 * v39);
      if (!v38)
      {
        if (v13 + 3 >= v22) {
          goto LABEL_10;
        }
        unint64_t v38 = *(void *)(v11 + 8 * (v13 + 3));
        if (v38)
        {
          int64_t v21 = v13 + 3;
          goto LABEL_52;
        }
LABEL_63:
        int64_t v39 = v21 + 3;
        if (v21 + 3 >= v22) {
          goto LABEL_10;
        }
        unint64_t v38 = *(void *)(v24 + 8 * v39);
        if (!v38)
        {
          v21 += 4;
          if (v21 >= v22) {
            goto LABEL_10;
          }
          unint64_t v38 = *(void *)(v24 + 8 * v21);
          if (!v38)
          {
            int64_t v40 = v13 + 6;
            while (v40 < v22)
            {
              unint64_t v38 = *(void *)(v24 + 8 * v40++);
              if (v38)
              {
                int64_t v21 = v40 - 1;
                goto LABEL_52;
              }
            }
            goto LABEL_10;
          }
          goto LABEL_52;
        }
      }
      int64_t v21 = v39;
LABEL_52:
      unint64_t v16 = (v38 - 1) & v38;
      unint64_t v17 = __clz(__rbit64(v38)) + (v21 << 6);
      int64_t v13 = v21;
      uint64_t v11 = v24;
      goto LABEL_15;
    }
    *(void *)(v0 + 16) = v15;
  }
  if (v10 != v9) {
    goto LABEL_10;
  }
LABEL_13:
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v10 = v47;
  uint64_t v11 = v48;
  uint64_t v12 = v49;
  int64_t v13 = v50;
  if (!v51) {
    goto LABEL_49;
  }
  unint64_t v16 = (v51 - 1) & v51;
  unint64_t v17 = __clz(__rbit64(v51)) | (v50 << 6);
LABEL_15:
  uint64_t v18 = *(void *)(v10 + 48);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 24 * v17);
  if (v19 == 3) {
    goto LABEL_10;
  }
  long long v20 = *(_OWORD *)(v18 + 24 * v17 + 8);
  int64_t v21 = (unint64_t)(v12 + 64) >> 6;
  int64_t v22 = v21 - 1;
  while (2)
  {
    uint64_t v23 = *(void *)(v0 + 24) >> 1;
    if (v23 < v6 + 1)
    {
      int64_t v44 = v21;
      int64_t v45 = v22;
      uint64_t v46 = v10;
      uint64_t v42 = v12;
      uint64_t v43 = v11;
      int64_t v35 = v13;
      unint64_t v36 = v16;
      long long v41 = v20;
      sub_1B29B8C90();
      long long v20 = v41;
      int64_t v21 = v44;
      int64_t v22 = v45;
      unint64_t v16 = v36;
      int64_t v13 = v35;
      uint64_t v12 = v42;
      uint64_t v11 = v43;
      uint64_t v0 = v37;
      uint64_t v10 = v46;
      uint64_t v23 = *(void *)(v0 + 24) >> 1;
    }
    uint64_t v24 = v0 + 32;
    for (BOOL i = v19 == 3; !i && v6 < v23; BOOL i = v19 == 3)
    {
      uint64_t v27 = v24 + 24 * v6;
      *(unsigned char *)uint64_t v27 = v19;
      *(_OWORD *)(v27 + 8) = v20;
      ++v6;
      if (v16)
      {
        unint64_t v28 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v29 = v28 | (v13 << 6);
        goto LABEL_37;
      }
      int64_t v30 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        goto LABEL_63;
      }
      if (v30 >= v21) {
        goto LABEL_53;
      }
      unint64_t v31 = *(void *)(v11 + 8 * v30);
      if (!v31)
      {
        int64_t v32 = v13 + 2;
        if (v13 + 2 >= v21) {
          goto LABEL_53;
        }
        unint64_t v31 = *(void *)(v11 + 8 * v32);
        if (!v31)
        {
          if (v13 + 3 >= v21) {
            goto LABEL_53;
          }
          unint64_t v31 = *(void *)(v11 + 8 * (v13 + 3));
          if (v31)
          {
            int64_t v30 = v13 + 3;
            goto LABEL_36;
          }
          int64_t v32 = v13 + 4;
          if (v13 + 4 >= v21) {
            goto LABEL_53;
          }
          unint64_t v31 = *(void *)(v11 + 8 * v32);
          if (!v31)
          {
            int64_t v30 = v13 + 5;
            if (v13 + 5 >= v21) {
              goto LABEL_53;
            }
            unint64_t v31 = *(void *)(v11 + 8 * v30);
            if (!v31)
            {
              int64_t v34 = v13 + 6;
              while (v34 < v21)
              {
                unint64_t v31 = *(void *)(v11 + 8 * v34++);
                if (v31)
                {
                  int64_t v30 = v34 - 1;
                  goto LABEL_36;
                }
              }
LABEL_53:
              *(void *)(v0 + 16) = v6;
              goto LABEL_10;
            }
            goto LABEL_36;
          }
        }
        int64_t v30 = v32;
      }
LABEL_36:
      unint64_t v16 = (v31 - 1) & v31;
      unint64_t v29 = __clz(__rbit64(v31)) + (v30 << 6);
      int64_t v13 = v30;
LABEL_37:
      unint64_t v33 = (unsigned __int8 *)(*(void *)(v10 + 48) + 24 * v29);
      uint64_t v19 = *v33;
      long long v20 = *(_OWORD *)(v33 + 8);
    }
    *(void *)(v0 + 16) = v6;
    if (v19 != 3) {
      continue;
    }
    break;
  }
LABEL_10:
  sub_1B2A47690();
  *uint64_t v1 = v0;
}

void sub_1B2AD3C28()
{
  sub_1B29A19B4();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1B2ADA8A0() || (sub_1B2ADA894(), !(v6 ^ v4 | v5)))
  {
    sub_1B2999A68();
    sub_1B29B8D6C();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1B2ADA780();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v8 = sub_1B299F610();
  sub_1B2AF0144(v8, v9, v10);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1B2ADA888();
  if (!v4)
  {
    *(void *)(v2 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1B2AD3CD0()
{
  sub_1B29A19B4();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1B2ADA8A0() || (sub_1B2ADA894(), !(v6 ^ v4 | v5)))
  {
    sub_1B2999A68();
    sub_1B29B7120();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1B2ADA780();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1B299F610();
  sub_1B2AEEEF8();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1B2ADA888();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1B2AD3D78()
{
  sub_1B29A19B4();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1B2ADA8A0() || (sub_1B2ADA894(), !(v6 ^ v4 | v5)))
  {
    sub_1B2999A68();
    sub_1B29B93B0();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1B2ADA780();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1B299F610();
  sub_1B2AF0440();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1B2ADA888();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

id EntityResolutionTextClient.__allocating_init(for:viaXPC:)()
{
  return EntityResolutionTextClient.init(for:viaXPC:)();
}

id EntityResolutionTextClient.init(for:viaXPC:)()
{
  sub_1B29E5808();
  if (v2)
  {
    uint64_t v3 = (objc_class *)type metadata accessor for EntityResolutionTextXPCService();
    swift_allocObject();
    char v4 = v0;
    uint64_t v5 = sub_1B2ADCE4C(v0, 0);
    char v6 = &off_1F0AD4070;
  }
  else
  {
    uint64_t v3 = (objc_class *)type metadata accessor for EntityResolutionTextInProcessService();
    objc_allocWithZone(v3);
    uint64_t v7 = v0;
    uint64_t v5 = (uint64_t)sub_1B2ADAD44((uint64_t)v0, 1);
    if (v1)
    {

      type metadata accessor for EntityResolutionTextClient();
      return (id)sub_1B2ADAC68();
    }
    char v6 = &off_1F0AD6EB0;
  }
  uint64_t v11 = v3;
  uint64_t v12 = v6;
  *(void *)&long long v10 = v5;
  sub_1B29D1D20(&v10, (uint64_t)&v0[OBJC_IVAR___GDEntityResolutionTextClientInner_service]);
  *(void *)&v0[OBJC_IVAR___GDEntityResolutionTextClientInner_feedbackService] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedbackService()), sel_init);

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for EntityResolutionTextClient();
  return objc_msgSendSuper2(&v9, sel_init);
}

id EntityResolutionTextClient.__allocating_init(for:viaXPC:warmup:)(uint64_t a1, char a2, char a3)
{
  id v7 = objc_allocWithZone(v3);
  return EntityResolutionTextClient.init(for:viaXPC:warmup:)(a1, a2, a3);
}

id EntityResolutionTextClient.init(for:viaXPC:warmup:)(uint64_t a1, char a2, char a3)
{
  uint64_t v5 = v3;
  if (a2)
  {
    if (a3) {
      uint64_t v8 = (void *)a1;
    }
    else {
      uint64_t v8 = 0;
    }
    objc_super v9 = (objc_class *)type metadata accessor for EntityResolutionTextXPCService();
    swift_allocObject();
    long long v10 = v5;
    uint64_t v11 = sub_1B2ADCE4C(v8, (a3 & 1) == 0);
    uint64_t v12 = &off_1F0AD4070;
  }
  else
  {
    objc_super v9 = (objc_class *)type metadata accessor for EntityResolutionTextInProcessService();
    objc_allocWithZone(v9);
    int64_t v13 = v5;
    uint64_t v11 = (uint64_t)sub_1B2ADAD44(a1, a3 & 1);
    if (v4)
    {

      type metadata accessor for EntityResolutionTextClient();
      return (id)sub_1B2ADAC68();
    }
    uint64_t v12 = &off_1F0AD6EB0;
  }
  unint64_t v17 = v9;
  uint64_t v18 = v12;
  *(void *)&long long v16 = v11;
  sub_1B29D1D20(&v16, (uint64_t)&v5[OBJC_IVAR___GDEntityResolutionTextClientInner_service]);
  *(void *)&v5[OBJC_IVAR___GDEntityResolutionTextClientInner_feedbackService] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedbackService()), sel_init);

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for EntityResolutionTextClient();
  return objc_msgSendSuper2(&v15, sel_init);
}

id EntityResolutionTextClient.__allocating_init(viaXPC:)(char a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for EntityResolutionTextClient());
  return EntityResolutionTextClient.init(for:viaXPC:warmup:)(0, a1, 0);
}

id EntityResolutionTextClient.__allocating_init(for:warmup:)()
{
  sub_1B2ADACC0();
  uint64_t v0 = sub_1B2ADAC94();
  return EntityResolutionTextClient.init(for:warmup:)(v0, v1);
}

id EntityResolutionTextClient.init(for:warmup:)(uint64_t a1, char a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for EntityResolutionTextClient());
  id v5 = EntityResolutionTextClient.init(for:viaXPC:warmup:)(a1, 0, a2);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t sub_1B2AD4290()
{
  sub_1B299B3BC();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = sub_1B2E81F08();
  v1[5] = v3;
  sub_1B299D2A8(v3);
  v1[6] = v4;
  v1[7] = sub_1B299E508();
  v1[8] = swift_task_alloc();
  uint64_t v5 = sub_1B2E81FB8();
  v1[9] = v5;
  sub_1B299D2A8(v5);
  v1[10] = v6;
  v1[11] = sub_1B29A4C44();
  uint64_t v7 = sub_1B2E81F38();
  v1[12] = v7;
  sub_1B299D2A8(v7);
  v1[13] = v8;
  v1[14] = sub_1B29A4C44();
  uint64_t v9 = type metadata accessor for LogSignpost();
  v1[15] = v9;
  sub_1B299B0F0(v9);
  v1[16] = sub_1B29A4C44();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

uint64_t sub_1B2AD43AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_1B2ADA91C();
  sub_1B2ADAB94();
  if (qword_1EB7E6618 != -1) {
    uint64_t v15 = swift_once();
  }
  uint64_t v16 = sub_1B2ADA7C4(v15, (uint64_t)qword_1EB7E6600);
  v17(v16);
  sub_1B2ADAD2C();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v18 = (void *)sub_1B2E81F28();
  sub_1B2E82E68();
  if (sub_1B2ADAD14())
  {
    uint64_t v19 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADACA8(v19);
    sub_1B2ADABC8();
    sub_1B2ADAA14(&dword_1B2996000, v20, v21, v22, "ECR.TextClient.warmup", "");
    sub_1B299B750();
  }
  uint64_t v48 = v14[14];
  uint64_t v23 = v14[6];

  uint64_t v24 = sub_1B29A43E0();
  v25(v24);
  sub_1B2E81F78();
  sub_1B29A4198();
  sub_1B29A4400();
  uint64_t v26 = sub_1B2ADA7F4();
  v27(v26);
  uint64_t v28 = sub_1B2ADA794((uint64_t)"ECR.TextClient.warmup");
  v29(v28);
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  sub_1B29A4B98(v14[9], (uint64_t)qword_1EB7E4AD8);
  int64_t v30 = sub_1B2E81F98();
  os_log_type_t v31 = sub_1B2E82DA8();
  if (sub_1B2ADA9F8(v31))
  {
    uint64_t v32 = v14[3];
    unint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v33 = 134217984;
    void v14[2] = v32;
    sub_1B2E82FB8();
    _os_log_impl(&dword_1B2996000, v30, (os_log_type_t)v23, "ECR client: warmup async for mode: %ld.", v33, 0xCu);
    sub_1B299B750();
  }

  uint64_t v34 = v14[3];
  int64_t v35 = (void *)(v14[4] + OBJC_IVAR___GDEntityResolutionTextClientInner_service);
  uint64_t v36 = v35[3];
  uint64_t v37 = v35[4];
  sub_1B29AEC7C(v35, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 8))(v34, v36, v37);
  uint64_t v38 = v14[16];
  sub_1B2AD7558();
  sub_1B2A93478(v38);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  sub_1B2ADA938();
  return v40(v39, v40, v41, v42, v43, v44, v45, v46, a9, v48, a11, a12, a13, a14);
}

uint64_t sub_1B2AD46E8(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  a3;
  uint64_t v5 = (void *)swift_task_alloc();
  v3[4] = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1B2AD47A4;
  return sub_1B2AD4290();
}

uint64_t sub_1B2AD47A4()
{
  uint64_t v3 = v0;
  sub_1B29A19D4();
  uint64_t v5 = v4;
  sub_1B299B0E0();
  *uint64_t v6 = v5;
  uint64_t v7 = *(void **)(v1 + 16);
  uint64_t v8 = *v2;
  *uint64_t v6 = *v2;
  swift_task_dealloc();

  uint64_t v9 = *(void *)(v1 + 24);
  if (v3)
  {
    uint64_t v10 = (void *)sub_1B2E80378();

    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);
  }
  else
  {
    uint64_t v11 = sub_1B2ADAC34();
    v12(v11);
  }
  _Block_release(*(const void **)(v5 + 24));
  int64_t v13 = *(uint64_t (**)(void))(v8 + 8);
  return v13();
}

void sub_1B2AD48F0()
{
  sub_1B299F300();
  uint64_t v29 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v28 = v3;
  MEMORY[0x1F4188790](v4);
  sub_1B2ADA998(v5, v27);
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1B299E714();
  sub_1B299D278();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1B29A4E64();
  sub_1B299D278();
  MEMORY[0x1F4188790](v11);
  sub_1B299B1BC();
  sub_1B2999864();
  MEMORY[0x1F4188790](v12);
  sub_1B29A0480();
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1B29A4B98(v7, (uint64_t)qword_1EB7E6600);
  uint64_t v30 = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v0, v13, v7);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v14 = (void *)sub_1B2E81F28();
  os_signpost_type_t v15 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v16 = (_WORD *)sub_1B299B8CC();
    os_signpost_id_t v17 = sub_1B2ADAA9C(v16);
    sub_1B2ADAB04(&dword_1B2996000, v18, v15, v17, "ECR.TextClient.warmup", "");
    sub_1B299B750();
  }

  sub_1B29A080C();
  v19();
  sub_1B2E81F78();
  os_log_type_t v20 = sub_1B29A4198();
  uint64_t v21 = sub_1B2E81F68();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v2, v29);
  *(void *)uint64_t v1 = "ECR.TextClient.warmup";
  *(void *)(v1 + 8) = 21;
  *(unsigned char *)(v1 + 16) = 2;
  *(void *)(v1 + 24) = v21;
  sub_1B29A15F0();
  v22();
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1B2ADABA0(v30, (uint64_t)qword_1EB7E4AD8);
  os_log_type_t v24 = sub_1B2E82DA8();
  if (sub_1B299B8E4(v24))
  {
    unint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v25 = 134217984;
    sub_1B2E82FB8();
    _os_log_impl(&dword_1B2996000, v23, v20, "ECR client: warmup for mode: %ld.", v25, 0xCu);
    sub_1B299B750();
  }

  sub_1B2ADA82C(OBJC_IVAR___GDEntityResolutionTextClientInner_service);
  sub_1B2ADAAF4();
  v26();
  sub_1B2AD7558();
  sub_1B2A93478(v1);
  sub_1B29998C8();
}

uint64_t sub_1B2AD4D04()
{
  sub_1B299B3BC();
  v1[2] = v0;
  uint64_t v2 = sub_1B2E81F08();
  v1[3] = v2;
  sub_1B299D2A8(v2);
  v1[4] = v3;
  v1[5] = sub_1B299E508();
  v1[6] = swift_task_alloc();
  uint64_t v4 = sub_1B2E81FB8();
  v1[7] = v4;
  sub_1B299D2A8(v4);
  v1[8] = v5;
  v1[9] = sub_1B29A4C44();
  uint64_t v6 = sub_1B2E81F38();
  v1[10] = v6;
  sub_1B299D2A8(v6);
  v1[11] = v7;
  v1[12] = sub_1B29A4C44();
  uint64_t v8 = type metadata accessor for LogSignpost();
  v1[13] = v8;
  sub_1B299B0F0(v8);
  v1[14] = sub_1B29A4C44();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B2AD4E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_1B2ADA91C();
  sub_1B2ADAB94();
  if (qword_1EB7E6618 != -1) {
    uint64_t v15 = swift_once();
  }
  uint64_t v16 = sub_1B2ADA7C4(v15, (uint64_t)qword_1EB7E6600);
  v17(v16);
  sub_1B2ADAD2C();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v18 = (void *)sub_1B2E81F28();
  sub_1B2E82E68();
  if (sub_1B2ADAD14())
  {
    uint64_t v19 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADACA8(v19);
    sub_1B2ADABC8();
    sub_1B2ADAA14(&dword_1B2996000, v20, v21, v22, "ECR.TextClient.cooldown", "");
    sub_1B299B750();
  }
  uint64_t v47 = v14[12];

  uint64_t v23 = sub_1B29A43E0();
  v24(v23);
  sub_1B2E81F78();
  sub_1B29A4198();
  sub_1B29A4400();
  uint64_t v25 = sub_1B2ADA7F4();
  v26(v25);
  uint64_t v27 = sub_1B2ADA794((uint64_t)"ECR.TextClient.cooldown");
  v28(v27);
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  sub_1B29A4B98(v14[7], (uint64_t)qword_1EB7E4AD8);
  uint64_t v29 = (void *)sub_1B2E81F98();
  os_log_type_t v30 = sub_1B2E82DA8();
  if (sub_1B2ADA9F8(v30))
  {
    os_log_type_t v31 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADA954(v31);
    sub_1B2ADA9D8(&dword_1B2996000, v32, v33, "ECR client: cooldown async.");
    sub_1B2ADA810();
  }
  uint64_t v34 = v14[14];
  uint64_t v35 = v14[2];

  uint64_t v36 = *(void *)(v35 + OBJC_IVAR___GDEntityResolutionTextClientInner_service + 24);
  uint64_t v37 = *(void *)(v35 + OBJC_IVAR___GDEntityResolutionTextClientInner_service + 32);
  sub_1B29AEC7C((void *)(v35 + OBJC_IVAR___GDEntityResolutionTextClientInner_service), v36);
  (*(void (**)(uint64_t, uint64_t))(v37 + 16))(v36, v37);
  sub_1B2AD7558();
  sub_1B2A93478(v34);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  sub_1B2ADA938();
  return v39(v38, v39, v40, v41, v42, v43, v44, v45, a9, v47, a11, a12, a13, a14);
}

uint64_t sub_1B2AD50FC(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1B2ADA774;
  return sub_1B2AD4D04();
}

void sub_1B2AD51A4()
{
  sub_1B299F300();
  uint64_t v35 = v0;
  uint64_t v37 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v36 = v3;
  MEMORY[0x1F4188790](v4);
  sub_1B2ADA998(v5, v31);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = sub_1B2E81FB8();
  sub_1B299D278();
  MEMORY[0x1F4188790](v10);
  sub_1B29A4E64();
  sub_1B299D278();
  uint64_t v33 = v12;
  uint64_t v34 = v11;
  MEMORY[0x1F4188790](v11);
  type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v13);
  sub_1B299ADB4();
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  sub_1B29A4B98(v9, (uint64_t)qword_1EB7E6600);
  uint64_t v14 = sub_1B2ADAAC8();
  v15(v14);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v16 = sub_1B2E81F28();
  os_signpost_type_t v17 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v18 = (_WORD *)sub_1B299B8CC();
    uint64_t v32 = v9;
    sub_1B2ADAC88(v18);
    os_signpost_id_t v19 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v16, v17, v19, "ECR.TextClient.cooldown", "", v2, 2u);
    uint64_t v9 = v32;
    sub_1B299B750();
  }

  uint64_t v20 = v36;
  sub_1B29A080C();
  v21();
  sub_1B2E81F78();
  sub_1B29A4198();
  uint64_t v22 = sub_1B2ADAAD8();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v37);
  *(void *)uint64_t v1 = "ECR.TextClient.cooldown";
  *(void *)(v1 + 8) = 23;
  *(unsigned char *)(v1 + 16) = 2;
  *(void *)(v1 + 24) = v22;
  sub_1B29A15F0();
  v23();
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  os_log_type_t v24 = (void *)sub_1B2ADABA0(v9, (uint64_t)qword_1EB7E4AD8);
  os_log_type_t v25 = sub_1B2E82DA8();
  if (sub_1B299B8E4(v25))
  {
    uint64_t v26 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADAC5C(v26);
    sub_1B2ADA8D4(&dword_1B2996000, v27, v28, "ECR client: cooldown.");
    sub_1B299B750();
  }

  uint64_t v29 = *(void *)(v35 + OBJC_IVAR___GDEntityResolutionTextClientInner_service + 24);
  uint64_t v30 = *(void *)(v35 + OBJC_IVAR___GDEntityResolutionTextClientInner_service + 32);
  sub_1B29AEC7C((void *)(v35 + OBJC_IVAR___GDEntityResolutionTextClientInner_service), v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
  sub_1B2AD7558();
  sub_1B2A93478(v1);
  sub_1B29998C8();
}

uint64_t sub_1B2AD55A8()
{
  sub_1B299B3BC();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = sub_1B2E81F08();
  v1[4] = v3;
  sub_1B299D2A8(v3);
  v1[5] = v4;
  v1[6] = sub_1B299E508();
  v1[7] = swift_task_alloc();
  uint64_t v5 = sub_1B2E81FB8();
  v1[8] = v5;
  sub_1B299D2A8(v5);
  v1[9] = v6;
  v1[10] = sub_1B29A4C44();
  uint64_t v7 = sub_1B2E81F38();
  v1[11] = v7;
  sub_1B299D2A8(v7);
  v1[12] = v8;
  v1[13] = sub_1B29A4C44();
  uint64_t v9 = type metadata accessor for LogSignpost();
  v1[14] = v9;
  sub_1B299B0F0(v9);
  v1[15] = sub_1B29A4C44();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

uint64_t sub_1B2AD56C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_1B2ADA91C();
  sub_1B2ADAB94();
  if (qword_1EB7E6618 != -1) {
    uint64_t v16 = swift_once();
  }
  uint64_t v17 = *(void *)(v14 + 80);
  uint64_t v18 = sub_1B2ADA7C4(v16, (uint64_t)qword_1EB7E6600);
  v19(v18);
  sub_1B2ADAD2C();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  sub_1B2E81F28();
  sub_1B2E82E68();
  if (sub_1B2ADAD14())
  {
    uint64_t v20 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADACA8(v20);
    sub_1B2ADABC8();
    sub_1B2ADAA14(&dword_1B2996000, v21, v22, v23, "ECR.TextClient.resolve", "");
    sub_1B299B750();
  }
  sub_1B299AE34();
  uint64_t v24 = sub_1B29A43E0();
  v25(v24);
  sub_1B2E81F78();
  sub_1B29A4198();
  sub_1B29A4400();
  uint64_t v26 = sub_1B2ADA7F4();
  v27(v26);
  uint64_t v28 = sub_1B2ADA794((uint64_t)"ECR.TextClient.resolve");
  v29(v28);
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  sub_1B29A4B98(*(void *)(v14 + 64), (uint64_t)qword_1EB7E4AD8);
  sub_1B2E81F98();
  os_log_type_t v30 = sub_1B2E82DA8();
  if (sub_1B2ADA9F8(v30))
  {
    uint64_t v31 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADA954(v31);
    sub_1B2ADA9D8(&dword_1B2996000, v32, v33, "ECR client: resolve entitites async.");
    sub_1B2ADA810();
  }
  sub_1B2ADAB30();
  sub_1B29AEC7C((void *)(v15 + OBJC_IVAR___GDEntityResolutionTextClientInner_service), *(void *)(v15 + OBJC_IVAR___GDEntityResolutionTextClientInner_service + 24));
  uint64_t v34 = sub_1B2ADAB7C();
  v35(v34);
  sub_1B2AD7558();
  sub_1B2A93478(v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B2ADA938();
  return v38(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1B2AD5918(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  a3;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[5] = v7;
  void *v7 = v3;
  v7[1] = sub_1B2AD59DC;
  return sub_1B2AD55A8();
}

uint64_t sub_1B2AD59DC(void *a1)
{
  uint64_t v4 = v1;
  sub_1B29A19D4();
  id v6 = (void *)v2[3];
  uint64_t v7 = (void *)v2[2];
  uint64_t v8 = *v3;
  sub_1B299B0E0();
  *uint64_t v9 = v8;
  swift_task_dealloc();

  uint64_t v10 = (void (**)(void, void, void))v2[4];
  if (v4)
  {
    uint64_t v11 = (void *)sub_1B2E80378();

    uint64_t v12 = sub_1B2ADAC34();
    v13(v12);

    _Block_release(v10);
  }
  else
  {
    ((void (**)(void, void *, void))v10)[2](v10, a1, 0);
    _Block_release(v10);
  }
  uint64_t v14 = *(uint64_t (**)(void))(v8 + 8);
  return v14();
}

void sub_1B2AD5B5C()
{
  sub_1B299F300();
  sub_1B2E81F08();
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B2ADA978();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = sub_1B299E714();
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A4E64();
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B2ADAA30();
  sub_1B2999864();
  MEMORY[0x1F4188790](v6);
  sub_1B29A0480();
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  sub_1B29A4B98(v3, (uint64_t)qword_1EB7E6600);
  uint64_t v7 = sub_1B2ADA9B8();
  v8(v7);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v9 = (void *)sub_1B2E81F28();
  os_signpost_type_t v10 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v11 = (_WORD *)sub_1B299B8CC();
    os_signpost_id_t v12 = sub_1B2ADAA9C(v11);
    sub_1B2ADAB04(&dword_1B2996000, v13, v10, v12, "ECR.TextClient.resolve", "");
    sub_1B299B750();
  }

  sub_1B29A080C();
  v14();
  sub_1B2E81F78();
  sub_1B29A4198();
  sub_1B2ADAAD8();
  uint64_t v15 = sub_1B2ADAA64();
  v16(v15);
  uint64_t v17 = sub_1B2ADA854((uint64_t)"ECR.TextClient.resolve");
  v18(v17);
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  os_signpost_id_t v19 = (void *)sub_1B2ADABA0(v25, (uint64_t)qword_1EB7E4AD8);
  os_log_type_t v20 = sub_1B2E82DA8();
  if (sub_1B299B8E4(v20))
  {
    uint64_t v21 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADAC5C(v21);
    sub_1B2ADA8D4(&dword_1B2996000, v22, v23, "ECR client: resolve entitites.");
    sub_1B299B750();
  }

  sub_1B2ADA82C(OBJC_IVAR___GDEntityResolutionTextClientInner_service);
  sub_1B2ADAAF4();
  v24();
  sub_1B2AD7558();
  sub_1B2A93478(v0);
  sub_1B2ADAB6C();
  sub_1B29998C8();
}

uint64_t sub_1B2AD5EFC()
{
  sub_1B299B3BC();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = sub_1B2E81F08();
  v1[4] = v3;
  sub_1B299D2A8(v3);
  v1[5] = v4;
  v1[6] = sub_1B299E508();
  v1[7] = swift_task_alloc();
  uint64_t v5 = sub_1B2E81FB8();
  v1[8] = v5;
  sub_1B299D2A8(v5);
  v1[9] = v6;
  v1[10] = sub_1B29A4C44();
  uint64_t v7 = sub_1B2E81F38();
  v1[11] = v7;
  sub_1B299D2A8(v7);
  v1[12] = v8;
  v1[13] = sub_1B29A4C44();
  uint64_t v9 = type metadata accessor for LogSignpost();
  v1[14] = v9;
  sub_1B299B0F0(v9);
  v1[15] = sub_1B29A4C44();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

uint64_t sub_1B2AD6018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_1B2ADA91C();
  sub_1B2ADAB94();
  if (qword_1EB7E6618 != -1) {
    uint64_t v16 = swift_once();
  }
  uint64_t v17 = *(void *)(v14 + 80);
  uint64_t v18 = sub_1B2ADA7C4(v16, (uint64_t)qword_1EB7E6600);
  v19(v18);
  sub_1B2ADAD2C();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  sub_1B2E81F28();
  sub_1B2E82E68();
  if (sub_1B2ADAD14())
  {
    os_log_type_t v20 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADACA8(v20);
    sub_1B2ADABC8();
    sub_1B2ADAA14(&dword_1B2996000, v21, v22, v23, "ECR.TextClient.resolveBatch", "");
    sub_1B299B750();
  }
  sub_1B299AE34();
  uint64_t v24 = sub_1B29A43E0();
  v25(v24);
  sub_1B2E81F78();
  sub_1B29A4198();
  sub_1B29A4400();
  uint64_t v26 = sub_1B2ADA7F4();
  v27(v26);
  uint64_t v28 = sub_1B2ADA794((uint64_t)"ECR.TextClient.resolveBatch");
  v29(v28);
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  sub_1B29A4B98(*(void *)(v14 + 64), (uint64_t)qword_1EB7E4AD8);
  sub_1B2E81F98();
  os_log_type_t v30 = sub_1B2E82DA8();
  if (sub_1B2ADA9F8(v30))
  {
    uint64_t v31 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADA954(v31);
    sub_1B2ADA9D8(&dword_1B2996000, v32, v33, "ECR client: resolve entitites async in batch.");
    sub_1B2ADA810();
  }
  sub_1B2ADAB30();
  sub_1B29AEC7C((void *)(v15 + OBJC_IVAR___GDEntityResolutionTextClientInner_service), *(void *)(v15 + OBJC_IVAR___GDEntityResolutionTextClientInner_service + 24));
  uint64_t v34 = sub_1B2ADAB7C();
  v35(v34);
  sub_1B2AD7558();
  sub_1B2A93478(v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B2ADA938();
  return v38(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1B2AD626C(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = _Block_copy(aBlock);
  sub_1B2ADAB20();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a3;
  v10[3] = v9;
  v10[4] = a1;
  id v11 = a3;
  id v12 = a1;

  return sub_1B2AF8F40(a6, (uint64_t)v10);
}

uint64_t sub_1B2AD62E8(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  sub_1B29C3CA0(0, &qword_1E9C3D258);
  v3[4] = sub_1B2E82838();
  a3;
  uint64_t v5 = (void *)swift_task_alloc();
  v3[5] = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1B2AD63D0;
  return sub_1B2AD5EFC();
}

uint64_t sub_1B2AD63D0()
{
  uint64_t v2 = v0;
  sub_1B299B708();
  uint64_t v4 = v3;
  uint64_t v6 = *(void **)(v5 + 16);
  uint64_t v7 = *v1;
  sub_1B299B0E0();
  *uint64_t v8 = v7;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v9 = sub_1B2E80378();

    uint64_t v10 = 0;
    id v11 = (void *)v9;
  }
  else
  {
    sub_1B29C3CA0(0, &qword_1EB7D97F0);
    uint64_t v10 = sub_1B2E82828();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    id v11 = (void *)v10;
  }
  id v12 = *(void (***)(void, void, void))(v4 + 24);
  v12[2](v12, v10, v9);

  _Block_release(v12);
  sub_1B299AD7C();
  return v13();
}

void sub_1B2AD6564()
{
  sub_1B299F300();
  sub_1B2E81F08();
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B2ADA978();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = sub_1B299E714();
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A4E64();
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B2ADAA30();
  sub_1B2999864();
  MEMORY[0x1F4188790](v6);
  sub_1B29A0480();
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  sub_1B29A4B98(v3, (uint64_t)qword_1EB7E6600);
  uint64_t v7 = sub_1B2ADA9B8();
  v8(v7);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v9 = (void *)sub_1B2E81F28();
  os_signpost_type_t v10 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    id v11 = (_WORD *)sub_1B299B8CC();
    os_signpost_id_t v12 = sub_1B2ADAA9C(v11);
    sub_1B2ADAB04(&dword_1B2996000, v13, v10, v12, "ECR.TextClient.resolveBatch", "");
    sub_1B299B750();
  }

  sub_1B29A080C();
  v14();
  sub_1B2E81F78();
  sub_1B29A4198();
  sub_1B2ADAAD8();
  uint64_t v15 = sub_1B2ADAA64();
  v16(v15);
  uint64_t v17 = sub_1B2ADA854((uint64_t)"ECR.TextClient.resolveBatch");
  v18(v17);
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  os_signpost_id_t v19 = (void *)sub_1B2ADABA0(v25, (uint64_t)qword_1EB7E4AD8);
  os_log_type_t v20 = sub_1B2E82DA8();
  if (sub_1B299B8E4(v20))
  {
    uint64_t v21 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADAC5C(v21);
    sub_1B2ADA8D4(&dword_1B2996000, v22, v23, "ECR client: resolve entitites in batch.");
    sub_1B299B750();
  }

  sub_1B2ADA82C(OBJC_IVAR___GDEntityResolutionTextClientInner_service);
  sub_1B2ADAAF4();
  v24();
  sub_1B2AD7558();
  sub_1B2A93478(v0);
  sub_1B2ADAB6C();
  sub_1B29998C8();
}

void sub_1B2AD6960()
{
  sub_1B299F300();
  uint64_t v31 = v2;
  uint64_t v32 = v3;
  uint64_t v29 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B2999940();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1B2ADABFC();
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B29A4E64();
  sub_1B299D278();
  MEMORY[0x1F4188790](v10);
  sub_1B299B1BC();
  sub_1B2999864();
  MEMORY[0x1F4188790](v11);
  sub_1B299B3C8();
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  sub_1B29A4B98(v8, (uint64_t)qword_1EB7E6600);
  uint64_t v12 = sub_1B2ADAAC8();
  uint64_t v30 = v8;
  v13(v12);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v14 = sub_1B2E81F28();
  os_signpost_type_t v15 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v16 = (uint8_t *)sub_1B299B8CC();
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v17 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v14, v15, v17, "ECR.TextClient.mention", "", v16, 2u);
    sub_1B299B750();
  }

  sub_1B2ADAA58();
  sub_1B29A080C();
  v19(v18);
  sub_1B2E81F78();
  sub_1B29A4198();
  uint64_t v20 = sub_1B2E81F68();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v29);
  *(void *)uint64_t v0 = "ECR.TextClient.mention";
  *(void *)(v0 + 8) = 22;
  *(unsigned char *)(v0 + 16) = 2;
  *(void *)(v0 + 24) = v20;
  sub_1B29A15F0();
  v22(v21);
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v23 = (void *)sub_1B2ADABA0(v30, (uint64_t)qword_1EB7E4AD8);
  os_log_type_t v24 = sub_1B2E82DA8();
  if (sub_1B299B8E4(v24))
  {
    uint64_t v25 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADAC5C(v25);
    sub_1B2ADA8D4(&dword_1B2996000, v26, v27, "ECR client: mengen called.");
    sub_1B299B750();
  }

  sub_1B2ADA82C(OBJC_IVAR___GDEntityResolutionTextClientInner_service);
  (*(void (**)(uint64_t, uint64_t, void *, uint64_t))(v28 + 40))(v31, v32, v23, v29);
  sub_1B2AD7558();
  sub_1B2A93478(v0);
  sub_1B2ADAB6C();
  sub_1B29998C8();
}

void sub_1B2AD6D9C()
{
  sub_1B299F300();
  uint64_t v68 = v0;
  unint64_t v69 = v1;
  uint64_t v72 = v3;
  sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v70 = v5;
  uint64_t v71 = v4;
  MEMORY[0x1F4188790](v4);
  sub_1B2999940();
  os_signpost_type_t v64 = v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = (_OWORD *)sub_1B2ADABFC();
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  uint64_t v67 = sub_1B29A4E64();
  sub_1B299D278();
  uint64_t v65 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1B299B3C8();
  type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v12);
  sub_1B299B6D0();
  uint64_t v66 = v13;
  if (qword_1EB7E6618 != -1) {
    goto LABEL_37;
  }
  while (1)
  {
    sub_1B29A4B98((uint64_t)v8, (uint64_t)qword_1EB7E6600);
    uint64_t v14 = sub_1B2ADAAC8();
    v15(v14);
    sub_1B2E81F18();
    sub_1B2E81F28();
    sub_1B2E81ED8();
    uint64_t v16 = sub_1B2E81F28();
    os_signpost_type_t v17 = sub_1B2E82E68();
    if (sub_1B2E82F28())
    {
      uint64_t v18 = (uint8_t *)sub_1B299B8CC();
      char v63 = v8;
      os_signpost_id_t v19 = v18;
      *(_WORD *)uint64_t v18 = 0;
      os_signpost_id_t v20 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v16, v17, v20, "ECR.TextClient.mention", "", v19, 2u);
      uint64_t v8 = v63;
      sub_1B299B750();
    }

    uint64_t v22 = v70;
    uint64_t v21 = v71;
    sub_1B29A080C();
    v23();
    sub_1B2E81F78();
    sub_1B29A4198();
    uint64_t v24 = sub_1B2E81F68();
    (*(void (**)(uint64_t, void *))(v22 + 8))(v2, v21);
    uint64_t v25 = v66;
    *uint64_t v66 = "ECR.TextClient.mention";
    v25[1] = 22;
    *((unsigned char *)v25 + 16) = 2;
    v25[3] = v24;
    sub_1B29A15F0();
    v26();
    if (qword_1EB7E3A20 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1B2ADABA0((uint64_t)v8, (uint64_t)qword_1EB7E4AD8);
    os_log_type_t v28 = sub_1B2E82DA8();
    if (sub_1B2ADAA80(v28))
    {
      uint64_t v29 = (uint8_t *)sub_1B299B8CC();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_1B2996000, v27, (os_log_type_t)v21, "ECR client: entity to text called.", v29, 2u);
      sub_1B299B750();
    }

    unint64_t v30 = v69;
    sub_1B2AD5B5C();
    if (v30)
    {
      uint64_t v52 = (uint64_t)v66;
      sub_1B2AD7558();
      sub_1B2A93478(v52);
      goto LABEL_34;
    }
    uint64_t v32 = v31;
    id v33 = objc_msgSend(v31, sel_rankedResults);
    sub_1B29C3CA0(0, &qword_1EB7D97B8);
    unint64_t v34 = sub_1B2E82838();

    if (v34 >> 62) {
      break;
    }
    uint64_t v35 = *(void **)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v35) {
      goto LABEL_40;
    }
LABEL_11:
    unint64_t v36 = 0;
    unint64_t v37 = v34 & 0xC000000000000001;
    unint64_t v55 = v34 + 32;
    uint64_t v56 = v34 & 0xFFFFFFFFFFFFFF8;
    char v63 = (long long *)((char *)&v78 + 8);
    os_signpost_type_t v64 = (_OWORD *)((char *)v77 + 8);
    unint64_t v59 = v34;
    uint64_t v60 = v32;
    unint64_t v57 = v34 & 0xC000000000000001;
    uint64_t v58 = v35;
    while (1)
    {
      if (v37)
      {
        id v38 = (id)MEMORY[0x1B3EB1A20](v36, v34);
      }
      else
      {
        if (v36 >= *(void *)(v56 + 16))
        {
          __break(1u);
          return;
        }
        id v38 = *(id *)(v55 + 8 * v36);
      }
      BOOL v39 = __OFADD__(v36, 1);
      uint64_t v40 = (void *)(v36 + 1);
      if (v39)
      {
        __break(1u);
        goto LABEL_39;
      }
      id v62 = v38;
      id v41 = objc_msgSend(v38, sel_rankedItems);
      uint64_t v42 = sub_1B29E5808();
      sub_1B29C3CA0(v42, &qword_1EB7D97B0);
      unint64_t v43 = sub_1B2E82838();

      if (v43 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v2 = sub_1B2E83448();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v2 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      uint64_t v61 = v40;
      if (v2) {
        break;
      }
LABEL_30:

      swift_bridgeObjectRelease_n();
      uint64_t v35 = v58;
      unint64_t v34 = v59;
      uint64_t v32 = v60;
      unint64_t v36 = (unint64_t)v61;
      unint64_t v37 = v57;
      if (v61 == v58) {
        goto LABEL_40;
      }
    }
    uint64_t v68 = type metadata accessor for ViewService();
    unint64_t v69 = v43 & 0xC000000000000001;
    uint64_t v44 = 4;
    uint64_t v67 = v43;
    uint64_t v65 = v2;
    while (1)
    {
      uint64_t v45 = v69 ? (_OWORD *)MEMORY[0x1B3EB1A20](v44 - 4, v43) : *(id *)(v43 + 8 * v44);
      uint64_t v8 = v45;
      uint64_t v46 = v44 - 3;
      if (__OFADD__(v44 - 4, 1)) {
        break;
      }
      uint64_t v47 = (void *)static ViewService.clientService.getter();
      sub_1B2A4E930();
      sub_1B2AD2278((uint64_t)&v74, (uint64_t)v75);
      if (*(void *)&v75[0])
      {
        uint64_t v70 = v44 - 3;
        v77[0] = v75[0];
        v77[1] = v75[1];
        long long v78 = v75[2];
        uint64_t v79 = v76;
        id v48 = objc_msgSend(v8, sel_entityID);
        unint64_t v49 = (unint64_t)objc_msgSend(v48, sel_intValue);

        if ((v49 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        long long v50 = *v64;
        uint64_t v71 = v8;
        uint64_t v72 = v78;
        long long v80 = *v63;
        long long v81 = v50;
        uint64_t ObjectType = swift_getObjectType();
        MEMORY[0x1F4188790](ObjectType);
        *(&v54 - 2) = (uint64_t)v77;
        *(&v54 - 1) = v49;
        sub_1B29A3EB4(&qword_1E9C3D1F8);
        sub_1B2E80C28();
        sub_1B2AD3758(v73);

        swift_unknownObjectRelease();
        long long v82 = v81;
        sub_1B2A227D4((uint64_t)&v82);
        swift_unknownObjectRelease();
        long long v83 = v80;
        sub_1B2A227D4((uint64_t)&v83);
        unint64_t v43 = v67;
        uint64_t v2 = v65;
        uint64_t v46 = v70;
        uint64_t v47 = v71;
      }
      else
      {
      }
      ++v44;
      if (v46 == v2) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_once();
  }
LABEL_39:
  swift_bridgeObjectRetain();
  uint64_t v35 = (void *)sub_1B2E83448();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_11;
  }
LABEL_40:

  swift_bridgeObjectRelease();
  uint64_t v53 = (uint64_t)v66;
  sub_1B2AD7558();
  sub_1B2A93478(v53);
LABEL_34:
  sub_1B29998C8();
}

uint64_t sub_1B2AD7558()
{
  sub_1B29E5808();
  sub_1B2E81F48();
  sub_1B299D278();
  uint64_t v29 = v2;
  uint64_t v30 = v1;
  MEMORY[0x1F4188790](v1);
  sub_1B299B6D0();
  uint64_t v31 = v3;
  uint64_t v4 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  os_signpost_type_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LogSignpost();
  sub_1B29A080C();
  v16();
  uint64_t v32 = *(const char **)v0;
  char v17 = *(unsigned char *)(v0 + 16);
  swift_retain();
  uint64_t v18 = sub_1B2E81F28();
  sub_1B2E81F58();
  int v28 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  }
  uint64_t v27 = v6;
  if ((v17 & 1) == 0)
  {
    os_signpost_id_t v20 = v31;
    if (v32)
    {
      uint64_t v22 = v29;
      uint64_t v21 = v30;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(uint8_t *, uint64_t))(v22 + 88))(v20, v21) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v23 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint8_t *, uint64_t))(v22 + 8))(v20, v21);
        uint64_t v23 = "";
      }
      uint64_t v24 = (_WORD *)sub_1B299B8CC();
      sub_1B2ADAC88(v24);
      os_signpost_id_t v25 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v18, (os_signpost_type_t)v28, v25, v32, v23, v20, 2u);
      sub_1B299B750();
      uint64_t v6 = v27;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  os_signpost_id_t v20 = v31;
  if ((unint64_t)v32 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v32 >> 11 != 27)
  {
    uint64_t v22 = v29;
    uint64_t v21 = v30;
    if (v32 >> 16 <= 0x10)
    {
      uint64_t v32 = &v33;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1B2AD783C()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1E9C3D200);
  uint64_t v1 = sub_1B299B0F0(v0);
  MEMORY[0x1F4188790](v1);
  sub_1B29A0480();
  sub_1B29A3EB4(&qword_1E9C3A230);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299ADB4();
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1B2E81FB8();
  sub_1B29A4B98(v3, (uint64_t)qword_1EB7E4AD8);
  uint64_t v4 = (void *)sub_1B2E81F98();
  os_log_type_t v5 = sub_1B2E82D98();
  if (sub_1B299B8E4(v5))
  {
    uint64_t v6 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADA954(v6);
    sub_1B299B900(&dword_1B2996000, v7, v8, "AddressToContact: embedding address string begin");
    sub_1B2ADA810();
  }

  uint64_t v9 = sub_1B2E82148();
  type metadata accessor for AddressEmbedder();
  swift_allocObject();
  AddressEmbedder.init(modelName:dictionaryPaths:)(0xD00000000000002FLL, 0x80000001B2E9A7F0, v9);
  sub_1B2E823F8();
  uint64_t v10 = sub_1B2E82548();
  if (v11)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v11;
    do
    {
      sub_1B2ADAA58();
      if ((sub_1B2E82268() & 1) == 0)
      {
        sub_1B2ADAA58();
        if ((sub_1B2E822A8() & 1) != 0
          || (v12 == 32 ? (BOOL v14 = v13 == 0xE100000000000000) : (BOOL v14 = 0),
              v14 || (sub_1B2ADAA58(), (sub_1B2E837A8() & 1) != 0) || (sub_1B2ADAA58(), (sub_1B2E822B8() & 1) != 0)))
        {
          uint64_t v15 = sub_1B2ADAA58();
          MEMORY[0x1B3EB0CD0](v15);
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_1B2E82548();
      uint64_t v13 = v16;
    }
    while (v16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v17 = (void *)sub_1B2E81F98();
  os_log_type_t v18 = sub_1B2E82DB8();
  if (sub_1B299B8E4(v18))
  {
    os_signpost_id_t v19 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADA954(v19);
    sub_1B299B900(&dword_1B2996000, v20, v21, "EmbedAddressQuery: No latin characters or numerals in address");
    sub_1B2ADA810();
  }

  swift_release();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1B2AD7D6C(uint64_t a1)
{
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1B2E81FB8();
  sub_1B29A4B98(v5, (uint64_t)qword_1EB7E4AD8);
  uint64_t v6 = sub_1B2E81F98();
  os_log_type_t v7 = sub_1B2E82D98();
  if (sub_1B2ADAA80(v7))
  {
    uint64_t v8 = (_WORD *)sub_1B299B8CC();
    sub_1B2ADAC88(v8);
    _os_log_impl(&dword_1B2996000, v6, v2, "AddressToContact: vector search initiated for embedded address", v3, 2u);
    sub_1B299B750();
  }

  type metadata accessor for ViewService();
  uint64_t v9 = (void *)static ViewService.clientService.getter();
  ViewService.addressContactResolverEmbeddingView()();

  if (!v1)
  {
    uint64_t v10 = sub_1B2E81F98();
    os_log_type_t v11 = sub_1B2E82D98();
    if (os_log_type_enabled(v10, v11))
    {
      *(_WORD *)sub_1B299B8CC() = 0;
      sub_1B2ADACE0(&dword_1B2996000, v12, v13, "AddressToContact: address vector database view loaded");
      sub_1B299B750();
    }

    sub_1B2E817A8();
    a1 = sub_1B2E817D8();
    uint64_t v15 = sub_1B2E81F98();
    os_log_type_t v16 = sub_1B2E82D98();
    char v17 = (uint8_t *)v16;
    if (os_log_type_enabled(v15, v16))
    {
      *(_WORD *)sub_1B299B8CC() = 0;
      sub_1B2ADACE0(&dword_1B2996000, v19, v20, "AddressToContact: vector search completed");
      sub_1B299B750();
    }

    if (*(void *)(a1 + 16))
    {
      uint64_t v21 = sub_1B2E81F98();
      os_log_type_t v22 = sub_1B2E82D98();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (_WORD *)sub_1B299B8CC();
        sub_1B2ADAC88(v23);
        _os_log_impl(&dword_1B2996000, v21, v22, "AddressToContact: address candidates found", v17, 2u);
        sub_1B299B750();
      }

      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = sub_1B2E81F98();
      os_log_type_t v25 = sub_1B2E82D98();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)sub_1B299B8CC();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_1B2996000, v24, v25, "AddressToContact: no address candidates found", v26, 2u);
        sub_1B299B750();
      }

      swift_release();
      return 0;
    }
  }
  return a1;
}

id sub_1B2AD804C(void *a1)
{
  uint64_t v4 = sub_1B2E818C8();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B299ADB4();
  id v8 = objc_msgSend(a1, sel_addressString);
  sub_1B2E82378();

  uint64_t v9 = sub_1B2AD783C();
  swift_bridgeObjectRelease();
  if (!*(void *)(v9 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  uint64_t v10 = sub_1B2AD7D6C(v9);
  id result = (id)swift_bridgeObjectRelease();
  if (!v1)
  {
    if (v10)
    {
      uint64_t v42 = MEMORY[0x1E4FBC860];
      if (qword_1EB7E3A20 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_1B2E81FB8();
      sub_1B29A4B98(v12, (uint64_t)qword_1EB7E4AD8);
      uint64_t v13 = sub_1B2E81F98();
      os_log_type_t v14 = sub_1B2E82D98();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)sub_1B299B8CC();
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl(&dword_1B2996000, v13, v14, "AddressToContact: address contact candidates retrieved", v15, 2u);
        sub_1B299B750();
      }

      uint64_t v16 = *(void *)(v10 + 16);
      if (v16)
      {
        uint64_t v19 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16);
        uint64_t v18 = v6 + 16;
        char v17 = v19;
        unint64_t v20 = v10 + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64));
        uint64_t v39 = *(void *)(v18 + 56);
        uint64_t v38 = v4;
        unint64_t v37 = v19;
        do
        {
          v17(v2, v20, v4);
          sub_1B2E81878();
          if (v21 > 0.88)
          {
            uint64_t v22 = sub_1B2E818B8();
            if (v23 >> 60 != 15)
            {
              uint64_t v24 = v22;
              unint64_t v25 = v23;
              sub_1B2E7FF98();
              sub_1B29A4198();
              sub_1B2E7FF88();
              sub_1B2AD9894();
              sub_1B2E7FF78();
              uint64_t v26 = sub_1B2E83748();
              uint64_t v28 = v27;
              objc_allocWithZone((Class)GDAddressResolutionResultEntity);
              swift_bridgeObjectRetain();
              id v29 = sub_1B2AD9730(v26, v28, v40, v41);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v30 = v29;
              MEMORY[0x1B3EB0FE0]();
              unint64_t v31 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v31 >> 1)
              {
                sub_1B299B984(v31);
                sub_1B2E828A8();
              }
              sub_1B2E828F8();
              sub_1B2E82878();
              swift_release();
              sub_1B29F869C(v24, v25);

              uint64_t v4 = v38;
              char v17 = v37;
            }
          }
          uint64_t v32 = sub_1B2ADAB54();
          v33(v32);
          v20 += v39;
          --v16;
        }
        while (v16);
      }
      swift_bridgeObjectRelease();
      unint64_t v34 = sub_1B2E81F98();
      os_log_type_t v35 = sub_1B2E82D98();
      if (sub_1B2ADAA80(v35))
      {
        unint64_t v36 = (uint8_t *)sub_1B299B8CC();
        *(_WORD *)unint64_t v36 = 0;
        _os_log_impl(&dword_1B2996000, v34, (os_log_type_t)v4, "AddressToContact: candidate payload loading succeeded", v36, 2u);
        sub_1B299B750();
      }

      sub_1B29C3CA0(0, &qword_1E9C3D210);
      return sub_1B2AD84BC();
    }
LABEL_5:
    sub_1B29C3CA0(0, &qword_1E9C3D210);
    return sub_1B2AD84BC();
  }
  return result;
}

id sub_1B2AD84BC()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1B29C3CA0(0, &qword_1E9C3D2A0);
  uint64_t v1 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithRankedEntities_, v1);

  return v2;
}

void sub_1B2AD85F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v76 = a1 + 56;
  sub_1B29A19EC();
  unint64_t v8 = v7 & v6;
  int64_t v10 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (!v8) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v11 << 6))
  {
    uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8 * i);
    type metadata accessor for EntityResolutionRankingDirectFeedback();
    uint64_t v4 = sub_1B2ADAC1C();
    *(unsigned char *)(v4 + 16) = 1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299E6F0();
      uint64_t v12 = v22;
    }
    unint64_t v20 = *(void *)(v12 + 16);
    unint64_t v19 = *(void *)(v12 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_1B299B984(v19);
      sub_1B2ADA960();
      uint64_t v12 = v23;
    }
    *(void *)(v12 + 16) = v20 + 1;
    uint64_t v21 = v12 + 16 * v20;
    *(void *)(v21 + 32) = v18;
    *(void *)(v21 + 40) = v4;
    if (v8) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    if (v15 >= v10) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v76 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_23;
      }
      unint64_t v16 = *(void *)(v76 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_23;
        }
        unint64_t v16 = *(void *)(v76 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_16:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 < v10)
  {
    unint64_t v16 = *(void *)(v76 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v11 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        if (v11 >= v10) {
          goto LABEL_23;
        }
        unint64_t v16 = *(void *)(v76 + 8 * v11);
        ++v17;
        if (v16) {
          goto LABEL_16;
        }
      }
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    int64_t v11 = v17;
    goto LABEL_16;
  }
LABEL_23:
  swift_release();
  uint64_t v24 = a2 + 56;
  sub_1B29A19EC();
  unint64_t v27 = v26 & v25;
  int64_t v29 = (unint64_t)(v28 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v30 = 0;
  if (!v27) {
    goto LABEL_25;
  }
LABEL_24:
  unint64_t v31 = __clz(__rbit64(v27));
  v27 &= v27 - 1;
  for (unint64_t j = v31 | (v30 << 6); ; unint64_t j = __clz(__rbit64(v34)) + (v30 << 6))
  {
    uint64_t v36 = *(void *)(*(void *)(a2 + 48) + 8 * j);
    type metadata accessor for EntityResolutionRankingDirectFeedback();
    uint64_t v37 = sub_1B2ADAC1C();
    *(unsigned char *)(v37 + 16) = 2;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299E6F0();
      uint64_t v12 = v41;
    }
    unint64_t v39 = *(void *)(v12 + 16);
    unint64_t v38 = *(void *)(v12 + 24);
    uint64_t v4 = v39 + 1;
    if (v39 >= v38 >> 1)
    {
      sub_1B299B984(v38);
      sub_1B2ADA960();
      uint64_t v12 = v42;
    }
    *(void *)(v12 + 16) = v4;
    uint64_t v40 = v12 + 16 * v39;
    *(void *)(v40 + 32) = v36;
    *(void *)(v40 + 40) = v37;
    if (v27) {
      goto LABEL_24;
    }
LABEL_25:
    int64_t v33 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      goto LABEL_94;
    }
    if (v33 >= v29) {
      break;
    }
    unint64_t v34 = *(void *)(v24 + 8 * v33);
    ++v30;
    if (!v34)
    {
      int64_t v30 = v33 + 1;
      if (v33 + 1 >= v29) {
        break;
      }
      unint64_t v34 = *(void *)(v24 + 8 * v30);
      if (!v34)
      {
        int64_t v30 = v33 + 2;
        if (v33 + 2 >= v29) {
          break;
        }
        unint64_t v34 = *(void *)(v24 + 8 * v30);
        if (!v34)
        {
          int64_t v35 = v33 + 3;
          if (v35 >= v29) {
            break;
          }
          unint64_t v34 = *(void *)(v24 + 8 * v35);
          if (!v34)
          {
            while (1)
            {
              int64_t v30 = v35 + 1;
              if (__OFADD__(v35, 1)) {
                break;
              }
              if (v30 >= v29) {
                goto LABEL_45;
              }
              unint64_t v34 = *(void *)(v24 + 8 * v30);
              ++v35;
              if (v34) {
                goto LABEL_38;
              }
            }
LABEL_98:
            __break(1u);
            goto LABEL_99;
          }
          int64_t v30 = v35;
        }
      }
    }
LABEL_38:
    unint64_t v27 = (v34 - 1) & v34;
  }
LABEL_45:
  swift_release();
  uint64_t v43 = a3 + 56;
  sub_1B2ADA8F4();
  int64_t v45 = v44 >> 6;
  swift_bridgeObjectRetain();
  uint64_t v46 = 0;
  if (!v4) {
    goto LABEL_47;
  }
  while (2)
  {
    sub_1B2ADABD4();
    uint64_t v48 = v47 | (v46 << 6);
LABEL_61:
    uint64_t v52 = *(void *)(*(void *)(a3 + 48) + 8 * v48);
    type metadata accessor for EntityResolutionRankingDirectFeedback();
    uint64_t v53 = sub_1B2ADAC1C();
    *(unsigned char *)(v53 + 16) = 3;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299E6F0();
      uint64_t v12 = v57;
    }
    unint64_t v55 = *(void *)(v12 + 16);
    unint64_t v54 = *(void *)(v12 + 24);
    if (v55 >= v54 >> 1)
    {
      sub_1B299B984(v54);
      sub_1B2ADA960();
      uint64_t v12 = v58;
    }
    *(void *)(v12 + 16) = v55 + 1;
    uint64_t v56 = v12 + 16 * v55;
    *(void *)(v56 + 32) = v52;
    *(void *)(v56 + 40) = v53;
    if (v4) {
      continue;
    }
    break;
  }
LABEL_47:
  uint64_t v49 = v46 + 1;
  if (__OFADD__(v46, 1)) {
    goto LABEL_95;
  }
  if (v49 >= v45)
  {
LABEL_67:
    swift_release();
    uint64_t v59 = a4 + 56;
    sub_1B2ADA8F4();
    int64_t v61 = v60 >> 6;
    swift_bridgeObjectRetain();
    uint64_t v62 = 0;
    while (1)
    {
      uint64_t v63 = v62 + 1;
      if (__OFADD__(v62, 1)) {
        goto LABEL_96;
      }
      if (v63 >= v61) {
        goto LABEL_86;
      }
      ++v62;
      if (!*(void *)(v59 + 8 * v63))
      {
        uint64_t v62 = v63 + 1;
        if (v63 + 1 >= v61) {
          goto LABEL_86;
        }
        if (!*(void *)(v59 + 8 * v62))
        {
          uint64_t v62 = v63 + 2;
          if (v63 + 2 >= v61) {
            goto LABEL_86;
          }
          if (!*(void *)(v59 + 8 * v62))
          {
            uint64_t v64 = v63 + 3;
            if (v64 >= v61)
            {
LABEL_86:
              swift_release();
              uint64_t v73 = *(void *)(v12 + 16);
              if (v73)
              {
                uint64_t v74 = v12 + 40;
                while (1)
                {
                  swift_retain();
                  sub_1B29FD520();
                  if (v75) {
                    break;
                  }
                  swift_release();
                  v74 += 16;
                  if (!--v73) {
                    goto LABEL_90;
                  }
                }
                swift_bridgeObjectRelease();
                swift_release();
              }
              else
              {
LABEL_90:
                swift_bridgeObjectRelease();
              }
              return;
            }
            if (!*(void *)(v59 + 8 * v64))
            {
              while (1)
              {
                uint64_t v62 = v64 + 1;
                if (__OFADD__(v64, 1)) {
                  goto LABEL_100;
                }
                if (v62 >= v61) {
                  goto LABEL_86;
                }
                ++v64;
                if (*(void *)(v59 + 8 * v62)) {
                  goto LABEL_81;
                }
              }
            }
            uint64_t v62 = v64;
          }
        }
      }
LABEL_81:
      sub_1B2ADAC48();
      uint64_t v66 = *(void *)(*(void *)(a4 + 48) + 8 * (v65 + (v62 << 6)));
      type metadata accessor for EntityResolutionRankingDirectFeedback();
      uint64_t v67 = sub_1B2ADAC1C();
      *(unsigned char *)(v67 + 16) = 4;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B299E6F0();
        uint64_t v12 = v71;
      }
      unint64_t v69 = *(void *)(v12 + 16);
      unint64_t v68 = *(void *)(v12 + 24);
      if (v69 >= v68 >> 1)
      {
        sub_1B299B984(v68);
        sub_1B2ADA960();
        uint64_t v12 = v72;
      }
      *(void *)(v12 + 16) = v69 + 1;
      uint64_t v70 = v12 + 16 * v69;
      *(void *)(v70 + 32) = v66;
      *(void *)(v70 + 40) = v67;
    }
  }
  ++v46;
  if (*(void *)(v43 + 8 * v49)) {
    goto LABEL_60;
  }
  uint64_t v46 = v49 + 1;
  if (v49 + 1 >= v45) {
    goto LABEL_67;
  }
  if (*(void *)(v43 + 8 * v46)) {
    goto LABEL_60;
  }
  uint64_t v46 = v49 + 2;
  if (v49 + 2 >= v45) {
    goto LABEL_67;
  }
  if (*(void *)(v43 + 8 * v46))
  {
LABEL_60:
    sub_1B2ADAC48();
    uint64_t v48 = v51 + (v46 << 6);
    goto LABEL_61;
  }
  uint64_t v50 = v49 + 3;
  if (v50 >= v45) {
    goto LABEL_67;
  }
  if (*(void *)(v43 + 8 * v50))
  {
    uint64_t v46 = v50;
    goto LABEL_60;
  }
  while (1)
  {
    uint64_t v46 = v50 + 1;
    if (__OFADD__(v50, 1)) {
      break;
    }
    if (v46 >= v45) {
      goto LABEL_67;
    }
    ++v50;
    if (*(void *)(v43 + 8 * v46)) {
      goto LABEL_60;
    }
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
}

void sub_1B2AD8D28()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  uint64_t v36 = sub_1B2E800E8();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B299ADB4();
  BOOL v8 = v4 == (void *)7105633 && v2 == 0xE300000000000000;
  if (v8 || (sub_1B2E837A8() & 1) != 0)
  {
    static EntityResolutionViewDependencies.loadECRViews()((uint64_t *)&v38);
    uint64_t v9 = v38;
    if (!v38) {
      goto LABEL_27;
    }
    uint64_t v10 = v38[2];
    if (v10)
    {
      unint64_t v38 = (void *)MEMORY[0x1E4FBC860];
      sub_1B29BFD80();
      int64_t v11 = v38;
      uint64_t v12 = v9 + 5;
      do
      {
        uint64_t v14 = *(v12 - 1);
        uint64_t v13 = *v12;
        unint64_t v38 = v11;
        unint64_t v16 = v11[2];
        unint64_t v15 = v11[3];
        swift_bridgeObjectRetain();
        if (v16 >= v15 >> 1)
        {
          sub_1B29BFD80();
          int64_t v11 = v38;
        }
        v12 += 4;
        uint64_t v11[2] = v16 + 1;
        int64_t v17 = &v11[2 * v16];
        void v17[4] = v14;
        v17[5] = v13;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
  }
  else
  {
    unint64_t v38 = v4;
    uint64_t v39 = v2;
    sub_1B29C3640();
    uint64_t v18 = sub_1B2E82FE8();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v37 = (void *)MEMORY[0x1E4FBC860];
      sub_1B29BFD80();
      unint64_t v20 = (void (**)(uint64_t, uint64_t))(v6 + 8);
      uint64_t v21 = (uint64_t *)(v18 + 40);
      do
      {
        uint64_t v22 = *v21;
        unint64_t v38 = (void *)*(v21 - 1);
        uint64_t v39 = v22;
        swift_bridgeObjectRetain();
        sub_1B2E800D8();
        uint64_t v23 = sub_1B2E83008();
        uint64_t v25 = v24;
        (*v20)(v0, v36);
        swift_bridgeObjectRelease();
        int64_t v11 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29BFD80();
          int64_t v11 = v37;
        }
        unint64_t v27 = v11[2];
        unint64_t v26 = v11[3];
        if (v27 >= v26 >> 1)
        {
          sub_1B299B984(v26);
          sub_1B29BFD80();
          int64_t v11 = v37;
        }
        v21 += 2;
        uint64_t v11[2] = v27 + 1;
        uint64_t v28 = &v11[2 * v27];
        v28[4] = v23;
        v28[5] = v25;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  int64_t v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_23:
  id v29 = objc_msgSend(objc_allocWithZone((Class)GDXPCInternalService), sel_init);
  sub_1B29C3CA0(0, &qword_1E9C3D220);
  id v30 = sub_1B2AD9130((uint64_t)v11, 0);
  sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7E2C40);
  sub_1B29E5808();
  unint64_t v31 = (void *)sub_1B2E82EE8();
  unint64_t v38 = 0;
  id v32 = objc_msgSend(v29, sel_viewInfoWithViewQuery_rows_error_, v30, v31, &v38);

  id v33 = v38;
  if (v32)
  {
    sub_1B29A3EB4(&qword_1E9C3B6C0);
    sub_1B2E82838();
    id v34 = v33;
  }
  else
  {
    int64_t v35 = v38;
    sub_1B2E80388();

    swift_willThrow();
  }

LABEL_27:
  sub_1B29998C8();
}

id sub_1B2AD9130(uint64_t a1, char a2)
{
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v4 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithNames_includeDependencies_, v4, a2 & 1);

  return v5;
}

id EntityResolutionTextClient.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void EntityResolutionTextClient.init()()
{
}

id EntityResolutionTextClient.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EntityResolutionTextClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B2AD92A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1682531437 && a2 == 0xE400000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x49746361746E6F63 && a2 == 0xE900000000000064)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B2AD93EC(char a1)
{
  if (!a1) {
    return 0x73736572646461;
  }
  if (a1 == 1) {
    return 1682531437;
  }
  return 0x49746361746E6F63;
}

void sub_1B2AD9440()
{
  sub_1B299F300();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3D248);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B3C8();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2ADA208();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_1B2E83568();
    uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1B2E835A8();
    uint64_t v9 = sub_1B2E83568();
    uint64_t v11 = v10;
    uint64_t v14 = v9;
    uint64_t v12 = sub_1B2ADABE8();
    v13(v12);
    swift_bridgeObjectRetain();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v4 = v6;
    v4[1] = v8;
    _OWORD v4[2] = v15;
    v4[3] = v14;
    v4[4] = v11;
  }
  sub_1B29998C8();
}

uint64_t sub_1B2AD961C()
{
  return sub_1B2AD93EC(*v0);
}

uint64_t sub_1B2AD9624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AD92A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AD964C(uint64_t a1)
{
  unint64_t v2 = sub_1B2ADA208();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AD9688(uint64_t a1)
{
  unint64_t v2 = sub_1B2ADA208();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B2AD96C4@<D0>(uint64_t a1@<X8>)
{
  sub_1B2AD9440();
  if (!v1)
  {
    double result = *(double *)&v4;
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = v6;
  }
  return result;
}

uint64_t type metadata accessor for EntityResolutionTextClient()
{
  return self;
}

id sub_1B2AD9730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v7 = (void *)sub_1B2E82348();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  id v8 = objc_msgSend(v4, sel_initWithMdId_contactId_, v6, v7);

  return v8;
}

uint64_t sub_1B2AD97C4@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  return sub_1B2AF5D20(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1B2AD97E0(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C3D200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B2AD9840()
{
  unint64_t result = qword_1E9C3D208;
  if (!qword_1E9C3D208)
  {
    sub_1B29C3588(&qword_1E9C3A230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D208);
  }
  return result;
}

unint64_t sub_1B2AD9894()
{
  unint64_t result = qword_1E9C3D218;
  if (!qword_1E9C3D218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D218);
  }
  return result;
}

uint64_t method lookup function for EntityResolutionTextClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EntityResolutionTextClient);
}

uint64_t dispatch thunk of EntityResolutionTextClient.__allocating_init(for:viaXPC:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.__allocating_init(for:viaXPC:warmup:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.warmup(for:)()
{
  sub_1B299F394();
  sub_1B29A19C8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B299ACAC;
  uint64_t v3 = sub_1B2ADAAB8();
  return v4(v3);
}

uint64_t dispatch thunk of EntityResolutionTextClient.warmupSync(for:)()
{
  sub_1B29A19C8();
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.cooldown()()
{
  sub_1B299F394();
  sub_1B29A19C8();
  long long v5 = (uint64_t (*)(void))(*(void *)(v0 + 128) + **(int **)(v0 + 128));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1B299B4A8(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1B2ADA778;
  return v5();
}

uint64_t dispatch thunk of EntityResolutionTextClient.cooldownSync()()
{
  sub_1B29A19C8();
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.resolveEntities(forRequest:)()
{
  sub_1B299F394();
  sub_1B29A19C8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2AD9CC8;
  uint64_t v3 = sub_1B2ADAAB8();
  return v4(v3);
}

uint64_t sub_1B2AD9CC8()
{
  sub_1B299B3BC();
  uint64_t v2 = v1;
  sub_1B299B708();
  uint64_t v3 = *v0;
  sub_1B299B0E0();
  *long long v4 = v3;
  swift_task_dealloc();
  long long v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t dispatch thunk of EntityResolutionTextClient.resolveEntitiesSync(forRequest:)()
{
  sub_1B29A19C8();
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.resolveEntities(forBatchRequests:)()
{
  sub_1B299F394();
  sub_1B29A19C8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2ADA77C;
  uint64_t v3 = sub_1B2ADAAB8();
  return v4(v3);
}

uint64_t dispatch thunk of EntityResolutionTextClient.resolveEntitiesSync(forBatchRequests:)()
{
  sub_1B29A19C8();
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.generateMentions(forQuery:)()
{
  sub_1B29A19C8();
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.entityToText(forRequest:)()
{
  sub_1B29A19C8();
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.embedAddressQuery(address:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.addressContactCandidates(vectorToSearch:)()
{
  sub_1B29A19C8();
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.resolveAddressToContact(forRequest:)()
{
  sub_1B29A19C8();
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.recordDirectFeedback(withEngagedIds:rejectedIds:ignoredIds:neverPresentedIds:)()
{
  sub_1B29A19C8();
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.status(forViews:)()
{
  sub_1B29A19C8();
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t initializeWithCopy for VectorDbAddressContactResolverPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for VectorDbAddressContactResolverPayload(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VectorDbAddressContactResolverPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for VectorDbAddressContactResolverPayload()
{
  return &type metadata for VectorDbAddressContactResolverPayload;
}

unint64_t sub_1B2ADA208()
{
  unint64_t result = qword_1E9C3D250;
  if (!qword_1E9C3D250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D250);
  }
  return result;
}

uint64_t sub_1B2ADA258()
{
  sub_1B299F394();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2ADA778;
  uint64_t v3 = sub_1B2ADA8B8();
  return v4(v3);
}

uint64_t sub_1B2ADA2F4()
{
  _Block_release(*(const void **)(v0 + 24));
  uint64_t v1 = sub_1B2ADAB20();

  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_1B2ADA334()
{
  sub_1B299F394();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B299ACAC;
  uint64_t v3 = sub_1B2ADA8B8();
  return v4(v3);
}

uint64_t sub_1B2ADA3CC()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B2ADA40C()
{
  sub_1B299F394();
  uint64_t v1 = *(const void **)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_1B299B4A8(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1B2ADA778;
  uint64_t v6 = (uint64_t (*)(const void *, void *))((char *)&dword_1E9C3D280 + dword_1E9C3D280);
  return v6(v1, v2);
}

uint64_t sub_1B2ADA4B0()
{
  _Block_release(*(const void **)(v0 + 24));

  uint64_t v1 = sub_1B2ADAB20();

  return MEMORY[0x1F4186498](v1, v2, v3);
}

uint64_t sub_1B2ADA4E8()
{
  sub_1B299F394();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2ADA778;
  uint64_t v3 = sub_1B2ADA8B8();
  return v4(v3);
}

unsigned char *storeEnumTagSinglePayload for VectorDbAddressContactResolverPayload.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2ADA64CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VectorDbAddressContactResolverPayload.CodingKeys()
{
  return &type metadata for VectorDbAddressContactResolverPayload.CodingKeys;
}

unint64_t sub_1B2ADA688()
{
  unint64_t result = qword_1E9C3D2A8;
  if (!qword_1E9C3D2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D2A8);
  }
  return result;
}

unint64_t sub_1B2ADA6D8()
{
  unint64_t result = qword_1E9C3D2B0;
  if (!qword_1E9C3D2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D2B0);
  }
  return result;
}

unint64_t sub_1B2ADA728()
{
  unint64_t result = qword_1E9C3D2B8;
  if (!qword_1E9C3D2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D2B8);
  }
  return result;
}

uint64_t sub_1B2ADA794@<X0>(uint64_t a1@<X8>)
{
  *(void *)uint64_t v3 = a1;
  *(void *)(v3 + 8) = v1;
  *(unsigned char *)(v3 + 16) = 2;
  *(void *)(v3 + 24) = v2;
  return v3 + *(int *)(v4 + 24);
}

uint64_t sub_1B2ADA7C4(uint64_t a1, uint64_t a2)
{
  sub_1B29A4B98(v3, a2);
  return v2;
}

uint64_t sub_1B2ADA7F4()
{
  return v0;
}

void sub_1B2ADA810()
{
  JUMPOUT(0x1B3EB30C0);
}

void *sub_1B2ADA82C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29AEC7C((void *)(v1 + a1), *(void *)(v1 + a1 + 24));
}

uint64_t sub_1B2ADA854@<X0>(uint64_t a1@<X8>)
{
  *(void *)uint64_t v3 = a1;
  *(void *)(v3 + 8) = v1;
  *(unsigned char *)(v3 + 16) = 2;
  *(void *)(v3 + 24) = v2;
  return v3 + *(int *)(v4 + 24);
}

uint64_t sub_1B2ADA8A0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1B2ADA8B8()
{
  return v0;
}

void sub_1B2ADA8D4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

_WORD *sub_1B2ADA954(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

void sub_1B2ADA960()
{
  sub_1B29B8848();
}

void sub_1B2ADA998(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1B2ADA9B8()
{
  uint64_t result = v0;
  *(void *)(v2 - 88) = v1;
  return result;
}

void sub_1B2ADA9D8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

BOOL sub_1B2ADA9F8(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_1B2ADAA14(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  _os_signpost_emit_with_name_impl(a1, v6, a3, a4, a5, a6, v7, 2u);
}

uint64_t sub_1B2ADAA30()
{
  return type metadata accessor for LogSignpost();
}

uint64_t sub_1B2ADAA58()
{
  return v0;
}

uint64_t sub_1B2ADAA64()
{
  return v0;
}

BOOL sub_1B2ADAA80(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1B2ADAA9C(_WORD *a1)
{
  *a1 = 0;
  return sub_1B2E81EE8();
}

uint64_t sub_1B2ADAAB8()
{
  return v0;
}

uint64_t sub_1B2ADAAC8()
{
  return v0;
}

uint64_t sub_1B2ADAAD8()
{
  return sub_1B2E81F68();
}

void sub_1B2ADAB04(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  _os_signpost_emit_with_name_impl(a1, v6, a3, a4, a5, a6, v7, 2u);
}

uint64_t sub_1B2ADAB20()
{
  return v0;
}

void sub_1B2ADAB30()
{
}

uint64_t sub_1B2ADAB54()
{
  return v0;
}

uint64_t sub_1B2ADAB6C()
{
  return v0;
}

uint64_t sub_1B2ADAB7C()
{
  return v0;
}

uint64_t sub_1B2ADABA0(uint64_t a1, uint64_t a2)
{
  sub_1B29A4B98(a1, a2);
  return sub_1B2E81F98();
}

uint64_t sub_1B2ADABE8()
{
  return v0;
}

uint64_t sub_1B2ADABFC()
{
  return sub_1B2E81FB8();
}

uint64_t sub_1B2ADAC1C()
{
  return swift_allocObject();
}

uint64_t sub_1B2ADAC34()
{
  return v0;
}

_WORD *sub_1B2ADAC5C(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_1B2ADAC68()
{
  return swift_deallocPartialClassInstance();
}

_WORD *sub_1B2ADAC88(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_1B2ADAC94()
{
  return v0;
}

uint64_t sub_1B2ADACA8(_WORD *a1)
{
  *a1 = 0;
  return sub_1B2E81EE8();
}

id sub_1B2ADACC0()
{
  return objc_allocWithZone(v0);
}

void sub_1B2ADACE0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1B2ADAD14()
{
  return sub_1B2E82F28();
}

uint64_t sub_1B2ADAD2C()
{
  return sub_1B2E81F18();
}

id sub_1B2ADAD44(uint64_t a1, char a2)
{
  os_log_type_t v4 = v2;
  if (a1 == 6)
  {
    __src[3] = &type metadata for Features.FeatureFlag;
    __src[4] = sub_1B299BFE0();
    LOBYTE(__src[0]) = 25;
    uint64_t v7 = v2;
    char v8 = sub_1B2E80848();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)__src);
    if ((v8 & 1) == 0)
    {
      sub_1B2A1F13C();
      swift_allocError();
      sub_1B29A4420();
      sub_1B299F620(v9, v10);
LABEL_19:
      *(unsigned char *)(v11 + 16) = v12;
      swift_willThrow();

LABEL_24:
      type metadata accessor for EntityResolutionTextInProcessService();
      return (id)swift_deallocPartialClassInstance();
    }
  }
  else
  {
    uint64_t v13 = v2;
  }
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1B2E81FB8();
  sub_1B29A4B98(v14, (uint64_t)qword_1EB7E4AD8);
  uint64_t v15 = sub_1B2E81F98();
  os_log_type_t v16 = sub_1B2E82DD8();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 134218240;
    __src[0] = a1;
    sub_1B2E82FB8();
    *(_WORD *)(v17 + 12) = 1024;
    LODWORD(__src[0]) = a2 & 1;
    sub_1B2E82FB8();
    _os_log_impl(&dword_1B2996000, v15, v16, "ECR in process: initialized for mode: %ld and warmup: %{BOOL}d", (uint8_t *)v17, 0x12u);
    sub_1B299B750();
  }

  *(void *)&v4[OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_defaultMode] = a1;
  uint64_t v18 = 0xE800000000000000;
  unint64_t v19 = 0x6465636E616C6162;
  switch(a1)
  {
    case 1:
      break;
    case 2:
      uint64_t v18 = 0xEB00000000797469;
      unint64_t v19 = 0x6C61755168676968;
      break;
    case 3:
      uint64_t v20 = 0x786966657270;
      goto LABEL_16;
    case 4:
      unint64_t v19 = 0xD000000000000014;
      uint64_t v18 = 0x80000001B2E8EF80;
      break;
    case 5:
      uint64_t v18 = 0x80000001B2E8EFA0;
      unint64_t v19 = 0xD000000000000010;
      break;
    case 6:
      uint64_t v20 = 0x646972627968;
LABEL_16:
      unint64_t v19 = v20 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
      uint64_t v18 = 0xEC00000068637261;
      break;
    default:
      uint64_t v18 = 0xEA00000000007963;
      unint64_t v19 = 0x6E6574614C776F6CLL;
      break;
  }
  static EntityResolutionConfig.fromResource(configName:)(v19, v18, (uint64_t)v30);
  swift_bridgeObjectRelease();
  sub_1B2ADCCFC((uint64_t)v30, (uint64_t)v31);
  sub_1B2ADCCFC((uint64_t)v31, (uint64_t)__src);
  if (sub_1B2A99448((uint64_t)__src) == 1)
  {
    sub_1B2A1F13C();
    swift_allocError();
    *(_OWORD *)uint64_t v11 = xmmword_1B2ECFD90;
    char v12 = 9;
    goto LABEL_19;
  }
  uint64_t v21 = &v4[OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_defaultConfig];
  memcpy(&v4[OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_defaultConfig], __src, 0x8DuLL);
  type metadata accessor for EntityResolutionHandlerPool();
  uint64_t v22 = swift_allocObject();
  type metadata accessor for EntityResolutionHandlerPool.EntityRerankerHandlerStore();
  swift_allocObject();
  *(void *)(v22 + 16) = sub_1B2A9AA08();
  *(void *)&v4[OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_modelPool] = v22;
  type metadata accessor for ViewService();
  uint64_t v23 = static ViewService.clientService.getter();
  type metadata accessor for EntityResolutionServicePool();
  swift_allocObject();
  *(void *)&v4[OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_servicePool] = sub_1B2AD1424(v23);
  if (a2)
  {
    memcpy(__dst, __src, 0x8DuLL);
    sub_1B2ADCCFC((uint64_t)v31, (uint64_t)v30);
    sub_1B2A98298((uint64_t)v30);
    sub_1B2A9AEA8((uint64_t)__dst);
    if (v3)
    {
      sub_1B2ADCD64(v31);
      memcpy(__dst, v21, 0x8DuLL);
      sub_1B2A982E4((uint64_t)__dst);
      swift_release();

      swift_release();
      goto LABEL_24;
    }
    sub_1B2ADCD64(v31);
    memcpy(v27, v21, 0x8DuLL);
    memcpy(v26, v21, 0x8DuLL);
    sub_1B2A98298((uint64_t)v27);
    sub_1B2AD1738((uint64_t)v26);
    sub_1B2A982E4((uint64_t)v27);
  }

  uint64_t v25 = (objc_class *)type metadata accessor for EntityResolutionTextInProcessService();
  v29.receiver = v4;
  v29.super_class = v25;
  return objc_msgSendSuper2(&v29, sel_init);
}

void *sub_1B2ADB238(uint64_t a1)
{
  uint64_t result = sub_1B2ADCA10(a1, __src);
  if (!v1)
  {
    memcpy(__dst, __src, 0x8DuLL);
    memcpy(v3, __src, 0x8DuLL);
    sub_1B2A9AEA8((uint64_t)v3);
    memcpy(v3, __dst, 0x8DuLL);
    sub_1B2AD1738((uint64_t)v3);
    return (void *)sub_1B2A982E4((uint64_t)__dst);
  }
  return result;
}

void sub_1B2ADB2F0()
{
  sub_1B2A9B0CC();
  uint64_t v2 = *(void *)(*(void *)(v0
                             + OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_servicePool)
                 + 16);
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + 24);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 16);
  sub_1B2AD1AB8(&v4);
  os_unfair_lock_unlock(v3);
  if (v1) {
    __break(1u);
  }
}

uint64_t sub_1B2ADB3AC(void *a1)
{
  uint64_t v49 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1B299E714();
  sub_1B299D278();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1B2ADCE1C();
  sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v47 = v14;
  uint64_t v48 = v13;
  MEMORY[0x1F4188790](v13);
  sub_1B299E6C4();
  uint64_t v46 = type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v15);
  sub_1B299B6D0();
  uint64_t v51 = a1;
  uint64_t v52 = v16;
  if (objc_msgSend(a1, sel_mode) == (id)6
    && (v55[3] = &type metadata for Features.FeatureFlag,
        v55[4] = sub_1B299BFE0(),
        LOBYTE(v55[0]) = 25,
        char v17 = sub_1B2E80848(),
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v55),
        (v17 & 1) == 0))
  {
    sub_1B2A1F13C();
    swift_allocError();
    sub_1B29A4420();
    sub_1B299F620(v30, v31);
    *(unsigned char *)(v32 + 16) = v33;
    swift_willThrow();
  }
  else
  {
    if (qword_1EB7E6618 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1B29A4B98(v9, (uint64_t)qword_1EB7E6600);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v1, v18, v9);
    sub_1B2E81F18();
    sub_1B2E81F28();
    sub_1B2E81ED8();
    unint64_t v19 = sub_1B2E81F28();
    os_signpost_type_t v20 = sub_1B2E82E68();
    if (sub_1B2E82F28())
    {
      uint64_t v21 = (uint8_t *)sub_1B299B8CC();
      *(_WORD *)uint64_t v21 = 0;
      os_signpost_id_t v22 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v19, v20, v22, "ECR.TextInProcessService.resolve", "", v21, 2u);
      sub_1B299B750();
    }

    sub_1B29A080C();
    v23();
    sub_1B2E81F78();
    swift_allocObject();
    sub_1B2E81F68();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v49);
    uint64_t v24 = v52;
    sub_1B2ADCE38((uint64_t)"ECR.TextInProcessService.resolve");
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v52 + *(int *)(v46 + 24), v2, v48);
    double Current = CFAbsoluteTimeGetCurrent();
    uint64_t v9 = (uint64_t)v51;
    sub_1B2A9B3A8((uint64_t)__src);
    if (v50)
    {
      sub_1B2A93478(v52);
    }
    else
    {
      memcpy(v56, __src, 0x7AuLL);
      if (qword_1EB7E2888 != -1) {
        swift_once();
      }
      uint64_t v26 = *(void *)(qword_1EB7F3468 + 16);
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1B2D49EB0(v26);
      sub_1B2ADCA10((uint64_t)objc_msgSend(v51, sel_mode), v55);
      memcpy(v53, v55, 0x8DuLL);
      type metadata accessor for EntityResolutionRequestManager();
      memcpy(v54, v56, 0x7AuLL);
      unint64_t v28 = *(void *)(v45 + OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_servicePool);
      sub_1B2AB5138((uint64_t)v56);
      swift_retain();
      sub_1B2ACFBD8(v54, v53, v28, 0);
      uint64_t v29 = sub_1B2ACA524();
      uint64_t v35 = v29;
      uint64_t v36 = *(void *)(v29 + 16);
      if (v36)
      {
        v54[0] = MEMORY[0x1E4FBC860];
        sub_1B2E832F8();
        uint64_t v37 = (void *)(v35 + 112);
        do
        {
          uint64_t v38 = *(v37 - 2);
          char v39 = *((unsigned char *)v37 - 8);
          uint64_t v40 = *v37;
          long long v41 = *((_OWORD *)v37 - 4);
          v53[0] = *((_OWORD *)v37 - 5);
          v53[1] = v41;
          long long v42 = *((_OWORD *)v37 - 2);
          v53[2] = *((_OWORD *)v37 - 3);
          v53[3] = v42;
          *(void *)&v53[4] = v38;
          BYTE8(v53[4]) = v39;
          *(void *)&v53[5] = v40;
          sub_1B2A9D6A8();
          sub_1B2E832C8();
          sub_1B2E83308();
          sub_1B2E83318();
          sub_1B2E832D8();
          v37 += 11;
          --v36;
        }
        while (v36);
        unint64_t v43 = v54[0];
        swift_bridgeObjectRelease();
        uint64_t v24 = v52;
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v43 = MEMORY[0x1E4FBC860];
      }
      if (v43 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v44 = sub_1B2E83448();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      sub_1B2A99EE0(v44);
      swift_bridgeObjectRelease();
      sub_1B29C3CA0(0, &qword_1EB7D97F0);
      uint64_t v9 = (uint64_t)sub_1B2AE3F94(v43);
      swift_release();
      sub_1B2ADBB04(Current, v27, v24);
      swift_release();
      sub_1B2AB51F4((uint64_t)v56);
      sub_1B2A93478(v24);
    }
  }
  return v9;
}

uint64_t sub_1B2ADBB04(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1B2E81F48();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  MEMORY[0x1F4188790](v5);
  id v30 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B2E81F08();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B2E81F38();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2A9A044(0, a1);
  sub_1B2A9A23C(0);
  uint64_t v15 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3 + *(int *)(v15 + 24), v11);
  uint64_t v31 = *(const char **)a3;
  char v16 = *(unsigned char *)(a3 + 16);
  swift_retain();
  char v17 = sub_1B2E81F28();
  sub_1B2E81F58();
  int v27 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v26 = v8;
  if ((v16 & 1) == 0)
  {
    unint64_t v19 = v30;
    if (v31)
    {
      uint64_t v21 = v28;
      uint64_t v20 = v29;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v21 + 88))(v19, v20) == *MEMORY[0x1E4FBD340])
      {
        os_signpost_id_t v22 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
        os_signpost_id_t v22 = "";
      }
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      os_signpost_id_t v24 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v17, (os_signpost_type_t)v27, v24, v31, v22, v23, 2u);
      MEMORY[0x1B3EB30C0](v23, -1, -1);
      uint64_t v8 = v26;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v19 = v30;
  if ((unint64_t)v31 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v31 >> 11 != 27)
  {
    uint64_t v21 = v28;
    uint64_t v20 = v29;
    if (v31 >> 16 <= 0x10)
    {
      uint64_t v31 = &v32;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1B2ADBEAC(unint64_t a1)
{
  uint64_t v5 = (void *)sub_1B2E81F08();
  sub_1B299D278();
  unint64_t v38 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1B2999940();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1B299E714();
  sub_1B299D278();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1B299E4A0();
  uint64_t v15 = v14 - v13;
  sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v35 = v17;
  uint64_t v36 = v16;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  unint64_t v20 = v19 - v18;
  uint64_t v34 = type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v21);
  sub_1B29A0480();
  if (qword_1EB7E6618 != -1) {
    goto LABEL_19;
  }
  while (1)
  {
    uint64_t v22 = sub_1B29A4B98(v9, (uint64_t)qword_1EB7E6600);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v15, v22, v9);
    sub_1B2E81F18();
    sub_1B2E81F28();
    sub_1B2E81ED8();
    uint64_t v23 = sub_1B2E81F28();
    os_signpost_type_t v24 = sub_1B2E82E68();
    if (sub_1B2E82F28())
    {
      char v33 = v5;
      uint64_t v25 = (uint8_t *)sub_1B299B8CC();
      *(_WORD *)uint64_t v25 = 0;
      os_signpost_id_t v26 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v23, v24, v26, "ECR.TextInProcessService.resolveBatch", "", v25, 2u);
      uint64_t v5 = v33;
      sub_1B299B750();
    }

    sub_1B29A080C();
    v27();
    sub_1B2E81F78();
    swift_allocObject();
    sub_1B2E81F68();
    (*(void (**)(id, void *))(v38 + 8))(v3, v5);
    sub_1B2ADCE38((uint64_t)"ECR.TextInProcessService.resolveBatch");
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v35 + 32))(v2 + *(int *)(v34 + 24), v20, v36);
    uint64_t v39 = MEMORY[0x1E4FBC860];
    if (a1 >> 62) {
      break;
    }
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v15) {
      goto LABEL_21;
    }
LABEL_6:
    uint64_t v37 = v2;
    unint64_t v38 = a1;
    unint64_t v2 = a1 & 0xC000000000000001;
    uint64_t v11 = 4;
    while (1)
    {
      uint64_t v9 = v11 - 4;
      id v28 = v2 ? (id)MEMORY[0x1B3EB1A20](v11 - 4, a1) : *(id *)(a1 + 8 * v11);
      uint64_t v5 = v28;
      a1 = v11 - 3;
      if (__OFADD__(v9, 1)) {
        break;
      }
      uint64_t v29 = (void *)sub_1B2ADB3AC(v28);
      if (v1)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        uint64_t v31 = v37;
        sub_1B2ADC730(v37);
        sub_1B2A93478(v37);
        return v31;
      }
      id v3 = v29;
      MEMORY[0x1B3EB0FE0]();
      unint64_t v20 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v20 >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1B2E828A8();
      }
      sub_1B2E828F8();
      sub_1B2E82878();

      ++v11;
      BOOL v30 = a1 == v15;
      a1 = v38;
      if (v30)
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = v39;
        unint64_t v2 = v37;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_19:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1B2E83448();
  if (v15) {
    goto LABEL_6;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t v31 = MEMORY[0x1E4FBC860];
LABEL_22:
  sub_1B2ADC730(v2);
  sub_1B2A93478(v2);
  return v31;
}

uint64_t sub_1B2ADC304(unint64_t a1, unint64_t a2)
{
  unint64_t v49 = a2;
  unint64_t v48 = a1;
  uint64_t v47 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B2999940();
  uint64_t v46 = v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v43 - v9;
  uint64_t v11 = sub_1B2E81FB8();
  sub_1B299D278();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  sub_1B29A0480();
  uint64_t v45 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  sub_1B2ADCE1C();
  uint64_t v44 = type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v18);
  sub_1B299E4A0();
  uint64_t v21 = v20 - v19;
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1B29A4B98(v11, (uint64_t)qword_1EB7E6600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v3, v22, v11);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v23 = sub_1B2E81F28();
  os_signpost_type_t v24 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v25 = (uint8_t *)sub_1B299B8CC();
    *(_WORD *)uint64_t v25 = 0;
    os_signpost_id_t v26 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v23, v24, v26, "ECR.TextInProcessService.mention", "", v25, 2u);
    sub_1B299B750();
  }

  uint64_t v27 = v47;
  sub_1B29A080C();
  v28();
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v29 = sub_1B2E81F68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v27);
  *(void *)uint64_t v21 = "ECR.TextInProcessService.mention";
  *(void *)(v21 + 8) = 32;
  *(unsigned char *)(v21 + 16) = 2;
  *(void *)(v21 + 24) = v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v21 + *(int *)(v44 + 24), v2, v45);
  uint64_t v30 = v50;
  uint64_t v31 = sub_1B2D5146C(v48, v49);
  if (v30)
  {
    sub_1B2ADC730(v21);
    sub_1B2A93478(v21);
  }
  else
  {
    uint64_t v32 = v31;
    if (v31)
    {
      uint64_t v33 = *(void *)(v31 + 16);
      if (v33)
      {
        uint64_t v57 = MEMORY[0x1E4FBC860];
        sub_1B2E832F8();
        uint64_t v34 = v32 + 64;
        do
        {
          uint64_t v35 = *(void *)(v34 + 32);
          char v36 = *(unsigned char *)(v34 + 40);
          long long v37 = *(_OWORD *)(v34 - 16);
          long long v51 = *(_OWORD *)(v34 - 32);
          long long v52 = v37;
          long long v38 = *(_OWORD *)v34;
          long long v39 = *(_OWORD *)(v34 + 16);
          v34 += 80;
          long long v53 = v38;
          long long v54 = v39;
          uint64_t v55 = v35;
          char v56 = v36;
          sub_1B2A9D340();
          sub_1B2E832C8();
          sub_1B2E83308();
          sub_1B2E83318();
          sub_1B2E832D8();
          --v33;
        }
        while (v33);
        uint64_t v40 = v57;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = MEMORY[0x1E4FBC860];
      }
      sub_1B29C3CA0(0, &qword_1E9C3D2E0);
      uint64_t v41 = v40;
    }
    else
    {
      sub_1B29C3CA0(0, &qword_1E9C3D2E0);
      uint64_t v41 = MEMORY[0x1E4FBC860];
    }
    uint64_t v29 = (uint64_t)sub_1B2AE3FB0(v41);
    sub_1B2ADC730(v21);
    sub_1B2A93478(v21);
  }
  return v29;
}

uint64_t sub_1B2ADC730(uint64_t a1)
{
  sub_1B2E81F48();
  sub_1B299D278();
  uint64_t v29 = v4;
  uint64_t v30 = v3;
  MEMORY[0x1F4188790](v3);
  sub_1B299B6D0();
  uint64_t v31 = v5;
  uint64_t v6 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B299E4A0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E6C4();
  type metadata accessor for LogSignpost();
  sub_1B29A080C();
  v17();
  uint64_t v32 = *(const char **)a1;
  char v18 = *(unsigned char *)(a1 + 16);
  swift_retain();
  uint64_t v19 = sub_1B2E81F28();
  sub_1B2E81F58();
  os_signpost_type_t v28 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v1, v13);
  }
  uint64_t v27 = v8;
  if ((v18 & 1) == 0)
  {
    uint64_t v21 = v31;
    if (v32)
    {
      uint64_t v23 = v29;
      uint64_t v22 = v30;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v23 + 88))(v21, v22) == *MEMORY[0x1E4FBD340])
      {
        os_signpost_type_t v24 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
        os_signpost_type_t v24 = "";
      }
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      os_signpost_id_t v26 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v19, v28, v26, v32, v24, v25, 2u);
      MEMORY[0x1B3EB30C0](v25, -1, -1);
      uint64_t v8 = v27;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v21 = v31;
  if ((unint64_t)v32 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v32 >> 11 != 27)
  {
    uint64_t v23 = v29;
    uint64_t v22 = v30;
    if (v32 >> 16 <= 0x10)
    {
      uint64_t v32 = &v33;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

void *sub_1B2ADCA10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(void *)(v2 + OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_defaultMode) == a1)
  {
    uint64_t v4 = (const void *)(v2 + OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_defaultConfig);
    memcpy(v11, v4, 0x8DuLL);
    memcpy(a2, v4, 0x8DuLL);
    return (void *)sub_1B2A98298((uint64_t)v11);
  }
  else
  {
    if (qword_1EB7E3A20 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1B2E81FB8();
    sub_1B29A4B98(v7, (uint64_t)qword_1EB7E4AD8);
    uint64_t v8 = sub_1B2E81F98();
    os_log_type_t v9 = sub_1B2E82DB8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)sub_1B299B8CC();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1B2996000, v8, v9, "The mode specified here should be the same as initialized. Otherwise, the processing takes longer time.", v10, 2u);
      sub_1B299B750();
    }

    return sub_1B2ADE3C0(a1, a2);
  }
}

void sub_1B2ADCB54()
{
}

id sub_1B2ADCB94()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EntityResolutionTextInProcessService();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for EntityResolutionTextInProcessService()
{
  return self;
}

void *sub_1B2ADCC54(uint64_t a1)
{
  return sub_1B2ADB238(a1);
}

void sub_1B2ADCC78()
{
}

uint64_t sub_1B2ADCC9C(void *a1)
{
  return sub_1B2ADB3AC(a1);
}

uint64_t sub_1B2ADCCC0(unint64_t a1)
{
  return sub_1B2ADBEAC(a1);
}

uint64_t sub_1B2ADCCE4(unint64_t a1, unint64_t a2)
{
  return sub_1B2ADC304(a1, a2);
}

uint64_t sub_1B2ADCCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E2878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1B2ADCD64(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1B2ADCDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2ADCE1C()
{
  return 0;
}

void sub_1B2ADCE38(uint64_t a1@<X8>)
{
  *(void *)uint64_t v3 = a1;
  *(void *)(v3 + 8) = v1;
  *(unsigned char *)(v3 + 16) = 2;
  *(void *)(v3 + 24) = v2;
}

uint64_t sub_1B2ADCE4C(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  *(void *)(v3 + 16) = objc_msgSend(objc_allocWithZone((Class)GDXPCEntityResolutionService), sel_init);
  if (a2)
  {
    if (qword_1EB7E3A20 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1B2E81FB8();
    sub_1B29A4B98(v12, (uint64_t)qword_1EB7E4AD8);
    uint64_t v13 = sub_1B2E81F98();
    os_log_type_t v14 = sub_1B2E82DD8();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1B2996000, v13, v14, "ECR XPC: initialized without warmup.", v15, 2u);
      sub_1B299B750();
    }
  }
  else
  {
    if (qword_1EB7E3A20 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1B2E81FB8();
    sub_1B29A4B98(v6, (uint64_t)qword_1EB7E4AD8);
    uint64_t v7 = sub_1B2E81F98();
    os_log_type_t v8 = sub_1B2E82DD8();
    if (os_log_type_enabled(v7, v8))
    {
      os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v9 = 134217984;
      id v37 = a1;
      sub_1B2E82FB8();
      _os_log_impl(&dword_1B2996000, v7, v8, "ECR XPC: initialized and warmed up for mode: %ld.", v9, 0xCu);
      sub_1B299B750();
    }

    uint64_t v10 = *(void **)(v3 + 16);
    id v37 = 0;
    if (objc_msgSend(v10, sel_warmupForMode_error_, a1, &v37))
    {
      id v11 = v37;
    }
    else
    {
      id v16 = v37;
      uint64_t v17 = (void *)sub_1B2E80388();

      swift_willThrow();
      id v18 = v17;
      id v19 = v17;
      uint64_t v20 = sub_1B2E81F98();
      os_log_type_t v21 = sub_1B2E82DB8();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        id v37 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 136315138;
        swift_getErrorValue();
        uint64_t v23 = sub_1B2E838A8();
        sub_1B29BF6BC(v23, v24, (uint64_t)&v37, v25, v26, v27, v28, v29, v31, v32, v33, v34, v35, v36, (uint64_t)v37, v38, v39, v40, v41,
          v42);
        sub_1B2E82FB8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1B2996000, v20, v21, "Service is initialized but warmup failed with error: %s.", v22, 0xCu);
        swift_arrayDestroy();
        sub_1B299B750();
        sub_1B299B750();
      }
      else
      {
      }
    }
  }
  return v3;
}

id sub_1B2ADD1F0(void *a1)
{
  uint64_t v2 = v1;
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1B2E81FB8();
  sub_1B29A4B98(v4, (uint64_t)qword_1EB7E4AD8);
  uint64_t v5 = sub_1B2E81F98();
  os_log_type_t v6 = sub_1B2E82DD8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    v11[0] = a1;
    sub_1B2E82FB8();
    _os_log_impl(&dword_1B2996000, v5, v6, "ECR XPC: initialized and warmed up for mode: %ld.", v7, 0xCu);
    sub_1B299B750();
  }

  os_log_type_t v8 = *(void **)(v2 + 16);
  v11[0] = 0;
  if (objc_msgSend(v8, sel_warmupForMode_error_, a1, v11)) {
    return v11[0];
  }
  id v10 = v11[0];
  sub_1B2E80388();

  return (id)swift_willThrow();
}

uint64_t sub_1B2ADD388()
{
  sub_1B2A1F13C();
  swift_allocError();
  *(void *)uint64_t v0 = 0;
  *(void *)(v0 + 8) = 0;
  *(unsigned char *)(v0 + 16) = 1;
  return swift_willThrow();
}

void (**sub_1B2ADD3DC(void *a1))(void, uint64_t, uint64_t)
{
  v41[5] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v38 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v4 = v3;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  MEMORY[0x1F4188790](v6);
  os_log_type_t v8 = (char *)&v34 - v7;
  uint64_t v9 = sub_1B2E81FB8();
  sub_1B299D278();
  id v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1B299E4A0();
  uint64_t v15 = v14 - v13;
  sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v36 = v17;
  uint64_t v37 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v35 = sub_1B299B1BC();
  sub_1B2999864();
  MEMORY[0x1F4188790](v18);
  sub_1B299B3C8();
  uint64_t v40 = a1;
  if (objc_msgSend(a1, sel_mode) == (id)6
    && (v41[3] = &type metadata for Features.FeatureFlag,
        v41[4] = (id)sub_1B299BFE0(),
        LOBYTE(v41[0]) = 25,
        char v19 = sub_1B2E80848(),
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v41),
        (v19 & 1) == 0))
  {
    sub_1B2A1F13C();
    swift_allocError();
    *(void *)uint64_t v32 = 0xD00000000000003FLL;
    *(void *)(v32 + 8) = 0x80000001B2E9AB70;
    *(unsigned char *)(v32 + 16) = 8;
    swift_willThrow();
  }
  else
  {
    if (qword_1EB7E6618 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1B29A4B98(v9, (uint64_t)qword_1EB7E6600);
    v11[2](v15, v20, v9);
    sub_1B2E81F18();
    sub_1B2E81F28();
    sub_1B2E81ED8();
    os_log_type_t v21 = sub_1B2E81F28();
    os_signpost_type_t v22 = sub_1B2E82E68();
    if (sub_1B2E82F28())
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      os_signpost_id_t v24 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v21, v22, v24, "ECR.TextXPCService.resolve", "", v23, 2u);
      sub_1B299B750();
    }

    uint64_t v25 = v38;
    sub_1B29A080C();
    v26();
    sub_1B2E81F78();
    swift_allocObject();
    sub_1B2E81F68();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v25);
    sub_1B29A0838((uint64_t)"ECR.TextXPCService.resolve");
    uint64_t v27 = sub_1B299F634(v35);
    v28(v27);
    uint64_t v29 = *(void **)(v39 + 16);
    v41[0] = 0;
    uint64_t v30 = (void (**)(void, uint64_t, uint64_t))objc_msgSend(v29, sel_submitQuery_withError_, v40, v41);
    if (v30)
    {
      id v11 = v30;
      id v31 = v41[0];
    }
    else
    {
      id v11 = (void (**)(void, uint64_t, uint64_t))v41[0];
      sub_1B2E80388();

      swift_willThrow();
    }
    sub_1B2ADE004(v1);
    sub_1B2A93478(v1);
  }
  return v11;
}

uint64_t sub_1B2ADD80C(unint64_t a1)
{
  uint64_t v5 = (void *)sub_1B2E81F08();
  sub_1B299D278();
  unint64_t v39 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1B2999940();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1B299E714();
  sub_1B299D278();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1B299B3C8();
  sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v36 = v14;
  uint64_t v37 = v13;
  MEMORY[0x1F4188790](v13);
  sub_1B299E4A0();
  unint64_t v17 = v16 - v15;
  uint64_t v35 = type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v18);
  sub_1B299E4A0();
  unint64_t v21 = v20 - v19;
  if (qword_1EB7E6618 != -1) {
    goto LABEL_19;
  }
  while (1)
  {
    uint64_t v22 = sub_1B29A4B98(v9, (uint64_t)qword_1EB7E6600);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v2, v22, v9);
    sub_1B2E81F18();
    sub_1B2E81F28();
    sub_1B2E81ED8();
    uint64_t v23 = sub_1B2E81F28();
    os_signpost_type_t v24 = sub_1B2E82E68();
    if (sub_1B2E82F28())
    {
      uint64_t v34 = v5;
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      os_signpost_id_t v26 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v23, v24, v26, "ECR.TextXPCService.resolveBatch", "", v25, 2u);
      uint64_t v5 = v34;
      sub_1B299B750();
    }

    sub_1B29A080C();
    v27();
    sub_1B2E81F78();
    swift_allocObject();
    uint64_t v28 = sub_1B2E81F68();
    (*(void (**)(void (**)(void, uint64_t, uint64_t), void *))(v39 + 8))(v3, v5);
    *(void *)unint64_t v21 = "ECR.TextXPCService.resolveBatch";
    *(void *)(v21 + 8) = 31;
    *(unsigned char *)(v21 + 16) = 2;
    *(void *)(v21 + 24) = v28;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v36 + 32))(v21 + *(int *)(v35 + 24), v17, v37);
    uint64_t v40 = MEMORY[0x1E4FBC860];
    if (a1 >> 62) {
      break;
    }
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_21;
    }
LABEL_6:
    uint64_t v38 = v21;
    unint64_t v39 = a1;
    unint64_t v21 = a1 & 0xC000000000000001;
    uint64_t v11 = 4;
    while (1)
    {
      uint64_t v9 = v11 - 4;
      id v29 = v21 ? (id)MEMORY[0x1B3EB1A20](v11 - 4, a1) : *(id *)(a1 + 8 * v11);
      uint64_t v5 = v29;
      a1 = v11 - 3;
      if (__OFADD__(v9, 1)) {
        break;
      }
      uint64_t v30 = sub_1B2ADD3DC(v29);
      if (v1)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        uint64_t v32 = v38;
        sub_1B2ADE004(v38);
        sub_1B2A93478(v38);
        return v32;
      }
      uint64_t v3 = v30;
      MEMORY[0x1B3EB0FE0]();
      unint64_t v17 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v17 >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1B2E828A8();
      }
      sub_1B2E828F8();
      sub_1B2E82878();

      ++v11;
      BOOL v31 = a1 == v2;
      a1 = v39;
      if (v31)
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = v40;
        unint64_t v21 = v38;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_19:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B2E83448();
  if (v2) {
    goto LABEL_6;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t v32 = MEMORY[0x1E4FBC860];
LABEL_22:
  sub_1B2ADE004(v21);
  sub_1B2A93478(v21);
  return v32;
}

id sub_1B2ADDC78()
{
  v32[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v29 = v3;
  uint64_t v30 = v2;
  MEMORY[0x1F4188790](v2);
  sub_1B2999940();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1B299E714();
  sub_1B299D278();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1B299E4A0();
  uint64_t v11 = v10 - v9;
  sub_1B2E81F38();
  sub_1B299D278();
  MEMORY[0x1F4188790](v12);
  uint64_t v28 = sub_1B299B1BC();
  sub_1B2999864();
  MEMORY[0x1F4188790](v13);
  sub_1B299B3C8();
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1B29A4B98(v5, (uint64_t)qword_1EB7E6600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, v14, v5);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v15 = sub_1B2E81F28();
  os_signpost_type_t v16 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v17 = 0;
    os_signpost_id_t v18 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v15, v16, v18, "ECR.TextXPCService.mention", "", v17, 2u);
    sub_1B299B750();
  }

  sub_1B29A080C();
  v19();
  sub_1B2E81F78();
  swift_allocObject();
  sub_1B2E81F68();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v1, v30);
  sub_1B29A0838((uint64_t)"ECR.TextXPCService.mention");
  uint64_t v20 = sub_1B299F634(v28);
  v21(v20);
  uint64_t v22 = *(void **)(v31 + 16);
  uint64_t v23 = (void *)sub_1B2E82348();
  v32[0] = 0;
  id v24 = objc_msgSend(v22, sel_generateMentionsForQuery_error_, v23, v32);

  if (v24)
  {
    id v25 = v32[0];
  }
  else
  {
    id v26 = v32[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  sub_1B2ADE004(v0);
  sub_1B2A93478(v0);
  return v24;
}

uint64_t sub_1B2ADE004(uint64_t a1)
{
  sub_1B2E81F48();
  sub_1B299D278();
  uint64_t v32 = v3;
  uint64_t v33 = v2;
  MEMORY[0x1F4188790](v2);
  sub_1B299E4A0();
  uint64_t v34 = v5 - v4;
  uint64_t v6 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B299E4A0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  os_signpost_id_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LogSignpost();
  sub_1B29A080C();
  v19();
  uint64_t v35 = *(const char **)a1;
  char v20 = *(unsigned char *)(a1 + 16);
  swift_retain();
  unint64_t v21 = sub_1B2E81F28();
  sub_1B2E81F58();
  int v31 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v13);
  }
  uint64_t v30 = v8;
  if ((v20 & 1) == 0)
  {
    uint64_t v23 = v34;
    if (v35)
    {
      uint64_t v25 = v32;
      uint64_t v24 = v33;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v25 + 88))(v23, v24) == *MEMORY[0x1E4FBD340])
      {
        id v26 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
        id v26 = "";
      }
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      os_signpost_id_t v28 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v21, (os_signpost_type_t)v31, v28, v35, v26, v27, 2u);
      sub_1B299B750();
      uint64_t v8 = v30;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v23 = v34;
  if ((unint64_t)v35 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v35 >> 11 != 27)
  {
    uint64_t v25 = v32;
    uint64_t v24 = v33;
    if (v35 >> 16 <= 0x10)
    {
      uint64_t v35 = &v36;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for EntityResolutionTextXPCService()
{
  return self;
}

id sub_1B2ADE318(void *a1)
{
  return sub_1B2ADD1F0(a1);
}

uint64_t sub_1B2ADE33C()
{
  return sub_1B2ADD388();
}

void (**sub_1B2ADE354(void *a1))(void, uint64_t, uint64_t)
{
  return sub_1B2ADD3DC(a1);
}

uint64_t sub_1B2ADE378(unint64_t a1)
{
  return sub_1B2ADD80C(a1);
}

id sub_1B2ADE39C()
{
  return sub_1B2ADDC78();
}

void *sub_1B2ADE3C0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0xE800000000000000;
      unint64_t v4 = 0x6465636E616C6162;
      break;
    case 2:
      uint64_t v3 = 0xEB00000000797469;
      unint64_t v4 = 0x6C61755168676968;
      break;
    case 3:
      uint64_t v5 = 0x786966657270;
      goto LABEL_9;
    case 4:
      unint64_t v4 = 0xD000000000000014;
      uint64_t v3 = 0x80000001B2E8EF80;
      break;
    case 5:
      uint64_t v3 = 0x80000001B2E8EFA0;
      unint64_t v4 = 0xD000000000000010;
      break;
    case 6:
      uint64_t v5 = 0x646972627968;
LABEL_9:
      unint64_t v4 = v5 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
      uint64_t v3 = 0xEC00000068637261;
      break;
    default:
      uint64_t v3 = 0xEA00000000007963;
      unint64_t v4 = 0x6E6574614C776F6CLL;
      break;
  }
  static EntityResolutionConfig.fromResource(configName:)(v4, v3, (uint64_t)v8);
  swift_bridgeObjectRelease();
  sub_1B2ADCCFC((uint64_t)v8, (uint64_t)v9);
  sub_1B2ADCCFC((uint64_t)v9, (uint64_t)__src);
  if (sub_1B2A99448((uint64_t)__src) != 1) {
    return memcpy(a2, __src, 0x8DuLL);
  }
  sub_1B2A1F13C();
  swift_allocError();
  *(_OWORD *)uint64_t v6 = xmmword_1B2ECFD90;
  *(unsigned char *)(v6 + 16) = 9;
  return (void *)swift_willThrow();
}

void static EntityResolutionViewDependencies.loadECRViews()(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7E69E0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1B299E4A0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_1B2E80498();
  sub_1B299D278();
  uint64_t v8 = v7;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v45 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v45 - v16;
  if (qword_1EB7E4AA0 != -1) {
    swift_once();
  }
  if (!qword_1EB7E4A90)
  {
    if (qword_1EB7E3A20 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_1B2E81FB8();
    sub_1B29A4B98(v36, (uint64_t)qword_1EB7E4AD8);
    uint64_t v37 = sub_1B2E81F98();
    os_log_type_t v38 = sub_1B2E82DB8();
    if (os_log_type_enabled(v37, v38))
    {
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v39 = 0;
      _os_log_impl(&dword_1B2996000, v37, v38, "Can't find the IntelligencePlatformTestViews bundle", v39, 2u);
      sub_1B299B750();
    }

    goto LABEL_22;
  }
  id v18 = (id)qword_1EB7E4A90;
  id v19 = sub_1B2ADF73C(0xD00000000000001ALL, 0x80000001B2E9AC50, 1852797802, 0xE400000000000000, v18);
  if (!v19)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5, 1, 1, v6);
    goto LABEL_17;
  }
  char v20 = v19;
  sub_1B2E80448();

  unint64_t v21 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v21(v5, v15, v6);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5, 0, 1, v6);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v5, 1, v6) == 1)
  {
LABEL_17:
    sub_1B29E9E40(v5);
    if (qword_1EB7E3A20 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_1B2E81FB8();
    sub_1B29A4B98(v40, (uint64_t)qword_1EB7E4AD8);
    uint64_t v41 = sub_1B2E81F98();
    os_log_type_t v42 = sub_1B2E82DB8();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_1B2996000, v41, v42, "Failed to get the correct URL for viewDependencies.json", v43, 2u);
      sub_1B299B750();
    }

    goto LABEL_22;
  }
  v21((uint64_t)v17, (char *)v5, v6);
  sub_1B2A945FC((uint64_t)v17, v50);
  uint64_t v22 = v50[0];
  if (v50[0] != 1)
  {
    sub_1B29A15FC();
    v44();

    goto LABEL_23;
  }
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1B2E81FB8();
  sub_1B29A4B98(v23, (uint64_t)qword_1EB7E4AD8);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v17, v6);
  uint64_t v24 = sub_1B2E81F98();
  os_log_type_t v25 = sub_1B2E82DB8();
  if (os_log_type_enabled(v24, v25))
  {
    id v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v50[0] = v48;
    uint64_t v47 = v26;
    *(_DWORD *)id v26 = 136315138;
    uint64_t v46 = v26 + 4;
    sub_1B29C348C();
    uint64_t v27 = sub_1B2E83748();
    sub_1B29BF6BC(v27, v28, (uint64_t)v50, v29, v30, v31, v32, v33, v45, (unint64_t)v46, (uint64_t)v47, v48, v49, v50[0], v50[1], v50[2], v50[3], v50[4], v50[5],
      v50[6]);
    uint64_t v49 = v34;
    sub_1B2E82FB8();
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void (**)(void))(v8 + 8);
    sub_1B29A15FC();
    v35();
    _os_log_impl(&dword_1B2996000, v24, v25, "Failed to load config data from %s", v47, 0xCu);
    swift_arrayDestroy();
    sub_1B299B750();
    sub_1B299B750();
  }
  else
  {

    uint64_t v35 = *(void (**)(void))(v8 + 8);
    ((void (*)(char *, uint64_t))v35)(v12, v6);
  }
  sub_1B29A15FC();
  v35();
LABEL_22:
  uint64_t v22 = 0;
LABEL_23:
  *a1 = v22;
}

uint64_t ViewsClientSegmentation.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B2E834D8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t ViewsClientSegmentation.rawValue.getter()
{
  return 7105633;
}

uint64_t sub_1B2ADEB5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6972616C75706F70 && a2 == 0xEF65726F63537974;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x73746E65696C63 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B2ADECC0(char a1)
{
  if (!a1) {
    return 1701667182;
  }
  if (a1 == 1) {
    return 0x6972616C75706F70;
  }
  return 0x73746E65696C63;
}

uint64_t sub_1B2ADED2C@<X0>(BOOL *a1@<X8>)
{
  return ViewsClientSegmentation.init(rawValue:)(a1);
}

void sub_1B2ADED38(void *a1@<X8>)
{
  *a1 = 7105633;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1B2ADED4C()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2ADEDAC()
{
  return sub_1B2E82788();
}

uint64_t sub_1B2ADEDFC()
{
  return sub_1B2ADECC0(*v0);
}

uint64_t sub_1B2ADEE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2ADEB5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2ADEE2C(uint64_t a1)
{
  unint64_t v2 = sub_1B2ADF7B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2ADEE68(uint64_t a1)
{
  unint64_t v2 = sub_1B2ADF7B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ViewClientRepresentation.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C3D2E8);
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2ADF7B4();
  sub_1B2E83A38();
  sub_1B2E83688();
  if (!v10)
  {
    sub_1B2E836B8();
    sub_1B29A3EB4(&qword_1E9C3D2F8);
    sub_1B2ADF930(&qword_1E9C3D300, &qword_1E9C3D2F8, (void (*)(void))sub_1B2ADF800);
    sub_1B2E836D8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

uint64_t ViewClientRepresentation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C3D310);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2ADF7B4();
  sub_1B2E83A18();
  if (v2) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  uint64_t v6 = sub_1B2E83568();
  uint64_t v8 = v7;
  swift_bridgeObjectRetain();
  sub_1B2E83598();
  int v10 = v9;
  sub_1B29A3EB4(&qword_1E9C3D2F8);
  sub_1B2ADF930(&qword_1E9C3D318, &qword_1E9C3D2F8, (void (*)(void))sub_1B2ADF84C);
  sub_1B2E835B8();
  sub_1B29A15FC();
  v12();
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(_DWORD *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v13;
  swift_bridgeObjectRetain();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2ADF2CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ViewClientRepresentation.init(from:)(a1, a2);
}

uint64_t sub_1B2ADF2E4(void *a1)
{
  return ViewClientRepresentation.encode(to:)(a1);
}

uint64_t sub_1B2ADF2FC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7377656976 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2ADF37C()
{
  return 0x7377656976;
}

uint64_t sub_1B2ADF394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2ADF2FC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2ADF3C0(uint64_t a1)
{
  unint64_t v2 = sub_1B2ADF898();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2ADF3FC(uint64_t a1)
{
  unint64_t v2 = sub_1B2ADF898();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EntityResolutionViewDependencies.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C3D328);
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2ADF898();
  sub_1B2E83A38();
  sub_1B29A3EB4(&qword_1E9C3D338);
  sub_1B2ADF930(&qword_1E9C3D340, &qword_1E9C3D338, (void (*)(void))sub_1B2ADF8E4);
  sub_1B2E836D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

uint64_t EntityResolutionViewDependencies.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C3D350);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2ADF898();
  sub_1B2E83A18();
  if (!v2)
  {
    sub_1B29A3EB4(&qword_1E9C3D338);
    sub_1B2ADF930(&qword_1E9C3D358, &qword_1E9C3D338, (void (*)(void))sub_1B2ADF99C);
    sub_1B2E835B8();
    sub_1B29A15FC();
    v6();
    *a2 = v8;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
}

uint64_t sub_1B2ADF70C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return EntityResolutionViewDependencies.init(from:)(a1, a2);
}

uint64_t sub_1B2ADF724(void *a1)
{
  return EntityResolutionViewDependencies.encode(to:)(a1);
}

id sub_1B2ADF73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = (void *)sub_1B2E82348();
  uint64_t v7 = (void *)sub_1B2E82348();
  id v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  return v8;
}

unint64_t sub_1B2ADF7B4()
{
  unint64_t result = qword_1E9C3D2F0;
  if (!qword_1E9C3D2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D2F0);
  }
  return result;
}

unint64_t sub_1B2ADF800()
{
  unint64_t result = qword_1E9C3D308;
  if (!qword_1E9C3D308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D308);
  }
  return result;
}

unint64_t sub_1B2ADF84C()
{
  unint64_t result = qword_1E9C3D320;
  if (!qword_1E9C3D320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D320);
  }
  return result;
}

unint64_t sub_1B2ADF898()
{
  unint64_t result = qword_1E9C3D330;
  if (!qword_1E9C3D330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D330);
  }
  return result;
}

unint64_t sub_1B2ADF8E4()
{
  unint64_t result = qword_1E9C3D348;
  if (!qword_1E9C3D348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D348);
  }
  return result;
}

uint64_t sub_1B2ADF930(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2ADF99C()
{
  unint64_t result = qword_1E9C3D360;
  if (!qword_1E9C3D360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D360);
  }
  return result;
}

unint64_t sub_1B2ADF9EC()
{
  unint64_t result = qword_1E9C3D368;
  if (!qword_1E9C3D368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D368);
  }
  return result;
}

void type metadata accessor for ViewsClientSegmentation()
{
}

uint64_t initializeWithCopy for ViewClientRepresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ViewClientRepresentation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ViewClientRepresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for ViewClientRepresentation()
{
}

void type metadata accessor for EntityResolutionViewDependencies()
{
}

unsigned char *_s20IntelligencePlatform23ViewsClientSegmentationOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2ADFC04);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EntityResolutionViewDependencies.CodingKeys()
{
  return &type metadata for EntityResolutionViewDependencies.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ViewClientRepresentation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2ADFD08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewClientRepresentation.CodingKeys()
{
  return &type metadata for ViewClientRepresentation.CodingKeys;
}

unint64_t sub_1B2ADFD44()
{
  unint64_t result = qword_1E9C3D370;
  if (!qword_1E9C3D370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D370);
  }
  return result;
}

unint64_t sub_1B2ADFD94()
{
  unint64_t result = qword_1E9C3D378;
  if (!qword_1E9C3D378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D378);
  }
  return result;
}

unint64_t sub_1B2ADFDE4()
{
  unint64_t result = qword_1E9C3D380;
  if (!qword_1E9C3D380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D380);
  }
  return result;
}

unint64_t sub_1B2ADFE34()
{
  unint64_t result = qword_1E9C3D388;
  if (!qword_1E9C3D388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D388);
  }
  return result;
}

unint64_t sub_1B2ADFE84()
{
  unint64_t result = qword_1E9C3D390;
  if (!qword_1E9C3D390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D390);
  }
  return result;
}

unint64_t sub_1B2ADFED4()
{
  unint64_t result = qword_1E9C3D398;
  if (!qword_1E9C3D398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D398);
  }
  return result;
}

unint64_t sub_1B2ADFF20()
{
  unint64_t result = qword_1E9C3D3A0;
  if (!qword_1E9C3D3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D3A0);
  }
  return result;
}

uint64_t sub_1B2ADFF6C()
{
  unint64_t v0 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B2ADFFBC(char a1)
{
  unint64_t result = 0x44495F444DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = sub_1B2AE3614();
      break;
    case 2:
      unint64_t result = sub_1B2AE364C();
      break;
    case 3:
      unint64_t result = sub_1B2AE3708(0x73726966u);
      break;
    case 4:
      unint64_t result = sub_1B2AE36F4(0x656C6464696DLL);
      break;
    case 5:
      unint64_t result = sub_1B2AE36F4(0x796C696D6166);
      break;
    case 6:
      unint64_t result = sub_1B2AE372C();
      break;
    case 7:
      unint64_t result = sub_1B29A4BEC();
      break;
    case 8:
      unint64_t result = sub_1B2AE3708(0x6E657665u);
      break;
    case 9:
    case 10:
      unint64_t result = sub_1B2A2C2E0();
      break;
    case 11:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2AE00B8(char a1)
{
  unint64_t result = 0x44495F444DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = sub_1B2AE3614();
      break;
    case 2:
      unint64_t result = sub_1B2AE364C();
      break;
    case 3:
      unint64_t result = sub_1B2AE3708(0x73726966u);
      break;
    case 4:
      unint64_t result = sub_1B2AE36F4(0x656C6464696DLL);
      break;
    case 5:
      unint64_t result = sub_1B2AE36F4(0x796C696D6166);
      break;
    case 6:
      unint64_t result = sub_1B2AE372C();
      break;
    case 7:
      unint64_t result = sub_1B29A4BEC();
      break;
    case 8:
      unint64_t result = sub_1B2AE3708(0x6E657665u);
      break;
    case 9:
    case 10:
      unint64_t result = sub_1B2A2C2E0();
      break;
    case 11:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2AE01B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B29ACC64(*a1, *a2);
}

uint64_t sub_1B2AE01C0()
{
  return sub_1B29AE7E8(*v0);
}

uint64_t sub_1B2AE01C8(uint64_t a1)
{
  return sub_1B2AA5868(a1, *v1);
}

uint64_t sub_1B2AE01D0()
{
  return sub_1B29F94E8();
}

uint64_t sub_1B2AE01D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2ADFF6C();
  *a1 = result;
  return result;
}

unint64_t sub_1B2AE0208@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B2ADFFBC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B2AE0234()
{
  return sub_1B2AE00B8(*v0);
}

uint64_t sub_1B2AE023C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2ADFFB8();
  *a1 = result;
  return result;
}

void sub_1B2AE0264(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1B2AE0270(uint64_t a1)
{
  unint64_t v2 = sub_1B2AE2B24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AE02AC(uint64_t a1)
{
  unint64_t v2 = sub_1B2AE2B24();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B2AE02E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C3D3C0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v37 = (uint64_t)a1;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AE2B24();
  sub_1B2E83A18();
  if (v2)
  {
    int v36 = 0;
    unsigned int v8 = 0;
  }
  else
  {
    sub_1B2AE36A8();
    uint64_t v6 = sub_1B2E835E8();
    LOBYTE(v39) = 1;
    sub_1B2AE36A8();
    uint64_t v7 = sub_1B2E83568();
    uint64_t v11 = v10;
    uint64_t v28 = v7;
    sub_1B29A3EB4(&qword_1EB7D9790);
    sub_1B2AE3380(&qword_1E9C3D3D0);
    swift_bridgeObjectRetain();
    sub_1B2E835B8();
    uint64_t v30 = v11;
    uint64_t v12 = v40;
    uint64_t v27 = v39;
    swift_bridgeObjectRetain();
    sub_1B29A2978();
    uint64_t v29 = v40;
    uint64_t v26 = v39;
    sub_1B2AE375C(4);
    sub_1B29A2978();
    uint64_t v25 = v39;
    sub_1B2AE375C(5);
    sub_1B29A2978();
    uint64_t v24 = v39;
    sub_1B2AE375C(6);
    sub_1B29A2978();
    uint64_t v23 = v39;
    sub_1B2AE375C(7);
    sub_1B29A2978();
    uint64_t v22 = v39;
    uint64_t v35 = v40;
    swift_bridgeObjectRetain();
    sub_1B29A2978();
    uint64_t v21 = v39;
    LOBYTE(v38[0]) = 9;
    sub_1B2AE2B70();
    uint64_t v34 = v40;
    swift_bridgeObjectRetain();
    sub_1B2E835B8();
    uint64_t v13 = (void *)v39;
    LOBYTE(v39) = 10;
    uint64_t v31 = v42;
    swift_bridgeObjectRetain();
    uint64_t v33 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = v41;
    swift_bridgeObjectRetain();
    sub_1B2AE36A8();
    sub_1B2E83588();
    if (!v40)
    {
      uint64_t v17 = v14;
      char v62 = 11;
      sub_1B2AE36A8();
      uint64_t v18 = sub_1B2E835D8();
      uint64_t v19 = sub_1B29A0850();
      v20(v19);
      v38[0] = v6;
      v38[1] = v28;
      v38[2] = v30;
      v38[3] = v27;
      v38[4] = 0;
      v38[5] = v26;
      v38[6] = 0;
      v38[7] = v25;
      v38[8] = 0;
      v38[9] = v24;
      v38[10] = 0;
      v38[11] = v23;
      v38[12] = 0;
      v38[13] = v22;
      v38[14] = 0;
      v38[15] = v21;
      v38[16] = 0;
      v38[17] = v33;
      v38[18] = 0;
      v38[19] = v41;
      v38[20] = v42;
      v38[21] = v17;
      v38[22] = v18;
      sub_1B2A28A60((uint64_t)v38);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v37);
      uint64_t v39 = v6;
      uint64_t v40 = v28;
      uint64_t v41 = v30;
      uint64_t v42 = v27;
      uint64_t v43 = v29;
      uint64_t v44 = v26;
      uint64_t v45 = v12;
      uint64_t v46 = v25;
      uint64_t v47 = v12;
      uint64_t v48 = v24;
      uint64_t v49 = v12;
      uint64_t v50 = v23;
      uint64_t v51 = v12;
      uint64_t v52 = v22;
      uint64_t v53 = v35;
      uint64_t v54 = v21;
      uint64_t v55 = v34;
      char v56 = v33;
      uint64_t v57 = 0;
      uint64_t v58 = v32;
      uint64_t v59 = v31;
      uint64_t v60 = v17;
      uint64_t v61 = v18;
      sub_1B2A28B48((uint64_t)&v39);
      return memcpy(a2, v38, 0xB8uLL);
    }
    uint64_t v15 = sub_1B29A0850();
    v16(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v8 = 1022;
    int v36 = 1;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v37);
  if ((v8 & 2) != 0)
  {
    swift_bridgeObjectRelease();
    if (((v8 >> 2) & 1) == 0)
    {
LABEL_6:
      if ((v8 >> 3)) {
        goto LABEL_7;
      }
      goto LABEL_16;
    }
  }
  else if ((v8 & 4) == 0)
  {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  if ((v8 >> 3))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    if (((v8 >> 4) & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  if (((v8 >> 4) & 1) == 0)
  {
LABEL_8:
    if ((v8 >> 5)) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  if ((v8 >> 5))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    if (((v8 >> 6) & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  if (((v8 >> 6) & 1) == 0)
  {
LABEL_10:
    if ((v8 >> 7)) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  swift_bridgeObjectRelease();
  if ((v8 >> 7))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    if (((v8 >> 8) & 1) == 0) {
      goto LABEL_12;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t result = v33;
    if ((v36 & 1) == 0) {
      return result;
    }
    goto LABEL_22;
  }
LABEL_20:
  if ((v8 >> 8)) {
    goto LABEL_21;
  }
LABEL_12:
  uint64_t result = v33;
  if (!v36) {
    return result;
  }
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (void *)swift_bridgeObjectRelease();
}

uint64_t sub_1B2AE0BC4(void *a1)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3D3E0);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B299ADB4();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AE2B24();
  sub_1B2E83A38();
  sub_1B299B990();
  sub_1B2E83708();
  if (!v1)
  {
    sub_1B299B990();
    sub_1B2E83688();
    sub_1B2AE35F0(2);
    sub_1B2AE35F0(3);
    sub_1B2AE35F0(4);
    sub_1B2AE35F0(5);
    sub_1B2AE35F0(6);
    sub_1B2AE35F0(7);
    sub_1B2AE35F0(8);
    sub_1B2AE2BBC();
    sub_1B299B990();
    sub_1B2E836D8();
    sub_1B299B990();
    sub_1B2E836A8();
    sub_1B299B990();
    sub_1B2E836F8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1B2AE0DF8()
{
  unint64_t v0 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B2AE0E48(char a1)
{
  uint64_t result = 0x656C706F6570;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_1B29A4BEC();
      break;
    case 2:
      uint64_t result = sub_1B2AE371C();
      break;
    case 3:
      uint64_t result = sub_1B2AE3774();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2AE0EB0(char a1)
{
  uint64_t result = 0x656C706F6570;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_1B29A4BEC();
      break;
    case 2:
      uint64_t result = sub_1B2AE371C();
      break;
    case 3:
      uint64_t result = sub_1B2AE3774();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2AE0F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2AE2AD8();

  return MEMORY[0x1F411AC60](a1, a2, a3, v6);
}

uint64_t sub_1B2AE0F7C()
{
  uint64_t v0 = *(void *)aEntitySummary;
  swift_bridgeObjectRetain();
  return v0;
}

void *sub_1B2AE0FB4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B2AE02E8(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0xB8uLL);
  }
  return result;
}

uint64_t sub_1B2AE1000(void *a1)
{
  return sub_1B2AE0BC4(a1);
}

uint64_t sub_1B2AE1018(unsigned __int8 *a1, char *a2)
{
  return sub_1B29AD638(*a1, *a2);
}

uint64_t sub_1B2AE1024()
{
  return sub_1B29AE6E8(*v0);
}

uint64_t sub_1B2AE102C(uint64_t a1)
{
  return sub_1B2AA5E58(a1, *v1);
}

uint64_t sub_1B2AE1034()
{
  return sub_1B29F9720();
}

uint64_t sub_1B2AE103C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2AE0DF8();
  *a1 = result;
  return result;
}

uint64_t sub_1B2AE106C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B2AE0E48(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B2AE1098()
{
  return sub_1B2AE0EB0(*v0);
}

uint64_t sub_1B2AE10A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2AE0E44();
  *a1 = result;
  return result;
}

void sub_1B2AE10C8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1B2AE10D4(uint64_t a1)
{
  unint64_t v2 = sub_1B2AE3274();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AE1110(uint64_t a1)
{
  unint64_t v2 = sub_1B2AE3274();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AE114C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1B2E823C8();
  MEMORY[0x1F4188790](v10 - 8);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C3D458);
  sub_1B299D278();
  uint64_t v33 = v12;
  uint64_t v34 = v11;
  MEMORY[0x1F4188790](v11);
  sub_1B299ADB4();
  sub_1B2E7FFF8();
  swift_allocObject();
  sub_1B2E7FFE8();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AE3274();
  sub_1B2E83A38();
  if (!a2)
  {
    uint64_t v15 = v34;
    goto LABEL_6;
  }
  sub_1B29A3EB4(&qword_1E9C3BD80);
  sub_1B2AE32C0(&qword_1E9C3D460, &qword_1E9C3D468);
  uint64_t v13 = sub_1B2E7FFD8();
  if (!v5)
  {
    uint64_t v18 = v13;
    unint64_t v19 = v14;
    sub_1B2E823B8();
    sub_1B2E82398();
    uint64_t v20 = sub_1B29C34DC(v18, v19);
    uint64_t v21 = (void *)MEMORY[0x1B3EB2480](v20);
    sub_1B29A3EB4(&qword_1EB7D9790);
    sub_1B2AE3380(&qword_1E9C3D470);
    uint64_t v15 = v34;
    sub_1B2E836D8();
    swift_bridgeObjectRelease();
LABEL_6:
    if (a3)
    {
      sub_1B29A3EB4(&qword_1E9C3BD80);
      sub_1B2AE32C0(&qword_1E9C3D460, &qword_1E9C3D468);
      sub_1B2AE36B8();
      if (v5) {
        goto LABEL_15;
      }
      sub_1B2E823B8();
      sub_1B2E82398();
      uint64_t v16 = sub_1B2AE373C();
      uint64_t v17 = (void *)MEMORY[0x1B3EB2480](v16);
      sub_1B29A3EB4(&qword_1EB7D9790);
      sub_1B2AE3380(&qword_1E9C3D470);
      sub_1B2AE366C();
      swift_bridgeObjectRelease();
    }
    if (a4)
    {
      sub_1B29A3EB4(&qword_1E9C3BD80);
      sub_1B2AE32C0(&qword_1E9C3D460, &qword_1E9C3D468);
      sub_1B2AE36B8();
      if (v5) {
        goto LABEL_15;
      }
      sub_1B2E823B8();
      sub_1B2E82398();
      uint64_t v22 = sub_1B2AE373C();
      uint64_t v23 = (void *)MEMORY[0x1B3EB2480](v22);
      sub_1B29A3EB4(&qword_1EB7D9790);
      sub_1B2AE3380(&qword_1E9C3D470);
      sub_1B2AE366C();
      swift_bridgeObjectRelease();
    }
    if (a5)
    {
      sub_1B29A3EB4(&qword_1E9C3BD80);
      sub_1B2AE32C0(&qword_1E9C3D460, &qword_1E9C3D468);
      uint64_t v24 = sub_1B2AE36B8();
      if (!v5)
      {
        uint64_t v27 = v24;
        unint64_t v28 = v25;
        sub_1B2E823B8();
        sub_1B2E82398();
        uint64_t v29 = sub_1B29C34DC(v27, v28);
        uint64_t v30 = (void *)MEMORY[0x1B3EB2480](v29);
        sub_1B29A3EB4(&qword_1EB7D9790);
        sub_1B2AE3380(&qword_1E9C3D470);
        sub_1B2E836D8();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
LABEL_15:
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v6, v15);
  }
  swift_release();
LABEL_4:
  uint64_t v15 = v34;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v6, v15);
}

uint64_t sub_1B2AE1740(void *a1)
{
  uint64_t v3 = sub_1B2E823C8();
  sub_1B299D278();
  uint64_t v35 = v4;
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  sub_1B29A3EB4(&qword_1E9C3D438);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B299E4A0();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AE3274();
  sub_1B2E83A18();
  if (v1) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  uint64_t v33 = v3;
  uint64_t v34 = (uint64_t)a1;
  uint64_t v10 = v35;
  sub_1B2E7FF98();
  swift_allocObject();
  sub_1B2E7FF88();
  LOBYTE(v36) = 0;
  sub_1B29A4434();
  if (v12
    && (sub_1B2E823B8(),
        uint64_t v13 = sub_1B2999A74(),
        unint64_t v15 = v14,
        swift_bridgeObjectRelease(),
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v8, v33),
        v15 >> 60 != 15))
  {
    sub_1B29A3EB4(&qword_1E9C3BD80);
    sub_1B2AE32C0(&qword_1E9C3D448, &qword_1E9C3D450);
    sub_1B2AE3698();
    sub_1B2AE36D8();
    sub_1B29F869C(v13, v15);
    uint64_t v32 = v36;
  }
  else
  {
    uint64_t v32 = 0;
  }
  sub_1B29A4434();
  if (v16)
  {
    sub_1B2E823B8();
    uint64_t v17 = sub_1B2999A74();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v8, v33);
    if (v19 >> 60 != 15)
    {
      sub_1B29A3EB4(&qword_1E9C3BD80);
      sub_1B2AE32C0(&qword_1E9C3D448, &qword_1E9C3D450);
      sub_1B2AE3698();
      sub_1B2AE36D8();
      sub_1B29F869C(v17, v19);
    }
    uint64_t v10 = v35;
  }
  sub_1B29A4434();
  if (v20)
  {
    sub_1B2E823B8();
    uint64_t v30 = sub_1B2E82388();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v33);
    if (v22 >> 60 != 15)
    {
      sub_1B29A3EB4(&qword_1E9C3BD80);
      sub_1B2AE32C0(&qword_1E9C3D448, &qword_1E9C3D450);
      sub_1B2AE3698();
      sub_1B2AE36D8();
      sub_1B29F869C(v30, v22);
    }
    uint64_t v10 = v35;
  }
  sub_1B29A4434();
  if (v23
    && (sub_1B2E823B8(),
        uint64_t v29 = sub_1B2E82388(),
        unint64_t v31 = v24,
        swift_bridgeObjectRelease(),
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v33),
        v31 >> 60 != 15))
  {
    sub_1B29A3EB4(&qword_1E9C3BD80);
    sub_1B2AE32C0(&qword_1E9C3D448, &qword_1E9C3D450);
    sub_1B2AE3698();
    sub_1B2AE36D8();
    uint64_t v27 = sub_1B2AE35D4();
    v28(v27);
    sub_1B29F869C(v29, v31);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v25 = sub_1B2AE35D4();
    v26(v25);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v34);
  return v32;
}

uint64_t sub_1B2AE1DC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B2AE1740(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1B2AE1DF4(void *a1)
{
  return sub_1B2AE114C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1B2AE1E14()
{
  uint64_t v0 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1B2AE1E6C(char a1)
{
  if (a1) {
    return 0x7361696C61;
  }
  else {
    return 0x44495F444DLL;
  }
}

uint64_t sub_1B2AE1E94(char *a1, char *a2)
{
  return sub_1B29AD794(*a1, *a2);
}

uint64_t sub_1B2AE1EA0()
{
  return sub_1B29AE6C4();
}

uint64_t sub_1B2AE1EA8()
{
  return sub_1B2AA5F20();
}

uint64_t sub_1B2AE1EB0()
{
  return sub_1B29F9738();
}

uint64_t sub_1B2AE1EB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2AE1E14();
  *a1 = result;
  return result;
}

uint64_t sub_1B2AE1EE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B2AE1E6C(*v1);
  *a1 = result;
  a1[1] = 0xE500000000000000;
  return result;
}

uint64_t sub_1B2AE1F18()
{
  return sub_1B2AE1E6C(*v0);
}

uint64_t sub_1B2AE1F38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2AE1E68();
  *a1 = result;
  return result;
}

uint64_t sub_1B2AE1F60(uint64_t a1)
{
  unint64_t v2 = sub_1B2AE2C08();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AE1F9C(uint64_t a1)
{
  unint64_t v2 = sub_1B2AE2C08();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2AE1FD8()
{
  if (*(void *)(v0 + 40))
  {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else
  {
    unint64_t v2 = (void *)MEMORY[0x1B3EB2480]();
    sub_1B2AE205C(&v4);
    uint64_t v1 = v4;
    *(void *)(v0 + 40) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B2AE205C@<X0>(uint64_t *a1@<X8>)
{
  sub_1B2DD7168();
  uint64_t v2 = sub_1B2E823F8();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1B2DD687C(v2, v4);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  sub_1B2DD6BA4(v5, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1B2E823F8();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  v28[0] = v8;
  v28[1] = v10;
  sub_1B29C3640();
  uint64_t v11 = sub_1B2E83048();
  swift_bridgeObjectRelease();
  uint64_t v27 = MEMORY[0x1E4FBC870];
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = (uint64_t *)(v11 + 56);
    do
    {
      uint64_t v15 = *(v13 - 3);
      uint64_t v14 = *(v13 - 2);
      uint64_t v16 = *(v13 - 1);
      uint64_t v17 = *v13;
      swift_bridgeObjectRetain();
      uint64_t v18 = MEMORY[0x1B3EB0C00](v15, v14, v16, v17);
      sub_1B2A00B00((uint64_t)v28, v18, v19, v19, v20, v21, v22, v23, v26, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 += 4;
      --v12;
    }
    while (v12);
    uint64_t result = swift_bridgeObjectRelease_n();
    uint64_t v25 = v27;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x1E4FBC870];
  }
  *a1 = v25;
  return result;
}

uint64_t sub_1B2AE21FC(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AE220C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B2AE2234()
{
  sub_1B2AE220C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityWithAlias()
{
  return self;
}

uint64_t sub_1B2AE228C(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3D400);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AE2C08();
  sub_1B2E83A38();
  sub_1B2E83708();
  if (!v1) {
    sub_1B2E83688();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1B2AE23BC(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1B2AE2908(a1);
  return v2;
}

uint64_t sub_1B2AE240C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AE2498(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1B2AE25A8(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  a1[22] = a2[22];
  return a1;
}

void *sub_1B2AE2750(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB8uLL);
}

uint64_t sub_1B2AE2758(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  return a1;
}

uint64_t sub_1B2AE2850(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 184))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2AE2890(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for EntitySummaryRecord()
{
}

uint64_t sub_1B2AE2908(void *a1)
{
  uint64_t v3 = v1;
  sub_1B29A3EB4(&qword_1E9C3D3F0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  *(void *)(v1 + 40) = 0;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AE2C08();
  sub_1B2E83A18();
  if (v2)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for EntityWithAlias();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v1 + 16) = sub_1B2E835E8();
    uint64_t v7 = sub_1B2E83568();
    uint64_t v9 = v8;
    uint64_t v10 = sub_1B2ACA0FC();
    v11(v10);
    *(void *)(v3 + 24) = v7;
    *(void *)(v3 + 32) = v9;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1B2AE2A88@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B2AE23BC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B2AE2AB4(void *a1)
{
  return sub_1B2AE228C(a1);
}

unint64_t sub_1B2AE2AD8()
{
  unint64_t result = qword_1E9C3D3B8;
  if (!qword_1E9C3D3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D3B8);
  }
  return result;
}

unint64_t sub_1B2AE2B24()
{
  unint64_t result = qword_1E9C3D3C8;
  if (!qword_1E9C3D3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D3C8);
  }
  return result;
}

unint64_t sub_1B2AE2B70()
{
  unint64_t result = qword_1E9C3D3D8;
  if (!qword_1E9C3D3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D3D8);
  }
  return result;
}

unint64_t sub_1B2AE2BBC()
{
  unint64_t result = qword_1E9C3D3E8;
  if (!qword_1E9C3D3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D3E8);
  }
  return result;
}

unint64_t sub_1B2AE2C08()
{
  unint64_t result = qword_1E9C3D3F8;
  if (!qword_1E9C3D3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D3F8);
  }
  return result;
}

unsigned char *sub_1B2AE2C54(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AE2D20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for EntityWithAlias.CodingKeys()
{
}

unsigned char *sub_1B2AE2D54(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AE2E20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

void type metadata accessor for EntitySummaryRecord.CodingKeys()
{
}

uint64_t sub_1B2AE2E54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1B2AE2EA0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1B2AE2EF8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1B2AE2F88(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2AE2FE0(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2AE3034(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void type metadata accessor for NeighborSignals()
{
}

unint64_t sub_1B2AE3098()
{
  unint64_t result = qword_1E9C3D408;
  if (!qword_1E9C3D408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D408);
  }
  return result;
}

unint64_t sub_1B2AE30E8()
{
  unint64_t result = qword_1E9C3D410;
  if (!qword_1E9C3D410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D410);
  }
  return result;
}

unint64_t sub_1B2AE3138()
{
  unint64_t result = qword_1E9C3D418;
  if (!qword_1E9C3D418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D418);
  }
  return result;
}

unint64_t sub_1B2AE3188()
{
  unint64_t result = qword_1E9C3D420;
  if (!qword_1E9C3D420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D420);
  }
  return result;
}

unint64_t sub_1B2AE31D8()
{
  unint64_t result = qword_1E9C3D428;
  if (!qword_1E9C3D428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D428);
  }
  return result;
}

unint64_t sub_1B2AE3228()
{
  unint64_t result = qword_1E9C3D430;
  if (!qword_1E9C3D430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D430);
  }
  return result;
}

unint64_t sub_1B2AE3274()
{
  unint64_t result = qword_1E9C3D440;
  if (!qword_1E9C3D440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D440);
  }
  return result;
}

uint64_t sub_1B2AE32C0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(&qword_1E9C3BD80);
    sub_1B2AE3340(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2AE3340(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for EntityWithAlias();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2AE3380(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(&qword_1EB7D9790);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *sub_1B2AE33E4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AE34B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for NeighborSignals.CodingKeys()
{
}

unint64_t sub_1B2AE34E8()
{
  unint64_t result = qword_1E9C3D478;
  if (!qword_1E9C3D478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D478);
  }
  return result;
}

unint64_t sub_1B2AE3538()
{
  unint64_t result = qword_1E9C3D480;
  if (!qword_1E9C3D480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D480);
  }
  return result;
}

unint64_t sub_1B2AE3588()
{
  unint64_t result = qword_1E9C3D488;
  if (!qword_1E9C3D488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D488);
  }
  return result;
}

uint64_t sub_1B2AE35D4()
{
  return v0;
}

uint64_t sub_1B2AE35F0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return sub_1B2E83628();
}

uint64_t sub_1B2AE3614()
{
  return 0x745F797469746E65;
}

uint64_t sub_1B2AE3638()
{
  return v0;
}

uint64_t sub_1B2AE364C()
{
  return 0x5F7972616D697270;
}

uint64_t sub_1B2AE366C()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2AE3698()
{
  return v0;
}

uint64_t sub_1B2AE36B8()
{
  return sub_1B2E7FFD8();
}

uint64_t sub_1B2AE36D8()
{
  return sub_1B2E7FF78();
}

uint64_t sub_1B2AE36F4(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6E5F000000000000;
}

uint64_t sub_1B2AE3708(unsigned int a1)
{
  return a1 | 0x616E5F7400000000;
}

uint64_t sub_1B2AE371C()
{
  return 0x73746E657665;
}

uint64_t sub_1B2AE372C()
{
  return 0x7361696C61;
}

uint64_t sub_1B2AE373C()
{
  return sub_1B29C34DC(v0, v1);
}

uint64_t sub_1B2AE375C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 192) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2AE3774()
{
  return 0x616C6C656373696DLL;
}

uint64_t sub_1B2AE3798(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  *(void *)(v3 + 24) = 0;
  *(unsigned char *)(v3 + 32) = 1;
  *(void *)(v3 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F93B48]), sel_initWithCountLimit_, a1);
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 32) = a3 & 1;
  if (qword_1EB7E5AE0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1B2E81FB8();
  sub_1B29A4B98(v7, (uint64_t)qword_1EB7E5AC0);
  uint64_t v8 = sub_1B2E81F98();
  os_log_type_t v9 = sub_1B2E82DA8();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v22[0] = v11;
    *(_DWORD *)uint64_t v10 = 134218242;
    sub_1B2E82FB8();
    *(_WORD *)(v10 + 12) = 2080;
    LOBYTE(v21) = a3 & 1;
    sub_1B29A3EB4(&qword_1E9C3D1C0);
    uint64_t v12 = sub_1B2E823E8();
    sub_1B29BF6BC(v12, v13, (uint64_t)v22, v14, v15, v16, v17, v18, v20, a2, v21, v22[0], v22[1], v22[2], v22[3], v22[4], v22[5], v22[6], v22[7],
      v22[8]);
    sub_1B2E82FB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B2996000, v8, v9, "MemoryCache initiated with countLimit = %ld and expireAfterHours = %s.", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3EB30C0](v11, -1, -1);
    MEMORY[0x1B3EB30C0](v10, -1, -1);
  }

  return v4;
}

id sub_1B2AE3990(uint64_t a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1EB7D87C0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B2E80668();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = (objc_class *)sub_1B29A3EB4(&qword_1E9C3D4E0);
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  uint64_t v15 = (void *)MEMORY[0x1E4FBC8C8];
  *(void *)&v14[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v14) + 0x68)] = a1;
  v24.receiver = v14;
  v24.super_class = v13;
  id v16 = objc_msgSendSuper2(&v24, sel_init);
  uint64_t v17 = *(void **)(v1 + 16);
  uint64_t v18 = objc_msgSend(v17, sel_objectForKey_, v16);
  if (v18)
  {
    uint64_t v19 = v18;
    sub_1B2AE6F74((uint64_t)v18 + *(void *)((*v15 & *v18) + 0x70), (uint64_t)v5, &qword_1EB7D87C0);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v5, 1, v6) == 1)
    {

      sub_1B29C4148((uint64_t)v5, &qword_1EB7D87C0);
LABEL_9:
      id v22 = *(id *)((char *)v19 + *(void *)((*v15 & *v19) + 0x68));

      return v22;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    sub_1B2E80658();
    char v20 = sub_1B2E805F8();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21(v10, v6);
    if ((v20 & 1) == 0)
    {
      v21(v12, v6);

      goto LABEL_9;
    }
    objc_msgSend(v17, sel_removeObjectForKey_, v16);

    v21(v12, v6);
  }
  else
  {
  }
  return 0;
}

void sub_1B2AE3C70(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  char v7 = *(unsigned char *)(v2 + 32);
  objc_allocWithZone((Class)sub_1B29A3EB4(qword_1E9C3D4E8));
  uint64_t v8 = (void *)sub_1B2AE3D54(a1, v6, v7);
  uint64_t v9 = (objc_class *)sub_1B29A3EB4(&qword_1E9C3D4E0);
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v10) + 0x68)] = a2;
  v12.receiver = v10;
  v12.super_class = v9;
  id v11 = objc_msgSendSuper2(&v12, sel_init);
  objc_msgSend(v5, sel_setObject_forKey_, v8, v11);
}

uint64_t sub_1B2AE3D54(void *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = sub_1B2E80668();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  objc_super v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1B29A3EB4(&qword_1EB7D87C0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = (void *)MEMORY[0x1E4FBC8C8];
  *(void *)((char *)v4 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v4) + 0x68)) = a1;
  if (a3)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4 + *(void *)((*v16 & *v4) + 0x70), 1, 1, v9);
    id v20 = a1;
    goto LABEL_5;
  }
  id v17 = a1;
  uint64_t v18 = v4;
  uint64_t result = sub_1B2E80658();
  if ((unsigned __int128)(a2 * (__int128)3600) >> 64 == (3600 * a2) >> 63)
  {
    sub_1B2E805D8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v15, 0, 1, v9);
    sub_1B2AE6FBC((uint64_t)v15, (uint64_t)v18 + *(void *)((*v16 & *v18) + 0x70), &qword_1EB7D87C0);

LABEL_5:
    v22.receiver = v4;
    v22.super_class = ObjectType;
    id v21 = objc_msgSendSuper2(&v22, sel_init);

    return (uint64_t)v21;
  }
  __break(1u);
  return result;
}

id sub_1B2AE3F94(uint64_t a1)
{
  return sub_1B2AE3FCC(a1, &qword_1EB7D97B8, (uint64_t)off_1E60128E8, (SEL *)&selRef_initWithRankedResults_);
}

id sub_1B2AE3FB0(uint64_t a1)
{
  return sub_1B2AE3FCC(a1, &qword_1E9C3D4D8, (uint64_t)off_1E6012898, (SEL *)&selRef_initWithMentions_);
}

id sub_1B2AE3FCC(uint64_t a1, unint64_t *a2, uint64_t a3, SEL *a4)
{
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1B29C3CA0(0, a2);
  char v7 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, *a4, v7);

  return v8;
}

uint64_t EntityResolutionXPCService.__allocating_init(viewService:config:enableSessionLogging:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  EntityResolutionXPCService.init(viewService:config:enableSessionLogging:)(a1, a2, a3);
  return v6;
}

uint64_t EntityResolutionXPCService.init(viewService:config:enableSessionLogging:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  sub_1B2AE6FBC(a2, (uint64_t)v25, (uint64_t *)&unk_1EB7E2878);
  swift_defaultActor_initialize();
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 288) = a1;
  id v7 = a1;
  id v8 = sub_1B2A94B14();
  *(void *)(v4 + 120) = v8;
  sub_1B2AE6FBC((uint64_t)v25, (uint64_t)__src, (uint64_t *)&unk_1EB7E2878);
  if (sub_1B2A99448((uint64_t)__src) != 1)
  {
    int v20 = __src[140];
    memcpy((void *)(v4 + 128), __src, 0x8DuLL);
    if (v20 != 1) {
      goto LABEL_8;
    }
LABEL_7:
    sub_1B29A3EB4(&qword_1E9C3D490);
    swift_allocObject();
    *(void *)(v4 + 112) = sub_1B2AE3798(100, 0, 1);
    swift_release();
    goto LABEL_8;
  }
  if (!v8[2]
    || (uint64_t v9 = sub_1B2ABAE54(),
        uint64_t v16 = sub_1B29DB060(v9, 0xEA00000000007963, v10, v11, v12, v13, v14, v15, *(uint64_t *)v24, *(uint64_t *)&v24[8], *(uint64_t *)&v24[16], *(uint64_t *)&v24[24], *(uint64_t *)&v24[32], *(uint64_t *)&v24[40], *(uint64_t *)&v24[48], *(uint64_t *)&v24[56], *(uint64_t *)&v24[64], *(uint64_t *)&v24[72], *(uint64_t *)&v24[80],
                *(uint64_t *)&v24[88],
                *(uint64_t *)&v24[96],
                *(uint64_t *)&v24[104],
                *(uint64_t *)&v24[112],
                *(uint64_t *)&v24[120],
                *(uint64_t *)&v24[128],
                *(uint64_t *)&v24[136]),
        (v17 & 1) == 0))
  {
    sub_1B2A1F13C();
    swift_allocError();
    *(void *)uint64_t v22 = 0xD00000000000004ALL;
    *(void *)(v22 + 8) = 0x80000001B2E9ACD0;
    *(unsigned char *)(v22 + 16) = 7;
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();

    type metadata accessor for EntityResolutionXPCService();
    sub_1B2AE7134();
    swift_defaultActor_destroy();

    swift_deallocPartialClassInstance();
    return v4;
  }
  uint64_t v18 = (const void *)(v8[7] + 144 * v16);
  memcpy(v24, v18, 0x8DuLL);
  char v19 = v24[140];
  memmove((void *)(v4 + 128), v18, 0x8DuLL);
  sub_1B2A98298((uint64_t)v24);
  if (v19) {
    goto LABEL_7;
  }
LABEL_8:
  *(unsigned char *)(v4 + 269) = a3 & 1;
  type metadata accessor for EntityResolutionHandlerPool();
  uint64_t v21 = swift_allocObject();
  type metadata accessor for EntityResolutionHandlerPool.EntityRerankerHandlerStore();
  swift_allocObject();
  *(void *)(v21 + 16) = sub_1B2A9AA08();
  *(void *)(v4 + 272) = v21;
  type metadata accessor for EntityResolutionServicePool();
  swift_allocObject();
  *(void *)(v4 + 280) = sub_1B2AD1424((uint64_t)v7);
  return v4;
}

uint64_t sub_1B2AE4320(uint64_t a1)
{
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = v1;
  return MEMORY[0x1F4188298](sub_1B2AE4340, v1, 0);
}

uint64_t sub_1B2AE4340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v20 = v9;
  uint64_t v10 = *(void *)(v9[21] + 120);
  switch(v9[20])
  {
    case 1:
      uint64_t v11 = sub_1B2AE70C4();
      break;
    case 2:
      uint64_t v8 = 0xEB00000000797469;
      uint64_t v11 = sub_1B2ABAB74();
      break;
    case 3:
      uint64_t v12 = 0x786966657270;
      goto LABEL_9;
    case 4:
      uint64_t v11 = 0xD000000000000014;
      uint64_t v8 = 0x80000001B2E8EF80;
      break;
    case 5:
      uint64_t v11 = sub_1B299E734();
      break;
    case 6:
      uint64_t v12 = 0x646972627968;
LABEL_9:
      uint64_t v11 = sub_1B2AE7120(v12);
      break;
    default:
      uint64_t v8 = 0xEA00000000007963;
      uint64_t v11 = sub_1B2ABAE54();
      break;
  }
  if (*(void *)(v10 + 16)
    && (uint64_t v13 = sub_1B29DB060(v11, v8, a3, a4, a5, a6, a7, a8, v18, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9],
                __dst[10],
                __dst[11],
                __dst[12],
                __dst[13],
                __dst[14],
                __dst[15],
                __dst[16]),
        (v14 & 1) != 0))
  {
    memcpy(v9 + 2, (const void *)(*(void *)(v10 + 56) + 144 * v13), 0x8DuLL);
    sub_1B2A98298((uint64_t)(v9 + 2));
    swift_bridgeObjectRelease();
    memcpy(__dst, v9 + 2, 0x8DuLL);
    sub_1B2A9AEA8((uint64_t)__dst);
    memcpy(__dst, v9 + 2, 0x8DuLL);
    sub_1B2AD1738((uint64_t)__dst);
    sub_1B2A982E4((uint64_t)(v9 + 2));
    sub_1B299AD7C();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1B2A1F13C();
    swift_allocError();
    *(_OWORD *)uint64_t v15 = xmmword_1B2ECFD90;
    *(unsigned char *)(v15 + 16) = 9;
    swift_willThrow();
    sub_1B299AD7C();
  }
  return v17();
}

uint64_t sub_1B2AE456C()
{
  sub_1B299B3BC();
  v1[51] = v2;
  v1[52] = v0;
  sub_1B29A3EB4(&qword_1E9C37F30);
  v1[53] = sub_1B29A4E8C();
  v1[54] = swift_task_alloc();
  sub_1B29A3EB4(&qword_1EB7E2F60);
  v1[55] = sub_1B29A4E8C();
  v1[56] = swift_task_alloc();
  uint64_t v3 = sub_1B2E81F08();
  v1[57] = v3;
  sub_1B299D2A8(v3);
  v1[58] = v4;
  v1[59] = sub_1B29A4E8C();
  v1[60] = swift_task_alloc();
  v1[61] = swift_task_alloc();
  uint64_t v5 = sub_1B2E81FB8();
  v1[62] = v5;
  sub_1B299D2A8(v5);
  v1[63] = v6;
  v1[64] = swift_task_alloc();
  uint64_t v7 = sub_1B2E81F38();
  v1[65] = v7;
  sub_1B299D2A8(v7);
  v1[66] = v8;
  v1[67] = sub_1B29A4E8C();
  v1[68] = swift_task_alloc();
  v1[69] = type metadata accessor for LogSignpost();
  v1[70] = sub_1B29A4E8C();
  v1[71] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B2AE4724, v0, 0);
}

uint64_t sub_1B2AE4724()
{
  uint64_t v359 = v0;
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 504);
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v305 = sub_1B29A4B98(*(void *)(v0 + 496), (uint64_t)qword_1EB7E6600);
  uint64_t v298 = *(void (**)(uint64_t))(v2 + 16);
  v298(v1);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v3 = sub_1B2E81F28();
  os_signpost_type_t v4 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    os_signpost_id_t v6 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v3, v4, v6, "ECR.XPCService.submit", "", v5, 2u);
    sub_1B299B750();
  }
  uint64_t v7 = *(void *)(v0 + 568);
  uint64_t v8 = *(int **)(v0 + 552);
  uint64_t v9 = *(void *)(v0 + 528);
  uint64_t v318 = *(void *)(v0 + 520);
  uint64_t v324 = *(void *)(v0 + 544);
  uint64_t v10 = *(void *)(v0 + 480);
  uint64_t v11 = *(void *)(v0 + 488);
  uint64_t v13 = *(void *)(v0 + 456);
  uint64_t v12 = *(void *)(v0 + 464);

  uint64_t v292 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v292(v10, v11, v13);
  uint64_t v14 = sub_1B2E81F78();
  swift_allocObject();
  uint64_t v15 = sub_1B29A4400();
  uint64_t v16 = v13;
  char v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v17(v11, v16);
  *(void *)uint64_t v7 = "ECR.XPCService.submit";
  *(void *)(v7 + 8) = 21;
  *(unsigned char *)(v7 + 16) = 2;
  *(void *)(v7 + 24) = v15;
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  v18(v7 + v8[6], v324, v318);
  double Current = CFAbsoluteTimeGetCurrent();
  sub_1B2A9B3A8((uint64_t)__src);
  uint64_t v263 = v18;
  uint64_t v269 = v17;
  uint64_t v275 = v14;
  uint64_t v286 = v12 + 8;
  uint64_t v331 = v8;
  uint64_t v319 = (const void *)(v0 + 160);
  memcpy((void *)(v0 + 160), __src, 0x7AuLL);
  if (qword_1EB7E2888 != -1) {
    swift_once();
  }
  uint64_t v20 = *(void *)(v0 + 416);
  uint64_t v21 = *(void *)(qword_1EB7F3468 + 16);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1B2D49EB0(v21);
  uint64_t v253 = v20;
  uint64_t v23 = *(void **)(v20 + 112);
  if (v23)
  {
    swift_retain();
    unint64_t v24 = sub_1B2A9CD10();
    sub_1B2AE3990(v24);
    sub_1B2AE7134();
    swift_release();
    id v332 = v23;
    uint64_t v25 = *(void *)(v0 + 568);
    uint64_t v26 = v22;
LABEL_9:
    sub_1B2AE585C(Current, v26, v25);
    swift_release();
    uint64_t v27 = *(void *)(v0 + 568);
    sub_1B2AB51F4((uint64_t)v319);
    sub_1B2A93478(v27);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v28 = *(uint64_t (**)(id))(v0 + 8);
    return v28(v332);
  }
  va_list __dst = (void *)(v0 + 16);
  uint64_t v30 = *(void *)(*(void *)(v0 + 416) + 120);
  uint64_t v31 = *(unsigned __int8 *)(v0 + 208);
  uint64_t v32 = sub_1B2ABAE54();
  uint64_t v39 = 0xEA00000000007963;
  switch(v31)
  {
    case 1:
      uint64_t v32 = sub_1B2AE70C4();
      break;
    case 2:
      uint64_t v32 = sub_1B2ABAB74();
      uint64_t v39 = 0xEB00000000797469;
      break;
    case 3:
      uint64_t v40 = 0x786966657270;
      goto LABEL_19;
    case 4:
      uint64_t v32 = 0xD000000000000014;
      uint64_t v39 = 0x80000001B2E8EF80;
      break;
    case 5:
      uint64_t v32 = sub_1B299E734();
      break;
    case 6:
      uint64_t v40 = 0x646972627968;
LABEL_19:
      uint64_t v32 = sub_1B2AE7120(v40);
      break;
    default:
      break;
  }
  if (*(void *)(v30 + 16)
    && (uint64_t v41 = sub_1B29DB060(v32, v39, v33, v34, v35, v36, v37, v38, v141, v148, v155, v162, v169, v176, v183, v190, v197, v203, v209,
                v215,
                v221,
                v0 + 400,
                v0 + 408,
                v0 + 288,
                0,
                v0 + 344),
        (v42 & 1) != 0))
  {
    uint64_t v198 = v31;
    unint64_t v204 = 0x6E6574614C776F6CLL;
    uint64_t v210 = 0xEA00000000007963;
    uint64_t v222 = v22;
    uint64_t v43 = *(void *)(v0 + 512);
    uint64_t v325 = *(void *)(v0 + 496);
    uint64_t v44 = *(void *)(v0 + 448);
    uint64_t v216 = *(void *)(v0 + 432);
    memcpy(__dst, (const void *)(*(void *)(v30 + 56) + 144 * v41), 0x8DuLL);
    sub_1B2A98298((uint64_t)__dst);
    swift_bridgeObjectRelease();
    *(void *)(v247 + 48) = 0;
    *(_OWORD *)(v247 + 16) = 0u;
    *(_OWORD *)(v247 + 32) = 0u;
    *(_OWORD *)uint64_t v247 = 0u;
    uint64_t v45 = type metadata accessor for EntityAliasView();
    long long v338 = 0u;
    long long v339 = 0u;
    long long v340 = 0u;
    uint64_t v341 = 0;
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v44, 1, 1, v45);
    uint64_t v346 = 0;
    uint64_t v347 = 0;
    long long v344 = 0u;
    long long v345 = 0u;
    long long v343 = 0u;
    uint64_t v348 = 0;
    uint64_t v349 = 0;
    uint64_t v350 = 0;
    id v351 = 0;
    uint64_t v46 = type metadata accessor for LemmatizedSubgraphView();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v216, 1, 1, v46);
    ((void (*)(uint64_t, uint64_t, uint64_t))v298)(v43, v305, v325);
    sub_1B2E81F18();
    sub_1B2E81F28();
    sub_1B2E81ED8();
    uint64_t v47 = sub_1B2E81F28();
    os_signpost_type_t v48 = sub_1B2E82E68();
    if (sub_1B2E82F28())
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      os_signpost_id_t v50 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v47, v48, v50, "ECR.XPCService.loadViews", "", v49, 2u);
      sub_1B299B750();
    }
    uint64_t v326 = v0;
    uint64_t v51 = *(void *)(v0 + 560);
    uint64_t v52 = *(void *)(v326 + 536);
    uint64_t v53 = *(void *)(v326 + 520);
    uint64_t v54 = *(void *)(v326 + 480);
    uint64_t v55 = *(void *)(v326 + 472);
    uint64_t v56 = *(void *)(v326 + 456);
    uint64_t v306 = *(void *)(v326 + 432);
    uint64_t v312 = *(void *)(v326 + 448);
    uint64_t v299 = *(void *)(v326 + 416);

    v292(v54, v55, v56);
    swift_allocObject();
    uint64_t v57 = sub_1B29A4400();
    v269(v55, v56);
    *(void *)uint64_t v51 = "ECR.XPCService.loadViews";
    *(void *)(v51 + 8) = 24;
    *(unsigned char *)(v51 + 16) = 2;
    *(void *)(v51 + 24) = v57;
    v263(v51 + v331[6], v52, v53);
    uint64_t v58 = (uint64_t)v319;
    sub_1B2AE5C04((uint64_t)&v338, v299, (uint64_t)v319, (uint64_t)&v343, (uint64_t)__dst, v312, (uint64_t *)&v351, v306, v247, &v350, &v347);
    uint64_t v59 = *(void *)(v326 + 560);
    if (!v242)
    {
      uint64_t v63 = *(void *)(v326 + 440);
      uint64_t v62 = *(void *)(v326 + 448);
      uint64_t v287 = *(void *)(v326 + 424);
      uint64_t v293 = *(void *)(v326 + 432);
      uint64_t v300 = *(void *)(v326 + 416);
      uint64_t v307 = v63;
      sub_1B2DA2B74(v59);
      sub_1B2A93478(v59);
      uint64_t v313 = type metadata accessor for EntityResolutionRequestManager();
      memcpy(v352, v319, 0x7AuLL);
      memcpy(__src, __dst, 0x8DuLL);
      sub_1B2AE6F74(v62, v63, &qword_1EB7E2F60);
      uint64_t v264 = *((void *)&v338 + 1);
      uint64_t v270 = v338;
      long long v64 = v339;
      uint64_t v185 = *((void *)&v340 + 1);
      uint64_t v192 = v340;
      uint64_t v178 = v341;
      v354[0] = v338;
      v354[1] = v339;
      v354[2] = v340;
      uint64_t v355 = v341;
      sub_1B2AE6FBC(v247, (uint64_t)v237, &qword_1EB7D9668);
      uint64_t v66 = v347;
      uint64_t v65 = v348;
      v356[0] = v347;
      v356[1] = v348;
      uint64_t v281 = v350;
      id v276 = v351;
      uint64_t v248 = *((void *)&v343 + 1);
      uint64_t v67 = v343;
      uint64_t v164 = v345;
      uint64_t v171 = v344;
      v356[2] = v349;
      v357[0] = v343;
      v357[1] = v344;
      v357[2] = v345;
      uint64_t v358 = v346;
      sub_1B2AE6F74(v293, v287, &qword_1E9C37F30);
      LODWORD(v300) = *(unsigned __int8 *)(v300 + 269);
      sub_1B2A98298((uint64_t)__dst);
      sub_1B2AB5138((uint64_t)v319);
      sub_1B2AD2CF4(v270);
      sub_1B2AE6AD4(v237);
      sub_1B2A8E50C(v66, v65);
      id v68 = v276;
      swift_retain();
      sub_1B2AD2CF4(v67);
      sub_1B2ACE0E8(v352, __src, v63, (uint64_t *)v354, v237, v356, v281, v276, (uint64_t *)v357, v287, v300);
      swift_retain();
      uint64_t v26 = v222;
      uint64_t v97 = sub_1B2ACA524();
      swift_release();
      uint64_t v98 = *(void *)(v97 + 16);
      if (v98)
      {
        v352[0] = MEMORY[0x1E4FBC860];
        sub_1B2E832F8();
        uint64_t v99 = (void *)(v97 + 112);
        do
        {
          uint64_t v100 = *(v99 - 2);
          char v101 = *((unsigned char *)v99 - 8);
          uint64_t v102 = *v99;
          long long v103 = *((_OWORD *)v99 - 4);
          __src[0] = *((_OWORD *)v99 - 5);
          __src[1] = v103;
          long long v104 = *((_OWORD *)v99 - 2);
          __src[2] = *((_OWORD *)v99 - 3);
          __src[3] = v104;
          *(void *)&__src[4] = v100;
          BYTE8(__src[4]) = v101;
          *(void *)&__src[5] = v102;
          sub_1B2A9D6A8();
          sub_1B2E832C8();
          sub_1B2E83308();
          sub_1B2E83318();
          sub_1B2E832D8();
          v99 += 11;
          --v98;
        }
        while (v98);
        uint64_t v105 = v352[0];
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v105 = MEMORY[0x1E4FBC860];
      }
      sub_1B29C3CA0(0, &qword_1EB7D97F0);
      id v106 = sub_1B2AE3FCC(v105, &qword_1EB7D97B8, (uint64_t)off_1E60128E8, (SEL *)&selRef_initWithRankedResults_);
      sub_1B2A982E4((uint64_t)__dst);
      uint64_t v0 = v326;
      if ((*(unsigned char *)(v326 + 156) & 1) != 0 && *(void *)(v253 + 112))
      {
        swift_retain();
        unint64_t v107 = sub_1B2A9CD10();
        sub_1B2AE3C70(v106, v107);
        swift_release();
      }
      id v335 = v106;
      static BackgroundSystemTaskUtilities.reportFeatureCheckpoint(state:)(70);
      id v108 = objc_msgSend(v106, sel_rankedResults);
      sub_1B29C3CA0(0, &qword_1EB7D97B8);
      uint64_t v109 = sub_1B2E82838();

      if ((unint64_t)v109 >> 62)
      {
        if (v109 < 0) {
          uint64_t v110 = v109;
        }
        else {
          uint64_t v110 = v109 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        sub_1B2E83448();
        sub_1B2AE7134();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v110 = *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      switch((int)v198)
      {
        case 1:
          unint64_t v111 = 0xE800000000000000;
          unint64_t v112 = 0x6465636E616C6162;
          goto LABEL_46;
        case 2:
          unint64_t v204 = 0x6C61755168676968;
          unint64_t v113 = 0xEB00000000797469;
          goto LABEL_49;
        case 3:
          uint64_t v114 = 0x786966657270;
          goto LABEL_48;
        case 4:
          unint64_t v204 = 0xD000000000000014;
          unint64_t v113 = 0x80000001B2E8EF80;
          goto LABEL_49;
        case 5:
          unint64_t v111 = 0x80000001B2E8EFA0;
          unint64_t v112 = 0xD000000000000010;
LABEL_46:
          unint64_t v204 = v112;
          uint64_t v210 = v111;
          break;
        case 6:
          uint64_t v114 = 0x646972627968;
LABEL_48:
          unint64_t v204 = v114 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
          unint64_t v113 = 0xEC00000068637261;
LABEL_49:
          uint64_t v210 = v113;
          break;
        default:
          break;
      }
      uint64_t v25 = *(void *)(v326 + 568);
      uint64_t v115 = *(void *)(v326 + 448);
      uint64_t v116 = *(void *)(v326 + 432);
      sub_1B2A99EE0(v110);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1B29C4148(v116, &qword_1E9C37F30);

      uint64_t v117 = swift_release();
      uint64_t v125 = sub_1B2AE7154(v117, v118, v119, v120, v121, v122, v123, v124, v143, v150, v157, v164, v171, v178, v185, v192, v198, v204, v210,
               *((uint64_t *)&v64 + 1),
               v222,
               v227,
               v232,
               (uint64_t)v237,
               v64,
               v248,
               v253,
               (uint64_t)__dst,
               v264,
               v270,
               (uint64_t)v276,
               (uint64_t)v281,
               v287,
               v293,
               v300,
               v307,
               v313,
               (uint64_t)v319,
               v326,
               (uint64_t)v335,
               v338,
               *((uint64_t *)&v338 + 1),
               v339,
               *((uint64_t *)&v339 + 1),
               v340,
               *((uint64_t *)&v340 + 1),
               v341,
               v342,
               v343,
               *((uint64_t *)&v343 + 1),
               v344,
               *((uint64_t *)&v344 + 1),
               v345,
               *((uint64_t *)&v345 + 1),
               v346,
               v347,
               v348);
      sub_1B29A0868(v125, v126, v127, v128, v129, v130, v131, v132, v146, v153, v160, v167, v174, v181, v188, v195, v201, v207, v213,
        v219,
        v225,
        v230,
        v235,
        v240,
        v245,
        v251,
        v256,
        (uint64_t)__dstc,
        v267,
        v273,
        v279,
        v284,
        v290,
        v296,
        v303,
        v310,
        v316,
        v322,
        v329,
        (uint64_t)v336,
        v338,
        *((uint64_t *)&v338 + 1),
        v339,
        *((uint64_t *)&v339 + 1),
        v340,
        *((uint64_t *)&v340 + 1),
        v341,
        v342,
        v343);
      uint64_t v133 = sub_1B29C4148(v115, &qword_1EB7E2F60);
      sub_1B2AE70A4(v133, v134, v135, v136, v137, v138, v139, v140, v147, v154, v161, v168, v175, v182, v189, v196, v202, v208, v214,
        v220,
        v226,
        v231,
        v236,
        v241,
        v246,
        v252,
        v257,
        (uint64_t)__dstd,
        v268,
        v274,
        v280,
        v285,
        v291,
        v297,
        v304,
        v311,
        v317,
        v323,
        v330,
        (uint64_t)v337,
        v338);
      sub_1B29A1A24();
      goto LABEL_9;
    }
    sub_1B2DA2B74(*(void *)(v326 + 560));
    sub_1B2A93478(v59);
    sub_1B2A982E4((uint64_t)__dst);
    static BackgroundSystemTaskUtilities.reportFeatureCheckpoint(state:)(10);
    uint64_t v69 = *(void *)(v326 + 568);
    uint64_t v70 = *(void *)(v326 + 448);
    uint64_t v71 = *(void *)(v326 + 432);
    swift_willThrow();
    sub_1B29C4148(v71, &qword_1E9C37F30);

    uint64_t v72 = swift_release();
    uint64_t v80 = sub_1B2AE7154(v72, v73, v74, v75, v76, v77, v78, v79, v142, v149, v156, v163, v170, v177, v184, v191, v198, 0x6E6574614C776F6CLL, 0xEA00000000007963,
            v216,
            v22,
            v227,
            v232,
            (uint64_t)v237,
            v242,
            v247,
            v253,
            (uint64_t)__dst,
            (uint64_t)v263,
            (uint64_t)v269,
            v275,
            v9 + 32,
            v286,
            (uint64_t)v292,
            v299,
            v306,
            v312,
            (uint64_t)v319,
            v326,
            v242,
            v338,
            *((uint64_t *)&v338 + 1),
            v339,
            *((uint64_t *)&v339 + 1),
            v340,
            *((uint64_t *)&v340 + 1),
            v341,
            v342,
            v343,
            *((uint64_t *)&v343 + 1),
            v344,
            *((uint64_t *)&v344 + 1),
            v345,
            *((uint64_t *)&v345 + 1),
            v346,
            v347,
            v348);
    sub_1B29A0868(v80, v81, v82, v83, v84, v85, v86, v87, v144, v151, v158, v165, v172, v179, v186, v193, v199, v205, v211,
      v217,
      v223,
      v228,
      v233,
      v238,
      v243,
      v249,
      v254,
      (uint64_t)__dsta,
      v265,
      v271,
      v277,
      v282,
      v288,
      v294,
      v301,
      v308,
      v314,
      v320,
      v327,
      (uint64_t)v333,
      v338,
      *((uint64_t *)&v338 + 1),
      v339,
      *((uint64_t *)&v339 + 1),
      v340,
      *((uint64_t *)&v340 + 1),
      v341,
      v342,
      v343);
    uint64_t v88 = sub_1B29C4148(v70, &qword_1EB7E2F60);
    sub_1B2AE70A4(v88, v89, v90, v91, v92, v93, v94, v95, v145, v152, v159, v166, v173, v180, v187, v194, v200, v206, v212,
      v218,
      v224,
      v229,
      v234,
      v239,
      v244,
      v250,
      v255,
      (uint64_t)__dstb,
      v266,
      v272,
      v278,
      v283,
      v289,
      v295,
      v302,
      v309,
      v315,
      v321,
      v328,
      (uint64_t)v334,
      v338);
    sub_1B29A1A24();
    sub_1B2AE585C(Current, v22, v69);
    swift_release();
    uint64_t v96 = v58;
  }
  else
  {
    uint64_t v69 = *(void *)(v0 + 568);
    swift_bridgeObjectRelease();
    sub_1B2A1F13C();
    swift_allocError();
    *(_OWORD *)uint64_t v60 = xmmword_1B2ECFD90;
    *(unsigned char *)(v60 + 16) = 9;
    swift_willThrow();
    sub_1B2AE585C(Current, v22, v69);
    swift_release();
    uint64_t v96 = v0 + 160;
  }
  sub_1B2AB51F4(v96);
  sub_1B2A93478(v69);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v61();
}

uint64_t sub_1B2AE585C(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1B2E81F48();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v30 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B2E81F08();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B2E81F38();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2A9A044(0, a1);
  sub_1B2A9A23C(1);
  uint64_t v15 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3 + *(int *)(v15 + 24), v11);
  uint64_t v31 = *(const char **)a3;
  char v16 = *(unsigned char *)(a3 + 16);
  swift_retain();
  char v17 = sub_1B2E81F28();
  sub_1B2E81F58();
  int v27 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v26 = v8;
  if ((v16 & 1) == 0)
  {
    char v19 = v30;
    if (v31)
    {
      uint64_t v21 = v28;
      uint64_t v20 = v29;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v21 + 88))(v19, v20) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v22 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
        uint64_t v22 = "";
      }
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      os_signpost_id_t v24 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v17, (os_signpost_type_t)v27, v24, v31, v22, v23, 2u);
      MEMORY[0x1B3EB30C0](v23, -1, -1);
      uint64_t v8 = v26;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  char v19 = v30;
  if ((unint64_t)v31 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v31 >> 11 != 27)
  {
    uint64_t v21 = v28;
    uint64_t v20 = v29;
    if (v31 >> 16 <= 0x10)
    {
      uint64_t v31 = &v32;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_1B2AE5C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, void *a10, uint64_t *a11)
{
  uint64_t v70 = a8;
  uint64_t v71 = a7;
  uint64_t v72 = a3;
  uint64_t v17 = sub_1B29A3EB4(&qword_1E9C37F30);
  MEMORY[0x1F4188790](v17 - 8);
  char v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1B29A3EB4(&qword_1EB7E2F60);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(a2 + 288);
  ViewService.peopleSubgraphView.getter(v21, v25, v26, v27, v28, v29, v30, v31, v66, v67, (uint64_t)v68, (uint64_t)v69, v70, (uint64_t)v71, v72, v73, v74, *((uint64_t *)&v74 + 1), v75,
    *((uint64_t *)&v75 + 1),
    v76,
    *((uint64_t *)&v76 + 1));
  if (!v11)
  {
    uint64_t v67 = a5;
    uint64_t v69 = v23;
    id v68 = v19;
    uint64_t v73 = v24;
    uint64_t v32 = v77;
    uint64_t v33 = *(void *)a1;
    long long v34 = v75;
    *(_OWORD *)a1 = v74;
    *(_OWORD *)(a1 + 16) = v34;
    *(_OWORD *)(a1 + 32) = v76;
    *(void *)(a1 + 48) = v32;
    sub_1B2AD0BFC(v33);
    uint64_t v35 = v72;
    sub_1B2AE6FBC(v72 + 16, (uint64_t)v80, &qword_1E9C38A28);
    uint64_t v36 = sub_1B2AE6FBC((uint64_t)v80, (uint64_t)&v83, &qword_1E9C38A28);
    uint64_t v44 = v83;
    if (!v83) {
      goto LABEL_5;
    }
    if (*(void *)(v83 + 16) != 1) {
      goto LABEL_5;
    }
    sub_1B2AB5138(v35);
    static EntityClass.person.getter();
    v81[0] = v74;
    v81[1] = v75;
    char v82 = v76;
    char v45 = sub_1B2A1BC58((uint64_t)v81, v44);
    sub_1B29C5E2C((uint64_t)v81);
    uint64_t v36 = sub_1B2AB51F4(v35);
    if ((v45 & 1) == 0)
    {
LABEL_5:
      ViewService.entitySubgraphView.getter(v36, v37, v38, v39, v40, v41, v42, v43, v66, v67, (uint64_t)v68, (uint64_t)v69, v70, (uint64_t)v71, v72, v73, v74, *((uint64_t *)&v74 + 1), v75,
        *((uint64_t *)&v75 + 1),
        v76,
        *((uint64_t *)&v76 + 1));
      uint64_t v46 = v77;
      uint64_t v47 = *(void *)a4;
      long long v48 = v75;
      *(_OWORD *)a4 = v74;
      *(_OWORD *)(a4 + 16) = v48;
      *(_OWORD *)(a4 + 32) = v76;
      *(void *)(a4 + 48) = v46;
      sub_1B2AD0BFC(v47);
    }
    *(_OWORD *)uint64_t v79 = *(_OWORD *)(v67 + 120);
    *(_DWORD *)&v79[15] = *(_DWORD *)(v67 + 135);
    uint64_t v49 = *(void *)(*(void *)v79 + 16);
    if (v49)
    {
      os_signpost_id_t v50 = (unsigned __int8 *)(*(void *)v79 + 32);
      uint64_t v51 = sub_1B2AE7004((uint64_t)v79);
      uint64_t v52 = (uint64_t)v69;
      do
      {
        unsigned int v54 = *v50++;
        unsigned int v53 = v54;
        unsigned int v55 = v54 >> 6;
        if (v54 >> 6)
        {
          if (v55 == 1)
          {
            *((void *)&v75 + 1) = &type metadata for Features.FeatureFlag;
            *(void *)&long long v76 = sub_1B299BFE0();
            LOBYTE(v74) = 25;
            char v56 = sub_1B2E80848();
            uint64_t v51 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v74);
            if (v56)
            {
              uint64_t v57 = (uint64_t)v68;
              ViewService.lemmatizedSubgraphView.getter(v51);
              uint64_t v58 = type metadata accessor for LemmatizedSubgraphView();
              _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v57, 0, 1, v58);
              uint64_t v51 = sub_1B2AE705C(v57, v70, &qword_1E9C37F30);
              uint64_t v52 = (uint64_t)v69;
            }
          }
          else if (v53 != 128)
          {
            if (v53 == 129) {
              uint64_t v59 = sub_1B2AD10E0();
            }
            else {
              uint64_t v59 = sub_1B2AD10A0();
            }
            uint64_t v60 = (void *)*v71;
            *uint64_t v71 = v59;
          }
        }
        else
        {
          ViewService.entityAliasView.getter(v51);
          uint64_t v51 = sub_1B2AE705C(v52, a6, &qword_1EB7E2F60);
        }
        --v49;
      }
      while (v49);
      sub_1B2AE7030((uint64_t)v79);
    }
    uint64_t v61 = v72;
    if (v79[17])
    {
      sub_1B2A4E930();
      sub_1B2AE705C((uint64_t)v78, a9, &qword_1EB7D9668);
    }
    if (v79[18])
    {
      type metadata accessor for ViewService();
      uint64_t v62 = (void *)static ViewService.clientService.getter();
      type metadata accessor for EntityResolutionRankingService();
      swift_allocObject();
      *a10 = EntityResolutionRankingService.init(config:viewService:)((uint64_t)&v74, v62);
      swift_release();
    }
    if (*(unsigned char *)(v61 + 120))
    {
      ViewService.inferenceFeatureView.getter(&v74);
      uint64_t v63 = v75;
      uint64_t v64 = *a11;
      uint64_t v65 = a11[1];
      *(_OWORD *)a11 = v74;
      a11[2] = v63;
      sub_1B2A8FC80(v64, v65);
    }
  }
}

uint64_t sub_1B2AE60F0(unint64_t a1, unint64_t a2)
{
  unint64_t v54 = a2;
  unint64_t v53 = a1;
  uint64_t v52 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v3 = v2;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v51 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v48 - v7;
  uint64_t v9 = sub_1B2E81FB8();
  sub_1B299D278();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1B299E4A0();
  uint64_t v15 = v14 - v13;
  uint64_t v50 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  sub_1B299E4A0();
  uint64_t v21 = v20 - v19;
  uint64_t v49 = type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v22);
  sub_1B299E4A0();
  uint64_t v25 = v24 - v23;
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1B29A4B98(v9, (uint64_t)qword_1EB7E6600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v15, v26, v9);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v27 = sub_1B2E81F28();
  os_signpost_type_t v28 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    os_signpost_id_t v30 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v27, v28, v30, "ECR.XPCService.mengen", "", v29, 2u);
    MEMORY[0x1B3EB30C0](v29, -1, -1);
  }

  uint64_t v31 = v52;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v51, v8, v52);
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v32 = sub_1B2E81F68();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v31);
  *(void *)uint64_t v25 = "ECR.XPCService.mengen";
  *(void *)(v25 + 8) = 21;
  *(unsigned char *)(v25 + 16) = 2;
  *(void *)(v25 + 24) = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v25 + *(int *)(v49 + 24), v21, v50);
  uint64_t v33 = v55;
  uint64_t v34 = sub_1B2D5146C(v53, v54);
  if (v33)
  {
    sub_1B2AE6528(v25);
    sub_1B2A93478(v25);
  }
  else
  {
    uint64_t v35 = v34;
    uint64_t v36 = MEMORY[0x1E4FBC860];
    if (v34)
    {
      uint64_t v37 = *(void *)(v34 + 16);
      if (v37)
      {
        uint64_t v62 = MEMORY[0x1E4FBC860];
        sub_1B2E832F8();
        uint64_t v38 = v35 + 64;
        do
        {
          uint64_t v39 = *(void *)(v38 + 32);
          char v40 = *(unsigned char *)(v38 + 40);
          long long v41 = *(_OWORD *)(v38 - 16);
          long long v56 = *(_OWORD *)(v38 - 32);
          long long v57 = v41;
          long long v42 = *(_OWORD *)v38;
          long long v43 = *(_OWORD *)(v38 + 16);
          v38 += 80;
          long long v58 = v42;
          long long v59 = v43;
          uint64_t v60 = v39;
          char v61 = v40;
          sub_1B2A9D340();
          sub_1B2E832C8();
          sub_1B2E83308();
          sub_1B2E83318();
          sub_1B2E832D8();
          --v37;
        }
        while (v37);
        uint64_t v36 = v62;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v44 = sub_1B29C3CA0(0, &qword_1E9C3D2E0);
    uint64_t v45 = v36;
    uint64_t v32 = v44;
    sub_1B2AE3FCC(v45, &qword_1E9C3D4D8, (uint64_t)off_1E6012898, (SEL *)&selRef_initWithMentions_);
    uint64_t v46 = sub_1B2AE7134();
    sub_1B2AE6528(v46);
    sub_1B2A93478(v25);
  }
  return v32;
}

uint64_t sub_1B2AE6528(uint64_t a1)
{
  uint64_t v2 = sub_1B2E81F48();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v27 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B2E81F08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B2E81F38();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + *(int *)(v12 + 24), v8);
  os_signpost_type_t v28 = *(const char **)a1;
  char v13 = *(unsigned char *)(a1 + 16);
  swift_retain();
  uint64_t v14 = sub_1B2E81F28();
  sub_1B2E81F58();
  int v24 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v23 = v5;
  if ((v13 & 1) == 0)
  {
    uint64_t v16 = v27;
    if (v28)
    {
      uint64_t v18 = v25;
      uint64_t v17 = v26;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v16, v17) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v19 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
        uint64_t v19 = "";
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      os_signpost_id_t v21 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v14, (os_signpost_type_t)v24, v21, v28, v19, v20, 2u);
      MEMORY[0x1B3EB30C0](v20, -1, -1);
      uint64_t v5 = v23;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v16 = v27;
  if ((unint64_t)v28 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v28 >> 11 != 27)
  {
    uint64_t v18 = v25;
    uint64_t v17 = v26;
    if (v28 >> 16 <= 0x10)
    {
      os_signpost_type_t v28 = &v29;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t EntityResolutionXPCService.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  memcpy(v2, (const void *)(v0 + 128), 0x8DuLL);
  sub_1B2A982E4((uint64_t)v2);
  swift_release();
  swift_release();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t EntityResolutionXPCService.__deallocating_deinit()
{
  EntityResolutionXPCService.deinit();

  return MEMORY[0x1F4188210](v0);
}

uint64_t EntityResolutionXPCService.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1B2AE694C()
{
  return EntityResolutionXPCService.unownedExecutor.getter();
}

uint64_t sub_1B2AE6968(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1B299ACAC;
  return sub_1B2AE4320(a1);
}

uint64_t sub_1B2AE6A00()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B2A86B60;
  return sub_1B2AE456C();
}

uint64_t sub_1B2AE6A98(unint64_t a1, unint64_t a2)
{
  return sub_1B2AE60F0(a1, a2);
}

uint64_t type metadata accessor for EntityResolutionXPCService()
{
  return self;
}

uint64_t *sub_1B2AE6AD4(uint64_t *a1)
{
  return a1;
}

uint64_t dispatch thunk of EntityResolutionXPCServiceProtocol.warmup(for:)()
{
  sub_1B2AE7140();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2ADA778;
  uint64_t v3 = sub_1B2AE7108();
  return v4(v3);
}

uint64_t dispatch thunk of EntityResolutionXPCServiceProtocol.submit(clientRequest:)()
{
  sub_1B2AE7140();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2ADA77C;
  uint64_t v3 = sub_1B2AE7108();
  return v4(v3);
}

uint64_t dispatch thunk of EntityResolutionXPCServiceProtocol.generateMentions(clientQuery:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t method lookup function for EntityResolutionXPCService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EntityResolutionXPCService);
}

uint64_t dispatch thunk of EntityResolutionXPCService.__allocating_init(viewService:config:enableSessionLogging:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of EntityResolutionXPCService.warmup(for:)(uint64_t a1)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 176) + **(int **)(*(void *)v1 + 176));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_1B299B4A8(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1B299ACAC;
  return v7(a1);
}

uint64_t dispatch thunk of EntityResolutionXPCService.submit(clientRequest:)(uint64_t a1)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 184) + **(int **)(*(void *)v1 + 184));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_1B299B4A8(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1B2AD9CC8;
  return v7(a1);
}

uint64_t dispatch thunk of EntityResolutionXPCService.generateMentions(clientQuery:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t sub_1B2AE6F74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B2AE70DC(a1, a2, a3);
  sub_1B2999864();
  uint64_t v4 = sub_1B2AE70F8();
  v5(v4);
  return v3;
}

uint64_t sub_1B2AE6FBC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B2AE70DC(a1, a2, a3);
  sub_1B2999864();
  uint64_t v4 = sub_1B2AE70F8();
  v5(v4);
  return v3;
}

uint64_t sub_1B2AE7004(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2AE7030(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2AE705C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B2AE70DC(a1, a2, a3);
  sub_1B2999864();
  uint64_t v4 = sub_1B2AE70F8();
  v5(v4);
  return v3;
}

uint64_t sub_1B2AE70A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  return sub_1B2AD0BFC(a41);
}

uint64_t sub_1B2AE70C4()
{
  return 0x6465636E616C6162;
}

uint64_t sub_1B2AE70DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B29A3EB4(a3);
}

uint64_t sub_1B2AE70F8()
{
  return v0;
}

uint64_t sub_1B2AE7108()
{
  return v0;
}

uint64_t sub_1B2AE7120(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
}

uint64_t sub_1B2AE7134()
{
  return v0;
}

uint64_t sub_1B2AE7154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  return sub_1B2A8FC80(a56, a57);
}

uint64_t sub_1B2AE716C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B2AE71FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1B2AE72B4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1B2AE72E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1B2AE7330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1B2AE7380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1B2AE73D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1B2AE7420(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1B2AE756C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1B2AE7770);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for EntitySequence()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B2AE77B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2AE77CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  sub_1B299D31C();
  uint64_t v36 = v3;
  MEMORY[0x1F4188790](v4);
  uint64_t v35 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  MEMORY[0x1F4188790](v7);
  BOOL v10 = (uint64_t *)((char *)&v30 - v9);
  sub_1B299D31C();
  uint64_t v34 = v11;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  unsigned int v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v33 = (uint64_t *)((char *)&v30 - v16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1B2E82FA8();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, TupleTypeMetadata2) == 1)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v31 + 8))(v10, v32);
    uint64_t v18 = v37;
    v37[4] = 0;
    long long v19 = 0uLL;
    *(_OWORD *)uint64_t v18 = 0u;
    *((_OWORD *)v18 + 1) = 0u;
    __int16 v20 = -512;
  }
  else
  {
    uint64_t v21 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v22 = v33;
    uint64_t v23 = (char *)v33 + v21;
    int v24 = (char *)v10 + v21;
    uint64_t v32 = *v10;
    *uint64_t v33 = v32;
    uint64_t v25 = v36;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    v26(v23, v24, v2);
    uint64_t v27 = &v15[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v23, v2);
    os_signpost_type_t v28 = v35;
    v26(v35, v27, v2);
    swift_getAssociatedTypeWitness();
    sub_1B2B89730((uint64_t)v38);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v2);
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v34 + 8))(v22, TupleTypeMetadata2);
    long long v29 = v38[1];
    long long v19 = v38[2];
    __int16 v20 = v39;
    uint64_t v18 = v37;
    *uint64_t v37 = v32;
    *(_OWORD *)(v18 + 1) = v38[0];
    *(_OWORD *)(v18 + 3) = v29;
  }
  *(_OWORD *)(v18 + 5) = v19;
  *((_WORD *)v18 + 28) = v20;
  return result;
}

uint64_t sub_1B2AE7B10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for EntitySequence.Iterator() + 60);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v4, a2, AssociatedTypeWitness);
}

uint64_t sub_1B2AE7BC8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  sub_1B299D31C();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness - 8);
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v2, v4);
  sub_1B2E82668();
  return sub_1B2AE7B10(MEMORY[0x1E4FBC870], (uint64_t)v12, a2);
}

uint64_t sub_1B2AE7D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_1B2AE7D3C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1B2AE7BC8(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v4(v2, a1);
}

uint64_t type metadata accessor for EntitySequence.Iterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B2AE7DC0()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B2AE7E74(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ~v6;
    uint64_t v13 = (char *)a1 + v6;
    uint64_t v14 = (char *)a2 + v6;
    uint64_t v15 = (unint64_t)(v13 + 8) & v12;
    uint64_t v16 = (unint64_t)(v14 + 8) & v12;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v17(v15, v16, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_1B2AE7F9C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = AssociatedTypeWitness;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);

  return v4(v6, v5);
}

void *sub_1B2AE8034(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  swift_bridgeObjectRetain();
  v6(v8, v9, AssociatedTypeWitness);
  return a1;
}

void *sub_1B2AE80F4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_1B2AE81A4(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_1B2AE8238(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1B2AE82E0(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  if (!a2) {
    return 0;
  }
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v8 + 8) & ~v8) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((a2 - v7 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0)
      {
        return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(((unint64_t)a1 + v8 + 8) & ~v8, v6, AssociatedTypeWitness);
      }
      else
      {
        uint64_t v15 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v15) = -1;
        }
        return (v15 + 1);
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1B2AE84C4(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 8) & ~v10) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  char v12 = 8 * v11;
  if (a3 <= v9)
  {
    int v13 = 0;
  }
  else if (v11 <= 3)
  {
    unsigned int v16 = ((a3 - v9 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v16))
    {
      int v13 = 4;
    }
    else if (v16 >= 0x100)
    {
      int v13 = 2;
    }
    else
    {
      int v13 = v16 > 1;
    }
  }
  else
  {
    int v13 = 1;
  }
  if (v9 < a2)
  {
    unsigned int v14 = ~v9 + a2;
    if (v11 < 4)
    {
      int v15 = (v14 >> v12) + 1;
      if (v11)
      {
        int v17 = v14 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v11] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v11] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1B2AE8734);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v8 & 0x80000000) != 0)
        {
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((unint64_t)&a1[v10 + 8] & ~v10, a2, v8, AssociatedTypeWitness);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = (a2 - 1);
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

id EntitySimilarityClient.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id EntitySimilarityClient.init()()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for EntitySimilarityClient());
  id v1 = EntitySimilarityClient.init(throwing:)();
  swift_getObjectType();
  sub_1B2AEC47C();
  swift_deallocPartialClassInstance();
  return v1;
}

id EntitySimilarityClient.__allocating_init(throwing:)()
{
  id v1 = objc_allocWithZone(v0);
  return EntitySimilarityClient.init(throwing:)();
}

uint64_t type metadata accessor for EntitySimilarityClient()
{
  return self;
}

id EntitySimilarityClient.init(throwing:)()
{
  type metadata accessor for ViewService();
  id v2 = v0;
  uint64_t v3 = (void *)static ViewService.clientService.getter();
  uint64_t v4 = type metadata accessor for EntitySimilarityInProcessService();
  swift_allocObject();
  uint64_t v5 = sub_1B2AF1A84(v3);
  if (v1)
  {

    type metadata accessor for EntitySimilarityClient();
    sub_1B2AEC47C();
    return (id)swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v4;
    uint64_t v10 = &off_1F0ABED48;
    *(void *)&long long v8 = v5;
    sub_1B29D1D20(&v8, (uint64_t)v2 + OBJC_IVAR____TtC20IntelligencePlatform22EntitySimilarityClient_service);

    v7.receiver = v2;
    v7.super_class = (Class)type metadata accessor for EntitySimilarityClient();
    return objc_msgSendSuper2(&v7, sel_init);
  }
}

uint64_t sub_1B2AE89A4()
{
  sub_1B299B3BC();
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B2AEC3A4(v3);
  *(void *)(v0 + 32) = v4;
  sub_1B299D2A8(v4);
  *(void *)(v0 + 40) = v5;
  uint64_t v6 = sub_1B299E508();
  uint64_t v7 = sub_1B2AEC38C(v6);
  uint64_t v8 = sub_1B2AEC374(v7);
  *(void *)(v0 + 64) = v8;
  sub_1B299D2A8(v8);
  *(void *)(v0 + 72) = v9;
  uint64_t v10 = sub_1B29A4C44();
  uint64_t v11 = sub_1B2AEC35C(v10);
  *(void *)(v0 + 88) = v11;
  sub_1B299D2A8(v11);
  *(void *)(v0 + 96) = v12;
  uint64_t v13 = sub_1B29A4C44();
  uint64_t v14 = sub_1B2AEC41C(v13);
  sub_1B2AEC2CC(v14);
  *(void *)(v0 + 120) = sub_1B29A4C44();
  *(unsigned char *)(v0 + 176) = *(unsigned char *)v2;
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v2 + 8);
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v15, v16, v17);
}

uint64_t sub_1B2AE8AA8()
{
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  sub_1B2AEC2BC();
  uint64_t v2 = sub_1B2ADA7C4(v1, (uint64_t)qword_1EB7E6600);
  v3(v2);
  sub_1B2ADAD2C();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v4 = sub_1B2E81F28();
  sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v5 = (uint8_t *)sub_1B299B99C();
    *(_WORD *)uint64_t v5 = 0;
    sub_1B2E81EE8();
    sub_1B2ADABC8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v4, v6, v7, "EntitySimilarity.Client.computeSimilarity", "", v5, 2u);
    MEMORY[0x1B3EB30C0](v5, -1, -1);
  }
  uint64_t v25 = *(void *)(v0 + 136);
  uint64_t v26 = *(unsigned __int8 *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v23 = *(void *)(v0 + 104);
  uint64_t v24 = *(void *)(v0 + 128);
  uint64_t v11 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v12 = *(void *)(v0 + 48);
  uint64_t v13 = *(void *)(v0 + 56);
  uint64_t v15 = *(void *)(v0 + 32);
  uint64_t v14 = *(void *)(v0 + 40);
  uint64_t v22 = *(void *)(v0 + 24);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v13, v15);
  sub_1B2E81F78();
  sub_1B29A4198();
  uint64_t v16 = sub_1B29A4400();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  *(void *)uint64_t v8 = "EntitySimilarity.Client.computeSimilarity";
  *(void *)(v8 + 8) = 41;
  *(unsigned char *)(v8 + 16) = 2;
  *(void *)(v8 + 24) = v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8 + *(int *)(v9 + 24), v23, v11);
  sub_1B29AEC7C((void *)(v22 + OBJC_IVAR____TtC20IntelligencePlatform22EntitySimilarityClient_service), *(void *)(v22 + OBJC_IVAR____TtC20IntelligencePlatform22EntitySimilarityClient_service + 24));
  id v17 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v24);
  id v18 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v25);
  sub_1B2AEB9E4();
  *(void *)(v0 + 144) = sub_1B2AEB980(v17, v18, v26);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1B2AE8D40;
  sub_1B2A88440();
  return sub_1B2AF1B38();
}

uint64_t sub_1B2AE8D40()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *os_signpost_type_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1B299F388();
  *uint64_t v8 = v7;
  v5[20] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v9 = (void *)v5[18];
    v5[21] = v3;
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

uint64_t sub_1B2AE8E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B2AEC3BC();
  sub_1B2AEC410();
  uint64_t v11 = (void *)v10[21];
  uint64_t v12 = v10[15];
  sub_1B2AF3848(v10[2]);

  sub_1B2AEB288(v12);
  sub_1B2AEC3EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  sub_1B2AEC3D4();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_1B2AE8EEC()
{
  sub_1B299B9B8();
  uint64_t v1 = *(void *)(v0 + 120);

  sub_1B2AEB288(v1);
  sub_1B2A93478(*(void *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v2();
}

uint64_t sub_1B2AE8FA4()
{
  sub_1B299B3BC();
  uint64_t v2 = sub_1B2AEC3A4(v1);
  v0[4] = v2;
  sub_1B299D2A8(v2);
  v0[5] = v3;
  uint64_t v4 = sub_1B299E508();
  uint64_t v5 = sub_1B2AEC38C(v4);
  uint64_t v6 = sub_1B2AEC374(v5);
  v0[8] = v6;
  sub_1B299D2A8(v6);
  v0[9] = v7;
  uint64_t v8 = sub_1B29A4C44();
  uint64_t v9 = sub_1B2AEC35C(v8);
  v0[11] = v9;
  sub_1B299D2A8(v9);
  v0[12] = v10;
  uint64_t v11 = sub_1B29A4C44();
  uint64_t v12 = sub_1B2AEC41C(v11);
  sub_1B2AEC2CC(v12);
  v0[15] = sub_1B29A4C44();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v13, v14, v15);
}

uint64_t sub_1B2AE9094()
{
  sub_1B2ADA91C();
  sub_1B2ADAB94();
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  sub_1B2AEC2BC();
  uint64_t v2 = sub_1B2ADA7C4(v1, (uint64_t)qword_1EB7E6600);
  v3(v2);
  sub_1B2ADAD2C();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v4 = (void *)sub_1B2E81F28();
  sub_1B2E82E68();
  if (sub_1B2ADAD14())
  {
    uint64_t v5 = (_WORD *)sub_1B299B99C();
    sub_1B2ADACA8(v5);
    sub_1B2ADABC8();
    sub_1B2ADAA14(&dword_1B2996000, v6, v7, v8, "EntitySimilarity.Client.batchComputeSimilarity", "");
    sub_1B2AEC2A0();
  }
  uint64_t v9 = v0[14];
  uint64_t v10 = v0[15];
  uint64_t v11 = v0[12];
  uint64_t v26 = v0[11];
  uint64_t v27 = v0[13];
  uint64_t v12 = v0[7];
  uint64_t v14 = v0[4];
  uint64_t v13 = v0[5];
  uint64_t v15 = v0[2];

  uint64_t v16 = sub_1B2AEC1FC();
  v17(v16);
  sub_1B2E81F78();
  sub_1B29A4198();
  uint64_t v18 = sub_1B29A4400();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  *(void *)uint64_t v10 = "EntitySimilarity.Client.batchComputeSimilarity";
  *(void *)(v10 + 8) = 46;
  *(unsigned char *)(v10 + 16) = 2;
  *(void *)(v10 + 24) = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v10 + *(int *)(v9 + 24), v27, v26);
  uint64_t v19 = *(void *)(v15 + 16);
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (v19)
  {
    uint64_t v21 = v0[2];
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1B2E832F8();
    sub_1B2AEB9E4();
    uint64_t v22 = (void *)(v21 + 48);
    do
    {
      sub_1B2AEB980(objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *(v22 - 1)), objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *v22), *((unsigned __int8 *)v22 - 16));
      sub_1B2E832C8();
      sub_1B2E83308();
      sub_1B2E83318();
      sub_1B2E832D8();
      v22 += 3;
      --v19;
    }
    while (v19);
    uint64_t v20 = v28;
  }
  v0[16] = v20;
  sub_1B29AEC7C((void *)(v0[3] + OBJC_IVAR____TtC20IntelligencePlatform22EntitySimilarityClient_service), *(void *)(v0[3] + OBJC_IVAR____TtC20IntelligencePlatform22EntitySimilarityClient_service + 24));
  uint64_t v23 = (void *)swift_task_alloc();
  v0[17] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1B2AE9338;
  sub_1B2ADA938();
  return sub_1B2AF2250();
}

uint64_t sub_1B2AE9338()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 144) = v5;
  *(void *)(v3 + 152) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

void sub_1B2AE9424()
{
  uint64_t v30 = v0;
  unint64_t v1 = v0[18];
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  sub_1B2AEC45C();
  uint64_t v2 = sub_1B2E83448();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_18;
  }
LABEL_3:
  sub_1B299B4D4();
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v3 = v1 & 0xC000000000000001;
    uint64_t v4 = v0[19];
    uint64_t v26 = (id *)(v0[18] + 32);
    do
    {
      if (v3) {
        id v5 = (id)MEMORY[0x1B3EB1A20](0, v0[18]);
      }
      else {
        id v5 = *v26;
      }
      uint64_t v6 = v5;
      sub_1B2AF3848((uint64_t)v28);
      if (v4)
      {

        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v18 = v0[15];
        sub_1B2AEC2FC();
        sub_1B2A93478(v18);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_1B2AEC260();
        __asm { BRAA            X1, X16 }
      }

      __n128 v15 = sub_1B2AEC2DC(v7, v8, v9, v10, v11, v12, v13, v14, v24.n128_i64[0], v24.n128_i64[1], v25, (uint64_t)v26, v27, v28[0], v28[1], v29);
      if (v16)
      {
        sub_1B2AEC334();
        __n128 v15 = v24;
      }
      sub_1B2999A94(v15);
    }
    while (!v17);
    swift_bridgeObjectRelease();
LABEL_19:
    uint64_t v21 = v0[15];
    sub_1B2AEC2FC();
    sub_1B2A93478(v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B2AEC434();
    sub_1B2AEC260();
    __asm { BRAA            X2, X16 }
  }
  __break(1u);
}

uint64_t sub_1B2AE962C()
{
  sub_1B299B9B8();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1B2AEC318();
  sub_1B2AEB288(v1);
  sub_1B2A93478(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v2();
}

uint64_t sub_1B2AE96CC()
{
  sub_1B299B3BC();
  v1[6] = v2;
  v1[7] = v0;
  v1[4] = v3;
  v1[5] = v4;
  v1[2] = v5;
  v1[3] = v6;
  uint64_t v7 = sub_1B2E81F08();
  v1[8] = v7;
  sub_1B299D2A8(v7);
  v1[9] = v8;
  v1[10] = sub_1B299E508();
  v1[11] = swift_task_alloc();
  uint64_t v9 = sub_1B2E81FB8();
  v1[12] = v9;
  sub_1B299D2A8(v9);
  v1[13] = v10;
  v1[14] = sub_1B29A4C44();
  uint64_t v11 = sub_1B2E81F38();
  v1[15] = v11;
  sub_1B299D2A8(v11);
  v1[16] = v12;
  v1[17] = sub_1B29A4C44();
  v1[18] = type metadata accessor for LogSignpost();
  v1[19] = sub_1B29A4C44();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v13, v14, v15);
}

#error "1B2AE9904: call analysis failed (funcsize=98)"

uint64_t sub_1B2AE99A0()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1B299F388();
  *uint64_t v8 = v7;
  *(void *)(v5 + 168) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 176) = v3;
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B2AE9A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B2AEC3BC();
  sub_1B2AEC410();
  uint64_t v11 = (void *)v10[22];
  uint64_t v12 = v10[19];
  sub_1B2AF3848(v10[2]);

  sub_1B2AEB288(v12);
  sub_1B2A93478(v10[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  sub_1B2AEC3D4();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_1B2AE9B58()
{
  sub_1B299B9B8();
  sub_1B2AEB288(*(void *)(v0 + 152));
  sub_1B2A93478(*(void *)(v0 + 152));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2AE9C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1B2AE9C2C, 0, 0);
}

uint64_t sub_1B2AE9C2C()
{
  sub_1B2AEC410();
  uint64_t v14 = v0;
  uint64_t v1 = v0[2];
  unint64_t v2 = v0[3];
  swift_bridgeObjectRetain();
  EntityIdentifier.init(_:)(v1, v2, (uint64_t)&v12);
  if ((v13 & 1) != 0
    || (uint64_t v3 = v12,
        uint64_t v5 = v0[4],
        unint64_t v4 = v0[5],
        swift_bridgeObjectRetain(),
        EntityIdentifier.init(_:)(v5, v4, (uint64_t)&v12),
        (v13 & 1) != 0))
  {
    sub_1B2AEC19C();
    swift_allocError();
    *uint64_t v6 = 0;
    v6[1] = 0;
    swift_willThrow();
    sub_1B299AD7C();
    return v7();
  }
  else
  {
    uint64_t v9 = v12;
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9C3D628 + dword_1E9C3D628);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[7] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1B2AE9D94;
    return v11(v3, v9);
  }
}

uint64_t sub_1B2AE9D94()
{
  sub_1B299B3BC();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v4 = *v1;
  sub_1B299F388();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_1B2AE9E68()
{
  sub_1B299F394();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = sub_1B2AEC3A4(v5);
  v0[4] = v6;
  sub_1B299D2A8(v6);
  v0[5] = v7;
  uint64_t v8 = sub_1B299E508();
  uint64_t v9 = sub_1B2AEC38C(v8);
  uint64_t v10 = sub_1B2AEC374(v9);
  v0[8] = v10;
  sub_1B299D2A8(v10);
  v0[9] = v11;
  uint64_t v12 = sub_1B29A4C44();
  uint64_t v13 = sub_1B2AEC35C(v12);
  v0[11] = v13;
  sub_1B299D2A8(v13);
  v0[12] = v14;
  uint64_t v15 = sub_1B29A4C44();
  uint64_t v16 = sub_1B2AEC41C(v15);
  sub_1B2AEC2CC(v16);
  uint64_t v17 = sub_1B29A4C44();
  uint64_t v18 = *v4;
  v0[15] = v17;
  v0[16] = v18;
  v0[17] = *v2;
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v19, v20, v21);
}

#error "1B2AEA054: call analysis failed (funcsize=85)"

uint64_t sub_1B2AEA0EC()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1B299F388();
  *uint64_t v8 = v7;
  *(void *)(v5 + 152) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 160) = v3;
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B2AEA1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B2AEC3BC();
  sub_1B2AEC410();
  uint64_t v11 = (void *)v10[20];
  uint64_t v12 = v10[15];
  sub_1B2AF3848(v10[2]);

  sub_1B2AEB288(v12);
  sub_1B2AEC3EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  sub_1B2AEC3D4();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_1B2AEA290()
{
  sub_1B299B9B8();
  sub_1B2AEB288(*(void *)(v0 + 120));
  uint64_t v1 = sub_1B2AEC318();
  sub_1B2A93478(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v2();
}

uint64_t sub_1B2AEA328(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1B2AEA34C, 0, 0);
}

uint64_t sub_1B2AEA34C()
{
  sub_1B299B9B8();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  sub_1B2AEB9E4();
  v0[5] = sub_1B2AEB980(objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v1), objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v2), 0);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1B2AEA44C;
  return sub_1B2AF1B38();
}

uint64_t sub_1B2AEA44C()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1B299F388();
  *uint64_t v8 = v7;
  *(void *)(v5 + 56) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 64) = v3;
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B2AEA540()
{
  sub_1B299B3BC();

  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 64);
  return v1(v2);
}

uint64_t sub_1B2AEA5A4()
{
  sub_1B299B3BC();

  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2AEA600()
{
  sub_1B299B3BC();
  uint64_t v2 = sub_1B2AEC3A4(v1);
  v0[4] = v2;
  sub_1B299D2A8(v2);
  v0[5] = v3;
  uint64_t v4 = sub_1B299E508();
  uint64_t v5 = sub_1B2AEC38C(v4);
  uint64_t v6 = sub_1B2AEC374(v5);
  v0[8] = v6;
  sub_1B299D2A8(v6);
  v0[9] = v7;
  uint64_t v8 = sub_1B29A4C44();
  uint64_t v9 = sub_1B2AEC35C(v8);
  v0[11] = v9;
  sub_1B299D2A8(v9);
  v0[12] = v10;
  uint64_t v11 = sub_1B29A4C44();
  uint64_t v12 = sub_1B2AEC41C(v11);
  sub_1B2AEC2CC(v12);
  v0[15] = sub_1B29A4C44();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v13, v14, v15);
}

#error "1B2AEA7D0: call analysis failed (funcsize=82)"

uint64_t sub_1B2AEA85C()
{
  sub_1B299B3BC();
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 136) = v4;
  *(void *)(v2 + 144) = v0;
  swift_task_dealloc();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

void sub_1B2AEA940()
{
  uint64_t v30 = v0;
  unint64_t v1 = v0[17];
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  sub_1B2AEC45C();
  uint64_t v2 = sub_1B2E83448();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_18;
  }
LABEL_3:
  sub_1B299B4D4();
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v3 = v1 & 0xC000000000000001;
    uint64_t v4 = v0[18];
    uint64_t v26 = (id *)(v0[17] + 32);
    do
    {
      if (v3) {
        id v5 = (id)MEMORY[0x1B3EB1A20](0, v0[17]);
      }
      else {
        id v5 = *v26;
      }
      uint64_t v6 = v5;
      sub_1B2AF3848((uint64_t)v28);
      if (v4)
      {

        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v18 = v0[15];
        sub_1B2AEC2FC();
        sub_1B2A93478(v18);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_1B2AEC260();
        __asm { BRAA            X1, X16 }
      }

      __n128 v15 = sub_1B2AEC2DC(v7, v8, v9, v10, v11, v12, v13, v14, v24.n128_i64[0], v24.n128_i64[1], v25, (uint64_t)v26, v27, v28[0], v28[1], v29);
      if (v16)
      {
        sub_1B2AEC334();
        __n128 v15 = v24;
      }
      sub_1B2999A94(v15);
    }
    while (!v17);
    swift_bridgeObjectRelease();
LABEL_19:
    uint64_t v21 = v0[15];
    sub_1B2AEC2FC();
    sub_1B2A93478(v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B2AEC434();
    sub_1B2AEC260();
    __asm { BRAA            X2, X16 }
  }
  __break(1u);
}

uint64_t sub_1B2AEAB48()
{
  sub_1B299B9B8();
  uint64_t v1 = *(void *)(v0 + 120);
  sub_1B2AEB288(v1);
  sub_1B2A93478(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v2();
}

uint64_t sub_1B2AEABF4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1B2AEAC14, 0, 0);
}

uint64_t sub_1B2AEAC14()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    sub_1B2E832F8();
    sub_1B2AEB9E4();
    uint64_t v4 = (void *)(v1 + 40);
    do
    {
      sub_1B2AEB980(objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *(v4 - 1)), objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *v4), 0);
      sub_1B2E832C8();
      sub_1B2E83308();
      sub_1B2E83318();
      sub_1B2E832D8();
      v4 += 2;
      --v2;
    }
    while (v2);
    uint64_t v3 = v7;
  }
  v0[4] = v3;
  id v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  *id v5 = v0;
  v5[1] = sub_1B2AEAD94;
  return sub_1B2AF2250();
}

uint64_t sub_1B2AEAD94()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1B299F388();
  *uint64_t v8 = v7;
  *(void *)(v5 + 48) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 56) = v3;
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B2AEAE88()
{
  sub_1B299B3BC();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 56);
  return v1(v2);
}

uint64_t sub_1B2AEAEEC()
{
  sub_1B299B3BC();
  swift_bridgeObjectRelease();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2AEAF48()
{
  sub_1B299B3BC();
  uint64_t v2 = sub_1B2AEC3A4(v1);
  v0[4] = v2;
  sub_1B299D2A8(v2);
  v0[5] = v3;
  uint64_t v4 = sub_1B299E508();
  uint64_t v5 = sub_1B2AEC38C(v4);
  uint64_t v6 = sub_1B2AEC374(v5);
  v0[8] = v6;
  sub_1B299D2A8(v6);
  v0[9] = v7;
  uint64_t v8 = sub_1B29A4C44();
  uint64_t v9 = sub_1B2AEC35C(v8);
  v0[11] = v9;
  sub_1B299D2A8(v9);
  v0[12] = v10;
  uint64_t v11 = sub_1B29A4C44();
  uint64_t v12 = sub_1B2AEC41C(v11);
  sub_1B2AEC2CC(v12);
  v0[15] = sub_1B29A4C44();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v13, v14, v15);
}

#error "1B2AEB118: call analysis failed (funcsize=82)"

uint64_t sub_1B2AEB1A4()
{
  sub_1B299B3BC();
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 136) = v4;
  *(void *)(v2 + 144) = v0;
  swift_task_dealloc();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1B2AEB288(uint64_t a1)
{
  sub_1B2E81F48();
  sub_1B299D278();
  uint64_t v32 = v3;
  uint64_t v33 = v2;
  MEMORY[0x1F4188790](v2);
  sub_1B299E4A0();
  uint64_t v34 = v5 - v4;
  uint64_t v6 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B299E4A0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = type metadata accessor for LogSignpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v19, a1 + *(int *)(v20 + 24), v13);
  uint64_t v35 = *(const char **)a1;
  char v21 = *(unsigned char *)(a1 + 16);
  swift_retain();
  uint64_t v22 = sub_1B2E81F28();
  sub_1B2E81F58();
  os_signpost_type_t v31 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
  }
  uint64_t v30 = v8;
  if ((v21 & 1) == 0)
  {
    uint64_t v24 = v34;
    if (v35)
    {
      uint64_t v26 = v32;
      uint64_t v25 = v33;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v26 + 88))(v24, v25) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v27 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
        uint64_t v27 = "";
      }
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      os_signpost_id_t v29 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v22, v31, v29, v35, v27, v28, 2u);
      MEMORY[0x1B3EB30C0](v28, -1, -1);
      uint64_t v8 = v30;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v24 = v34;
  if ((unint64_t)v35 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v35 >> 11 != 27)
  {
    uint64_t v26 = v32;
    uint64_t v25 = v33;
    if (v35 >> 16 <= 0x10)
    {
      uint64_t v35 = &v36;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1B2AEB57C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1B2AEB59C, 0, 0);
}

uint64_t sub_1B2AEB59C()
{
  uint64_t v20 = v0;
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1B2E832F8();
    uint64_t v4 = (unint64_t *)(v1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      unint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      unint64_t v8 = *v4;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      EntityIdentifier.init(_:)(v5, v6, (uint64_t)&v18);
      if ((v19 & 1) != 0
        || (uint64_t v9 = v18, swift_bridgeObjectRetain(), EntityIdentifier.init(_:)(v7, v8, (uint64_t)&v18), (v19 & 1) != 0))
      {
        sub_1B2AEC19C();
        swift_allocError();
        void *v14 = 0;
        v14[1] = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1B299AD7C();
        sub_1B2A88440();
        __asm { BRAA            X1, X16 }
      }
      uint64_t v10 = v18;
      sub_1B2AEB9E4();
      sub_1B2AEB980(objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v9), objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v10), 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2E832C8();
      sub_1B2E83308();
      sub_1B2E83318();
      sub_1B2E832D8();
      v4 += 4;
      --v2;
    }
    while (v2);
    uint64_t v3 = v17;
  }
  v0[4] = v3;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[5] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1B2AEB7EC;
  sub_1B2A88440();
  return sub_1B2AF2250();
}

uint64_t sub_1B2AEB7EC()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *unint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1B299F388();
  *unint64_t v8 = v7;
  *(void *)(v5 + 48) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 56) = v3;
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B2AEB8E0()
{
  sub_1B299B3BC();
  swift_bridgeObjectRelease();
  sub_1B299AD7C();
  return v0();
}

id EntitySimilarityClient.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EntitySimilarityClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1B2AEB980(void *a1, void *a2, uint64_t a3)
{
  id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithEntityId1_entityId2_entitySimilarityMode_, a1, a2, a3);

  return v5;
}

unint64_t sub_1B2AEB9E4()
{
  unint64_t result = qword_1E9C3D600[0];
  if (!qword_1E9C3D600[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1E9C3D600);
  }
  return result;
}

uint64_t method lookup function for EntitySimilarityClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EntitySimilarityClient);
}

uint64_t dispatch thunk of EntitySimilarityClient.__allocating_init(throwing:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of EntitySimilarityClient.computeSimilarity(request:)()
{
  sub_1B299B9B8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_1B29A19C8();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 96) + **(int **)(v4 + 96));
  uint64_t v5 = swift_task_alloc();
  unint64_t v6 = (void *)sub_1B299B4A8(v5);
  *unint64_t v6 = v7;
  v6[1] = sub_1B2AEC1EC;
  return v9(v3, v1);
}

uint64_t dispatch thunk of EntitySimilarityClient.batchComputeSimilarity(requestBatch:)()
{
  sub_1B299F394();
  sub_1B29A19C8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2AEC1F8;
  uint64_t v3 = sub_1B2ADAAB8();
  return v4(v3);
}

uint64_t dispatch thunk of EntitySimilarityClient.computeSimilarity(tuple:)()
{
  sub_1B2AEC3BC();
  sub_1B2AEC410();
  sub_1B29A19C8();
  uint64_t v14 = v0 + 112;
  uint64_t v13 = *(void *)(v0 + 112) + **(int **)(v0 + 112);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1B299B4A8(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1B2AEC1EC;
  sub_1B2AEC3D4();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  sub_1B299B9B8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v7 + *v7);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)sub_1B299B4A8(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1B2A14584;
  return v12(v6, v4, v2);
}

uint64_t dispatch thunk of EntitySimilarityClient.batchComputeSimilarity(batchTuples:)()
{
  sub_1B299F394();
  sub_1B29A19C8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2AEBFCC;
  uint64_t v3 = sub_1B2ADAAB8();
  return v4(v3);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  sub_1B299F394();
  sub_1B29A19C8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2AEC1F8;
  uint64_t v3 = sub_1B2ADAAB8();
  return v4(v3);
}

uint64_t sub_1B2AEBFCC()
{
  sub_1B299B3BC();
  uint64_t v2 = v1;
  sub_1B299B708();
  uint64_t v3 = *v0;
  sub_1B299F388();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

unint64_t sub_1B2AEC19C()
{
  unint64_t result = qword_1E9C3D680;
  if (!qword_1E9C3D680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D680);
  }
  return result;
}

uint64_t sub_1B2AEC1FC()
{
  return v0;
}

uint64_t sub_1B2AEC218()
{
  return v0;
}

void sub_1B2AEC234()
{
}

uint64_t sub_1B2AEC280()
{
  return swift_task_alloc();
}

void sub_1B2AEC2A0()
{
  JUMPOUT(0x1B3EB30C0);
}

uint64_t sub_1B2AEC2CC(uint64_t a1)
{
  *(void *)(v1 + 112) = a1;
  return a1 - 8;
}

__n128 sub_1B2AEC2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, long long a16)
{
  return (__n128)a16;
}

uint64_t sub_1B2AEC2FC()
{
  return sub_1B2AEB288(v0);
}

uint64_t sub_1B2AEC318()
{
  return *(void *)(v0 + 120);
}

void sub_1B2AEC334()
{
  sub_1B29C0730();
}

uint64_t sub_1B2AEC35C(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return sub_1B2E81F38();
}

uint64_t sub_1B2AEC374(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return sub_1B2E81FB8();
}

uint64_t sub_1B2AEC38C(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return swift_task_alloc();
}

uint64_t sub_1B2AEC3A4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_1B2E81F08();
}

uint64_t sub_1B2AEC3EC()
{
  uint64_t v2 = *(void *)(v0 + 120);
  return sub_1B2A93478(v2);
}

uint64_t sub_1B2AEC41C(uint64_t a1)
{
  *(void *)(v1 + 104) = a1;
  return type metadata accessor for LogSignpost();
}

uint64_t sub_1B2AEC434()
{
  return v0;
}

uint64_t sub_1B2AEC448()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1B2AEC45C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2AEC47C()
{
  return v0;
}

uint64_t sub_1B2AEC490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (long long *)a2;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1B29C0730();
    uint64_t v7 = v27;
    uint64_t v8 = (void *)(a1 + 48);
    uint64_t v19 = (uint64_t)v4;
    while (1)
    {
      char v9 = *((unsigned char *)v8 - 16);
      uint64_t v11 = *(v8 - 1);
      uint64_t v10 = *v8;
      long long v12 = v4[1];
      long long v23 = *v4;
      long long v24 = v12;
      long long v13 = v4[3];
      long long v25 = v4[2];
      long long v26 = v13;
      uint64_t v21 = v10;
      uint64_t v22 = v11;
      sub_1B2AEC618(&v22, &v21, a3);
      if (v3) {
        break;
      }
      float v15 = v14;
      uint64_t v27 = v7;
      unint64_t v16 = *(void *)(v7 + 16);
      if (v16 >= *(void *)(v7 + 24) >> 1)
      {
        sub_1B29C0730();
        uint64_t v7 = v27;
      }
      *(void *)(v7 + 16) = v16 + 1;
      uint64_t v17 = v7 + 32 * v16;
      *(double *)(v17 + 32) = v15;
      v8 += 3;
      *(unsigned char *)(v17 + 40) = v9;
      *(void *)(v17 + 48) = v11;
      *(void *)(v17 + 56) = v10;
      --v5;
      uint64_t v4 = (long long *)v19;
      if (!v5)
      {
        sub_1B2AF17D8(v19);
        goto LABEL_10;
      }
    }
    swift_release();
    sub_1B2AF17D8((uint64_t)v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B2AF17D8(a2);
    uint64_t v7 = MEMORY[0x1E4FBC860];
LABEL_10:
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1B2AEC618(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v5 = v3[1];
  long long v19 = *v3;
  long long v20 = v5;
  long long v6 = v3[3];
  long long v21 = v3[2];
  uint64_t v7 = *a1;
  uint64_t v8 = *a2;
  long long v22 = v6;
  if (a3)
  {
    uint64_t v9 = a3;
  }
  else
  {
    sub_1B29A3EB4(&qword_1EB7D98E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B2EBFA40;
    *(void *)(inited + 32) = v7;
    *(void *)(inited + 40) = v8;
    long long v23 = v19;
    long long v24 = v20;
    long long v25 = v21;
    uint64_t v16 = sub_1B2AED7F4(inited);
    if (v4) {
      return swift_setDeallocating();
    }
    uint64_t v18 = v16;
    sub_1B2AF14F8((uint64_t)&v19);
    uint64_t v9 = sub_1B2AF12C4(v18, (uint64_t)&v19);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_bridgeObjectRetain();
  }
  uint64_t v10 = sub_1B29B2B14(v7, v9);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_1B29B2B14(v8, v9);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    if (v12)
    {
      unint64_t v13 = *(void *)(v11 + 16);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v13 >> 31)
      {
        __break(1u);
      }
      else
      {
        cblas_sdot_NEWLAPACK();
        cblas_snrm2_NEWLAPACK();
        cblas_snrm2_NEWLAPACK();
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    swift_bridgeObjectRetain_n();
  }
  swift_bridgeObjectRelease();
  sub_1B2E831F8();
  sub_1B2E82518();
  if (!sub_1B29B2B14(v7, v9))
  {
    EntityIdentifier.description.getter();
    sub_1B2E82518();
  }
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  if (!sub_1B29B2B14(v8, v9))
  {
    EntityIdentifier.description.getter();
    sub_1B2E82518();
  }
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2AEC19C();
  swift_allocError();
  *uint64_t v17 = 0;
  v17[1] = 0xE000000000000000;
  swift_willThrow();
  return swift_bridgeObjectRelease();
}

uint64_t EntitySimilarityEngine.loadVectorMap(entityIds:)(uint64_t a1)
{
  long long v4 = v1[1];
  v9[0] = *v1;
  v9[1] = v4;
  long long v5 = v1[3];
  long long v10 = v1[2];
  long long v11 = v5;
  long long v12 = v9[0];
  long long v13 = v4;
  long long v14 = v10;
  uint64_t v6 = sub_1B2AED7F4(a1);
  if (!v2)
  {
    uint64_t v7 = v6;
    sub_1B2AF14F8((uint64_t)v9);
    uint64_t v3 = sub_1B2AF12C4(v7, (uint64_t)v9);
    swift_bridgeObjectRelease();
  }
  return v3;
}

double EntitySimilarityEngine.computeSimilarity(request:)@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = *a1;
  uint64_t v6 = *((void *)a1 + 1);
  uint64_t v7 = *((void *)a1 + 2);
  uint64_t v8 = *(void *)v2;
  long long v9 = *(_OWORD *)(v2 + 24);
  long long v10 = *(_OWORD *)(v2 + 40);
  uint64_t v11 = *(void *)(v2 + 56);
  v13[0] = v7;
  v13[1] = v8;
  long long v14 = *(_OWORD *)(v2 + 8);
  long long v15 = v9;
  long long v16 = v10;
  uint64_t v17 = v11;
  uint64_t v18 = v6;
  sub_1B2AEC618(&v18, v13, 0);
  if (!v3)
  {
    double result = *(float *)&result;
    *(double *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t EntitySimilarityEngine.computeSimilarityBatch(batchRequests:batchSize:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  long long v5 = v2[1];
  long long v50 = *v2;
  long long v51 = v5;
  long long v6 = v2[3];
  long long v52 = v2[2];
  long long v53 = v6;
  uint64_t v7 = sub_1B2AECEA0(a1);
  uint64_t v8 = v7;
  uint64_t v49 = MEMORY[0x1E4FBC860];
  uint64_t v43 = *(void *)(v7 + 16);
  if (!v43)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  unint64_t v9 = 0;
  uint64_t v44 = v7 + 32;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v42 = v7;
  while (1)
  {
    if (v9 >= *(void *)(v8 + 16)) {
      goto LABEL_33;
    }
    uint64_t v46 = v4;
    uint64_t v11 = v44 + 24 * v9;
    char v12 = *(unsigned char *)v11;
    long long v47 = *(_OWORD *)(v11 + 8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B29B8C90();
      uint64_t v10 = v38;
    }
    unint64_t v14 = *(void *)(v10 + 16);
    unint64_t v13 = *(void *)(v10 + 24);
    unint64_t v15 = v14 + 1;
    if (v14 >= v13 >> 1)
    {
      sub_1B29999F8(v13);
      sub_1B29B8C90();
      uint64_t v10 = v39;
    }
    *(void *)(v10 + 16) = v15;
    uint64_t v16 = v10 + 24 * v14;
    *(unsigned char *)(v16 + 32) = v12;
    *(_OWORD *)(v16 + 40) = v47;
    if (v15 == a2 || v9 == *(void *)(a1 + 16) - 1) {
      break;
    }
LABEL_25:
    if (++v9 == v43)
    {
      swift_bridgeObjectRelease();
LABEL_28:
      swift_bridgeObjectRelease();
      return v49;
    }
  }
  unint64_t v48 = v9;
  swift_bridgeObjectRetain_n();
  unint64_t v17 = v14 + 1;
  uint64_t v18 = (uint64_t *)(v10 + 48);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v21 = *(v18 - 1);
    uint64_t v20 = *v18;
    sub_1B29A3EB4(&qword_1EB7D98E0);
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 32) = v21;
    long long v23 = (_OWORD *)(inited + 32);
    *(void *)(inited + 40) = v20;
    uint64_t v24 = *(void *)(v19 + 16);
    if (__OFADD__(v24, 2))
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
    }
    uint64_t v25 = inited;
    if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t v26 = *(void *)(v19 + 24) >> 1, v26 < v24 + 2))
    {
      sub_1B29B7148();
      uint64_t v19 = v27;
      uint64_t v26 = *(void *)(v27 + 24) >> 1;
    }
    uint64_t v28 = *(void *)(v19 + 16);
    if (v26 - v28 < 2) {
      goto LABEL_31;
    }
    os_signpost_id_t v29 = (_OWORD *)(v19 + 8 * v28 + 32);
    if ((unint64_t)v23 < v19 + 8 * v28 + 48 && (unint64_t)v29 < v25 + 48)
    {
      sub_1B299D294();
      sub_1B29A24C4();
      uint64_t result = sub_1B2E834A8();
      __break(1u);
      return result;
    }
    *os_signpost_id_t v29 = *v23;
    BOOL v31 = __OFADD__(v28, 2);
    uint64_t v32 = v28 + 2;
    if (v31) {
      goto LABEL_32;
    }
    v18 += 3;
    *(void *)(v19 + 16) = v32;
    swift_setDeallocating();
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease_n();
  sub_1B2DDC524();
  sub_1B2A469D0();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  long long v54 = v50;
  long long v55 = v51;
  long long v56 = v52;
  uint64_t v35 = sub_1B2AED7F4(v34);
  uint64_t v4 = v46;
  if (!v46)
  {
    uint64_t v36 = v35;
    sub_1B2AF14F8((uint64_t)&v50);
    uint64_t v37 = sub_1B2AF12C4(v36, (uint64_t)&v50);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B2AF14F8((uint64_t)&v50);
    swift_retain();
    sub_1B2AEC490(v10, (uint64_t)&v50, v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B2AD3C28();
    uint64_t v10 = MEMORY[0x1E4FBC860];
    uint64_t v8 = v42;
    unint64_t v9 = v48;
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2AECEA0(uint64_t a1)
{
  sub_1B29A3EB4((uint64_t *)&unk_1E9C3D788);
  sub_1B2A4B170();
  uint64_t v2 = (void *)sub_1B2E82148();
  uint64_t v3 = sub_1B2E82148();
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    long long v5 = 0;
    long long v6 = 0;
    uint64_t v7 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v114 = v4;
      uint64_t v116 = (uint64_t)v6;
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      sub_1B2AF182C((uint64_t)v5);
      swift_isUniquelyReferenced_nonNull_native();
      unint64_t v10 = sub_1B29DAE70();
      if (__OFADD__(v2[2], (v11 & 1) == 0)) {
        goto LABEL_121;
      }
      unint64_t v12 = v10;
      char v13 = v11;
      sub_1B29A3EB4(&qword_1E9C3D798);
      if (sub_1B2E83398())
      {
        unint64_t v14 = sub_1B29DAE70();
        if ((v13 & 1) != (v15 & 1)) {
          goto LABEL_132;
        }
        unint64_t v12 = v14;
      }
      swift_bridgeObjectRelease();
      if (v13)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v2[(v12 >> 6) + 8] |= 1 << v12;
        *(void *)(v2[6] + 8 * v12) = v9;
        *(void *)(v2[7] + 8 * v12) = MEMORY[0x1E4FBC870];
        uint64_t v16 = v2[2];
        uint64_t v17 = v16 + 1;
        BOOL v18 = __OFADD__(v16, 1);
        swift_bridgeObjectRetain();
        if (v18) {
          goto LABEL_126;
        }
        v2[2] = v17;
      }
      swift_bridgeObjectRelease();
      uint64_t v19 = v8;
      sub_1B2A01CD0();
      sub_1B2AF182C(v116);
      swift_isUniquelyReferenced_nonNull_native();
      unint64_t v20 = sub_1B29DAE70();
      if (__OFADD__(*(void *)(v3 + 16), (v21 & 1) == 0)) {
        goto LABEL_122;
      }
      unint64_t v22 = v20;
      char v23 = v21;
      sub_1B29A3EB4((uint64_t *)&unk_1E9C3D7A0);
      if (sub_1B2E83398())
      {
        unint64_t v24 = sub_1B29DAE70();
        if ((v23 & 1) != (v25 & 1)) {
          goto LABEL_132;
        }
        unint64_t v22 = v24;
      }
      swift_bridgeObjectRelease();
      if (v23)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_1B2AF1A5C(v3 + 8 * (v22 >> 6));
        *(void *)(v26 + 8 * v22) = v19;
        *(void *)(*(void *)(v3 + 56) + 8 * v22) = 0;
        uint64_t v27 = *(void *)(v3 + 16);
        uint64_t v28 = v27 + 1;
        BOOL v29 = __OFADD__(v27, 1);
        swift_bridgeObjectRetain();
        if (v29) {
          goto LABEL_127;
        }
        *(void *)(v3 + 16) = v28;
      }
      uint64_t v30 = *(void *)(v3 + 56);
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v30 + 8 * v22);
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32) {
        goto LABEL_123;
      }
      *(void *)(v30 + 8 * v22) = v33;
      v7 += 3;
      long long v6 = sub_1B29B609C;
      long long v5 = sub_1B2AEE250;
      uint64_t v4 = v114 - 1;
    }
    while (v114 != 1);
    swift_bridgeObjectRelease();
    unint64_t v107 = sub_1B29B609C;
    id v106 = sub_1B2AEE250;
  }
  else
  {
    id v106 = 0;
    unint64_t v107 = 0;
  }
  uint64_t v34 = v3 + 64;
  uint64_t v35 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v36 = -1;
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  unint64_t v37 = v36 & *(void *)(v3 + 64);
  int64_t v38 = (unint64_t)(v35 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v39 = 0;
  uint64_t v40 = MEMORY[0x1E4FBC860];
  while (v37)
  {
    unint64_t v41 = __clz(__rbit64(v37));
    v37 &= v37 - 1;
    unint64_t v42 = v41 | (v39 << 6);
LABEL_48:
    if (!*(void *)(*(void *)(v3 + 56) + 8 * v42))
    {
      uint64_t v48 = *(void *)(*(void *)(v3 + 48) + 8 * v42);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B7148();
        uint64_t v40 = v51;
      }
      unint64_t v50 = *(void *)(v40 + 16);
      unint64_t v49 = *(void *)(v40 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_1B29999F8(v49);
        sub_1B29B7148();
        uint64_t v40 = v52;
      }
      *(void *)(v40 + 16) = v50 + 1;
      *(void *)(v40 + 8 * v50 + 32) = v48;
    }
  }
  int64_t v43 = v39 + 1;
  if (__OFADD__(v39, 1)) {
    goto LABEL_124;
  }
  if (v43 >= v38) {
    goto LABEL_54;
  }
  ++v39;
  if (*(void *)(v34 + 8 * v43)) {
    goto LABEL_47;
  }
  int64_t v39 = v43 + 1;
  if (v43 + 1 >= v38) {
    goto LABEL_54;
  }
  if (*(void *)(v34 + 8 * v39)) {
    goto LABEL_47;
  }
  int64_t v39 = v43 + 2;
  if (v43 + 2 >= v38) {
    goto LABEL_54;
  }
  if (*(void *)(v34 + 8 * v39))
  {
LABEL_47:
    sub_1B299E5A0();
    unint64_t v37 = v46 & v45;
    unint64_t v42 = v47 + (v39 << 6);
    goto LABEL_48;
  }
  int64_t v44 = v43 + 3;
  if (v44 >= v38) {
    goto LABEL_54;
  }
  if (*(void *)(v34 + 8 * v44))
  {
    int64_t v39 = v44;
    goto LABEL_47;
  }
  while (1)
  {
    int64_t v39 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      goto LABEL_128;
    }
    if (v39 >= v38) {
      break;
    }
    ++v44;
    if (*(void *)(v34 + 8 * v39)) {
      goto LABEL_47;
    }
  }
LABEL_54:
  swift_release();
  uint64_t v118 = MEMORY[0x1E4FBC860];
  if (!*(void *)(v40 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v104 = MEMORY[0x1E4FBC860];
    goto LABEL_116;
  }
  while (2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B2CC3430();
      uint64_t v40 = v103;
    }
    uint64_t v53 = *(void *)(v40 + 16);
    if (!v53) {
      goto LABEL_125;
    }
    *(void *)(v40 + 16) = v53 - 1;
    if (!v2[2] || (unint64_t v54 = sub_1B29DAE70(), (v55 & 1) == 0))
    {
LABEL_113:
      if (*(void *)(v40 + 16)) {
        continue;
      }
      swift_bridgeObjectRelease();
      uint64_t v104 = v118;
LABEL_116:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2AF182C((uint64_t)v106);
      sub_1B2AF182C((uint64_t)v107);
      return v104;
    }
    break;
  }
  uint64_t v56 = *(void *)(v2[7] + 8 * v54);
  swift_bridgeObjectRetain_n();
  sub_1B2AD3838();
  int64_t v57 = 0;
  uint64_t v58 = v56 + 56;
  sub_1B299B9C4();
  uint64_t v61 = v60 & v59;
  int64_t v117 = (unint64_t)(v62 + 63) >> 6;
  while (1)
  {
LABEL_61:
    if (!v61)
    {
      int64_t v63 = v57 + 1;
      if (__OFADD__(v57, 1))
      {
        __break(1u);
LABEL_118:
        __break(1u);
        goto LABEL_119;
      }
      if (v63 >= v117) {
        goto LABEL_112;
      }
      ++v57;
      if (*(void *)(v58 + 8 * v63)) {
        goto LABEL_76;
      }
      int64_t v57 = v63 + 1;
      if (v63 + 1 >= v117) {
        goto LABEL_112;
      }
      if (*(void *)(v58 + 8 * v57)) {
        goto LABEL_76;
      }
      int64_t v57 = v63 + 2;
      if (v63 + 2 >= v117) {
        goto LABEL_112;
      }
      if (*(void *)(v58 + 8 * v57)) {
        goto LABEL_76;
      }
      int64_t v64 = v63 + 3;
      if (v64 < v117)
      {
        if (*(void *)(v58 + 8 * v64))
        {
          int64_t v57 = v64;
LABEL_76:
          sub_1B299E5A0();
          uint64_t v61 = v66 & v65;
          goto LABEL_77;
        }
        while (1)
        {
          int64_t v57 = v64 + 1;
          if (__OFADD__(v64, 1)) {
            break;
          }
          if (v57 >= v117) {
            goto LABEL_112;
          }
          ++v64;
          if (*(void *)(v58 + 8 * v57)) {
            goto LABEL_76;
          }
        }
LABEL_119:
        __break(1u);
        goto LABEL_120;
      }
LABEL_112:
      swift_release();
      goto LABEL_113;
    }
    v61 &= v61 - 1;
LABEL_77:
    if (v2[2])
    {
      unint64_t v67 = sub_1B29DAE70();
      if (v68) {
        break;
      }
    }
  }
  uint64_t v110 = v56;
  uint64_t v111 = v40;
  uint64_t v69 = *(void *)(v2[7] + 8 * v67) + 56;
  sub_1B299B9C4();
  unint64_t v72 = v71 & v70;
  int64_t v74 = (unint64_t)(v73 + 63) >> 6;
  uint64_t v113 = v58;
  uint64_t v115 = v75;
  swift_bridgeObjectRetain();
  int64_t v76 = 0;
  while (1)
  {
    if (v72)
    {
      unint64_t v77 = __clz(__rbit64(v72));
      v72 &= v72 - 1;
      unint64_t v78 = v77 | (v76 << 6);
      goto LABEL_96;
    }
    int64_t v79 = v76 + 1;
    if (__OFADD__(v76, 1)) {
      goto LABEL_118;
    }
    uint64_t v58 = v113;
    if (v79 >= v74)
    {
LABEL_111:
      swift_release();
      uint64_t v56 = v110;
      uint64_t v40 = v111;
      goto LABEL_61;
    }
    ++v76;
    if (!*(void *)(v69 + 8 * v79))
    {
      int64_t v76 = v79 + 1;
      if (v79 + 1 >= v74) {
        goto LABEL_111;
      }
      if (!*(void *)(v69 + 8 * v76))
      {
        int64_t v76 = v79 + 2;
        if (v79 + 2 >= v74) {
          goto LABEL_111;
        }
        if (!*(void *)(v69 + 8 * v76)) {
          break;
        }
      }
    }
LABEL_95:
    sub_1B299E5A0();
    unint64_t v72 = v82 & v81;
    unint64_t v78 = v83 + (v76 << 6);
LABEL_96:
    if (*(void *)(v3 + 16))
    {
      uint64_t v84 = *(void *)(*(void *)(v115 + 48) + 24 * v78 + 16);
      unint64_t v85 = sub_1B29DAE70();
      if (v86)
      {
        uint64_t v87 = *(void *)(*(void *)(v3 + 56) + 8 * v85);
        BOOL v32 = __OFSUB__(v87, 1);
        uint64_t v88 = v87 - 1;
        if (v32) {
          goto LABEL_129;
        }
        uint64_t v109 = v88;
        swift_isUniquelyReferenced_nonNull_native();
        unint64_t v89 = sub_1B29DAE70();
        char v112 = v90;
        if (__OFADD__(*(void *)(v3 + 16), (v90 & 1) == 0)) {
          goto LABEL_130;
        }
        unint64_t v108 = v89;
        sub_1B29A3EB4((uint64_t *)&unk_1E9C3D7A0);
        char v91 = sub_1B2E83398();
        unint64_t v92 = v108;
        if (v91)
        {
          unint64_t v93 = sub_1B29DAE70();
          if ((v112 & 1) != (v94 & 1)) {
            goto LABEL_132;
          }
          unint64_t v92 = v93;
        }
        if (v112)
        {
          uint64_t v95 = v109;
          *(void *)(*(void *)(v3 + 56) + 8 * v92) = v109;
        }
        else
        {
          sub_1B2AF1A5C(v3 + 8 * (v92 >> 6));
          *(void *)(v96 + 8 * v97) = v84;
          uint64_t v95 = v109;
          *(void *)(*(void *)(v3 + 56) + 8 * v97) = v109;
          uint64_t v98 = *(void *)(v3 + 16);
          BOOL v32 = __OFADD__(v98, 1);
          uint64_t v99 = v98 + 1;
          if (v32) {
            goto LABEL_131;
          }
          *(void *)(v3 + 16) = v99;
        }
        swift_bridgeObjectRelease();
        if (!v95)
        {
          unint64_t v100 = *(void *)(v111 + 16);
          unint64_t v101 = v100 + 1;
          if (v100 >= *(void *)(v111 + 24) >> 1)
          {
            sub_1B29B7148();
            unint64_t v101 = v100 + 1;
            uint64_t v111 = v102;
          }
          *(void *)(v111 + 16) = v101;
          *(void *)(v111 + 8 * v100 + 32) = v84;
        }
      }
    }
  }
  int64_t v80 = v79 + 3;
  if (v80 >= v74) {
    goto LABEL_111;
  }
  if (*(void *)(v69 + 8 * v80))
  {
    int64_t v76 = v80;
    goto LABEL_95;
  }
  while (1)
  {
    int64_t v76 = v80 + 1;
    if (__OFADD__(v80, 1)) {
      break;
    }
    if (v76 >= v74) {
      goto LABEL_111;
    }
    ++v80;
    if (*(void *)(v69 + 8 * v76)) {
      goto LABEL_95;
    }
  }
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2AED7F4(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1B2E813A8();
  sub_1B2A4B170();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v14 = sub_1B2E82148();
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    v13[0] = v4;
    sub_1B29BFD80();
    unint64_t v6 = *(void *)(v4 + 16);
    uint64_t v7 = 16 * v6;
    do
    {
      v13[0] = v4;
      unint64_t v8 = v6 + 1;
      if (v6 >= *(void *)(v4 + 24) >> 1)
      {
        sub_1B29BFD80();
        uint64_t v4 = v13[0];
      }
      *(void *)(v4 + 16) = v8;
      uint64_t v9 = v4 + v7;
      *(void *)(v9 + 32) = 63;
      *(void *)(v9 + 40) = 0xE100000000000000;
      v7 += 16;
      unint64_t v6 = v8;
      --v5;
    }
    while (v5);
    uint64_t v2 = v1;
  }
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2AF18A8((unint64_t *)&qword_1EB7E2800);
  sub_1B2E822D8();
  swift_bridgeObjectRelease();
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  strcpy((char *)v13, "SELECT * FROM ");
  HIBYTE(v13[1]) = -18;
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  uint64_t ObjectType = swift_getObjectType();
  MEMORY[0x1F4188790](ObjectType);
  sub_1B2E80C28();
  swift_bridgeObjectRelease();
  uint64_t v11 = v14;
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1B2AEDACC(uint64_t a1)
{
  void (*v35)(void *__return_ptr, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  BOOL v43;
  double v44;
  uint64_t v45;
  unint64_t v46;
  float v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  unint64_t v53;
  void *v54;
  void v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (**v62)(char *, uint64_t);
  void (*v63)(char *);
  void (**v64)(void *__return_ptr, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  double v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  void v78[6];

  uint64_t v70 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D88D0);
  MEMORY[0x1F4188790](v70);
  uint64_t v60 = (uint64_t)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1B2E816D8();
  uint64_t v4 = *(void *)(v61 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v61);
  char v68 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v67 = (char *)v55 - v7;
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C3D7B8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v65 = (uint64_t)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v66 = (uint64_t)v55 - v11;
  uint64_t v12 = sub_1B29A3EB4(&qword_1E9C3D7C0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  char v15 = (void *)((char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = v1[4];
  uint64_t v71 = v1[5];
  unint64_t v72 = v16;
  uint64_t v58 = v1[6];
  int64_t v57 = v1[7];
  v55[0] = a1;
  uint64_t v17 = sub_1B2E81338();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  v78[0] = v17;
  uint64_t v22 = sub_1B2E813A8();
  sub_1B2AF183C(&qword_1E9C3D7C8, MEMORY[0x1E4F62E40]);
  sub_1B2E82668();
  char v23 = (void *)((char *)v15 + *(int *)(v13 + 52));
  *char v23 = v19;
  v23[1] = v21;
  int64_t v64 = (void (**)(void *__return_ptr, uint64_t))v23;
  unint64_t v24 = (char *)v15 + *(int *)(sub_1B29A3EB4(&qword_1EB7D88E0) + 36);
  int64_t v63 = *(void (**)(char *))(v4 + 16);
  uint64_t v69 = v4 + 16;
  uint64_t v62 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v56 = MEMORY[0x1E4FBC860];
  uint64_t v59 = v22;
  uint64_t v73 = v24;
  char v25 = v67;
  while (1)
  {
    while (1)
    {
      uint64_t v26 = v61;
      v63(v25);
      sub_1B2AF183C((unint64_t *)&unk_1EB7D9AF0, MEMORY[0x1E4F62E40]);
      uint64_t v27 = v68;
      sub_1B2E82C08();
      sub_1B2AF183C(&qword_1EB7D9B00, MEMORY[0x1E4F62F10]);
      char v28 = sub_1B2E82328();
      BOOL v29 = *v62;
      (*v62)(v27, v26);
      v29(v25, v26);
      if (v28)
      {
        uint64_t v30 = 1;
        uint64_t v31 = v66;
      }
      else
      {
        BOOL v32 = (void (*)(void *, void))sub_1B2E82D38();
        uint64_t v31 = v66;
        sub_1B29C3FC4(v33, v66, (uint64_t *)&unk_1EB7D88D0);
        v32(v78, 0);
        v78[0] = *v15;
        sub_1B2E82C18();
        uint64_t v30 = 0;
      }
      uint64_t v34 = v70;
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v31, v30, 1, v70);
      uint64_t v35 = *v64;
      uint64_t v36 = v31;
      unint64_t v37 = v65;
      sub_1B29C4020(v36, v65, &qword_1E9C3D7B8);
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v37, 1, v34) == 1)
      {
        sub_1B29C4148((uint64_t)v15, &qword_1E9C3D7C0);
        return v56;
      }
      int64_t v38 = v37;
      int64_t v39 = v60;
      sub_1B29C4020(v38, v60, (uint64_t *)&unk_1EB7D88D0);
      v35(v78, v39);
      uint64_t v40 = v78[0];
      unint64_t v41 = v78[1];
      sub_1B29C4148(v39, (uint64_t *)&unk_1EB7D88D0);
      unint64_t v42 = v40 == v72 && v41 == v71;
      if (!v42 && (sub_1B2E837A8() & 1) == 0)
      {
        int64_t v43 = v40 == v58 && v41 == v57;
        if (!v43 && (sub_1B2E837A8() & 1) == 0) {
          break;
        }
      }
      swift_bridgeObjectRelease();
    }
    sub_1B2E813B8();
    sub_1B29C3FC4((uint64_t)v78, (uint64_t)&v75, &qword_1E9C3B6A8);
    if (!v77) {
      break;
    }
    sub_1B29A3EB4((uint64_t *)&unk_1E9C3D7D0);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    int64_t v44 = v74;
    uint64_t v45 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B29B8680();
      uint64_t v45 = v48;
    }
    uint64_t v46 = *(void *)(v45 + 16);
    if (v46 >= *(void *)(v45 + 24) >> 1)
    {
      sub_1B29B8680();
      uint64_t v45 = v49;
    }
    uint64_t v47 = v44;
    *(void *)(v45 + 16) = v46 + 1;
    uint64_t v56 = v45;
    *(float *)(v45 + 4 * v46 + 32) = v47;
    sub_1B29C4148((uint64_t)v78, &qword_1E9C3B6A8);
  }
  sub_1B29C4148((uint64_t)&v75, &qword_1E9C3B6A8);
LABEL_27:
  unint64_t v50 = v56;
  swift_bridgeObjectRelease();
  uint64_t v75 = 0;
  int64_t v76 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  uint64_t v52 = v75;
  uint64_t v53 = v76;
  sub_1B2AEC19C();
  swift_allocError();
  *unint64_t v54 = v52;
  v54[1] = v53;
  swift_willThrow();
  sub_1B29C4148((uint64_t)v78, &qword_1E9C3B6A8);
  sub_1B29C4148((uint64_t)v15, &qword_1E9C3D7C0);
  return v50;
}

void sub_1B2AEE250(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC870];
}

uint64_t sub_1B2AEE260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29C3B28(a1, (uint64_t)&v9);
  if (swift_dynamicCast()) {
    goto LABEL_2;
  }
  sub_1B29C3B28(a1, (uint64_t)&v9);
  if (swift_dynamicCast())
  {
    EntityIdentifier.init(_:)(v7, v8, (uint64_t)&v9);
    uint64_t result = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
    char v6 = v10;
    if (v10 == 1)
    {
      uint64_t v4 = 0;
      goto LABEL_4;
    }
    goto LABEL_13;
  }
  sub_1B29C3B28(a1, (uint64_t)&v9);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1B29C3B28(a1, (uint64_t)&v9);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_1B29C3B28(a1, (uint64_t)&v9);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t result = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
        uint64_t v4 = 0;
        char v6 = 1;
        goto LABEL_4;
      }
      uint64_t v4 = v7;
      if ((v7 & 0x8000000000000000) == 0) {
        goto LABEL_3;
      }
      uint64_t result = sub_1B2E83408();
      __break(1u);
LABEL_13:
      char v6 = 0;
      uint64_t v4 = v9;
      goto LABEL_4;
    }
  }
LABEL_2:
  uint64_t v4 = v7;
LABEL_3:
  uint64_t result = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
  char v6 = 0;
LABEL_4:
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v6;
  return result;
}

uint64_t sub_1B2AEE42C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v85 = a2;
  char v86 = a6;
  uint64_t v81 = a5;
  unint64_t v84 = a1;
  uint64_t v10 = sub_1B2E81028();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a4 + 16);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (v14)
  {
    *(void *)&long long v78 = a3;
    unint64_t v79 = v6;
    int64_t v80 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v82 = v11;
    uint64_t v83 = v10;
    *(void *)&long long v91 = MEMORY[0x1E4FBC860];
    sub_1B29BFD80();
    uint64_t v15 = v91;
    uint64_t v16 = (uint64_t *)(a4 + 32);
    do
    {
      uint64_t v17 = *v16++;
      *(void *)&long long v89 = v17;
      uint64_t v18 = sub_1B2E83748();
      uint64_t v20 = v19;
      *(void *)&long long v91 = v15;
      unint64_t v21 = *(void *)(v15 + 16);
      if (v21 >= *(void *)(v15 + 24) >> 1)
      {
        sub_1B29BFD80();
        uint64_t v15 = v91;
      }
      *(void *)(v15 + 16) = v21 + 1;
      uint64_t v22 = v15 + 16 * v21;
      *(void *)(v22 + 32) = v18;
      *(void *)(v22 + 40) = v20;
      --v14;
    }
    while (v14);
    uint64_t v11 = v82;
    uint64_t v10 = v83;
    uint64_t v13 = v80;
    uint64_t v7 = v79;
  }
  sub_1B2E813A8();
  *(void *)&long long v91 = v15;
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2AF18A8(&qword_1E9C383D0);
  sub_1B2E81038();
  uint64_t v93 = 0;
  long long v91 = 0u;
  long long v92 = 0u;
  uint64_t v23 = sub_1B2E81388();
  if (v7)
  {
    sub_1B29C4148((uint64_t)&v91, &qword_1E9C37BC0);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  unint64_t v25 = v23;
  sub_1B29C4148((uint64_t)&v91, &qword_1E9C37BC0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v76 = 0;
  if (v25 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1B2E83448();
    swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_11;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v27 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v27) {
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  uint64_t v28 = v81[4];
  uint64_t v29 = v81[5];
  unint64_t v84 = v25 & 0xC000000000000001;
  uint64_t v85 = v28;
  uint64_t v30 = 4;
  *(void *)&long long v26 = 136315394;
  long long v78 = v26;
  unint64_t v77 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v83 = v29;
  int64_t v80 = (char *)v27;
  unint64_t v79 = v25;
  while (1)
  {
    if (v84)
    {
      uint64_t v31 = MEMORY[0x1B3EB1A20](v30 - 4, v25);
    }
    else
    {
      uint64_t v31 = *(void *)(v25 + 8 * v30);
      swift_retain();
    }
    uint64_t v32 = v30 - 3;
    if (__OFADD__(v30 - 4, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    sub_1B2E813B8();
    if (!v90)
    {
      swift_bridgeObjectRelease();
      sub_1B29C4148((uint64_t)&v89, &qword_1E9C3B6A8);
      *(void *)&long long v91 = 0;
      *((void *)&v91 + 1) = 0xE000000000000000;
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      *(void *)&long long v91 = 0xD000000000000018;
      *((void *)&v91 + 1) = 0x80000001B2E9AFF0;
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      long long v74 = v91;
      sub_1B2AEC19C();
      swift_allocError();
      *uint64_t v75 = v74;
      swift_willThrow();
      return swift_release();
    }
    sub_1B29D1D20(&v89, (uint64_t)&v91);
    uint64_t v33 = *((void *)&v92 + 1);
    uint64_t v34 = sub_1B29AEC7C(&v91, *((uint64_t *)&v92 + 1));
    uint64_t v90 = v33;
    uint64_t v35 = sub_1B29D1C70((uint64_t *)&v89);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v35, v34, v33);
    sub_1B2AEE260((uint64_t)&v89, (uint64_t)&v87);
    if (v88 == 1)
    {
      uint64_t v82 = v31;
      if (qword_1EB7E3A20 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1B2E81FB8();
      sub_1B29A4B98(v36, (uint64_t)qword_1EB7E4AD8);
      uint64_t v37 = *v81;
      uint64_t v38 = v81[1];
      sub_1B29C3B84((uint64_t)&v91, (uint64_t)&v89);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain_n();
      int64_t v39 = sub_1B2E81F98();
      os_log_type_t v40 = sub_1B2E82D98();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        uint64_t v94 = v42;
        *(_DWORD *)uint64_t v41 = v78;
        swift_bridgeObjectRetain();
        sub_1B29BF6BC(v37, v38, (uint64_t)&v94, v43, v44, v45, v46, v47, v76, v77, v78, *((uint64_t *)&v78 + 1), v79, (uint64_t)v80, (uint64_t)v81, v82, v83, v84, v85,
          (uint64_t)v86);
        *(void *)(v41 + 4) = v48;
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v41 + 12) = 2080;
        sub_1B29C3B84((uint64_t)&v89, (uint64_t)&v87);
        sub_1B29A3EB4((uint64_t *)&unk_1E9C3D7D0);
        uint64_t v49 = sub_1B2E823E8();
        sub_1B29BF6BC(v49, v50, (uint64_t)&v94, v51, v52, v53, v54, v55, v76, v77, v78, *((uint64_t *)&v78 + 1), v79, (uint64_t)v80, (uint64_t)v81, v82, v83, v84, v85,
          (uint64_t)v86);
        *(void *)(v41 + 14) = v56;
        swift_bridgeObjectRelease();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v89);
        _os_log_impl(&dword_1B2996000, v39, v40, "No value found in %s: %s", (uint8_t *)v41, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1B3EB30C0](v42, -1, -1);
        uint64_t v57 = v41;
        uint64_t v27 = (uint64_t)v80;
        MEMORY[0x1B3EB30C0](v57, -1, -1);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v89);
      }

      unint64_t v25 = v79;
      goto LABEL_33;
    }
    uint64_t v82 = v30 - 3;
    unint64_t v58 = v25;
    unint64_t v25 = v31;
    uint64_t v59 = v86;
    uint64_t v60 = v87;
    swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v89 = *v59;
    uint64_t v61 = v89;
    *uint64_t v59 = 0x8000000000000000;
    unint64_t v62 = sub_1B29DAE70();
    if (__OFADD__(*(void *)(v61 + 16), (v63 & 1) == 0)) {
      goto LABEL_37;
    }
    unint64_t v64 = v62;
    char v65 = v63;
    sub_1B29A3EB4((uint64_t *)&unk_1E9C3D7E0);
    char v66 = sub_1B2E83398();
    uint64_t v27 = (uint64_t)v80;
    if (v66) {
      break;
    }
LABEL_26:
    uint64_t v69 = (void *)v89;
    if (v65)
    {
      uint64_t v70 = *(void *)(v89 + 56);
      swift_release();
      *(void *)(v70 + 8 * v64) = v25;
    }
    else
    {
      *(void *)(v89 + 8 * (v64 >> 6) + 64) |= 1 << v64;
      *(void *)(v69[6] + 8 * v64) = v60;
      *(void *)(v69[7] + 8 * v64) = v25;
      uint64_t v71 = v69[2];
      BOOL v72 = __OFADD__(v71, 1);
      uint64_t v73 = v71 + 1;
      if (v72) {
        goto LABEL_38;
      }
      v69[2] = v73;
    }
    *char v86 = v69;
    swift_bridgeObjectRelease();
    unint64_t v25 = v58;
    uint64_t v32 = v82;
LABEL_33:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v91);
    ++v30;
    if (v32 == v27) {
      return swift_bridgeObjectRelease();
    }
  }
  unint64_t v67 = sub_1B29DAE70();
  if ((v65 & 1) == (v68 & 1))
  {
    unint64_t v64 = v67;
    goto LABEL_26;
  }
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2AEEC30()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF19E8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEECD0(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1200(a1, a2);
}

uint64_t sub_1B2AEECE8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF191C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4((uint64_t *)&unk_1E9C398A0);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEED98()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1A28();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEEE40(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0EC0(a1, a2);
}

uint64_t sub_1B2AEEE4C()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4EA8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEEEF8()
{
  return sub_1B2AEF078();
}

void *sub_1B2AEEF04(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = (void *)sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4454();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  BOOL v6 = (void *)sub_1B299F648();

  return memcpy(v6, v7, v8);
}

uint64_t sub_1B2AEEF9C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1A38();
  if (v4 + 104 * v3 > v2 && v2 + 104 * v3 > v4)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4(&qword_1E9C38920);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEF060()
{
  return sub_1B2AEFD78();
}

uint64_t sub_1B2AEF06C()
{
  return sub_1B2AEF078();
}

uint64_t sub_1B2AEF078()
{
  sub_1B29A0888();
  if (v3 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  if (v2 + (v1 << 6) > v0 && v0 + (v1 << 6) > v2)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEF11C()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4EA8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEF1C8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1958();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4(&qword_1E9C3D780);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEF278(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF104C(a1, a2);
}

uint64_t sub_1B2AEF284()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4EA8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEF330()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4EA8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEF3DC()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF19E8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEF47C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1984();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4(&qword_1E9C3A1F0);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEF52C()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1974();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEF5D4()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4EA8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

void *sub_1B2AEF680()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = (void *)sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1A70();
  if (!v6 & v5) {
    BOOL v7 = v4 > (unint64_t)v3;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return memcpy(v3, v1, v2);
}

uint64_t sub_1B2AEF718(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

void *sub_1B2AEF724(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = (void *)sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1A10();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  char v6 = (void *)sub_1B299F648();

  return memcpy(v6, v7, v8);
}

uint64_t sub_1B2AEF7BC()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4EA8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEF86C(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AEF878()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4EA8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEF924(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF021C(a1, a2);
}

uint64_t sub_1B2AEF93C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF19A8();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4(&qword_1E9C3A168);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEF9EC(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AEF9FC()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4EA8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

void *sub_1B2AEFAA8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = (void *)sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1904();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  BOOL v6 = (void *)sub_1B299F648();

  return memcpy(v6, v7, v8);
}

uint64_t sub_1B2AEFB40()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1A28();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEFBE8(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AEFBF8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF19C8();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4(&qword_1EB7DA078);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEFCA8(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF021C(a1, a2);
}

uint64_t sub_1B2AEFCC0()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4EA8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEFD6C()
{
  return sub_1B2AEFD78();
}

uint64_t sub_1B2AEFD78()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1974();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEFE18()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF19FC();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEFEB8()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF19FC();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AEFF58()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1A28();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0000()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4EA8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

void *sub_1B2AF00AC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = (void *)sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF193C();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  BOOL v6 = (void *)sub_1B299F648();

  return memcpy(v6, v7, v8);
}

void *sub_1B2AF0144(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = (void *)sub_1B29A1598();
    __break(1u);
    return result;
  }
  unint64_t v3 = a1 + 32 * a2;
  if (a3 + 32 * a2 > a1)
  {
    BOOL v4 = v3 >= a3;
    BOOL v5 = v3 == a3;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  BOOL v6 = (void *)sub_1B299F648();

  return memcpy(v6, v7, v8);
}

uint64_t sub_1B2AF01EC(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF021C(a1, a2);
}

uint64_t sub_1B2AF0204(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF021C(a1, a2);
}

uint64_t sub_1B2AF021C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B299E76C();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  v3(0);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF02CC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF191C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4(&qword_1E9C37A68);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF037C(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0394(a1, a2);
}

uint64_t sub_1B2AF0388(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0394(a1, a2);
}

uint64_t sub_1B2AF0394(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1984();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4(v3);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0440()
{
  sub_1B29A0888();
  if (v3 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  if (v2 + 8 * v1 > v0 && v0 + 8 * v1 > v2)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF04EC()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1974();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0594()
{
  return sub_1B2AF0D54();
}

uint64_t sub_1B2AF05A0(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1200(a1, a2);
}

uint64_t sub_1B2AF05B8(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1200(a1, a2);
}

uint64_t sub_1B2AF05D0(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1104(a1, a2);
}

uint64_t sub_1B2AF05DC(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF05E8(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF05F4(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF0600(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF060C(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF0618(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1104(a1, a2);
}

uint64_t sub_1B2AF0624(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF0630(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF063C(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF0648(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF0654(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF0660(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF066C(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1104(a1, a2);
}

uint64_t sub_1B2AF0678(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF0684(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF0690(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF069C(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF06A8(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF06B4(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF06C0(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1104(a1, a2);
}

uint64_t sub_1B2AF06CC(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF06D8(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1104(a1, a2);
}

uint64_t sub_1B2AF06E4()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF19E8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0784(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF104C(a1, a2);
}

uint64_t sub_1B2AF0790(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  if (a3 + 48 * a2 > a1 && a1 + 48 * a2 > a3)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4((uint64_t *)&unk_1E9C3D6D0);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0858()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4EA8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0904(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0EC0(a1, a2);
}

uint64_t sub_1B2AF0910()
{
  sub_1B29A0888();
  if (v3 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  if (v2 + 96 * v1 > v0 && v0 + 96 * v1 > v2)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF09C0(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF09CC(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF09D8()
{
  sub_1B29A0888();
  if (v3 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  if (v2 + 192 * v1 > v0 && v0 + 192 * v1 > v2)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0A88()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B29A4EA8();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0B34(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF0B40()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1974();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0BE8()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1974();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0C90(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0C9C(a1, a2);
}

uint64_t sub_1B2AF0C9C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B299E76C();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4(v3);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0D48()
{
  return sub_1B2AF0D54();
}

uint64_t sub_1B2AF0D54()
{
  sub_1B29A0888();
  if (v0 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF19FC();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0DEC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF191C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4(&qword_1E9C3D6C8);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0E9C(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1200(a1, a2);
}

uint64_t sub_1B2AF0EB4(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF0EC0(a1, a2);
}

uint64_t sub_1B2AF0EC0(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF19A8();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4(v3);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF0F6C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF19C8();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4((uint64_t *)&unk_1E9C3D6B8);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF101C(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1200(a1, a2);
}

uint64_t sub_1B2AF1034(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF104C(a1, a2);
}

uint64_t sub_1B2AF1040(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF104C(a1, a2);
}

uint64_t sub_1B2AF104C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1958();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B29A3EB4(v3);
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF10F8(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1104(a1, a2);
}

uint64_t sub_1B2AF1104(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1A38();
  sub_1B29A3EB4(v3);
  sub_1B2999864();
  sub_1B2AF1A48();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF11C4(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1200(a1, a2);
}

uint64_t sub_1B2AF11DC(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF104C(a1, a2);
}

uint64_t sub_1B2AF11E8(uint64_t a1, uint64_t a2)
{
  return sub_1B2AF1200(a1, a2);
}

uint64_t sub_1B2AF1200(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C426C();
LABEL_11:
    uint64_t result = sub_1B29A1598();
    __break(1u);
    return result;
  }
  sub_1B2AF1A38();
  v3(0);
  sub_1B2999864();
  sub_1B2AF1A48();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1B299D294();
    sub_1B29A24C4();
    goto LABEL_11;
  }
  sub_1B2AF18F0();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1B2AF12C4(uint64_t a1, uint64_t a2)
{
  sub_1B29A3EB4(&qword_1E9C3D7B0);
  uint64_t result = sub_1B2E83468();
  char v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v28 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = a1 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v25 = v9;
  int64_t v26 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v27 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v14 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    uint64_t v19 = *(void *)(*(void *)(v28 + 48) + 8 * i);
    uint64_t v20 = swift_retain();
    uint64_t v21 = sub_1B2AEDACC(v20);
    uint64_t result = swift_release();
    if (v2)
    {
      swift_release();
LABEL_25:
      sub_1B2AF17D8(a2);
      return (uint64_t)v6;
    }
    *(void *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v6[6] + 8 * i) = v19;
    *(void *)(v6[7] + 8 * i) = v21;
    uint64_t v22 = v6[2];
    BOOL v16 = __OFADD__(v22, 1);
    uint64_t v23 = v22 + 1;
    if (v16)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v6[2] = v23;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v16 = __OFADD__(v7++, 1);
    if (v16) {
      goto LABEL_27;
    }
    if (v7 >= v26) {
      goto LABEL_25;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v7);
    if (!v17)
    {
      int64_t v18 = v7 + 1;
      if (v7 + 1 >= v26) {
        goto LABEL_25;
      }
      unint64_t v17 = *(void *)(v25 + 8 * v18);
      if (v17) {
        goto LABEL_12;
      }
      int64_t v18 = v7 + 2;
      if (v7 + 2 >= v26) {
        goto LABEL_25;
      }
      unint64_t v17 = *(void *)(v25 + 8 * v18);
      if (v17)
      {
LABEL_12:
        int64_t v7 = v18;
        goto LABEL_13;
      }
      int64_t v24 = v7 + 3;
      if (v7 + 3 >= v26) {
        goto LABEL_25;
      }
      unint64_t v17 = *(void *)(v25 + 8 * v24);
      v7 += 3;
      if (!v17) {
        break;
      }
    }
LABEL_13:
    unint64_t v13 = (v17 - 1) & v17;
  }
  while (1)
  {
    int64_t v7 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v7 >= v26) {
      goto LABEL_25;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v7);
    ++v24;
    if (v17) {
      goto LABEL_13;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B2AF14F8(uint64_t a1)
{
  return a1;
}

uint64_t destroy for EntitySimilarityEngine()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntitySimilarityEngine(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EntitySimilarityEngine(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EntitySimilarityEngine(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntitySimilarityEngine(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntitySimilarityEngine(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntitySimilarityEngine()
{
  return &type metadata for EntitySimilarityEngine;
}

uint64_t sub_1B2AF17D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2AF182C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1B2AF183C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2AF1884(unint64_t a1)
{
  return sub_1B2AEE42C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint64_t **)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_1B2AF18A8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(&qword_1EB7E3B30);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2AF18F0()
{
  return v0;
}

void sub_1B2AF1A5C(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

uint64_t sub_1B2AF1A84(void *a1)
{
  uint64_t v3 = v1;
  type metadata accessor for EntitySimilarityRequestManager();
  swift_allocObject();
  uint64_t v5 = sub_1B2AF30F0(a1, 100, 0);
  if (v2) {
    swift_deallocPartialClassInstance();
  }
  else {
    *(void *)(v3 + 16) = v5;
  }
  return v3;
}

uint64_t sub_1B2AF1B38()
{
  sub_1B299B3BC();
  v1[9] = v2;
  v1[10] = v0;
  uint64_t v3 = sub_1B2E81F08();
  v1[11] = v3;
  sub_1B299D2A8(v3);
  v1[12] = v4;
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  uint64_t v5 = sub_1B2E81FB8();
  v1[15] = v5;
  sub_1B299D2A8(v5);
  v1[16] = v6;
  v1[17] = sub_1B29A4C44();
  uint64_t v7 = sub_1B2E81F38();
  v1[18] = v7;
  sub_1B299D2A8(v7);
  v1[19] = v8;
  v1[20] = sub_1B29A4C44();
  v1[21] = type metadata accessor for LogSignpost();
  v1[22] = sub_1B29A4C44();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B2AF1C64()
{
  uint64_t v20 = v0;
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  sub_1B29A4B98(*(void *)(v0 + 120), (uint64_t)qword_1EB7E6600);
  uint64_t v1 = sub_1B29A0894();
  v2(v1);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v3 = sub_1B2E81F28();
  os_signpost_type_t v4 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    os_signpost_id_t v6 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v3, v4, v6, "EntitySimilarity.InProcessService.computeSimilarity", "", v5, 2u);
    MEMORY[0x1B3EB30C0](v5, -1, -1);
  }
  uint64_t v7 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v11 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v17 = *(void *)(v0 + 160);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v9, v11);
  sub_1B2E81F78();
  swift_allocObject();
  sub_1B29A4400();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  uint64_t v12 = sub_1B29A1A74((uint64_t)"EntitySimilarity.InProcessService.computeSimilarity");
  v13(v12, v17, v7);
  sub_1B2AF38E8((uint64_t)v18);
  long long v14 = v19;
  *(unsigned char *)(v0 + 48) = v18[0];
  *(_OWORD *)(v0 + 56) = v14;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1B2AF1F5C;
  return EntitySimilarityRequestManager.computeSimilarity(request:)(v0 + 16, v0 + 48);
}

uint64_t sub_1B2AF1F5C()
{
  sub_1B299B3BC();
  sub_1B299B708();
  *(void *)(v1 + 192) = v0;
  swift_task_dealloc();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1B2AF2044()
{
  double v1 = *(double *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 40);
  id v4 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *(void *)(v0 + 32));
  id v5 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v3);
  uint64_t v6 = *(void *)(v0 + 176);
  sub_1B2AEB9E4();
  id v7 = sub_1B2AEB980(v4, v5, v2);
  id v8 = objc_msgSend(objc_allocWithZone((Class)GDEntitySimilarityResult), sel_initWithRequest_similarityScore_, v7, v1);

  sub_1B2AF2AE0(v6);
  sub_1B2A93478(v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(id))(v0 + 8);
  return v9(v8);
}

uint64_t sub_1B2AF219C()
{
  sub_1B2AF2AE0(*(void *)(v0 + 176));
  sub_1B2A93478(*(void *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B2AF2250()
{
  sub_1B299B3BC();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = sub_1B2E81F08();
  v1[4] = v3;
  sub_1B299D2A8(v3);
  v1[5] = v4;
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  uint64_t v5 = sub_1B2E81FB8();
  v1[8] = v5;
  sub_1B299D2A8(v5);
  v1[9] = v6;
  v1[10] = sub_1B29A4C44();
  uint64_t v7 = sub_1B2E81F38();
  v1[11] = v7;
  sub_1B299D2A8(v7);
  v1[12] = v8;
  v1[13] = sub_1B29A4C44();
  v1[14] = type metadata accessor for LogSignpost();
  v1[15] = sub_1B29A4C44();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1B2AF237C()
{
  uint64_t v32 = v0;
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  sub_1B29A4B98(v0[8], (uint64_t)qword_1EB7E6600);
  uint64_t v1 = sub_1B29A0894();
  v2(v1);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v3 = sub_1B2E81F28();
  os_signpost_type_t v4 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    os_signpost_id_t v6 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v3, v4, v6, "EntitySimilarity.InProcessService.batchComputeSimilarity", "", v5, 2u);
    MEMORY[0x1B3EB30C0](v5, -1, -1);
  }
  uint64_t v27 = v0[13];
  uint64_t v25 = v0[11];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[7];
  uint64_t v10 = v0[4];
  uint64_t v9 = v0[5];
  unint64_t v11 = v0[2];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v10);
  sub_1B2E81F78();
  swift_allocObject();
  sub_1B29A4400();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v12 = sub_1B29A1A74((uint64_t)"EntitySimilarity.InProcessService.batchComputeSimilarity");
  v13(v12, v27, v25);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B2E83448();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (v14)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1B29C07BC();
    if (v14 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v16 = 0;
    uint64_t v15 = v29;
    unint64_t v17 = v11 & 0xC000000000000001;
    uint64_t v28 = v0[2] + 32;
    do
    {
      if (v17) {
        id v18 = (id)MEMORY[0x1B3EB1A20](v16, v0[2]);
      }
      else {
        id v18 = *(id *)(v28 + 8 * v16);
      }
      long long v19 = v18;
      sub_1B2AF38E8((uint64_t)v30);

      char v20 = v30[0];
      long long v21 = v31;
      unint64_t v22 = *(void *)(v29 + 16);
      if (v22 >= *(void *)(v29 + 24) >> 1)
      {
        long long v26 = v31;
        sub_1B29C07BC();
        long long v21 = v26;
      }
      ++v16;
      *(void *)(v29 + 16) = v22 + 1;
      uint64_t v23 = v29 + 24 * v22;
      *(unsigned char *)(v23 + 32) = v20;
      *(_OWORD *)(v23 + 40) = v21;
    }
    while (v14 != v16);
  }
  v0[16] = v15;
  int64_t v24 = (void *)swift_task_alloc();
  v0[17] = v24;
  *int64_t v24 = v0;
  v24[1] = sub_1B2AF2774;
  EntitySimilarityRequestManager.batchComputeSimilarity(requestBatch:)(v15);
}

uint64_t sub_1B2AF2774()
{
  sub_1B299B3BC();
  sub_1B299B708();
  *(void *)(v2 + 144) = v1;
  *(void *)(v2 + 152) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1B2AF2864()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1B2E832F8();
    sub_1B2AEB9E4();
    uint64_t v3 = (double *)(v1 + 56);
    do
    {
      double v4 = *(v3 - 3);
      id v5 = sub_1B2AEB980(objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *((void *)v3 - 1)), objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *(void *)v3), *((unsigned __int8 *)v3 - 16));
      objc_msgSend(objc_allocWithZone((Class)GDEntitySimilarityResult), sel_initWithRequest_similarityScore_, v5, v4);

      sub_1B2E832C8();
      sub_1B2E83308();
      sub_1B2E83318();
      sub_1B2E832D8();
      v3 += 4;
      --v2;
    }
    while (v2);
    uint64_t v0 = v9;
    uint64_t v6 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  sub_1B29A4EB8();
  sub_1B2A93478(0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v6);
}

uint64_t sub_1B2AF2A38()
{
  swift_bridgeObjectRelease();
  sub_1B29A4EB8();
  sub_1B2A93478(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_1B2AF2AE0(uint64_t a1)
{
  sub_1B2E81F48();
  sub_1B299D278();
  uint64_t v32 = v3;
  uint64_t v33 = v2;
  MEMORY[0x1F4188790](v2);
  sub_1B299E4A0();
  uint64_t v34 = v5 - v4;
  uint64_t v6 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B299E4A0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = type metadata accessor for LogSignpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v19, a1 + *(int *)(v20 + 24), v13);
  uint64_t v35 = *(const char **)a1;
  char v21 = *(unsigned char *)(a1 + 16);
  swift_retain();
  unint64_t v22 = sub_1B2E81F28();
  sub_1B2E81F58();
  os_signpost_type_t v31 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
  }
  uint64_t v30 = v8;
  if ((v21 & 1) == 0)
  {
    uint64_t v24 = v34;
    if (v35)
    {
      uint64_t v26 = v32;
      uint64_t v25 = v33;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v26 + 88))(v24, v25) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v27 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
        uint64_t v27 = "";
      }
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      os_signpost_id_t v29 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v22, v31, v29, v35, v27, v28, 2u);
      MEMORY[0x1B3EB30C0](v28, -1, -1);
      uint64_t v8 = v30;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v24 = v34;
  if ((unint64_t)v35 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v35 >> 11 != 27)
  {
    uint64_t v26 = v32;
    uint64_t v25 = v33;
    if (v35 >> 16 <= 0x10)
    {
      uint64_t v35 = &v36;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for EntitySimilarityInProcessService()
{
  return self;
}

uint64_t EntitySimilarityRequestManager.computeSimilarity(request:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  *(unsigned char *)(v3 + 48) = *(unsigned char *)a2;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(a2 + 8);
  return sub_1B299D7F8((uint64_t)sub_1B2AF2E20);
}

uint64_t sub_1B2AF2E20()
{
  uint64_t v6 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  v4[0] = *(unsigned char *)(v0 + 48);
  long long v5 = *(_OWORD *)(v0 + 32);
  sub_1B2AF31B4(v4, v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t EntitySimilarityRequestManager.batchComputeSimilarity(requestBatch:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_1B299D7F8((uint64_t)sub_1B2AF2EC8);
}

uint64_t sub_1B2AF2EC8()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    sub_1B2AF3824();
    uint64_t v4 = v23;
    long long v5 = (char *)(v1 + 32);
    unint64_t v6 = *(void *)(v23 + 16);
    uint64_t v7 = v2;
    do
    {
      char v9 = *v5;
      v5 += 24;
      char v8 = v9;
      uint64_t v23 = v4;
      unint64_t v10 = v6 + 1;
      if (v6 >= *(void *)(v4 + 24) >> 1)
      {
        sub_1B29C0780();
        uint64_t v4 = v23;
      }
      *(void *)(v4 + 16) = v10;
      *(unsigned char *)(v4 + v6++ + 32) = v8;
      --v7;
    }
    while (v7);
  }
  else
  {
    unint64_t v10 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  }
  swift_bridgeObjectRelease();
  if (v10 == 1)
  {
    if (v2)
    {
      uint64_t v11 = *(void *)(v0 + 16);
      sub_1B2AF3824();
      uint64_t v3 = v23;
      uint64_t v12 = (char *)(v11 + 32);
      unint64_t v13 = *(void *)(v23 + 16);
      do
      {
        char v15 = *v12;
        v12 += 24;
        char v14 = v15;
        uint64_t v23 = v3;
        if (v13 >= *(void *)(v3 + 24) >> 1)
        {
          sub_1B29C0780();
          uint64_t v3 = v23;
        }
        *(void *)(v3 + 16) = v13 + 1;
        *(unsigned char *)(v3 + v13++ + 32) = v14;
        --v2;
      }
      while (v2);
      goto LABEL_16;
    }
    if (*(void *)(v3 + 16))
    {
LABEL_16:
      uint64_t v16 = *(void *)(v0 + 16);
      char v17 = *(unsigned char *)(v3 + 32);
      swift_bridgeObjectRelease();
      LOBYTE(v23) = v17;
      uint64_t v18 = sub_1B2AF3450(v16, &v23);
      uint64_t v19 = *(uint64_t (**)(void *))(v0 + 8);
      return v19(v18);
    }
    swift_bridgeObjectRelease();
  }
  sub_1B2AEC19C();
  swift_allocError();
  *char v21 = xmmword_1B2EC00B0;
  swift_willThrow();
  unint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1B2AF30F0(void *a1, uint64_t a2, char a3)
{
  sub_1B2A4F7BC((uint64_t)v12);

  if (v4)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v13;
    long long v9 = v12[1];
    *(_OWORD *)(v3 + 16) = v12[0];
    *(_OWORD *)(v3 + 32) = v9;
    long long v10 = v12[3];
    *(_OWORD *)(v3 + 48) = v12[2];
    *(_OWORD *)(v3 + 64) = v10;
    *(void *)(v3 + 80) = v8;
    *(void *)(v3 + 88) = a2;
    *(unsigned char *)(v3 + 96) = a3 & 1;
  }
  return v3;
}

void sub_1B2AF31B4(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v5 = *a1;
  uint64_t v7 = *((void *)a1 + 1);
  uint64_t v6 = *((void *)a1 + 2);
  if (*a1)
  {
    if (v5 == 1)
    {
      *(void *)a2 = 0;
    }
    else
    {
      if (qword_1EB7E3A20 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_1B2E81FB8();
      sub_1B29A4B98(v20, (uint64_t)qword_1EB7E4AD8);
      char v21 = sub_1B2E81F98();
      os_log_type_t v22 = sub_1B2E82D98();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_1B2996000, v21, v22, "Unknown mode, returning 0 similarity.", v23, 2u);
        MEMORY[0x1B3EB30C0](v23, -1, -1);
      }

      *(void *)a2 = 0;
      LOBYTE(v5) = 2;
    }
    *(unsigned char *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v7;
    *(void *)(a2 + 24) = v6;
  }
  else
  {
    uint64_t v8 = v2[2];
    if (v8)
    {
      uint64_t v9 = *((void *)a1 + 1);
      uint64_t v10 = v2[9];
      uint64_t v11 = v2[10];
      uint64_t v12 = *((void *)a1 + 2);
      uint64_t v13 = v2[7];
      uint64_t v14 = v2[8];
      uint64_t v16 = v2[5];
      uint64_t v15 = v2[6];
      uint64_t v17 = v2[4];
      v28[1] = v2[3];
      uint64_t v28[2] = v17;
      v28[3] = v16;
      v28[4] = v15;
      v28[5] = v13;
      v28[6] = v14;
      uint64_t v27 = v12;
      v28[7] = v10;
      v28[8] = v11;
      uint64_t v25 = v12;
      uint64_t v26 = v9;
      v28[0] = v9;
      sub_1B2AF37B8(v8);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2AEC618(v28, &v27, 0);
      float v19 = v18;
      sub_1B2AF3710(v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if (!v3)
      {
        *(double *)a2 = v19;
        *(unsigned char *)(a2 + 8) = 0;
        *(void *)(a2 + 16) = v26;
        *(void *)(a2 + 24) = v25;
      }
    }
    else
    {
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      sub_1B2AEC19C();
      swift_allocError();
      *uint64_t v24 = 0xD00000000000003ALL;
      v24[1] = 0x80000001B2E9B140;
      swift_willThrow();
    }
  }
}

void *sub_1B2AF3450(uint64_t a1, unsigned char *a2)
{
  if (*a2)
  {
    if (*a2 == 1)
    {
      return (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v13 = *(void *)(a1 + 16);
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      if (v13)
      {
        uint64_t v25 = (void *)MEMORY[0x1E4FBC860];
        sub_1B29C0730();
        uint64_t v4 = v25;
        unint64_t v14 = v25[2];
        uint64_t v15 = 32 * v14 + 32;
        uint64_t v16 = (_OWORD *)(a1 + 40);
        do
        {
          char v17 = *((unsigned char *)v16 - 8);
          long long v18 = *v16;
          uint64_t v25 = v4;
          unint64_t v19 = v14 + 1;
          if (v14 >= v4[3] >> 1)
          {
            long long v24 = v18;
            sub_1B29C0730();
            long long v18 = v24;
            uint64_t v4 = v25;
          }
          _OWORD v4[2] = v19;
          uint64_t v20 = (char *)v4 + v15;
          *(void *)uint64_t v20 = 0;
          v20[8] = v17;
          *((_OWORD *)v20 + 1) = v18;
          v15 += 32;
          uint64_t v16 = (_OWORD *)((char *)v16 + 24);
          unint64_t v14 = v19;
          --v13;
        }
        while (v13);
      }
    }
  }
  else
  {
    uint64_t v5 = v2[2];
    if (v5)
    {
      uint64_t v6 = v2[9];
      uint64_t v7 = v2[10];
      uint64_t v8 = v2[7];
      uint64_t v9 = v2[8];
      uint64_t v11 = v2[5];
      uint64_t v10 = v2[6];
      unint64_t v12 = v2[4];
      uint64_t v25 = (void *)v2[3];
      unint64_t v26 = v12;
      uint64_t v27 = v11;
      uint64_t v28 = v10;
      uint64_t v29 = v8;
      uint64_t v30 = v9;
      uint64_t v33 = v8;
      uint64_t v31 = v6;
      uint64_t v32 = v7;
      uint64_t v23 = v2[11];
      sub_1B2AF37B8(v5);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v4 = (void *)EntitySimilarityEngine.computeSimilarityBatch(batchRequests:batchSize:)(a1, v23);
      sub_1B2AF3710(v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
      uint64_t v4 = &v25;
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      sub_1B2AEC19C();
      swift_allocError();
      *char v21 = 0xD00000000000003ALL;
      v21[1] = 0x80000001B2E9B140;
      swift_willThrow();
    }
  }
  return v4;
}

uint64_t EntitySimilarityRequestManager.deinit()
{
  sub_1B29A29A4();
  return v0;
}

uint64_t EntitySimilarityRequestManager.__deallocating_deinit()
{
  sub_1B29A29A4();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2AF3710(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for EntitySimilarityRequestManager()
{
  return self;
}

uint64_t method lookup function for EntitySimilarityRequestManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EntitySimilarityRequestManager);
}

uint64_t sub_1B2AF37B8(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1B2AF3824()
{
  sub_1B29C0780();
}

void sub_1B2AF3848(uint64_t a1@<X8>)
{
  objc_msgSend(v1, sel_similarityScore);
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v1, sel_request);
  sub_1B2AF38E8((uint64_t)v8);

  if (!v2)
  {
    char v7 = v8[0];
    *(void *)a1 = v5;
    *(unsigned char *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = v9;
  }
}

uint64_t sub_1B2AF38E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v2, sel_entityId1);
  if (!v4
    || (uint64_t v5 = v4,
        id v6 = objc_msgSend(v4, sel_intValue),
        v5,
        (id v7 = objc_msgSend(v2, sel_entityId2)) == 0))
  {
LABEL_7:
    sub_1B2AEC19C();
    swift_allocError();
    *uint64_t v11 = 0;
    v11[1] = 0;
    return swift_willThrow();
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v7, sel_intValue);

  uint64_t result = (uint64_t)objc_msgSend(v2, sel_entitySimilarityMode);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    if (result < 3)
    {
      *(unsigned char *)a1 = result;
      *(void *)(a1 + 8) = v6;
      *(void *)(a1 + 16) = v9;
      return result;
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t EntitySimilarityMode.description.getter()
{
  uint64_t v1 = 0x6F4D7261656E696CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E776F6E6B6E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD00000000000001FLL;
  }
}

IntelligencePlatform::EntitySimilarityMode_optional __swiftcall EntitySimilarityMode.init(rawValue:)(Swift::Int32 rawValue)
{
  if (rawValue >= 3) {
    char v2 = 3;
  }
  else {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (IntelligencePlatform::EntitySimilarityMode_optional)rawValue;
}

uint64_t EntitySimilarityMode.rawValue.getter()
{
  return *v0;
}

uint64_t sub_1B2AF3A84()
{
  return sub_1B29AE4FC(*v0);
}

uint64_t sub_1B2AF3A8C(uint64_t a1)
{
  return sub_1B2ABAB08(a1, *v1);
}

uint64_t sub_1B2AF3A94(uint64_t a1)
{
  return sub_1B29F8D38(a1, *v1);
}

IntelligencePlatform::EntitySimilarityMode_optional sub_1B2AF3A9C(Swift::Int32 *a1)
{
  return EntitySimilarityMode.init(rawValue:)(*a1);
}

uint64_t sub_1B2AF3AA4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = EntitySimilarityMode.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1B2AF3ACC()
{
  return sub_1B2E82808();
}

uint64_t sub_1B2AF3B2C()
{
  return sub_1B2E827A8();
}

double EntitySimilarityResult.similarityScore.getter()
{
  return *(double *)v0;
}

void EntitySimilarityResult.similarityScore.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*EntitySimilarityResult.similarityScore.modify())(void)
{
  return nullsub_1;
}

__n128 EntitySimilarityResult.request.getter@<Q0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = v1->n128_u8[8];
  __n128 result = v1[1];
  *(__n128 *)(a1 + 8) = result;
  return result;
}

__n128 EntitySimilarityResult.request.setter(uint64_t a1)
{
  v1->n128_u8[8] = *(unsigned char *)a1;
  __n128 result = *(__n128 *)(a1 + 8);
  v1[1] = result;
  return result;
}

uint64_t (*EntitySimilarityResult.request.modify())(void)
{
  return nullsub_1;
}

BOOL static EntitySimilarityResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  return *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && *(void *)(a1 + 24) == *(void *)(a2 + 24);
}

BOOL static EntitySimilarityRequest.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2);
}

uint64_t EntitySimilarityResult.hash(into:)()
{
  return sub_1B2E839C8();
}

uint64_t sub_1B2AF3CD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6972616C696D6973 && a2 == 0xEF65726F63537974;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2AF3DE4(char a1)
{
  if (a1) {
    return 0x74736575716572;
  }
  else {
    return 0x6972616C696D6973;
  }
}

uint64_t sub_1B2AF3E28()
{
  return sub_1B2AF3DE4(*v0);
}

uint64_t sub_1B2AF3E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AF3CD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AF3E58(uint64_t a1)
{
  unint64_t v2 = sub_1B2AF4968();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AF3E94(uint64_t a1)
{
  unint64_t v2 = sub_1B2AF4968();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EntitySimilarityResult.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C3D818);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29A0498();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AF4968();
  sub_1B2AF5258();
  sub_1B2E836A8();
  if (!v1)
  {
    sub_1B2AF49B4();
    sub_1B2E836D8();
  }
  uint64_t v4 = sub_1B299B834();
  return v5(v4);
}

uint64_t EntitySimilarityResult.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t EntitySimilarityResult.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C3D830);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AF4968();
  sub_1B29A4EDC();
  if (!v2)
  {
    sub_1B2E83588();
    uint64_t v7 = v6;
    sub_1B2AF4A00();
    sub_1B29A446C();
    uint64_t v8 = sub_1B299B8A4();
    v9(v8);
    *(void *)a2 = v7;
    *(unsigned char *)(a2 + 8) = 0;
    *(_OWORD *)(a2 + 16) = v11;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
}

uint64_t sub_1B2AF4204@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EntitySimilarityResult.init(from:)(a1, a2);
}

uint64_t sub_1B2AF421C(void *a1)
{
  return EntitySimilarityResult.encode(to:)(a1);
}

uint64_t sub_1B2AF423C()
{
  return sub_1B2E839E8();
}

void EntitySimilarityRequest.mode.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *EntitySimilarityRequest.mode.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*EntitySimilarityRequest.mode.modify())(void)
{
  return nullsub_1;
}

void EntitySimilarityRequest.entityId1.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
}

void *EntitySimilarityRequest.entityId1.setter(void *result)
{
  *(void *)(v1 + 8) = *result;
  return result;
}

uint64_t (*EntitySimilarityRequest.entityId1.modify())(void)
{
  return nullsub_1;
}

void EntitySimilarityRequest.entityId2.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

void *EntitySimilarityRequest.entityId2.setter(void *result)
{
  *(void *)(v1 + 16) = *result;
  return result;
}

uint64_t (*EntitySimilarityRequest.entityId2.modify())(void)
{
  return nullsub_1;
}

uint64_t EntitySimilarityRequest.hash(into:)()
{
  return sub_1B2E839C8();
}

uint64_t sub_1B2AF43B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701080941 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6449797469746E65 && a2 == 0xE900000000000031;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6449797469746E65 && a2 == 0xE900000000000032)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B2AF44F0(char a1)
{
  if (a1) {
    return 0x6449797469746E65;
  }
  else {
    return 1701080941;
  }
}

uint64_t sub_1B2AF4540()
{
  return sub_1B2AF44F0(*v0);
}

uint64_t sub_1B2AF4548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2AF43B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2AF4570(uint64_t a1)
{
  unint64_t v2 = sub_1B2AF4A4C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2AF45AC(uint64_t a1)
{
  unint64_t v2 = sub_1B2AF4A4C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EntitySimilarityRequest.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C3D840);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29A0498();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AF4A4C();
  sub_1B2AF5258();
  sub_1B2AF4A98();
  sub_1B2E836D8();
  if (!v1)
  {
    sub_1B29CB42C();
    sub_1B29A1A94();
    sub_1B29A1A94();
  }
  uint64_t v4 = sub_1B299B834();
  return v5(v4);
}

uint64_t EntitySimilarityRequest.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t EntitySimilarityRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C3D858);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2AF4A4C();
  sub_1B29A4EDC();
  if (!v2)
  {
    sub_1B2AF4B4C();
    sub_1B29A446C();
    sub_1B29CB3E0();
    sub_1B2AF522C();
    sub_1B2AF522C();
    uint64_t v7 = sub_1B299B8A4();
    v8(v7);
    *(unsigned char *)a2 = v9;
    *(void *)(a2 + 8) = v9;
    *(void *)(a2 + 16) = v9;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
}

uint64_t sub_1B2AF4930@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EntitySimilarityRequest.init(from:)(a1, a2);
}

uint64_t sub_1B2AF4948(void *a1)
{
  return EntitySimilarityRequest.encode(to:)(a1);
}

unint64_t sub_1B2AF4968()
{
  unint64_t result = qword_1E9C3D820;
  if (!qword_1E9C3D820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D820);
  }
  return result;
}

unint64_t sub_1B2AF49B4()
{
  unint64_t result = qword_1E9C3D828;
  if (!qword_1E9C3D828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D828);
  }
  return result;
}

unint64_t sub_1B2AF4A00()
{
  unint64_t result = qword_1E9C3D838;
  if (!qword_1E9C3D838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D838);
  }
  return result;
}

unint64_t sub_1B2AF4A4C()
{
  unint64_t result = qword_1E9C3D848;
  if (!qword_1E9C3D848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D848);
  }
  return result;
}

unint64_t sub_1B2AF4A98()
{
  unint64_t result = qword_1E9C3D850;
  if (!qword_1E9C3D850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D850);
  }
  return result;
}

uint64_t sub_1B2AF4AE4()
{
  return sub_1B2E839E8();
}

unint64_t sub_1B2AF4B4C()
{
  unint64_t result = qword_1E9C3D860;
  if (!qword_1E9C3D860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D860);
  }
  return result;
}

uint64_t EntitySimilarityMode.gdMode.getter()
{
  return *v0;
}

id GDEntityIdentifier.swiftUntypedId.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(v1, sel_intValue);
  *a1 = result;
  return result;
}

unint64_t sub_1B2AF4BD8()
{
  unint64_t result = qword_1E9C3D868;
  if (!qword_1E9C3D868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D868);
  }
  return result;
}

unint64_t sub_1B2AF4C28()
{
  unint64_t result = qword_1E9C3D870;
  if (!qword_1E9C3D870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D870);
  }
  return result;
}

unint64_t sub_1B2AF4C78()
{
  unint64_t result = qword_1E9C3D878;
  if (!qword_1E9C3D878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D878);
  }
  return result;
}

void type metadata accessor for EntitySimilarityError()
{
}

void type metadata accessor for EntitySimilarityMode()
{
}

uint64_t getEnumTagSinglePayload for EntitySimilarityResult(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      BOOL v4 = v3 >= 3;
      int v2 = v3 - 3;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntitySimilarityResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

void type metadata accessor for EntitySimilarityResult()
{
}

uint64_t getEnumTagSinglePayload for EntitySimilarityRequest(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && a1[24])
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 3;
      int v2 = v3 - 3;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntitySimilarityRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

void type metadata accessor for EntitySimilarityRequest()
{
}

unsigned char *_s20IntelligencePlatform20EntitySimilarityModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AF4EC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntitySimilarityRequest.CodingKeys()
{
  return &type metadata for EntitySimilarityRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for EntitySimilarityResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2AF4FC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntitySimilarityResult.CodingKeys()
{
  return &type metadata for EntitySimilarityResult.CodingKeys;
}

unint64_t sub_1B2AF5004()
{
  unint64_t result = qword_1E9C3D880;
  if (!qword_1E9C3D880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D880);
  }
  return result;
}

unint64_t sub_1B2AF5054()
{
  unint64_t result = qword_1E9C3D888;
  if (!qword_1E9C3D888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D888);
  }
  return result;
}

unint64_t sub_1B2AF50A4()
{
  unint64_t result = qword_1E9C3D890;
  if (!qword_1E9C3D890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D890);
  }
  return result;
}

unint64_t sub_1B2AF50F4()
{
  unint64_t result = qword_1E9C3D898;
  if (!qword_1E9C3D898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D898);
  }
  return result;
}

unint64_t sub_1B2AF5144()
{
  unint64_t result = qword_1E9C3D8A0;
  if (!qword_1E9C3D8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D8A0);
  }
  return result;
}

unint64_t sub_1B2AF5194()
{
  unint64_t result = qword_1E9C3D8A8;
  if (!qword_1E9C3D8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D8A8);
  }
  return result;
}

unint64_t sub_1B2AF51E0()
{
  unint64_t result = qword_1E9C3D8B0;
  if (!qword_1E9C3D8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3D8B0);
  }
  return result;
}

uint64_t sub_1B2AF522C()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2AF5258()
{
  return sub_1B2E83A38();
}

uint64_t destroy for EntitySimilarityVectorView()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntitySimilarityVectorView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EntitySimilarityVectorView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[4];
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = v4;
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EntitySimilarityVectorView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntentHandler(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntentHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntitySimilarityVectorView()
{
  return &type metadata for EntitySimilarityVectorView;
}

uint64_t EntitySubgraphView.accessAssertion.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t destroy for EntitySummaryView()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntitySummaryView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EntitySummaryView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[4];
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = v4;
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EntitySummaryView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntitySummaryView(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntitySummaryView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntitySubgraphView()
{
  return &type metadata for EntitySubgraphView;
}

uint64_t destroy for EntitySummary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntitySummary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v12 = *(void *)(a2 + 144);
  uint64_t v11 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 144) = v12;
  *(void *)(a1 + 152) = v11;
  uint64_t v13 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EntitySummary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v4;
  uint64_t v5 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v5;
  return a1;
}

void *initializeWithTake for EntitySummary(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB1uLL);
}

uint64_t assignWithTake for EntitySummary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntitySummary(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 177))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntitySummary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 176) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 177) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 177) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EntitySummary()
{
  return &type metadata for EntitySummary;
}

ValueMetadata *type metadata accessor for EntitySummaryView()
{
  return &type metadata for EntitySummaryView;
}

uint64_t sub_1B2AF5C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  id v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_viewArtifactTableName);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1B2E82378();
    unint64_t v12 = v11;
  }
  else
  {
    unint64_t v12 = 0xEE007972616D6D75;
    uint64_t v10 = 0x735F797469746E65;
  }
  uint64_t result = swift_unknownObjectRelease();
  *a4 = a1;
  a4[1] = v10;
  a4[2] = v12;
  a4[3] = a2;
  a4[4] = a3;
  a4[5] = 0x44495F444DLL;
  a4[6] = 0xE500000000000000;
  return result;
}

uint64_t sub_1B2AF5D20@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v119 = a1;
  uint64_t v115 = a3;
  v123[7] = sub_1B2E80B98();
  sub_1B299D278();
  uint64_t v116 = v4;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v114 = &v85[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v113 = &v85[-v9];
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = &v85[-v10];
  uint64_t v12 = sub_1B29A3EB4(&qword_1EB7E2790);
  sub_1B299D278();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  char v17 = &v85[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_1B29A3EB4(&qword_1EB7E2E90);
  sub_1B299D278();
  MEMORY[0x1F4188790](v19);
  char v21 = &v85[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_bridgeObjectRetain();
  sub_1B2E814D8();
  v122[3] = sub_1B2E81508();
  v122[4] = MEMORY[0x1E4F62E90];
  sub_1B29D1C70(v122);
  sub_1B29A4F00();
  sub_1B2E81518();
  v121[3] = MEMORY[0x1E4FBB550];
  v121[4] = MEMORY[0x1E4F62FB0];
  v121[0] = a2;
  v123[3] = sub_1B2E80BE8();
  v123[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v123);
  sub_1B2E812D8();
  sub_1B2A55520((uint64_t)v121);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v122);
  sub_1B2E81498();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v123);
  sub_1B2A72DB8();
  uint64_t v22 = v120;
  uint64_t v23 = sub_1B2E80A48();
  if (v22)
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v17, v12);
    sub_1B29A08B0();
    return v24();
  }
  else
  {
    int64_t v117 = v11;
    uint64_t v119 = v21;
    char v112 = v17;
    uint64_t v120 = v14;
    uint64_t v111 = v12;
    uint64_t v118 = v23;
    uint64_t v26 = sub_1B2DD07F8();
    uint64_t v27 = 0;
    uint64_t v110 = v18;
    uint64_t v28 = v26;
    uint64_t v29 = (void (**)(void))(v116 + 8);
    uint64_t v30 = MEMORY[0x1E4FBC860];
    unint64_t v109 = 0x80000001B2E91AA0;
    unint64_t v108 = 0x80000001B2E91AE0;
    sub_1B299F654();
LABEL_4:
    uint64_t v116 = v30;
    while (v28)
    {
      sub_1B29A4F00();
      sub_1B2A1FEDC();
      if (v27)
      {
        while (1)
        {
          swift_unexpectedError();
          __break(1u);
        }
      }
      uint64_t v31 = sub_1B2E82BA8();
      char v33 = v32;
      uint64_t v34 = *v29;
      sub_1B29A08B0();
      v34();
      if ((v33 & 1) == 0)
      {
        sub_1B2A1F188();
        uint64_t v40 = v39;
        uint64_t v42 = v41;
        sub_1B2A1F188();
        uint64_t v106 = v43;
        uint64_t v105 = v44;
        sub_1B2AF6634();
        uint64_t v104 = v45;
        uint64_t v103 = v46;
        sub_1B29A1ABC();
        uint64_t v102 = v47;
        uint64_t v101 = v48;
        sub_1B29A1ABC();
        uint64_t v100 = v49;
        uint64_t v99 = v50;
        sub_1B2A1F188();
        uint64_t v98 = v51;
        uint64_t v97 = v52;
        sub_1B2A1F188();
        uint64_t v96 = v53;
        uint64_t v95 = v54;
        sub_1B2AF6634();
        uint64_t v94 = v55;
        uint64_t v93 = v56;
        uint64_t v107 = v42;
        sub_1B2A1F188();
        uint64_t v92 = v57;
        uint64_t v91 = v58;
        uint64_t v87 = v40;
        sub_1B2A1FEDC();
        uint64_t v89 = sub_1B2E82AA8();
        int v86 = v59;
        sub_1B29A08B0();
        v34();
        sub_1B2A1FEDC();
        uint64_t v90 = 0;
        uint64_t v88 = sub_1B2E82BA8();
        char v61 = v60;
        sub_1B29A08B0();
        v34();
        LOBYTE(v122[0]) = v86 & 1;
        LOBYTE(v121[0]) = v61 & 1;
        uint64_t v30 = v116;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29B8C5C();
          uint64_t v30 = v75;
        }
        unint64_t v62 = *(void *)(v30 + 16);
        if (v62 >= *(void *)(v30 + 24) >> 1)
        {
          sub_1B29B8C5C();
          uint64_t v30 = v76;
        }
        *(void *)(v30 + 16) = v62 + 1;
        uint64_t v63 = v30 + 184 * v62;
        uint64_t v64 = v87;
        *(void *)(v63 + 32) = v31;
        *(void *)(v63 + 40) = v64;
        uint64_t v65 = v106;
        *(void *)(v63 + 48) = v107;
        *(void *)(v63 + 56) = v65;
        uint64_t v66 = v104;
        *(void *)(v63 + 64) = v105;
        *(void *)(v63 + 72) = v66;
        uint64_t v67 = v102;
        *(void *)(v63 + 80) = v103;
        *(void *)(v63 + 88) = v67;
        uint64_t v68 = v100;
        *(void *)(v63 + 96) = v101;
        *(void *)(v63 + 104) = v68;
        uint64_t v69 = v98;
        *(void *)(v63 + 112) = v99;
        *(void *)(v63 + 120) = v69;
        uint64_t v70 = v96;
        *(void *)(v63 + 128) = v97;
        *(void *)(v63 + 136) = v70;
        uint64_t v71 = v94;
        *(void *)(v63 + 144) = v95;
        *(void *)(v63 + 152) = v71;
        uint64_t v72 = v92;
        *(void *)(v63 + 160) = v93;
        *(void *)(v63 + 168) = v72;
        uint64_t v73 = v89;
        *(void *)(v63 + 176) = v91;
        *(void *)(v63 + 184) = v73;
        *(unsigned char *)(v63 + 192) = v122[0];
        LODWORD(v73) = v123[0];
        *(_DWORD *)(v63 + 196) = *(_DWORD *)((char *)v123 + 3);
        *(_DWORD *)(v63 + 193) = v73;
        *(void *)(v63 + 200) = v88;
        *(unsigned char *)(v63 + 208) = v121[0];
        swift_release();
        uint64_t v74 = v90;
        uint64_t v28 = sub_1B2DD07F8();
        uint64_t v27 = v74;
        if (v74)
        {
          swift_release();
          uint64_t v81 = sub_1B2AF6618();
          v82(v81);
          uint64_t v83 = sub_1B29A29CC();
          v84(v83);
          return swift_bridgeObjectRelease();
        }
        goto LABEL_4;
      }
      if (qword_1EB7E3A20 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_1B2E81FB8();
      sub_1B29A4B98(v35, (uint64_t)qword_1EB7E4AD8);
      char v36 = sub_1B2E81F98();
      os_log_type_t v37 = sub_1B2E82DB8();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl(&dword_1B2996000, v36, v37, "MD_ID isn't available in entity_summary view", v38, 2u);
        MEMORY[0x1B3EB30C0](v38, -1, -1);
      }

      swift_release();
      uint64_t v28 = sub_1B2DD07F8();
      uint64_t v27 = 0;
    }
    swift_release();
    uint64_t v77 = sub_1B2AF6618();
    v78(v77);
    uint64_t v79 = sub_1B29A29CC();
    uint64_t result = v80(v79);
    *uint64_t v115 = v116;
  }
  return result;
}

uint64_t sub_1B2AF6618()
{
  return v0;
}

void sub_1B2AF6634()
{
  sub_1B2A1F188();
}

uint64_t static PersonEntityTaggingService.operatingPoints(for:)(unint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = a1;
    uint64_t v3 = qword_1E9C38BB8;
    swift_bridgeObjectRetain();
    if (v3 != -1) {
LABEL_25:
    }
      swift_once();
    uint64_t v4 = 0;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v6 = &qword_1E9C3D000;
    unint64_t v27 = v2;
    while (1)
    {
      uint64_t v7 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      char v8 = *(unsigned char *)(v2 + v4 + 32);
      uint64_t v9 = v6[281];
      if (*(void *)(v9 + 16) && (unint64_t v10 = sub_1B29DB684(), (v11 & 1) != 0))
      {
        unint64_t v2 = v1;
        id v12 = *(id *)(*(void *)(v9 + 56) + 8 * v10);
        swift_isUniquelyReferenced_nonNull_native();
        unint64_t v13 = sub_1B29DB684();
        if (__OFADD__(v5[2], (v14 & 1) == 0)) {
          goto LABEL_23;
        }
        unint64_t v1 = v13;
        char v15 = v14;
        sub_1B29A3EB4(&qword_1E9C3D968);
        if (sub_1B2E83398())
        {
          unint64_t v16 = sub_1B29DB684();
          if ((v15 & 1) != (v17 & 1))
          {
            uint64_t result = sub_1B2E83858();
            __break(1u);
            return result;
          }
          unint64_t v1 = v16;
        }
        if (v15)
        {
          uint64_t v18 = v5[7];

          *(void *)(v18 + 8 * v1) = v12;
        }
        else
        {
          sub_1B2AF7C38((uint64_t)&v5[v1 >> 6]);
          *(unsigned char *)(v5[6] + v1) = v8;
          *(void *)(v5[7] + 8 * v1) = v12;
          uint64_t v23 = v5[2];
          BOOL v24 = __OFADD__(v23, 1);
          uint64_t v25 = v23 + 1;
          if (v24) {
            goto LABEL_24;
          }
          v5[2] = v25;
        }
        swift_bridgeObjectRelease();
        unint64_t v1 = v2;
        unint64_t v2 = v27;
        uint64_t v6 = &qword_1E9C3D000;
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t v19 = sub_1B29DB684();
        char v21 = v20;
        swift_bridgeObjectRelease();
        if (v21)
        {
          swift_isUniquelyReferenced_nonNull_native();
          sub_1B29A3EB4(&qword_1E9C3D968);
          sub_1B2E83398();
          uint64_t v22 = *(void **)(v5[7] + 8 * v19);
          type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints();
          sub_1B2AF7990();
          sub_1B2E833B8();

          swift_bridgeObjectRelease();
        }
      }
      ++v4;
      if (v7 == v1)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
  }
  return MEMORY[0x1E4FBC868];
}

uint64_t static PersonEntityTaggingService.rocCurve(for:)()
{
  type metadata accessor for PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic();
  sub_1B2AF7990();

  return sub_1B2E82148();
}

id sub_1B2AF6934()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints());
  id result = PersonEntityTaggingService.PersonETOperatingPoints.init(precision0point9:precision0point8:precision0point7:recall0point9:recall0point8:recall0point7:highPrecision:highRecall:highF1:)(0.9, 0.8, 0.7, 0.6, 0.75, 0.8, 0.9, 0.65, (uint64_t)v0, v1, v2, v3, v4, v5, v6, v7, 0x3FEA3D70A3D70A3DLL);
  qword_1E9C3D8B8 = (uint64_t)result;
  return result;
}

id PersonEntityTaggingService.PersonETOperatingPoints.__allocating_init(precision0point9:precision0point8:precision0point7:recall0point9:recall0point8:recall0point7:highPrecision:highRecall:highF1:)(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17)
{
  id v25 = objc_allocWithZone(v17);
  return PersonEntityTaggingService.PersonETOperatingPoints.init(precision0point9:precision0point8:precision0point7:recall0point9:recall0point8:recall0point7:highPrecision:highRecall:highF1:)(a9, a10, a11, a12, a13, a14, a15, a16, (uint64_t)v25, v26, v27, v28, v29, v30, v31, v32, a17);
}

id sub_1B2AF6A54()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints());
  id result = PersonEntityTaggingService.PersonETOperatingPoints.init(precision0point9:precision0point8:precision0point7:recall0point9:recall0point8:recall0point7:highPrecision:highRecall:highF1:)(0.95, 0.9, 0.8, 0.7, 0.8, 0.85, 0.92, 0.72, (uint64_t)v0, v1, v2, v3, v4, v5, v6, v7, 0x3FEB333333333333);
  qword_1E9C3D8C0 = (uint64_t)result;
  return result;
}

void *sub_1B2AF6AD8()
{
  sub_1B29A3EB4(&qword_1E9C3DA10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2ED1410;
  *(unsigned char *)(inited + 32) = 4;
  if (qword_1E9C38BB0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1E9C3D8C0;
  *(void *)(inited + 40) = qword_1E9C3D8C0;
  *(unsigned char *)(inited + 48) = 7;
  *(void *)(inited + 56) = v1;
  *(unsigned char *)(inited + 64) = 6;
  *(void *)(inited + 72) = v1;
  *(unsigned char *)(inited + 80) = 15;
  *(void *)(inited + 88) = v1;
  *(unsigned char *)(inited + 96) = 17;
  *(void *)(inited + 104) = v1;
  *(unsigned char *)(inited + 112) = 16;
  *(void *)(inited + 120) = v1;
  *(unsigned char *)(inited + 128) = 8;
  *(void *)(inited + 136) = v1;
  *(unsigned char *)(inited + 144) = 9;
  *(void *)(inited + 152) = v1;
  *(unsigned char *)(inited + 160) = 10;
  *(void *)(inited + 168) = v1;
  *(unsigned char *)(inited + 176) = 18;
  *(void *)(inited + 184) = v1;
  *(unsigned char *)(inited + 192) = 20;
  *(void *)(inited + 200) = v1;
  *(unsigned char *)(inited + 208) = 19;
  *(void *)(inited + 216) = v1;
  *(unsigned char *)(inited + 224) = 21;
  uint64_t v2 = qword_1E9C38BA8;
  id v3 = v1;
  if (v2 == -1)
  {
    uint64_t v4 = v3;
  }
  else
  {
    swift_once();
    uint64_t v4 = (void *)qword_1E9C3D8C0;
  }
  uint64_t v5 = (void *)qword_1E9C3D8B8;
  *(void *)(inited + 232) = qword_1E9C3D8B8;
  *(unsigned char *)(inited + 240) = 23;
  *(void *)(inited + 248) = v5;
  *(unsigned char *)(inited + 256) = 26;
  *(void *)(inited + 264) = v5;
  *(unsigned char *)(inited + 272) = 22;
  *(void *)(inited + 280) = v4;
  type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints();
  sub_1B2AF7990();
  id v6 = v5;
  id v7 = v4;
  id result = (void *)sub_1B2E82148();
  off_1E9C3D8C8 = result;
  return result;
}

double PersonEntityTaggingService.PersonETOperatingPoints.precision0point9.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETOperatingPointsInner_precision0point9);
}

double PersonEntityTaggingService.PersonETOperatingPoints.precision0point8.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETOperatingPointsInner_precision0point8);
}

double PersonEntityTaggingService.PersonETOperatingPoints.precision0point7.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETOperatingPointsInner_precision0point7);
}

double PersonEntityTaggingService.PersonETOperatingPoints.recall0point9.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETOperatingPointsInner_recall0point9);
}

double PersonEntityTaggingService.PersonETOperatingPoints.recall0point8.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETOperatingPointsInner_recall0point8);
}

double PersonEntityTaggingService.PersonETOperatingPoints.recall0point7.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETOperatingPointsInner_recall0point7);
}

double PersonEntityTaggingService.PersonETOperatingPoints.highPrecision.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETOperatingPointsInner_highPrecision);
}

double PersonEntityTaggingService.PersonETOperatingPoints.highRecall.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETOperatingPointsInner_highRecall);
}

double PersonEntityTaggingService.PersonETOperatingPoints.highF1.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETOperatingPointsInner_highF1);
}

id PersonEntityTaggingService.PersonETOperatingPoints.init(precision0point9:precision0point8:precision0point7:recall0point9:recall0point8:recall0point7:highPrecision:highRecall:highF1:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_precision0point9] = a1;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_precision0point8] = a2;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_precision0point7] = a3;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_recall0point9] = a4;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_recall0point8] = a5;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_recall0point7] = a6;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_highPrecision] = a7;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_highRecall] = a8;
  *(void *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_highF1] = a17;
  v19.receiver = v17;
  v19.super_class = (Class)type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints();
  return objc_msgSendSuper2(&v19, sel_init);
}

id PersonEntityTaggingService.PersonETOperatingPoints.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void PersonEntityTaggingService.PersonETOperatingPoints.init()()
{
}

id PersonEntityTaggingService.PersonETOperatingPoints.__deallocating_deinit()
{
  return sub_1B2AF71C8(type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints);
}

uint64_t PersonEntityTaggingService.PersonETOperatingCharacteristic.truePositives.getter()
{
  return sub_1B29A1AE0(OBJC_IVAR___GDPersonETOperatingCharacteristicInner_truePositives);
}

uint64_t PersonEntityTaggingService.PersonETOperatingCharacteristic.falsePositives.getter()
{
  return sub_1B29A1AE0(OBJC_IVAR___GDPersonETOperatingCharacteristicInner_falsePositives);
}

uint64_t PersonEntityTaggingService.PersonETOperatingCharacteristic.trueNegatives.getter()
{
  return sub_1B29A1AE0(OBJC_IVAR___GDPersonETOperatingCharacteristicInner_trueNegatives);
}

uint64_t PersonEntityTaggingService.PersonETOperatingCharacteristic.falseNegatives.getter()
{
  return sub_1B29A1AE0(OBJC_IVAR___GDPersonETOperatingCharacteristicInner_falseNegatives);
}

id PersonEntityTaggingService.PersonETOperatingCharacteristic.__allocating_init(truePositives:falsePositives:trueNegatives:falseNegatives:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return PersonEntityTaggingService.PersonETOperatingCharacteristic.init(truePositives:falsePositives:trueNegatives:falseNegatives:)(a1, a2, a3, a4);
}

id PersonEntityTaggingService.PersonETOperatingCharacteristic.init(truePositives:falsePositives:trueNegatives:falseNegatives:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR___GDPersonETOperatingCharacteristicInner_truePositives] = a1;
  *(void *)&v4[OBJC_IVAR___GDPersonETOperatingCharacteristicInner_falsePositives] = a2;
  *(void *)&v4[OBJC_IVAR___GDPersonETOperatingCharacteristicInner_trueNegatives] = a3;
  *(void *)&v4[OBJC_IVAR___GDPersonETOperatingCharacteristicInner_falseNegatives] = a4;
  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for PersonEntityTaggingService.PersonETOperatingCharacteristic();
  return objc_msgSendSuper2(&v6, sel_init);
}

void PersonEntityTaggingService.PersonETOperatingCharacteristic.init()()
{
}

id PersonEntityTaggingService.PersonETOperatingCharacteristic.__deallocating_deinit()
{
  return sub_1B2AF71C8(type metadata accessor for PersonEntityTaggingService.PersonETOperatingCharacteristic);
}

double PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.threshold.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETReceiverOperatingCharacteristicInner_threshold);
}

double PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.precision.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETReceiverOperatingCharacteristicInner_precision);
}

double PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.recall.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETReceiverOperatingCharacteristicInner_recall);
}

id PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.__allocating_init(threshold:precision:recall:)(double a1, double a2, double a3)
{
  id v7 = objc_allocWithZone(v3);
  return PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.init(threshold:precision:recall:)(a1, a2, a3);
}

id PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.init(threshold:precision:recall:)(double a1, double a2, double a3)
{
  *(double *)&v3[OBJC_IVAR___GDPersonETReceiverOperatingCharacteristicInner_threshold] = a1;
  *(double *)&v3[OBJC_IVAR___GDPersonETReceiverOperatingCharacteristicInner_precision] = a2;
  *(double *)&v3[OBJC_IVAR___GDPersonETReceiverOperatingCharacteristicInner_recall] = a3;
  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic();
  return objc_msgSendSuper2(&v5, sel_init);
}

void PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.init()()
{
}

id PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.__deallocating_deinit()
{
  return sub_1B2AF71C8(type metadata accessor for PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic);
}

double PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.threshold.getter()
{
  return sub_1B299D81C(OBJC_IVAR___GDPersonETTotalOperatingCharacteristicInner_threshold);
}

id PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.operatingCharacteristic.getter()
{
  return *(id *)(v0 + OBJC_IVAR___GDPersonETTotalOperatingCharacteristicInner_operatingCharacteristic);
}

id PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.__allocating_init(threshold:operatingCharacteristic:)(uint64_t a1, double a2)
{
  id v5 = objc_allocWithZone(v2);
  return PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.init(threshold:operatingCharacteristic:)(a1, a2);
}

id PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.init(threshold:operatingCharacteristic:)(uint64_t a1, double a2)
{
  *(double *)&v2[OBJC_IVAR___GDPersonETTotalOperatingCharacteristicInner_threshold] = a2;
  *(void *)&v2[OBJC_IVAR___GDPersonETTotalOperatingCharacteristicInner_operatingCharacteristic] = a1;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for PersonEntityTaggingService.PersonETTotalOperatingCharacteristic();
  return objc_msgSendSuper2(&v4, sel_init);
}

void PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.init()()
{
}

id PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.__deallocating_deinit()
{
  return sub_1B2AF71C8(type metadata accessor for PersonEntityTaggingService.PersonETTotalOperatingCharacteristic);
}

id sub_1B2AF71C8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t static EntityTaggingService.operatingPoints(for:)(uint64_t a1)
{
  double v1 = *(double *)(a1 + 16);
  if (v1 != 0.0)
  {
    double v2 = *(double *)&a1;
    uint64_t v3 = qword_1E9C38BD0;
    swift_bridgeObjectRetain();
    if (v3 != -1) {
LABEL_25:
    }
      swift_once();
    uint64_t v4 = 0;
    uint64_t v5 = MEMORY[0x1E4FBC868];
    double v39 = v2;
    while (1)
    {
      uint64_t v6 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      char v7 = *(unsigned char *)(*(void *)&v2 + v4 + 32);
      char v8 = off_1E9C3D960;
      if (*((void *)off_1E9C3D960 + 2) && (unint64_t v9 = sub_1B29DB684(), (v10 & 1) != 0))
      {
        double v2 = v1;
        double v40 = *(double *)(v8[7] + 72 * v9 + 64);
        swift_isUniquelyReferenced_nonNull_native();
        unint64_t v11 = sub_1B29DB684();
        if (__OFADD__(*(void *)(v5 + 16), (LOBYTE(v12) & 1) == 0)) {
          goto LABEL_23;
        }
        unint64_t v13 = v11;
        double v1 = v12;
        sub_1B29A3EB4(&qword_1E9C3DA00);
        if (sub_1B2E83398())
        {
          unint64_t v22 = sub_1B29DB684();
          if ((LOBYTE(v1) & 1) != (v23 & 1))
          {
            uint64_t result = sub_1B2E83858();
            __break(1u);
            return result;
          }
          unint64_t v13 = v22;
        }
        if (LOBYTE(v1))
        {
          sub_1B29A29E8(v14, v15, v16, v17, v18, v19, v20, v21, v38, v39, v40);
        }
        else
        {
          sub_1B2AF7C38(v5 + 8 * (v13 >> 6));
          *(unsigned char *)(*(void *)(v5 + 48) + v13) = v7;
          sub_1B29A29E8(v26, v27, v28, v29, v30, v31, v32, v33, v38, v39, v40);
          uint64_t v34 = *(void *)(v5 + 16);
          BOOL v35 = __OFADD__(v34, 1);
          uint64_t v36 = v34 + 1;
          if (v35) {
            goto LABEL_24;
          }
          *(void *)(v5 + 16) = v36;
        }
        swift_bridgeObjectRelease();
        double v1 = v2;
        double v2 = v39;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1B29DB684();
        char v25 = v24;
        swift_bridgeObjectRelease();
        if (v25)
        {
          swift_isUniquelyReferenced_nonNull_native();
          sub_1B29A3EB4(&qword_1E9C3DA00);
          sub_1B2E83398();
          sub_1B2AF7990();
          sub_1B2E833B8();
          swift_bridgeObjectRelease();
        }
      }
      ++v4;
      if (v6 == *(void *)&v1)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
  }
  return MEMORY[0x1E4FBC868];
}

uint64_t static EntityTaggingService.rocCurve(for:)()
{
  sub_1B2AF7990();

  return sub_1B2E82148();
}

double sub_1B2AF74F4()
{
  xmmword_1E9C3D8D0 = xmmword_1B2ED1420;
  *(_OWORD *)&qword_1E9C3D8E0 = xmmword_1B2ED1430;
  double result = 0.75;
  xmmword_1E9C3D8F0 = xmmword_1B2ED1440;
  *(_OWORD *)&qword_1E9C3D900 = xmmword_1B2ED1450;
  qword_1E9C3D910 = 0x3FEA3D70A3D70A3DLL;
  return result;
}

double sub_1B2AF753C()
{
  xmmword_1E9C3D918 = xmmword_1B2ED1460;
  *(_OWORD *)&qword_1E9C3D928 = xmmword_1B2ED1470;
  double result = 0.8;
  xmmword_1E9C3D938 = xmmword_1B2ED1480;
  *(_OWORD *)&qword_1E9C3D948 = xmmword_1B2ED1490;
  qword_1E9C3D958 = 0x3FEB333333333333;
  return result;
}

void *sub_1B2AF757C()
{
  sub_1B29A3EB4(&qword_1E9C3DA08);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B2ED1410;
  *(unsigned char *)(v0 + 32) = 4;
  if (qword_1E9C38BC8 != -1) {
    swift_once();
  }
  long long v1 = xmmword_1E9C3D918;
  uint64_t v2 = qword_1E9C3D928;
  uint64_t v3 = unk_1E9C3D930;
  long long v4 = xmmword_1E9C3D938;
  uint64_t v5 = qword_1E9C3D948;
  uint64_t v6 = unk_1E9C3D950;
  uint64_t v7 = qword_1E9C3D958;
  *(_OWORD *)(v0 + 40) = xmmword_1E9C3D918;
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = v3;
  *(_OWORD *)(v0 + 72) = v4;
  *(void *)(v0 + 88) = v5;
  *(void *)(v0 + 96) = v6;
  *(void *)(v0 + 104) = v7;
  *(unsigned char *)(v0 + 112) = 7;
  *(_OWORD *)(v0 + 120) = v1;
  *(void *)(v0 + 136) = v2;
  *(void *)(v0 + 144) = v3;
  *(_OWORD *)(v0 + 152) = v4;
  *(void *)(v0 + 168) = v5;
  *(void *)(v0 + 176) = v6;
  *(void *)(v0 + 184) = v7;
  *(unsigned char *)(v0 + 192) = 6;
  *(_OWORD *)(v0 + 200) = v1;
  *(void *)(v0 + 216) = v2;
  *(void *)(v0 + 224) = v3;
  *(_OWORD *)(v0 + 232) = v4;
  *(void *)(v0 + 248) = v5;
  *(void *)(v0 + 256) = v6;
  *(void *)(v0 + 264) = v7;
  *(unsigned char *)(v0 + 272) = 15;
  *(_OWORD *)(v0 + 280) = v1;
  *(void *)(v0 + 296) = v2;
  *(void *)(v0 + 304) = v3;
  *(_OWORD *)(v0 + 312) = v4;
  *(void *)(v0 + 328) = v5;
  *(void *)(v0 + 336) = v6;
  *(void *)(v0 + 344) = v7;
  *(unsigned char *)(v0 + 352) = 17;
  *(_OWORD *)(v0 + 360) = v1;
  *(void *)(v0 + 376) = v2;
  *(void *)(v0 + 384) = v3;
  *(_OWORD *)(v0 + 392) = v4;
  *(void *)(v0 + 408) = v5;
  *(void *)(v0 + 416) = v6;
  *(void *)(v0 + 424) = v7;
  *(unsigned char *)(v0 + 432) = 16;
  *(_OWORD *)(v0 + 440) = v1;
  *(void *)(v0 + 456) = v2;
  *(void *)(v0 + 464) = v3;
  *(_OWORD *)(v0 + 472) = v4;
  *(void *)(v0 + 488) = v5;
  *(void *)(v0 + 496) = v6;
  *(void *)(v0 + 504) = v7;
  *(unsigned char *)(v0 + 512) = 8;
  *(_OWORD *)(v0 + 520) = v1;
  *(void *)(v0 + 536) = v2;
  *(void *)(v0 + 544) = v3;
  *(_OWORD *)(v0 + 552) = v4;
  *(void *)(v0 + 568) = v5;
  *(void *)(v0 + 576) = v6;
  *(void *)(v0 + 584) = v7;
  *(unsigned char *)(v0 + 592) = 9;
  *(_OWORD *)(v0 + 600) = v1;
  *(void *)(v0 + 616) = v2;
  *(void *)(v0 + 624) = v3;
  *(_OWORD *)(v0 + 632) = v4;
  *(void *)(v0 + 648) = v5;
  *(void *)(v0 + 656) = v6;
  *(void *)(v0 + 664) = v7;
  *(unsigned char *)(v0 + 672) = 10;
  *(_OWORD *)(v0 + 680) = v1;
  *(void *)(v0 + 696) = v2;
  *(void *)(v0 + 704) = v3;
  *(_OWORD *)(v0 + 712) = v4;
  *(void *)(v0 + 728) = v5;
  *(void *)(v0 + 736) = v6;
  *(void *)(v0 + 744) = v7;
  *(unsigned char *)(v0 + 752) = 18;
  *(_OWORD *)(v0 + 760) = v1;
  *(void *)(v0 + 776) = v2;
  *(void *)(v0 + 784) = v3;
  *(_OWORD *)(v0 + 792) = v4;
  *(void *)(v0 + 808) = v5;
  *(void *)(v0 + 816) = v6;
  *(void *)(v0 + 824) = v7;
  *(unsigned char *)(v0 + 832) = 20;
  *(_OWORD *)(v0 + 840) = v1;
  *(void *)(v0 + 856) = v2;
  *(void *)(v0 + 864) = v3;
  *(_OWORD *)(v0 + 872) = v4;
  *(void *)(v0 + 888) = v5;
  *(void *)(v0 + 896) = v6;
  *(void *)(v0 + 904) = v7;
  *(unsigned char *)(v0 + 912) = 19;
  *(_OWORD *)(v0 + 920) = v1;
  *(void *)(v0 + 936) = v2;
  *(void *)(v0 + 944) = v3;
  *(_OWORD *)(v0 + 952) = v4;
  *(void *)(v0 + 968) = v5;
  *(void *)(v0 + 976) = v6;
  *(void *)(v0 + 984) = v7;
  *(unsigned char *)(v0 + 992) = 21;
  if (qword_1E9C38BC0 != -1) {
    swift_once();
  }
  long long v8 = xmmword_1E9C3D8D0;
  uint64_t v9 = qword_1E9C3D8E0;
  uint64_t v10 = unk_1E9C3D8E8;
  long long v11 = xmmword_1E9C3D8F0;
  uint64_t v12 = qword_1E9C3D900;
  uint64_t v13 = unk_1E9C3D908;
  uint64_t v14 = qword_1E9C3D910;
  *(_OWORD *)(v0 + 1000) = xmmword_1E9C3D8D0;
  *(void *)(v0 + 1016) = v9;
  *(void *)(v0 + 1024) = v10;
  *(_OWORD *)(v0 + 1032) = v11;
  *(void *)(v0 + 1048) = v12;
  *(void *)(v0 + 1056) = v13;
  *(void *)(v0 + 1064) = v14;
  *(unsigned char *)(v0 + 1072) = 23;
  *(_OWORD *)(v0 + 1080) = v8;
  *(void *)(v0 + 1096) = v9;
  *(void *)(v0 + 1104) = v10;
  *(_OWORD *)(v0 + 1112) = v11;
  *(void *)(v0 + 1128) = v12;
  *(void *)(v0 + 1136) = v13;
  *(void *)(v0 + 1144) = v14;
  *(unsigned char *)(v0 + 1152) = 26;
  *(_OWORD *)(v0 + 1160) = v8;
  *(void *)(v0 + 1176) = v9;
  *(void *)(v0 + 1184) = v10;
  *(_OWORD *)(v0 + 1192) = v11;
  *(void *)(v0 + 1208) = v12;
  *(void *)(v0 + 1216) = v13;
  *(void *)(v0 + 1224) = v14;
  *(unsigned char *)(v0 + 1232) = 22;
  uint64_t v15 = qword_1E9C3D958;
  long long v16 = *(_OWORD *)&qword_1E9C3D928;
  *(_OWORD *)(v0 + 1240) = xmmword_1E9C3D918;
  *(_OWORD *)(v0 + 1256) = v16;
  long long v17 = *(_OWORD *)&qword_1E9C3D948;
  *(_OWORD *)(v0 + 1272) = xmmword_1E9C3D938;
  *(_OWORD *)(v0 + 1288) = v17;
  *(void *)(v0 + 1304) = v15;
  sub_1B2AF7990();
  double result = (void *)sub_1B2E82148();
  off_1E9C3D960 = result;
  return result;
}

double EntityTaggingService.OperatingPoints.precision0point8.getter()
{
  return *(double *)(v0 + 8);
}

double EntityTaggingService.OperatingPoints.precision0point7.getter()
{
  return *(double *)(v0 + 16);
}

double EntityTaggingService.OperatingPoints.recall0point9.getter()
{
  return *(double *)(v0 + 24);
}

double EntityTaggingService.OperatingPoints.recall0point8.getter()
{
  return *(double *)(v0 + 32);
}

double EntityTaggingService.OperatingPoints.recall0point7.getter()
{
  return *(double *)(v0 + 40);
}

double EntityTaggingService.OperatingPoints.highPrecision.getter()
{
  return *(double *)(v0 + 48);
}

double EntityTaggingService.OperatingPoints.highRecall.getter()
{
  return *(double *)(v0 + 56);
}

double EntityTaggingService.OperatingPoints.highF1.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t EntityTaggingService.OperatingCharacteristic.truePositives.getter()
{
  return *(void *)v0;
}

uint64_t EntityTaggingService.OperatingCharacteristic.falsePositives.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t EntityTaggingService.OperatingCharacteristic.trueNegatives.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t EntityTaggingService.OperatingCharacteristic.falseNegatives.getter()
{
  return *(void *)(v0 + 24);
}

double EntityTaggingService.ReceiverOperatingCharacteristic.precision.getter()
{
  return *(double *)(v0 + 8);
}

double EntityTaggingService.ReceiverOperatingCharacteristic.recall.getter()
{
  return *(double *)(v0 + 16);
}

__n128 EntityTaggingService.TotalOperatingCharacteristic.operatingCharacteristic.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 8);
  long long v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints()
{
  return self;
}

unint64_t sub_1B2AF7990()
{
  unint64_t result = qword_1E9C37380;
  if (!qword_1E9C37380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37380);
  }
  return result;
}

uint64_t type metadata accessor for PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic()
{
  return self;
}

uint64_t type metadata accessor for PersonEntityTaggingService.PersonETOperatingCharacteristic()
{
  return self;
}

uint64_t type metadata accessor for PersonEntityTaggingService.PersonETTotalOperatingCharacteristic()
{
  return self;
}

uint64_t method lookup function for PersonEntityTaggingService.PersonETOperatingPoints(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PersonEntityTaggingService.PersonETOperatingPoints);
}

uint64_t dispatch thunk of PersonEntityTaggingService.PersonETOperatingPoints.__allocating_init(precision0point9:precision0point8:precision0point7:recall0point9:recall0point8:recall0point7:highPrecision:highRecall:highF1:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for PersonEntityTaggingService.PersonETOperatingCharacteristic(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PersonEntityTaggingService.PersonETOperatingCharacteristic);
}

uint64_t dispatch thunk of PersonEntityTaggingService.PersonETOperatingCharacteristic.__allocating_init(truePositives:falsePositives:trueNegatives:falseNegatives:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic);
}

uint64_t dispatch thunk of PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.__allocating_init(threshold:precision:recall:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for PersonEntityTaggingService.PersonETTotalOperatingCharacteristic(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PersonEntityTaggingService.PersonETTotalOperatingCharacteristic);
}

uint64_t dispatch thunk of PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.__allocating_init(threshold:operatingCharacteristic:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t _s15OperatingPointsVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s15OperatingPointsVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

void type metadata accessor for EntityTaggingService.OperatingPoints()
{
}

uint64_t _s23OperatingCharacteristicVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s23OperatingCharacteristicVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for EntityTaggingService.OperatingCharacteristic()
{
}

void type metadata accessor for EntityTaggingService.ReceiverOperatingCharacteristic()
{
}

uint64_t _s28TotalOperatingCharacteristicVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s28TotalOperatingCharacteristicVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

void type metadata accessor for EntityTaggingService.TotalOperatingCharacteristic()
{
}

void sub_1B2AF7C38(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= 1 << v1;
}

void sub_1B2AF7C50(void *a1)
{
  uint64_t v2 = sub_1B2E80398();
  uint64_t v16 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  long long v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = (unint64_t)objc_msgSend(a1, sel_count);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1B29C0848();
  id v6 = a1;
  sub_1B2E82EA8();

  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  if (v5)
  {
    sub_1B2B0E928(&qword_1E9C3E038, 255, MEMORY[0x1E4F27660]);
    do
    {
      sub_1B2E82FA8();
      if (!v21) {
        goto LABEL_24;
      }
      sub_1B29C3B28((uint64_t)&v20, (uint64_t)&v18);
      sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7E2C40);
      if (swift_dynamicCast())
      {
        id v7 = v17;
        id v8 = objc_msgSend(v17, sel_longLongValue);
      }
      else
      {
        id v8 = 0;
      }
      sub_1B2B11954((uint64_t)&v20);
      uint64_t v9 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29C0848();
        uint64_t v9 = v22;
      }
      unint64_t v10 = *(void *)(v9 + 16);
      if (v10 >= *(void *)(v9 + 24) >> 1)
      {
        sub_1B29C0848();
        uint64_t v9 = v22;
      }
      *(void *)(v9 + 16) = v10 + 1;
      *(void *)(v9 + 8 * v10 + 32) = v8;
    }
    while (--v5);
  }
  sub_1B2B0E928(&qword_1E9C3E038, 255, MEMORY[0x1E4F27660]);
  sub_1B2E82FA8();
  while (v19)
  {
    sub_1B29E4FEC(&v18, &v20);
    sub_1B29C3B28((uint64_t)&v20, (uint64_t)&v18);
    sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7E2C40);
    if (swift_dynamicCast())
    {
      id v11 = v17;
      id v12 = objc_msgSend(v17, sel_longLongValue);
    }
    else
    {
      id v12 = 0;
    }
    sub_1B2B11954((uint64_t)&v20);
    uint64_t v13 = v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B29C0848();
      uint64_t v13 = v22;
    }
    unint64_t v14 = *(void *)(v13 + 16);
    if (v14 >= *(void *)(v13 + 24) >> 1)
    {
      sub_1B29C0848();
      uint64_t v13 = v22;
    }
    *(void *)(v13 + 16) = v14 + 1;
    *(void *)(v13 + 8 * v14 + 32) = v12;
    sub_1B2E82FA8();
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v2);
  sub_1B29D2368((uint64_t)&v18, (uint64_t *)&unk_1EB7E6270);
}

void sub_1B2AF8050(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1B29C0898();
    uint64_t v3 = sub_1B2B1D160(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(a1 + 32))
      {
        uint64_t v6 = a1 + 64;
        while ((*(void *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v14 = v1;
          int v15 = v4;
          uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8 * v5);
          uint64_t v8 = PersonEntityTagType.rawValue.getter();
          uint64_t v10 = v9;
          unint64_t v11 = *(void *)(v16 + 16);
          if (v11 >= *(void *)(v16 + 24) >> 1) {
            sub_1B29C0898();
          }
          *(void *)(v16 + 16) = v11 + 1;
          id v12 = (void *)(v16 + 24 * v11);
          _OWORD v12[4] = v8;
          v12[5] = v10;
          v12[6] = v7;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v6 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          if (v15 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v13 = sub_1B2E830E8();
          uint64_t v1 = v14 - 1;
          if (v14 == 1) {
            return;
          }
          unint64_t v5 = v13;
          if ((v13 & 0x8000000000000000) == 0)
          {
            int v4 = *(_DWORD *)(a1 + 36);
            if (v13 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_1B2AF822C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1B2B1D124(v35, a1);
  uint64_t v8 = v35[0];
  uint64_t v9 = v35[1];
  int64_t v10 = v35[3];
  unint64_t v11 = v35[4];
  int64_t v12 = (unint64_t)(v35[2] + 64) >> 6;
  if (a5) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a4;
  }
  uint64_t v32 = v13;
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_23;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v17);
    int64_t v19 = v10 + 1;
    if (!v18)
    {
      int64_t v19 = v10 + 2;
      if (v10 + 2 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v9 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v10 + 3;
        if (v10 + 3 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v19);
        if (!v18)
        {
          int64_t v19 = v10 + 4;
          if (v10 + 4 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = *(void *)(v9 + 8 * v19);
          if (!v18)
          {
            int64_t v19 = v10 + 5;
            if (v10 + 5 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = *(void *)(v9 + 8 * v19);
            if (!v18)
            {
              int64_t v20 = v10 + 6;
              while (v20 < v12)
              {
                unint64_t v18 = *(void *)(v9 + 8 * v20++);
                if (v18)
                {
                  int64_t v19 = v20 - 1;
                  goto LABEL_22;
                }
              }
LABEL_33:
              swift_release();
              uint64_t v31 = v34;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v31;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
    int64_t v10 = v19;
LABEL_23:
    uint64_t v21 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v16);
    uint64_t v22 = *v21;
    char v23 = (void *)v21[1];
    double v24 = *(double *)(*(void *)(v8 + 56) + 8 * v16);
    swift_bridgeObjectRetain_n();
    v25._uint64_t countAndFlagsBits = v22;
    v25._object = v23;
    PersonEntityTagType.init(rawValue:)(v25);
    if (v33 == 30) {
      char v26 = 0;
    }
    else {
      char v26 = v33;
    }
    if (*(void *)(a2 + 16)
      && (unint64_t v27 = sub_1B29DB684(), (v28 & 1) != 0)
      && *(double *)(*(void *)(a2 + 56) + 8 * v27) <= v24)
    {
      char v33 = v26;
      id v29 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag());
      PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init(tag:score:inferenceEventId:)(&v33, v32, v24);
      uint64_t v30 = swift_bridgeObjectRelease();
      MEMORY[0x1B3EB0FE0](v30);
      if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1B2E828A8();
      }
      sub_1B2E828F8();
      uint64_t result = sub_1B2E82878();
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2AF8498(void *a1, void *a2)
{
  uint64_t v4 = sub_1B2E80398();
  uint64_t v24 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = a2;
  sub_1B2E82EA8();

  uint64_t v8 = sub_1B2B0E928(&qword_1E9C3E038, 255, MEMORY[0x1E4F27660]);
  sub_1B2E82FA8();
  if (!v31)
  {
LABEL_17:
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
    return (uint64_t)a1;
  }
  uint64_t v26 = v8;
  uint64_t v27 = v4;
  uint64_t v25 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    sub_1B29E4FEC(&v30, v29);
    sub_1B29C3B28((uint64_t)v29, (uint64_t)&v28);
    sub_1B29C3CA0(0, &qword_1E9C3E040);
    if (!swift_dynamicCast()) {
      goto LABEL_16;
    }
    id v9 = v32;
    id v10 = objc_msgSend(v32, sel_idValue);
    unint64_t v11 = (unint64_t)[v9 tag] - 1;
    char v12 = v11 > 0x19 ? 0 : byte_1B2ED263A[v11];
    swift_isUniquelyReferenced_nonNull_native();
    char v28 = a1;
    unint64_t v13 = sub_1B29DAE70();
    if (__OFADD__(a1[2], (v14 & 1) == 0)) {
      break;
    }
    unint64_t v15 = v13;
    char v16 = v14;
    sub_1B29A3EB4(&qword_1E9C3E048);
    if (sub_1B2E83398())
    {
      unint64_t v17 = sub_1B29DAE70();
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_20;
      }
      unint64_t v15 = v17;
    }
    a1 = v28;
    if (v16)
    {
      *(unsigned char *)(v28[7] + v15) = v12;
    }
    else
    {
      v28[(v15 >> 6) + 8] |= 1 << v15;
      *(void *)(a1[6] + 8 * v15) = v10;
      *(unsigned char *)(a1[7] + v15) = v12;
      uint64_t v19 = a1[2];
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20) {
        goto LABEL_19;
      }
      a1[2] = v21;
    }

    swift_bridgeObjectRelease();
    uint64_t v4 = v27;
LABEL_16:
    sub_1B2B11954((uint64_t)v29);
    sub_1B2E82FA8();
    if (!v31) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2AF87CC(uint64_t a1, void (*a2)(uint64_t, uint64_t, double))
{
  sub_1B2B1D124(v19, a1);
  uint64_t v3 = v19[0];
  uint64_t v4 = v19[1];
  int64_t v5 = v19[3];
  unint64_t v6 = v19[4];
  int64_t v7 = (unint64_t)(v19[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v5 << 6);
  while (1)
  {
    unint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    double v18 = *(double *)(*(void *)(v3 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    a2(v16, v17, v18);
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v11 >= v7) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    int64_t v13 = v5 + 1;
    if (!v12)
    {
      int64_t v13 = v5 + 2;
      if (v5 + 2 >= v7) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v4 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v5 + 3;
        if (v5 + 3 >= v7) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v4 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v5 + 4;
          if (v5 + 4 >= v7) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v4 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v5 + 5;
            if (v5 + 5 >= v7) {
              return swift_release();
            }
            unint64_t v12 = *(void *)(v4 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v5 + 6;
              while (v14 < v7)
              {
                unint64_t v12 = *(void *)(v4 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v5 = v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2AF8954(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1B2DCEF70(v2);
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1B2B03D98(v6);
  return sub_1B2E832D8();
}

uint64_t sub_1B2AF89D0(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3E060, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B079E4);
}

uint64_t sub_1B2AF89F0(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3E050, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B07E34);
}

uint64_t sub_1B2AF8A10(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  if (*(void *)(a1 + 16))
  {
    sub_1B29A3EB4(a2);
    uint64_t v4 = sub_1B2E83498();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC868];
  }
  uint64_t v7 = v4;
  uint64_t v5 = swift_bridgeObjectRetain();
  a3(v5, 1, &v7);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B2AF8AB0(uint64_t a1)
{
  return sub_1B2AF8A10(a1, (uint64_t *)&unk_1EB7DA080, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B080EC);
}

uint64_t sub_1B2AF8AD0(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C37B20, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B08488);
}

uint64_t sub_1B2AF8AF0(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C37B18, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B08750);
}

uint64_t sub_1B2AF8B10(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C37B10, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B08A64);
}

uint64_t sub_1B2AF8B30(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3E010, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B08D78);
}

uint64_t sub_1B2AF8B50(uint64_t a1)
{
  return sub_1B2AF8C30(a1, &qword_1E9C3DFE0, (uint64_t)sub_1B29DB110, (uint64_t)&type metadata for TrafficBucket, &qword_1E9C3DFE8);
}

uint64_t sub_1B2AF8B80(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DFF0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B09168);
}

uint64_t sub_1B2AF8BA0(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DFD0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B09434);
}

uint64_t sub_1B2AF8BC0(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DFC0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B09700);
}

uint64_t sub_1B2AF8BE0(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DFB0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B099CC);
}

uint64_t sub_1B2AF8C00(uint64_t a1)
{
  return sub_1B2AF8C30(a1, &qword_1E9C3DFA0, (uint64_t)sub_1B29DB110, (uint64_t)&type metadata for TerrainType, &qword_1E9C3DFA8);
}

uint64_t sub_1B2AF8C30(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B29A3EB4(a2);
    uint64_t v9 = sub_1B2E83498();
  }
  else
  {
    uint64_t v9 = MEMORY[0x1E4FBC868];
  }
  uint64_t v12 = v9;
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_1B2B09C98(v10, 1, &v12, a3, a2, a4, a5);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1B2AF8CF8(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DF88, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0D3A0);
}

uint64_t sub_1B2AF8D18(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DF78, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0CF44);
}

uint64_t sub_1B2AF8D38(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DF68, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0CAE8);
}

uint64_t sub_1B2AF8D58(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DF58, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0C68C);
}

uint64_t sub_1B2AF8D78(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DF48, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0C230);
}

uint64_t sub_1B2AF8D98(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DF38, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0BDD4);
}

uint64_t sub_1B2AF8DB8(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DF28, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0B978);
}

uint64_t sub_1B2AF8DD8(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DF08, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0B51C);
}

uint64_t sub_1B2AF8DF8(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DEF8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0B0C0);
}

uint64_t sub_1B2AF8E18(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DEE8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0AC64);
}

uint64_t sub_1B2AF8E38(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DED8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0A808);
}

uint64_t sub_1B2AF8E58(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DEC8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0A3AC);
}

uint64_t sub_1B2AF8E78(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DEB8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B09F50);
}

uint64_t sub_1B2AF8E98(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DE98, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0D664);
}

uint64_t sub_1B2AF8EB8(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DE88, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0D948);
}

uint64_t sub_1B2AF8ED8(uint64_t a1)
{
  return sub_1B2AF8A10(a1, &qword_1E9C3DE78, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B0DCA4);
}

id sub_1B2AF8EF8(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return objc_msgSend(v2, sel_initWithInteger_, a1);
}

uint64_t sub_1B2AF8F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7E2778);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1B299E4A0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_1B2E82A08();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = &unk_1E9C3DDE8;
  v10[5] = v9;
  sub_1B2B03A8C(v7, (uint64_t)&unk_1E9C3DDF8, (uint64_t)v10);
  return swift_release();
}

IntelligencePlatform::PersonEntityTagType __swiftcall PersonEntityTagType.init(qid:)(Swift::String qid)
{
  id v2 = v1;
  BOOL v3 = qid._countAndFlagsBits == 0x3036353751 && qid._object == (void *)0xE500000000000000;
  if (v3 || (object = qid._object, uint64_t countAndFlagsBits = qid._countAndFlagsBits, (sub_1B299D7AC() & 1) != 0))
  {
    IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
    char v7 = 6;
  }
  else
  {
    BOOL v8 = countAndFlagsBits == 0x3536353751 && object == (void *)0xE500000000000000;
    if (v8 || (sub_1B299D7AC() & 1) != 0)
    {
      IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
      char v7 = 7;
    }
    else
    {
      BOOL v9 = countAndFlagsBits == 0x32333237373151 && object == (void *)0xE700000000000000;
      if (v9 || (sub_1B299D7AC() & 1) != 0)
      {
        IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
        char v7 = 16;
      }
      else
      {
        BOOL v10 = countAndFlagsBits == 0x34393138303351 && object == (void *)0xE700000000000000;
        if (v10 || (sub_1B299D7AC() & 1) != 0)
        {
          IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
          char v7 = 17;
        }
        else
        {
          BOOL v11 = countAndFlagsBits == 0x3634313638303151 && object == (void *)0xE900000000000035;
          if (v11 || (sub_1B299D7AC() & 1) != 0)
          {
            IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
            char v7 = 9;
          }
          else
          {
            BOOL v12 = countAndFlagsBits == 0x34393035393551 && object == (void *)0xE700000000000000;
            if (v12 || (sub_1B299D7AC() & 1) != 0)
            {
              IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
              char v7 = 10;
            }
            else
            {
              BOOL v13 = countAndFlagsBits == 0x3835373533323951 && object == (void *)0xE800000000000000;
              if (v13 || (sub_1B299D7AC() & 1) != 0)
              {
                IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
                char v7 = 12;
              }
              else
              {
                BOOL v14 = countAndFlagsBits == 0x3434333833323951 && object == (void *)0xE800000000000000;
                if (v14 || (sub_1B299D7AC() & 1) != 0)
                {
                  IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
                  char v7 = 13;
                }
                else
                {
                  BOOL v15 = countAndFlagsBits == 0x3737373932373151 && object == (void *)0xE900000000000037;
                  if (v15 || (sub_1B299D7AC() & 1) != 0)
                  {
                    IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
                    char v7 = 21;
                  }
                  else
                  {
                    BOOL v16 = countAndFlagsBits == 0x30333838383151 && object == (void *)0xE700000000000000;
                    if (v16 || (sub_1B299D7AC() & 1) != 0)
                    {
                      IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
                      char v7 = 19;
                    }
                    else
                    {
                      BOOL v17 = countAndFlagsBits == 3551824 && object == (void *)0xE300000000000000;
                      if (v17 || (sub_1B299D7AC() & 1) != 0)
                      {
                        IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
                        char v7 = 18;
                      }
                      else if (countAndFlagsBits == 0x38373832313251 && object == (void *)0xE700000000000000)
                      {
                        IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
                        char v7 = 20;
                      }
                      else
                      {
                        char v19 = sub_1B299D7AC();
                        IntelligencePlatform::PersonEntityTagType result = swift_bridgeObjectRelease();
                        if (v19) {
                          char v7 = 20;
                        }
                        else {
                          char v7 = 1;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  *id v2 = v7;
  return result;
}

IntelligencePlatform::PersonEntityTagType_optional __swiftcall PersonEntityTagType.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  uint64_t v3 = sub_1B2E83808();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 12;
  switch(v3)
  {
    case 0:
      goto LABEL_14;
    case 1:
      char v5 = 1;
      goto LABEL_14;
    case 2:
      char v5 = 2;
      goto LABEL_14;
    case 3:
      char v5 = 3;
      goto LABEL_14;
    case 4:
      char v5 = 4;
      goto LABEL_14;
    case 5:
      char v5 = 5;
      goto LABEL_14;
    case 6:
      char v5 = 6;
      goto LABEL_14;
    case 7:
      char v5 = 7;
      goto LABEL_14;
    case 8:
      char v5 = 8;
      goto LABEL_14;
    case 9:
      char v5 = 9;
      goto LABEL_14;
    case 10:
      char v5 = 10;
      goto LABEL_14;
    case 11:
      char v5 = 11;
LABEL_14:
      char v6 = v5;
      break;
    case 12:
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    default:
      char v6 = 30;
      break;
  }
  *id v2 = v6;
  return result;
}

void *static PersonEntityTagType.allCases.getter()
{
  return &unk_1F0AB9B50;
}

uint64_t PersonEntityTagType.rawValue.getter()
{
  uint64_t result = 0x7465736E75;
  switch(*v0)
  {
    case 1:
      return 0x6E776F6E6B6E75;
    case 2:
      return 0x726568746FLL;
    case 3:
      return 0x666C6573796DLL;
    case 4:
      return 0x796C696D6166;
    case 5:
      return 0x746E65726170;
    case 6:
      return 0x726568746F6DLL;
    case 7:
      uint64_t v2 = 1752457574;
      return v2 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
    case 8:
      return 0x676E696C626973;
    case 9:
      uint64_t v3 = 0x6568746F7262;
      goto LABEL_22;
    case 0xA:
      uint64_t v2 = 1953720691;
      return v2 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
    case 0xB:
      return 0x726150646E617267;
    case 0xC:
      return 0x746F6D646E617267;
    case 0xD:
      return 0x746166646E617267;
    case 0xE:
      uint64_t v4 = 0x6C696843796DLL;
      goto LABEL_25;
    case 0xF:
      return 0x646C696863;
    case 0x10:
      return 7237491;
    case 0x11:
      uint64_t v5 = 0x746867756164;
      goto LABEL_29;
    case 0x12:
      uint64_t v3 = 0x656E74726170;
LABEL_22:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
      break;
    case 0x13:
      uint64_t result = 1701210487;
      break;
    case 0x14:
      uint64_t v4 = 0x6E6162737568;
LABEL_25:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
      break;
    case 0x15:
      uint64_t result = 0x646E65697266;
      break;
    case 0x16:
      uint64_t result = sub_1B2A30574(16);
      break;
    case 0x17:
      uint64_t v5 = 0x6B726F776F63;
LABEL_29:
      uint64_t result = v5 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
      break;
    case 0x18:
      uint64_t result = 0x726F62686769656ELL;
      break;
    case 0x19:
      uint64_t result = 0x74616D6573756F68;
      break;
    case 0x1A:
      uint64_t result = 0x696E6D756C61;
      break;
    case 0x1B:
      uint64_t result = 0x746550796DLL;
      break;
    case 0x1C:
      uint64_t result = 0x676F44796DLL;
      break;
    case 0x1D:
      uint64_t result = 0x746143796DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2AF9964(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B29AC9B8(*a1, *a2);
}

uint64_t sub_1B2AF9970()
{
  return sub_1B29AE824();
}

uint64_t sub_1B2AF9978(uint64_t a1)
{
  return sub_1B2AA57C0(a1, *v1);
}

uint64_t sub_1B2AF9980()
{
  return sub_1B29F9424();
}

IntelligencePlatform::PersonEntityTagType_optional sub_1B2AF9988(Swift::String *a1)
{
  return PersonEntityTagType.init(rawValue:)(*a1);
}

uint64_t sub_1B2AF9994@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PersonEntityTagType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B2AF99BC(void *a1@<X8>)
{
  *a1 = &unk_1F0AB9B50;
}

uint64_t sub_1B2AF99CC()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2AF9A2C()
{
  return sub_1B2E82788();
}

uint64_t sub_1B2AF9A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1B2AF9AA4, 0, 0);
}

uint64_t sub_1B2AF9AA4()
{
  sub_1B2AEC410();
  if (v0[2])
  {
    uint64_t v1 = v0[2];
  }
  else
  {
    sub_1B2A4B170();
    uint64_t v1 = sub_1B2E82148();
  }
  v0[7] = v1;
  uint64_t v2 = v0[3];
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v2;
  }
  else
  {
    sub_1B2A4B170();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1B2E82148();
  }
  v0[8] = v3;
  uint64_t v4 = v0[4];
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v4;
  }
  else
  {
    sub_1B2A4B170();
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1B2E82148();
  }
  v0[9] = v5;
  uint64_t v6 = v0[5];
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = v6;
  }
  else
  {
    sub_1B2A4B170();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B2E82148();
  }
  v0[10] = v7;
  swift_bridgeObjectRetain();
  BOOL v8 = (void *)swift_task_alloc();
  v0[11] = v8;
  *BOOL v8 = v0;
  v8[1] = sub_1B2AF9CA0;
  return sub_1B2AFC174(v1, v3, v5, v7);
}

uint64_t sub_1B2AF9CA0()
{
  sub_1B2AEC410();
  sub_1B29A19D4();
  uint64_t v1 = *v0;
  sub_1B299B0E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

void PersonEntityTagType.init(gdTagType:)(unsigned char *a1@<X8>)
{
}

double static PersonEntityTaggingService.currentVersion.getter()
{
  return 1.0;
}

void *static PersonEntityTaggingService.supportedTags(version:)(uint64_t a1, char a2)
{
  int v3 = a2 & 1;
  type metadata accessor for EntityTaggingService();
  if (*(double *)&a1 == 1.0 && v3 == 0) {
    return &unk_1F0ABA200;
  }
  else {
    return (void *)MEMORY[0x1E4FBC860];
  }
}

uint64_t type metadata accessor for EntityTaggingService()
{
  return self;
}

void *static EntityTaggingService.supportedTags(version:)(uint64_t a1, char a2)
{
  if (*(double *)&a1 == 1.0 && (a2 & 1) == 0) {
    return &unk_1F0ABA200;
  }
  else {
    return (void *)MEMORY[0x1E4FBC860];
  }
}

char *PersonEntityTaggingService.__allocating_init(etConfig:)()
{
  sub_1B2B123D0();
  uint64_t v0 = (void *)sub_1B2AC9CE4();
  return PersonEntityTaggingService.init(etConfig:)(v0);
}

char *PersonEntityTaggingService.init(etConfig:)(void *a1)
{
  type metadata accessor for ViewService();
  id v4 = a1;
  uint64_t v5 = v1;
  uint64_t v6 = (char *)static ViewService.clientService.getter();
  type metadata accessor for EntityTaggingService();
  uint64_t v7 = sub_1B2B1255C();
  EntityTaggingService.init(etConfig:viewService:)(a1, v6);
  if (v2)
  {

    type metadata accessor for PersonEntityTaggingService();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)&v5[OBJC_IVAR___GDEntityTaggingServiceInner_entityTaggingService] = v7;
    *(void *)&v5[OBJC_IVAR___GDEntityTaggingServiceInner_feedbackService] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedbackService()), sel_init);

    v9.receiver = v5;
    v9.super_class = (Class)type metadata accessor for PersonEntityTaggingService();
    uint64_t v5 = (char *)objc_msgSendSuper2(&v9, sel_init);
  }
  return v5;
}

uint64_t EntityTaggingService.__allocating_init(etConfig:)(void *a1)
{
  type metadata accessor for ViewService();
  uint64_t v2 = (char *)static ViewService.clientService.getter();
  type metadata accessor for EntityTaggingService();
  uint64_t v3 = sub_1B2B1255C();
  EntityTaggingService.init(etConfig:viewService:)(a1, v2);
  return v3;
}

uint64_t sub_1B2AFA104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  return sub_1B299D7F8((uint64_t)sub_1B2AFA120);
}

uint64_t sub_1B2AFA120()
{
  sub_1B299B3BC();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B2AFA1C4;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return sub_1B2AFFEB0(v4, v2, v3);
}

uint64_t sub_1B2AFA1C4()
{
  sub_1B299B3BC();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v4 = *v1;
  sub_1B299B0E0();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_1B2AFA2B4(int a1, void *a2, void *aBlock, void *a4)
{
  _OWORD v4[2] = a2;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  uint64_t v7 = sub_1B2E82378();
  uint64_t v9 = v8;
  v4[5] = v8;
  id v10 = a2;
  a4;
  BOOL v11 = (void *)swift_task_alloc();
  v4[6] = v11;
  *BOOL v11 = v4;
  v11[1] = sub_1B2AFA39C;
  return sub_1B2AFA104(v7, v9, (uint64_t)a2);
}

uint64_t sub_1B2AFA39C()
{
  sub_1B2AEC410();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  sub_1B29A19D4();
  uint64_t v6 = (void *)v1[3];
  uint64_t v7 = (void *)v1[2];
  uint64_t v8 = *v2;
  sub_1B299B0E0();
  *uint64_t v9 = v8;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  id v10 = (const void *)v1[4];
  if (v3)
  {
    BOOL v11 = (void *)sub_1B2E80378();

    uint64_t v12 = sub_1B2B124E4();
    v13(v12);

    _Block_release(v10);
  }
  else
  {
    uint64_t v14 = sub_1B2B124CC();
    v15(v14);
    _Block_release(v10);
  }
  sub_1B2B123A8();
  return v16();
}

uint64_t sub_1B2AFA520(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1B299D7F8((uint64_t)sub_1B2AFA53C);
}

uint64_t sub_1B2AFA53C()
{
  sub_1B299B3BC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B2B12390(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2AFA5D0;
  uint64_t v3 = sub_1B2B12170();
  return sub_1B2B00254(v3, v4);
}

uint64_t sub_1B2AFA5D0()
{
  sub_1B299B3BC();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v4 = *v1;
  sub_1B299B0E0();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_1B2AFA6C0(int a1, void *a2, void *aBlock, void *a4)
{
  _OWORD v4[2] = a2;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  uint64_t v7 = sub_1B2E82838();
  v4[5] = v7;
  id v8 = a2;
  a4;
  uint64_t v9 = (void *)swift_task_alloc();
  v4[6] = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1B2AFA7A0;
  return sub_1B2AFA520(v7, (uint64_t)a2);
}

uint64_t sub_1B2AFA7A0()
{
  sub_1B299B9B8();
  uint64_t v2 = v0;
  sub_1B299B708();
  uint64_t v4 = v3;
  sub_1B299F388();
  *uint64_t v5 = v4;
  uint64_t v7 = *(void **)(v6 + 24);
  id v8 = *(void **)(v6 + 16);
  uint64_t v9 = *v1;
  sub_1B299B0E0();
  *id v10 = v9;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  if (v2)
  {
    uint64_t v11 = sub_1B2E80378();

    uint64_t v12 = (void *)v11;
  }
  else
  {
    type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags();
    uint64_t v13 = sub_1B2E820D8();
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)v13;
  }
  uint64_t v14 = sub_1B2B12294();
  v15(v14);

  _Block_release(v4);
  sub_1B299AD7C();
  return v16();
}

uint64_t sub_1B2AFA92C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1B299D7F8((uint64_t)sub_1B2AFA948);
}

uint64_t sub_1B2AFA948()
{
  sub_1B299B3BC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B2B12390(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2B119A0;
  uint64_t v3 = sub_1B2B12170();
  return sub_1B2B00BE8(v3, v4);
}

uint64_t sub_1B2AFAA70(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  _OWORD v4[2] = a2;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  id v8 = a2;
  a4;
  uint64_t v9 = (void *)swift_task_alloc();
  v4[5] = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1B2AFAB38;
  return sub_1B2AFA92C(a1, (uint64_t)a2);
}

uint64_t sub_1B2AFAB38()
{
  sub_1B299B9B8();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  sub_1B29A19D4();
  uint64_t v6 = (void *)v1[3];
  uint64_t v7 = (void *)v1[2];
  uint64_t v8 = *v2;
  sub_1B299B0E0();
  *uint64_t v9 = v8;
  swift_task_dealloc();

  id v10 = (const void *)v1[4];
  if (v3)
  {
    uint64_t v11 = (void *)sub_1B2E80378();

    uint64_t v12 = sub_1B2B124E4();
    v13(v12);

    _Block_release(v10);
  }
  else
  {
    uint64_t v14 = sub_1B2B124CC();
    v15(v14);
    _Block_release(v10);
  }
  sub_1B2B123A8();
  return v16();
}

uint64_t sub_1B2AFAC98(unsigned char *a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = v2;
  *(unsigned char *)(v3 + 49) = *a1;
  return sub_1B299D7F8((uint64_t)sub_1B2AFACB8);
}

uint64_t sub_1B2AFACB8()
{
  sub_1B299B3BC();
  *(unsigned char *)(v0 + 48) = *(unsigned char *)(v0 + 49);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B2AFAD60;
  uint64_t v2 = (unsigned char *)sub_1B2B12430();
  return sub_1B2B00A68(v2, v3);
}

uint64_t sub_1B2AFAD60()
{
  sub_1B299B3BC();
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1B299B0E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1B299F2A4();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    uint64_t v10 = sub_1B2B12514();
    return v11(v10);
  }
}

uint64_t sub_1B2AFAE5C()
{
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2AFAE78(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1B299D7F8((uint64_t)sub_1B2AFAE94);
}

uint64_t sub_1B2AFAE94()
{
  sub_1B299B3BC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B2B12390(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2B119A0;
  uint64_t v3 = sub_1B2B12170();
  return sub_1B2B00DB4(v3, v4);
}

uint64_t sub_1B2AFAF28(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1B299D7F8((uint64_t)sub_1B2AFAF44);
}

uint64_t sub_1B2AFAF44()
{
  sub_1B299B3BC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B2B12390(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2B119A0;
  uint64_t v3 = sub_1B2B12170();
  return sub_1B2B00FE0(v3, v4);
}

uint64_t sub_1B2AFAFF8(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = _Block_copy(aBlock);
  sub_1B2B121A0();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  _OWORD v12[4] = v11;
  v12[5] = a1;
  id v13 = a3;
  id v14 = a4;
  id v15 = a1;

  return sub_1B2AF8F40(a7, (uint64_t)v12);
}

uint64_t sub_1B2AFB07C(int a1, void *a2, void *aBlock, void *a4)
{
  _OWORD v4[2] = a2;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v4[5] = sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7E2C40);
  uint64_t v7 = sub_1B2E82838();
  v4[6] = v7;
  id v8 = a2;
  a4;
  uint64_t v9 = (void *)swift_task_alloc();
  v4[7] = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1B2AFB178;
  return sub_1B2AFAF28(v7, (uint64_t)a2);
}

uint64_t sub_1B2AFB178()
{
  sub_1B299B9B8();
  uint64_t v2 = v0;
  sub_1B299B708();
  uint64_t v4 = v3;
  sub_1B299F388();
  *uint64_t v5 = v4;
  uint64_t v7 = *(void **)(v6 + 24);
  id v8 = *(void **)(v6 + 16);
  uint64_t v9 = *v1;
  sub_1B299B0E0();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  if (v2)
  {
    uint64_t v11 = sub_1B2E80378();

    uint64_t v12 = (void *)v11;
  }
  else
  {
    type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons();
    sub_1B2B0E2EC();
    uint64_t v13 = sub_1B2E820D8();
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)v13;
  }
  uint64_t v14 = sub_1B2B12294();
  v15(v14);

  _Block_release(v4);
  sub_1B299AD7C();
  return v16();
}

uint64_t static PersonEntityTaggingService.tagName(gdTag:)()
{
  PersonEntityTagType.init(gdTagType:)(&v1);
  return PersonEntityTagType.rawValue.getter();
}

uint64_t static PersonEntityTaggingService.gdTagType(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = qword_1F0AB9B60;
  if (qword_1F0AB9B60)
  {
    uint64_t v5 = &byte_1F0AB9B70;
    while (1)
    {
      int v6 = *v5++;
      unint64_t v7 = 0xE500000000000000;
      unint64_t v8 = 0x7465736E75;
      switch(v6)
      {
        case 1:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x6E776F6E6B6E75;
          break;
        case 2:
          unint64_t v8 = 0x726568746FLL;
          break;
        case 3:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x666C6573796DLL;
          break;
        case 4:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x796C696D6166;
          break;
        case 5:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x746E65726170;
          break;
        case 6:
          unint64_t v8 = 0x726568746F6DLL;
          unint64_t v7 = 0xE600000000000000;
          break;
        case 7:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v9 = 1752457574;
          goto LABEL_14;
        case 8:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x676E696C626973;
          break;
        case 9:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v10 = 0x6568746F7262;
          goto LABEL_24;
        case 10:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v9 = 1953720691;
LABEL_14:
          unint64_t v8 = v9 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
          break;
        case 11:
          unint64_t v7 = 0xEB00000000746E65;
          unint64_t v8 = 0x726150646E617267;
          break;
        case 12:
          unint64_t v8 = 0x746F6D646E617267;
          goto LABEL_18;
        case 13:
          unint64_t v8 = 0x746166646E617267;
LABEL_18:
          unint64_t v7 = 0xEB00000000726568;
          break;
        case 14:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v11 = 0x6C696843796DLL;
          goto LABEL_27;
        case 15:
          unint64_t v8 = 0x646C696863;
          break;
        case 16:
          unint64_t v7 = 0xE300000000000000;
          unint64_t v8 = 7237491;
          break;
        case 17:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v12 = 0x746867756164;
          goto LABEL_31;
        case 18:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v10 = 0x656E74726170;
LABEL_24:
          unint64_t v8 = v10 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
          break;
        case 19:
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1701210487;
          break;
        case 20:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v11 = 0x6E6162737568;
LABEL_27:
          unint64_t v8 = v11 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
          break;
        case 21:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x646E65697266;
          break;
        case 22:
          unint64_t v7 = 0x80000001B2E8EA20;
          unint64_t v8 = 0xD000000000000010;
          break;
        case 23:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v12 = 0x6B726F776F63;
LABEL_31:
          unint64_t v8 = v12 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
          break;
        case 24:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x726F62686769656ELL;
          break;
        case 25:
          unint64_t v7 = 0xE900000000000065;
          unint64_t v8 = 0x74616D6573756F68;
          break;
        case 26:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x696E6D756C61;
          break;
        case 27:
          uint64_t v13 = 1699772781;
          goto LABEL_38;
        case 28:
          unint64_t v8 = 0x676F44796DLL;
          break;
        case 29:
          uint64_t v13 = 1631811949;
LABEL_38:
          unint64_t v8 = v13 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
          break;
        default:
          break;
      }
      if (v8 == a1 && v7 == a2) {
        break;
      }
      char v15 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_47;
      }
      if (!--v2) {
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRelease();
LABEL_47:
    swift_bridgeObjectRelease();
    return PersonEntityTagType.gdTagType.getter();
  }
  else
  {
LABEL_45:
    swift_bridgeObjectRelease();
    return 1;
  }
}

uint64_t PersonEntityTagType.gdTagType.getter()
{
  return qword_1B2ED2658[*v0];
}

uint64_t static PersonEntityTaggingService.checkServiceState()()
{
  return static EntityTaggingService.checkServiceState()();
}

uint64_t static EntityTaggingService.checkServiceState()()
{
  v21[1] = *(id *)MEMORY[0x1E4F143B8];
  type metadata accessor for ViewService();
  char v1 = (char *)static ViewService.clientService.getter();
  uint64_t v2 = OBJC_IVAR___GDSwiftViewService_accessRequester;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR___GDSwiftViewService_accessRequester];
  uint64_t v4 = (void *)sub_1B2E82348();
  v21[0] = 0;
  id v5 = objc_msgSend(v3, sel_requestAssertionForViewName_error_, v4, v21);

  id v6 = v21[0];
  if (v5)
  {
    sub_1B2B1236C();
    unint64_t v7 = *(void (**)(id, uint64_t *, uint64_t))(v0 + 8);
    id v8 = v6;
    swift_retain();
    v7(v5, &OBJC_IVAR___GDSwiftViewService_databaseCache, v0);
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v11 = 1;
  }
  else
  {
    id v9 = v21[0];
    uint64_t v10 = (void *)sub_1B2E80388();

    swift_willThrow();
    uint64_t v11 = 0;
  }
  uint64_t v12 = *(void **)&v1[v2];
  uint64_t v13 = (void *)sub_1B2E82348();
  v21[0] = 0;
  id v14 = objc_msgSend(v12, sel_requestAssertionForViewName_error_, v13, v21);

  id v15 = v21[0];
  if (v14)
  {
    sub_1B2B1236C();
    BOOL v16 = *(void (**)(id, uint64_t *, uint64_t))(v11 + 8);
    id v17 = v15;
    swift_retain();
    v16(v14, &OBJC_IVAR___GDSwiftViewService_databaseCache, v11);

    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    if ((v11 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    id v18 = v21[0];
    char v19 = (void *)sub_1B2E80388();

    swift_willThrow();
    if ((v11 & 1) == 0) {
      return 2;
    }
  }
  return 1;
}

uint64_t sub_1B2AFBAD0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_1B299D7F8((uint64_t)sub_1B2AFBAE8);
}

uint64_t sub_1B2AFBAE8()
{
  sub_1B299F394();
  sub_1B29FDA20();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2AFBB70(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return sub_1B299D7F8((uint64_t)sub_1B2AFBB88);
}

uint64_t sub_1B2AFBB88()
{
  sub_1B2AEC410();
  Class super_class = v0[2].super_class;
  id v2 = [(objc_class *)super_class eventIds];
  sub_1B2AF7C50(v2);
  uint64_t v4 = v3;

  id v5 = [(objc_class *)super_class feedbackType];
  if ((unint64_t)v5 >= 5) {
    return sub_1B2E83418();
  }
  char v6 = (char)v5;
  unint64_t v7 = (objc_class *)type metadata accessor for EntityTaggingStatefulFeedback();
  id v8 = (char *)objc_allocWithZone(v7);
  id v9 = &v8[OBJC_IVAR____TtC20IntelligencePlatform29EntityTaggingStatefulFeedback_kind];
  *(void *)id v9 = v4;
  v9[8] = v6;
  v0[1].receiver = v8;
  v0[1].Class super_class = v7;
  v0[3].Class super_class = (Class)objc_msgSendSuper2(v0 + 1, sel_init);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[4].receiver = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1B2AFBD0C;
  uint64_t v11 = sub_1B2B12430();
  return sub_1B2AFBAD0(v11);
}

uint64_t sub_1B2AFBD0C()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299B0E0();
  *char v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1B299F2A4();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {

    sub_1B299AD7C();
    return v10();
  }
}

uint64_t sub_1B2AFBE0C()
{
  sub_1B299B3BC();

  sub_1B299AD7C();
  return v1();
}

id EntityTaggingStatefulFeedback.__allocating_init(kind:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = &v3[OBJC_IVAR____TtC20IntelligencePlatform29EntityTaggingStatefulFeedback_kind];
  *(void *)uint64_t v5 = *(void *)a1;
  v5[8] = v4;
  v7.receiver = v3;
  v7.Class super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1B2AFBF50(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  a3;
  objc_super v7 = (void *)swift_task_alloc();
  v3[5] = v7;
  void *v7 = v3;
  v7[1] = sub_1B2AFC014;
  return sub_1B2AFBB70((uint64_t)v6);
}

uint64_t sub_1B2AFC014()
{
  sub_1B299B9B8();
  uint64_t v3 = v0;
  sub_1B29A19D4();
  uint64_t v5 = v4;
  sub_1B299B0E0();
  *id v6 = v5;
  objc_super v7 = (void *)v1[3];
  uint64_t v8 = (void *)v1[2];
  *id v6 = *v2;
  swift_task_dealloc();

  uint64_t v9 = v1[4];
  if (v3)
  {
    sub_1B2E80378();

    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v2);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v9 + 16))(v9, 0);
  }
  _Block_release(*(const void **)(v5 + 32));
  sub_1B2B123A8();
  return v10();
}

uint64_t sub_1B2AFC174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[29] = a4;
  v5[30] = v4;
  v5[27] = a2;
  v5[28] = a3;
  v5[26] = a1;
  return sub_1B299D7F8((uint64_t)sub_1B2AFC194);
}

uint64_t sub_1B2AFC194()
{
  sub_1B2B12404();
  sub_1B299B9B8();
  uint64_t v2 = *(void *)(v0 + 208);
  char v3 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v0 + 472) = v3;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << v3;
  if (-(-1 << v3) < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v2 + 64);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 248) = MEMORY[0x1E4FBC860];
  uint64_t v8 = (void *)swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v9 = 0;
    unint64_t v10 = __clz(__rbit64(v6));
    uint64_t v11 = (v6 - 1) & v6;
LABEL_5:
    *(void *)(v0 + 256) = v9;
    *(void *)(v0 + 264) = v11;
    uint64_t v12 = *(void *)(v8[6] + 8 * v10);
    *(unsigned char *)(v0 + 473) = *(unsigned char *)(v8[7] + v10);
    if ((v12 & 0x80000000000000) != 0)
    {
      *(void *)(v0 + 24) = 0xE300000000000000;
      uint64_t v13 = (void *)(v0 + 24);
      *(void *)(v0 + 16) = 3826797;
      *(void *)(v0 + 192) = v12;
    }
    else
    {
      *(void *)(v0 + 56) = 0xE300000000000000;
      uint64_t v13 = (void *)(v0 + 56);
      sub_1B2B126D4();
      *(void *)(v0 + 176) = v14;
    }
    sub_1B2E83748();
    sub_1B2B11C1C();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 272) = *v13;
    id v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v15;
    *id v15 = v0;
    BOOL v16 = sub_1B2AFC7C4;
LABEL_9:
    v15[1] = v16;
    sub_1B2B11B34();
    sub_1B2999AC8();
    return sub_1B2AFA104(v17, v18, v19);
  }
  unint64_t v22 = 63 - v5;
  if ((unint64_t)(63 - v5) > 0x7F)
  {
    if (v8[9])
    {
LABEL_14:
      sub_1B2B11CDC();
      goto LABEL_5;
    }
    if (v22 >= 0xC0)
    {
      if (v8[10]) {
        goto LABEL_14;
      }
      if (v22 >= 0x100)
      {
        if (v8[11]) {
          goto LABEL_14;
        }
        if (v22 >= 0x140)
        {
          if (v8[12]) {
            goto LABEL_14;
          }
          sub_1B2B11ECC();
          while (1)
          {
            sub_1B2B11EC0();
            if (v23) {
              break;
            }
            sub_1B2B11EB4();
            if (v24) {
              goto LABEL_14;
            }
          }
        }
      }
    }
  }
  uint64_t v25 = *(void *)(v0 + 216);
  swift_release();
  *(unsigned char *)(v0 + 474) = *(unsigned char *)(v25 + 32);
  sub_1B2B11BE0();
  *(void *)(v0 + 304) = v7;
  swift_bridgeObjectRetain();
  if (v1)
  {
    sub_1B2B11F90(*(void *)(v0 + 216), 0);
    if ((v26 & 0x80000000000000) != 0) {
      sub_1B2B11B0C(v26);
    }
    else {
      sub_1B2B11AE0(v26);
    }
    sub_1B2E83748();
    sub_1B2B11C1C();
    swift_bridgeObjectRelease();
    sub_1B2B1244C();
    id v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v15;
    *id v15 = v0;
    BOOL v16 = sub_1B2AFCEF4;
    goto LABEL_9;
  }
  uint64_t v27 = *(void *)(v0 + 224);
  swift_release();
  *(unsigned char *)(v0 + 476) = *(unsigned char *)(v27 + 32);
  sub_1B2B11BE0();
  *(void *)(v0 + 360) = v7;
  swift_bridgeObjectRetain();
  uint64_t v28 = *(void *)(v0 + 232);
  swift_release();
  *(unsigned char *)(v0 + 478) = *(unsigned char *)(v28 + 32);
  sub_1B2B11BE0();
  *(void *)(v0 + 416) = v7;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v29 = *(void *)(v7 + 16);
  if (v29)
  {
    long long v30 = (id *)(v7 + 40);
    do
    {
      id v31 = *v30;
      sub_1B29FD7A0();
      v30 += 2;

      --v29;
    }
    while (v29);
  }
  swift_bridgeObjectRelease();
  sub_1B2999AB8();
  sub_1B2999AC8();
  return v33(v32, v33, v34, v35, v36, v37, v38, v39);
}

uint64_t sub_1B2AFC7C4()
{
  sub_1B299F394();
  sub_1B2B11A0C();
  uint64_t v3 = v2;
  sub_1B299B0E0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *unint64_t v6 = v5;
  *(void *)(v3 + 288) = v7;
  *(void *)(v3 + 296) = v0;
  swift_task_dealloc();
  sub_1B2B12348();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

#error "1B2AFC914: call analysis failed (funcsize=387)"

uint64_t sub_1B2AFCEF4()
{
  sub_1B299F394();
  sub_1B2B11A0C();
  uint64_t v3 = v2;
  sub_1B299B0E0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *unint64_t v6 = v5;
  *(void *)(v3 + 344) = v7;
  *(void *)(v3 + 352) = v0;
  swift_task_dealloc();
  sub_1B2B12348();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

#error "1B2AFD044: call analysis failed (funcsize=278)"

uint64_t sub_1B2AFD468()
{
  sub_1B299F394();
  sub_1B2B11A0C();
  uint64_t v3 = v2;
  sub_1B299B0E0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *unint64_t v6 = v5;
  *(void *)(v3 + 400) = v7;
  *(void *)(v3 + 408) = v0;
  swift_task_dealloc();
  sub_1B2B12348();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

#error "1B2AFD5B8: call analysis failed (funcsize=228)"

uint64_t sub_1B2AFD914()
{
  sub_1B299F394();
  sub_1B2B11A0C();
  uint64_t v3 = v2;
  sub_1B299B0E0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *unint64_t v6 = v5;
  *(void *)(v3 + 456) = v7;
  *(void *)(v3 + 464) = v0;
  swift_task_dealloc();
  sub_1B2B12348();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

#error "1B2AFDA64: call analysis failed (funcsize=146)"

uint64_t sub_1B2AFDC70()
{
  sub_1B299B3BC();
  swift_release();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2AFDCCC()
{
  sub_1B299B3BC();
  swift_release();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2AFDD28()
{
  sub_1B299B3BC();
  swift_release();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2AFDD84()
{
  sub_1B299B3BC();
  swift_release();
  sub_1B299AD7C();
  return v0();
}

id EntityTaggingDirectFeedback.__allocating_init(kind:tagInference:)()
{
  sub_1B29A08D4();
  id v3 = objc_allocWithZone(v1);
  return EntityTaggingDirectFeedback.init(kind:tagInference:)(v2, v0);
}

uint64_t sub_1B2AFDE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return sub_1B299D7F8((uint64_t)sub_1B2AFDE40);
}

uint64_t sub_1B2AFDE40()
{
  sub_1B2AEC410();
  uint64_t v1 = (void *)v0[2];
  if (v1) {
    uint64_t v2 = sub_1B2AF8498(MEMORY[0x1E4FBC868], v1);
  }
  else {
    uint64_t v2 = 0;
  }
  v0[7] = v2;
  id v3 = (void *)v0[3];
  if (v3) {
    uint64_t v4 = sub_1B2AF8498(MEMORY[0x1E4FBC868], v3);
  }
  else {
    uint64_t v4 = 0;
  }
  v0[8] = v4;
  uint64_t v5 = (void *)v0[4];
  if (v5) {
    uint64_t v6 = sub_1B2AF8498(MEMORY[0x1E4FBC868], v5);
  }
  else {
    uint64_t v6 = 0;
  }
  v0[9] = v6;
  uint64_t v7 = (void *)v0[5];
  if (v7) {
    uint64_t v8 = sub_1B2AF8498(MEMORY[0x1E4FBC868], v7);
  }
  else {
    uint64_t v8 = 0;
  }
  v0[10] = v8;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9C3DAB8 + dword_1E9C3DAB8);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[11] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1B2AFDF98;
  return v11(v2, v4, v6, v8);
}

uint64_t sub_1B2AFDF98()
{
  sub_1B2B12404();
  sub_1B299B9B8();
  sub_1B299B708();
  uint64_t v1 = *v0;
  sub_1B299B0E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B299AD7C();
  sub_1B2999AC8();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1B2AFE184(void *a1, void *a2, void *a3, void *a4, void *aBlock, void *a6)
{
  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  uint64_t v6[2] = a1;
  v6[7] = _Block_copy(aBlock);
  id v12 = a1;
  id v13 = a2;
  id v14 = a3;
  id v15 = a4;
  a6;
  BOOL v16 = (void *)swift_task_alloc();
  v6[8] = v16;
  *BOOL v16 = v6;
  v16[1] = sub_1B2AFE27C;
  return sub_1B2AFDE20((uint64_t)a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)a4);
}

uint64_t sub_1B2AFE27C()
{
  sub_1B2B1222C();
  uint64_t v3 = v0;
  sub_1B2B11A0C();
  uint64_t v5 = v4;
  sub_1B299B0E0();
  *uint64_t v6 = v5;
  uint64_t v7 = (void *)v2[6];
  uint64_t v8 = (void *)v2[5];
  uint64_t v9 = (void *)v2[4];
  uint64_t v10 = (void *)v2[3];
  uint64_t v11 = (void *)v2[2];
  uint64_t v12 = *v1;
  *uint64_t v6 = *v1;
  swift_task_dealloc();

  sub_1B2B12348();
  uint64_t v14 = *(void *)(v13 + 56);
  if (v3)
  {
    id v15 = (void *)sub_1B2E80378();

    (*(void (**)(uint64_t, void *))(v14 + 16))(v14, v15);
  }
  else
  {
    (*(void (**)(void, void))(v14 + 16))(*(void *)(v13 + 56), 0);
  }
  _Block_release(*(const void **)(v5 + 56));
  BOOL v16 = *(uint64_t (**)(void))(v12 + 8);
  return v16();
}

void PersonEntityTaggingService.init()()
{
}

id PersonEntityTaggingService.__deallocating_deinit()
{
  return sub_1B2B03504(type metadata accessor for PersonEntityTaggingService);
}

id PersonEntityTaggingService.EntityTagConfiguration.init()()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for PersonEntityTaggingService.EntityTagConfiguration();
  return objc_msgSendSuper2(&v2, sel_init);
}

id PersonEntityTaggingService.EntityTagConfiguration.__deallocating_deinit()
{
  return sub_1B2B03504(type metadata accessor for PersonEntityTaggingService.EntityTagConfiguration);
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.__allocating_init(tag:score:inferenceEventId:)()
{
  sub_1B2B11F20();
  double v0 = sub_1B2B11EF8();
  return PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init(tag:score:inferenceEventId:)(v1, v2, v0);
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init(tag:score:inferenceEventId:)(unsigned char *a1, uint64_t a2, double a3)
{
  v3[OBJC_IVAR___GDScoredPersonEntityTagInner_tag] = *a1;
  *(double *)&v3[OBJC_IVAR___GDScoredPersonEntityTagInner_score] = a3;
  *(void *)&v3[OBJC_IVAR___GDScoredPersonEntityTagInner_inferenceEventId] = a2;
  v5.receiver = v3;
  v5.Class super_class = (Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag();
  return objc_msgSendSuper2(&v5, sel_init);
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.__allocating_init(tag:score:inferenceEventIdValue:)(char *a1, uint64_t a2, double a3)
{
  char v7 = *a1;
  id v5 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag());
  return PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init(tag:score:inferenceEventId:)(&v7, a2, a3);
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.__allocating_init(gdTag:score:inferenceEventIdValue:)()
{
  sub_1B2B11F20();
  double v0 = sub_1B2B11EF8();
  return PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init(gdTag:score:inferenceEventIdValue:)(v0, v1, v2);
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init(gdTag:score:inferenceEventIdValue:)(double a1, uint64_t a2, uint64_t a3)
{
  PersonEntityTagType.init(gdTagType:)(&v7);
  swift_getObjectType();
  id v5 = PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.__allocating_init(tag:score:inferenceEventIdValue:)(&v7, a3, a1);
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.inferenceEventId.getter()
{
  return sub_1B29A1AE0(OBJC_IVAR___GDScoredPersonEntityTagInner_inferenceEventId);
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.tag.getter(unsigned char *a1@<X8>)
{
}

uint64_t sub_1B2AFE778()
{
  return PersonEntityTagType.gdTagType.getter();
}

double PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.score.getter()
{
  return *(double *)(v0 + OBJC_IVAR___GDScoredPersonEntityTagInner_score);
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init()()
{
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.__deallocating_deinit()
{
  return sub_1B2B03504(type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag);
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.__allocating_init(idValue:scoredPersonEntityTags:inferenceEventIdValue:)()
{
  sub_1B299B1E4();
  uint64_t v0 = sub_1B2B11F0C();
  return PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(idValue:scoredPersonEntityTags:inferenceEventIdValue:)(v0, v1, v2);
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(idValue:scoredPersonEntityTags:inferenceEventIdValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = a1;
  id v5 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags());
  uint64_t v6 = a3;
  id v7 = v5;
  PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(id:scoredPersonEntityTags:inferenceEventId:)(&v9, a2, v6);
  sub_1B2B126A8();
  sub_1B2B121EC();
  return v7;
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.__allocating_init(id:scoredPersonEntityTags:inferenceEventId:)()
{
  sub_1B299B1E4();
  uint64_t v0 = (void *)sub_1B2B11F0C();
  return PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(id:scoredPersonEntityTags:inferenceEventId:)(v0, v1, v2);
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(id:scoredPersonEntityTags:inferenceEventId:)(void *a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_id] = *a1;
  *(void *)&v3[OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_scoredPersonEntityTags] = a2;
  *(void *)&v3[OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_inferenceEventId] = a3;
  v5.receiver = v3;
  v5.Class super_class = (Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags();
  return objc_msgSendSuper2(&v5, sel_init);
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.id.getter(void *a1@<X8>)
{
}

uint64_t PersonEntityTaggingService.ScoreRankedPersonEntityTags.inferenceEventId.getter()
{
  return sub_1B29A1AE0(OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_inferenceEventId);
}

uint64_t sub_1B2AFE9C8()
{
  return sub_1B29A1AE0(OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_id);
}

uint64_t PersonEntityTaggingService.ScoreRankedPersonEntityTags.scoredPersonEntityTags.getter()
{
  return sub_1B299F668();
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.init()()
{
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.__deallocating_deinit()
{
  return sub_1B2B03504(type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags);
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.id.getter(void *a1@<X8>)
{
}

uint64_t PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.inferenceEventId.getter()
{
  return sub_1B29A1AE0(OBJC_IVAR___GDScoredPersonInner_inferenceEventId);
}

uint64_t sub_1B2AFEACC()
{
  return sub_1B29A1AE0(OBJC_IVAR___GDScoredPersonInner_id);
}

double PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.score.getter()
{
  return *(double *)(v0 + OBJC_IVAR___GDScoredPersonInner_score);
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.__allocating_init(id:score:inferenceEventId:)()
{
  sub_1B2B11F20();
  double v0 = sub_1B2B11EF8();
  return PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.init(id:score:inferenceEventId:)(v1, v2, v0);
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.init(id:score:inferenceEventId:)(void *a1, uint64_t a2, double a3)
{
  *(void *)&v3[OBJC_IVAR___GDScoredPersonInner_id] = *a1;
  *(double *)&v3[OBJC_IVAR___GDScoredPersonInner_score] = a3;
  *(void *)&v3[OBJC_IVAR___GDScoredPersonInner_inferenceEventId] = a2;
  v5.receiver = v3;
  v5.Class super_class = (Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson();
  return objc_msgSendSuper2(&v5, sel_init);
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.__allocating_init(idValue:score:inferenceEventIdValue:)()
{
  sub_1B2B11F20();
  double v0 = sub_1B2B11EF8();
  return PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.init(idValue:score:inferenceEventIdValue:)(v1, v2, v0);
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.init(idValue:score:inferenceEventIdValue:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v9 = a1;
  id v5 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson());
  uint64_t v6 = a2;
  id v7 = v5;
  PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.init(id:score:inferenceEventId:)(&v9, v6, a3);
  sub_1B2B126A8();
  sub_1B2B121EC();
  return v7;
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.init()()
{
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.__deallocating_deinit()
{
  return sub_1B2B03504(type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson);
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.__allocating_init(tag:scoredEntities:inferenceEventId:)()
{
  sub_1B299B1E4();
  double v0 = (unsigned char *)sub_1B2B11F0C();
  return PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(tag:scoredEntities:inferenceEventId:)(v0, v1, v2);
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(tag:scoredEntities:inferenceEventId:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  v3[OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_tag] = *a1;
  *(void *)&v3[OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_scoredEntities] = a2;
  *(void *)&v3[OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_inferenceEventId] = a3;
  v5.receiver = v3;
  v5.Class super_class = (Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons();
  return objc_msgSendSuper2(&v5, sel_init);
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.__allocating_init(gdTag:scoredEntities:inferenceEventIdValue:)()
{
  sub_1B299B1E4();
  uint64_t v0 = sub_1B2B11F0C();
  return PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(gdTag:scoredEntities:inferenceEventIdValue:)(v0, v1, v2);
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(gdTag:scoredEntities:inferenceEventIdValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  PersonEntityTagType.init(gdTagType:)(&v9);
  id v5 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons());
  uint64_t v6 = a3;
  id v7 = v5;
  PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(tag:scoredEntities:inferenceEventId:)(&v9, a2, v6);
  sub_1B2B126A8();
  sub_1B2B121EC();
  return v7;
}

uint64_t sub_1B2AFEE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t))
{
  a6();
  uint64_t v10 = sub_1B2E82838();
  return a7(a3, v10, a5);
}

uint64_t PersonEntityTaggingService.ScoreRankedEntityTagPersons.inferenceEventId.getter()
{
  return sub_1B29A1AE0(OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_inferenceEventId);
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.tag.getter(unsigned char *a1@<X8>)
{
}

uint64_t sub_1B2AFEF14()
{
  return PersonEntityTagType.gdTagType.getter();
}

id sub_1B2AFEF7C(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void))
{
  a3();
  a4();
  id v5 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t PersonEntityTaggingService.ScoreRankedEntityTagPersons.scoredEntities.getter()
{
  return sub_1B299F668();
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.init()()
{
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.__deallocating_deinit()
{
  return sub_1B2B03504(type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons);
}

id sub_1B2AFF06C()
{
  sub_1B2AF7990();
  uint64_t v0 = sub_1B2E82148();
  uint64_t v1 = (objc_class *)type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions();
  uint64_t v2 = (char *)objc_allocWithZone(v1);
  *(void *)&v2[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds] = v0;
  v4.receiver = v2;
  v4.Class super_class = v1;
  id result = objc_msgSendSuper2(&v4, sel_init);
  qword_1E9C3DA18 = (uint64_t)result;
  return result;
}

id PersonEntityTaggingService.PersonEntityTaggingOptions.__allocating_init(tagThresholds:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds] = a1;
  v5.receiver = v3;
  v5.Class super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id static PersonEntityTaggingService.PersonEntityTaggingOptions.defaultPersonTaggingOptions.getter()
{
  if (qword_1E9C38BD8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E9C3DA18;

  return v0;
}

uint64_t PersonEntityTaggingService.PersonEntityTaggingOptions.__allocating_init(tagNameThresholds:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return PersonEntityTaggingService.PersonEntityTaggingOptions.init(tagNameThresholds:)(a1);
}

uint64_t PersonEntityTaggingService.PersonEntityTaggingOptions.init(tagNameThresholds:)(uint64_t a1)
{
  sub_1B2AF7990();
  id v3 = v1;
  uint64_t v9 = sub_1B2E82148();
  sub_1B2AF87CC(a1, (void (*)(uint64_t, uint64_t, double))sub_1B2B03298);
  swift_bridgeObjectRelease();

  uint64_t v4 = v9;
  objc_super v5 = (objc_class *)type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds] = v4;
  v8.receiver = v6;
  v8.Class super_class = v5;
  swift_bridgeObjectRetain();
  objc_msgSendSuper2(&v8, sel_init);
  sub_1B2B126A8();
  swift_deallocPartialClassInstance();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B2AFF2C8(uint64_t a1, void *a2)
{
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = a1;
  v4._object = a2;
  PersonEntityTagType.init(rawValue:)(v4);
  uint64_t result = v6;
  if (v6 != 30) {
    return sub_1B2B2A3A0(v6);
  }
  return result;
}

id PersonEntityTaggingService.PersonEntityTaggingOptions.init(tagThresholds:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds] = a1;
  v3.receiver = v1;
  v3.Class super_class = (Class)type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_1B2AFF3C0()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1B2AFF430(v0);
}

uint64_t sub_1B2AFF3EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2AFF430(uint64_t a1)
{
  objc_super v3 = (void *)(v1 + OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds);
  swift_beginAccess();
  *objc_super v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B2AFF484())()
{
  return j__swift_endAccess;
}

uint64_t sub_1B2AFF550()
{
  sub_1B299D804();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1B2AF8050(v0);
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  return sub_1B2AF8A10(v2, &qword_1E9C37B20, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B2B08488);
}

void PersonEntityTaggingService.PersonEntityTaggingOptions.init()()
{
}

id PersonEntityTaggingService.PersonEntityTaggingOptions.__deallocating_deinit()
{
  return sub_1B2B03504(type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions);
}

double static EntityTaggingService.currentVersion.getter()
{
  return 1.0;
}

uint64_t EntityTaggingService.__allocating_init(config:)()
{
  uint64_t v0 = sub_1B2B1255C();
  EntityTaggingService.init(config:)();
  return v0;
}

void *EntityTaggingService.init(config:)()
{
  uint64_t v2 = v0;
  v22[1] = *(id *)MEMORY[0x1E4F143B8];
  type metadata accessor for ViewService();
  objc_super v3 = (char *)static ViewService.clientService.getter();
  Swift::String v4 = *(void **)&v3[OBJC_IVAR___GDSwiftViewService_accessRequester];
  objc_super v5 = (void *)sub_1B2B1265C();
  v22[0] = 0;
  id v6 = objc_msgSend(v4, sel_requestAssertionForViewName_error_, v5, v22);

  id v7 = v22[0];
  if (v6)
  {
    uint64_t v21 = v2;
    objc_super v8 = *(void **)&v3[OBJC_IVAR___GDSwiftViewService_databaseCache];
    uint64_t v10 = v8[5];
    uint64_t v9 = v8[6];
    sub_1B29AEC7C(v8 + 2, v10);
    uint64_t v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v9 + 8);
    id v12 = v7;
    swift_retain();
    uint64_t v13 = v11(v6, v10, v9);
    if (!v1)
    {
      uint64_t v16 = v13;
      uint64_t v17 = v14;
      swift_release();

      uint64_t v2 = v21;
      id v21[2] = v6;
      v21[3] = v16;
      sub_1B2B127A0();
      v21[4] = v17;
      v21[5] = v18;
      sub_1B2B12180();
      sub_1B2B12524(v19);
      return v2;
    }
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v2 = v21;
  }
  else
  {
    id v15 = v22[0];
    sub_1B2E80388();

    swift_willThrow();
  }

  type metadata accessor for EntityTaggingService();
  sub_1B2B12780();
  return v2;
}

uint64_t EntityTaggingService.__allocating_init(etConfig:viewService:)(void *a1, char *a2)
{
  uint64_t v4 = sub_1B2B1255C();
  EntityTaggingService.init(etConfig:viewService:)(a1, a2);
  return v4;
}

void *EntityTaggingService.init(etConfig:viewService:)(void *a1, char *a2)
{
  uint64_t v4 = v2;
  v26[1] = *(id *)MEMORY[0x1E4F143B8];
  id v7 = *(void **)&a2[OBJC_IVAR___GDSwiftViewService_accessRequester];
  objc_super v8 = (void *)sub_1B2B1265C();
  v26[0] = 0;
  id v9 = objc_msgSend(v7, sel_requestAssertionForViewName_error_, v8, v26);

  id v10 = v26[0];
  if (v9)
  {
    uint64_t v24 = a1;
    uint64_t v25 = v4;
    uint64_t v11 = *(void **)&a2[OBJC_IVAR___GDSwiftViewService_databaseCache];
    uint64_t v13 = v11[5];
    uint64_t v12 = v11[6];
    sub_1B29AEC7C(v11 + 2, v13);
    uint64_t v14 = *(uint64_t (**)(id, uint64_t, uint64_t))(v12 + 8);
    id v15 = v10;
    swift_retain();
    uint64_t v16 = v14(v9, v13, v12);
    if (!v3)
    {
      uint64_t v19 = v16;
      uint64_t v20 = v17;

      swift_release();
      uint64_t v4 = v25;
      v25[2] = v9;
      v25[3] = v19;
      sub_1B2B127A0();
      _OWORD v25[4] = v20;
      v25[5] = v21;
      sub_1B2B12180();
      sub_1B2B12524(v22);
      return v4;
    }

    swift_release();
    swift_unknownObjectRelease();
    a1 = v24;
    uint64_t v4 = v25;
  }
  else
  {
    id v18 = v26[0];
    sub_1B2E80388();

    swift_willThrow();
  }

  type metadata accessor for EntityTaggingService();
  sub_1B2B12780();
  return v4;
}

uint64_t type metadata accessor for PersonEntityTaggingService()
{
  return self;
}

uint64_t sub_1B2AFFA9C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v5[6] = a3;
  v5[7] = v4;
  v5[4] = a1;
  v5[5] = a2;
  v5[8] = *a4;
  return sub_1B299D7F8((uint64_t)sub_1B2AFFAC0);
}

uint64_t sub_1B2AFFAC0()
{
  sub_1B299F394();
  id receiver = v0[4].receiver;
  if (receiver)
  {
    uint64_t v2 = (objc_class *)type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions();
    uint64_t v3 = (char *)objc_allocWithZone(v2);
    *(void *)&v3[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds] = receiver;
    v0[1].id receiver = v3;
    v0[1].uint64_t super_class = v2;
    swift_bridgeObjectRetain();
    uint64_t v4 = (objc_class *)objc_msgSendSuper2(v0 + 1, sel_init);
  }
  else
  {
    uint64_t v4 = 0;
  }
  v0[4].uint64_t super_class = v4;
  objc_super v5 = (void *)swift_task_alloc();
  v0[5].id receiver = v5;
  *objc_super v5 = v0;
  v5[1] = sub_1B2AFFBB4;
  uint64_t v6 = (uint64_t)v0[3].receiver;
  uint64_t super_class = (uint64_t)v0[2].super_class;
  return sub_1B2AFFEB0(super_class, v6, (uint64_t)v4);
}

uint64_t sub_1B2AFFBB4()
{
  sub_1B299B3BC();
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 88) = v4;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

void sub_1B2AFFC98()
{
  sub_1B2ADAB94();
  unint64_t v1 = *(void *)(v0[11] + OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_scoredPersonEntityTags);
  if (v1 >> 62)
  {
    sub_1B2B1263C();
    uint64_t v2 = sub_1B2E83448();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    uint64_t v12 = (void *)v0[9];
    swift_bridgeObjectRelease();

    uint64_t v4 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  sub_1B2B12418();
  sub_1B29C08E8();
  if (v2 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v3 = 0;
  uint64_t v4 = v18;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      uint64_t v5 = (unsigned char *)MEMORY[0x1B3EB1A20](v3, v1);
    }
    else {
      uint64_t v5 = *(id *)(v1 + 8 * v3 + 32);
    }
    char v6 = v5[OBJC_IVAR___GDScoredPersonEntityTagInner_tag];
    uint64_t v7 = *(void *)&v5[OBJC_IVAR___GDScoredPersonEntityTagInner_score];

    unint64_t v9 = *(void *)(v18 + 16);
    unint64_t v8 = *(void *)(v18 + 24);
    if (v9 >= v8 >> 1)
    {
      sub_1B2B124FC(v8);
      sub_1B29C08E8();
    }
    ++v3;
    *(void *)(v18 + 16) = v9 + 1;
    uint64_t v10 = v18 + 16 * v9;
    *(unsigned char *)(v10 + 32) = v6;
    *(void *)(v10 + 40) = v7;
  }
  while (v2 != v3);
  uint64_t v11 = (void *)v0[9];
  swift_bridgeObjectRelease();

LABEL_14:
  uint64_t v13 = (char *)v0[11];
  uint64_t v14 = (void *)v0[4];
  uint64_t v15 = *(void *)&v13[OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_id];
  uint64_t v16 = *(void *)&v13[OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_inferenceEventId];

  void *v14 = v15;
  v14[1] = v4;
  void v14[2] = v16;
  sub_1B2999AB8();
  v17();
}

uint64_t sub_1B2AFFE54()
{
  sub_1B299B3BC();

  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2AFFEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  return sub_1B299D7F8((uint64_t)sub_1B2AFFECC);
}

void sub_1B2AFFECC()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 96);
  unint64_t v2 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  EntityIdentifier.init(_:)(v1, v2, (uint64_t)v24);
  if ((v24[1] & 1) == 0)
  {
    uint64_t v3 = (_OWORD *)(v0 + 16);
    uint64_t v4 = v24[0];
    uint64_t v5 = *(void **)(v0 + 112);
    if (v5)
    {
      char v6 = *(char **)(v0 + 112);
    }
    else
    {
      if (qword_1E9C38BD8 == -1)
      {
        uint64_t v5 = 0;
      }
      else
      {
        swift_once();
        uint64_t v5 = *(void **)(v0 + 112);
      }
      char v6 = (char *)(id)qword_1E9C3DA18;
    }
    uint64_t v7 = *(void *)(v0 + 120);
    long long v9 = *(_OWORD *)(v7 + 32);
    long long v8 = *(_OWORD *)(v7 + 48);
    long long v10 = *(_OWORD *)(v7 + 16);
    *(void *)(v0 + 64) = *(void *)(v7 + 64);
    *(_OWORD *)(v0 + 32) = v9;
    *(_OWORD *)(v0 + 48) = v8;
    *uint64_t v3 = v10;
    swift_getObjectType();
    uint64_t v11 = swift_task_alloc();
    *(void *)(v11 + 16) = v3;
    *(void *)(v11 + 24) = v4;
    id v12 = v5;
    sub_1B29A3EB4((uint64_t *)&unk_1E9C3DB30);
    sub_1B2E80C28();
    swift_task_dealloc();
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v13 = *(void *)(v0 + 80);
    int v15 = *(unsigned __int8 *)(v0 + 88);
    uint64_t v16 = (uint64_t *)&v6[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds];
    sub_1B299D804();
    uint64_t v17 = *v16;
    swift_bridgeObjectRetain_n();
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_1B2AF822C(v18, v17, v14, v13, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19 < 0 || (v19 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = (uint64_t)sub_1B2A46A48();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    v24[0] = v20;
    sub_1B2AF8954(v24);
    swift_bridgeObjectRelease();
    uint64_t v21 = v24[0];
    if (v15) {
      uint64_t v13 = 0;
    }
    v24[0] = v4;
    objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags());
    swift_bridgeObjectRetain();
    PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(id:scoredPersonEntityTags:inferenceEventId:)(v24, v21, v13);
    swift_release();

    sub_1B2B12708();
    sub_1B2A88440();
    __asm { BRAA            X2, X16 }
  }
  v24[0] = 0;
  v24[1] = 0xE000000000000000;
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  strcpy((char *)v24, "Identifier: ");
  BYTE5(v24[1]) = 0;
  HIWORD(v24[1]) = -5120;
  sub_1B2E82518();
  sub_1B2E82518();
  sub_1B2E83418();
  sub_1B2A88440();
}

uint64_t sub_1B2B00254(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return sub_1B299D7F8((uint64_t)sub_1B2B00270);
}

void sub_1B2B00270()
{
  uint64_t v42 = v0;
  uint64_t v1 = *(void **)(v0 + 128);
  if (v1)
  {
    uint64_t v2 = *(char **)(v0 + 128);
  }
  else
  {
    if (qword_1E9C38BD8 == -1)
    {
      uint64_t v1 = 0;
    }
    else
    {
      swift_once();
      uint64_t v1 = *(void **)(v0 + 128);
    }
    uint64_t v2 = (char *)(id)qword_1E9C3DA18;
  }
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags();
  id v5 = v1;
  uint64_t v36 = (objc_class *)v4;
  uint64_t v6 = sub_1B2E82148();
  uint64_t v7 = *(void *)(v3 + 16);
  if (v7)
  {
    uint64_t v35 = v0 + 16;
    uint64_t v8 = *(void *)(v0 + 120);
    uint64_t v34 = *(void *)(v0 + 136) + 16;
    id v31 = v2;
    long long v9 = (uint64_t *)&v2[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds];
    swift_bridgeObjectRetain();
    uint64_t v32 = v9;
    sub_1B299D804();
    long long v10 = (unint64_t *)(v8 + 40);
    uint64_t v33 = v0;
    do
    {
      uint64_t v11 = *(v10 - 1);
      unint64_t v12 = *v10;
      swift_bridgeObjectRetain_n();
      EntityIdentifier.init(_:)(v11, v12, (uint64_t)&v40);
      if ((v41 & 1) == 0)
      {
        uint64_t v38 = v11;
        uint64_t v13 = v40;
        long long v14 = *(_OWORD *)v34;
        long long v15 = *(_OWORD *)(v34 + 16);
        long long v16 = *(_OWORD *)(v34 + 32);
        *(void *)(v35 + 48) = *(void *)(v34 + 48);
        *(_OWORD *)(v35 + 16) = v15;
        *(_OWORD *)(v35 + 32) = v16;
        *(_OWORD *)uint64_t v35 = v14;
        swift_getObjectType();
        uint64_t v17 = swift_task_alloc();
        *(void *)(v17 + 16) = v35;
        *(void *)(v17 + 24) = v13;
        uint64_t v37 = v13;
        sub_1B29A3EB4((uint64_t *)&unk_1E9C3DB30);
        sub_1B2E80C28();
        uint64_t v39 = v6;
        swift_task_dealloc();
        uint64_t v19 = *(void *)(v0 + 96);
        uint64_t v18 = *(void *)(v0 + 104);
        int v20 = *(unsigned __int8 *)(v0 + 112);
        uint64_t v21 = *v32;
        swift_bridgeObjectRetain_n();
        uint64_t v22 = swift_bridgeObjectRetain();
        uint64_t v23 = sub_1B2AF822C(v22, v21, v19, v18, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v23 < 0 || (v23 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v24 = (uint64_t)sub_1B2A46A48();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v24 = v23 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
        }
        uint64_t v40 = v24;
        sub_1B2AF8954(&v40);
        uint64_t v0 = v33;
        swift_bridgeObjectRelease();
        uint64_t v25 = v40;
        if (v20) {
          uint64_t v18 = 0;
        }
        uint64_t v40 = v37;
        id v26 = objc_allocWithZone(v36);
        id v27 = PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(id:scoredPersonEntityTags:inferenceEventId:)(&v40, v25, v18);
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v40 = v39;
        sub_1B29DF63C((uint64_t)v27, v38, v12, isUniquelyReferenced_nonNull_native);
        uint64_t v6 = v40;
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v10 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v2 = v31;
  }

  sub_1B2B1271C();
  sub_1B2B12474();
  __asm { BRAA            X2, X16 }
}

uint64_t sub_1B2B00634(uint64_t a1, unsigned char *a2, void *a3)
{
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = v3;
  *(unsigned char *)(v4 + 89) = *a2;
  *(void *)(v4 + 48) = *a3;
  return sub_1B299D7F8((uint64_t)sub_1B2B0065C);
}

uint64_t sub_1B2B0065C()
{
  sub_1B299F394();
  uint64_t v1 = *(void *)(v0 + 48);
  if (v1)
  {
    uint64_t v2 = (objc_class *)type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions();
    uint64_t v3 = (char *)objc_allocWithZone(v2);
    *(void *)&v3[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds] = v1;
    *(void *)(v0 + 16) = v3;
    *(void *)(v0 + 24) = v2;
    swift_bridgeObjectRetain();
    id v4 = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
  }
  else
  {
    id v4 = 0;
  }
  *(void *)(v0 + 56) = v4;
  *(unsigned char *)(v0 + 88) = *(unsigned char *)(v0 + 89);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *id v5 = v0;
  v5[1] = sub_1B2B00758;
  return sub_1B2B00A68((unsigned char *)(v0 + 88), (uint64_t)v4);
}

uint64_t sub_1B2B00758()
{
  sub_1B299B3BC();
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 72) = v4;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

void sub_1B2B0083C()
{
  sub_1B2ADAB94();
  unint64_t v1 = *(void *)(v0[9] + OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_scoredEntities);
  if (v1 >> 62)
  {
    sub_1B2B1263C();
    uint64_t v2 = sub_1B2E83448();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    uint64_t v13 = (void *)v0[7];
    swift_bridgeObjectRelease();

    uint64_t v4 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  sub_1B2B12418();
  sub_1B29C0938();
  if (v2 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v19 = v0;
  uint64_t v3 = 0;
  uint64_t v4 = v20;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      uint64_t v5 = (char *)MEMORY[0x1B3EB1A20](v3, v1);
    }
    else {
      uint64_t v5 = (char *)*(id *)(v1 + 8 * v3 + 32);
    }
    uint64_t v6 = *(void *)&v5[OBJC_IVAR___GDScoredPersonInner_id];
    uint64_t v7 = *(void *)&v5[OBJC_IVAR___GDScoredPersonInner_score];
    uint64_t v8 = *(void *)&v5[OBJC_IVAR___GDScoredPersonInner_inferenceEventId];

    unint64_t v10 = *(void *)(v20 + 16);
    unint64_t v9 = *(void *)(v20 + 24);
    if (v10 >= v9 >> 1)
    {
      sub_1B2B124FC(v9);
      sub_1B29C0938();
    }
    *(void *)(v20 + 16) = v10 + 1;
    uint64_t v11 = (void *)(v20 + 24 * v10);
    v11[4] = v6;
    ++v3;
    v11[5] = v7;
    v11[6] = v8;
  }
  while (v2 != v3);
  uint64_t v0 = v19;
  unint64_t v12 = (void *)v19[7];
  swift_bridgeObjectRelease();

LABEL_14:
  long long v14 = (unsigned char *)v0[9];
  uint64_t v15 = v0[4];
  char v16 = v14[OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_tag];
  uint64_t v17 = *(void *)&v14[OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_inferenceEventId];

  *(unsigned char *)uint64_t v15 = v16;
  *(void *)(v15 + 8) = v4;
  *(void *)(v15 + 16) = v17;
  sub_1B2999AB8();
  v18();
}

uint64_t sub_1B2B00A0C()
{
  sub_1B299B3BC();

  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2B00A68(unsigned char *a1, uint64_t a2)
{
  *(void *)(v3 + 88) = a2;
  *(void *)(v3 + 96) = v2;
  *(unsigned char *)(v3 + 104) = *a1;
  return sub_1B299D7F8((uint64_t)sub_1B2B00A88);
}

void sub_1B2B00A88()
{
  sub_1B299B9B8();
  uint64_t v12 = v0;
  unint64_t v1 = *(void **)(v0 + 88);
  if (v1)
  {
    id v2 = *(id *)(v0 + 88);
  }
  else
  {
    if (qword_1E9C38BD8 == -1)
    {
      unint64_t v1 = 0;
    }
    else
    {
      swift_once();
      unint64_t v1 = *(void **)(v0 + 88);
    }
    id v2 = (id)qword_1E9C3DA18;
  }
  unsigned __int8 v3 = *(unsigned char *)(v0 + 104);
  memcpy((void *)(v0 + 16), (const void *)(*(void *)(v0 + 96) + 16), 0x48uLL);
  unsigned __int8 v10 = v3;
  id v4 = v1;
  uint64_t v5 = sub_1B2B21890(&v10, (uint64_t)v2);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  v11[0] = *(unsigned char *)(v0 + 104);
  id v7 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons());
  PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(tag:scoredEntities:inferenceEventId:)(v11, v6, 0);

  sub_1B2B12708();
  sub_1B2B126C0();
  __asm { BRAA            X2, X16 }
}

uint64_t sub_1B2B00BE8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1B299D7F8((uint64_t)sub_1B2B00C04);
}

uint64_t sub_1B2B00C04()
{
  sub_1B299B3BC();
  PersonEntityTagType.init(gdTagType:)((unsigned char *)(v0 + 56));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1B2B12390(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1B2B00C9C;
  id v4 = (unsigned char *)sub_1B2B12430();
  return sub_1B2B00A68(v4, v5);
}

uint64_t sub_1B2B00C9C()
{
  sub_1B299B3BC();
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1B299B0E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1B299F2A4();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    uint64_t v10 = sub_1B2B12514();
    return v11(v10);
  }
}

uint64_t sub_1B2B00D98()
{
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2B00DB4(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return sub_1B299D7F8((uint64_t)sub_1B2B00DD0);
}

void sub_1B2B00DD0()
{
  sub_1B2ADAB94();
  uint64_t v20 = v0;
  uint64_t v1 = (void *)v0[12];
  if (v1)
  {
    id v2 = (id)v0[12];
  }
  else
  {
    if (qword_1E9C38BD8 == -1)
    {
      uint64_t v1 = 0;
    }
    else
    {
      swift_once();
      uint64_t v1 = (void *)v0[12];
    }
    id v2 = (id)qword_1E9C3DA18;
  }
  uint64_t v3 = v0[11];
  uint64_t v4 = (objc_class *)type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons();
  sub_1B2AF7990();
  id v5 = v1;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v7 = sub_1B2E82148();
  uint64_t v8 = *(void *)(v3 + 16);
  if (v8)
  {
    uint64_t v9 = v0[11];
    memcpy(v0 + 2, (const void *)(v0[13] + 16), 0x48uLL);
    uint64_t v10 = (char *)(v9 + 32);
    swift_bridgeObjectRetain();
    uint64_t v11 = v6;
    do
    {
      unsigned __int8 v13 = *v10++;
      unsigned __int8 v12 = v13;
      v19[0] = v13;
      uint64_t v14 = sub_1B2B21890(v19, (uint64_t)v2);
      if (v14) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = v11;
      }
      v19[0] = v12;
      id v16 = objc_allocWithZone(v4);
      PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(tag:scoredEntities:inferenceEventId:)(v19, v15, 0);
      swift_isUniquelyReferenced_nonNull_native();
      *(void *)uint64_t v19 = v7;
      sub_1B29DF648();
      uint64_t v7 = *(void *)v19;
      swift_bridgeObjectRelease();
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }

  sub_1B2B1271C();
  sub_1B2ADA938();
  __asm { BRAA            X2, X16 }
}

uint64_t sub_1B2B00FE0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1B299D7F8((uint64_t)sub_1B2B00FFC);
}

void sub_1B2B00FFC()
{
  sub_1B2ADAB94();
  unint64_t v1 = v0[2];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1B2E83448();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1B29C080C();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v4 = 0;
    uint64_t v3 = v16;
    unint64_t v5 = v1 & 0xC000000000000001;
    uint64_t v15 = v0[2] + 32;
    do
    {
      if (v5) {
        id v6 = (id)MEMORY[0x1B3EB1A20](v4, v0[2]);
      }
      else {
        id v6 = *(id *)(v15 + 8 * v4);
      }
      uint64_t v7 = v6;
      uint64_t v8 = objc_msgSend(v6, sel_integerValue);

      if ((unint64_t)(v8 - 1) > 0x19) {
        char v9 = 0;
      }
      else {
        char v9 = byte_1B2ED263A[(void)(v8 - 1)];
      }
      unint64_t v10 = *(void *)(v16 + 16);
      if (v10 >= *(void *)(v16 + 24) >> 1) {
        sub_1B29C080C();
      }
      ++v4;
      *(void *)(v16 + 16) = v10 + 1;
      *(unsigned char *)(v16 + v10 + 32) = v9;
    }
    while (v2 != v4);
  }
  v0[5] = v3;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[6] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1B2B011D0;
  sub_1B2ADA938();
  sub_1B2B00DB4(v12, v13);
}

uint64_t sub_1B2B011D0()
{
  sub_1B299B3BC();
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1B299B0E0();
  *unint64_t v5 = v4;
  *(void *)(v7 + 56) = v6;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    sub_1B299AD7C();
    return v8();
  }
  else
  {
    sub_1B299F2A4();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
}

void sub_1B2B012E8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7E2C40);
  type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons();
  sub_1B2B0E2EC();
  uint64_t v2 = sub_1B2E82148();
  uint64_t v58 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  uint64_t v5 = v3 & *(void *)(v1 + 64);
  int64_t v59 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
LABEL_4:
  while (2)
  {
    unint64_t v7 = v2 & 0xC000000000000001;
    if (v2 < 0) {
      uint64_t v8 = v2;
    }
    else {
      uint64_t v8 = v2 & 0xFFFFFFFFFFFFFF8;
    }
    if (v5)
    {
LABEL_8:
      sub_1B2B12330();
      goto LABEL_32;
    }
    while (1)
    {
      int64_t v10 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      if (v10 >= v59) {
        goto LABEL_55;
      }
      ++v6;
      if (!*(void *)(v58 + 8 * v10))
      {
        int64_t v6 = v10 + 1;
        sub_1B2B12324();
        if (v11 == v12) {
          goto LABEL_55;
        }
        sub_1B2B12318();
        if (!v14)
        {
          int64_t v6 = v13 + 2;
          sub_1B2B12324();
          if (v11 == v12) {
            goto LABEL_55;
          }
          sub_1B2B12318();
          if (!v16)
          {
            int64_t v6 = v15 + 3;
            sub_1B2B12324();
            if (v11 == v12) {
              goto LABEL_55;
            }
            sub_1B2B12318();
            if (!v18)
            {
              int64_t v6 = v17 + 4;
              sub_1B2B12324();
              if (v11 == v12) {
                goto LABEL_55;
              }
              sub_1B2B12318();
              if (!v20)
              {
                int64_t v21 = v19 + 5;
                if (v21 >= v59)
                {
LABEL_55:
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v57 = *(void (**)(uint64_t))(v60 + 8);
                  v57(v2);
                  return;
                }
                if (!*(void *)(v58 + 8 * v21))
                {
                  while (1)
                  {
                    int64_t v6 = v21 + 1;
                    if (__OFADD__(v21, 1)) {
                      break;
                    }
                    sub_1B2B12324();
                    if (v11 == v12) {
                      goto LABEL_55;
                    }
                    sub_1B2B12318();
                    int64_t v21 = v22 + 1;
                    if (v23) {
                      goto LABEL_31;
                    }
                  }
LABEL_64:
                  __break(1u);
LABEL_65:
                  __break(1u);
LABEL_66:
                  __break(1u);
                  return;
                }
                int64_t v6 = v21;
              }
            }
          }
        }
      }
LABEL_31:
      sub_1B299E5A0();
      uint64_t v5 = v25 & v24;
      uint64_t v9 = v26 + (v6 << 6);
LABEL_32:
      id v27 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, qword_1B2ED2658[*(char *)(*(void *)(v1 + 48) + v9)]);
      if (*(void *)(v1 + 16))
      {
        unint64_t v28 = sub_1B29DB684();
        if (v29) {
          break;
        }
      }
      if (v7)
      {
        id v30 = v27;
        swift_bridgeObjectRetain();
        uint64_t v31 = sub_1B2E833E8();

        if (!v31)
        {
          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
        swift_unknownObjectRelease();
        uint64_t v46 = sub_1B2E833D8();
        uint64_t v47 = sub_1B2B045D0(v8, v46);
        swift_retain();
        sub_1B29DB6BC();
        uint64_t v49 = v48;
        char v51 = v50;
        swift_release();
        if (v51)
        {

          uint64_t v52 = *(void **)(*(void *)(v47 + 56) + 8 * v49);
          sub_1B2E833B8();

          swift_bridgeObjectRelease();
          uint64_t v2 = v47;
          goto LABEL_4;
        }
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      swift_bridgeObjectRetain();
      sub_1B29DB6BC();
      uint64_t v33 = v32;
      char v35 = v34;
      swift_bridgeObjectRelease();
      if (v35)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1B29A3EB4(&qword_1E9C3DB48);
        sub_1B2E83398();

        uint64_t v53 = *(void **)(*(void *)(v2 + 56) + 8 * v33);
        sub_1B2E833B8();

        goto LABEL_54;
      }
LABEL_38:

      if (v5) {
        goto LABEL_8;
      }
    }
    id v36 = *(id *)(*(void *)(v1 + 56) + 8 * v28);
    if (!v7) {
      goto LABEL_43;
    }
    uint64_t v37 = sub_1B2E833D8();
    if (__OFADD__(v37, 1)) {
      goto LABEL_65;
    }
    uint64_t v2 = sub_1B2B045D0(v8, v37 + 1);
LABEL_43:
    id v38 = v36;
    swift_isUniquelyReferenced_nonNull_native();
    sub_1B29DB6BC();
    if (__OFADD__(*(void *)(v2 + 16), (v40 & 1) == 0)) {
      goto LABEL_62;
    }
    unint64_t v41 = v39;
    char v42 = v40;
    sub_1B29A3EB4(&qword_1E9C3DB48);
    if ((sub_1B2E83398() & 1) == 0) {
      goto LABEL_47;
    }
    sub_1B29DB6BC();
    if ((v42 & 1) == (v44 & 1))
    {
      unint64_t v41 = v43;
LABEL_47:
      if (v42)
      {
        uint64_t v45 = *(void *)(v2 + 56);

        *(void *)(v45 + 8 * v41) = v38;
LABEL_54:

        swift_bridgeObjectRelease();
        continue;
      }
      *(void *)(v2 + 8 * (v41 >> 6) + 64) |= 1 << v41;
      *(void *)(*(void *)(v2 + 48) + 8 * v41) = v27;
      *(void *)(*(void *)(v2 + 56) + 8 * v41) = v36;
      uint64_t v54 = *(void *)(v2 + 16);
      BOOL v12 = __OFADD__(v54, 1);
      uint64_t v55 = v54 + 1;
      if (!v12)
      {
        *(void *)(v2 + 16) = v55;
        id v56 = v27;
        goto LABEL_54;
      }
      goto LABEL_66;
    }
    break;
  }
  sub_1B2E83858();
}

uint64_t type metadata accessor for EntityTaggingStatefulFeedback()
{
  return self;
}

uint64_t EntityTaggingService.deinit()
{
  sub_1B2B126E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t EntityTaggingService.__deallocating_deinit()
{
  sub_1B2B126E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

void EntityTaggingService.RankedPersonEntityTags.ScoredPersonEntityTagType.tag.getter(unsigned char *a1@<X8>)
{
}

double EntityTaggingService.RankedPersonEntityTags.ScoredPersonEntityTagType.score.getter()
{
  return *(double *)(v0 + 8);
}

void EntityTaggingService.RankedPersonEntityTags.id.getter(void *a1@<X8>)
{
}

uint64_t EntityTaggingService.RankedPersonEntityTags.scoredPersonEntityTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EntityTaggingService.RankedPersonEntityTags.inferenceEventId.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1B2B01914()
{
  sub_1B2AF7990();
  uint64_t result = sub_1B2E82148();
  qword_1E9C3DA20 = result;
  return result;
}

IntelligencePlatform::EntityTaggingService::PersonTaggingOptions __swiftcall EntityTaggingService.PersonTaggingOptions.init(tagThresholds:)(IntelligencePlatform::EntityTaggingService::PersonTaggingOptions tagThresholds)
{
  v1->tagThresholds._rawValue = tagThresholds.tagThresholds._rawValue;
  return tagThresholds;
}

uint64_t static EntityTaggingService.PersonTaggingOptions.defaultPersonTaggingOptions.getter@<X0>(void *a1@<X8>)
{
  if (qword_1E9C38BE0 != -1) {
    swift_once();
  }
  *a1 = qword_1E9C3DA20;

  return swift_bridgeObjectRetain();
}

uint64_t EntityTaggingService.PersonTaggingOptions.tagThresholds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EntityTaggingService.PersonTaggingOptions.tagThresholds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*EntityTaggingService.PersonTaggingOptions.tagThresholds.modify())(void)
{
  return nullsub_1;
}

double EntityTaggingService.RankedEntityTagPersons.ScoredPersonEntity.score.getter()
{
  return *(double *)(v0 + 8);
}

void EntityTaggingService.RankedEntityTagPersons.tag.getter(unsigned char *a1@<X8>)
{
}

uint64_t sub_1B2B01A2C(char a1)
{
  uint64_t result = 0x7465536E75;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x726165707061;
      goto LABEL_5;
    case 2:
      uint64_t v3 = 0x747065636361;
      goto LABEL_5;
    case 3:
      uint64_t v3 = 0x7463656A6572;
LABEL_5:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
      break;
    case 4:
      uint64_t result = 0x6165707061736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2B01AD8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736449746E657665 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2B01B60(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E430();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2B01B9C(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E430();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2B01BD8(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E47C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2B01C14(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E47C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2B01C50()
{
  return sub_1B2B01A2C(*v0);
}

uint64_t sub_1B2B01C58(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E34C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2B01C94(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E34C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2B01CD0(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E398();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2B01D0C(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E398();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2B01D48(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E3E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2B01D84(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E3E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2B01DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2B01AD8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2B01DEC(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E4C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2B01E28(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E4C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void EntityTaggingStatefulFeedback.FeedbackKind.encode(to:)()
{
  sub_1B299F300();
  uint64_t v2 = v0;
  char v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3DB50);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3DB58);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3DB60);
  sub_1B299D278();
  uint64_t v24 = v8;
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  uint64_t v23 = v9;
  sub_1B29A3EB4(&qword_1E9C3DB68);
  sub_1B299D278();
  MEMORY[0x1F4188790](v10);
  sub_1B299E4A0();
  uint64_t v11 = sub_1B29A3EB4(&qword_1E9C3DB70);
  sub_1B299D278();
  uint64_t v22 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1B29A0658();
  sub_1B29A3EB4(&qword_1E9C3DB78);
  sub_1B299D278();
  uint64_t v26 = v14;
  MEMORY[0x1F4188790](v15);
  sub_1B299E4A0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = *(unsigned __int8 *)(v2 + 8);
  uint64_t v20 = v4[4];
  sub_1B29AEC7C(v4, v4[3]);
  sub_1B2B0E34C();
  sub_1B2E83A38();
  switch(v19)
  {
    case 1:
      sub_1B2B0E47C();
      sub_1B2AC9BE8();
      sub_1B2AC9E4C();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2B0E514(&qword_1E9C3CCD0);
      sub_1B2ACA008();
      sub_1B2E83668();
      goto LABEL_8;
    case 2:
      sub_1B2B0E430();
      sub_1B2ACA188();
      sub_1B2AC9E4C();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2B0E514(&qword_1E9C3CCD0);
      sub_1B2ACA008();
      sub_1B2E83668();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
      goto LABEL_5;
    case 3:
      sub_1B2B0E3E4();
      sub_1B2AC9BE8();
      sub_1B2AC9E4C();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2B0E514(&qword_1E9C3CCD0);
      sub_1B2ACA008();
      sub_1B2ACA0A8();
      goto LABEL_8;
    case 4:
      sub_1B2B0E398();
      sub_1B2AC9BE8();
      sub_1B2AC9E4C();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2B0E514(&qword_1E9C3CCD0);
      sub_1B2ACA008();
      sub_1B2ACA0A8();
LABEL_8:
      sub_1B2B11F40();
      v21();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v20, v19);
      break;
    default:
      sub_1B2B0E4C8();
      sub_1B2ACA188();
      sub_1B2AC9E4C();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2B0E514(&qword_1E9C3CCD0);
      sub_1B2ACA008();
      sub_1B2E83668();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v1, v11);
LABEL_5:
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v18, v19);
      break;
  }
  sub_1B29998C8();
}

void EntityTaggingStatefulFeedback.FeedbackKind.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  uint64_t v13 = v12;
  uint64_t v42 = v14;
  sub_1B29A3EB4(&qword_1E9C3DBB0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v15);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3DBB8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v16);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3DBC0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v17);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3DBC8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v18);
  sub_1B29A0658();
  sub_1B29A3EB4(&qword_1E9C3DBD0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v19);
  sub_1B29A0480();
  uint64_t v20 = sub_1B29A3EB4(&qword_1E9C3DBD8);
  sub_1B299D278();
  uint64_t v22 = v21;
  MEMORY[0x1F4188790](v23);
  sub_1B29A0498();
  unint64_t v43 = v13;
  sub_1B29AEC7C(v13, v13[3]);
  sub_1B2B0E34C();
  sub_1B2E83A18();
  if (v10) {
    goto LABEL_13;
  }
  uint64_t v44 = v22;
  uint64_t v24 = sub_1B2E835F8();
  if (!*(void *)(v24 + 16))
  {
    uint64_t v30 = v11;
LABEL_8:
    sub_1B2E83288();
    swift_allocError();
    uint64_t v32 = v31;
    sub_1B29A3EB4(&qword_1E9C39038);
    void *v32 = &type metadata for EntityTaggingStatefulFeedback.FeedbackKind;
    sub_1B2E834F8();
    sub_1B2E83278();
    sub_1B299B3B0();
    (*(void (**)(void *))(v33 + 104))(v32);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v30, v20);
LABEL_13:
    uint64_t v34 = (uint64_t)v43;
    goto LABEL_14;
  }
  uint64_t v25 = v20;
  uint64_t v41 = *(unsigned __int8 *)(v24 + 32);
  sub_1B29B142C(1);
  uint64_t v27 = v26;
  unint64_t v29 = v28;
  swift_bridgeObjectRelease();
  if (v27 != v29 >> 1)
  {
    uint64_t v30 = v11;
    uint64_t v20 = v25;
    goto LABEL_8;
  }
  switch(v41)
  {
    case 1:
      LOBYTE(a10) = 1;
      sub_1B2B0E47C();
      sub_1B2AC9B28();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2B0E514(&qword_1E9C3CD28);
      sub_1B2AC9D78();
      sub_1B2AC9C58();
      sub_1B2B11F40();
      v38();
      swift_unknownObjectRelease();
      uint64_t v39 = sub_1B2ACA140();
      v40(v39);
      goto LABEL_16;
    case 2:
      LOBYTE(a10) = 2;
      sub_1B2B0E430();
      sub_1B2AC9B28();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2B0E514(&qword_1E9C3CD28);
      sub_1B2E83548();
      sub_1B2ACA110();
      goto LABEL_15;
    case 3:
      LOBYTE(a10) = 3;
      sub_1B2B0E3E4();
      sub_1B2E834E8();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2B0E514(&qword_1E9C3CD28);
      sub_1B2AC9D78();
      sub_1B2E83548();
      sub_1B2ACA110();
      goto LABEL_15;
    case 4:
      LOBYTE(a10) = 4;
      sub_1B2B0E398();
      sub_1B2AC9B28();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2B0E514(&qword_1E9C3CD28);
      sub_1B2AC9D78();
      sub_1B2AC9C58();
      sub_1B2ACA110();
      goto LABEL_15;
    default:
      LOBYTE(a10) = 0;
      sub_1B2B0E4C8();
      sub_1B2AC9B28();
      sub_1B29A3EB4(&qword_1E9C3CCC8);
      sub_1B2B0E514(&qword_1E9C3CD28);
      sub_1B2AC9D78();
      sub_1B2AC9C58();
      sub_1B2ACA110();
LABEL_15:
      sub_1B2B11F40();
      v35();
      swift_unknownObjectRelease();
      uint64_t v36 = sub_1B2ACA228();
      v37(v36);
LABEL_16:
      uint64_t v34 = (uint64_t)v13;
      *(void *)uint64_t v42 = a10;
      *(unsigned char *)(v42 + 8) = v41;
      break;
  }
LABEL_14:
  sub_1B2B11954(v34);
  sub_1B29998C8();
}

void sub_1B2B02B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  EntityTaggingStatefulFeedback.FeedbackKind.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1B2B02B50()
{
}

id EntityTaggingStatefulFeedback.init(kind:)(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  char v3 = &v1[OBJC_IVAR____TtC20IntelligencePlatform29EntityTaggingStatefulFeedback_kind];
  *(void *)char v3 = *(void *)a1;
  v3[8] = v2;
  v5.id receiver = v1;
  v5.uint64_t super_class = (Class)type metadata accessor for EntityTaggingStatefulFeedback();
  return objc_msgSendSuper2(&v5, sel_init);
}

unint64_t static EntityTaggingStatefulFeedback.type.getter()
{
  return sub_1B2A30574(50);
}

void EntityTaggingStatefulFeedback.init()()
{
}

uint64_t sub_1B2B02C08(uint64_t a1, uint64_t a2)
{
  if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2B02C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2B02C08(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2B02CAC(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E578();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2B02CE8(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E578();

  return MEMORY[0x1F41862B0](a1, v2);
}

id EntityTaggingStatefulFeedback.__deallocating_deinit()
{
  return sub_1B2B03504(type metadata accessor for EntityTaggingStatefulFeedback);
}

uint64_t sub_1B2B02D54(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3DBE0);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B29A0480();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2B0E578();
  sub_1B2E83A38();
  sub_1B2B0E5C4();
  sub_1B2E836D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

void EntityTaggingStatefulFeedback.__allocating_init(from:)()
{
}

void EntityTaggingStatefulFeedback.init(from:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  sub_1B29A3EB4(&qword_1E9C3DBF8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2B0E578();
  uint64_t v5 = v0;
  sub_1B2B121B0();
  if (v1)
  {

    sub_1B2B11954((uint64_t)v3);
    type metadata accessor for EntityTaggingStatefulFeedback();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1B2B0E610();
    sub_1B2B120F0();
    char v6 = v13;
    uint64_t v7 = &v5[OBJC_IVAR____TtC20IntelligencePlatform29EntityTaggingStatefulFeedback_kind];
    *(void *)uint64_t v7 = v12;
    v7[8] = v6;

    uint64_t v8 = (objc_class *)type metadata accessor for EntityTaggingStatefulFeedback();
    v11.id receiver = v5;
    v11.uint64_t super_class = v8;
    objc_msgSendSuper2(&v11, sel_init);
    uint64_t v9 = sub_1B2B12278();
    v10(v9);
    sub_1B2B11954((uint64_t)v3);
  }
  sub_1B29998C8();
}

unint64_t sub_1B2B03024()
{
  return 0xD000000000000032;
}

void sub_1B2B03044(void *a1@<X8>)
{
  EntityTaggingStatefulFeedback.__allocating_init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1B2B03070(void *a1)
{
  return sub_1B2B02D54(a1);
}

IntelligencePlatform::EntityTaggingDirectFeedback::FeedbackKind_optional __swiftcall EntityTaggingDirectFeedback.FeedbackKind.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (IntelligencePlatform::EntityTaggingDirectFeedback::FeedbackKind_optional)rawValue;
}

uint64_t EntityTaggingDirectFeedback.FeedbackKind.rawValue.getter()
{
  return *v0;
}

IntelligencePlatform::EntityTaggingDirectFeedback::FeedbackKind_optional sub_1B2B030B0(Swift::Int *a1)
{
  return EntityTaggingDirectFeedback.FeedbackKind.init(rawValue:)(*a1);
}

uint64_t sub_1B2B030B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EntityTaggingDirectFeedback.FeedbackKind.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1B2B030E0()
{
  return sub_1B2E827F8();
}

uint64_t sub_1B2B03140()
{
  return sub_1B2E82798();
}

id EntityTaggingDirectFeedback.init(kind:tagInference:)(unsigned char *a1, char *a2)
{
  char v3 = *a2;
  v2[OBJC_IVAR____TtC20IntelligencePlatform27EntityTaggingDirectFeedback_kind] = *a1;
  v2[OBJC_IVAR____TtC20IntelligencePlatform27EntityTaggingDirectFeedback_tagInference] = v3;
  v5.id receiver = v2;
  v5.uint64_t super_class = (Class)type metadata accessor for EntityTaggingDirectFeedback();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for PersonEntityTaggingService.EntityTagConfiguration()
{
  return self;
}

uint64_t type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag()
{
  return self;
}

uint64_t type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags()
{
  return self;
}

uint64_t type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson()
{
  return self;
}

uint64_t type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons()
{
  return self;
}

uint64_t sub_1B2B03298(uint64_t a1, void *a2)
{
  return sub_1B2AFF2C8(a1, a2);
}

uint64_t type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions()
{
  return self;
}

unint64_t static EntityTaggingDirectFeedback.type.getter()
{
  return sub_1B2A30574(48);
}

void EntityTaggingDirectFeedback.init()()
{
}

uint64_t sub_1B2B03314(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684957547 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265666E49676174 && a2 == 0xEC00000065636E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2B0340C(char a1)
{
  if (a1) {
    return 0x7265666E49676174;
  }
  else {
    return 1684957547;
  }
}

uint64_t sub_1B2B03444()
{
  return sub_1B2B0340C(*v0);
}

uint64_t sub_1B2B0344C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2B03314(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2B03474(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E680();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2B034B0(uint64_t a1)
{
  unint64_t v2 = sub_1B2B0E680();

  return MEMORY[0x1F41862B0](a1, v2);
}

id EntityTaggingDirectFeedback.__deallocating_deinit()
{
  return sub_1B2B03504(type metadata accessor for EntityTaggingDirectFeedback);
}

id sub_1B2B03504(uint64_t (*a1)(void))
{
  v3.id receiver = v1;
  v3.uint64_t super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1B2B0353C(void *a1)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3DC18);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2B0E680();
  sub_1B2E83A38();
  sub_1B2B0E6CC();
  sub_1B2E836D8();
  if (!v1)
  {
    sub_1B2B0E718();
    sub_1B2E836D8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

void EntityTaggingDirectFeedback.__allocating_init(from:)()
{
  sub_1B2B123D0();
  uint64_t v0 = sub_1B2AC9CE4();
  EntityTaggingDirectFeedback.init(from:)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, SWORD2(v9), SBYTE6(v9), SHIBYTE(v9));
}

void EntityTaggingDirectFeedback.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_1B299F300();
  uint64_t v16 = v15;
  sub_1B29A3EB4(&qword_1E9C3DC38);
  sub_1B299D278();
  MEMORY[0x1F4188790](v17);
  sub_1B29AEC7C(v16, v16[3]);
  sub_1B2B0E680();
  id v18 = v13;
  sub_1B2B121B0();
  if (v14)
  {

    sub_1B2B11954((uint64_t)v16);
    type metadata accessor for EntityTaggingDirectFeedback();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1B2B0E764();
    sub_1B2B120F0();
    *((unsigned char *)v18 + OBJC_IVAR____TtC20IntelligencePlatform27EntityTaggingDirectFeedback_kind) = a13;
    sub_1B2B0E7B0();
    sub_1B2B120F0();
    *((unsigned char *)v18 + OBJC_IVAR____TtC20IntelligencePlatform27EntityTaggingDirectFeedback_tagInference) = a13;

    uint64_t v19 = (objc_class *)type metadata accessor for EntityTaggingDirectFeedback();
    v22.id receiver = v18;
    v22.uint64_t super_class = v19;
    objc_msgSendSuper2(&v22, sel_init);
    uint64_t v20 = sub_1B2B12278();
    v21(v20);
    sub_1B2B11954((uint64_t)v16);
  }
  sub_1B29998C8();
}

unint64_t sub_1B2B03884()
{
  return 0xD000000000000030;
}

void sub_1B2B038A4(void *a1@<X8>)
{
  EntityTaggingDirectFeedback.__allocating_init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1B2B038D0(void *a1)
{
  return sub_1B2B0353C(a1);
}

uint64_t sub_1B2B038F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1B2ADA778;
  return v6();
}

uint64_t sub_1B2B039C0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1B2ADA778;
  return v7();
}

uint64_t sub_1B2B03A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E82A08();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v6) == 1)
  {
    sub_1B29D2368(a1, &qword_1EB7E2778);
  }
  else
  {
    sub_1B2E829F8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B2E829B8();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1B2B03BFC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1B2B03CD8;
  return v6(a1);
}

uint64_t sub_1B2B03CD8()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v1 = *v0;
  sub_1B299B0E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1B2999AB8();
  return v3();
}

uint64_t sub_1B2B03D98(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1B2B043CC(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_125;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1B29B6B38(v3 / 2);
  uint64_t v91 = v6;
  uint64_t v92 = result;
  uint64_t v89 = v3;
  uint64_t v87 = a1;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    unint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_89:
    uint64_t result = v9;
    if (v31 < 2)
    {
LABEL_100:
      uint64_t result = swift_bridgeObjectRelease();
      if (v89 >= -1)
      {
        *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_1B2E82878();
        return swift_bridgeObjectRelease();
      }
      goto LABEL_130;
    }
    uint64_t v79 = *v87;
    while (1)
    {
      unint64_t v80 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v79) {
        goto LABEL_134;
      }
      uint64_t v81 = result;
      uint64_t v82 = *(void *)(result + 32 + 16 * v80);
      uint64_t v83 = *(void *)(result + 32 + 16 * (v31 - 1) + 8);
      uint64_t result = sub_1B2B04434((uint64_t *)(v79 + 8 * v82), (uint64_t *)(v79 + 8 * *(void *)(result + 32 + 16 * (v31 - 1))), v79 + 8 * v83, v91);
      if (v1) {
        goto LABEL_86;
      }
      if (v83 < v82) {
        goto LABEL_120;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B2DCA54C();
        uint64_t v81 = result;
      }
      if (v80 >= *(void *)(v81 + 16)) {
        goto LABEL_121;
      }
      unint64_t v84 = (void *)(v81 + 32 + 16 * v80);
      *unint64_t v84 = v82;
      v84[1] = v83;
      unint64_t v85 = *(void *)(v81 + 16);
      if (v31 > v85) {
        goto LABEL_122;
      }
      memmove((void *)(v81 + 32 + 16 * (v31 - 1)), (const void *)(v81 + 32 + 16 * v31), 16 * (v85 - v31));
      uint64_t result = v81;
      *(void *)(v81 + 16) = v85 - 1;
      unint64_t v31 = v85 - 1;
      if (v85 <= 2) {
        goto LABEL_100;
      }
    }
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v86 = *a1 - 8;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v10 = &qword_1E9C3D000;
  uint64_t v11 = v3;
  uint64_t v88 = v5;
  uint64_t v90 = *a1;
  while (1)
  {
    uint64_t v12 = v7++;
    if (v7 < v11)
    {
      uint64_t v13 = v10[345];
      double v14 = *(double *)(*(void *)(v8 + 8 * v7) + v13);
      double v15 = *(double *)(*(void *)(v8 + 8 * v12) + v13);
      uint64_t v7 = v12 + 2;
      if (v12 + 2 < v11)
      {
        double v16 = v14;
        while (1)
        {
          double v17 = v16;
          double v16 = *(double *)(*(void *)(v8 + 8 * v7) + v13);
          if (v15 < v14 == v17 >= v16) {
            break;
          }
          if (++v7 >= v11)
          {
            uint64_t v7 = v11;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v7 < v12) {
          goto LABEL_127;
        }
        if (v12 < v7)
        {
          id v18 = (uint64_t *)(v86 + 8 * v7);
          uint64_t v19 = v7;
          uint64_t v20 = v12;
          uint64_t v21 = (uint64_t *)(v8 + 8 * v12);
          do
          {
            if (v20 != --v19)
            {
              if (!v8) {
                goto LABEL_133;
              }
              uint64_t v22 = *v21;
              *uint64_t v21 = *v18;
              *id v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v7 < v11)
    {
      if (__OFSUB__(v7, v12)) {
        goto LABEL_124;
      }
      if (v7 - v12 < v5)
      {
        uint64_t v23 = v12 + v5;
        if (__OFADD__(v12, v5)) {
          goto LABEL_128;
        }
        if (v23 >= v11) {
          uint64_t v23 = v11;
        }
        if (v23 < v12) {
          goto LABEL_129;
        }
        if (v7 != v23)
        {
          uint64_t v24 = (uint64_t *)(v86 + 8 * v7);
          do
          {
            uint64_t v25 = *(void *)(v8 + 8 * v7);
            uint64_t v26 = v12;
            uint64_t v27 = v24;
            do
            {
              uint64_t v28 = *v27;
              if (*(double *)(*v27 + v10[345]) >= *(double *)(v25 + v10[345])) {
                break;
              }
              if (!v8) {
                goto LABEL_131;
              }
              *uint64_t v27 = v25;
              v27[1] = v28;
              --v27;
              ++v26;
            }
            while (v7 != v26);
            ++v7;
            ++v24;
          }
          while (v7 != v23);
          uint64_t v7 = v23;
        }
      }
    }
    if (v7 < v12) {
      goto LABEL_123;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v30 = *(void *)(v9 + 16);
    unint64_t v29 = *(void *)(v9 + 24);
    unint64_t v31 = v30 + 1;
    uint64_t v8 = v90;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454((char *)(v29 > 1), v30 + 1, 1, (char *)v9);
      uint64_t v8 = v90;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v31;
    uint64_t v32 = v9 + 32;
    uint64_t v33 = (uint64_t *)(v9 + 32 + 16 * v30);
    *uint64_t v33 = v12;
    v33[1] = v7;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_81:
    uint64_t v5 = v88;
    uint64_t v11 = v89;
    uint64_t v10 = &qword_1E9C3D000;
    if (v7 >= v89) {
      goto LABEL_89;
    }
  }
  while (1)
  {
    unint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      unint64_t v39 = v32 + 16 * v31;
      uint64_t v40 = *(void *)(v39 - 64);
      uint64_t v41 = *(void *)(v39 - 56);
      BOOL v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_108;
      }
      uint64_t v44 = *(void *)(v39 - 48);
      uint64_t v43 = *(void *)(v39 - 40);
      BOOL v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      char v38 = v45;
      if (v45) {
        goto LABEL_109;
      }
      unint64_t v46 = v31 - 2;
      uint64_t v47 = (uint64_t *)(v32 + 16 * (v31 - 2));
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      BOOL v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_110;
      }
      BOOL v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_112;
      }
      if (v51 >= v42)
      {
        uint64_t v69 = (uint64_t *)(v32 + 16 * v34);
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        BOOL v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_118;
        }
        BOOL v62 = v37 < v72;
        goto LABEL_70;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *(void *)(v9 + 32);
        uint64_t v64 = *(void *)(v9 + 40);
        BOOL v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        char v57 = v45;
        goto LABEL_64;
      }
      uint64_t v36 = *(void *)(v9 + 32);
      uint64_t v35 = *(void *)(v9 + 40);
      BOOL v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      char v38 = v45;
    }
    if (v38) {
      goto LABEL_111;
    }
    unint64_t v46 = v31 - 2;
    uint64_t v52 = (uint64_t *)(v32 + 16 * (v31 - 2));
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    BOOL v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    char v57 = v55;
    if (v55) {
      goto LABEL_113;
    }
    uint64_t v58 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    BOOL v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_115;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_117;
    }
    if (v56 + v61 >= v37)
    {
      BOOL v62 = v37 < v61;
LABEL_70:
      if (v62) {
        unint64_t v34 = v46;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v57) {
      goto LABEL_114;
    }
    uint64_t v65 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    BOOL v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_116;
    }
    if (v68 < v56) {
      goto LABEL_81;
    }
LABEL_72:
    unint64_t v73 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    if (!v8) {
      goto LABEL_132;
    }
    uint64_t v74 = (uint64_t *)(v32 + 16 * v73);
    uint64_t v75 = *v74;
    uint64_t v76 = (void *)(v32 + 16 * v34);
    uint64_t v77 = v76[1];
    uint64_t result = sub_1B2B04434((uint64_t *)(v8 + 8 * *v74), (uint64_t *)(v8 + 8 * *v76), v8 + 8 * v77, v91);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_105;
    }
    if (v34 > *(void *)(v9 + 16)) {
      goto LABEL_106;
    }
    *uint64_t v74 = v75;
    *(void *)(v32 + 16 * v73 + 8) = v77;
    unint64_t v78 = *(void *)(v9 + 16);
    if (v34 >= v78) {
      goto LABEL_107;
    }
    unint64_t v31 = v78 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v32 + 16 * v34), v76 + 2, 16 * (v78 - 1 - v34));
    *(void *)(v9 + 16) = v78 - 1;
    uint64_t v8 = v90;
    if (v78 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v89 < -1) {
    goto LABEL_126;
  }
  *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_1B2E82878();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2B043CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 8 * a3);
      uint64_t v7 = result;
      uint64_t v8 = (uint64_t *)v5;
      do
      {
        uint64_t v9 = *v8;
        if (*(double *)(*v8 + OBJC_IVAR___GDScoredPersonEntityTagInner_score) >= *(double *)(v6
                                                                                            + OBJC_IVAR___GDScoredPersonEntityTagInner_score))
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *uint64_t v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1B2B04434(uint64_t *a1, uint64_t *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_1B29BE70C(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    uint64_t v12 = &v4[v11];
    if (v7 >= v6 || v10 < 8) {
      goto LABEL_39;
    }
    id v18 = (uint64_t *)(a3 - 8);
    while (1)
    {
      uint64_t v19 = v18 + 1;
      uint64_t v20 = *(v6 - 1);
      if (*(double *)(v20 + OBJC_IVAR___GDScoredPersonEntityTagInner_score) >= *(double *)(*(v12 - 1)
                                                                                          + OBJC_IVAR___GDScoredPersonEntityTagInner_score))
      {
        BOOL v22 = v19 != v12 || v18 >= v12;
        uint64_t v20 = *--v12;
        if (!v22) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v21 = v19 != v6 || v18 >= v6;
        --v6;
        if (!v21) {
          goto LABEL_35;
        }
      }
      *id v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_39;
      }
    }
  }
  sub_1B29BE70C(a1, a2 - a1, a4);
  uint64_t v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      uint64_t v14 = *v6;
      if (*(double *)(*v4 + OBJC_IVAR___GDScoredPersonEntityTagInner_score) < *(double *)(*v6
                                                                                         + OBJC_IVAR___GDScoredPersonEntityTagInner_score))
        break;
      uint64_t v14 = *v4;
      BOOL v15 = v7 == v4++;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_12:
      ++v7;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    BOOL v15 = v7 == v6++;
    if (v15) {
      goto LABEL_12;
    }
LABEL_11:
    uint64_t *v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v6 = v7;
LABEL_39:
  sub_1B29BE70C(v4, v12 - v4, v6);
  return 1;
}

uint64_t sub_1B2B045D0(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  sub_1B29A3EB4(&qword_1E9C3E028);
  uint64_t v2 = sub_1B2E83488();
  uint64_t v26 = v2;
  sub_1B2E833C8();
  uint64_t v3 = sub_1B2E833F8();
  if (!v3)
  {
LABEL_16:
    swift_release();
    return v2;
  }
  uint64_t v5 = v3;
  uint64_t v6 = v4;
  sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7E2C40);
  while (1)
  {
    uint64_t v24 = v5;
    swift_dynamicCast();
    type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons();
    swift_dynamicCast();
    uint64_t v2 = v26;
    unint64_t v12 = *(void *)(v26 + 16);
    if (*(void *)(v26 + 24) <= v12)
    {
      sub_1B2B074D8(v12 + 1, 1, (uint64_t)&qword_1E9C3E028, v7, v8, v9, v10, v11, v6, v5);
      uint64_t v2 = v26;
    }
    uint64_t result = sub_1B2E82EF8();
    uint64_t v14 = v2 + 64;
    uint64_t v15 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v2 + 64 + 8 * (v16 >> 6))) == 0) {
      break;
    }
    unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v2 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v2 + 48) + 8 * v18) = v25;
    *(void *)(*(void *)(v2 + 56) + 8 * v18) = v24;
    ++*(void *)(v2 + 16);
    uint64_t v5 = sub_1B2E833F8();
    uint64_t v6 = v23;
    if (!v5) {
      goto LABEL_16;
    }
  }
  char v19 = 0;
  unint64_t v20 = (unint64_t)(63 - v15) >> 6;
  while (++v17 != v20 || (v19 & 1) == 0)
  {
    BOOL v21 = v17 == v20;
    if (v17 == v20) {
      unint64_t v17 = 0;
    }
    v19 |= v21;
    uint64_t v22 = *(void *)(v14 + 8 * v17);
    if (v22 != -1)
    {
      unint64_t v18 = __clz(__rbit64(~v22)) + (v17 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

void sub_1B2B04800()
{
  sub_1B299B3E0();
  sub_1B2B11AC4();
  sub_1B29A3EB4(&qword_1E9C3E078);
  sub_1B2B12028();
  sub_1B2B11EEC();
  if (v3)
  {
    unint64_t v31 = v0;
    int64_t v4 = 0;
    uint64_t v5 = v1 + 8;
    sub_1B2B1225C();
    uint64_t v8 = v7 & v6;
    int64_t v10 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v11 = v2 + 64;
    if ((v7 & v6) == 0) {
      goto LABEL_4;
    }
LABEL_3:
    sub_1B2B12600();
    for (int64_t i = v12 | (v4 << 6); ; int64_t i = v18 + (v4 << 6))
    {
      uint64_t v19 = *(void *)(v1[6] + 8 * i);
      uint64_t v20 = *(void *)(v1[7] + 8 * i);
      if ((v2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1B2B125E8();
      sub_1B2E839C8();
      sub_1B2E839E8();
      sub_1B2B11F78();
      if (((v23 << v22) & ~*(void *)(v11 + 8 * v21)) == 0)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v28)
          {
            if (v25) {
              break;
            }
          }
          if (v26 == v27) {
            uint64_t v26 = 0;
          }
          if (*(void *)(v11 + 8 * v26) != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_26;
          }
        }
        __break(1u);
        goto LABEL_37;
      }
      sub_1B299F374();
LABEL_26:
      *(void *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      *(void *)(*(void *)(v2 + 48) + 8 * v24) = v19;
      *(void *)(*(void *)(v2 + 56) + 8 * v24) = v20;
      sub_1B299E788();
      if (v8) {
        goto LABEL_3;
      }
LABEL_4:
      BOOL v14 = __OFADD__(v4++, 1);
      if (v14) {
        goto LABEL_38;
      }
      if (v4 >= v10) {
        goto LABEL_28;
      }
      if (!v5[v4])
      {
        int64_t v15 = v4 + 1;
        if (v4 + 1 >= v10)
        {
LABEL_28:
          if ((v2 & 1) == 0)
          {
            swift_release();
            uint64_t v0 = v31;
            goto LABEL_35;
          }
          sub_1B2B11A24();
          if (v30 != v14) {
            *uint64_t v5 = -1 << v29;
          }
          else {
            sub_1B2B125A0(v29);
          }
          uint64_t v0 = v31;
          v1[2] = 0;
          break;
        }
        if (!v5[v15])
        {
          while (1)
          {
            int64_t v4 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              break;
            }
            if (v4 >= v10) {
              goto LABEL_28;
            }
            ++v15;
            if (v5[v4]) {
              goto LABEL_13;
            }
          }
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          return;
        }
        ++v4;
      }
LABEL_13:
      sub_1B299E5A0();
      uint64_t v8 = v17 & v16;
    }
  }
  swift_release();
LABEL_35:
  *uint64_t v0 = v2;
  sub_1B2A0EF9C();
}

void sub_1B2B049F8()
{
  sub_1B2A0F870();
  sub_1B2B11AC4();
  sub_1B29A3EB4(&qword_1E9C3E020);
  sub_1B2B1243C();
  uint64_t v3 = (void *)sub_1B2B12028();
  if (v1[2])
  {
    uint64_t v27 = v0;
    int64_t v4 = v1 + 8;
    sub_1B2B1258C();
    unint64_t v7 = v6 & v5;
    int64_t v9 = (unint64_t)(v8 + 63) >> 6;
    swift_retain();
    int64_t v10 = 0;
    if (!v7) {
      goto LABEL_4;
    }
LABEL_3:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = v17 + (v10 << 6))
    {
      uint64_t v18 = v1[6] + 16 * i;
      uint64_t v19 = *(void *)v18;
      char v20 = *(unsigned char *)(v18 + 8);
      uint64_t v21 = *(void *)(v1[7] + 8 * i);
      if ((v2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1B2B0768C(v19, v20, v21, v3);
      if (v7) {
        goto LABEL_3;
      }
LABEL_4:
      BOOL v13 = __OFADD__(v10++, 1);
      if (v13) {
        goto LABEL_25;
      }
      if (v10 >= v9) {
        break;
      }
      if (!v4[v10])
      {
        int64_t v14 = v10 + 1;
        if (v10 + 1 >= v9) {
          break;
        }
        if (!v4[v14])
        {
          while (1)
          {
            int64_t v10 = v14 + 1;
            if (__OFADD__(v14, 1)) {
              break;
            }
            if (v10 >= v9) {
              goto LABEL_18;
            }
            ++v14;
            if (v4[v10]) {
              goto LABEL_13;
            }
          }
          __break(1u);
LABEL_25:
          __break(1u);
          return;
        }
        ++v10;
      }
LABEL_13:
      sub_1B299E5A0();
      unint64_t v7 = v16 & v15;
    }
LABEL_18:
    swift_release();
    uint64_t v0 = v27;
    if (v2)
    {
      sub_1B2B125C0();
      if (v23 ^ v13 | v22)
      {
        sub_1B2A0F798();
        *int64_t v4 = v24;
      }
      else
      {
        uint64_t v25 = sub_1B2B1206C();
        sub_1B2A0088C(v25, v26, v1 + 8);
      }
      v1[2] = 0;
    }
  }
  swift_release();
  *uint64_t v0 = v3;
  sub_1B2A0F7F4();
}

void sub_1B2B04B78(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B2B04B84(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = sub_1B29A3EB4(&qword_1E9C3A148);
  uint64_t v5 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_1B29A3EB4(&qword_1E9C3E060);
  int v41 = a2;
  uint64_t result = sub_1B2E83478();
  uint64_t v9 = result;
  if (*(void *)(v7 + 16))
  {
    uint64_t v37 = v2;
    int64_t v10 = 0;
    uint64_t v11 = *(void *)(v7 + 64);
    unint64_t v39 = (void *)(v7 + 64);
    uint64_t v12 = 1 << *(unsigned char *)(v7 + 32);
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v11;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v16 = result + 64;
    if ((v13 & v11) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    for (unint64_t i = v17 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v10 << 6))
    {
      uint64_t v22 = *(void *)(v7 + 56);
      uint64_t v23 = v7;
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * i);
      uint64_t v25 = v5;
      uint64_t v26 = *(void *)(v5 + 72);
      uint64_t v27 = v22 + v26 * i;
      if (v41) {
        (*v15)(v42, v27, v43);
      }
      else {
        (*v40)(v42, v27, v43);
      }
      sub_1B2E83988();
      sub_1B2E839C8();
      uint64_t result = sub_1B2E839E8();
      uint64_t v28 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v16 + 8 * (v29 >> 6))) == 0)
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v28) >> 6;
        while (++v30 != v33 || (v32 & 1) == 0)
        {
          BOOL v34 = v30 == v33;
          if (v30 == v33) {
            unint64_t v30 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v30);
          if (v35 != -1)
          {
            unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return result;
      }
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(void *)(v16 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
      *(void *)(*(void *)(v9 + 48) + 8 * v31) = v24;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v15)(*(void *)(v9 + 56) + v26 * v31, v42, v43);
      ++*(void *)(v9 + 16);
      uint64_t v5 = v25;
      uint64_t v7 = v23;
      if (v14) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v19 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_42;
      }
      if (v19 >= v38) {
        goto LABEL_33;
      }
      unint64_t v20 = v39[v19];
      ++v10;
      if (!v20)
      {
        int64_t v10 = v19 + 1;
        if (v19 + 1 >= v38) {
          goto LABEL_33;
        }
        unint64_t v20 = v39[v10];
        if (!v20)
        {
          int64_t v21 = v19 + 2;
          if (v21 >= v38)
          {
LABEL_33:
            if ((v41 & 1) == 0)
            {
              uint64_t result = swift_release();
              uint64_t v3 = v37;
              goto LABEL_40;
            }
            uint64_t v36 = 1 << *(unsigned char *)(v7 + 32);
            if (v36 >= 64) {
              sub_1B2A0088C(0, (unint64_t)(v36 + 63) >> 6, v39);
            }
            else {
              *unint64_t v39 = -1 << v36;
            }
            uint64_t v3 = v37;
            *(void *)(v7 + 16) = 0;
            break;
          }
          unint64_t v20 = v39[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v10 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_43;
              }
              if (v10 >= v38) {
                goto LABEL_33;
              }
              unint64_t v20 = v39[v10];
              ++v21;
              if (v20) {
                goto LABEL_18;
              }
            }
          }
          int64_t v10 = v21;
        }
      }
LABEL_18:
      unint64_t v14 = (v20 - 1) & v20;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_1B2B04F3C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B29A3EB4(&qword_1E9C3E050);
  uint64_t result = sub_1B2E83478();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v31 = a2;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    if (!v12) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    for (unint64_t i = v15 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v8 << 6))
    {
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * i);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * i);
      sub_1B2E83988();
      sub_1B2E839C8();
      uint64_t result = sub_1B2E839E8();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6))) == 0)
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v22) >> 6;
        while (++v24 != v27 || (v26 & 1) == 0)
        {
          BOOL v28 = v24 == v27;
          if (v24 == v27) {
            unint64_t v24 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v24);
          if (v29 != -1)
          {
            unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_28:
      *(void *)(v14 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      *(void *)(*(void *)(v7 + 48) + 8 * v25) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v25) = v21;
      ++*(void *)(v7 + 16);
      if (v12) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v17 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_39;
      }
      if (v17 >= v13) {
        goto LABEL_30;
      }
      unint64_t v18 = v9[v17];
      ++v8;
      if (!v18)
      {
        int64_t v8 = v17 + 1;
        if (v17 + 1 >= v13) {
          goto LABEL_30;
        }
        unint64_t v18 = v9[v8];
        if (!v18)
        {
          int64_t v19 = v17 + 2;
          if (v19 >= v13)
          {
LABEL_30:
            if ((v31 & 1) == 0)
            {
              uint64_t result = swift_release();
              uint64_t v3 = v2;
              goto LABEL_37;
            }
            uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
            if (v30 >= 64) {
              sub_1B2A0088C(0, (unint64_t)(v30 + 63) >> 6, (void *)(v5 + 64));
            }
            else {
              *uint64_t v9 = -1 << v30;
            }
            uint64_t v3 = v2;
            *(void *)(v5 + 16) = 0;
            break;
          }
          unint64_t v18 = v9[v19];
          if (!v18)
          {
            while (1)
            {
              int64_t v8 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_40;
              }
              if (v8 >= v13) {
                goto LABEL_30;
              }
              unint64_t v18 = v9[v8];
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          int64_t v8 = v19;
        }
      }
LABEL_18:
      unint64_t v12 = (v18 - 1) & v18;
    }
  }
  uint64_t result = swift_release();
LABEL_37:
  *uint64_t v3 = v7;
  return result;
}

void sub_1B2B05204(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7DA080);
  char v34 = a2;
  uint64_t v35 = (void *)sub_1B2E83478();
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
    char v32 = (void *)(v4 + 64);
    uint64_t v6 = -1;
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    unint64_t v7 = v6 & *(void *)(v4 + 64);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    swift_retain();
    int64_t v8 = 0;
    uint64_t v33 = v4;
    if (!v7) {
      goto LABEL_6;
    }
LABEL_5:
    unint64_t v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    int64_t v37 = v8;
    for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v13 << 6))
    {
      uint64_t v15 = 5 * i;
      uint64_t v16 = *(void *)(v4 + 56);
      uint64_t v17 = *(void *)(v4 + 48) + 8 * v15;
      uint64_t v18 = *(void *)v17;
      uint64_t v19 = *(void *)(v17 + 8);
      uint64_t v20 = *(void *)(v17 + 16);
      uint64_t v21 = *(void *)(v17 + 24);
      char v22 = *(unsigned char *)(v17 + 32);
      char v23 = *(unsigned char *)(v17 + 33);
      unint64_t v24 = (uint64_t *)(v16 + 8 * v15);
      uint64_t v25 = *v24;
      long long v26 = *(_OWORD *)(v24 + 1);
      uint64_t v27 = v24[3];
      uint64_t v28 = v24[4];
      if ((v34 & 1) == 0)
      {
        long long v36 = *(_OWORD *)(v24 + 1);
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v26 = v36;
      }
      v38[0] = v18;
      v38[1] = v19;
      v38[2] = v20;
      _OWORD v38[3] = v21;
      char v39 = v22;
      char v40 = v23;
      uint64_t v41 = v25;
      long long v42 = v26;
      uint64_t v43 = v27;
      uint64_t v44 = v28;
      sub_1B2B07770((uint64_t)v38, (uint64_t)&v41, v35);
      uint64_t v4 = v33;
      int64_t v8 = v37;
      if (v7) {
        goto LABEL_5;
      }
LABEL_6:
      int64_t v11 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return;
      }
      if (v11 >= v31) {
        goto LABEL_22;
      }
      unint64_t v12 = v32[v11];
      int64_t v13 = v8 + 1;
      if (!v12)
      {
        int64_t v13 = v8 + 2;
        if (v8 + 2 >= v31) {
          goto LABEL_22;
        }
        unint64_t v12 = v32[v13];
        if (!v12)
        {
          uint64_t v14 = v8 + 3;
          if (v8 + 3 >= v31)
          {
LABEL_22:
            swift_release();
            if (v34)
            {
              uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
              if (v29 > 63) {
                sub_1B2A0088C(0, (unint64_t)(v29 + 63) >> 6, v32);
              }
              else {
                void *v32 = -1 << v29;
              }
              *(void *)(v4 + 16) = 0;
            }
            break;
          }
          unint64_t v12 = v32[v14];
          if (!v12)
          {
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_29;
              }
              if (v13 >= v31) {
                goto LABEL_22;
              }
              unint64_t v12 = v32[v13];
              ++v14;
              if (v12) {
                goto LABEL_17;
              }
            }
          }
          int64_t v13 = v8 + 3;
        }
      }
LABEL_17:
      unint64_t v7 = (v12 - 1) & v12;
      int64_t v37 = v13;
    }
  }
  swift_release();
  *uint64_t v30 = v35;
}

void sub_1B2B0548C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  sub_1B299B3E0();
  a32 = v35;
  a33 = v36;
  sub_1B2B11AC4();
  sub_1B29A3EB4(&qword_1E9C38A48);
  uint64_t v63 = (void *)sub_1B2B11E0C();
  if (v34[2])
  {
    sub_1B2B11D90();
    sub_1B2B1258C();
    unint64_t v39 = v38 & v37;
    uint64_t v61 = v33;
    int64_t v62 = (unint64_t)(v40 + 63) >> 6;
    swift_retain();
    int64_t v41 = 0;
    if (!v39) {
      goto LABEL_4;
    }
LABEL_3:
    unint64_t v42 = __clz(__rbit64(v39));
    v39 &= v39 - 1;
    for (unint64_t i = v42 | (v41 << 6); ; unint64_t i = v49 + (v41 << 6))
    {
      uint64_t v50 = (uint64_t *)(v34[6] + 48 * i);
      uint64_t v52 = *v50;
      uint64_t v51 = v50[1];
      uint64_t v53 = v50[2];
      uint64_t v54 = v50[3];
      uint64_t v55 = v50[4];
      uint64_t v56 = v50[5];
      char v57 = *(void **)(v34[7] + 8 * i);
      if ((a14 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v58 = v57;
      }
      a16 = v52;
      a17 = v51;
      a18 = v53;
      a19 = v54;
      a20 = v55;
      a21 = v56;
      sub_1B2B078AC((uint64_t)&a16, (uint64_t)v57, v63);
      if (v39) {
        goto LABEL_3;
      }
LABEL_4:
      int64_t v44 = v41 + 1;
      if (__OFADD__(v41, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return;
      }
      if (v44 >= v62) {
        goto LABEL_21;
      }
      ++v41;
      if (!*(void *)(a12 + 8 * v44))
      {
        int64_t v41 = v44 + 1;
        if (v44 + 1 >= v62) {
          goto LABEL_21;
        }
        if (!*(void *)(a12 + 8 * v41))
        {
          sub_1B2B12550();
          if (v47 == v48)
          {
LABEL_21:
            swift_release();
            uint64_t v33 = v61;
            if (a14)
            {
              sub_1B2B125C0();
              if (v47 ^ v48 | v60) {
                sub_1B2B11FD0(v59);
              }
              else {
                sub_1B2B11C34(v59);
              }
              v34[2] = 0;
            }
            break;
          }
          if (!*(void *)(a12 + 8 * v45))
          {
            while (1)
            {
              int64_t v41 = v45 + 1;
              if (__OFADD__(v45, 1)) {
                goto LABEL_28;
              }
              if (v41 >= v46) {
                goto LABEL_21;
              }
              ++v45;
              if (*(void *)(a12 + 8 * v41)) {
                goto LABEL_16;
              }
            }
          }
          int64_t v41 = v45;
        }
      }
LABEL_16:
      sub_1B2B1253C();
    }
  }
  swift_release();
  *uint64_t v33 = v63;
  sub_1B2A0EF9C();
}

void sub_1B2B05630()
{
  sub_1B2B11AC4();
  sub_1B29A3EB4(&qword_1E9C37B20);
  sub_1B2B12028();
  sub_1B2B11EEC();
  if (v3)
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    long long v26 = v0;
    uint64_t v27 = v1 + 64;
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    uint64_t v6 = v5 & *(void *)(v1 + 64);
    int64_t v7 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v8 = v2 + 64;
    swift_retain();
    int64_t v9 = 0;
    if (!v6) {
      goto LABEL_7;
    }
LABEL_6:
    sub_1B2B12330();
    while (1)
    {
      uint64_t v14 = *(void *)(*(void *)(v1 + 56) + 8 * v10);
      if ((v2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1B2B125E8();
      sub_1B2E82498();
      unint64_t v15 = sub_1B2E839E8() & ~(-1 << *(unsigned char *)(v2 + 32));
      if (((-1 << v15) & ~*(void *)(v8 + 8 * (v15 >> 6))) == 0)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v20)
          {
            if (v17) {
              break;
            }
          }
          if (v18 == v19) {
            uint64_t v18 = 0;
          }
          if (*(void *)(v8 + 8 * v18) != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }
      sub_1B299F374();
LABEL_31:
      sub_1B2B11DDC(v16);
      *(void *)(v22 + 8 * v21) = v14;
      sub_1B299E788();
      if (v6) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v11 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_40;
      }
      if (v11 >= v7) {
        goto LABEL_33;
      }
      ++v9;
      if (!*(void *)(v27 + 8 * v11))
      {
        int64_t v9 = v11 + 1;
        if (v11 + 1 >= v7) {
          goto LABEL_33;
        }
        if (!*(void *)(v27 + 8 * v9))
        {
          int64_t v12 = v11 + 2;
          if (v12 >= v7)
          {
LABEL_33:
            swift_release();
            uint64_t v0 = v26;
            if (v2)
            {
              sub_1B2B11A24();
              if (v24 != v25) {
                sub_1B2B11FD0(v23);
              }
              else {
                sub_1B2B11C34(v23);
              }
              *(void *)(v1 + 16) = 0;
            }
            break;
          }
          if (!*(void *)(v27 + 8 * v12))
          {
            while (1)
            {
              int64_t v9 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_41;
              }
              if (v9 >= v7) {
                goto LABEL_33;
              }
              ++v12;
              if (*(void *)(v27 + 8 * v9)) {
                goto LABEL_18;
              }
            }
          }
          int64_t v9 = v12;
        }
      }
LABEL_18:
      sub_1B2B1253C();
      uint64_t v10 = v13 + (v9 << 6);
    }
  }
  swift_release();
  *uint64_t v0 = v2;
}

void sub_1B2B05868()
{
  sub_1B2B11AC4();
  sub_1B29A3EB4(&qword_1E9C3E030);
  sub_1B2B11E0C();
  sub_1B2B11EEC();
  if (v3)
  {
    sub_1B2B11D90();
    sub_1B2B12110();
    uint64_t v32 = v4;
    uint64_t v5 = v2 + 64;
    swift_retain();
    uint64_t v6 = 0;
    if (!v0) {
      goto LABEL_4;
    }
LABEL_3:
    sub_1B2B12354();
    while (1)
    {
      int64_t v11 = (uint64_t *)(*(void *)(v1 + 56) + v7 * v8);
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      char v14 = *((unsigned char *)v11 + 16);
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1B2E83988();
      sub_1B2E82498();
      sub_1B2E839E8();
      sub_1B2B11F78();
      if (((v17 << v16) & ~*(void *)(v5 + 8 * v15)) == 0)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v22)
          {
            if (v19) {
              break;
            }
          }
          if (v20 == v21) {
            uint64_t v20 = 0;
          }
          if (*(void *)(v5 + 8 * v20) != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      sub_1B299F374();
LABEL_28:
      sub_1B2B11DDC(v18);
      uint64_t v26 = v24 + v23 * v25;
      *(void *)uint64_t v26 = v12;
      *(void *)(v26 + 8) = v13;
      *(unsigned char *)(v26 + 16) = v14;
      sub_1B299E788();
      if (v0) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_37;
      }
      if (v9 >= v32) {
        goto LABEL_30;
      }
      ++v6;
      if (!v33[v9])
      {
        uint64_t v6 = v9 + 1;
        if (v9 + 1 >= v32) {
          goto LABEL_30;
        }
        if (!v33[v6])
        {
          uint64_t v10 = v9 + 2;
          if (v10 >= v32)
          {
LABEL_30:
            swift_release();
            if (v34)
            {
              sub_1B2B11A24();
              if (v27 != v28)
              {
                sub_1B2A0F798();
                *uint64_t v33 = v29;
              }
              else
              {
                uint64_t v30 = sub_1B2B1206C();
                sub_1B2A0088C(v30, v31, v33);
              }
              *(void *)(v1 + 16) = 0;
            }
            break;
          }
          if (!v33[v10])
          {
            while (1)
            {
              uint64_t v6 = v10 + 1;
              if (__OFADD__(v10, 1)) {
                goto LABEL_38;
              }
              if (v6 >= v32) {
                goto LABEL_30;
              }
              ++v10;
              if (v33[v6]) {
                goto LABEL_15;
              }
            }
          }
          uint64_t v6 = v10;
        }
      }
LABEL_15:
      sub_1B2B122E8();
    }
  }
  swift_release();
  *uint64_t v0 = v2;
}

void sub_1B2B05A8C(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v7 = v4;
  sub_1B2B11C94(a1, a2, a3);
  sub_1B2B1243C();
  sub_1B2B12028();
  sub_1B2B11EEC();
  if (v9)
  {
    uint64_t v33 = v5 + 8;
    sub_1B2B12110();
    uint64_t v32 = v10;
    uint64_t v11 = a2 + 64;
    swift_retain();
    uint64_t v12 = 0;
    if (!v4) {
      goto LABEL_4;
    }
LABEL_3:
    sub_1B2B12354();
    while (1)
    {
      uint64_t v16 = v5[7] + 40 * v13;
      if (a2)
      {
        a4(v16, v34);
      }
      else
      {
        sub_1B2B11010(v16, (uint64_t)v34);
        swift_bridgeObjectRetain();
      }
      sub_1B2E83988();
      sub_1B2E82498();
      sub_1B2E839E8();
      sub_1B2B11F78();
      if (((v19 << v18) & ~*(void *)(v11 + 8 * v17)) == 0)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v24)
          {
            if (v21) {
              break;
            }
          }
          if (v22 == v23) {
            uint64_t v22 = 0;
          }
          if (*(void *)(v11 + 8 * v22) != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1B299F374();
LABEL_29:
      sub_1B2B11DAC(v20);
      a4((uint64_t)v34, (unsigned char *)(v26 + 40 * v25));
      sub_1B299E788();
      if (v4) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v14 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v32) {
        goto LABEL_31;
      }
      ++v12;
      if (!v33[v14])
      {
        uint64_t v12 = v14 + 1;
        if (v14 + 1 >= v32) {
          goto LABEL_31;
        }
        if (!v33[v12])
        {
          uint64_t v15 = v14 + 2;
          if (v15 >= v32)
          {
LABEL_31:
            swift_release();
            uint64_t v7 = v4;
            if (a2)
            {
              sub_1B2B11A24();
              if (v27 != v28)
              {
                sub_1B2A0F798();
                *uint64_t v33 = v29;
              }
              else
              {
                uint64_t v30 = sub_1B2B1206C();
                sub_1B2A0088C(v30, v31, v33);
              }
              v5[2] = 0;
            }
            break;
          }
          if (!v33[v15])
          {
            while (1)
            {
              uint64_t v12 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_39;
              }
              if (v12 >= v32) {
                goto LABEL_31;
              }
              ++v15;
              if (v33[v12]) {
                goto LABEL_15;
              }
            }
          }
          uint64_t v12 = v15;
        }
      }
LABEL_15:
      sub_1B2B122E8();
    }
  }
  swift_release();
  uint64_t *v7 = a2;
}

uint64_t sub_1B2B05CC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for CodableLocation();
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1B29A3EB4(&qword_1E9C3E010);
  char v9 = a2;
  uint64_t v10 = sub_1B2E83478();
  uint64_t v11 = (void *)v10;
  if (*(void *)(v8 + 16))
  {
    uint64_t v12 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v13 = *(void *)(v8 + 64);
    uint64_t v33 = (void *)(v8 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    uint64_t v31 = v2;
    int64_t v32 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    if (!v15) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v19 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v18 << 6))
    {
      uint64_t v25 = *(void *)(v34 + 72);
      uint64_t v26 = *(void *)(v8 + 48) + v25 * i;
      if (v9) {
        sub_1B2B1188C(v26, (uint64_t)v7);
      }
      else {
        sub_1B2B118F0(v26, (uint64_t)v7);
      }
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * i);
      sub_1B2E83988();
      CodableLocation.hash(into:)();
      sub_1B2E839E8();
      unint64_t v28 = sub_1B2E830F8();
      *(void *)(v16 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      uint64_t result = sub_1B2B1188C((uint64_t)v7, v11[6] + v25 * v28);
      *(void *)(v11[7] + 8 * v28) = v27;
      ++v11[2];
      if (v15) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v21 = v18 + 1;
      if (__OFADD__(v18, 1))
      {
        __break(1u);
LABEL_33:
        __break(1u);
        return result;
      }
      uint64_t v22 = v33;
      if (v21 >= v32) {
        goto LABEL_24;
      }
      unint64_t v23 = v33[v21];
      ++v18;
      if (!v23)
      {
        int64_t v18 = v21 + 1;
        if (v21 + 1 >= v32) {
          goto LABEL_24;
        }
        unint64_t v23 = v33[v18];
        if (!v23)
        {
          int64_t v24 = v21 + 2;
          if (v24 >= v32)
          {
LABEL_24:
            swift_release();
            if ((v9 & 1) == 0)
            {
              uint64_t result = swift_release();
              uint64_t v3 = v31;
              goto LABEL_31;
            }
            uint64_t v29 = 1 << *(unsigned char *)(v8 + 32);
            if (v29 >= 64) {
              sub_1B2A0088C(0, (unint64_t)(v29 + 63) >> 6, v22);
            }
            else {
              *uint64_t v22 = -1 << v29;
            }
            uint64_t v3 = v31;
            *(void *)(v8 + 16) = 0;
            break;
          }
          unint64_t v23 = v33[v24];
          if (!v23)
          {
            while (1)
            {
              int64_t v18 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                goto LABEL_33;
              }
              if (v18 >= v32) {
                goto LABEL_24;
              }
              unint64_t v23 = v33[v18];
              ++v24;
              if (v23) {
                goto LABEL_18;
              }
            }
          }
          int64_t v18 = v24;
        }
      }
LABEL_18:
      unint64_t v15 = (v23 - 1) & v23;
    }
  }
  uint64_t result = swift_release();
LABEL_31:
  *uint64_t v3 = v11;
  return result;
}

void sub_1B2B05FD4(uint64_t a1, char a2)
{
}

void sub_1B2B05FE8(uint64_t a1, char a2)
{
}

void sub_1B2B05FFC(uint64_t a1, char a2)
{
}

void sub_1B2B06010(uint64_t a1, char a2)
{
}

void sub_1B2B06024(uint64_t a1, char a2)
{
}

void sub_1B2B06038(uint64_t a1, char a2)
{
}

void sub_1B2B0604C(uint64_t a1, char a2)
{
}

void sub_1B2B06060(uint64_t a1, char a2)
{
}

void sub_1B2B06074()
{
  sub_1B299B3E0();
  uint64_t v5 = v0;
  char v7 = v6;
  sub_1B299B9DC();
  sub_1B29A3EB4(&qword_1E9C3DF88);
  sub_1B2B11CB8();
  sub_1B2B11EEC();
  if (v8)
  {
    char v25 = v7;
    uint64_t v9 = 0;
    uint64_t v26 = v1 + 64;
    sub_1B299AE5C();
    if (!v3) {
      goto LABEL_4;
    }
LABEL_3:
    sub_1B2B123B8();
    while (1)
    {
      uint64_t v13 = *(void *)(*(void *)(v1 + 56) + 8 * v10);
      sub_1B2B125E8();
      sub_1B2E839B8();
      sub_1B2E839E8();
      sub_1B2B120B8();
      if (v14)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v14)
          {
            if (v16) {
              break;
            }
          }
          if (v17 == v18) {
            uint64_t v17 = 0;
          }
          if (v0[v17] != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      sub_1B299F374();
LABEL_26:
      sub_1B2B11E60(v15);
      *(void *)(v20 + 8 * v19) = v13;
      sub_1B299E788();
      if (v3) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v11 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_37;
      }
      if (v11 >= v4) {
        goto LABEL_28;
      }
      ++v9;
      if (!*(void *)(v26 + 8 * v11))
      {
        uint64_t v9 = v11 + 1;
        if (v11 + 1 >= v4) {
          goto LABEL_28;
        }
        if (!*(void *)(v26 + 8 * v9))
        {
          uint64_t v12 = v11 + 2;
          if (v12 >= v4)
          {
LABEL_28:
            if ((v25 & 1) == 0)
            {
              swift_release();
              uint64_t v5 = v0;
              goto LABEL_35;
            }
            sub_1B2B11A24();
            if (v23 != v24) {
              *int64_t v21 = -1 << v22;
            }
            else {
              sub_1B2A0088C(0, (unint64_t)(v22 + 63) >> 6, v21);
            }
            uint64_t v5 = v0;
            *(void *)(v1 + 16) = 0;
            break;
          }
          if (!*(void *)(v26 + 8 * v12))
          {
            while (1)
            {
              uint64_t v9 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_38;
              }
              if (v9 >= v4) {
                goto LABEL_28;
              }
              ++v12;
              if (*(void *)(v26 + 8 * v9)) {
                goto LABEL_15;
              }
            }
          }
          uint64_t v9 = v12;
        }
      }
LABEL_15:
      sub_1B2B12300();
    }
  }
  swift_release();
LABEL_35:
  *uint64_t v5 = v2;
  sub_1B2A0EF9C();
}

void sub_1B2B06238(uint64_t a1, char a2)
{
}

void sub_1B2B0624C(uint64_t a1, char a2)
{
}

void sub_1B2B06260(uint64_t a1, char a2)
{
}

void sub_1B2B06274(uint64_t a1, char a2)
{
}

void sub_1B2B06288(uint64_t a1, char a2, uint64_t *a3, uint64_t *a4)
{
  char v6 = v4;
  uint64_t v52 = sub_1B29A3EB4(a3);
  sub_1B299D278();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1B29B1CB0(v11, v46);
  uint64_t v12 = *v4;
  sub_1B29A3EB4(a4);
  sub_1B2B1243C();
  char v50 = a2;
  sub_1B2E83478();
  sub_1B2B11EEC();
  if (v13)
  {
    int64_t v14 = 0;
    char v48 = v12 + 8;
    sub_1B2B1225C();
    unint64_t v17 = v16 & v15;
    int64_t v47 = (unint64_t)(v18 + 63) >> 6;
    uint64_t v49 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    uint64_t v19 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    if ((v16 & v15) == 0) {
      goto LABEL_4;
    }
LABEL_3:
    unint64_t v20 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    for (unint64_t i = v20 | (v14 << 6); ; unint64_t i = v30 + (v14 << 6))
    {
      uint64_t v31 = v12[7];
      int64_t v32 = v12;
      char v33 = *(unsigned char *)(v12[6] + i);
      uint64_t v34 = v9;
      uint64_t v35 = *(void *)(v9 + 72);
      unint64_t v36 = v31 + v35 * i;
      if (v50) {
        (*v19)(v51, v36, v52);
      }
      else {
        (*v49)(v51, v36, v52);
      }
      sub_1B2E83988();
      sub_1B2E839B8();
      sub_1B2E839E8();
      sub_1B2B12004();
      if (v37)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v37)
          {
            if (v39) {
              break;
            }
          }
          if (v40 == v41) {
            uint64_t v40 = 0;
          }
          if (a4[v40 + 8] != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      sub_1B299F374();
LABEL_30:
      sub_1B2B11FE0(v38);
      *(unsigned char *)(v43 + v42) = v33;
      (*v19)(a4[7] + v35 * v42, v51, v52);
      sub_1B299E788();
      uint64_t v9 = v34;
      uint64_t v12 = v32;
      if (v17) {
        goto LABEL_3;
      }
LABEL_4:
      int64_t v22 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_41;
      }
      if (v22 >= v47) {
        goto LABEL_32;
      }
      ++v14;
      if (!v48[v22])
      {
        int64_t v14 = v22 + 1;
        if (v22 + 1 >= v47) {
          goto LABEL_32;
        }
        if (!v48[v14])
        {
          sub_1B2B12550();
          if (v26 == v27)
          {
LABEL_32:
            if ((v50 & 1) == 0)
            {
              swift_release();
              char v6 = v4;
              goto LABEL_39;
            }
            sub_1B2B11A24();
            if (v26 != v27) {
              *int64_t v44 = -1 << v45;
            }
            else {
              sub_1B2A0088C(0, (unint64_t)(v45 + 63) >> 6, v44);
            }
            char v6 = v4;
            v12[2] = 0;
            break;
          }
          if (!*(void *)(v23 + 8 * v24))
          {
            while (1)
            {
              int64_t v14 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                goto LABEL_42;
              }
              if (v14 >= v25) {
                goto LABEL_32;
              }
              ++v24;
              if (*(void *)(v23 + 8 * v14)) {
                goto LABEL_16;
              }
            }
          }
          int64_t v14 = v24;
        }
      }
LABEL_16:
      sub_1B29A08E0();
      unint64_t v17 = v29 & v28;
    }
  }
  swift_release();
LABEL_39:
  *char v6 = a4;
}

void sub_1B2B06560(uint64_t a1, uint64_t a2)
{
}

void sub_1B2B0656C(uint64_t a1, uint64_t a2)
{
}

void sub_1B2B06578(uint64_t a1, uint64_t a2)
{
}

void sub_1B2B06584(uint64_t a1, uint64_t a2)
{
}

void sub_1B2B06590(uint64_t a1, uint64_t a2)
{
}

void sub_1B2B0659C(uint64_t a1, uint64_t a2)
{
}

void sub_1B2B065A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v8 = v3;
  char v9 = a2;
  sub_1B2B11C94(a1, a2, a3);
  sub_1B2B11CB8();
  sub_1B2B11EEC();
  if (v10)
  {
    char v27 = v9;
    uint64_t v11 = 0;
    uint64_t v12 = v4 + 8;
    sub_1B299AE5C();
    if (!v6) {
      goto LABEL_4;
    }
LABEL_3:
    sub_1B2B123B8();
    while (1)
    {
      uint64_t v16 = *(void *)(v4[7] + 8 * v13);
      sub_1B2B125E8();
      sub_1B2E839B8();
      sub_1B2E839E8();
      sub_1B2B120B8();
      if (v17)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v17)
          {
            if (v19) {
              break;
            }
          }
          if (v20 == v21) {
            uint64_t v20 = 0;
          }
          if (v3[v20] != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      sub_1B299F374();
LABEL_26:
      sub_1B2B11E60(v18);
      *(void *)(v23 + 8 * v22) = v16;
      sub_1B299E788();
      if (v6) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_37;
      }
      if (v14 >= v7) {
        goto LABEL_28;
      }
      ++v11;
      if (!v12[v14])
      {
        uint64_t v11 = v14 + 1;
        if (v14 + 1 >= v7) {
          goto LABEL_28;
        }
        if (!v12[v11])
        {
          uint64_t v15 = v14 + 2;
          if (v15 >= v7)
          {
LABEL_28:
            if ((v27 & 1) == 0)
            {
              swift_release();
              uint64_t v8 = v3;
              goto LABEL_35;
            }
            sub_1B2B11A24();
            if (v25 != v26) {
              *uint64_t v12 = -1 << v24;
            }
            else {
              sub_1B2B125A0(v24);
            }
            uint64_t v8 = v3;
            _OWORD v4[2] = 0;
            break;
          }
          if (!v12[v15])
          {
            while (1)
            {
              uint64_t v11 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v7) {
                goto LABEL_28;
              }
              ++v15;
              if (v12[v11]) {
                goto LABEL_15;
              }
            }
          }
          uint64_t v11 = v15;
        }
      }
LABEL_15:
      sub_1B2B12300();
    }
  }
  swift_release();
LABEL_35:
  *uint64_t v8 = v5;
}

void sub_1B2B0676C(uint64_t a1, char a2)
{
}

void sub_1B2B06780(uint64_t a1, uint64_t a2)
{
}

void sub_1B2B0678C(uint64_t a1, uint64_t a2)
{
}

void sub_1B2B06798(uint64_t a1, char a2)
{
}

void sub_1B2B067AC(uint64_t a1, char a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v55 = sub_1B29A3EB4(a3);
  sub_1B299D278();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1B29B1CB0(v11, v48);
  uint64_t v12 = *v4;
  sub_1B29A3EB4(a4);
  char v53 = a2;
  uint64_t v13 = sub_1B2B12028();
  if (!*(void *)(v12 + 16)) {
    goto LABEL_42;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v12 + 32);
  char v50 = (void *)(v12 + 64);
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & *(void *)(v12 + 64);
  int64_t v49 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v51 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  uint64_t v52 = v9;
  char v17 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  swift_retain();
  int64_t v18 = 0;
  if (!v16) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = v29 + (v18 << 6))
  {
    uint64_t v30 = *(void *)(v12 + 56);
    uint64_t v31 = v12;
    int64_t v32 = (uint64_t *)(*(void *)(v12 + 48) + 16 * i);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    uint64_t v35 = *(void *)(v52 + 72);
    uint64_t v36 = v30 + v35 * i;
    if (v53)
    {
      (*v17)(v54, v36, v55);
    }
    else
    {
      (*v51)(v54, v36, v55);
      swift_bridgeObjectRetain();
    }
    sub_1B2E83988();
    sub_1B2E82498();
    sub_1B2E839E8();
    sub_1B2B12004();
    if (v37)
    {
      sub_1B29A41BC();
      while (1)
      {
        sub_1B2A0F308();
        if (v37)
        {
          if (v39) {
            break;
          }
        }
        if (v40 == v41) {
          uint64_t v40 = 0;
        }
        if (*(void *)(v13 + 64 + 8 * v40) != -1)
        {
          sub_1B29A4CA8();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    sub_1B299F374();
LABEL_33:
    sub_1B2B11FE0(v38);
    int64_t v44 = (void *)(v43 + 16 * v42);
    *int64_t v44 = v33;
    v44[1] = v34;
    (*v17)(*(void *)(v13 + 56) + v35 * v42, v54, v55);
    sub_1B299E788();
    uint64_t v12 = v31;
    if (v16) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_44;
    }
    if (v21 >= v49)
    {
      swift_release();
      uint64_t v6 = v4;
      uint64_t v22 = v50;
      goto LABEL_37;
    }
    uint64_t v22 = v50;
    ++v18;
    if (!v50[v21])
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v49) {
        goto LABEL_35;
      }
      if (!v50[v18]) {
        break;
      }
    }
LABEL_19:
    sub_1B29A08E0();
    unint64_t v16 = v28 & v27;
  }
  sub_1B2B12550();
  if (v25 != v26)
  {
    if (!v50[v23])
    {
      while (1)
      {
        int64_t v18 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          goto LABEL_45;
        }
        if (v18 >= v24) {
          goto LABEL_35;
        }
        ++v23;
        if (v50[v18]) {
          goto LABEL_19;
        }
      }
    }
    int64_t v18 = v23;
    goto LABEL_19;
  }
LABEL_35:
  swift_release();
  uint64_t v6 = v4;
LABEL_37:
  if (v53)
  {
    if (1 << *(unsigned char *)(v12 + 32) >= 64)
    {
      uint64_t v46 = sub_1B2B1206C();
      sub_1B2A0088C(v46, v47, v22);
    }
    else
    {
      sub_1B2A0F798();
      *uint64_t v22 = v45;
    }
    *(void *)(v12 + 16) = 0;
  }
LABEL_42:
  swift_release();
  *uint64_t v6 = v13;
}

void sub_1B2B06AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  sub_1B2A0F870();
  unint64_t v16 = v10;
  char v18 = v17;
  sub_1B299B9DC();
  sub_1B29A3EB4(&qword_1E9C3DF98);
  sub_1B2B11CB8();
  sub_1B2B11EEC();
  if (v19)
  {
    sub_1B2B11B4C();
    uint64_t v20 = 0;
    if (!v13) {
      goto LABEL_4;
    }
LABEL_3:
    sub_1B2A0F518();
    while (1)
    {
      int64_t v24 = *(void **)(v11[6] + 8 * v21);
      uint64_t v25 = *(void *)(v11[7] + 8 * v21);
      if ((v18 & 1) == 0) {
        id v26 = v24;
      }
      sub_1B2E82EF8();
      sub_1B2B12098();
      if (v27)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v27)
          {
            if (v29) {
              break;
            }
          }
          if (v30 == v31) {
            uint64_t v30 = 0;
          }
          if (*(void *)(v15 + 8 * v30) != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      sub_1B299F374();
LABEL_28:
      *(void *)(v15 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      *(void *)(*(void *)(v12 + 48) + 8 * v28) = v24;
      *(void *)(*(void *)(v12 + 56) + 8 * v28) = v25;
      sub_1B299E788();
      if (v13) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v22 = v20 + 1;
      if (__OFADD__(v20, 1)) {
        goto LABEL_39;
      }
      if (v22 >= v14) {
        break;
      }
      ++v20;
      if (!*(void *)(a10 + 8 * v22))
      {
        uint64_t v20 = v22 + 1;
        if (v22 + 1 >= v14) {
          goto LABEL_30;
        }
        if (!*(void *)(a10 + 8 * v20))
        {
          uint64_t v23 = v22 + 2;
          if (v23 >= v14)
          {
LABEL_30:
            swift_release();
            unint64_t v16 = a9;
            if ((v18 & 1) == 0) {
              goto LABEL_37;
            }
            goto LABEL_33;
          }
          if (!*(void *)(a10 + 8 * v23))
          {
            while (1)
            {
              uint64_t v20 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_40;
              }
              if (v20 >= v14) {
                goto LABEL_30;
              }
              ++v23;
              if (*(void *)(a10 + 8 * v20)) {
                goto LABEL_15;
              }
            }
          }
          uint64_t v20 = v23;
        }
      }
LABEL_15:
      sub_1B2A0F4C4();
    }
    swift_release();
    unint64_t v16 = a9;
    if ((v18 & 1) == 0) {
      goto LABEL_37;
    }
LABEL_33:
    sub_1B2B11A24();
    if (v33 != v34) {
      sub_1B2B11FD0(v32);
    }
    else {
      sub_1B2B11C34(v32);
    }
    id v11[2] = 0;
  }
LABEL_37:
  swift_release();
  *unint64_t v16 = v12;
  sub_1B2A0F7F4();
}

void sub_1B2B06C84(uint64_t a1, uint64_t a2)
{
}

void sub_1B2B06C90(uint64_t a1, uint64_t a2)
{
}

void sub_1B2B06C9C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  sub_1B2B11C94(a1, a2, a3);
  sub_1B2B11E0C();
  sub_1B2B11EEC();
  if (v7)
  {
    sub_1B2B11D90();
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    uint64_t v11 = v10 & v9;
    int64_t v34 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = a2 + 64;
    swift_retain();
    int64_t v13 = 0;
    if (!v11) {
      goto LABEL_7;
    }
LABEL_6:
    sub_1B2B12600();
    for (uint64_t i = v14 | (v13 << 6); ; uint64_t i = v23 + (v13 << 6))
    {
      uint64_t v24 = *(void *)(*(void *)(v4 + 56) + 8 * i);
      if ((v36 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1B2E83988();
      sub_1B2E82498();
      unint64_t v25 = sub_1B2E839E8() & ~(-1 << *(unsigned char *)(a2 + 32));
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) == 0)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v30)
          {
            if (v27) {
              break;
            }
          }
          if (v28 == v29) {
            uint64_t v28 = 0;
          }
          if (*(void *)(v12 + 8 * v28) != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_32;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      sub_1B299F374();
LABEL_32:
      sub_1B2B11DAC(v26);
      *(void *)(v32 + 8 * v31) = v24;
      sub_1B299E788();
      if (v11) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_41;
      }
      if (v16 >= v34) {
        goto LABEL_34;
      }
      ++v13;
      if (!*(void *)(v35 + 8 * v16))
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v34) {
          goto LABEL_34;
        }
        if (!*(void *)(v35 + 8 * v13))
        {
          sub_1B2B12550();
          if (v19 == v20)
          {
LABEL_34:
            swift_release();
            uint64_t v5 = v3;
            if (v36)
            {
              sub_1B2B11A24();
              if (v19 != v20) {
                sub_1B2B11FD0(v33);
              }
              else {
                sub_1B2B11C34(v33);
              }
              *(void *)(v4 + 16) = 0;
            }
            break;
          }
          if (!*(void *)(v35 + 8 * v17))
          {
            while (1)
            {
              int64_t v13 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v13 >= v18) {
                goto LABEL_34;
              }
              ++v17;
              if (*(void *)(v35 + 8 * v13)) {
                goto LABEL_19;
              }
            }
          }
          int64_t v13 = v17;
        }
      }
LABEL_19:
      sub_1B29A08E0();
      uint64_t v11 = v22 & v21;
    }
  }
  swift_release();
  *uint64_t v5 = a2;
}

uint64_t sub_1B2B06EC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B29A3EB4(&qword_1E9C3DE88);
  uint64_t result = sub_1B2E83478();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = *(void *)(v5 + 64);
    uint64_t v35 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & v9;
    int64_t v34 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    if ((v11 & v9) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    int64_t v36 = v8;
    for (unint64_t i = v14 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v18 << 6))
    {
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * i);
      uint64_t v21 = *(void *)(v5 + 56) + 72 * i;
      long long v39 = *(_OWORD *)(v21 + 32);
      long long v40 = *(_OWORD *)(v21 + 16);
      long long v37 = *(_OWORD *)v21;
      long long v38 = *(_OWORD *)(v21 + 48);
      uint64_t v22 = *(void *)(v21 + 64);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1B2E83978();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) == 0)
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          BOOL v29 = v25 == v28;
          if (v25 == v28) {
            unint64_t v25 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v25);
          if (v30 != -1)
          {
            unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v13 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      *(void *)(*(void *)(v7 + 48) + 8 * v26) = v20;
      uint64_t v31 = *(void *)(v7 + 56) + 72 * v26;
      *(_OWORD *)uint64_t v31 = v37;
      *(_OWORD *)(v31 + 16) = v40;
      *(_OWORD *)(v31 + 32) = v39;
      *(_OWORD *)(v31 + 48) = v38;
      *(void *)(v31 + 64) = v22;
      ++*(void *)(v7 + 16);
      int64_t v8 = v36;
      if (v12) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_40;
      }
      if (v16 >= v34) {
        goto LABEL_32;
      }
      unint64_t v17 = v35[v16];
      int64_t v18 = v8 + 1;
      if (!v17)
      {
        int64_t v18 = v16 + 1;
        if (v16 + 1 >= v34) {
          goto LABEL_32;
        }
        unint64_t v17 = v35[v18];
        if (!v17)
        {
          int64_t v19 = v16 + 2;
          if (v19 >= v34)
          {
LABEL_32:
            if (a2)
            {
              if (v33 >= 64) {
                sub_1B2A0088C(0, v34, v35);
              }
              else {
                *uint64_t v35 = v32;
              }
              *(void *)(v5 + 16) = 0;
            }
            break;
          }
          unint64_t v17 = v35[v19];
          if (!v17)
          {
            while (1)
            {
              int64_t v18 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_41;
              }
              if (v18 >= v34) {
                goto LABEL_32;
              }
              unint64_t v17 = v35[v18];
              ++v19;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          int64_t v18 = v19;
        }
      }
LABEL_18:
      unint64_t v12 = (v17 - 1) & v17;
      int64_t v36 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1B2B07200(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B29A3EB4(&qword_1E9C3DE78);
  uint64_t result = sub_1B2E83478();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = *(void *)(v5 + 64);
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & v9;
    int64_t v30 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    if ((v11 & v9) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    for (unint64_t i = v14 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v8 << 6))
    {
      uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * i);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * i);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1B2E83988();
      sub_1B2E839C8();
      uint64_t result = sub_1B2E839E8();
      uint64_t v21 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) == 0)
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v21) >> 6;
        while (++v23 != v26 || (v25 & 1) == 0)
        {
          BOOL v27 = v23 == v26;
          if (v23 == v26) {
            unint64_t v23 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v23);
          if (v28 != -1)
          {
            unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v13 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      *(void *)(*(void *)(v7 + 48) + 8 * v24) = v19;
      *(void *)(*(void *)(v7 + 56) + 8 * v24) = v20;
      ++*(void *)(v7 + 16);
      if (v12) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_41;
      }
      if (v16 >= v30) {
        goto LABEL_32;
      }
      unint64_t v17 = v31[v16];
      ++v8;
      if (!v17)
      {
        int64_t v8 = v16 + 1;
        if (v16 + 1 >= v30) {
          goto LABEL_32;
        }
        unint64_t v17 = v31[v8];
        if (!v17)
        {
          int64_t v18 = v16 + 2;
          if (v18 >= v30)
          {
LABEL_32:
            if ((a2 & 1) == 0)
            {
              uint64_t result = swift_release();
              uint64_t v3 = v2;
              goto LABEL_39;
            }
            uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
            if (v29 >= 64) {
              sub_1B2A0088C(0, (unint64_t)(v29 + 63) >> 6, v31);
            }
            else {
              *uint64_t v31 = -1 << v29;
            }
            uint64_t v3 = v2;
            *(void *)(v5 + 16) = 0;
            break;
          }
          unint64_t v17 = v31[v18];
          if (!v17)
          {
            while (1)
            {
              int64_t v8 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v8 >= v30) {
                goto LABEL_32;
              }
              unint64_t v17 = v31[v8];
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          int64_t v8 = v18;
        }
      }
LABEL_18:
      unint64_t v12 = (v17 - 1) & v17;
    }
  }
  uint64_t result = swift_release();
LABEL_39:
  *uint64_t v3 = v7;
  return result;
}

void sub_1B2B074CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
}

void sub_1B2B074D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  sub_1B2A0F870();
  int64_t v16 = v10;
  char v18 = v17;
  sub_1B2B11C94(v19, v17, v20);
  sub_1B2B11CB8();
  sub_1B2B11EEC();
  if (v21)
  {
    sub_1B2B11B4C();
    uint64_t v22 = 0;
    if (!v13) {
      goto LABEL_4;
    }
LABEL_3:
    sub_1B2A0F518();
    while (1)
    {
      unint64_t v26 = *(void **)(v11[6] + 8 * v23);
      BOOL v27 = *(void **)(v11[7] + 8 * v23);
      if ((v18 & 1) == 0)
      {
        id v28 = v26;
        id v29 = v27;
      }
      sub_1B2E82EF8();
      sub_1B2B12098();
      if (v30)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v30)
          {
            if (v32) {
              break;
            }
          }
          if (v33 == v34) {
            uint64_t v33 = 0;
          }
          if (*(void *)(v15 + 8 * v33) != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      sub_1B299F374();
LABEL_28:
      *(void *)(v15 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
      *(void *)(*(void *)(v12 + 48) + 8 * v31) = v26;
      *(void *)(*(void *)(v12 + 56) + 8 * v31) = v27;
      sub_1B299E788();
      if (v13) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v24 = v22 + 1;
      if (__OFADD__(v22, 1)) {
        goto LABEL_39;
      }
      if (v24 >= v14) {
        break;
      }
      ++v22;
      if (!*(void *)(a10 + 8 * v24))
      {
        uint64_t v22 = v24 + 1;
        if (v24 + 1 >= v14) {
          goto LABEL_30;
        }
        if (!*(void *)(a10 + 8 * v22))
        {
          uint64_t v25 = v24 + 2;
          if (v25 >= v14)
          {
LABEL_30:
            swift_release();
            int64_t v16 = a9;
            if ((v18 & 1) == 0) {
              goto LABEL_37;
            }
            goto LABEL_33;
          }
          if (!*(void *)(a10 + 8 * v25))
          {
            while (1)
            {
              uint64_t v22 = v25 + 1;
              if (__OFADD__(v25, 1)) {
                goto LABEL_40;
              }
              if (v22 >= v14) {
                goto LABEL_30;
              }
              ++v25;
              if (*(void *)(a10 + 8 * v22)) {
                goto LABEL_15;
              }
            }
          }
          uint64_t v22 = v25;
        }
      }
LABEL_15:
      sub_1B2A0F4C4();
    }
    swift_release();
    int64_t v16 = a9;
    if ((v18 & 1) == 0) {
      goto LABEL_37;
    }
LABEL_33:
    sub_1B2B11A24();
    if (v36 != v37) {
      sub_1B2B11FD0(v35);
    }
    else {
      sub_1B2B11C34(v35);
    }
    id v11[2] = 0;
  }
LABEL_37:
  swift_release();
  *int64_t v16 = v12;
  sub_1B2A0F7F4();
}

unint64_t sub_1B2B0768C(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  sub_1B2E83988();
  sub_1B2E839A8();
  if ((a2 & 1) == 0) {
    sub_1B2E839C8();
  }
  sub_1B2E839E8();
  unint64_t result = sub_1B2E830F8();
  *(void *)((char *)a4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v9 = a4[6] + 16 * result;
  *(void *)uint64_t v9 = a1;
  *(unsigned char *)(v9 + 8) = a2 & 1;
  *(void *)(a4[7] + 8 * result) = a3;
  ++a4[2];
  return result;
}

__n128 sub_1B2B07770(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B2E83988();
  int v6 = *(unsigned __int8 *)(a1 + 33);
  swift_bridgeObjectRetain();
  sub_1B29E52BC(a1);
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  sub_1B29C5E2C(a1);
  sub_1B2E839A8();
  if (v6 != 2) {
    sub_1B2E83998();
  }
  sub_1B2E839E8();
  unint64_t v7 = sub_1B2E830F8();
  *(void *)((char *)a3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
  uint64_t v8 = a3[6] + 40 * v7;
  __int16 v9 = *(_WORD *)(a1 + 32);
  long long v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 16) = v10;
  *(_WORD *)(v8 + 32) = v9;
  uint64_t v11 = a3[7] + 40 * v7;
  __n128 result = *(__n128 *)a2;
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a2;
  *(_OWORD *)(v11 + 16) = v13;
  *(void *)(v11 + 32) = *(void *)(a2 + 32);
  ++a3[2];
  return result;
}

__n128 sub_1B2B078AC(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  sub_1B2E839E8();
  sub_1B2A0F798();
  unint64_t v6 = sub_1B2E830F8();
  *(void *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  uint64_t v7 = a3[6] + 48 * v6;
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 16) = v8;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v7 + 32) = result;
  *(void *)(a3[7] + 8 * v6) = a2;
  ++a3[2];
  return result;
}

void sub_1B2B079E4(uint64_t a1, char a2, void *a3)
{
  int64_t v44 = a3;
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3A148);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  __int16 v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C3A158);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (void *)((char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v37[0] = v3;
  v37[1] = a1;
  int64_t v16 = (char *)v14 + *(int *)(v11 + 48);
  uint64_t v41 = v7;
  uint64_t v42 = v16;
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v39 = *(void *)(v12 + 72);
  uint64_t v43 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  long long v40 = v9;
  long long v38 = v14;
  while (1)
  {
    sub_1B29D2210(v17, (uint64_t)v14, &qword_1E9C3A158);
    uint64_t v18 = *v14;
    uint64_t v48 = *v14;
    uint64_t v19 = *v43;
    uint64_t v20 = v6;
    (*v43)(v9, v42, v6);
    uint64_t v21 = (void *)*v44;
    unint64_t v23 = sub_1B29DAE70();
    uint64_t v24 = v21[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v27 = v22;
    if (v21[3] < v26) {
      break;
    }
    if (a2)
    {
      if (v22) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3E068);
      sub_1B2E833A8();
      if (v27) {
        goto LABEL_14;
      }
    }
LABEL_10:
    char v30 = (void *)*v44;
    *(void *)(*v44 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    *(void *)(v30[6] + 8 * v23) = v18;
    unint64_t v31 = v30[7] + *(void *)(v41 + 72) * v23;
    __int16 v9 = v40;
    uint64_t v6 = v20;
    v19((char *)v31, v40, v20);
    uint64_t v32 = v30[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_18;
    }
    v30[2] = v34;
    uint64_t v14 = v38;
    v17 += v39;
    a2 = 1;
    if (!--v15)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B04B84(v26, a2 & 1);
  unint64_t v28 = sub_1B29DAE70();
  if ((v27 & 1) != (v29 & 1)) {
    goto LABEL_19;
  }
  unint64_t v23 = v28;
  if ((v27 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v35 = (void *)swift_allocError();
  swift_willThrow();
  id v47 = v35;
  id v36 = v35;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v20);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B07E34(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_17:
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v6 = 0;
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v9 = *(v7 - 1);
    uint64_t v8 = *v7;
    uint64_t v10 = (void *)*a3;
    unint64_t v12 = sub_1B29DAE70();
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_20;
    }
    char v16 = v11;
    if (v10[3] < v15) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3E058);
      sub_1B2E833A8();
      if (v16) {
        goto LABEL_15;
      }
    }
LABEL_11:
    uint64_t v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(void *)(v19[6] + 8 * v12) = v9;
    *(void *)(v19[7] + 8 * v12) = v8;
    uint64_t v20 = v19[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_21;
    }
    ++v6;
    v19[2] = v22;
    v7 += 2;
    a2 = 1;
    if (v5 == v6) {
      goto LABEL_17;
    }
  }
  sub_1B2B04F3C(v15, a2 & 1);
  unint64_t v17 = sub_1B29DAE70();
  if ((v16 & 1) != (v18 & 1)) {
    goto LABEL_22;
  }
  unint64_t v12 = v17;
  if ((v16 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_15:
  unint64_t v23 = (void *)swift_allocError();
  swift_willThrow();
  id v24 = v23;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_23:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B080EC(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v31 = v3;
  if (!v3)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  while (1)
  {
    if (v5 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_24;
    }
    long long v36 = *(_OWORD *)(a1 + v4 + 80);
    __int16 v6 = *(unsigned __int8 *)(a1 + v4 + 64);
    __int16 v7 = *(unsigned __int8 *)(a1 + v4 + 65);
    uint64_t v8 = *(void *)(a1 + v4 + 104);
    uint64_t v34 = *(void *)(a1 + v4 + 96);
    uint64_t v9 = *(void *)(a1 + v4 + 72);
    uint64_t v11 = *(void *)(a1 + v4 + 48);
    uint64_t v10 = *(void *)(a1 + v4 + 56);
    uint64_t v13 = *(void *)(a1 + v4 + 32);
    uint64_t v12 = *(void *)(a1 + v4 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (!v12) {
      goto LABEL_18;
    }
    *(void *)&long long v37 = v13;
    *((void *)&v37 + 1) = v12;
    *(void *)&long long v38 = v11;
    *((void *)&v38 + 1) = v10;
    __int16 v39 = v6 | (v7 << 8);
    BOOL v14 = (void *)*a3;
    unint64_t v16 = sub_1B29DB3FC();
    uint64_t v17 = v14[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      goto LABEL_21;
    }
    char v20 = v15;
    if (v14[3] < v19) {
      break;
    }
    if (a2)
    {
      if (v15) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3E070);
      sub_1B2E833A8();
      if (v20) {
        goto LABEL_16;
      }
    }
LABEL_12:
    unint64_t v23 = (void *)*a3;
    *(void *)(*a3 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    uint64_t v24 = v23[6] + 40 * v16;
    *(_OWORD *)uint64_t v24 = v37;
    *(_OWORD *)(v24 + 16) = v38;
    *(_WORD *)(v24 + 32) = v39;
    uint64_t v25 = v23[7] + 40 * v16;
    *(void *)uint64_t v25 = v9;
    *(_OWORD *)(v25 + 8) = v36;
    *(void *)(v25 + 24) = v34;
    *(void *)(v25 + 32) = v8;
    uint64_t v26 = v23[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_22;
    }
    ++v5;
    uint64_t v23[2] = v28;
    v4 += 80;
    a2 = 1;
    if (v31 == v5) {
      goto LABEL_18;
    }
  }
  sub_1B2B05204(v19, a2 & 1);
  unint64_t v21 = sub_1B29DB3FC();
  if ((v20 & 1) != (v22 & 1)) {
    goto LABEL_23;
  }
  unint64_t v16 = v21;
  if ((v20 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  char v29 = (void *)swift_allocError();
  swift_willThrow();
  id v30 = v29;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B08488(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v41 = v3;
  uint64_t v42 = swift_bridgeObjectRetain();
  for (unint64_t i = (uint64_t *)(v42 + 48); ; i += 3)
  {
    uint64_t v9 = *(i - 2);
    uint64_t v8 = *(i - 1);
    uint64_t v10 = *i;
    uint64_t v11 = (void *)*a3;
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1B29DB060(v9, v8, v12, v13, v14, v15, v16, v17, v38, v39, v40, v41, v42, v43, v44, (uint64_t)v45, v9, v8, v48,
            v49,
            v50,
            v51,
            v52,
            v53,
            v54,
            v55);
    uint64_t v20 = v11[2];
    BOOL v21 = (v18 & 1) == 0;
    if (__OFADD__(v20, v21))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v22 = v18;
    if (v11[3] < v20 + v21) {
      break;
    }
    if (a2)
    {
      if (v18) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4((uint64_t *)&unk_1E9C3E1A0);
      sub_1B2E833A8();
      if (v22) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v31 = (void *)*a3;
    *(void *)(*a3 + 8 * (v19 >> 6) + 64) |= 1 << v19;
    uint64_t v32 = (uint64_t *)(v31[6] + 16 * v19);
    uint64_t *v32 = v9;
    v32[1] = v8;
    *(void *)(v31[7] + 8 * v19) = v10;
    uint64_t v33 = v31[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_18;
    }
    v31[2] = v35;
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B05630();
  uint64_t v29 = sub_1B29DB060(v9, v8, v23, v24, v25, v26, v27, v28, v38, v39, v40, v41, v42, v43, v44, (uint64_t)v45, v46, v47, v48,
          v49,
          v50,
          v51,
          v52,
          v53,
          v54,
          v55);
  if ((v22 & 1) != (v30 & 1)) {
    goto LABEL_19;
  }
  unint64_t v19 = v29;
  if ((v22 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  long long v36 = (void *)swift_allocError();
  swift_willThrow();
  id v37 = v36;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B08750(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v40 = v3;
  uint64_t v41 = a1;
  uint64_t v42 = (long long *)&v53;
  uint64_t v7 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1B29D2210(v7, (uint64_t)&v51, (uint64_t *)&unk_1E9C37A58);
    uint64_t v9 = v51;
    uint64_t v8 = v52;
    uint64_t v49 = v51;
    uint64_t v50 = v52;
    sub_1B29D1D20(v42, (uint64_t)&v45);
    uint64_t v10 = (void *)*a3;
    unint64_t v18 = sub_1B29DB060(v9, v8, v11, v12, v13, v14, v15, v16, v38, v39, v40, v41, (uint64_t)v42, v43, v44, v45, *((uint64_t *)&v45 + 1), v46, v47,
            v48,
            v49,
            v50,
            v51,
            v52,
            v53,
            v54);
    uint64_t v19 = v10[2];
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v22 = v17;
    if (v10[3] < v21) {
      break;
    }
    if (a2)
    {
      if (v17) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DDC0);
      sub_1B2E833A8();
      if (v22) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v31 = (void *)*a3;
    *(void *)(*a3 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    uint64_t v32 = (uint64_t *)(v31[6] + 16 * v18);
    uint64_t *v32 = v9;
    v32[1] = v8;
    sub_1B29D1D20(&v45, v31[7] + 40 * v18);
    uint64_t v33 = v31[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_18;
    }
    v31[2] = v35;
    v7 += 56;
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B05A8C(v21, a2 & 1, &qword_1E9C37B18, (void (*)(uint64_t, unsigned char *))sub_1B29D1D20);
  uint64_t v29 = sub_1B29DB060(v9, v8, v23, v24, v25, v26, v27, v28, v38, v39, v40, v41, (uint64_t)v42, v43, v44, v45, *((uint64_t *)&v45 + 1), v46, v47,
          v48,
          v49,
          v50,
          v51,
          v52,
          v53,
          v54);
  if ((v22 & 1) != (v30 & 1)) {
    goto LABEL_19;
  }
  unint64_t v18 = v29;
  if ((v22 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  long long v36 = (void *)swift_allocError();
  swift_willThrow();
  id v55 = v36;
  id v37 = v36;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1B2B11954((uint64_t)&v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B08A64(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v40 = v3;
  uint64_t v41 = a1;
  uint64_t v42 = (long long *)&v53;
  uint64_t v7 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1B29D2210(v7, (uint64_t)&v51, &qword_1E9C37A50);
    uint64_t v9 = v51;
    uint64_t v8 = v52;
    uint64_t v49 = v51;
    uint64_t v50 = v52;
    sub_1B29D1D20(v42, (uint64_t)&v45);
    uint64_t v10 = (void *)*a3;
    unint64_t v18 = sub_1B29DB060(v9, v8, v11, v12, v13, v14, v15, v16, v38, v39, v40, v41, (uint64_t)v42, v43, v44, v45, *((uint64_t *)&v45 + 1), v46, v47,
            v48,
            v49,
            v50,
            v51,
            v52,
            v53,
            v54);
    uint64_t v19 = v10[2];
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v22 = v17;
    if (v10[3] < v21) {
      break;
    }
    if (a2)
    {
      if (v17) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DDC8);
      sub_1B2E833A8();
      if (v22) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v31 = (void *)*a3;
    *(void *)(*a3 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    uint64_t v32 = (uint64_t *)(v31[6] + 16 * v18);
    uint64_t *v32 = v9;
    v32[1] = v8;
    sub_1B29D1D20(&v45, v31[7] + 40 * v18);
    uint64_t v33 = v31[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_18;
    }
    v31[2] = v35;
    v7 += 56;
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B05A8C(v21, a2 & 1, &qword_1E9C37B10, (void (*)(uint64_t, unsigned char *))sub_1B29D1D20);
  uint64_t v29 = sub_1B29DB060(v9, v8, v23, v24, v25, v26, v27, v28, v38, v39, v40, v41, (uint64_t)v42, v43, v44, v45, *((uint64_t *)&v45 + 1), v46, v47,
          v48,
          v49,
          v50,
          v51,
          v52,
          v53,
          v54);
  if ((v22 & 1) != (v30 & 1)) {
    goto LABEL_19;
  }
  unint64_t v18 = v29;
  if ((v22 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  long long v36 = (void *)swift_allocError();
  swift_willThrow();
  id v55 = v36;
  id v37 = v36;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1B2B11954((uint64_t)&v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B08D78(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = type metadata accessor for CodableLocation();
  uint64_t v36 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v37 = (uint64_t)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39F28);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v33[1] = v7;
  v33[2] = v3;
  uint64_t v15 = *(int *)(v10 + 48);
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v34 = *(void *)(v11 + 72);
  uint64_t v35 = v15;
  v33[3] = a1;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1B29D2210(v16, (uint64_t)v13, &qword_1E9C39F28);
    sub_1B2B1188C((uint64_t)v13, v37);
    uint64_t v17 = *(void *)&v13[v35];
    unint64_t v18 = (void *)*a3;
    unint64_t v20 = sub_1B29DB0B8();
    uint64_t v21 = v18[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v24 = v19;
    if (v18[3] < v23) {
      break;
    }
    if (a2)
    {
      if (v19) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3E018);
      sub_1B2E833A8();
      if (v24) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v27 = (void *)*a3;
    *(void *)(*a3 + 8 * (v20 >> 6) + 64) |= 1 << v20;
    sub_1B2B1188C(v37, v27[6] + *(void *)(v36 + 72) * v20);
    *(void *)(v27[7] + 8 * v20) = v17;
    uint64_t v28 = v27[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_18;
    }
    v27[2] = v30;
    v16 += v34;
    a2 = 1;
    if (!--v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B05CC8(v23, a2 & 1);
  unint64_t v25 = sub_1B29DB0B8();
  if ((v24 & 1) != (v26 & 1)) {
    goto LABEL_19;
  }
  unint64_t v20 = v25;
  if ((v24 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v31 = (void *)swift_allocError();
  swift_willThrow();
  id v40 = v31;
  id v32 = v31;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1B2A2C090(v37);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v38 = 0;
  unint64_t v39 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B09168(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v6 = 0;
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = *((unsigned __int8 *)v7 - 8);
    if (v8 == 9) {
      goto LABEL_18;
    }
    uint64_t v9 = *v7;
    uint64_t v10 = (void *)*a3;
    unint64_t v12 = sub_1B29DB110(v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_21;
    }
    char v16 = v11;
    if (v10[3] < v15) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DFF8);
      sub_1B2E833A8();
      if (v16) {
        goto LABEL_16;
      }
    }
LABEL_12:
    char v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(unsigned char *)(v19[6] + v12) = v8;
    *(void *)(v19[7] + 8 * v12) = v9;
    uint64_t v20 = v19[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_22;
    }
    ++v6;
    v19[2] = v22;
    v7 += 2;
    a2 = 1;
    if (v5 == v6) {
      goto LABEL_18;
    }
  }
  sub_1B2B065A8(v15, a2 & 1, &qword_1E9C3DFF0);
  uint64_t v17 = sub_1B29DB110(v8);
  if ((v16 & 1) != (v18 & 1)) {
    goto LABEL_23;
  }
  unint64_t v12 = v17;
  if ((v16 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v23 = (void *)swift_allocError();
  swift_willThrow();
  id v24 = v23;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B09434(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v6 = 0;
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = *((unsigned __int8 *)v7 - 8);
    if (v8 == 7) {
      goto LABEL_18;
    }
    uint64_t v9 = *v7;
    uint64_t v10 = (void *)*a3;
    unint64_t v12 = sub_1B29DB110(v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_21;
    }
    char v16 = v11;
    if (v10[3] < v15) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DFD8);
      sub_1B2E833A8();
      if (v16) {
        goto LABEL_16;
      }
    }
LABEL_12:
    char v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(unsigned char *)(v19[6] + v12) = v8;
    *(void *)(v19[7] + 8 * v12) = v9;
    uint64_t v20 = v19[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_22;
    }
    ++v6;
    v19[2] = v22;
    v7 += 2;
    a2 = 1;
    if (v5 == v6) {
      goto LABEL_18;
    }
  }
  sub_1B2B065A8(v15, a2 & 1, &qword_1E9C3DFD0);
  uint64_t v17 = sub_1B29DB110(v8);
  if ((v16 & 1) != (v18 & 1)) {
    goto LABEL_23;
  }
  unint64_t v12 = v17;
  if ((v16 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v23 = (void *)swift_allocError();
  swift_willThrow();
  id v24 = v23;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B09700(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v6 = 0;
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = *((unsigned __int8 *)v7 - 8);
    if (v8 == 5) {
      goto LABEL_18;
    }
    uint64_t v9 = *v7;
    uint64_t v10 = (void *)*a3;
    unint64_t v12 = sub_1B29DB110(v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_21;
    }
    char v16 = v11;
    if (v10[3] < v15) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DFC8);
      sub_1B2E833A8();
      if (v16) {
        goto LABEL_16;
      }
    }
LABEL_12:
    char v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(unsigned char *)(v19[6] + v12) = v8;
    *(void *)(v19[7] + 8 * v12) = v9;
    uint64_t v20 = v19[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_22;
    }
    ++v6;
    v19[2] = v22;
    v7 += 2;
    a2 = 1;
    if (v5 == v6) {
      goto LABEL_18;
    }
  }
  sub_1B2B065A8(v15, a2 & 1, &qword_1E9C3DFC0);
  uint64_t v17 = sub_1B29DB110(v8);
  if ((v16 & 1) != (v18 & 1)) {
    goto LABEL_23;
  }
  unint64_t v12 = v17;
  if ((v16 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v23 = (void *)swift_allocError();
  swift_willThrow();
  id v24 = v23;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B099CC(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v6 = 0;
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = *((unsigned __int8 *)v7 - 8);
    if (v8 == 8) {
      goto LABEL_18;
    }
    uint64_t v9 = *v7;
    uint64_t v10 = (void *)*a3;
    unint64_t v12 = sub_1B29DB110(v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_21;
    }
    char v16 = v11;
    if (v10[3] < v15) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DFB8);
      sub_1B2E833A8();
      if (v16) {
        goto LABEL_16;
      }
    }
LABEL_12:
    char v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(unsigned char *)(v19[6] + v12) = v8;
    *(void *)(v19[7] + 8 * v12) = v9;
    uint64_t v20 = v19[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_22;
    }
    ++v6;
    v19[2] = v22;
    v7 += 2;
    a2 = 1;
    if (v5 == v6) {
      goto LABEL_18;
    }
  }
  sub_1B2B065A8(v15, a2 & 1, &qword_1E9C3DFB0);
  uint64_t v17 = sub_1B29DB110(v8);
  if ((v16 & 1) != (v18 & 1)) {
    goto LABEL_23;
  }
  unint64_t v12 = v17;
  if ((v16 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v23 = (void *)swift_allocError();
  swift_willThrow();
  id v24 = v23;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B09C98(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v10)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v11 = 0;
  unint64_t v12 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v11 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_24;
    }
    int v13 = *((unsigned __int8 *)v12 - 8);
    if (v13 == 4) {
      goto LABEL_18;
    }
    uint64_t v14 = *v12;
    uint64_t v15 = sub_1B2B12614();
    unint64_t v18 = v16(v15);
    uint64_t v19 = v7[2];
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      goto LABEL_21;
    }
    char v22 = v17;
    if (v7[3] < v21) {
      break;
    }
    if (a2)
    {
      if (v17) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1B29A3EB4(a7);
      uint64_t v7 = a3;
      sub_1B2E833A8();
      if (v22) {
        goto LABEL_16;
      }
    }
LABEL_12:
    uint64_t v27 = (void *)*a3;
    *(void *)(*a3 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    *(unsigned char *)(v27[6] + v18) = v13;
    *(void *)(v27[7] + 8 * v18) = v14;
    uint64_t v28 = v27[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_22;
    }
    ++v11;
    v27[2] = v30;
    v12 += 2;
    a2 = 1;
    if (v10 == v11) {
      goto LABEL_18;
    }
  }
  uint64_t v7 = a3;
  sub_1B2B065A8(v21, a2 & 1, a5);
  uint64_t v23 = sub_1B2B12614();
  uint64_t v25 = v24(v23);
  if ((v22 & 1) != (v26 & 1)) {
    goto LABEL_23;
  }
  unint64_t v18 = v25;
  if ((v22 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v31 = (void *)swift_allocError();
  swift_willThrow();
  id v32 = v31;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B09F50(uint64_t a1, char a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3D770);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39BF8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[0] = v3;
  v36[1] = a1;
  id v40 = &v13[*(int *)(v10 + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v37 = *(void *)(v11 + 72);
  uint64_t v41 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  while (1)
  {
    sub_1B29D2210(v15, (uint64_t)v13, &qword_1E9C39BF8);
    char v16 = v13;
    unsigned __int8 v47 = *v13;
    uint64_t v17 = v47;
    unint64_t v18 = *v41;
    (*v41)((unint64_t)v42, v40, v6);
    uint64_t v19 = (void *)*v43;
    unint64_t v21 = sub_1B29DB110(v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DEC0);
      sub_1B2E833A8();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v42;
    BOOL v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(unsigned char *)(v29[6] + v21) = v17;
    unint64_t v30 = v29[7] + *(void *)(v39 + 72) * v21;
    uint64_t v6 = v38;
    v18(v30, v28, v38);
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_18;
    }
    _OWORD v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    int v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B06288(v24, a2 & 1, &qword_1E9C3D770, &qword_1E9C3DEB8);
  uint64_t v26 = sub_1B29DB110(v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v34 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v34;
  id v35 = v34;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0A3AC(uint64_t a1, char a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3D770);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39BE8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[0] = v3;
  v36[1] = a1;
  id v40 = &v13[*(int *)(v10 + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v37 = *(void *)(v11 + 72);
  uint64_t v41 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  while (1)
  {
    sub_1B29D2210(v15, (uint64_t)v13, &qword_1E9C39BE8);
    char v16 = v13;
    unsigned __int8 v47 = *v13;
    uint64_t v17 = v47;
    unint64_t v18 = *v41;
    (*v41)((unint64_t)v42, v40, v6);
    uint64_t v19 = (void *)*v43;
    unint64_t v21 = sub_1B29DB110(v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DED0);
      sub_1B2E833A8();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v42;
    BOOL v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(unsigned char *)(v29[6] + v21) = v17;
    unint64_t v30 = v29[7] + *(void *)(v39 + 72) * v21;
    uint64_t v6 = v38;
    v18(v30, v28, v38);
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_18;
    }
    _OWORD v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    int v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B06288(v24, a2 & 1, &qword_1E9C3D770, &qword_1E9C3DEC8);
  uint64_t v26 = sub_1B29DB110(v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v34 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v34;
  id v35 = v34;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0A808(uint64_t a1, char a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3D770);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39BD8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[0] = v3;
  v36[1] = a1;
  id v40 = &v13[*(int *)(v10 + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v37 = *(void *)(v11 + 72);
  uint64_t v41 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  while (1)
  {
    sub_1B29D2210(v15, (uint64_t)v13, &qword_1E9C39BD8);
    char v16 = v13;
    unsigned __int8 v47 = *v13;
    uint64_t v17 = v47;
    unint64_t v18 = *v41;
    (*v41)((unint64_t)v42, v40, v6);
    uint64_t v19 = (void *)*v43;
    unint64_t v21 = sub_1B29DB110(v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DEE0);
      sub_1B2E833A8();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v42;
    BOOL v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(unsigned char *)(v29[6] + v21) = v17;
    unint64_t v30 = v29[7] + *(void *)(v39 + 72) * v21;
    uint64_t v6 = v38;
    v18(v30, v28, v38);
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_18;
    }
    _OWORD v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    int v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B06288(v24, a2 & 1, &qword_1E9C3D770, &qword_1E9C3DED8);
  uint64_t v26 = sub_1B29DB110(v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v34 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v34;
  id v35 = v34;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0AC64(uint64_t a1, char a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1E9C39D20);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39BC8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[0] = v3;
  v36[1] = a1;
  id v40 = &v13[*(int *)(v10 + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v37 = *(void *)(v11 + 72);
  uint64_t v41 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  while (1)
  {
    sub_1B29D2210(v15, (uint64_t)v13, &qword_1E9C39BC8);
    char v16 = v13;
    unsigned __int8 v47 = *v13;
    uint64_t v17 = v47;
    unint64_t v18 = *v41;
    (*v41)((unint64_t)v42, v40, v6);
    uint64_t v19 = (void *)*v43;
    unint64_t v21 = sub_1B29DB110(v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DEF0);
      sub_1B2E833A8();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v42;
    BOOL v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(unsigned char *)(v29[6] + v21) = v17;
    unint64_t v30 = v29[7] + *(void *)(v39 + 72) * v21;
    uint64_t v6 = v38;
    v18(v30, v28, v38);
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_18;
    }
    _OWORD v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    int v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B06288(v24, a2 & 1, (uint64_t *)&unk_1E9C39D20, &qword_1E9C3DEE8);
  uint64_t v26 = sub_1B29DB110(v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v34 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v34;
  id v35 = v34;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0B0C0(uint64_t a1, char a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1E9C39D20);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39BB8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[0] = v3;
  v36[1] = a1;
  id v40 = &v13[*(int *)(v10 + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v37 = *(void *)(v11 + 72);
  uint64_t v41 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  while (1)
  {
    sub_1B29D2210(v15, (uint64_t)v13, &qword_1E9C39BB8);
    char v16 = v13;
    unsigned __int8 v47 = *v13;
    uint64_t v17 = v47;
    unint64_t v18 = *v41;
    (*v41)((unint64_t)v42, v40, v6);
    uint64_t v19 = (void *)*v43;
    unint64_t v21 = sub_1B29DB110(v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DF00);
      sub_1B2E833A8();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v42;
    BOOL v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(unsigned char *)(v29[6] + v21) = v17;
    unint64_t v30 = v29[7] + *(void *)(v39 + 72) * v21;
    uint64_t v6 = v38;
    v18(v30, v28, v38);
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_18;
    }
    _OWORD v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    int v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B06288(v24, a2 & 1, (uint64_t *)&unk_1E9C39D20, &qword_1E9C3DEF8);
  uint64_t v26 = sub_1B29DB110(v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v34 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v34;
  id v35 = v34;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0B51C(uint64_t a1, char a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1E9C39D20);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39BA8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[0] = v3;
  v36[1] = a1;
  id v40 = &v13[*(int *)(v10 + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v37 = *(void *)(v11 + 72);
  uint64_t v41 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  while (1)
  {
    sub_1B29D2210(v15, (uint64_t)v13, &qword_1E9C39BA8);
    char v16 = v13;
    unsigned __int8 v47 = *v13;
    uint64_t v17 = v47;
    unint64_t v18 = *v41;
    (*v41)((unint64_t)v42, v40, v6);
    uint64_t v19 = (void *)*v43;
    unint64_t v21 = sub_1B29DB110(v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DF10);
      sub_1B2E833A8();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v42;
    BOOL v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(unsigned char *)(v29[6] + v21) = v17;
    unint64_t v30 = v29[7] + *(void *)(v39 + 72) * v21;
    uint64_t v6 = v38;
    v18(v30, v28, v38);
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_18;
    }
    _OWORD v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    int v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B06288(v24, a2 & 1, (uint64_t *)&unk_1E9C39D20, &qword_1E9C3DF08);
  uint64_t v26 = sub_1B29DB110(v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v34 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v34;
  id v35 = v34;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0B978(uint64_t a1, char a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3D770);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39B98);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[0] = v3;
  v36[1] = a1;
  id v40 = &v13[*(int *)(v10 + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v37 = *(void *)(v11 + 72);
  uint64_t v41 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  while (1)
  {
    sub_1B29D2210(v15, (uint64_t)v13, &qword_1E9C39B98);
    char v16 = v13;
    unsigned __int8 v47 = *v13;
    uint64_t v17 = v47;
    unint64_t v18 = *v41;
    (*v41)((unint64_t)v42, v40, v6);
    uint64_t v19 = (void *)*v43;
    unint64_t v21 = sub_1B29DB110(v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DF30);
      sub_1B2E833A8();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v42;
    BOOL v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(unsigned char *)(v29[6] + v21) = v17;
    unint64_t v30 = v29[7] + *(void *)(v39 + 72) * v21;
    uint64_t v6 = v38;
    v18(v30, v28, v38);
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_18;
    }
    _OWORD v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    int v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B06288(v24, a2 & 1, &qword_1E9C3D770, &qword_1E9C3DF28);
  uint64_t v26 = sub_1B29DB110(v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v34 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v34;
  id v35 = v34;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0BDD4(uint64_t a1, char a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1E9C39D20);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39B88);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[0] = v3;
  v36[1] = a1;
  id v40 = &v13[*(int *)(v10 + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v37 = *(void *)(v11 + 72);
  uint64_t v41 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  while (1)
  {
    sub_1B29D2210(v15, (uint64_t)v13, &qword_1E9C39B88);
    char v16 = v13;
    unsigned __int8 v47 = *v13;
    uint64_t v17 = v47;
    unint64_t v18 = *v41;
    (*v41)((unint64_t)v42, v40, v6);
    uint64_t v19 = (void *)*v43;
    unint64_t v21 = sub_1B29DB110(v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DF40);
      sub_1B2E833A8();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v42;
    BOOL v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(unsigned char *)(v29[6] + v21) = v17;
    unint64_t v30 = v29[7] + *(void *)(v39 + 72) * v21;
    uint64_t v6 = v38;
    v18(v30, v28, v38);
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_18;
    }
    _OWORD v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    int v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B06288(v24, a2 & 1, (uint64_t *)&unk_1E9C39D20, &qword_1E9C3DF38);
  uint64_t v26 = sub_1B29DB110(v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v34 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v34;
  id v35 = v34;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0C230(uint64_t a1, char a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3D770);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39B78);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[0] = v3;
  v36[1] = a1;
  id v40 = &v13[*(int *)(v10 + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v37 = *(void *)(v11 + 72);
  uint64_t v41 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  while (1)
  {
    sub_1B29D2210(v15, (uint64_t)v13, &qword_1E9C39B78);
    char v16 = v13;
    unsigned __int8 v47 = *v13;
    uint64_t v17 = v47;
    unint64_t v18 = *v41;
    (*v41)((unint64_t)v42, v40, v6);
    uint64_t v19 = (void *)*v43;
    unint64_t v21 = sub_1B29DB110(v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DF50);
      sub_1B2E833A8();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v42;
    BOOL v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(unsigned char *)(v29[6] + v21) = v17;
    unint64_t v30 = v29[7] + *(void *)(v39 + 72) * v21;
    uint64_t v6 = v38;
    v18(v30, v28, v38);
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_18;
    }
    _OWORD v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    int v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B06288(v24, a2 & 1, &qword_1E9C3D770, &qword_1E9C3DF48);
  uint64_t v26 = sub_1B29DB110(v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v34 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v34;
  id v35 = v34;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0C68C(uint64_t a1, char a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1E9C39D20);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39B68);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[0] = v3;
  v36[1] = a1;
  id v40 = &v13[*(int *)(v10 + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v37 = *(void *)(v11 + 72);
  uint64_t v41 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  while (1)
  {
    sub_1B29D2210(v15, (uint64_t)v13, &qword_1E9C39B68);
    char v16 = v13;
    unsigned __int8 v47 = *v13;
    uint64_t v17 = v47;
    unint64_t v18 = *v41;
    (*v41)((unint64_t)v42, v40, v6);
    uint64_t v19 = (void *)*v43;
    unint64_t v21 = sub_1B29DB110(v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DF60);
      sub_1B2E833A8();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v42;
    BOOL v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(unsigned char *)(v29[6] + v21) = v17;
    unint64_t v30 = v29[7] + *(void *)(v39 + 72) * v21;
    uint64_t v6 = v38;
    v18(v30, v28, v38);
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_18;
    }
    _OWORD v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    int v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B06288(v24, a2 & 1, (uint64_t *)&unk_1E9C39D20, &qword_1E9C3DF58);
  uint64_t v26 = sub_1B29DB110(v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v34 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v34;
  id v35 = v34;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0CAE8(uint64_t a1, char a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3D770);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39B58);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[0] = v3;
  v36[1] = a1;
  id v40 = &v13[*(int *)(v10 + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v37 = *(void *)(v11 + 72);
  uint64_t v41 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  while (1)
  {
    sub_1B29D2210(v15, (uint64_t)v13, &qword_1E9C39B58);
    char v16 = v13;
    unsigned __int8 v47 = *v13;
    uint64_t v17 = v47;
    unint64_t v18 = *v41;
    (*v41)((unint64_t)v42, v40, v6);
    uint64_t v19 = (void *)*v43;
    unint64_t v21 = sub_1B29DB110(v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DF70);
      sub_1B2E833A8();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v42;
    BOOL v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(unsigned char *)(v29[6] + v21) = v17;
    unint64_t v30 = v29[7] + *(void *)(v39 + 72) * v21;
    uint64_t v6 = v38;
    v18(v30, v28, v38);
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_18;
    }
    _OWORD v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    int v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B06288(v24, a2 & 1, &qword_1E9C3D770, &qword_1E9C3DF68);
  uint64_t v26 = sub_1B29DB110(v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v34 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v34;
  id v35 = v34;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0CF44(uint64_t a1, char a2, void *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1E9C39D20);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C39B48);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[0] = v3;
  v36[1] = a1;
  id v40 = &v13[*(int *)(v10 + 48)];
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v37 = *(void *)(v11 + 72);
  uint64_t v41 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  swift_bridgeObjectRetain();
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  while (1)
  {
    sub_1B29D2210(v15, (uint64_t)v13, &qword_1E9C39B48);
    char v16 = v13;
    unsigned __int8 v47 = *v13;
    uint64_t v17 = v47;
    unint64_t v18 = *v41;
    (*v41)((unint64_t)v42, v40, v6);
    uint64_t v19 = (void *)*v43;
    unint64_t v21 = sub_1B29DB110(v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DF80);
      sub_1B2E833A8();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v42;
    BOOL v29 = (void *)*v43;
    *(void *)(*v43 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(unsigned char *)(v29[6] + v21) = v17;
    unint64_t v30 = v29[7] + *(void *)(v39 + 72) * v21;
    uint64_t v6 = v38;
    v18(v30, v28, v38);
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_18;
    }
    _OWORD v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    int v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B06288(v24, a2 & 1, (uint64_t *)&unk_1E9C39D20, &qword_1E9C3DF78);
  uint64_t v26 = sub_1B29DB110(v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v34 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v34;
  id v35 = v34;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0D3A0(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v6 = 0;
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = *((unsigned __int8 *)v7 - 8);
    if (v8 == 4) {
      goto LABEL_18;
    }
    uint64_t v9 = *v7;
    uint64_t v10 = (void *)*a3;
    unint64_t v12 = sub_1B29DB110(v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    if (__OFADD__(v13, v14)) {
      goto LABEL_21;
    }
    char v15 = v11;
    if (v10[3] < v13 + v14) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DF90);
      sub_1B2E833A8();
      if (v15) {
        goto LABEL_16;
      }
    }
LABEL_12:
    unint64_t v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = v8;
    *(void *)(v18[7] + 8 * v12) = v9;
    uint64_t v19 = v18[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_22;
    }
    ++v6;
    v18[2] = v21;
    v7 += 2;
    a2 = 1;
    if (v5 == v6) {
      goto LABEL_18;
    }
  }
  sub_1B2B06074();
  uint64_t v16 = sub_1B29DB110(v8);
  if ((v15 & 1) != (v17 & 1)) {
    goto LABEL_23;
  }
  unint64_t v12 = v16;
  if ((v15 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v22 = (void *)swift_allocError();
  swift_willThrow();
  id v23 = v22;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0D664(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (unint64_t i = (void **)(swift_bridgeObjectRetain() + 40); ; i += 2)
  {
    uint64_t v7 = *i;
    uint64_t v8 = (void *)*a3;
    id v9 = *(i - 1);
    id v10 = v7;
    sub_1B29DB800();
    unint64_t v18 = v17;
    uint64_t v19 = v8[2];
    BOOL v20 = (v11 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B29C3CA0(0, &qword_1E9C39AE0);
      sub_1B2E83858();
      __break(1u);
      goto LABEL_20;
    }
    char v22 = v11;
    if (v8[3] < v21) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DEA0);
      sub_1B2E833A8();
      if (v22) {
        goto LABEL_14;
      }
    }
LABEL_10:
    char v25 = (void *)*a3;
    *(void *)(*a3 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    *(void *)(v25[6] + 8 * v18) = v9;
    *(void *)(v25[7] + 8 * v18) = v10;
    uint64_t v26 = v25[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_18;
    }
    v25[2] = v28;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1B2B074D8(v21, a2 & 1, (uint64_t)&unk_1E9C3DE98, v12, v13, v14, v15, v16, v31, v32);
  sub_1B29DB800();
  if ((v22 & 1) != (v24 & 1)) {
    goto LABEL_19;
  }
  unint64_t v18 = v23;
  if ((v22 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  BOOL v29 = (void *)swift_allocError();
  swift_willThrow();
  id v30 = v29;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_20:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B29C3CA0(0, &qword_1E9C39AE0);
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0D948(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v30 = v4;
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v5 = 0;
  unint64_t v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    if (v5 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = v6[5];
    uint64_t v7 = v6[6];
    uint64_t v10 = v6[3];
    uint64_t v9 = v6[4];
    uint64_t v11 = v6[2];
    uint64_t v12 = *v6;
    uint64_t v36 = *(v6 - 1);
    uint64_t v37 = v6[1];
    uint64_t v13 = *(v6 - 3);
    uint64_t v35 = *(v6 - 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1) {
      goto LABEL_18;
    }
    uint64_t v32 = v12;
    uint64_t v33 = v11;
    uint64_t v34 = v9;
    uint64_t v14 = (void *)*a3;
    unint64_t v16 = sub_1B29E5378(v13);
    uint64_t v17 = v14[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      goto LABEL_21;
    }
    char v20 = v15;
    if (v14[3] < v19) {
      break;
    }
    if (a2)
    {
      if (v15) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DE90);
      sub_1B2E833A8();
      if (v20) {
        goto LABEL_16;
      }
    }
LABEL_12:
    unint64_t v23 = (void *)*a3;
    *(void *)(*a3 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    *(void *)(v23[6] + 8 * v16) = v13;
    char v24 = (void *)(v23[7] + 72 * v16);
    *char v24 = v35;
    v24[1] = v36;
    v24[2] = v32;
    uint64_t v24[3] = v37;
    uint64_t v24[4] = v33;
    v24[5] = v10;
    v24[6] = v34;
    v24[7] = v8;
    v24[8] = v7;
    uint64_t v25 = v23[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_22;
    }
    ++v5;
    uint64_t v23[2] = v27;
    v6 += 10;
    a2 = 1;
    if (v30 == v5) {
      goto LABEL_18;
    }
  }
  sub_1B2B06EC8(v19, a2 & 1);
  uint64_t v21 = sub_1B29E5378(v13);
  if ((v20 & 1) != (v22 & 1)) {
    goto LABEL_23;
  }
  unint64_t v16 = v21;
  if ((v20 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v28 = (void *)swift_allocError();
  swift_willThrow();
  id v29 = v28;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

void sub_1B2B0DCA4(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v6 = 0;
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1B2E83858();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v9 = *(v7 - 1);
    uint64_t v8 = *v7;
    swift_bridgeObjectRetain();
    if (!v8) {
      goto LABEL_18;
    }
    uint64_t v10 = (void *)*a3;
    unint64_t v12 = sub_1B29DAE70();
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_21;
    }
    char v16 = v11;
    if (v10[3] < v15) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1B29A3EB4(&qword_1E9C3DE80);
      sub_1B2E833A8();
      if (v16) {
        goto LABEL_16;
      }
    }
LABEL_12:
    uint64_t v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(void *)(v19[6] + 8 * v12) = v9;
    *(void *)(v19[7] + 8 * v12) = v8;
    uint64_t v20 = v19[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_22;
    }
    ++v6;
    v19[2] = v22;
    v7 += 2;
    a2 = 1;
    if (v5 == v6) {
      goto LABEL_18;
    }
  }
  sub_1B2B07200(v15, a2 & 1);
  unint64_t v17 = sub_1B29DAE70();
  if ((v16 & 1) != (v18 & 1)) {
    goto LABEL_23;
  }
  unint64_t v12 = v17;
  if ((v16 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  unint64_t v23 = (void *)swift_allocError();
  swift_willThrow();
  id v24 = v23;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2E83418();
  __break(1u);
}

uint64_t (*sub_1B2B0DF70())()
{
  uint64_t v1 = sub_1B2B11E8C();
  uint64_t v2 = sub_1B2B11ED8((uint64_t)v1);
  *(void *)(v0 + 32) = sub_1B2B0E0EC(v2, v3);
  return sub_1B2B0DFBC;
}

uint64_t (*sub_1B2B0DFC0())()
{
  uint64_t v1 = sub_1B2B11E8C();
  uint64_t v2 = sub_1B2B11ED8((uint64_t)v1);
  *(void *)(v0 + 32) = sub_1B2B0E158(v2, v3);
  return sub_1B2B0DFBC;
}

uint64_t (*sub_1B2B0E00C())()
{
  uint64_t v1 = sub_1B2B11E8C();
  uint64_t v2 = (void *)sub_1B2B11ED8((uint64_t)v1);
  *(void *)(v0 + 32) = sub_1B2B0E1C8(v2, v3, v4);
  return sub_1B2B0DFBC;
}

uint64_t (*sub_1B2B0E058())()
{
  uint64_t v1 = sub_1B2B11E8C();
  uint64_t v2 = (void *)sub_1B2B11ED8((uint64_t)v1);
  *(void *)(v0 + 32) = sub_1B2B0E264(v2, v3, v4);
  return sub_1B2B0DFBC;
}

void sub_1B2B0E0A4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1B2B0E0EC(uint64_t a1, uint64_t a2))()
{
  uint64_t v6 = sub_1B2B12240(a1, a2);
  sub_1B2B47548(v6, v7, v8);
  if (v5) {
    uint64_t v9 = MEMORY[0x1B3EB1A20](v4, v3);
  }
  else {
    uint64_t v9 = swift_retain();
  }
  *uint64_t v2 = v9;
  return j_j__s20IntelligencePlatform17TrialAssetManagerC13RefreshPolicyOwxx;
}

uint64_t (*sub_1B2B0E158(uint64_t a1, uint64_t a2))()
{
  uint64_t v6 = sub_1B2B12240(a1, a2);
  sub_1B2B47548(v6, v7, v8);
  if (v5) {
    uint64_t v9 = MEMORY[0x1B3EB1A20](v4, v3);
  }
  else {
    uint64_t v9 = swift_retain();
  }
  *uint64_t v2 = v9;
  return j__s20IntelligencePlatform17TrialAssetManagerC13RefreshPolicyOwxx;
}

uint64_t (*sub_1B2B0E1C8(void *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v6 = a3 & 0xC000000000000001;
  sub_1B2B47548(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6) {
    id v7 = (id)MEMORY[0x1B3EB1A20](a2, a3);
  }
  else {
    id v7 = *(id *)(a3 + 8 * a2 + 32);
  }
  *a1 = v7;
  return sub_1B2B11A04;
}

uint64_t sub_1B2B0E248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2B1E548(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

void (*sub_1B2B0E264(void *a1, uint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v6 = a3 & 0xC000000000000001;
  sub_1B2B47548(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6) {
    id v7 = (id)MEMORY[0x1B3EB1A20](a2, a3);
  }
  else {
    id v7 = *(id *)(a3 + 8 * a2 + 32);
  }
  *a1 = v7;
  return sub_1B2B0E2E4;
}

void sub_1B2B0E2E4(id *a1)
{
}

unint64_t sub_1B2B0E2EC()
{
  unint64_t result = qword_1E9C3DB40;
  if (!qword_1E9C3DB40)
  {
    sub_1B29C3CA0(255, (unint64_t *)&qword_1EB7E2C40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DB40);
  }
  return result;
}

unint64_t sub_1B2B0E34C()
{
  unint64_t result = qword_1E9C3DB80;
  if (!qword_1E9C3DB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DB80);
  }
  return result;
}

unint64_t sub_1B2B0E398()
{
  unint64_t result = qword_1E9C3DB88;
  if (!qword_1E9C3DB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DB88);
  }
  return result;
}

unint64_t sub_1B2B0E3E4()
{
  unint64_t result = qword_1E9C3DB90;
  if (!qword_1E9C3DB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DB90);
  }
  return result;
}

unint64_t sub_1B2B0E430()
{
  unint64_t result = qword_1E9C3DB98;
  if (!qword_1E9C3DB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DB98);
  }
  return result;
}

unint64_t sub_1B2B0E47C()
{
  unint64_t result = qword_1E9C3DBA0;
  if (!qword_1E9C3DBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DBA0);
  }
  return result;
}

unint64_t sub_1B2B0E4C8()
{
  unint64_t result = qword_1E9C3DBA8;
  if (!qword_1E9C3DBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DBA8);
  }
  return result;
}

uint64_t sub_1B2B0E514(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(&qword_1E9C3CCC8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2B0E578()
{
  unint64_t result = qword_1E9C3DBE8;
  if (!qword_1E9C3DBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DBE8);
  }
  return result;
}

unint64_t sub_1B2B0E5C4()
{
  unint64_t result = qword_1E9C3DBF0;
  if (!qword_1E9C3DBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DBF0);
  }
  return result;
}

unint64_t sub_1B2B0E610()
{
  unint64_t result = qword_1E9C3DC00;
  if (!qword_1E9C3DC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DC00);
  }
  return result;
}

uint64_t type metadata accessor for EntityTaggingDirectFeedback()
{
  return self;
}

unint64_t sub_1B2B0E680()
{
  unint64_t result = qword_1E9C3DC20;
  if (!qword_1E9C3DC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DC20);
  }
  return result;
}

unint64_t sub_1B2B0E6CC()
{
  unint64_t result = qword_1E9C3DC28;
  if (!qword_1E9C3DC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DC28);
  }
  return result;
}

unint64_t sub_1B2B0E718()
{
  unint64_t result = qword_1E9C3DC30;
  if (!qword_1E9C3DC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DC30);
  }
  return result;
}

unint64_t sub_1B2B0E764()
{
  unint64_t result = qword_1E9C3DC40;
  if (!qword_1E9C3DC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DC40);
  }
  return result;
}

unint64_t sub_1B2B0E7B0()
{
  unint64_t result = qword_1E9C3DC48;
  if (!qword_1E9C3DC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DC48);
  }
  return result;
}

unint64_t sub_1B2B0E800()
{
  unint64_t result = qword_1E9C37388[0];
  if (!qword_1E9C37388[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C37388);
  }
  return result;
}

unint64_t sub_1B2B0E850()
{
  unint64_t result = qword_1E9C3DC50;
  if (!qword_1E9C3DC50)
  {
    sub_1B29C3588(&qword_1E9C3DC58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DC50);
  }
  return result;
}

uint64_t sub_1B2B0E8A4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_1B2B0E928(&qword_1E9C3DC60, a2, (void (*)(uint64_t))type metadata accessor for EntityTaggingStatefulFeedback);
  uint64_t result = sub_1B2B0E928(&qword_1E9C3B1E8, v3, (void (*)(uint64_t))type metadata accessor for EntityTaggingStatefulFeedback);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1B2B0E928(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2B0E974()
{
  unint64_t result = qword_1E9C3DC68;
  if (!qword_1E9C3DC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3DC68);
  }
  return result;
}

uint64_t sub_1B2B0E9C0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_1B2B0E928(&qword_1E9C3DC70, a2, (void (*)(uint64_t))type metadata accessor for EntityTaggingDirectFeedback);
  uint64_t result = sub_1B2B0E928(&qword_1E9C3B1C0, v3, (void (*)(uint64_t))type metadata accessor for EntityTaggingDirectFeedback);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1B2B0EA44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B2AFF3EC();
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PersonEntityTagType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE3)
  {
    if (a2 + 29 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 29) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 30;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1E;
  int v5 = v6 - 30;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for PersonEntityTagType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 29 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 29) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE2)
  {
    unsigned int v6 = ((a2 - 227) >> 8) + 1;
    *uint64_t result = a2 + 29;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2B0EBC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 29;
        break;
    }
  }
  return result;
}

void type metadata accessor for PersonEntityTagType()
{
}

uint64_t method lookup function for PersonEntityTaggingService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PersonEntityTaggingService);
}

uint64_t dispatch thunk of PersonEntityTaggingService.__allocating_init(etConfig:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void dispatch thunk of PersonEntityTaggingService.personEntityTags(for:options:)()
{
  sub_1B299B9B8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2B11A08;
  sub_1B2AE7108();
  sub_1B2B126C0();
  __asm { BRAA            X4, X16 }
}

uint64_t dispatch thunk of PersonEntityTaggingService.peopleEntityTags(for:options:)()
{
  sub_1B299B9B8();
  sub_1B29A08D4();
  sub_1B29A19C8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2B11A08;
  uint64_t v3 = sub_1B2B11A38();
  return v4(v3);
}

uint64_t dispatch thunk of PersonEntityTaggingService.entitiesForTag(gdEntityTagType:options:)()
{
  sub_1B299B9B8();
  sub_1B29A08D4();
  sub_1B29A19C8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2B11A08;
  uint64_t v3 = sub_1B2B11A38();
  return v4(v3);
}

uint64_t dispatch thunk of PersonEntityTaggingService.personEntities(for:options:)()
{
  sub_1B299B9B8();
  sub_1B29A08D4();
  sub_1B29A19C8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2B11A08;
  uint64_t v3 = sub_1B2B11A38();
  return v4(v3);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  sub_1B299B9B8();
  sub_1B29A08D4();
  sub_1B29A19C8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1B299B4A8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B2B11A08;
  uint64_t v3 = sub_1B2B11A38();
  return v4(v3);
}