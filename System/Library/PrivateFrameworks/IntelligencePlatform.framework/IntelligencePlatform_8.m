uint64_t sub_1B2D9F814(char a1)
{
  uint64_t result;

  result = 0x7463656A627573;
  switch(a1)
  {
    case 1:
      result = 0x696C617574786574;
      break;
    case 2:
      result = 0x6D69747472617473;
      break;
    case 3:
      result = 0x656D6974646E65;
      break;
    case 4:
      result = 0x7365697469746E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2D9F8D0()
{
  return sub_1B2D9F814(*v0);
}

uint64_t sub_1B2D9F8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D9F5D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2D9F900(uint64_t a1)
{
  unint64_t v2 = sub_1B2DA0320();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D9F93C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DA0320();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SemanticSearchItem.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C43D78);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2DA0320();
  sub_1B2E83A38();
  sub_1B2E836F8();
  if (!v1)
  {
    sub_1B2DA0A3C();
    sub_1B2DA0A3C();
    sub_1B2DA0A3C();
    sub_1B2DA0A3C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t SemanticSearchItem.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C43D88);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2DA0320();
  sub_1B2E83A18();
  if (!v2)
  {
    uint64_t v6 = sub_1B2E835D8();
    uint64_t v7 = sub_1B2DA0A58();
    uint64_t v10 = v9;
    uint64_t v26 = v7;
    uint64_t v27 = v6;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1B2DA0A58();
    uint64_t v13 = v12;
    uint64_t v24 = v11;
    v25 = a2;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B2DA0A58();
    uint64_t v16 = v15;
    uint64_t v23 = v14;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1B2DA0A58();
    uint64_t v19 = v18;
    uint64_t v22 = v17;
    uint64_t v20 = sub_1B29A340C();
    v21(v20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t *v25 = v27;
    v25[1] = v26;
    v25[2] = v10;
    v25[3] = v24;
    v25[4] = v13;
    v25[5] = v23;
    v25[6] = v16;
    v25[7] = v22;
    v25[8] = v19;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D9FDFC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SemanticSearchItem.init(from:)(a1, a2);
}

uint64_t sub_1B2D9FE14(void *a1)
{
  return SemanticSearchItem.encode(to:)(a1);
}

uint64_t sub_1B2D9FE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2DA09A4();

  return MEMORY[0x1F411AC60](a1, a2, a3, v6);
}

uint64_t sub_1B2D9FE94()
{
  sub_1B2DA0958();

  return sub_1B2E80FD8();
}

uint64_t sub_1B2D9FEF8()
{
  return sub_1B2E80FC8();
}

uint64_t sub_1B2D9FF40()
{
  return sub_1B2E80FB8();
}

uint64_t sub_1B2D9FF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2DA090C();

  return MEMORY[0x1F411ABF8](a1, a2, a3, v6);
}

uint64_t sub_1B2D9FFDC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(a1, sel_viewArtifactTableName);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1B2E82378();
    unint64_t v12 = v11;
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    unint64_t v12 = 0x80000001B2EA3540;
    uint64_t v10 = 0xD000000000000017;
  }
  uint64_t result = swift_unknownObjectRelease();
  *a4 = a1;
  a4[1] = v10;
  a4[2] = v12;
  a4[3] = a2;
  a4[4] = a3;
  return result;
}

uint64_t sub_1B2DA00A4@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C43DD8);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C43DE0);
  sub_1B299D278();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1B299E4A0();
  uint64_t v16 = v15 - v14;
  swift_bridgeObjectRetain();
  sub_1B2E814F8();
  v23[6] = a1;
  v22[3] = sub_1B2E81508();
  v22[4] = MEMORY[0x1E4F62E90];
  sub_1B29D1C70(v22);
  sub_1B2E81518();
  v23[3] = sub_1B2E80BE8();
  v23[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v23);
  sub_1B29A3EB4(&qword_1E9C43DE8);
  sub_1B29D22C4(&qword_1E9C43DF0, &qword_1E9C43DE8);
  sub_1B2E82648();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v22);
  sub_1B2E81498();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v23);
  sub_1B29D22C4(&qword_1E9C43DF8, &qword_1E9C43DD8);
  sub_1B2DA09F0();
  uint64_t v17 = v3;
  uint64_t v18 = sub_1B2E809F8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v17);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  if (!v21) {
    *a2 = v18;
  }
  return result;
}

unint64_t sub_1B2DA0320()
{
  unint64_t result = qword_1E9C43D80;
  if (!qword_1E9C43D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43D80);
  }
  return result;
}

unint64_t sub_1B2DA0370()
{
  unint64_t result = qword_1E9C43D90;
  if (!qword_1E9C43D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43D90);
  }
  return result;
}

unint64_t sub_1B2DA03C0()
{
  unint64_t result = qword_1E9C43D98;
  if (!qword_1E9C43D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43D98);
  }
  return result;
}

unint64_t sub_1B2DA0410()
{
  unint64_t result = qword_1E9C43DA0;
  if (!qword_1E9C43DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43DA0);
  }
  return result;
}

uint64_t destroy for SemanticSearchItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SemanticSearchItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SemanticSearchItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SemanticSearchItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SemanticSearchItem(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 72))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SemanticSearchItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SemanticSearchItem()
{
  return &type metadata for SemanticSearchItem;
}

ValueMetadata *type metadata accessor for ViewService.SemanticSearchView()
{
  return &type metadata for ViewService.SemanticSearchView;
}

unsigned char *storeEnumTagSinglePayload for SemanticSearchItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DA07E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SemanticSearchItem.CodingKeys()
{
  return &type metadata for SemanticSearchItem.CodingKeys;
}

unint64_t sub_1B2DA0820()
{
  unint64_t result = qword_1E9C43DA8;
  if (!qword_1E9C43DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43DA8);
  }
  return result;
}

unint64_t sub_1B2DA0870()
{
  unint64_t result = qword_1E9C43DB0;
  if (!qword_1E9C43DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43DB0);
  }
  return result;
}

unint64_t sub_1B2DA08C0()
{
  unint64_t result = qword_1E9C43DB8;
  if (!qword_1E9C43DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43DB8);
  }
  return result;
}

unint64_t sub_1B2DA090C()
{
  unint64_t result = qword_1E9C43DC0;
  if (!qword_1E9C43DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43DC0);
  }
  return result;
}

unint64_t sub_1B2DA0958()
{
  unint64_t result = qword_1E9C43DC8;
  if (!qword_1E9C43DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43DC8);
  }
  return result;
}

unint64_t sub_1B2DA09A4()
{
  unint64_t result = qword_1E9C43DD0;
  if (!qword_1E9C43DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43DD0);
  }
  return result;
}

unint64_t sub_1B2DA09F0()
{
  unint64_t result = qword_1E9C43E00;
  if (!qword_1E9C43E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43E00);
  }
  return result;
}

uint64_t sub_1B2DA0A3C()
{
  return sub_1B2E83628();
}

uint64_t sub_1B2DA0A58()
{
  return sub_1B2E83508();
}

uint64_t sub_1B2DA0A74(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  v37 = a1;
  uint64_t v38 = a2;
  v34[1] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B299D31C();
  uint64_t v35 = v7;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v34 - v9;
  sub_1B2E82F38();
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v34 - v12;
  sub_1B299D31C();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  sub_1B299D31C();
  uint64_t v36 = v21;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)v34 - v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v19, v39, a3);
  v39 = v24;
  sub_1B2E82668();
  uint64_t v25 = v20;
  swift_getAssociatedConformanceWitness();
  uint64_t v26 = (void (**)(char *, char *, uint64_t))(v35 + 32);
  do
  {
    sub_1B2E82FA8();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, AssociatedTypeWitness) == 1)break; {
    (*v26)(v10, v13, AssociatedTypeWitness);
    }
    char v27 = v37(v10);
    if (v4)
    {
      uint64_t v31 = sub_1B2DA1414();
      v32(v31);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v39, v25);
    }
    char v28 = v27;
    uint64_t v29 = sub_1B2DA1414();
    v30(v29);
  }
  while ((v28 & 1) != 0);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v39, v25);
}

uint64_t sub_1B2DA0D28(uint64_t (*a1)(uint64_t *, void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v57 = a6;
  uint64_t v58 = a7;
  uint64_t v63 = a5;
  v54 = a1;
  uint64_t v55 = a2;
  sub_1B299D31C();
  uint64_t v52 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1B299E4A0();
  uint64_t v14 = v13 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v61 = sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v51 = v15;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  v60 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t *)((char *)&v50 - v19);
  sub_1B299D31C();
  uint64_t v22 = v21;
  MEMORY[0x1F4188790](v23);
  sub_1B299E4A0();
  uint64_t v26 = v25 - v24;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B299D31C();
  uint64_t v53 = v28;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v50 - v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v65, a3);
  v64 = v31;
  sub_1B2E82668();
  uint64_t v56 = a3;
  uint64_t v65 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v32 = (void (**)(uint64_t *, char *, uint64_t))(v51 + 32);
  v33 = (uint64_t (**)(uint64_t, char *, uint64_t))(v52 + 32);
  while (1)
  {
    v34 = v60;
    sub_1B2E82FA8();
    (*v32)(v20, v34, v61);
    uint64_t v35 = TupleTypeMetadata2;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v20, 1, TupleTypeMetadata2) == 1)
    {
LABEL_5:
      uint64_t v43 = sub_1B29A3420();
      return v44(v43);
    }
    uint64_t v36 = (char *)v20 + *(int *)(v35 + 48);
    uint64_t v66 = *v20;
    uint64_t v37 = (*v33)(v14, v36, a4);
    MEMORY[0x1F4188790](v37);
    *(&v50 - 6) = v56;
    *(&v50 - 5) = a4;
    uint64_t v38 = v57;
    *(&v50 - 4) = v63;
    *(&v50 - 3) = v38;
    *(&v50 - 2) = v58;
    *(&v50 - 1) = v14;
    char v39 = v54(&v66, sub_1B2DA13F0);
    if (v7) {
      break;
    }
    char v40 = v39;
    uint64_t v41 = sub_1B29A22FC();
    v42(v41);
    if ((v40 & 1) == 0) {
      goto LABEL_5;
    }
  }
  uint64_t v46 = sub_1B29A3420();
  v47(v46);
  uint64_t v48 = sub_1B29A22FC();
  return v49(v48);
}

uint64_t sub_1B2DA10A0(uint64_t (*a1)(char *), uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v33 = a3;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  v28[1] = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)v28 - v10;
  uint64_t v12 = sub_1B2E82F38();
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)v28 - v14;
  uint64_t v16 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)v28 - v20;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v33, a5);
  v33 = v21;
  sub_1B2E82668();
  uint64_t v22 = v19;
  swift_getAssociatedConformanceWitness();
  uint64_t v23 = (void (**)(char *, char *, uint64_t))(v29 + 32);
  uint64_t v24 = (void (**)(char *, uint64_t))(v29 + 8);
  do
  {
    sub_1B2E82FA8();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v15, 1, AssociatedTypeWitness) == 1)break; {
    (*v23)(v11, v15, AssociatedTypeWitness);
    }
    char v25 = v31(v11);
    if (v7)
    {
      (*v24)(v11, AssociatedTypeWitness);
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v33, v22);
    }
    char v26 = v25;
    (*v24)(v11, AssociatedTypeWitness);
  }
  while ((v26 & 1) != 0);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v33, v22);
}

uint64_t sub_1B2DA13F0(uint64_t (*a1)(char *), uint64_t a2)
{
  return sub_1B2DA10A0(a1, a2, *(char **)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1B2DA1414()
{
  return v0;
}

uint64_t *Sequence<>.bufferToContext()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Sequence<>.bufferToDictionaryGroupedBySubject()(a1, a2, a3);
  swift_getAssociatedTypeWitness();
  sub_1B2E82968();
  sub_1B2A4B170();
  uint64_t v3 = sub_1B2E821C8();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v4 = TripleProviderProtocol.context()(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t Sequence<>.bufferToDictionaryGroupedBySubject()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(&v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v3, a1);
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  sub_1B2A4B170();
  return sub_1B2E82198();
}

uint64_t sub_1B2DA1630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return v5(AssociatedTypeWitness, a4);
}

uint64_t sub_1B2DA16B0(uint64_t a1)
{
  return sub_1B2DA1630(a1, v1[2], v1[3], v1[4]);
}

uint64_t *Sequence<>.bufferToContext<A>(objectMapping:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  Sequence<>.bufferToDictionaryGroupedBySubject()(a2, a4, a6);
  swift_getAssociatedTypeWitness();
  sub_1B2E82968();
  sub_1B2A4B170();
  uint64_t v8 = sub_1B2E821C8();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v9 = TripleProviderProtocol.context<A>(objectMapping:)(a1, v8, a3);
  swift_bridgeObjectRelease();
  return v9;
}

void static LogSignpost.begin(logger:_:)()
{
  sub_1B299B720();
  uint64_t v40 = v2;
  uint64_t v38 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v39 = v8;
  uint64_t v36 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v10 = v9;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v12);
  sub_1B2DA398C();
  uint64_t v13 = sub_1B2E81FB8();
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v19 = v18 - v17;
  uint64_t v37 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22);
  sub_1B299B0C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v19, v5, v13);
  uint64_t v23 = v1;
  uint64_t v24 = v40;
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  char v25 = sub_1B2E81F28();
  os_signpost_type_t v26 = sub_1B2E82E68();
  if ((sub_1B2E82F28() & 1) == 0) {
    goto LABEL_10;
  }
  if ((v39 & 1) == 0)
  {
    char v27 = v38;
    if (v38)
    {
      uint64_t v28 = v23;
LABEL_9:
      uint64_t v31 = (uint8_t *)sub_1B299B8CC();
      *(_WORD *)uint64_t v31 = 0;
      os_signpost_id_t v32 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v25, v26, v32, v27, "", v31, 2u);
      uint64_t v23 = v28;
      sub_1B299B750();
      uint64_t v24 = v40;
LABEL_10:

      sub_1B29A080C();
      v33();
      sub_1B2E81F78();
      swift_allocObject();
      uint64_t v34 = sub_1B2E81F68();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v23, v36);
      *(void *)uint64_t v7 = v38;
      *(void *)(v7 + 8) = v24;
      *(unsigned char *)(v7 + 16) = v39;
      *(void *)(v7 + 24) = v34;
      uint64_t v35 = type metadata accessor for LogSignpost();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v7 + *(int *)(v35 + 24), v0, v37);
      sub_1B299B738();
      return;
    }
    __break(1u);
    goto LABEL_12;
  }
  if ((unint64_t)v38 >> 32)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1B2DA3914();
  if (!v29)
  {
    sub_1B2DA3908();
    if (!(!v29 & v30))
    {
      uint64_t v28 = v23;
      char v27 = (const char *)&v41;
      goto LABEL_9;
    }
    goto LABEL_13;
  }
LABEL_14:
  __break(1u);
}

void withThrowingSignpost<A>(_:closure:)(const char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v47 = a5;
  uint64_t v48 = a1;
  uint64_t v45 = a2;
  uint64_t v46 = a6;
  int v49 = a3;
  sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v43 = v11;
  uint64_t v44 = v10;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v12);
  sub_1B2DA398C();
  uint64_t v13 = sub_1B2E81FB8();
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v19 = v18 - v17;
  sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v41 = v21;
  uint64_t v42 = v20;
  MEMORY[0x1F4188790](v20);
  sub_1B2DA38EC();
  uint64_t v40 = type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1B29A4B98(v13, (uint64_t)qword_1EB7E6600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v19, v25, v13);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  os_signpost_type_t v26 = sub_1B2E81F28();
  os_signpost_type_t v27 = sub_1B2E82E68();
  if ((sub_1B2E82F28() & 1) == 0) {
    goto LABEL_12;
  }
  v39[0] = a4;
  v39[1] = v6;
  if ((v49 & 1) == 0)
  {
    if (v48)
    {
      uint64_t v28 = v48;
LABEL_11:
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      os_signpost_id_t v32 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v26, v27, v32, v28, "", v31, 2u);
      MEMORY[0x1B3EB30C0](v31, -1, -1);
      a4 = (void (*)(uint64_t))v39[0];
LABEL_12:

      uint64_t v34 = v43;
      uint64_t v33 = v44;
      sub_1B29A080C();
      v35();
      sub_1B2E81F78();
      swift_allocObject();
      uint64_t v36 = sub_1B2E81F68();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v8, v33);
      uint64_t v37 = v45;
      *(void *)uint64_t v24 = v48;
      *((void *)v24 + 1) = v37;
      v24[16] = v49;
      *((void *)v24 + 3) = v36;
      uint64_t v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 32))(&v24[*(int *)(v40 + 24)], v7, v42);
      a4(v38);
      sub_1B2DA31F8();
      sub_1B2A93478((uint64_t)v24);
      return;
    }
    __break(1u);
    goto LABEL_14;
  }
  if ((unint64_t)v48 >> 32)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1B2DA3914();
  if (!v29)
  {
    sub_1B2DA3908();
    if (!(!v29 & v30))
    {
      uint64_t v28 = &v50;
      goto LABEL_11;
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
}

Swift::Void __swiftcall LogSignpost.end()()
{
  sub_1B299B720();
  sub_1B2E81F48();
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B29A49E8(v2, v18);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B2DA38C4();
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299B1BC();
  sub_1B29A080C();
  v5();
  sub_1B2DA3944();
  uint64_t v6 = (void *)sub_1B2E81F28();
  sub_1B2E81F58();
  os_signpost_type_t v19 = sub_1B2E82E58();
  if ((sub_1B2E82F28() & 1) == 0)
  {
LABEL_11:
    swift_release();

    sub_1B29A08B0();
    v15();
    uint64_t v16 = sub_1B299B7C0();
    v17(v16);
    sub_1B299B738();
    return;
  }
  if ((v0 & 1) == 0)
  {
    if (v20) {
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (HIDWORD(v20))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1B2DA3914();
  if (!v7)
  {
    sub_1B2DA3908();
    if (!(!v7 & v8))
    {
LABEL_8:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      uint64_t v9 = sub_1B2999A4C();
      if (v10(v9) != *MEMORY[0x1E4FBD340])
      {
        uint64_t v11 = sub_1B2AD0DC4();
        v12(v11);
      }
      *(_WORD *)sub_1B299B8CC() = 0;
      os_signpost_id_t v13 = sub_1B2E81EE8();
      sub_1B2DA3968(&dword_1B2996000, v14, v19, v13);
      sub_1B299B750();
      goto LABEL_11;
    }
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
}

void LogSignpost.end(message:)()
{
  sub_1B299B720();
  v54 = v2;
  sub_1B2E81F48();
  sub_1B299D278();
  uint64_t v49 = v4;
  uint64_t v50 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v48 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v7 = v6;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v51 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v40 - v11;
  uint64_t v13 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B2DA38EC();
  type metadata accessor for LogSignpost();
  sub_1B29A080C();
  v17();
  uint64_t v18 = *(const char **)v0;
  char v19 = *(unsigned char *)(v0 + 16);
  uint64_t v20 = *(void *)(v0 + 24);
  swift_retain();
  uint64_t v21 = sub_1B2E81F28();
  sub_1B2E81F58();
  int v47 = sub_1B2E82E58();
  unint64_t v52 = sub_1B2E81EC8();
  if ((sub_1B2E82F28() & 1) == 0)
  {
    swift_release();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v53);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v13);
LABEL_30:
    sub_1B299B738();
    return;
  }
  uint64_t v41 = v1;
  os_log_t v42 = v21;
  uint64_t v45 = v7;
  uint64_t v46 = v20;
  uint64_t v43 = v15;
  uint64_t v44 = v13;
  if (v19)
  {
    if ((unint64_t)v18 >> 32)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >> 11 == 27)
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    uint64_t v22 = v45;
    if (v18 >> 16 > 0x10)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v18 = (const char *)&v58;
  }
  else
  {
    if (!v18)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v22 = v45;
  }
  uint64_t v23 = *((void *)v54 + 2);
  uint64_t v24 = (char *)*((void *)v54 + 5);
  uint64_t v25 = *((void *)v54 + 6);
  swift_retain();
  os_signpost_type_t v26 = v48;
  sub_1B2E81F88();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v49 + 88))(v26, v50) == *MEMORY[0x1E4FBD340])
  {
    sub_1B29A080C();
    v27();
    if ((v52 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (!HIDWORD(v52))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      if (!v25)
      {
        uint64_t v28 = 0;
        goto LABEL_17;
      }
      if ((unint64_t)(v25 - 0x1000000000000000) >> 61 == 7)
      {
        uint64_t v28 = swift_slowAlloc();
LABEL_17:
        uint64_t v51 = v24;
        v40[1] = v25;
        if (!v24)
        {
          uint64_t v29 = 0;
          goto LABEL_21;
        }
        if ((unint64_t)(v24 - 0x400000000000000) >> 59 == 31)
        {
          uint64_t v29 = swift_slowAlloc();
LABEL_21:
          uint64_t v59 = v23;
          uint64_t v55 = v29;
          uint64_t v56 = v28;
          char v30 = v54;
          *(_WORD *)v54 = 0;
          uint64_t v57 = v30 + 2;
          uint64_t v31 = *(void *)(v23 + 16);
          if (v31)
          {
            swift_bridgeObjectRetain();
            uint64_t v32 = v23 + 40;
            do
            {
              uint64_t v33 = *(void (**)(uint8_t **, uint64_t *, uint64_t *))(v32 - 8);
              swift_retain();
              v33(&v57, &v56, &v55);
              swift_release();
              v32 += 16;
              --v31;
            }
            while (v31);
            sub_1B2AE7030((uint64_t)&v59);
            uint64_t v22 = v45;
          }
          os_signpost_id_t v34 = sub_1B2E81EE8();
          os_log_t v35 = v42;
          _os_signpost_emit_with_name_impl(&dword_1B2996000, v42, (os_signpost_type_t)v47, v34, v18, "[Error] Interval already ended", v54, v52);
          uint64_t v36 = *(void (**)(void))(v22 + 8);
          sub_1B29A08B0();
          v36();
          if (v28)
          {
            sub_1B29A3EB4(&qword_1EB7E3110);
            swift_arrayDestroy();
            sub_1B299B750();
          }
          uint64_t v38 = v43;
          uint64_t v37 = v44;
          uint64_t v39 = v41;
          if (v29)
          {
            swift_arrayDestroy();
            sub_1B299B750();
          }
          sub_1B299B750();
          swift_release();

          sub_1B29A08B0();
          v36();
          (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v37);
          goto LABEL_30;
        }
        goto LABEL_34;
      }
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_39:
  __break(1u);
}

void static LogSignpost.emit(_:_:_:)()
{
  sub_1B299B720();
  uint64_t v2 = v1;
  int v45 = v3;
  unint64_t v44 = v4;
  uint64_t v6 = v5;
  uint64_t v46 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B2DA38A4(v10, v43);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = sub_1B2E81FB8();
  sub_1B299D278();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  sub_1B299E4A0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v24);
  sub_1B299B0C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v20, v6, v14);
  sub_1B2E81F18();
  sub_1B2E81EF8();
  uint64_t v25 = (void *)sub_1B2E81F28();
  sub_1B2E82E78();
  unint64_t v26 = sub_1B2E81EC8();
  if ((sub_1B2E82F28() & 1) == 0)
  {

    sub_1B29A08B0();
    v27();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0, v21);
    sub_1B299B738();
    return;
  }
  uint64_t v28 = v43;
  unint64_t v29 = v44;
  uint64_t v30 = v46;
  if ((v45 & 1) == 0)
  {
    if (v44) {
      goto LABEL_9;
    }
    __break(1u);
  }
  if (HIDWORD(v29))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1B2DA3914();
  if (!v31)
  {
    sub_1B2DA3908();
    if (!v31 & v32)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
LABEL_9:
    uint64_t v33 = *(void *)(v2 + 16);
    char v34 = *(unsigned char *)(v2 + 24);
    char v35 = *(unsigned char *)(v2 + 25);
    uint64_t v37 = *(void *)(v2 + 40);
    uint64_t v36 = *(void *)(v2 + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v28, v13, v30);
    if ((v26 & 0x8000000000000000) == 0)
    {
      if (HIDWORD(v26))
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      uint64_t v38 = (unsigned char *)swift_slowAlloc();
      if (v36)
      {
        if ((unint64_t)(v36 - 0x1000000000000000) >> 61 != 7)
        {
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
        uint64_t v36 = swift_slowAlloc();
      }
      if (v37)
      {
        if ((unint64_t)(v37 - 0x400000000000000) >> 59 != 31)
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        uint64_t v39 = swift_slowAlloc();
      }
      else
      {
        uint64_t v39 = 0;
      }
      uint64_t v47 = v39;
      uint64_t v48 = v36;
      *uint64_t v38 = v34;
      v38[1] = v35;
      uint64_t v49 = v38 + 2;
      uint64_t v50 = v33;
      uint64_t v40 = *(void *)(v33 + 16);
      if (v40)
      {
        swift_bridgeObjectRetain();
        uint64_t v41 = v33 + 40;
        do
        {
          os_log_t v42 = *(void (**)(unsigned char **, uint64_t *, uint64_t *))(v41 - 8);
          swift_retain();
          v42(&v49, &v48, &v47);
          swift_release();
          v41 += 16;
          --v40;
        }
        while (v40);
        sub_1B2AE7030((uint64_t)&v50);
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_24;
  }
LABEL_29:
  __break(1u);
}

void withSignpost<A>(_:closure:)()
{
  sub_1B299B720();
  uint64_t v45 = v1;
  uint64_t v46 = v0;
  int v3 = v2;
  uint64_t v43 = v4;
  uint64_t v44 = v5;
  int v47 = v6;
  uint64_t v42 = sub_1B2E81F08();
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B2DA38A4(v8, v38);
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_1B2E81FB8();
  sub_1B299D278();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  sub_1B299E4A0();
  uint64_t v21 = v20 - v19;
  uint64_t v40 = type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1B29A4B98(v10, (uint64_t)qword_1EB7E6600);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v25, v10);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  unint64_t v26 = sub_1B2E81F28();
  os_signpost_type_t v27 = sub_1B2E82E68();
  if ((sub_1B2E82F28() & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v39 = v3;
  if ((v47 & 1) == 0)
  {
    if (v46)
    {
      uint64_t v28 = v46;
LABEL_11:
      char v31 = (uint8_t *)sub_1B299B8CC();
      *(_WORD *)char v31 = 0;
      os_signpost_id_t v32 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v26, v27, v32, v28, "", v31, 2u);
      sub_1B299B750();
      int v3 = v39;
LABEL_12:

      sub_1B29A080C();
      v33();
      sub_1B2E81F78();
      swift_allocObject();
      uint64_t v34 = sub_1B2E81F68();
      sub_1B29A08B0();
      v35();
      uint64_t v36 = v43;
      *(void *)uint64_t v24 = v46;
      *((void *)v24 + 1) = v36;
      v24[16] = v47;
      *((void *)v24 + 3) = v34;
      uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 32))(&v24[*(int *)(v40 + 24)], v21, v41);
      v3(v37);
      sub_1B2DA31F8();
      sub_1B2A93478((uint64_t)v24);
      sub_1B299B738();
      return;
    }
    __break(1u);
    goto LABEL_14;
  }
  if ((unint64_t)v46 >> 32)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1B2DA3914();
  if (!v29)
  {
    sub_1B2DA3908();
    if (!(!v29 & v30))
    {
      uint64_t v28 = (const char *)&v48;
      goto LABEL_11;
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
}

uint64_t withThrowingSignpostAsync<A>(_:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = a6;
  *(unsigned char *)(v6 + 176) = a4;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a3;
  *(void *)(v6 + 24) = a1;
  uint64_t v7 = sub_1B2E81F08();
  *(void *)(v6 + 64) = v7;
  sub_1B299D2A8(v7);
  *(void *)(v6 + 72) = v8;
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  uint64_t v9 = sub_1B2E81FB8();
  *(void *)(v6 + 96) = v9;
  sub_1B299D2A8(v9);
  *(void *)(v6 + 104) = v10;
  *(void *)(v6 + 112) = swift_task_alloc();
  uint64_t v11 = sub_1B2E81F38();
  *(void *)(v6 + 120) = v11;
  sub_1B299D2A8(v11);
  *(void *)(v6 + 128) = v12;
  *(void *)(v6 + 136) = swift_task_alloc();
  *(void *)(v6 + 144) = type metadata accessor for LogSignpost();
  *(void *)(v6 + 152) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B2DA2CD0, 0, 0);
}

uint64_t sub_1B2DA2CD0()
{
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = sub_1B29A4B98(v3, (uint64_t)qword_1EB7E6600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v5 = sub_1B2E81F28();
  os_signpost_type_t v6 = sub_1B2E82E68();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v8 = *(const char **)(v0 + 32);
  if (*(unsigned char *)(v0 + 176))
  {
LABEL_7:
    if ((unint64_t)v8 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v8 >> 11 == 27)
      {
LABEL_17:
        __break(1u);
        return result;
      }
      if (v8 >> 16 <= 0x10)
      {
        uint64_t v8 = (const char *)(v0 + 16);
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  if (!v8)
  {
    __break(1u);
    goto LABEL_7;
  }
LABEL_11:
  uint64_t v9 = (uint8_t *)sub_1B299B8CC();
  *(_WORD *)uint64_t v9 = 0;
  os_signpost_id_t v10 = sub_1B2E81EE8();
  _os_signpost_emit_with_name_impl(&dword_1B2996000, v5, v6, v10, v8, "", v9, 2u);
  sub_1B299B750();
LABEL_12:

  uint64_t v11 = *(void *)(v0 + 152);
  uint64_t v12 = *(void *)(v0 + 128);
  uint64_t v25 = *(void *)(v0 + 120);
  uint64_t v26 = *(void *)(v0 + 136);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v15 = *(void *)(v0 + 64);
  uint64_t v14 = *(void *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 40);
  uint64_t v23 = *(void *)(v0 + 144);
  uint64_t v24 = *(int **)(v0 + 48);
  char v17 = *(unsigned char *)(v0 + 176);
  uint64_t v18 = *(void *)(v0 + 32);
  sub_1B29A080C();
  v19();
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v20 = sub_1B2E81F68();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  *(void *)uint64_t v11 = v18;
  *(void *)(v11 + 8) = v16;
  *(unsigned char *)(v11 + 16) = v17;
  *(void *)(v11 + 24) = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v11 + *(int *)(v23 + 24), v26, v25);
  os_signpost_type_t v27 = (uint64_t (*)(uint64_t))((char *)v24 + *v24);
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_1B2DA2FA4;
  uint64_t v22 = *(void *)(v0 + 24);
  return v27(v22);
}

uint64_t sub_1B2DA2FA4()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1B2DA3158;
  }
  else {
    uint64_t v2 = sub_1B2DA30B8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1B2DA30B8()
{
  sub_1B2DA3920();
  sub_1B2A93478(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_1B2DA3158()
{
  sub_1B2DA3920();
  sub_1B2A93478(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

void sub_1B2DA31F8()
{
  sub_1B299B720();
  sub_1B2E81F48();
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B29A49E8(v2, v18);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B2DA38C4();
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299B1BC();
  sub_1B29A080C();
  v5();
  sub_1B2DA3944();
  os_signpost_type_t v6 = (void *)sub_1B2E81F28();
  sub_1B2E81F58();
  os_signpost_type_t v19 = sub_1B2E82E58();
  if ((sub_1B2E82F28() & 1) == 0)
  {
LABEL_11:
    swift_release();

    sub_1B29A08B0();
    v15();
    uint64_t v16 = sub_1B299B7C0();
    v17(v16);
    sub_1B299B738();
    return;
  }
  if ((v0 & 1) == 0)
  {
    if (v20) {
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (HIDWORD(v20))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1B2DA3914();
  if (!v7)
  {
    sub_1B2DA3908();
    if (!(!v7 & v8))
    {
LABEL_8:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      uint64_t v9 = sub_1B2999A4C();
      if (v10(v9) != *MEMORY[0x1E4FBD340])
      {
        uint64_t v11 = sub_1B2AD0DC4();
        v12(v11);
      }
      *(_WORD *)sub_1B299B8CC() = 0;
      os_signpost_id_t v13 = sub_1B2E81EE8();
      sub_1B2DA3968(&dword_1B2996000, v14, v19, v13);
      sub_1B299B750();
      goto LABEL_11;
    }
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
}

void *initializeBufferWithCopyOfBuffer for LogSignpost(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_1B2E81F38();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_retain();
    v9(v6, v7, v8);
  }
  return v3;
}

uint64_t assignWithCopy for LogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1B2E81F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for LogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1B2E81F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for LogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1B2E81F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1B2DA36F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1B2E81F38();
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1B2DA3780(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1B2E81F38();
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1B2DA3800()
{
  uint64_t result = sub_1B2E81F38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1B2DA38A4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1B2DA38C4()
{
  return sub_1B2E81F38();
}

uint64_t sub_1B2DA38EC()
{
  return 0;
}

void sub_1B2DA3920()
{
  sub_1B2DA31F8();
}

uint64_t sub_1B2DA3944()
{
  *(void *)(v1 - 96) = *v0;
  return swift_retain();
}

void sub_1B2DA3968(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4)
{
  uint64_t v9 = *(const char **)(v7 - 96);
  _os_signpost_emit_with_name_impl(a1, v6, a3, a4, v9, v4, v5, 2u);
}

uint64_t sub_1B2DA398C()
{
  return 0;
}

uint64_t sub_1B2DA39A0()
{
  sub_1B29A2314();
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C43E20);
  uint64_t v4 = sub_1B299B0F0(v3);
  MEMORY[0x1F4188790](v4);
  sub_1B299E114();
  sub_1B29A544C();
  uint64_t result = sub_1B299FC74();
  if (!v0)
  {
    sub_1B29A0FB0();
    MEMORY[0x1F4188790](v6);
    sub_1B29A3438();
    sub_1B2B867E4((void (*)(void))sub_1B2DA5954, 1, v2);
    uint64_t v7 = sub_1B29A3EB4(&qword_1E9C3EF60);
    sub_1B2DA5A3C(v7);
    if (v8)
    {
      swift_bridgeObjectRelease();
      sub_1B29C4148(v2, &qword_1E9C43E20);
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
        swift_willThrowTypedImpl();
        return swift_bridgeObjectRelease();
      }
      sub_1B2DA59C4(v2, v1, (void (*)(void))type metadata accessor for CustomGraphPerson);
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = type metadata accessor for CustomGraphPerson(0);
    return sub_1B2DA5A64(v10);
  }
  return result;
}

uint64_t sub_1B2DA3B0C()
{
  sub_1B29A2314();
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3EC48);
  uint64_t v4 = sub_1B299B0F0(v3);
  MEMORY[0x1F4188790](v4);
  sub_1B299E114();
  sub_1B29A544C();
  uint64_t result = sub_1B299FC74();
  if (!v0)
  {
    sub_1B29A0FB0();
    MEMORY[0x1F4188790](v6);
    sub_1B29A3438();
    sub_1B2B86820((void (*)(void))sub_1B2DA59A8, 1, v2);
    uint64_t v7 = sub_1B29A3EB4(&qword_1E9C3A368);
    sub_1B2DA5A3C(v7);
    if (v8)
    {
      swift_bridgeObjectRelease();
      sub_1B29C4148(v2, &qword_1E9C3EC48);
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
        swift_willThrowTypedImpl();
        return swift_bridgeObjectRelease();
      }
      sub_1B2DA59C4(v2, v1, (void (*)(void))type metadata accessor for CustomGraphSongEvent);
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = type metadata accessor for CustomGraphSongEvent(0);
    return sub_1B2DA5A64(v10);
  }
  return result;
}

uint64_t sub_1B2DA3C78()
{
  sub_1B29A2314();
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3EC40);
  uint64_t v4 = sub_1B299B0F0(v3);
  MEMORY[0x1F4188790](v4);
  sub_1B299E114();
  sub_1B29A544C();
  uint64_t result = sub_1B299FC74();
  if (!v0)
  {
    sub_1B29A0FB0();
    MEMORY[0x1F4188790](v6);
    sub_1B29A3438();
    sub_1B2B86B58((void (*)(void))sub_1B2DA598C, 1, v2);
    uint64_t v7 = sub_1B29A3EB4(&qword_1E9C3E850);
    sub_1B2DA5A3C(v7);
    if (v8)
    {
      swift_bridgeObjectRelease();
      sub_1B29C4148(v2, &qword_1E9C3EC40);
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
        swift_willThrowTypedImpl();
        return swift_bridgeObjectRelease();
      }
      sub_1B2DA59C4(v2, v1, (void (*)(void))type metadata accessor for CustomGraphActivityEvent);
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = type metadata accessor for CustomGraphActivityEvent(0);
    return sub_1B2DA5A64(v10);
  }
  return result;
}

uint64_t sub_1B2DA3DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_retain();
  uint64_t v5 = sub_1B2DE4310(a1);
  uint64_t result = swift_release();
  if (!v2)
  {
    uint64_t v16 = v5;
    MEMORY[0x1F4188790](result);
    sub_1B2B86B94((void (*)(uint64_t *__return_ptr))sub_1B2DA591C, (uint64_t)v14);
    if (v15 == 255)
    {
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(a2 + 48) = 0;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)a2 = 0u;
    }
    else
    {
      uint64_t v7 = v14[0];
      if (v15)
      {
        uint64_t v16 = v14[0];
        sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
        swift_willThrowTypedImpl();
        return swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v8 = v14[1];
        uint64_t v9 = v14[2];
        uint64_t v10 = v14[3];
        uint64_t v11 = v14[4];
        uint64_t v12 = v14[5];
        uint64_t v13 = v14[6];
        uint64_t result = swift_bridgeObjectRelease();
        *(void *)a2 = v7;
        *(void *)(a2 + 8) = v8;
        *(void *)(a2 + 16) = v9;
        *(void *)(a2 + 24) = v10;
        *(void *)(a2 + 32) = v11;
        *(void *)(a2 + 40) = v12;
        *(void *)(a2 + 48) = v13;
      }
    }
  }
  return result;
}

uint64_t sub_1B2DA3F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v6 = *(_OWORD *)(v2 + 32);
  v22[0] = *(_OWORD *)(v2 + 16);
  v22[1] = v6;
  uint64_t v23 = *(void *)(v2 + 48);
  sub_1B2B8766C((uint64_t)v22);
  uint64_t v7 = sub_1B2DE43B8(a1);
  uint64_t result = sub_1B2B876B4((uint64_t)v22);
  if (!v3)
  {
    uint64_t v24 = v7;
    MEMORY[0x1F4188790](result);
    sub_1B2B86D70((void (*)(uint64_t *__return_ptr))sub_1B2DA5828, (uint64_t)v20);
    if (v21 == 255)
    {
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(a2 + 80) = 0;
      *(_OWORD *)(a2 + 48) = 0u;
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)a2 = 0u;
    }
    else
    {
      uint64_t v9 = v20[0];
      if (v21)
      {
        uint64_t v24 = v20[0];
        sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
        swift_willThrowTypedImpl();
        return swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v10 = v20[1];
        uint64_t v11 = v20[2];
        uint64_t v12 = v20[3];
        uint64_t v13 = v20[4];
        uint64_t v14 = v20[5];
        uint64_t v18 = v20[7];
        uint64_t v19 = v20[6];
        uint64_t v17 = v20[8];
        uint64_t v16 = v20[9];
        uint64_t v15 = v20[10];
        uint64_t result = swift_bridgeObjectRelease();
        *(void *)a2 = v9;
        *(void *)(a2 + 8) = v10;
        *(void *)(a2 + 16) = v11;
        *(void *)(a2 + 24) = v12;
        *(void *)(a2 + 32) = v13;
        *(void *)(a2 + 40) = v14;
        *(void *)(a2 + 48) = v19;
        *(void *)(a2 + 56) = v18;
        *(void *)(a2 + 64) = v17;
        *(void *)(a2 + 72) = v16;
        *(void *)(a2 + 80) = v15;
      }
    }
  }
  return result;
}

uint64_t sub_1B2DA4118(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unsigned __int8 v21 = (uint64_t (*)(long long *))result;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v6 = a3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v20 = v6;
    while (1)
    {
      uint64_t v34 = v5;
      uint64_t v8 = *(void *)(v6 + v7 + 56);
      uint64_t v9 = *(void *)(v6 + v7 + 64);
      uint64_t v10 = *(void *)(v6 + v7 + 104);
      uint64_t v11 = *(void *)(v6 + v7 + 112);
      uint64_t v12 = *(void *)(v6 + v7 + 128);
      uint64_t v13 = *(void *)(v6 + v7 + 136);
      __int16 v14 = *(_WORD *)(v6 + v7 + 120);
      uint64_t v15 = *(void *)(v6 + v7 + 96);
      __int16 v16 = *(_WORD *)(v6 + v7 + 72);
      uint64_t v17 = *(void *)(v6 + v7 + 48);
      long long v22 = *(_OWORD *)(v6 + v7 + 32);
      uint64_t v23 = v17;
      uint64_t v24 = v8;
      uint64_t v25 = v9;
      __int16 v26 = v16;
      long long v27 = *(_OWORD *)(v6 + v7 + 80);
      uint64_t v28 = v15;
      uint64_t v29 = v10;
      uint64_t v30 = v11;
      __int16 v31 = v14;
      uint64_t v32 = v12;
      uint64_t v33 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v18 = v21(&v22);
      if (v4) {
        break;
      }
      char v19 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v19)
      {
        v7 += 112;
        uint64_t v5 = v34 - 1;
        uint64_t v6 = v20;
        if (v34 != 1) {
          continue;
        }
      }
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2DA42A0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v22 = (uint64_t (*)(long long *))result;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v6 = a3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v21 = v6;
    while (1)
    {
      uint64_t v36 = v5;
      uint64_t v8 = *(void *)(v6 + v7 + 56);
      uint64_t v9 = *(void *)(v6 + v7 + 64);
      uint64_t v10 = *(void *)(v6 + v7 + 104);
      uint64_t v11 = *(void *)(v6 + v7 + 112);
      uint64_t v12 = *(void *)(v6 + v7 + 144);
      uint64_t v13 = *(void *)(v6 + v7 + 128);
      uint64_t v14 = *(void *)(v6 + v7 + 136);
      __int16 v15 = *(_WORD *)(v6 + v7 + 120);
      uint64_t v16 = *(void *)(v6 + v7 + 96);
      __int16 v17 = *(_WORD *)(v6 + v7 + 72);
      uint64_t v18 = *(void *)(v6 + v7 + 48);
      long long v23 = *(_OWORD *)(v6 + v7 + 32);
      uint64_t v24 = v18;
      uint64_t v25 = v8;
      uint64_t v26 = v9;
      __int16 v27 = v17;
      long long v28 = *(_OWORD *)(v6 + v7 + 80);
      uint64_t v29 = v16;
      uint64_t v30 = v10;
      uint64_t v31 = v11;
      __int16 v32 = v15;
      uint64_t v33 = v13;
      uint64_t v34 = v14;
      uint64_t v35 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v19 = v22(&v23);
      if (v4) {
        break;
      }
      char v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20)
      {
        v7 += 120;
        uint64_t v5 = v36 - 1;
        uint64_t v6 = v21;
        if (v36 != 1) {
          continue;
        }
      }
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2DA4430@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X2>, uint64_t a3@<X3>, void (*a4)(uint64_t, void *, uint64_t)@<X4>, uint64_t (*a5)(void)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = a2(v13);
  uint64_t result = sub_1B2DA4688(a1, v14, a3, a4);
  if (!v6)
  {
    uint64_t v16 = a5(0);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a6, 0, 1, v16);
  }
  return result;
}

double sub_1B2DA44D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1B2B82698();
  *(void *)&double result = sub_1B2DA4570(a1, a2).n128_u64[0];
  return result;
}

double sub_1B2DA4524@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1B2B82724();
  *(void *)&double result = sub_1B2DA45F8(a1, a2).n128_u64[0];
  return result;
}

__n128 sub_1B2DA4570@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v12 = a1;
  sub_1B2BD5C18((void (*)(void))sub_1B2DA5938, v8);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v5 = v8[1];
    uint64_t v6 = v10;
    __n128 result = v9;
    long long v7 = v11;
    *(void *)a2 = v8[0];
    *(void *)(a2 + 8) = v5;
    *(__n128 *)(a2 + 16) = result;
    *(void *)(a2 + 32) = v6;
    *(_OWORD *)(a2 + 40) = v7;
  }
  return result;
}

__n128 sub_1B2DA45F8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a1;
  v10[2] = &v17;
  sub_1B2BD7270(v11, sub_1B2DA5888, v10);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v5 = v11[1];
    uint64_t v6 = v15;
    long long v7 = v12;
    __n128 result = v13;
    long long v8 = v14;
    long long v9 = v16;
    *(void *)a2 = v11[0];
    *(void *)(a2 + 8) = v5;
    *(_OWORD *)(a2 + 16) = v7;
    *(__n128 *)(a2 + 32) = result;
    *(_OWORD *)(a2 + 48) = v8;
    *(void *)(a2 + 64) = v6;
    *(_OWORD *)(a2 + 72) = v9;
  }
  return result;
}

uint64_t sub_1B2DA4688(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void *, uint64_t))
{
  uint64_t v6 = a1;
  v5[2] = &v6;
  a4(a3, v5, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DA46E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15 = a5;
  v14[2] = &v15;
  swift_retain();
  return a7(a6, v14, a1, a2, a3, a4);
}

void *ViewService.siriPersonView.getter()
{
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  uint64_t v3 = (void *)sub_1B2E82348();
  v17[0] = 0;
  id v4 = objc_msgSend(v2, sel_requestAssertionForViewName_error_, v3, v17);

  id v5 = v17[0];
  if (v4)
  {
    uint64_t v6 = *(void **)(v0 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    uint64_t v7 = v6[5];
    uint64_t v8 = v6[6];
    sub_1B29AEC7C(v6 + 2, v7);
    long long v9 = *(uint64_t (**)(id, uint64_t, uint64_t))(v8 + 8);
    id v10 = v5;
    uint64_t v11 = v9(v4, v7, v8);
    if (v1)
    {
      return (void *)swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v15 = v11;
      uint64_t v16 = v12;
      type metadata accessor for SubgraphView();
      swift_allocObject();
      return SubgraphView.init(accessAssertion:database:tableName:batchSize:)((uint64_t)v4, v15, v16, 0x7372655069726973, 0xEA00000000006E6FLL, 10);
    }
  }
  else
  {
    id v14 = v17[0];
    sub_1B2E80388();

    return (void *)swift_willThrow();
  }
}

void SiriPersonView.fetchValues(entityIdentifier:)(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C3AFB0);
  uint64_t v6 = sub_1B299B0F0(v5);
  MEMORY[0x1F4188790](v6);
  v82 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CustomGraphPerson(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v1 + 8);
  uint64_t v105 = MEMORY[0x1E4FBC860];
  uint64_t v84 = *(void *)(a1 + 16);
  if (!v84) {
    return;
  }
  uint64_t v86 = a1 + 32;
  v76 = v11 + 16;
  uint64_t v81 = 162;
  uint64_t v80 = 1336;
  uint64_t v79 = 2889;
  uint64_t v74 = a1;
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  long long v77 = xmmword_1B2EC00B0;
  uint64_t v90 = v12;
  v78 = v11;
  v83 = (int *)v8;
  while (1)
  {
    id v14 = *(uint64_t **)(v86 + 8 * v13);
    EntityClass.init(intValue:)(SHIBYTE(v14), (uint64_t)&v92);
    if (!v93)
    {
      sub_1B29D1EA8();
      __int16 v32 = (void *)swift_allocError();
      long long *v33 = v77;
      v33[1] = 0u;
      v33[2] = 0u;
      v33[3] = 0u;
      *(long long *)((char *)v33 + 57) = 0u;
LABEL_20:
      swift_willThrow();

      uint64_t v3 = 0;
      goto LABEL_61;
    }
    if (v81 < 27) {
      break;
    }
    if (!_Records_GDEntityClass_records) {
      goto LABEL_69;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x278) >= v80) {
      goto LABEL_67;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x280) >= v79) {
      goto LABEL_68;
    }
    uint64_t v91 = v93;
    v87 = v14;
    uint64_t v88 = v3;
    uint64_t v85 = v13;
    if (!_Records_GDEntityClass_classIds[0]) {
      goto LABEL_70;
    }
    uint64_t v15 = v92;
    uint64_t v17 = v94;
    uint64_t v16 = v95;
    LODWORD(v89) = v96;
    uint64_t v18 = *(unsigned __int8 *)(_Records_GDEntityClass_records + 0x270);
    uint64_t v19 = sub_1B2E82538();
    if (!_Records_GDEntityClass_labels) {
      goto LABEL_71;
    }
    uint64_t v21 = v19;
    uint64_t v22 = v20;
    uint64_t v23 = sub_1B2E82538();
    uint64_t v25 = v24;
    uint64_t v100 = v21;
    uint64_t v101 = v22;
    uint64_t v102 = v23;
    uint64_t v103 = v24;
    char v104 = v18;
    if (v23 != v17 || v16 != v24)
    {
      uint64_t v27 = v23;
      if ((sub_1B2E837A8() & 1) == 0)
      {
        uint64_t v92 = v15;
        uint64_t v93 = v91;
        uint64_t v94 = v17;
        uint64_t v95 = v16;
        LOBYTE(v96) = v89;
        EntityClass.ancestorClassesSet.getter();
        sub_1B29FB9A8();
        LODWORD(v75) = v28;
        swift_bridgeObjectRelease();
        if ((v75 & 1) == 0)
        {
          sub_1B29D1EA8();
          __int16 v32 = (void *)swift_allocError();
          *(void *)uint64_t v52 = v21;
          *(void *)(v52 + 8) = v22;
          *(void *)(v52 + 16) = v27;
          *(void *)(v52 + 24) = v25;
          *(void *)(v52 + 32) = v18;
          *(void *)(v52 + 40) = v15;
          *(void *)(v52 + 48) = v91;
          *(void *)(v52 + 56) = v17;
          *(void *)(v52 + 64) = v16;
          *(unsigned char *)(v52 + 72) = v89;
          uint64_t v13 = v85;
          goto LABEL_20;
        }
      }
    }
    sub_1B29D1EF4(v15, v91);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v29 = (uint64_t)v82;
    uint64_t v30 = v88;
    sub_1B2DA39A0();
    uint64_t v3 = v30;
    if (v30)
    {
      swift_bridgeObjectRelease();
      swift_release();
LABEL_62:
      swift_bridgeObjectRelease();
      return;
    }
    swift_release();
    uint64_t v31 = v83;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v29, 1, (uint64_t)v83) == 1)
    {
      sub_1B29C4148(v29, &qword_1E9C3AFB0);
    }
    else
    {
      uint64_t v34 = (uint64_t)v78;
      sub_1B2DA59C4(v29, (uint64_t)v78, (void (*)(void))type metadata accessor for CustomGraphPerson);
      if (*(void *)&v76[v31[28]])
      {
        uint64_t v88 = 0;
        uint64_t v35 = *(uint64_t **)(v34 + v31[27]);
        uint64_t v36 = v35[2];
        if (v36)
        {
          swift_bridgeObjectRetain_n();
          v87 = v35;
          uint64_t v37 = v35 + 7;
          uint64_t v38 = MEMORY[0x1E4FBC860];
          do
          {
            uint64_t v39 = v37[1];
            if (v39)
            {
              uint64_t v40 = *v37;
              uint64_t v91 = *(v37 - 1);
              uint64_t v42 = v37[2];
              uint64_t v41 = v37[3];
              uint64_t v43 = v37[4];
              BOOL v44 = v40 == 0x6361746E6F434E43 && v39 == 0xE900000000000074;
              if (v44 || (sub_1B2E837A8()) && v43)
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v89 = v42;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v45 = v41;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1B29B7048();
                  uint64_t v38 = v49;
                }
                unint64_t v46 = *(void *)(v38 + 16);
                uint64_t v47 = v38;
                if (v46 >= *(void *)(v38 + 24) >> 1)
                {
                  sub_1B29B7048();
                  uint64_t v47 = v50;
                }
                *(void *)(v47 + 16) = v46 + 1;
                uint64_t v38 = v47;
                uint64_t v48 = v47 + 16 * v46;
                *(void *)(v48 + 32) = v45;
                *(void *)(v48 + 40) = v43;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
            }
            v37 += 11;
            --v36;
          }
          while (v36);
          uint64_t v89 = v38;
          swift_bridgeObjectRelease_n();
          uint64_t v34 = (uint64_t)v78;
          uint64_t v51 = MEMORY[0x1E4FBC860];
          uint64_t v31 = v83;
        }
        else
        {
          uint64_t v51 = MEMORY[0x1E4FBC860];
          uint64_t v89 = MEMORY[0x1E4FBC860];
        }
        uint64_t v99 = v51;
        uint64_t v53 = *(void *)(v34 + v31[24]);
        uint64_t v54 = *(void *)(v53 + 16);
        uint64_t v55 = v88;
        if (v54)
        {
          uint64_t v56 = v53 + 32;
          uint64_t v73 = *(void *)(v34 + v31[24]);
          swift_bridgeObjectRetain_n();
          uint64_t v57 = 0;
          uint64_t v72 = v54;
          uint64_t v71 = v56;
          while (1)
          {
            uint64_t v58 = (void *)(v56 + (v57 << 6));
            uint64_t v59 = v58[5];
            uint64_t v91 = *(void *)(v59 + 16);
            if (v91) {
              break;
            }
LABEL_54:
            if (++v57 == v54)
            {
              uint64_t v88 = v55;
              swift_bridgeObjectRelease_n();
              uint64_t v91 = v99;
              uint64_t v34 = (uint64_t)v78;
              goto LABEL_57;
            }
          }
          uint64_t v75 = v57;
          uint64_t v60 = v58[2];
          v87 = (uint64_t *)v58[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          uint64_t v88 = v60;
          swift_bridgeObjectRetain();
          uint64_t v61 = 0;
          while (1)
          {
            uint64_t v62 = *(void *)(v59 + 8 * v61 + 32);
            swift_retain();
            sub_1B2DA3DE4(v62, (uint64_t)&v92);
            if (v55) {
              break;
            }
            swift_release();
            uint64_t v63 = v93;
            if (v93)
            {
              uint64_t v64 = v92;
              uint64_t v65 = v94;
              uint64_t v66 = v95;
              uint64_t v67 = v97;
              uint64_t v68 = v98;
              if (v95 | v98)
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1B2B7C8E0(v64, v63);
                id v69 = objc_allocWithZone((Class)GDSiriPersonOrganization);
                sub_1B2DA5300(v65, v66, v67, v68);
                MEMORY[0x1B3EB0FE0]();
                if (*(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_1B2DA5A84();
                }
                sub_1B2E828F8();
                sub_1B2E82878();
              }
              else
              {
                sub_1B2B7C8E0(v92, v93);
              }
            }
            if (v91 == ++v61)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              uint64_t v54 = v72;
              uint64_t v56 = v71;
              uint64_t v57 = v75;
              goto LABEL_54;
            }
          }
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_release();
          sub_1B2DA5588((uint64_t)v78);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_62;
        }
        uint64_t v91 = v51;
LABEL_57:
        v87 = (uint64_t *)objc_allocWithZone((Class)GDSiriPerson);
        uint64_t v70 = v89;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v89 = v70;
        sub_1B2DA53A0();
        MEMORY[0x1B3EB0FE0]();
        if (*(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1B2DA5A84();
        }
        sub_1B2E828F8();
        sub_1B2E82878();
        sub_1B2DA5588(v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v3 = v88;
      }
      else
      {
        sub_1B2DA5588(v34);
      }
    }
    uint64_t v13 = v85;
LABEL_61:
    if (++v13 == v84) {
      goto LABEL_62;
    }
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

id sub_1B2DA5300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
  {
    uint64_t v6 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v7 = 0;
    goto LABEL_6;
  }
  uint64_t v6 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v7 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
LABEL_6:
  id v8 = objc_msgSend(v4, sel_initWithOrganizationName_phoneticOrganizationName_, v6, v7);

  return v8;
}

id sub_1B2DA53A0()
{
  uint64_t v11 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  uint64_t v0 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  id v8 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  sub_1B2DA58DC();
  id v4 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v12, sel_initWithContactIdentifiers_givenNames_phoneticGivenNames_middleNames_phoneticMiddleNames_lastNames_phoneticLastNames_prefixes_nickNames_organizations_, v11, v0, v1, v10, v9, v8, v2, v7, v3, v4);

  return v5;
}

uint64_t sub_1B2DA5588(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CustomGraphPerson(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for SiriPersonView()
{
  return &type metadata for SiriPersonView;
}

uint64_t sub_1B2DA55F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2DA4430(*a1, (uint64_t (*)(uint64_t))sub_1B2B82650, (uint64_t)sub_1B2DA5970, (void (*)(uint64_t, void *, uint64_t))sub_1B2BD9D74, type metadata accessor for CustomGraphPerson, a2);
}

uint64_t sub_1B2DA5664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_1B2DA46E0(a1, a2, a3, a4, *a5, (uint64_t)sub_1B2DA5A24, (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2A518E0);
}

uint64_t sub_1B2DA56A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B2DA4118(a1, a2, *a3);
}

uint64_t sub_1B2DA56C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2DA4430(*a1, (uint64_t (*)(uint64_t))sub_1B2B82668, (uint64_t)sub_1B2DA5970, (void (*)(uint64_t, void *, uint64_t))sub_1B2BCE6B4, type metadata accessor for CustomGraphSongEvent, a2);
}

uint64_t sub_1B2DA5734@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2DA4430(*a1, (uint64_t (*)(uint64_t))sub_1B2B82680, (uint64_t)sub_1B2DA5970, (void (*)(uint64_t, void *, uint64_t))sub_1B2B96B20, type metadata accessor for CustomGraphActivityEvent, a2);
}

double sub_1B2DA57A4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2DA44D8(*a1, a2);
}

uint64_t sub_1B2DA57C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_1B2DA46E0(a1, a2, a3, a4, *a5, (uint64_t)sub_1B2CC6DAC, (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2A518E0);
}

double sub_1B2DA5808@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2DA4524(*a1, a2);
}

double sub_1B2DA5828@<D0>(uint64_t a1@<X8>)
{
  return sub_1B2DA5808(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1B2DA5844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_1B2DA46E0(a1, a2, a3, a4, *a5, (uint64_t)sub_1B2DA58C0, (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2A51A70);
}

uint64_t sub_1B2DA5888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2DA5844(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

uint64_t sub_1B2DA58A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B2DA42A0(a1, a2, *a3);
}

uint64_t sub_1B2DA58C0(uint64_t a1, uint64_t a2)
{
  return sub_1B2DA58A4(a1, a2, *(uint64_t **)(v2 + 16));
}

unint64_t sub_1B2DA58DC()
{
  unint64_t result = qword_1E9C43E18;
  if (!qword_1E9C43E18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9C43E18);
  }
  return result;
}

double sub_1B2DA591C@<D0>(uint64_t a1@<X8>)
{
  return sub_1B2DA57A4(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1B2DA5938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2DA57C4(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

uint64_t sub_1B2DA5954@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2DA55F4(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1B2DA5970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2DA5664(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

uint64_t sub_1B2DA598C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2DA5734(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1B2DA59A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2DA56C4(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1B2DA59C4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1B2DA5A24(uint64_t a1, uint64_t a2)
{
  return sub_1B2CC6DAC(a1, a2);
}

uint64_t sub_1B2DA5A3C(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, a1);
}

uint64_t sub_1B2DA5A64(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2, v1, 1, a1);
}

uint64_t sub_1B2DA5A84()
{
  return sub_1B2E828A8();
}

uint64_t static ViewService.SiriRemembersView.databaseMigrator()()
{
  sub_1B2E80EE8();
  sub_1B299E158();
  uint64_t v1 = v0;
  MEMORY[0x1F4188790](v2);
  sub_1B2E80F08();
  uint64_t v3 = *(void (**)(uint64_t))(v1 + 104);
  uint64_t v4 = sub_1B299E140();
  v3(v4);
  sub_1B299B7D8();
  sub_1B29A1788(0xD000000000000013, v5, v6, (uint64_t)sub_1B2DA5DAC);
  uint64_t v7 = *(void (**)(uint64_t))(v1 + 8);
  uint64_t v8 = sub_1B29A3454();
  v7(v8);
  uint64_t v9 = sub_1B299E140();
  v3(v9);
  sub_1B299B7D8();
  sub_1B29A1788(0xD000000000000017, v10, v11, (uint64_t)sub_1B2DA8050);
  uint64_t v12 = sub_1B29A3454();
  v7(v12);
  uint64_t v13 = sub_1B299E140();
  v3(v13);
  sub_1B299B7D8();
  sub_1B29A1788(v14, v15, v16, (uint64_t)sub_1B2DA856C);
  uint64_t v17 = sub_1B29A3454();
  v7(v17);
  uint64_t v18 = sub_1B299E140();
  v3(v18);
  sub_1B299B7D8();
  sub_1B29A1788(v19, v20, v21, (uint64_t)sub_1B2DA8668);
  uint64_t v22 = sub_1B29A3454();
  v7(v22);
  uint64_t v23 = sub_1B299E140();
  v3(v23);
  sub_1B299B7D8();
  sub_1B29A1788(0xD000000000000023, v24, v25, (uint64_t)sub_1B2DA8A18);
  uint64_t v26 = sub_1B29A3454();
  v7(v26);
  uint64_t v27 = sub_1B299E140();
  v3(v27);
  sub_1B299B7D8();
  sub_1B29A1788(0xD000000000000023, v28, v29, (uint64_t)sub_1B2DA8A50);
  uint64_t v30 = sub_1B29A3454();
  v7(v30);
  uint64_t v31 = sub_1B299E140();
  v3(v31);
  sub_1B299B7D8();
  sub_1B29A1788(v32, v33, v34, (uint64_t)sub_1B2DA8E64);
  uint64_t v35 = sub_1B29A3454();
  v7(v35);
  uint64_t v36 = sub_1B299E140();
  v3(v36);
  sub_1B299B7D8();
  sub_1B29A1788(0xD000000000000017, v37, v38, (uint64_t)sub_1B2DA905C);
  uint64_t v39 = sub_1B29A3454();
  v7(v39);
  uint64_t v40 = sub_1B299E140();
  v3(v40);
  sub_1B299B7D8();
  sub_1B29A1788(0xD000000000000013, v41, v42, (uint64_t)sub_1B2DA965C);
  uint64_t v43 = sub_1B29A3454();
  v7(v43);
  uint64_t v44 = sub_1B299E140();
  v3(v44);
  sub_1B299B7D8();
  sub_1B29A1788(v45, v46, v47, (uint64_t)sub_1B2DA9CCC);
  uint64_t v48 = sub_1B29A3454();
  return ((uint64_t (*)(uint64_t))v7)(v48);
}

uint64_t sub_1B2DA5DAC(uint64_t a1)
{
  uint64_t v81 = a1;
  uint64_t v71 = sub_1B2E81438();
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v70 = (char *)&v61 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1B2E80A78();
  uint64_t v75 = *(void *)(v77 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v77);
  uint64_t v68 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v72 = (char *)&v61 - v5;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v73 = (char *)&v61 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v74 = (char *)&v61 - v9;
  MEMORY[0x1F4188790](v8);
  v76 = (char *)&v61 - v10;
  uint64_t v11 = sub_1B2E80AA8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v61 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = (char *)&v61 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  v78 = (char *)&v61 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v61 - v24;
  *(void *)&long long v83 = MEMORY[0x1E4FBC860];
  uint64_t v26 = sub_1B2A37738(&qword_1E9C3B8C8, MEMORY[0x1E4F62CA0]);
  uint64_t v27 = sub_1B29A3EB4(&qword_1E9C3B8D0);
  uint64_t v79 = sub_1B2A37780(&qword_1E9C3B8D8, &qword_1E9C3B8D0);
  unint64_t v80 = v27;
  sub_1B2E830C8();
  uint64_t v28 = v82;
  sub_1B2E816A8();
  uint64_t v82 = v28;
  if (v28) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v25, v11);
  }
  uint64_t v67 = v18;
  uint64_t v66 = v15;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v30 = v12 + 8;
  uint64_t v31 = v32;
  v32(v25, v11);
  uint64_t v33 = MEMORY[0x1E4FBC860];
  *(void *)&long long v83 = MEMORY[0x1E4FBC860];
  uint64_t v34 = v78;
  sub_1B2E830C8();
  uint64_t v35 = v82;
  sub_1B2E816A8();
  uint64_t v82 = v35;
  uint64_t v36 = v34;
  if (!v35)
  {
    v31(v34, v11);
    *(void *)&long long v83 = v33;
    sub_1B2E830C8();
    uint64_t v37 = v82;
    sub_1B2E816A8();
    uint64_t v82 = v37;
    if (!v37)
    {
      uint64_t v65 = v26;
      v31(v21, v11);
      uint64_t v85 = 0;
      long long v83 = 0u;
      long long v84 = 0u;
      uint64_t v86 = v33;
      uint64_t v38 = sub_1B2A37738(&qword_1E9C3B8A0, MEMORY[0x1E4F62C60]);
      sub_1B29A3EB4(&qword_1E9C3B8A8);
      uint64_t v39 = sub_1B2A37780(&qword_1E9C3B8B0, &qword_1E9C3B8A8);
      uint64_t v41 = v76;
      uint64_t v40 = v77;
      v78 = (char *)v38;
      sub_1B2E830C8();
      uint64_t v42 = v82;
      sub_1B2E81698();
      uint64_t v82 = v42;
      if (v42)
      {
        (*(void (**)(char *, uint64_t))(v75 + 8))(v41, v40);
      }
      else
      {
        uint64_t v63 = (uint64_t (*)(char *, uint64_t))v31;
        uint64_t v62 = v11;
        uint64_t v64 = v30;
        uint64_t v43 = *(void (**)(char *, uint64_t))(v75 + 8);
        v43(v41, v40);
        sub_1B2A10B50((uint64_t)&v83, &qword_1EB7E3BD0);
        uint64_t v85 = 0;
        long long v83 = 0u;
        long long v84 = 0u;
        uint64_t v86 = MEMORY[0x1E4FBC860];
        uint64_t v44 = v74;
        sub_1B2E830C8();
        uint64_t v45 = v82;
        sub_1B2E81698();
        uint64_t v82 = v45;
        if (v45)
        {
          v43(v44, v40);
        }
        else
        {
          v43(v44, v40);
          sub_1B2A10B50((uint64_t)&v83, &qword_1EB7E3BD0);
          uint64_t v85 = 0;
          long long v83 = 0u;
          long long v84 = 0u;
          uint64_t v86 = MEMORY[0x1E4FBC860];
          v76 = (char *)v43;
          uint64_t v46 = v73;
          sub_1B2E830C8();
          uint64_t v47 = v82;
          sub_1B2E81698();
          uint64_t v82 = v47;
          if (v47) {
            goto LABEL_14;
          }
          ((void (*)(char *, uint64_t))v76)(v46, v40);
          sub_1B2A10B50((uint64_t)&v83, &qword_1EB7E3BD0);
          uint64_t v85 = 0;
          long long v83 = 0u;
          long long v84 = 0u;
          uint64_t v86 = MEMORY[0x1E4FBC860];
          uint64_t v46 = v72;
          sub_1B2E830C8();
          uint64_t v48 = v82;
          sub_1B2E81698();
          uint64_t v82 = v48;
          if (v48)
          {
LABEL_14:
            uint64_t v49 = v46;
            uint64_t v50 = v40;
          }
          else
          {
            uint64_t v75 = v39;
            ((void (*)(char *, uint64_t))v76)(v46, v40);
            sub_1B2A10B50((uint64_t)&v83, &qword_1EB7E3BD0);
            *(void *)&long long v83 = MEMORY[0x1E4FBC860];
            uint64_t v51 = v67;
            uint64_t v52 = v62;
            sub_1B2E830C8();
            uint64_t v53 = v82;
            sub_1B2E816A8();
            uint64_t v82 = v53;
            uint64_t v54 = v51;
            if (v53) {
              return v63(v54, v52);
            }
            v63(v51, v52);
            uint64_t v55 = v70;
            sub_1B2E81428();
            uint64_t v56 = v71;
            uint64_t v57 = v82;
            sub_1B2E81688();
            uint64_t v82 = v57;
            if (v57) {
              return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v55, v56);
            }
            (*(void (**)(char *, uint64_t))(v69 + 8))(v55, v56);
            *(void *)&long long v83 = MEMORY[0x1E4FBC860];
            uint64_t v58 = v66;
            sub_1B2E830C8();
            unint64_t v80 = 0x80000001B2EA3AB0;
            uint64_t v59 = v82;
            sub_1B2E816A8();
            uint64_t v82 = v59;
            uint64_t v54 = v58;
            if (v59) {
              return v63(v54, v52);
            }
            v63(v58, v52);
            uint64_t v85 = 0;
            long long v83 = 0u;
            long long v84 = 0u;
            uint64_t v86 = MEMORY[0x1E4FBC860];
            sub_1B2E830C8();
            uint64_t v60 = v82;
            sub_1B2E81698();
            uint64_t v82 = v60;
            uint64_t v49 = v68;
            uint64_t v50 = v77;
          }
          ((void (*)(char *, uint64_t))v76)(v49, v50);
        }
      }
      return sub_1B2A10B50((uint64_t)&v83, &qword_1EB7E3BD0);
    }
    uint64_t v36 = v21;
  }
  return ((uint64_t (*)(char *, uint64_t))v31)(v36, v11);
}

uint64_t sub_1B2DA6940()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1E9C3B8B8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3B8C0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E81578();
  uint64_t v6 = sub_1B2E815C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  uint64_t v7 = sub_1B2E81648();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1B2E80E58();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v2, &qword_1E9C3B8B8);
  sub_1B2E81578();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80E08();
  swift_release();
  return sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
}

uint64_t sub_1B2DA6AF4()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1E9C3B8B8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3B8C0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E81578();
  uint64_t v6 = sub_1B2E815C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  uint64_t v7 = sub_1B2E81648();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1B2E80E58();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v2, &qword_1E9C3B8B8);
  sub_1B2E815B8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80E08();
  swift_release();
  return sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
}

uint64_t sub_1B2DA6CA0()
{
  uint64_t v19 = sub_1B2E815E8();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v1 = (char *)&v15 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C3B8C0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C3B8B8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B2E81648();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v8);
  sub_1B2E80DF8();
  swift_release();
  sub_1B2A10B50((uint64_t)v7, &qword_1E9C3B8B8);
  sub_1B2E81578();
  uint64_t v9 = sub_1B2E815C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v9);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v4, &qword_1E9C3B8C0);
  uint64_t v18 = v8;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v8);
  sub_1B2E80E78();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v7, &qword_1E9C3B8B8);
  sub_1B2E81578();
  uint64_t v16 = v9;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v9);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v4, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v8);
  sub_1B2E80E98();
  swift_release();
  sub_1B2A10B50((uint64_t)v7, &qword_1E9C3B8B8);
  sub_1B2E815D8();
  sub_1B2E80E88();
  swift_release();
  swift_release();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v20 + 8);
  v20 += 8;
  uint64_t v10 = v19;
  v17(v1, v19);
  sub_1B2E81578();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v9);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v4, &qword_1E9C3B8C0);
  uint64_t v11 = v18;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v18);
  sub_1B2E80E98();
  swift_release();
  sub_1B2A10B50((uint64_t)v7, &qword_1E9C3B8B8);
  sub_1B2E815D8();
  sub_1B2E80E88();
  swift_release();
  swift_release();
  uint64_t v12 = v17;
  v17(v1, v10);
  sub_1B2E81578();
  uint64_t v13 = v16;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v16);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v4, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1B2E80E98();
  swift_release();
  sub_1B2A10B50((uint64_t)v7, &qword_1E9C3B8B8);
  sub_1B2E815D8();
  sub_1B2E80E88();
  swift_release();
  swift_release();
  v12(v1, v19);
  sub_1B2E81598();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v4, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v7, &qword_1E9C3B8B8);
  sub_1B2E81578();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v4, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v7, &qword_1E9C3B8B8);
  sub_1B2E815A8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v4, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v7, &qword_1E9C3B8B8);
  sub_1B2E815A8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v4, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v7, &qword_1E9C3B8B8);
  sub_1B2E815B8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v4, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v7, &qword_1E9C3B8B8);
  sub_1B2E81588();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v4, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v7, &qword_1E9C3B8B8);
  sub_1B2E81578();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1B2E80E08();
  swift_release();
  sub_1B2A10B50((uint64_t)v4, &qword_1E9C3B8C0);
  sub_1B2E815A8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v4, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  return sub_1B2A10B50((uint64_t)v7, &qword_1E9C3B8B8);
}

uint64_t sub_1B2DA7530()
{
  uint64_t v0 = sub_1B2E815E8();
  uint64_t v12 = *(void *)(v0 - 8);
  uint64_t v13 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3B8C0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3B8B8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B2E81648();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1B2E80DF8();
  swift_release();
  sub_1B2A10B50((uint64_t)v8, &qword_1E9C3B8B8);
  sub_1B2E81578();
  uint64_t v10 = sub_1B2E815C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v10);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v8, &qword_1E9C3B8B8);
  sub_1B2E81578();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v10);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1B2E80E98();
  swift_release();
  sub_1B2A10B50((uint64_t)v8, &qword_1E9C3B8B8);
  sub_1B2E815D8();
  sub_1B2E80E88();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v2, v13);
  sub_1B2E81578();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v10);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v8, &qword_1E9C3B8B8);
  sub_1B2E81578();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v10);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v8, &qword_1E9C3B8B8);
  sub_1B2E815B8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v10);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v8, &qword_1E9C3B8B8);
  sub_1B2E815B8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v10);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v8, &qword_1E9C3B8B8);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1B2E80E18();
  return sub_1B2A10B50((uint64_t)v8, &qword_1E9C3B8B8);
}

uint64_t sub_1B2DA7A50()
{
  return swift_release();
}

uint64_t sub_1B2DA7AB4(uint64_t a1)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_1B2E815E8();
  uint64_t v29 = *(void *)(v1 - 8);
  uint64_t v30 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v28 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3B8E0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C3B8B8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1B29A3EB4(&qword_1E9C3B8C0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E815A8();
  uint64_t v27 = sub_1B2E815C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v14, 0, 1, v27);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v14, &qword_1E9C3B8C0);
  uint64_t v31 = sub_1B2E81648();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 1, 1, v31);
  sub_1B2E80E98();
  swift_release();
  sub_1B2A10B50((uint64_t)v11, &qword_1E9C3B8B8);
  unsigned int v24 = *MEMORY[0x1E4F62EE0];
  uint64_t v15 = v24;
  uint64_t v16 = sub_1B2E81628();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 104);
  uint64_t v25 = v17 + 104;
  v23(v8, v15, v16);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, v16);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 1, 1, v16);
  sub_1B2E80E68();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v6, &qword_1E9C3B8E0);
  sub_1B2A10B50((uint64_t)v8, &qword_1E9C3B8E0);
  sub_1B2E815A8();
  uint64_t v18 = v27;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v14, 0, 1, v27);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v14, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 1, 1, v31);
  sub_1B2E80E98();
  swift_release();
  sub_1B2A10B50((uint64_t)v11, &qword_1E9C3B8B8);
  v23(v8, v24, v16);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, v16);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 1, 1, v16);
  sub_1B2E80E68();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v6, &qword_1E9C3B8E0);
  sub_1B2A10B50((uint64_t)v8, &qword_1E9C3B8E0);
  sub_1B2E81578();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v14, 0, 1, v18);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v14, &qword_1E9C3B8C0);
  uint64_t v19 = v31;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 1, 1, v31);
  sub_1B2E80E98();
  swift_release();
  sub_1B2A10B50((uint64_t)v11, &qword_1E9C3B8B8);
  uint64_t v20 = v28;
  sub_1B2E815D8();
  sub_1B2E80E88();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v30);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 1, 1, v19);
  sub_1B2E80DE8();
  return sub_1B2A10B50((uint64_t)v11, &qword_1E9C3B8B8);
}

uint64_t sub_1B2DA8050()
{
  uint64_t v1 = sub_1B2E81028();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)v17 - v7;
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)v17 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t result = sub_1B2E81678();
  if (!v0)
  {
    sub_1B2E81018();
    sub_1B2E816B8();
    uint64_t v15 = v13;
    uint64_t v16 = *(void (**)(char *, uint64_t))(v2 + 8);
    v16(v15, v1);
    sub_1B2E81018();
    sub_1B2E816B8();
    v16(v11, v1);
    sub_1B2E81018();
    sub_1B2E816B8();
    v16(v8, v1);
    sub_1B2E81018();
    sub_1B2E816B8();
    v16(v5, v1);
    return sub_1B2E81678();
  }
  return result;
}

uint64_t sub_1B2DA834C()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1E9C3B8B8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v10[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3B8C0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1B3EAF5A0](0x727453726F6E6F64, 0xEB000000006D6165, 0x727453726F6E6F64, 0xEF747865546D6165);
  sub_1B2E815A8();
  uint64_t v6 = sub_1B2E815C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80DB8();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  v10[3] = MEMORY[0x1E4FBB550];
  void v10[4] = MEMORY[0x1E4F62FB8];
  v10[0] = 0;
  sub_1B2E80EA8();
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
  uint64_t v7 = sub_1B2E81648();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  return sub_1B2A10B50((uint64_t)v2, &qword_1E9C3B8B8);
}

uint64_t sub_1B2DA8528()
{
  return MEMORY[0x1B3EAF590](0x727453726F6E6F64, 0xEF747865546D6165);
}

uint64_t sub_1B2DA856C()
{
  uint64_t v0 = sub_1B2E81028();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E81018();
  sub_1B2E816B8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1B2DA8668()
{
  uint64_t v1 = sub_1B2E81028();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1B2E81678();
  if (!v0)
  {
    sub_1B2E81018();
    sub_1B2E816B8();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

uint64_t sub_1B2DA87A8()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1E9C3B8B8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v12[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3B8C0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E81588();
  uint64_t v6 = sub_1B2E815C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80DB8();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  uint64_t v7 = MEMORY[0x1E4FBB550];
  uint64_t v8 = MEMORY[0x1E4F62FB8];
  uint64_t v13 = MEMORY[0x1E4FBB550];
  uint64_t v14 = MEMORY[0x1E4F62FB8];
  v12[0] = 0;
  sub_1B2E80EA8();
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
  uint64_t v9 = sub_1B2E81648();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v9);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v2, &qword_1E9C3B8B8);
  sub_1B2E815A8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80DB8();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  uint64_t v13 = v7;
  uint64_t v14 = v8;
  v12[0] = 15;
  sub_1B2E80EA8();
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v9);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  return sub_1B2A10B50((uint64_t)v2, &qword_1E9C3B8B8);
}

uint64_t sub_1B2DA8A18(uint64_t a1)
{
  return sub_1B2DA9D04(a1, 0xD00000000000001ALL, 0x80000001B2EA36E0, (uint64_t)&unk_1F0AB4B38);
}

uint64_t sub_1B2DA8A50()
{
  uint64_t v1 = sub_1B2E81028();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1B2E81678();
  if (!v0)
  {
    id v6 = objc_msgSend(self, sel_platform);
    int v7 = BMDevicePlatform.deviceMetadataDevicePlatform.getter((uint64_t)v6);
    sub_1B29A3EB4(&qword_1EB7D98C8);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = MEMORY[0x1E4FBC150];
    *(_OWORD *)(v8 + 16) = xmmword_1B2EC00A0;
    uint64_t v10 = MEMORY[0x1E4F62FE8];
    *(void *)(v8 + 56) = v9;
    *(void *)(v8 + 64) = v10;
    *(_DWORD *)(v8 + 32) = v7;
    sub_1B2E81008();
    sub_1B2E816B8();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

uint64_t sub_1B2DA8BEC()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1E9C3B8B8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v10[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3B8C0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E81598();
  uint64_t v6 = sub_1B2E815C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80DB8();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  uint64_t v7 = sub_1B2E81648();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1B2E80E98();
  swift_release();
  sub_1B2A10B50((uint64_t)v2, &qword_1E9C3B8B8);
  uint64_t v11 = MEMORY[0x1E4FBB390];
  uint64_t v12 = MEMORY[0x1E4F62F88];
  LOBYTE(v10[0]) = 1;
  sub_1B2E80EA8();
  swift_release();
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
  sub_1B2E815A8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80DB8();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1B2E80E98();
  swift_release();
  sub_1B2A10B50((uint64_t)v2, &qword_1E9C3B8B8);
  uint64_t v11 = MEMORY[0x1E4FBB550];
  uint64_t v12 = MEMORY[0x1E4F62FB8];
  v10[0] = 0;
  sub_1B2E80EA8();
  swift_release();
  swift_release();
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
}

uint64_t sub_1B2DA8E64()
{
  return sub_1B2E81678();
}

uint64_t sub_1B2DA8EBC()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1E9C3B8B8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v10[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3B8C0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E815A8();
  uint64_t v6 = sub_1B2E815C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80DB8();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  uint64_t v7 = sub_1B2E81648();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1B2E80E98();
  swift_release();
  sub_1B2A10B50((uint64_t)v2, &qword_1E9C3B8B8);
  void v10[3] = MEMORY[0x1E4FBB550];
  void v10[4] = MEMORY[0x1E4F62FB8];
  v10[0] = 0;
  sub_1B2E80EA8();
  swift_release();
  swift_release();
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
}

uint64_t sub_1B2DA905C(uint64_t a1)
{
  uint64_t v32 = sub_1B2E81028();
  uint64_t v3 = *(void *)(v32 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v32);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v28 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v28 - v19;
  sub_1B2E81018();
  uint64_t v31 = a1;
  sub_1B2E816B8();
  if (v1) {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v20, v32);
  }
  uint64_t v29 = v15;
  uint64_t v30 = v18;
  uint64_t v28 = v12;
  uint64_t v22 = v20;
  uint64_t v23 = v32;
  unsigned int v24 = *(void (**)(char *, uint64_t))(v3 + 8);
  v24(v22, v32);
  sub_1B2E81678();
  sub_1B2E81678();
  uint64_t v25 = v30;
  sub_1B2E81018();
  sub_1B2E816B8();
  v24(v25, v23);
  uint64_t v26 = v29;
  sub_1B2E81018();
  sub_1B2E816B8();
  v24(v26, v23);
  uint64_t v27 = v28;
  sub_1B2E81018();
  sub_1B2E816B8();
  v24(v27, v23);
  sub_1B2E81018();
  sub_1B2E816B8();
  v24(v9, v23);
  sub_1B2E81018();
  sub_1B2E816B8();
  return ((uint64_t (*)(char *, uint64_t))v24)(v6, v23);
}

uint64_t sub_1B2DA9474()
{
  return MEMORY[0x1B3EAF590](0x7453656372756F73, 0xED0000736D616572);
}

uint64_t sub_1B2DA94B8()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1E9C3B8B8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v10[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3B8C0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E81578();
  uint64_t v6 = sub_1B2E815C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80DB8();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  void v10[3] = MEMORY[0x1E4FBB1A0];
  void v10[4] = MEMORY[0x1E4F62F70];
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  sub_1B2E80EA8();
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
  uint64_t v7 = sub_1B2E81648();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1B2E80E98();
  swift_release();
  swift_release();
  return sub_1B2A10B50((uint64_t)v2, &qword_1E9C3B8B8);
}

uint64_t sub_1B2DA965C(uint64_t a1)
{
  uint64_t v2 = sub_1B2E80AA8();
  uint64_t v22 = *(void *)(v2 - 8);
  uint64_t v23 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v21 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B2E80A78();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v20 - v9;
  uint64_t v27 = 0;
  long long v25 = 0u;
  long long v26 = 0u;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v11 = sub_1B2A37738(&qword_1E9C3B8A0, MEMORY[0x1E4F62C60]);
  uint64_t v12 = sub_1B29A3EB4(&qword_1E9C3B8A8);
  uint64_t v13 = sub_1B2A37780(&qword_1E9C3B8B0, &qword_1E9C3B8A8);
  sub_1B2E830C8();
  v20[3] = a1;
  uint64_t v14 = v24;
  sub_1B2E81698();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  else
  {
    v20[0] = v13;
    v20[1] = v12;
    v20[2] = v11;
    unsigned int v24 = v8;
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v10, v4);
    sub_1B2A10B50((uint64_t)&v25, &qword_1EB7E3BD0);
    *(void *)&long long v25 = MEMORY[0x1E4FBC860];
    sub_1B2A37738(&qword_1E9C3B8C8, MEMORY[0x1E4F62CA0]);
    sub_1B29A3EB4(&qword_1E9C3B8D0);
    sub_1B2A37780(&qword_1E9C3B8D8, &qword_1E9C3B8D0);
    uint64_t v17 = v21;
    uint64_t v18 = v23;
    sub_1B2E830C8();
    sub_1B2E816A8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v18);
    uint64_t v27 = 0;
    long long v25 = 0u;
    long long v26 = 0u;
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v19 = v24;
    sub_1B2E830C8();
    sub_1B2E81698();
    v16(v19, v4);
  }
  return sub_1B2A10B50((uint64_t)&v25, &qword_1EB7E3BD0);
}

uint64_t sub_1B2DA9AB0()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1E9C3B8B8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3B8C0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E81578();
  uint64_t v6 = sub_1B2E815C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80E08();
  sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
  uint64_t v7 = *MEMORY[0x1E4F62EF0];
  uint64_t v8 = sub_1B2E81648();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v2, v7, v8);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 0, 1, v8);
  sub_1B2E80E58();
  swift_release();
  swift_release();
  sub_1B2A10B50((uint64_t)v2, &qword_1E9C3B8B8);
  sub_1B2E81588();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1B2E80E08();
  swift_release();
  return sub_1B2A10B50((uint64_t)v5, &qword_1E9C3B8C0);
}

uint64_t sub_1B2DA9CCC(uint64_t a1)
{
  return sub_1B2DA9D04(a1, 0xD000000000000014, 0x80000001B2EA36C0, (uint64_t)&unk_1F0ADC310);
}

uint64_t sub_1B2DA9D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[1] = a4;
  sub_1B2E80A78();
  sub_1B299E158();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1B2A37738(&qword_1E9C3B8A0, MEMORY[0x1E4F62C60]);
  sub_1B29A3EB4(&qword_1E9C3B8A8);
  sub_1B2A37780(&qword_1E9C3B8B0, &qword_1E9C3B8A8);
  sub_1B2E830C8();
  sub_1B2E81698();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  return sub_1B2A10B50((uint64_t)v12, &qword_1EB7E3BD0);
}

unint64_t static ViewService.SiriRemembersView.ProcessedInteraction.databaseTableName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1B2DA9EBC()
{
  uint64_t v0 = sub_1B2E81648();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = sub_1B2E812B8();
  sub_1B2A4A2A8(v7, qword_1E9C43E28);
  sub_1B29A4B98(v7, (uint64_t)qword_1E9C43E28);
  uint64_t v8 = *MEMORY[0x1E4F62EF0];
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v9(v6, v8, v0);
  v9(v4, v8, v0);
  return sub_1B2E812A8();
}

uint64_t static ViewService.SiriRemembersView.ProcessedInteraction.persistenceConflictPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB7E2460 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1B2E812B8();
  uint64_t v3 = sub_1B29A4B98(v2, (uint64_t)qword_1E9C43E28);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t ViewService.SiriRemembersView.ProcessedInteraction.id.getter()
{
  return sub_1B2999874();
}

uint64_t ViewService.SiriRemembersView.ProcessedInteraction.date.getter()
{
  type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction();
  sub_1B2E80668();
  sub_1B2999864();
  uint64_t v0 = sub_1B2999874();

  return v1(v0);
}

uint64_t type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction()
{
  uint64_t result = qword_1EB7D8AC8;
  if (!qword_1EB7D8AC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ViewService.SiriRemembersView.ProcessedInteraction.init(id:date:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction() + 20);
  sub_1B2E80668();
  sub_1B2999864();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 32);

  return v8(v5, a3, v6);
}

uint64_t sub_1B2DAA208(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2DAA2D0(char a1)
{
  if (a1) {
    return 1702125924;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1B2DAA2F4()
{
  return sub_1B2DAA2D0(*v0);
}

uint64_t sub_1B2DAA2FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DAA208(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DAA324(uint64_t a1)
{
  unint64_t v2 = sub_1B2DAA51C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DAA360(uint64_t a1)
{
  unint64_t v2 = sub_1B2DAA51C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ViewService.SiriRemembersView.ProcessedInteraction.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C389A8);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2DAA51C();
  sub_1B2E83A38();
  sub_1B2E83688();
  if (!v1)
  {
    type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction();
    sub_1B2E80668();
    sub_1B2DAD5DC((unint64_t *)&qword_1EB7D87B0, MEMORY[0x1E4F27928]);
    sub_1B2E836D8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_1B2DAA51C()
{
  unint64_t result = qword_1E9C372B8;
  if (!qword_1E9C372B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C372B8);
  }
  return result;
}

uint64_t ViewService.SiriRemembersView.ProcessedInteraction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v19 = v4;
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  sub_1B29A3EB4(&qword_1EB7D8A60);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B299E4A0();
  uint64_t v10 = type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction();
  sub_1B2999864();
  MEMORY[0x1F4188790](v11);
  sub_1B299E4A0();
  uint64_t v14 = (uint64_t *)(v13 - v12);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2DAA51C();
  sub_1B2E83A18();
  if (v2) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  *uint64_t v14 = sub_1B2E83568();
  v14[1] = v15;
  sub_1B2DAD5DC((unint64_t *)&unk_1EB7E3BC0, MEMORY[0x1E4F27928]);
  sub_1B2E835B8();
  uint64_t v16 = sub_1B29A4A14();
  v17(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))((char *)v14 + *(int *)(v10 + 20), v8, v21);
  sub_1B2DAC74C((uint64_t)v14, a2, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  return sub_1B2DAC7A8((uint64_t)v14, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
}

uint64_t sub_1B2DAA7FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ViewService.SiriRemembersView.ProcessedInteraction.init(from:)(a1, a2);
}

uint64_t sub_1B2DAA814(void *a1)
{
  return ViewService.SiriRemembersView.ProcessedInteraction.encode(to:)(a1);
}

uint64_t sub_1B2DAA82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2DAD5DC(&qword_1EB7D8788, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);

  return MEMORY[0x1F411AC60](a1, a2, a3, v6);
}

uint64_t sub_1B2DAA8C4()
{
  sub_1B2DAD5DC(&qword_1E9C43E78, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);

  return sub_1B2E80FD8();
}

uint64_t sub_1B2DAA958()
{
  return sub_1B2E80FC8();
}

uint64_t sub_1B2DAA9D0()
{
  return sub_1B2E80FB8();
}

uint64_t sub_1B2DAAA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2DAD5DC((unint64_t *)&unk_1E9C38428, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);

  return MEMORY[0x1F411ABF8](a1, a2, a3, v6);
}

unint64_t sub_1B2DAAACC()
{
  return 0xD000000000000015;
}

uint64_t sub_1B2DAAAEC()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1B2DAAB48(v0);
}

uint64_t sub_1B2DAAB18()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2DAAB48(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DAAB90()
{
  sub_1B299D804();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1B2DAABBC(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 24) = a1;
  return result;
}

uint64_t (*sub_1B2DAABFC())()
{
  return j__swift_endAccess;
}

uint64_t ViewService.SiriRemembersView.ProcessingStateCache.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = MEMORY[0x1E4FBC868];
  *(unsigned char *)(result + 24) = 0;
  return result;
}

uint64_t ViewService.SiriRemembersView.ProcessingStateCache.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC868];
  *(unsigned char *)(v0 + 24) = 0;
  return result;
}

uint64_t ViewService.SiriRemembersView.ProcessingStateCache.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ViewService.SiriRemembersView.ProcessingStateCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

BOOL static BMSiriRemembersInteraction.ProcessingState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BMSiriRemembersInteraction.ProcessingState.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t BMSiriRemembersInteraction.ProcessingState.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t BMSiriRemembersInteraction.processingState(db:)@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = v1;
  sub_1B29A3EB4(&qword_1EB7D7530);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D8AD8);
  uint64_t v7 = sub_1B299B0F0(v6);
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  if (qword_1EB7E52B8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1B2E81FB8();
  sub_1B29A4B98(v8, (uint64_t)qword_1EB7E52A0);
  uint64_t v9 = sub_1B2E81F98();
  os_log_type_t v10 = sub_1B2E82DA8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_1B2996000, v9, v10, "ProcessingState: checking database", v11, 2u);
    MEMORY[0x1B3EB30C0](v11, -1, -1);
  }

  uint64_t result = sub_1B2A0D234(v3, (SEL *)&selRef_identifier);
  if (v13)
  {
    uint64_t v14 = result;
    uint64_t v15 = v13;
    uint64_t v16 = type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction();
    v21[3] = sub_1B2E81508();
    v21[4] = MEMORY[0x1E4F62E90];
    sub_1B29D1C70(v21);
    sub_1B2E81518();
    v20[3] = MEMORY[0x1E4FBB1A0];
    void v20[4] = MEMORY[0x1E4F62F68];
    v20[0] = v14;
    v20[1] = v15;
    v22[3] = sub_1B2E80BE8();
    v22[4] = MEMORY[0x1E4F62D00];
    sub_1B29D1C70(v22);
    sub_1B2E812D8();
    sub_1B29C4148((uint64_t)v20, &qword_1EB7E3BD0);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v21);
    sub_1B2DAD5DC(&qword_1EB7D7538, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
    sub_1B2E80978();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v22);
    sub_1B2DAC6AC();
    sub_1B2DAD5DC(&qword_1EB7D7540, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
    sub_1B2E80A08();
    uint64_t v17 = sub_1B299F318();
    v18(v17);
    char v19 = 2 * (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v16) != 1);
    uint64_t result = sub_1B29C4148(v2, (uint64_t *)&unk_1EB7D8AD8);
  }
  else
  {
    char v19 = 0;
  }
  *a1 = v19;
  return result;
}

void BMSiriRemembersInteraction.processingState(db:cache:)(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v6 = sub_1B299B0F0(v5);
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_1B2A0D234(v2, (SEL *)&selRef_identifier);
  if (!v11) {
    goto LABEL_3;
  }
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  sub_1B299D804();
  uint64_t v14 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_1B29B2DAC(v12, v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1B2E80668();
  LODWORD(v13) = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, 1, v15);
  sub_1B29C4148(v9, &qword_1EB7D87C0);
  if (v13 != 1)
  {
    if (qword_1EB7E52B8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1B2E81FB8();
    sub_1B29A4B98(v22, (uint64_t)qword_1EB7E52A0);
    uint64_t v23 = sub_1B2E81F98();
    os_log_type_t v24 = sub_1B2E82DA8();
    if (os_log_type_enabled(v23, v24))
    {
      long long v25 = (_WORD *)swift_slowAlloc();
      _WORD *v25 = 0;
      sub_1B299F5AC(&dword_1B2996000, v26, v27, "ProcessingState: ProcessingStateCache: hit");
      MEMORY[0x1B3EB30C0](v25, -1, -1);
    }

    *a2 = 2;
  }
  else
  {
LABEL_3:
    sub_1B299D804();
    if (*(unsigned char *)(a1 + 24) == 1)
    {
      if (qword_1EB7E52B8 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1B2E81FB8();
      sub_1B29A4B98(v16, (uint64_t)qword_1EB7E52A0);
      uint64_t v17 = sub_1B2E81F98();
      os_log_type_t v18 = sub_1B2E82DA8();
      if (os_log_type_enabled(v17, v18))
      {
        char v19 = (_WORD *)swift_slowAlloc();
        *char v19 = 0;
        sub_1B299F5AC(&dword_1B2996000, v20, v21, "ProcessingState: ProcessingStateCache: full coverage assuming unprocessed");
        MEMORY[0x1B3EB30C0](v19, -1, -1);
      }

      *a2 = 0;
    }
    else
    {
      BMSiriRemembersInteraction.processingState(db:)(a2);
    }
  }
}

void ViewService.SiriRemembersView.Interaction.init(interaction:biomeEventTimestamp:syncedStreamName:isLocal:devicePlatform:)(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, void *a6@<X8>, double a7@<D0>)
{
  int v83 = a4;
  unint64_t v82 = a2;
  long long v84 = a6;
  uint64_t v11 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v12 = sub_1B299B0F0(v11);
  MEMORY[0x1F4188790](v12);
  sub_1B299E4A0();
  uint64_t v15 = v14 - v13;
  uint64_t v87 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  sub_1B2999940();
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v62 - v22;
  uint64_t v24 = sub_1B2A0D234(a1, (SEL *)&selRef_identifier);
  if (!v25)
  {
    swift_bridgeObjectRelease();
    sub_1B2DAC700();
    sub_1B299E4D4();
    sub_1B29A2328();
    *(void *)uint64_t v42 = v43 + 6;
    uint64_t v44 = "BMSiriRemembersInteraction.identifier";
LABEL_17:
    *(void *)(v42 + 8) = (unint64_t)(v44 - 32) | 0x8000000000000000;
    *(unsigned char *)(v42 + 16) = 1;
    swift_willThrow();

    return;
  }
  uint64_t v26 = v25;
  uint64_t v80 = v24;
  int v81 = a5;
  uint64_t v27 = sub_1B2A0D234(a1, (SEL *)&selRef_domain);
  if (!v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2DAC700();
    sub_1B299E4D4();
    sub_1B29A2328();
    *(void *)uint64_t v42 = v45 + 2;
    uint64_t v44 = "BMSiriRemembersInteraction.domain";
    goto LABEL_17;
  }
  uint64_t v29 = v28;
  uint64_t v78 = v27;
  uint64_t v30 = sub_1B2A0D234(a1, (SEL *)&selRef_type);
  if (!v31)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2DAC700();
    sub_1B299E4D4();
    sub_1B29A2328();
    *(void *)uint64_t v42 = v46;
    uint64_t v44 = "BMSiriRemembersInteraction.type";
    goto LABEL_17;
  }
  uint64_t v76 = v30;
  uint64_t v79 = v31;
  uint64_t v32 = sub_1B2A0D234(a1, (SEL *)&selRef_appBundleId);
  if (!v33)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2DAC700();
    sub_1B299E4D4();
    sub_1B29A2328();
    *(void *)uint64_t v42 = v47 + 7;
    uint64_t v44 = "BMSiriRemembersInteraction.appBundleId";
    goto LABEL_17;
  }
  uint64_t v75 = v32;
  uint64_t v77 = v33;
  if ((objc_msgSend(a1, sel_hasIsDonatedBySiri) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2DAC700();
    sub_1B299E4D4();
    sub_1B29A2328();
    *(void *)uint64_t v42 = v48 + 11;
    uint64_t v44 = "BMSiriRemembersInteraction.isDonatedBySiri";
    goto LABEL_17;
  }
  uint64_t v74 = a3;
  id v34 = objc_msgSend(a1, sel_startDate);
  if (!v34)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v15, 1, 1, v87);
    goto LABEL_16;
  }
  uint64_t v35 = v34;
  sub_1B2E80618();

  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
  uint64_t v72 = v20;
  uint64_t v73 = v17 + 32;
  uint64_t v37 = v20;
  uint64_t v38 = v87;
  v36(v15, v37, v87);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v15, 0, 1, v38);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v15, 1, v38) == 1)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B29C4148(v15, &qword_1EB7D87C0);
    sub_1B2DAC700();
    sub_1B299E4D4();
    sub_1B29A2328();
    *(void *)uint64_t v42 = v49 + 5;
    uint64_t v44 = "BMSiriRemembersInteraction.startDate";
    goto LABEL_17;
  }
  uint64_t v71 = (void (*)(char *, uint64_t, uint64_t))v36;
  v36((uint64_t)v23, v15, v38);
  unsigned int v39 = objc_msgSend(a1, sel_hasContentHash);
  uint64_t v40 = v72;
  if (v39) {
    id v41 = objc_msgSend(a1, sel_contentHash);
  }
  else {
    id v41 = 0;
  }
  id v70 = v41;
  unsigned int v69 = objc_msgSend(a1, sel_isDonatedBySiri);
  unsigned int v68 = objc_msgSend(a1, sel_interactionSource);
  unsigned int v67 = objc_msgSend(a1, sel_direction);
  unsigned int v66 = objc_msgSend(a1, sel_status);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v40, v23, v38);
  objc_msgSend(a1, sel_durationInSeconds);
  uint64_t v51 = v50;
  uint64_t v64 = sub_1B2A0D234(a1, (SEL *)&selRef_fields);
  uint64_t v63 = v52;
  unsigned int v65 = objc_msgSend(a1, sel_userDonatorType);
  uint64_t v85 = 94;
  unint64_t v86 = 0xE100000000000000;
  sub_1B2E82518();
  sub_1B2E82518();

  swift_bridgeObjectRelease();
  uint64_t v53 = v85;
  unint64_t v82 = v86;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v38);
  uint64_t v54 = v84;
  *long long v84 = 0;
  *((unsigned char *)v54 + 8) = 1;
  v54[2] = v80;
  v54[3] = v26;
  v54[4] = v78;
  v54[5] = v29;
  uint64_t v55 = v79;
  v54[6] = v76;
  v54[7] = v55;
  uint64_t v56 = v77;
  v54[8] = v75;
  v54[9] = v56;
  *((unsigned char *)v54 + 80) = v69;
  LODWORD(v56) = v67;
  *((_DWORD *)v54 + 21) = v68;
  *((_DWORD *)v54 + 22) = v56;
  *((_DWORD *)v54 + 23) = v66;
  uint64_t v57 = (int *)type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  v71((char *)v54 + v57[13], v72, v38);
  *(void *)((char *)v54 + v57[14]) = v51;
  uint64_t v58 = (void *)((char *)v54 + v57[15]);
  uint64_t v59 = v63;
  *uint64_t v58 = v64;
  v58[1] = v59;
  *(void *)((char *)v54 + v57[16]) = v70;
  *(double *)((char *)v54 + v57[17]) = a7;
  *((unsigned char *)v54 + v57[18]) = v83 & 1;
  *(_DWORD *)((char *)v54 + v57[19]) = v81;
  *(_DWORD *)((char *)v54 + v57[20]) = v65;
  uint64_t v60 = (void *)((char *)v54 + v57[21]);
  unint64_t v61 = v82;
  uint64_t *v60 = v53;
  v60[1] = v61;
}

Swift::Void __swiftcall ViewService.SiriRemembersView.Interaction.didInsert(with:for:)(Swift::Int64 with, Swift::String_optional a2)
{
  *(void *)uint64_t v2 = with;
  *(unsigned char *)(v2 + 8) = 0;
}

uint64_t ViewService.SiriRemembersView.Interaction.updatedInteraction(from:biomeEventTimestamp:syncedStreamName:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v97 = a3;
  uint64_t v103 = a2;
  uint64_t v9 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v10 = sub_1B299B0F0(v9);
  MEMORY[0x1F4188790](v10);
  sub_1B299E4A0();
  uint64_t v100 = v12 - v11;
  uint64_t v108 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v115 = v13;
  MEMORY[0x1F4188790](v14);
  sub_1B2999940();
  uint64_t v87 = v15;
  MEMORY[0x1F4188790](v16);
  v109 = (char *)&v86 - v17;
  uint64_t v18 = (int *)type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  sub_1B2999864();
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v98 = (uint64_t)&v86 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v86 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  uint64_t v30 = (char *)&v86 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v86 - v31;
  uint64_t v107 = sub_1B2A0D234(a1, (SEL *)&selRef_fields);
  uint64_t v110 = v33;
  id v34 = *(id *)(v5 + v18[16]);
  unsigned int v35 = objc_msgSend(a1, sel_hasContentHash);
  uint64_t v92 = v22;
  if (v35) {
    id v34 = objc_msgSend(a1, sel_contentHash);
  }
  uint64_t v95 = *(void *)v5;
  int v94 = *(unsigned __int8 *)(v5 + 8);
  uint64_t v36 = *(void *)(v5 + 24);
  uint64_t v93 = *(void *)(v5 + 16);
  uint64_t v96 = v36;
  swift_bridgeObjectRetain();
  uint64_t v106 = sub_1B2A0D234(a1, (SEL *)&selRef_domain);
  uint64_t v38 = v37;
  sub_1B2DAC74C(v5, (uint64_t)v32, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  uint64_t v105 = v38;
  id v102 = v34;
  if (!v38)
  {
    uint64_t v39 = *((void *)v32 + 4);
    uint64_t v105 = *((void *)v32 + 5);
    uint64_t v106 = v39;
    swift_bridgeObjectRetain();
  }
  sub_1B2DAC7A8((uint64_t)v32, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  uint64_t v40 = sub_1B2A0D234(a1, (SEL *)&selRef_type);
  uint64_t v42 = v41;
  sub_1B2DAC74C(v5, (uint64_t)v30, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  uint64_t v104 = v42;
  if (v42)
  {
    uint64_t v101 = v40;
  }
  else
  {
    uint64_t v43 = *((void *)v30 + 7);
    uint64_t v101 = *((void *)v30 + 6);
    uint64_t v104 = v43;
    swift_bridgeObjectRetain();
  }
  sub_1B2DAC7A8((uint64_t)v30, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  uint64_t v44 = sub_1B2A0D234(a1, (SEL *)&selRef_appBundleId);
  uint64_t v46 = v45;
  sub_1B2DAC74C(v5, (uint64_t)v27, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  uint64_t v47 = v100;
  if (!v46)
  {
    uint64_t v44 = *((void *)v27 + 8);
    uint64_t v46 = *((void *)v27 + 9);
    swift_bridgeObjectRetain();
  }
  sub_1B2DAC7A8((uint64_t)v27, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  unsigned int v48 = objc_msgSend(a1, sel_hasIsDonatedBySiri);
  uint64_t v99 = v44;
  if (v48) {
    unsigned int v88 = objc_msgSend(a1, sel_isDonatedBySiri);
  }
  else {
    unsigned int v88 = *(unsigned __int8 *)(v5 + 80);
  }
  uint64_t v49 = v108;
  LODWORD(v97) = *(_DWORD *)(v5 + 84);
  if (objc_msgSend(a1, sel_direction)) {
    unsigned int v91 = objc_msgSend(a1, sel_direction);
  }
  else {
    unsigned int v91 = *(_DWORD *)(v5 + 88);
  }
  if (objc_msgSend(a1, sel_status)) {
    unsigned int v90 = objc_msgSend(a1, sel_status);
  }
  else {
    unsigned int v90 = *(_DWORD *)(v5 + 92);
  }
  id v89 = a1;
  id v50 = objc_msgSend(a1, sel_startDate);
  if (v50)
  {
    uint64_t v51 = v50;
    uint64_t v52 = v87;
    sub_1B2E80618();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 32))(v47, v52, v49);
    uint64_t v53 = 0;
  }
  else
  {
    uint64_t v53 = 1;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v47, v53, 1, v49);
  uint64_t v54 = v98;
  sub_1B2DAC74C(v5, v98, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v47, 1, v49) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v109, v54 + v18[13], v49);
    sub_1B2DAC7A8(v54, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
    sub_1B29C4148(v47, &qword_1EB7D87C0);
  }
  else
  {
    sub_1B2DAC7A8(v54, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
    (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v109, v47, v49);
  }
  uint64_t v55 = (uint64_t)v92;
  id v56 = v89;
  if (objc_msgSend(v89, sel_hasDurationInSeconds))
  {
    objc_msgSend(v56, sel_durationInSeconds);
    uint64_t v58 = v57;
  }
  else
  {
    uint64_t v58 = *(void *)(v5 + v18[14]);
  }
  uint64_t v100 = v46;
  sub_1B2DAC74C(v5, v55, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  if (!v110)
  {
    uint64_t v59 = (uint64_t *)(v55 + v18[15]);
    uint64_t v60 = v59[1];
    uint64_t v107 = *v59;
    uint64_t v110 = v60;
    swift_bridgeObjectRetain();
  }
  sub_1B2DAC7A8(v55, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  char v61 = *(unsigned char *)(v5 + v18[18]);
  int v62 = *(_DWORD *)(v5 + v18[19]);
  LODWORD(v98) = objc_msgSend(v56, sel_userDonatorType);
  uint64_t v63 = (uint64_t *)(v5 + v18[21]);
  uint64_t v65 = *v63;
  unint64_t v64 = v63[1];
  uint64_t v113 = 94;
  unint64_t v114 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  sub_1B2E82518();
  uint64_t v67 = v113;
  unint64_t v66 = v114;
  uint64_t v113 = v65;
  unint64_t v114 = v64;
  uint64_t v111 = v67;
  unint64_t v112 = v66;
  sub_1B29C3640();
  if (sub_1B2E83038())
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v113 = v65;
    unint64_t v114 = v64;
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v65 = v113;
    unint64_t v64 = v114;
  }
  uint64_t v69 = v107;
  uint64_t v68 = v108;
  uint64_t v70 = v96;
  char v71 = v94;
  uint64_t v72 = v93;
  uint64_t v74 = v105;
  uint64_t v73 = v106;
  uint64_t v75 = v104;
  char v76 = v88;
  int v77 = v97;
  unsigned int v78 = v91;
  unsigned int v79 = v90;
  int v80 = v98;
  *(void *)a4 = v95;
  *(unsigned char *)(a4 + 8) = v71;
  *(void *)(a4 + 16) = v72;
  *(void *)(a4 + 24) = v70;
  *(void *)(a4 + 32) = v73;
  *(void *)(a4 + 40) = v74;
  *(void *)(a4 + 48) = v101;
  *(void *)(a4 + 56) = v75;
  uint64_t v81 = v100;
  *(void *)(a4 + 64) = v99;
  *(void *)(a4 + 72) = v81;
  *(unsigned char *)(a4 + 80) = v76;
  *(_DWORD *)(a4 + 84) = v77;
  *(_DWORD *)(a4 + 88) = v78;
  *(_DWORD *)(a4 + 92) = v79;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v115 + 32))(a4 + v18[13], v109, v68);
  *(void *)(a4 + v18[14]) = v58;
  int v83 = (uint64_t *)(a4 + v18[15]);
  uint64_t v84 = v110;
  uint64_t *v83 = v69;
  v83[1] = v84;
  *(void *)(a4 + v18[16]) = v102;
  *(double *)(a4 + v18[17]) = a5;
  *(unsigned char *)(a4 + v18[18]) = v61;
  *(_DWORD *)(a4 + v18[19]) = v62;
  *(_DWORD *)(a4 + v18[20]) = v80;
  uint64_t v85 = (uint64_t *)(a4 + v18[21]);
  *uint64_t v85 = v65;
  v85[1] = v64;
  return result;
}

uint64_t sub_1B2DAC1CC()
{
  return sub_1B2E81288();
}

uint64_t sub_1B2DAC1E4()
{
  return sub_1B2E81258();
}

uint64_t sub_1B2DAC1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2DAD5DC(&qword_1EB7D8A40, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);

  return MEMORY[0x1F411ABF8](a1, a2, a3, v6);
}

uint64_t ViewService.SiriRemembersView.Entity.init(entity:createdAt:updatedAt:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1B2A0D234(a1, (SEL *)&selRef_identifier);
  if (!v9)
  {
    sub_1B2DAC700();
    sub_1B299E4D4();
    *(void *)uint64_t v30 = 0xD000000000000035;
    unint64_t v31 = 0x80000001B2EA3C00;
LABEL_17:
    *(void *)(v30 + 8) = v31;
    *(unsigned char *)(v30 + 16) = 1;
    swift_willThrow();

    uint64_t v32 = sub_1B2E80668();
    sub_1B2999864();
    id v34 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v34(a3, v32);
    return ((uint64_t (*)(uint64_t, uint64_t))v34)(a2, v32);
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  uint64_t v37 = a2;
  uint64_t v12 = sub_1B2A0D234(a1, (SEL *)&selRef_type);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    sub_1B2DAC700();
    sub_1B299E4D4();
    *(void *)uint64_t v30 = 0xD00000000000002FLL;
    unint64_t v31 = 0x80000001B2EA3C40;
    goto LABEL_17;
  }
  uint64_t v14 = v13;
  uint64_t v35 = v12;
  uint64_t v15 = sub_1B2A0D234(a1, (SEL *)&selRef_fields);
  if (v16) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = 32123;
  }
  uint64_t v36 = a3;
  if (v16) {
    unint64_t v18 = v16;
  }
  else {
    unint64_t v18 = 0xE200000000000000;
  }
  uint64_t v19 = sub_1B2A0D234(a1, (SEL *)&selRef_fieldsTokens);
  unint64_t v21 = v20;

  *(void *)a4 = 0;
  if (v21) {
    uint64_t v22 = v19;
  }
  else {
    uint64_t v22 = 0;
  }
  *(unsigned char *)(a4 + 8) = 1;
  unint64_t v23 = 0xE000000000000000;
  if (v21) {
    unint64_t v23 = v21;
  }
  *(void *)(a4 + 16) = v10;
  *(void *)(a4 + 24) = v11;
  *(void *)(a4 + 32) = v35;
  *(void *)(a4 + 40) = v14;
  *(void *)(a4 + 48) = v17;
  *(void *)(a4 + 56) = v18;
  *(void *)(a4 + 64) = v22;
  *(void *)(a4 + 72) = v23;
  uint64_t v24 = type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  uint64_t v25 = a4 + *(int *)(v24 + 36);
  uint64_t v26 = sub_1B2E80668();
  sub_1B2999864();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
  v28(v25, v37, v26);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v28)(a4 + *(int *)(v24 + 40), v36, v26);
}

uint64_t sub_1B2DAC4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2DAD5DC((unint64_t *)&unk_1EB7D76B0, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);

  return MEMORY[0x1F411ABF8](a1, a2, a3, v6);
}

uint64_t sub_1B2DAC564()
{
  sub_1B2DAD590();

  return sub_1B2E80FD8();
}

uint64_t sub_1B2DAC5C8()
{
  return sub_1B2E80FC8();
}

uint64_t sub_1B2DAC610()
{
  return sub_1B2E80FB8();
}

uint64_t sub_1B2DAC658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2DAD544();

  return MEMORY[0x1F411ABF8](a1, a2, a3, v6);
}

unint64_t sub_1B2DAC6AC()
{
  unint64_t result = qword_1EB7D7528;
  if (!qword_1EB7D7528)
  {
    sub_1B29C3588(&qword_1EB7D7530);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D7528);
  }
  return result;
}

unint64_t sub_1B2DAC700()
{
  unint64_t result = qword_1E9C43E40;
  if (!qword_1E9C43E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43E40);
  }
  return result;
}

uint64_t sub_1B2DAC74C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1B2999864();
  uint64_t v4 = sub_1B2999874();
  v5(v4);
  return a2;
}

uint64_t sub_1B2DAC7A8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1B2DAC800()
{
  return sub_1B2DAD5DC(&qword_1E9C43E48, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
}

uint64_t sub_1B2DAC848()
{
  return sub_1B2DAD5DC(&qword_1E9C43E50, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
}

uint64_t sub_1B2DAC890()
{
  return sub_1B2DAD5DC(&qword_1EB7D7538, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
}

unint64_t sub_1B2DAC8DC()
{
  unint64_t result = qword_1E9C43E58;
  if (!qword_1E9C43E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43E58);
  }
  return result;
}

uint64_t sub_1B2DAC928()
{
  return sub_1B2DAD5DC(&qword_1EB7D8A38, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);
}

uint64_t sub_1B2DAC970()
{
  return sub_1B2DAD5DC(&qword_1EB7D8A30, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);
}

uint64_t sub_1B2DAC9B8()
{
  return sub_1B2DAD5DC(&qword_1EB7D76A8, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);
}

uint64_t sub_1B2DACA00()
{
  return sub_1B2DAD5DC(&qword_1EB7D9D50, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);
}

unint64_t sub_1B2DACA4C()
{
  unint64_t result = qword_1E9C43E60;
  if (!qword_1E9C43E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43E60);
  }
  return result;
}

unint64_t sub_1B2DACA9C()
{
  unint64_t result = qword_1EB7D8A48;
  if (!qword_1EB7D8A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8A48);
  }
  return result;
}

unint64_t sub_1B2DACAEC()
{
  unint64_t result = qword_1EB7D8AC0;
  if (!qword_1EB7D8AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8AC0);
  }
  return result;
}

uint64_t sub_1B2DACB38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B2DAAB18();
  *a1 = result;
  return result;
}

uint64_t sub_1B2DACB68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2DAAB90();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B2DACB98(char *a1)
{
  return sub_1B2DAABBC(*a1);
}

uint64_t *_s20ProcessedInteractionVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1B2E80668();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t _s20ProcessedInteractionVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1B2E80668();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *_s20ProcessedInteractionVwcp(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1B2E80668();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *_s20ProcessedInteractionVwca(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *_s20ProcessedInteractionVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *_s20ProcessedInteractionVwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t _s20ProcessedInteractionVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2DACF70);
}

uint64_t sub_1B2DACF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1B2E80668();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, a2, v8);
  }
}

uint64_t _s20ProcessedInteractionVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2DAD00C);
}

uint64_t sub_1B2DAD00C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1B2E80668();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1B2DAD08C()
{
  uint64_t result = sub_1B2E80668();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ViewService.SiriRemembersView.ProcessingStateCache()
{
  return self;
}

uint64_t method lookup function for ViewService.SiriRemembersView.ProcessingStateCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ViewService.SiriRemembersView.ProcessingStateCache);
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.cache.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.cache.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.cache.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.fullCoverage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.fullCoverage.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.fullCoverage.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

unsigned char *_s15ProcessingStateOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DAD318);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BMSiriRemembersInteraction.ProcessingState()
{
  return &type metadata for BMSiriRemembersInteraction.ProcessingState;
}

unsigned char *_s20ProcessedInteractionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DAD41CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20ProcessedInteractionV10CodingKeysOMa()
{
  return &_s20ProcessedInteractionV10CodingKeysON;
}

unint64_t sub_1B2DAD458()
{
  unint64_t result = qword_1E9C43E68;
  if (!qword_1E9C43E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43E68);
  }
  return result;
}

unint64_t sub_1B2DAD4A8()
{
  unint64_t result = qword_1EB7D8780;
  if (!qword_1EB7D8780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8780);
  }
  return result;
}

unint64_t sub_1B2DAD4F8()
{
  unint64_t result = qword_1EB7D8778;
  if (!qword_1EB7D8778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8778);
  }
  return result;
}

unint64_t sub_1B2DAD544()
{
  unint64_t result = qword_1EB7D8A50;
  if (!qword_1EB7D8A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8A50);
  }
  return result;
}

unint64_t sub_1B2DAD590()
{
  unint64_t result = qword_1E9C43E70;
  if (!qword_1E9C43E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43E70);
  }
  return result;
}

uint64_t sub_1B2DAD5DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ViewService.SiriRemembersView.SourceStreams.init(syncedStreamName:)@<X0>(void *a1@<X8>)
{
  sub_1B2DB4790();
  sub_1B2E82518();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t ViewService.SiriRemembersView.Interaction.init(rowid:id:domain:type:bundleId:isDonatedBySiri:donorStream:direction:handlingStatus:startDate:durationSeconds:fields:contentHash:biomeEventTimestamp:isLocal:devicePlatform:userDonatorType:sourceStreams:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, long long a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, int a20,int a21,uint64_t *a22)
{
  uint64_t v25 = *a22;
  uint64_t v26 = a22[1];
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a12;
  *(void *)(a9 + 72) = a13;
  *(unsigned char *)(a9 + 80) = a14;
  *(void *)(a9 + 84) = *(void *)((char *)&a14 + 4);
  *(_DWORD *)(a9 + 92) = HIDWORD(a14);
  uint64_t v27 = (int *)type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  uint64_t v28 = a9 + v27[13];
  sub_1B2E80668();
  sub_1B2999864();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 32))(v28, a15);
  *(double *)(a9 + v27[14]) = a10;
  unint64_t v31 = (void *)(a9 + v27[15]);
  *unint64_t v31 = a16;
  v31[1] = a17;
  *(void *)(a9 + v27[16]) = a18;
  *(double *)(a9 + v27[17]) = a11;
  *(unsigned char *)(a9 + v27[18]) = a19;
  *(_DWORD *)(a9 + v27[19]) = a20;
  *(_DWORD *)(a9 + v27[20]) = a21;
  uint64_t v32 = (void *)(a9 + v27[21]);
  *uint64_t v32 = v25;
  v32[1] = v26;
  return result;
}

uint64_t ViewService.SiriRemembersView.SourceStreams.adding(syncedStreamName:)@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  sub_1B2E82518();
  sub_1B2E82518();
  sub_1B29C3640();
  if (sub_1B2E83038())
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a1 = v4;
  a1[1] = v3;
  return result;
}

uint64_t static ViewService.SiriRemembersView.Interaction.databaseDateEncodingStrategy.getter()
{
  return sub_1B2DB06E0();
}

uint64_t ViewService.SiriRemembersView.Entity.init(rowid:id:type:fields:fieldsTokens:createdAt:updatedAt:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  uint64_t v14 = type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  uint64_t v15 = a9 + *(int *)(v14 + 36);
  uint64_t v16 = sub_1B2E80668();
  sub_1B2999864();
  unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
  v20(v15, a12, v16);
  uint64_t v18 = a9 + *(int *)(v14 + 40);

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(v18, a13, v16);
}

uint64_t static ViewService.SiriRemembersView.Entity.databaseDateEncodingStrategy.getter()
{
  return sub_1B2DB06E0();
}

uint64_t ViewService.siriRemembersView.getter@<X0>(uint64_t a1@<X8>)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  sub_1B2DB4654();
  uint64_t v4 = (void *)sub_1B2E82348();
  v11[0] = 0;
  id v5 = objc_msgSend(v3, sel_requestAssertionForViewName_error_, v4, v11);

  id v6 = v11[0];
  if (v5)
  {
    *(void *)(a1 + *(int *)(type metadata accessor for ViewService.SiriRemembersView(0) + 20)) = v5;
    id v7 = v6;
    id v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_viewArtifactURL);
    sub_1B2E80448();

    return swift_unknownObjectRelease();
  }
  else
  {
    id v10 = v11[0];
    sub_1B2E80388();

    return swift_willThrow();
  }
}

uint64_t static ViewService.SiriRemembersView.name.getter()
{
  return sub_1B2DB4654();
}

uint64_t ViewService.SiriRemembersView.databaseURL.getter()
{
  sub_1B2E80498();
  sub_1B2999864();
  uint64_t v0 = sub_1B2999874();

  return v1(v0);
}

uint64_t BMSiriRemembersInteractionInteractionDirection.description.getter(uint64_t a1)
{
  return sub_1B2DAE058(a1, MEMORY[0x1E4F4FC00]);
}

uint64_t sub_1B2DADB98()
{
  return sub_1B2E82808();
}

uint64_t sub_1B2DADC28()
{
  return sub_1B2E827A8();
}

uint64_t sub_1B2DADCA8()
{
  return BMSiriRemembersInteractionInteractionDirection.description.getter(*v0);
}

uint64_t BMSiriRemembersInteractionInteractionStatus.description.getter(uint64_t a1)
{
  return sub_1B2DAE058(a1, MEMORY[0x1E4F4FC10]);
}

uint64_t sub_1B2DADCC8()
{
  return sub_1B2E82808();
}

uint64_t sub_1B2DADD58()
{
  return sub_1B2E827A8();
}

uint64_t sub_1B2DADDD8()
{
  return BMSiriRemembersInteractionInteractionStatus.description.getter(*v0);
}

uint64_t BMSiriRemembersInteractionInteractionSource.description.getter(uint64_t a1)
{
  return sub_1B2DAE058(a1, MEMORY[0x1E4F4FC08]);
}

uint64_t sub_1B2DADDF8()
{
  return sub_1B2E82808();
}

uint64_t sub_1B2DADE88()
{
  return sub_1B2E827A8();
}

uint64_t sub_1B2DADF08()
{
  return BMSiriRemembersInteractionInteractionSource.description.getter(*v0);
}

uint64_t BMDeviceMetadataDevicePlatform.description.getter(uint64_t a1)
{
  return sub_1B2DAE058(a1, MEMORY[0x1E4F4FBC8]);
}

uint64_t sub_1B2DADF28()
{
  return sub_1B2E82808();
}

uint64_t sub_1B2DADFB8()
{
  return sub_1B2E827A8();
}

uint64_t sub_1B2DAE038()
{
  return BMDeviceMetadataDevicePlatform.description.getter(*v0);
}

uint64_t BMSiriRemembersInteractionUserDonatorType.description.getter(uint64_t a1)
{
  return sub_1B2DAE058(a1, MEMORY[0x1E4F4FC18]);
}

uint64_t sub_1B2DAE058(uint64_t a1, uint64_t (*a2)(void))
{
  id v2 = (id)a2();
  uint64_t v3 = sub_1B2E82378();

  return v3;
}

uint64_t sub_1B2DAE0A8()
{
  return sub_1B2E82808();
}

uint64_t sub_1B2DAE138()
{
  return sub_1B2E827A8();
}

uint64_t sub_1B2DAE1B8()
{
  return BMSiriRemembersInteractionUserDonatorType.description.getter(*v0);
}

uint64_t ViewService.SiriRemembersView.SourceStreams.rawValue.getter()
{
  return sub_1B2999874();
}

uint64_t ViewService.SiriRemembersView.SourceStreams.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ViewService.SiriRemembersView.SourceStreams.rawValue.modify())(void)
{
  return nullsub_1;
}

uint64_t ViewService.SiriRemembersView.SourceStreams.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t static ViewService.SiriRemembersView.SourceStreams.encoded(syncedStreamName:)()
{
  sub_1B2DB4790();
  sub_1B2E82518();
  return v1;
}

uint64_t type metadata accessor for ViewService.SiriRemembersView.Interaction(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1EB7E50F8);
}

uint64_t sub_1B2DAE2A8()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2DAE308()
{
  return sub_1B2E82788();
}

uint64_t sub_1B2DAE358@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = ViewService.SiriRemembersView.SourceStreams.init(rawValue:)(*a1, a1[1], v5);
  uint64_t v4 = v5[1];
  *a2 = v5[0];
  a2[1] = v4;
  return result;
}

uint64_t sub_1B2DAE398@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ViewService.SiriRemembersView.SourceStreams.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2DAE3C0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1B2DB0564();
  unint64_t v5 = sub_1B2DB44E4();
  uint64_t v6 = MEMORY[0x1E4F62F70];

  return MEMORY[0x1F411B018](a1, a2, v4, v5, v6);
}

uint64_t sub_1B2DAE430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2DB05B0();
  unint64_t v7 = sub_1B2DB44E4();
  uint64_t v8 = MEMORY[0x1E4F62F70];

  return MEMORY[0x1F411B028](a1, a2, a3, v6, v7, v8);
}

uint64_t sub_1B2DAE4A8(uint64_t a1)
{
  unint64_t v2 = sub_1B2DB4498();

  return MEMORY[0x1F411AFE0](a1, v2);
}

uint64_t sub_1B2DAE4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2DB4498();

  return MEMORY[0x1F411AFF0](a1, a2, a3, v6);
}

uint64_t static ViewService.SiriRemembersView.Interaction.databaseTableName.getter()
{
  return 0x7463617265746E69;
}

uint64_t sub_1B2DAE568(uint64_t a1)
{
  return sub_1B2DB0624(a1, MEMORY[0x1E4F62E20], qword_1E9C372A0);
}

uint64_t type metadata accessor for ViewService.SiriRemembersView.Entity(uint64_t a1)
{
  return sub_1B29DAD3C(a1, qword_1EB7E5108);
}

uint64_t sub_1B2DAE5B0(uint64_t a1)
{
  return sub_1B2DB0624(a1, MEMORY[0x1E4F62E10], qword_1EB7E29C8);
}

uint64_t static ViewService.SiriRemembersView.Interaction.databaseDateDecodingStrategy.getter()
{
  return sub_1B2DB06E0();
}

uint64_t sub_1B2DAE610()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1EB7D7500);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C37248);
  sub_1B2A4A2A8(v3, qword_1E9C37250);
  sub_1B29A4B98(v3, (uint64_t)qword_1E9C37250);
  type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  uint64_t v4 = sub_1B2E80858();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v4);
  sub_1B2DB051C(&qword_1EB7D8A30, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  sub_1B2DACAEC();
  sub_1B2E809A8();
  return sub_1B2DB4530((uint64_t)v2);
}

uint64_t static ViewService.SiriRemembersView.Interaction.interactionEntities.getter()
{
  return sub_1B2A42360();
}

uint64_t sub_1B2DAE778()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1E9C37248);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C37F00);
  sub_1B2A4A2A8(v4, qword_1E9C37F18);
  v8[1] = sub_1B29A4B98(v4, (uint64_t)qword_1E9C37F18);
  type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  if (qword_1E9C37F08 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1B29A4B98(v0, (uint64_t)qword_1E9C37250);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  if (qword_1EB7D7520 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D7670);
  sub_1B29A4B98(v6, (uint64_t)qword_1EB7D7508);
  sub_1B2DB051C(&qword_1EB7D8A30, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  sub_1B29D22C4(&qword_1E9C37EE8, &qword_1E9C37248);
  sub_1B29D22C4((unint64_t *)&unk_1E9C37EF0, (uint64_t *)&unk_1EB7D7670);
  sub_1B2E809B8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static ViewService.SiriRemembersView.Interaction.entities.getter()
{
  return sub_1B2A42360();
}

uint64_t ViewService.SiriRemembersView.Interaction.rowid.getter()
{
  return *(void *)v0;
}

uint64_t ViewService.SiriRemembersView.Interaction.rowid.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ViewService.SiriRemembersView.Interaction.rowid.modify())(void)
{
  return nullsub_1;
}

uint64_t ViewService.SiriRemembersView.Interaction.id.getter()
{
  return sub_1B2999874();
}

uint64_t ViewService.SiriRemembersView.Interaction.domain.getter()
{
  return sub_1B2999874();
}

uint64_t ViewService.SiriRemembersView.Interaction.type.getter()
{
  return sub_1B2999874();
}

uint64_t ViewService.SiriRemembersView.Interaction.bundleId.getter()
{
  return sub_1B2999874();
}

uint64_t ViewService.SiriRemembersView.Interaction.isDonatedBySiri.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t ViewService.SiriRemembersView.Interaction.donorStream.getter()
{
  return *(unsigned int *)(v0 + 84);
}

uint64_t ViewService.SiriRemembersView.Interaction.direction.getter()
{
  return *(unsigned int *)(v0 + 88);
}

uint64_t ViewService.SiriRemembersView.Interaction.handlingStatus.getter()
{
  return *(unsigned int *)(v0 + 92);
}

uint64_t ViewService.SiriRemembersView.Interaction.startDate.getter()
{
  type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  sub_1B2E80668();
  sub_1B2999864();
  uint64_t v0 = sub_1B2999874();

  return v1(v0);
}

double ViewService.SiriRemembersView.Interaction.durationSeconds.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for ViewService.SiriRemembersView.Interaction(0) + 56));
}

uint64_t ViewService.SiriRemembersView.Interaction.fields.getter()
{
  return sub_1B2999874();
}

uint64_t ViewService.SiriRemembersView.Interaction.contentHash.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ViewService.SiriRemembersView.Interaction(0) + 64));
}

double ViewService.SiriRemembersView.Interaction.biomeEventTimestamp.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for ViewService.SiriRemembersView.Interaction(0) + 68));
}

uint64_t ViewService.SiriRemembersView.Interaction.isLocal.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ViewService.SiriRemembersView.Interaction(0) + 72));
}

uint64_t ViewService.SiriRemembersView.Interaction.devicePlatform.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for ViewService.SiriRemembersView.Interaction(0) + 76));
}

uint64_t ViewService.SiriRemembersView.Interaction.userDonatorType.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for ViewService.SiriRemembersView.Interaction(0) + 80));
}

uint64_t ViewService.SiriRemembersView.Interaction.sourceStreams.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for ViewService.SiriRemembersView.Interaction(0) + 84));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2DAED0C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6469776F72 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 25705 && a2 == 0xE200000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 1701869940 && a2 == 0xE400000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6574616E6F447369 && a2 == 0xEF69726953794264;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x727453726F6E6F64 && a2 == 0xEB000000006D6165;
              if (v11 || (sub_1B2E837A8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL;
                if (v12 || (sub_1B2E837A8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  BOOL v13 = a1 == 0x676E696C646E6168 && a2 == 0xEE00737574617453;
                  if (v13 || (sub_1B2E837A8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
                    if (v14 || (sub_1B2E837A8() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x6E6F697461727564 && a2 == 0xEF73646E6F636553;
                      if (v15 || (sub_1B2E837A8() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        BOOL v16 = a1 == 0x73646C656966 && a2 == 0xE600000000000000;
                        if (v16 || (sub_1B2E837A8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          BOOL v17 = a1 == 0x48746E65746E6F63 && a2 == 0xEB00000000687361;
                          if (v17 || (sub_1B2E837A8() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else if (a1 == 0xD000000000000013 && a2 == 0x80000001B2E8EE70 {
                                 || (sub_1B2E837A8() & 1) != 0)
                          }
                          {
                            swift_bridgeObjectRelease();
                            return 13;
                          }
                          else
                          {
                            BOOL v18 = a1 == 0x6C61636F4C7369 && a2 == 0xE700000000000000;
                            if (v18 || (sub_1B2E837A8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 14;
                            }
                            else
                            {
                              BOOL v19 = a1 == 0x6C50656369766564 && a2 == 0xEE006D726F667461;
                              if (v19 || (sub_1B2E837A8() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 15;
                              }
                              else
                              {
                                BOOL v20 = a1 == 0x616E6F4472657375 && a2 == 0xEF65707954726F74;
                                if (v20 || (sub_1B2E837A8() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 16;
                                }
                                else if (a1 == 0x7453656372756F73 && a2 == 0xED0000736D616572)
                                {
                                  swift_bridgeObjectRelease();
                                  return 17;
                                }
                                else
                                {
                                  char v22 = sub_1B2E837A8();
                                  swift_bridgeObjectRelease();
                                  if (v22) {
                                    return 17;
                                  }
                                  else {
                                    return 18;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B2DAF4D0()
{
  return 18;
}

unint64_t sub_1B2DAF4D8(char a1)
{
  unint64_t result = 0x6469776F72;
  switch(a1)
  {
    case 1:
      unint64_t result = 25705;
      break;
    case 2:
      unint64_t result = 0x6E69616D6F64;
      break;
    case 3:
      unint64_t result = 1701869940;
      break;
    case 4:
      unint64_t result = 0x6449656C646E7562;
      break;
    case 5:
      unint64_t result = 0x6574616E6F447369;
      break;
    case 6:
      unint64_t result = 0x727453726F6E6F64;
      break;
    case 7:
      unint64_t result = 0x6F69746365726964;
      break;
    case 8:
      unint64_t result = 0x676E696C646E6168;
      break;
    case 9:
      unint64_t result = 0x7461447472617473;
      break;
    case 10:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 11:
      unint64_t result = 0x73646C656966;
      break;
    case 12:
      unint64_t result = 0x48746E65746E6F63;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    case 14:
      unint64_t result = 0x6C61636F4C7369;
      break;
    case 15:
      unint64_t result = 0x6C50656369766564;
      break;
    case 16:
      unint64_t result = 0x616E6F4472657375;
      break;
    case 17:
      unint64_t result = 0x7453656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2DAF73C()
{
  return sub_1B2DAF4D8(*v0);
}

uint64_t sub_1B2DAF744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DAED0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DAF76C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2DAF4D0();
  *a1 = result;
  return result;
}

uint64_t sub_1B2DAF794(uint64_t a1)
{
  unint64_t v2 = sub_1B2DB04D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DAF7D0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DB04D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ViewService.SiriRemembersView.Interaction.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1B29A3EB4((uint64_t *)&unk_1E9C37B48);
  sub_1B299D278();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  BOOL v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2DB04D0();
  sub_1B2E83A38();
  LOBYTE(v22) = 0;
  sub_1B2DB477C();
  sub_1B2E83678();
  if (!v2)
  {
    sub_1B2DB45A8(1);
    sub_1B2DB45A8(2);
    sub_1B2DB45A8(3);
    sub_1B2DB45A8(4);
    sub_1B2DB46C0(5);
    LODWORD(v22) = v3[21];
    uint64_t v11 = sub_1B2DB4678(6);
    type metadata accessor for BMSiriRemembersInteractionInteractionSource(v11);
    sub_1B2DB051C(&qword_1EB7D9528, type metadata accessor for BMSiriRemembersInteractionInteractionSource);
    sub_1B29A3468();
    LODWORD(v22) = v3[22];
    uint64_t v12 = sub_1B2DB4678(7);
    type metadata accessor for BMSiriRemembersInteractionInteractionDirection(v12);
    sub_1B2DB051C((unint64_t *)&unk_1E9C37AA0, type metadata accessor for BMSiriRemembersInteractionInteractionDirection);
    sub_1B29A3468();
    LODWORD(v22) = v3[23];
    uint64_t v13 = sub_1B2DB4678(8);
    type metadata accessor for BMSiriRemembersInteractionInteractionStatus(v13);
    sub_1B2DB051C(&qword_1E9C37A98, type metadata accessor for BMSiriRemembersInteractionInteractionStatus);
    sub_1B29A3468();
    BOOL v14 = (int *)type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
    LOBYTE(v22) = 9;
    sub_1B2E80668();
    sub_1B2DB051C((unint64_t *)&qword_1EB7D87B0, MEMORY[0x1E4F27928]);
    sub_1B2E836D8();
    sub_1B2DB46E4(10);
    LOBYTE(v22) = 11;
    sub_1B2DB477C();
    sub_1B2E83628();
    LOBYTE(v22) = 12;
    sub_1B2E836C8();
    sub_1B2DB46E4(13);
    sub_1B2DB46C0(14);
    LODWORD(v22) = *(_DWORD *)((char *)v3 + v14[19]);
    uint64_t v15 = sub_1B2DB4678(15);
    type metadata accessor for BMDeviceMetadataDevicePlatform(v15);
    sub_1B2DB051C(&qword_1E9C37AC8, type metadata accessor for BMDeviceMetadataDevicePlatform);
    sub_1B29A3468();
    LODWORD(v22) = *(_DWORD *)((char *)v3 + v14[20]);
    uint64_t v16 = sub_1B2DB4678(16);
    type metadata accessor for BMSiriRemembersInteractionUserDonatorType(v16);
    sub_1B2DB051C(&qword_1E9C37AD0, type metadata accessor for BMSiriRemembersInteractionUserDonatorType);
    sub_1B29A3468();
    BOOL v17 = (uint64_t *)((char *)v3 + v14[21]);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v22 = v19;
    uint64_t v23 = v18;
    char v24 = 17;
    sub_1B2DB0564();
    sub_1B2E836D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

void ViewService.SiriRemembersView.Interaction.init(from:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1B2E80668();
  sub_1B299D278();
  uint64_t v30 = v7;
  uint64_t v31 = v6;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v10 = v9 - v8;
  sub_1B29A3EB4(&qword_1EB7E2C50);
  sub_1B299D278();
  MEMORY[0x1F4188790](v11);
  sub_1B299E4A0();
  uint64_t v32 = (int *)type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v12);
  sub_1B2DB4614(v13, v29);
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DB04D0();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
  }
  else
  {
    uint64_t v14 = sub_1B2E83558();
    sub_1B2DB4768(v14, v15);
    *(void *)(v1 + 16) = sub_1B29A0FC0(v16);
    *(void *)(v1 + 24) = v17;
    *(void *)(v1 + 32) = sub_1B29A0FC0(2);
    *(void *)(v1 + 40) = v18;
    *(void *)(v1 + 48) = sub_1B29A0FC0(3);
    *(void *)(v1 + 56) = v19;
    *(void *)(v1 + 64) = sub_1B29A0FC0(4);
    *(void *)(v1 + 72) = v20;
    LOBYTE(v33) = 5;
    *(unsigned char *)(v1 + 80) = sub_1B2E83578() & 1;
    type metadata accessor for BMSiriRemembersInteractionInteractionSource(0);
    sub_1B2DB051C(&qword_1EB7E2BF8, type metadata accessor for BMSiriRemembersInteractionInteractionSource);
    sub_1B29A2338();
    *(_DWORD *)(v1 + 84) = v33;
    type metadata accessor for BMSiriRemembersInteractionInteractionDirection(0);
    sub_1B2DB051C(&qword_1EB7E2C20, type metadata accessor for BMSiriRemembersInteractionInteractionDirection);
    sub_1B29A2338();
    *(_DWORD *)(v1 + 88) = v33;
    type metadata accessor for BMSiriRemembersInteractionInteractionStatus(0);
    sub_1B2DB051C(&qword_1EB7E2C08, type metadata accessor for BMSiriRemembersInteractionInteractionStatus);
    sub_1B29A2338();
    *(_DWORD *)(v1 + 92) = v33;
    LOBYTE(v33) = 9;
    sub_1B2DB051C((unint64_t *)&unk_1EB7E3BC0, MEMORY[0x1E4F27928]);
    sub_1B2E835B8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v1 + v32[13], v10, v31);
    sub_1B2DB4708(10);
    *(void *)(v1 + v32[14]) = v21;
    sub_1B2DB45CC(11);
    uint64_t v22 = sub_1B2E83508();
    uint64_t v23 = (uint64_t *)(v1 + v32[15]);
    *uint64_t v23 = v22;
    v23[1] = v24;
    sub_1B2DB45CC(12);
    *(void *)(v1 + v32[16]) = sub_1B2E835A8();
    sub_1B2DB4708(13);
    *(void *)(v1 + v32[17]) = v25;
    sub_1B2DB45CC(14);
    *(unsigned char *)(v1 + v32[18]) = sub_1B2E83578() & 1;
    type metadata accessor for BMDeviceMetadataDevicePlatform(0);
    sub_1B2DB051C((unint64_t *)&unk_1EB7E2898, type metadata accessor for BMDeviceMetadataDevicePlatform);
    sub_1B2DB45E4();
    *(_DWORD *)(v1 + v32[19]) = v33;
    type metadata accessor for BMSiriRemembersInteractionUserDonatorType(0);
    sub_1B2DB051C((unint64_t *)&unk_1EB7E39F0, type metadata accessor for BMSiriRemembersInteractionUserDonatorType);
    sub_1B2DB45E4();
    *(_DWORD *)(v1 + v32[20]) = v33;
    sub_1B2DB05B0();
    sub_1B2E835B8();
    uint64_t v26 = sub_1B299FC90();
    v27(v26);
    uint64_t v28 = (void *)(v1 + v32[21]);
    *uint64_t v28 = v33;
    v28[1] = v34;
    sub_1B2DB178C(v1, v5, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
    sub_1B2DB17E8(v1, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  }
  sub_1B29998C8();
}

void sub_1B2DB0388()
{
}

uint64_t sub_1B2DB03A0(void *a1)
{
  return ViewService.SiriRemembersView.Interaction.encode(to:)(a1);
}

uint64_t sub_1B2DB03B8()
{
  return 0x7463617265746E69;
}

uint64_t sub_1B2DB03D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2DB051C(&qword_1EB7E3BB0, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);

  return MEMORY[0x1F411AC60](a1, a2, a3, v6);
}

uint64_t static ViewService.SiriRemembersView.Entity.databaseTableName.getter()
{
  return 0x7365697469746E65;
}

uint64_t sub_1B2DB0488(uint64_t a1)
{
  return sub_1B2DB0624(a1, MEMORY[0x1E4F62E20], qword_1EB7D7690);
}

uint64_t type metadata accessor for ViewService.SiriRemembersView(uint64_t a1)
{
  return sub_1B29DAD3C(a1, qword_1EB7E5388);
}

unint64_t sub_1B2DB04D0()
{
  unint64_t result = qword_1EB7E29B0;
  if (!qword_1EB7E29B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E29B0);
  }
  return result;
}

uint64_t sub_1B2DB051C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2DB0564()
{
  unint64_t result = qword_1EB7D87C8;
  if (!qword_1EB7D87C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D87C8);
  }
  return result;
}

unint64_t sub_1B2DB05B0()
{
  unint64_t result = qword_1EB7E29F8;
  if (!qword_1EB7E29F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E29F8);
  }
  return result;
}

uint64_t sub_1B2DB05FC(uint64_t a1)
{
  return sub_1B2DB0624(a1, MEMORY[0x1E4F62E10], qword_1EB7D8AE8);
}

uint64_t sub_1B2DB0624(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v4 = a2(0);
  sub_1B2A4A2A8(v4, a3);
  sub_1B29A4B98(v4, (uint64_t)a3);
  sub_1B299998C();
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 104);

  return v6();
}

uint64_t static ViewService.SiriRemembersView.Entity.databaseDateDecodingStrategy.getter()
{
  return sub_1B2DB06E0();
}

uint64_t sub_1B2DB06E0()
{
  sub_1B299B3FC();
  if (!v3) {
    swift_once();
  }
  uint64_t v4 = v2(0);
  sub_1B29A4B98(v4, v1);
  sub_1B299998C();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 16);

  return v6(v0);
}

uint64_t sub_1B2DB0768()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1EB7D7500);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C43ED0);
  sub_1B2A4A2A8(v3, qword_1E9C43E80);
  sub_1B29A4B98(v3, (uint64_t)qword_1E9C43E80);
  type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  uint64_t v4 = sub_1B2E80858();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v4);
  sub_1B2DB051C(&qword_1EB7D9D50, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);
  sub_1B2DACAEC();
  sub_1B2E809A8();
  return sub_1B2DB4530((uint64_t)v2);
}

uint64_t static ViewService.SiriRemembersView.Entity.interactionEntities.getter()
{
  return sub_1B2A42360();
}

uint64_t sub_1B2DB08D0()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1E9C43ED0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B29A3EB4((uint64_t *)&unk_1E9C43ED8);
  sub_1B2A4A2A8(v4, qword_1E9C43E98);
  v8[1] = sub_1B29A4B98(v4, (uint64_t)qword_1E9C43E98);
  type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  if (qword_1E9C38CC8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1B29A4B98(v0, (uint64_t)qword_1E9C43E80);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  if (qword_1E9C38CE8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1E9C43EE8);
  sub_1B29A4B98(v6, (uint64_t)qword_1E9C43EB0);
  sub_1B2DB051C(&qword_1EB7D9D50, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);
  sub_1B29D22C4(&qword_1E9C43F38, &qword_1E9C43ED0);
  sub_1B29D22C4((unint64_t *)&unk_1E9C43F40, (uint64_t *)&unk_1E9C43EE8);
  sub_1B2E809B8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static ViewService.SiriRemembersView.Entity.interactions.getter()
{
  return sub_1B2A42360();
}

uint64_t (*ViewService.SiriRemembersView.Entity.rowid.modify())(void)
{
  return nullsub_1;
}

uint64_t ViewService.SiriRemembersView.Entity.createdAt.getter()
{
  type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  sub_1B2E80668();
  sub_1B2999864();
  uint64_t v0 = sub_1B2999874();

  return v1(v0);
}

uint64_t ViewService.SiriRemembersView.Entity.updatedAt.getter()
{
  type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  sub_1B2E80668();
  sub_1B2999864();
  uint64_t v0 = sub_1B2999874();

  return v1(v0);
}

uint64_t sub_1B2DB0C88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6469776F72 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 25705 && a2 == 0xE200000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1701869940 && a2 == 0xE400000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x73646C656966 && a2 == 0xE600000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6F5473646C656966 && a2 == 0xEC000000736E656BLL;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x4164657461657263 && a2 == 0xE900000000000074;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x4164657461647075 && a2 == 0xE900000000000074)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = sub_1B2E837A8();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B2DB0F50(char a1)
{
  uint64_t result = 0x6469776F72;
  switch(a1)
  {
    case 1:
      uint64_t result = 25705;
      break;
    case 2:
      uint64_t result = 1701869940;
      break;
    case 3:
      uint64_t result = 0x73646C656966;
      break;
    case 4:
      uint64_t result = 0x6F5473646C656966;
      break;
    case 5:
      unsigned int v3 = 1634038371;
      goto LABEL_8;
    case 6:
      unsigned int v3 = 1633972341;
LABEL_8:
      uint64_t result = v3 | 0x4164657400000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2DB101C()
{
  return sub_1B2DB0F50(*v0);
}

uint64_t sub_1B2DB1024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DB0C88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DB104C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DB12BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DB1088(uint64_t a1)
{
  unint64_t v2 = sub_1B2DB12BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void ViewService.SiriRemembersView.Entity.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(qword_1EB7D76C0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29A0498();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2DB12BC();
  sub_1B2E83A38();
  sub_1B2E83678();
  if (!v0)
  {
    sub_1B299B138();
    sub_1B299B138();
    sub_1B299B138();
    sub_1B299B138();
    type metadata accessor for ViewService.SiriRemembersView.Entity(0);
    sub_1B2E80668();
    sub_1B2DB051C((unint64_t *)&qword_1EB7D87B0, MEMORY[0x1E4F27928]);
    sub_1B2DB4684();
    sub_1B2DB4684();
  }
  sub_1B29A15FC();
  v4();
  sub_1B29998C8();
}

unint64_t sub_1B2DB12BC()
{
  unint64_t result = qword_1EB7D7548;
  if (!qword_1EB7D7548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D7548);
  }
  return result;
}

void ViewService.SiriRemembersView.Entity.init(from:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v28 = v4;
  sub_1B2E80668();
  sub_1B299D278();
  uint64_t v30 = v6;
  uint64_t v31 = v5;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  BOOL v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v27 - v10;
  uint64_t v29 = sub_1B29A3EB4(&qword_1EB7D9550);
  sub_1B299D278();
  MEMORY[0x1F4188790](v12);
  sub_1B299E4A0();
  uint64_t v33 = type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v13);
  sub_1B2DB4614(v14, v27[0]);
  uint64_t v15 = v3[3];
  uint64_t v32 = v3;
  sub_1B29AEC7C(v3, v15);
  sub_1B2DB12BC();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v32);
  }
  else
  {
    char v16 = v11;
    uint64_t v17 = sub_1B2E83558();
    sub_1B2DB4768(v17, v18);
    *((void *)v1 + 2) = sub_1B2DB4638();
    *((void *)v1 + 3) = v19;
    *((void *)v1 + 4) = sub_1B2DB4638();
    *((void *)v1 + 5) = v20;
    *((void *)v1 + 6) = sub_1B2DB4638();
    *((void *)v1 + 7) = v21;
    *((void *)v1 + 8) = sub_1B2DB4638();
    *((void *)v1 + 9) = v22;
    v27[1] = sub_1B2DB051C((unint64_t *)&unk_1EB7E3BC0, MEMORY[0x1E4F27928]);
    sub_1B2E835B8();
    uint64_t v23 = v31;
    uint64_t v24 = v16;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v25(&v1[*(int *)(v33 + 36)], v24, v31);
    sub_1B2E835B8();
    sub_1B29A15FC();
    v26();
    v25(&v1[*(int *)(v33 + 40)], v9, v23);
    sub_1B2DB178C((uint64_t)v1, v28, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Entity);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v32);
    sub_1B2DB17E8((uint64_t)v1, (void (*)(void))type metadata accessor for ViewService.SiriRemembersView.Entity);
  }
  sub_1B29998C8();
}

uint64_t sub_1B2DB178C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1B2999864();
  uint64_t v4 = sub_1B2999874();
  v5(v4);
  return a2;
}

uint64_t sub_1B2DB17E8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_1B2DB1840()
{
}

void sub_1B2DB1858()
{
}

uint64_t sub_1B2DB1870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2DB051C(&qword_1EB7D87F8, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);

  return MEMORY[0x1F411AC60](a1, a2, a3, v6);
}

unint64_t static ViewService.SiriRemembersView.InteractionEntity.databaseTableName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1B2DB1924(uint64_t a1)
{
  return sub_1B2DB1944(a1, qword_1E9CAF920);
}

uint64_t sub_1B2DB1934(uint64_t a1)
{
  return sub_1B2DB1944(a1, qword_1EB7F3350);
}

uint64_t sub_1B2DB1944(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1B2E81508();
  sub_1B2A4A2A8(v3, a2);
  sub_1B29A4B98(v3, (uint64_t)a2);
  sub_1B2DB2264();
  return sub_1B2E81528();
}

uint64_t sub_1B2DB19C0()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1EB7D7500);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4((uint64_t *)&unk_1E9C43EE8);
  sub_1B2A4A2A8(v3, qword_1E9C43EB0);
  sub_1B29A4B98(v3, (uint64_t)qword_1E9C43EB0);
  type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  sub_1B29A3EB4(&qword_1EB7D89F8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B2EC00A0;
  if (qword_1E9C38CD8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1B2E81508();
  uint64_t v6 = sub_1B29A4B98(v5, (uint64_t)qword_1E9CAF920);
  uint64_t v7 = MEMORY[0x1E4F62E70];
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v7;
  uint64_t v8 = sub_1B29D1C70((uint64_t *)(v4 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v8, v6, v5);
  sub_1B2E80868();
  uint64_t v9 = sub_1B2E80858();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 0, 1, v9);
  sub_1B2DACAEC();
  sub_1B2DB051C(&qword_1EB7D8A30, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  sub_1B2E809C8();
  return sub_1B2DB4530((uint64_t)v2);
}

uint64_t static ViewService.SiriRemembersView.InteractionEntity.interaction.getter()
{
  return sub_1B2A42360();
}

uint64_t sub_1B2DB1C04()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1EB7D7500);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D7670);
  sub_1B2A4A2A8(v3, qword_1EB7D7508);
  sub_1B29A4B98(v3, (uint64_t)qword_1EB7D7508);
  type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  sub_1B29A3EB4(&qword_1EB7D89F8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B2EC00A0;
  if (qword_1EB7D7680 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1B2E81508();
  uint64_t v6 = sub_1B29A4B98(v5, (uint64_t)qword_1EB7F3350);
  uint64_t v7 = MEMORY[0x1E4F62E70];
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v7;
  uint64_t v8 = sub_1B29D1C70((uint64_t *)(v4 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v8, v6, v5);
  sub_1B2E80868();
  uint64_t v9 = sub_1B2E80858();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 0, 1, v9);
  sub_1B2DACAEC();
  sub_1B2DB051C(&qword_1EB7D9D50, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);
  sub_1B2E809C8();
  return sub_1B2DB4530((uint64_t)v2);
}

uint64_t static ViewService.SiriRemembersView.InteractionEntity.entity.getter()
{
  return sub_1B2A42360();
}

uint64_t ViewService.SiriRemembersView.InteractionEntity.interactionRowid.getter()
{
  return *(void *)v0;
}

uint64_t ViewService.SiriRemembersView.InteractionEntity.entityRowid.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ViewService.SiriRemembersView.InteractionEntity.parameter.getter()
{
  return sub_1B2999874();
}

uint64_t ViewService.SiriRemembersView.InteractionEntity.init(interactionRowid:entityRowid:parameter:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_1B2DB1E90(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001B2E95D30 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x6F52797469746E65 && a2 == 0xEB00000000646977;
    if (v5 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6574656D61726170 && a2 == 0xE900000000000072)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B2DB2000(char a1)
{
  if (!a1) {
    return 0xD000000000000010;
  }
  if (a1 == 1) {
    return 0x6F52797469746E65;
  }
  return 0x6574656D61726170;
}

uint64_t sub_1B2DB2068()
{
  return sub_1B2DB2000(*v0);
}

uint64_t sub_1B2DB2070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DB1E90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DB2098(uint64_t a1)
{
  unint64_t v2 = sub_1B2DB2264();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DB20D4(uint64_t a1)
{
  unint64_t v2 = sub_1B2DB2264();

  return MEMORY[0x1F41862B0](a1, v2);
}

void ViewService.SiriRemembersView.InteractionEntity.encode(to:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7D8A68);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DB2264();
  sub_1B2E83A38();
  sub_1B2E836F8();
  if (!v0)
  {
    sub_1B2E836F8();
    sub_1B299B138();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1B29998C8();
}

unint64_t sub_1B2DB2264()
{
  unint64_t result = qword_1EB7D8AB0;
  if (!qword_1EB7D8AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8AB0);
  }
  return result;
}

void ViewService.SiriRemembersView.InteractionEntity.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4((uint64_t *)&unk_1E9C43EF8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2DB2264();
  sub_1B2E83A18();
  if (!v0)
  {
    uint64_t v6 = sub_1B2E835D8();
    uint64_t v7 = sub_1B2E835D8();
    uint64_t v8 = sub_1B2E83568();
    uint64_t v10 = v9;
    sub_1B29A15FC();
    v11();
    *uint64_t v4 = v6;
    v4[1] = v7;
    v4[2] = v8;
    v4[3] = v10;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  sub_1B29998C8();
}

unint64_t sub_1B2DB243C()
{
  unint64_t result = qword_1EB7E29E0;
  if (!qword_1EB7E29E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E29E0);
  }
  return result;
}

unint64_t sub_1B2DB248C()
{
  unint64_t result = qword_1EB7E29E8;
  if (!qword_1EB7E29E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E29E8);
  }
  return result;
}

void sub_1B2DB24D8()
{
}

void sub_1B2DB24F0()
{
}

unint64_t sub_1B2DB2508()
{
  return 0xD000000000000013;
}

uint64_t sub_1B2DB2528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2DB444C();

  return MEMORY[0x1F411AC60](a1, a2, a3, v6);
}

uint64_t *_s17SiriRemembersViewVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B2E80498();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t _s17SiriRemembersViewVwxx(uint64_t a1)
{
  uint64_t v2 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_unknownObjectRelease();
}

uint64_t _s17SiriRemembersViewVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_unknownObjectRetain();
  return a1;
}

uint64_t _s17SiriRemembersViewVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t _s17SiriRemembersViewVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s17SiriRemembersViewVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_unknownObjectRelease();
  return a1;
}

uint64_t _s17SiriRemembersViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2DB28F0);
}

uint64_t sub_1B2DB28F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B2E80498();
  sub_1B299B768();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_1B2A4AA58(*(void *)(a1 + *(int *)(a3 + 20)));
  }

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v6);
}

uint64_t _s17SiriRemembersViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2DB2984);
}

void sub_1B2DB2984(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1B2E80498();
  sub_1B299B768();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1B2DB2A0C()
{
  uint64_t result = sub_1B2E80498();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ViewService.SiriRemembersView.SiriRemembersViewError()
{
}

void type metadata accessor for ViewService.SiriRemembersView.SourceStreams()
{
}

void *_s17SiriRemembersViewV11InteractionVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v11 = *(uint64_t *)((char *)a2 + 84);
    *(_DWORD *)(a1 + 92) = *((_DWORD *)a2 + 23);
    uint64_t v12 = a3[13];
    uint64_t v27 = (uint64_t)a2 + v12;
    uint64_t v28 = a1 + v12;
    *(void *)(a1 + 84) = v11;
    uint64_t v13 = sub_1B2E80668();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v28, v27, v13);
    uint64_t v15 = a3[15];
    *(void *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    char v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *char v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[17];
    *(void *)((char *)v4 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    *(void *)((char *)v4 + v19) = *(uint64_t *)((char *)a2 + v19);
    uint64_t v20 = a3[19];
    *((unsigned char *)v4 + a3[18]) = *((unsigned char *)a2 + a3[18]);
    *(_DWORD *)((char *)v4 + v20) = *(_DWORD *)((char *)a2 + v20);
    uint64_t v21 = a3[21];
    *(_DWORD *)((char *)v4 + a3[20]) = *(_DWORD *)((char *)a2 + a3[20]);
    uint64_t v22 = (void *)((char *)v4 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s17SiriRemembersViewV11InteractionVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s17SiriRemembersViewV11InteractionVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 84);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  uint64_t v11 = a3[13];
  uint64_t v25 = a2 + v11;
  uint64_t v26 = a1 + v11;
  *(void *)(a1 + 84) = v10;
  uint64_t v12 = sub_1B2E80668();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v26, v25, v12);
  uint64_t v14 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v15 = (void *)(a1 + v14);
  char v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(_DWORD *)(a1 + v19) = *(_DWORD *)(a2 + v19);
  uint64_t v20 = a3[21];
  *(_DWORD *)(a1 + a3[20]) = *(_DWORD *)(a2 + a3[20]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17SiriRemembersViewV11InteractionVwca(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(_DWORD *)(a1 + 84) = *((_DWORD *)a2 + 21);
  *(_DWORD *)(a1 + 88) = *((_DWORD *)a2 + 22);
  *(_DWORD *)(a1 + 92) = *((_DWORD *)a2 + 23);
  uint64_t v7 = a3[13];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
  uint64_t v11 = a3[15];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
  *(void *)(a1 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
  *(unsigned char *)(a1 + a3[18]) = *((unsigned char *)a2 + a3[18]);
  *(_DWORD *)(a1 + a3[19]) = *(_DWORD *)((char *)a2 + a3[19]);
  *(_DWORD *)(a1 + a3[20]) = *(_DWORD *)((char *)a2 + a3[20]);
  uint64_t v14 = a3[21];
  uint64_t v15 = (void *)(a1 + v14);
  char v16 = (uint64_t *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17SiriRemembersViewV11InteractionVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 84);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  uint64_t v9 = a3[13];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)(a1 + 84) = v8;
  uint64_t v12 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(_DWORD *)(a1 + v15) = *(_DWORD *)(a2 + v15);
  uint64_t v16 = a3[21];
  *(_DWORD *)(a1 + a3[20]) = *(_DWORD *)(a2 + a3[20]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  return a1;
}

uint64_t _s17SiriRemembersViewV11InteractionVwta(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 84) = *(void *)(a2 + 84);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  uint64_t v10 = a3[13];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(_DWORD *)(a1 + v20) = *(_DWORD *)(a2 + v20);
  uint64_t v21 = a3[21];
  *(_DWORD *)(a1 + a3[20]) = *(_DWORD *)(a2 + a3[20]);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17SiriRemembersViewV11InteractionVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2DB32F8);
}

uint64_t sub_1B2DB32F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_1B2A4AA58(*(void *)(a1 + 24));
  }
  uint64_t v7 = sub_1B2E80668();
  uint64_t v8 = a1 + *(int *)(a3 + 52);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v8, a2, v7);
}

uint64_t _s17SiriRemembersViewV11InteractionVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2DB3388);
}

void sub_1B2DB3388()
{
  sub_1B2C37CE4();
  if (v3)
  {
    *(void *)(v1 + 24) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_1B2E80668();
    uint64_t v6 = v1 + *(int *)(v4 + 52);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v6, v0, v0, v5);
  }
}

uint64_t sub_1B2DB33FC()
{
  uint64_t result = sub_1B2E80668();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ViewService.SiriRemembersView.Interaction.Columns()
{
}

void *_s17SiriRemembersViewV6EntityVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = a2[9];
    uint64_t v11 = *(int *)(a3 + 36);
    uint64_t v16 = (uint64_t)a2 + v11;
    uint64_t v17 = a1 + v11;
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    uint64_t v12 = sub_1B2E80668();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v17, v16, v12);
    v13((uint64_t)v4 + *(int *)(a3 + 40), (uint64_t)a2 + *(int *)(a3 + 40), v12);
  }
  return v4;
}

uint64_t _s17SiriRemembersViewV6EntityVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1B2E80668();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 40);

  return v8(v6, v5);
}

uint64_t _s17SiriRemembersViewV6EntityVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v14 = a1 + v9;
  uint64_t v10 = a2 + v9;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v11 = sub_1B2E80668();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v14, v10, v11);
  v12(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v11);
  return a1;
}

uint64_t _s17SiriRemembersViewV6EntityVwca(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 40), (uint64_t)a2 + *(int *)(a3 + 40), v10);
  return a1;
}

uint64_t _s17SiriRemembersViewV6EntityVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  uint64_t v11 = sub_1B2E80668();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v11);
  return a1;
}

uint64_t _s17SiriRemembersViewV6EntityVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1B2E80668();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40);
  v14(v11, v12, v13);
  v14(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v13);
  return a1;
}

uint64_t _s17SiriRemembersViewV6EntityVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2DB3B48);
}

uint64_t sub_1B2DB3B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_1B2A4AA58(*(void *)(a1 + 24));
  }
  uint64_t v7 = sub_1B2E80668();
  uint64_t v8 = a1 + *(int *)(a3 + 36);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v8, a2, v7);
}

uint64_t _s17SiriRemembersViewV6EntityVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2DB3BD8);
}

void sub_1B2DB3BD8()
{
  sub_1B2C37CE4();
  if (v3)
  {
    *(void *)(v1 + 24) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_1B2E80668();
    uint64_t v6 = v1 + *(int *)(v4 + 36);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v6, v0, v0, v5);
  }
}

uint64_t sub_1B2DB3C4C()
{
  uint64_t result = sub_1B2E80668();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ViewService.SiriRemembersView.Entity.Columns()
{
}

uint64_t _s17SiriRemembersViewV17InteractionEntityVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s17SiriRemembersViewV17InteractionEntityVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s17SiriRemembersViewV17InteractionEntityVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17SiriRemembersViewV17InteractionEntityVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for ViewService.SiriRemembersView.InteractionEntity()
{
}

void type metadata accessor for ViewService.SiriRemembersView.InteractionEntity.Columns()
{
}

unsigned char *_s17SiriRemembersViewV17InteractionEntityV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DB3EB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17SiriRemembersViewV17InteractionEntityV10CodingKeysOMa()
{
  return &_s17SiriRemembersViewV17InteractionEntityV10CodingKeysON;
}

unsigned char *_s17SiriRemembersViewV6EntityV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DB3FB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17SiriRemembersViewV6EntityV10CodingKeysOMa()
{
  return &_s17SiriRemembersViewV6EntityV10CodingKeysON;
}

uint64_t _s17SiriRemembersViewV11InteractionV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEF)
  {
    if (a2 + 17 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 17) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 18;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v5 = v6 - 18;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s17SiriRemembersViewV11InteractionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *uint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DB4144);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17SiriRemembersViewV11InteractionV10CodingKeysOMa()
{
  return &_s17SiriRemembersViewV11InteractionV10CodingKeysON;
}

unint64_t sub_1B2DB4180()
{
  unint64_t result = qword_1E9C43F08;
  if (!qword_1E9C43F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43F08);
  }
  return result;
}

unint64_t sub_1B2DB41D0()
{
  unint64_t result = qword_1E9C43F10;
  if (!qword_1E9C43F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43F10);
  }
  return result;
}

unint64_t sub_1B2DB4220()
{
  unint64_t result = qword_1E9C43F18;
  if (!qword_1E9C43F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43F18);
  }
  return result;
}

unint64_t sub_1B2DB4270()
{
  unint64_t result = qword_1EB7D89F0;
  if (!qword_1EB7D89F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D89F0);
  }
  return result;
}

unint64_t sub_1B2DB42C0()
{
  unint64_t result = qword_1EB7D8AB8;
  if (!qword_1EB7D8AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8AB8);
  }
  return result;
}

unint64_t sub_1B2DB4310()
{
  unint64_t result = qword_1EB7D87E0;
  if (!qword_1EB7D87E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D87E0);
  }
  return result;
}

unint64_t sub_1B2DB4360()
{
  unint64_t result = qword_1EB7D87D8;
  if (!qword_1EB7D87D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D87D8);
  }
  return result;
}

unint64_t sub_1B2DB43B0()
{
  unint64_t result = qword_1EB7E28B0;
  if (!qword_1EB7E28B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E28B0);
  }
  return result;
}

unint64_t sub_1B2DB4400()
{
  unint64_t result = qword_1EB7E29B8;
  if (!qword_1EB7E29B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E29B8);
  }
  return result;
}

unint64_t sub_1B2DB444C()
{
  unint64_t result = qword_1E9C43F20;
  if (!qword_1E9C43F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43F20);
  }
  return result;
}

unint64_t sub_1B2DB4498()
{
  unint64_t result = qword_1E9C43F28;
  if (!qword_1E9C43F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43F28);
  }
  return result;
}

unint64_t sub_1B2DB44E4()
{
  unint64_t result = qword_1EB7E29F0;
  if (!qword_1EB7E29F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E29F0);
  }
  return result;
}

uint64_t sub_1B2DB4530(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7D7500);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B2DB45A8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 88) = a1;
  return sub_1B2E83688();
}

uint64_t sub_1B2DB45CC@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_1B2DB45E4()
{
  return sub_1B2E835B8();
}

void sub_1B2DB4614(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2 = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
}

uint64_t sub_1B2DB4638()
{
  return sub_1B2E83568();
}

uint64_t sub_1B2DB4654()
{
  return 0x656D655269726973;
}

uint64_t sub_1B2DB4678@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return 0;
}

uint64_t sub_1B2DB4684()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2DB46C0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 88) = a1;
  return sub_1B2E83698();
}

uint64_t sub_1B2DB46E4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 88) = a1;
  return sub_1B2E836A8();
}

uint64_t sub_1B2DB4708@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return sub_1B2E83588();
}

uint64_t sub_1B2DB4754()
{
  return v0;
}

uint64_t sub_1B2DB4768(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t sub_1B2DB4790()
{
  return sub_1B2E82518();
}

void sub_1B2DB47B0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = a1;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    unint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 56);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    while (v4 < *(void *)(v3 + 16))
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(v5 - 2);
      uint64_t v9 = *(v5 - 1);
      uint64_t v10 = v5[1];
      uint64_t v12 = v5[2];
      uint64_t v11 = v5[3];
      uint64_t v14 = v5[4];
      uint64_t v13 = v5[5];
      uint64_t v15 = v5[6];
      uint64_t v16 = v5[7];
      uint64_t v27 = *v5;
      uint64_t v28 = *(v5 - 3);
      v31[0] = v28;
      v31[1] = v8;
      v31[2] = v9;
      v31[3] = v27;
      v31[4] = v10;
      v31[5] = v12;
      v31[6] = v11;
      uint64_t v26 = v11;
      v31[7] = v14;
      v31[8] = v13;
      v31[9] = v15;
      v31[10] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v29 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v17 = sub_1B2DB5DF0(v31, a2, a3);
      if (v30)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      uint64_t v6 = v7;
      if (v17)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v32 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1B29C00B8();
          uint64_t v6 = v32;
        }
        unint64_t v19 = *(void *)(v6 + 16);
        unint64_t v20 = v19 + 1;
        if (v19 >= *(void *)(v6 + 24) >> 1)
        {
          sub_1B29C00B8();
          unint64_t v20 = v19 + 1;
          uint64_t v6 = v32;
        }
        *(void *)(v6 + 16) = v20;
        uint64_t v21 = (void *)(v6 + 88 * v19);
        v21[4] = v28;
        uint64_t v21[5] = v8;
        v21[6] = v9;
        v21[7] = v27;
        v21[8] = v29;
        v21[9] = v12;
        v21[10] = v26;
        v21[11] = v14;
        v21[12] = v13;
        v21[13] = v15;
        v21[14] = v16;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      ++v4;
      v5 += 11;
      uint64_t v3 = a1;
      if (v23 == v4) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B2DB4A30(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2CC3374();
    uint64_t v4 = v7;
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v5;
  swift_retain();
  sub_1B2DB63A0(v8, a2);
  *a1 = v4;
  return swift_release_n();
}

void sub_1B2DB4AD0()
{
}

void sub_1B2DB4B14()
{
}

uint64_t sub_1B2DB4B58()
{
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  (*(void (**)(void))(*(void *)v0 + 232))();
  sub_1B29A15DC();
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = &unk_1F0AC13C0;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EC01E0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EF0810;
  *(void *)(v0 + 72) = 0x80000001B2EA3D60;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  sub_1B29B2124(v3, v4);
  return v0;
}

uint64_t sub_1B2DB4C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = (void *)(a2 + 32);
  sub_1B299E178();
  if (*(void *)(a2 + 32))
  {
    uint64_t v7 = sub_1B29B2540(115, 0xE100000000000000);
    swift_endAccess();
    if (v7)
    {
      sub_1B299D804();
      uint64_t v8 = *(void *)(v7 + 24);
      if (v8)
      {
        uint64_t v9 = *(void *)(v8 + 16);
        uint64_t v10 = *(void *)(v8 + 24);
        uint64_t v11 = qword_1EB7D96B0;
        swift_retain();
        swift_bridgeObjectRetain();
        if (v11 != -1) {
          swift_once();
        }
        uint64_t v12 = qword_1EB7F3378;
        if (*(void *)(qword_1EB7F3378 + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_1B29DB060(v9, v10, v13, v14, v15, v16, v17, v18, v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, v34, v35[0], v35[1], v35[2], v36, v37,
                  v38,
                  v39,
                  v40,
                  v41,
                  v42,
                  v43,
                  v44);
          if (v20)
          {
            sub_1B29C3B84(*(void *)(v12 + 56) + 40 * v19, (uint64_t)&v31);
          }
          else
          {
            uint64_t v33 = 0;
            long long v31 = 0u;
            long long v32 = 0u;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v33 = 0;
          long long v31 = 0u;
          long long v32 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v32 + 1))
        {
          sub_1B29D1D20(&v31, (uint64_t)v35);
          uint64_t v21 = v36;
          uint64_t v22 = v37;
          sub_1B29AEC7C(v35, v36);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 32))(a1, v8, v21, v22);
          swift_release();
          swift_release();
          return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v35);
        }
        swift_release();
        swift_release();
        sub_1B2A349F4((uint64_t)&v31);
      }
      else
      {
        swift_release();
      }
    }
  }
  else
  {
    swift_endAccess();
  }
  sub_1B299E178();
  if (!*v6)
  {
    uint64_t result = swift_endAccess();
    goto LABEL_26;
  }
  uint64_t v24 = sub_1B29B2540(112, 0xE100000000000000);
  uint64_t result = swift_endAccess();
  if (v24)
  {
    sub_1B299E178();
    if (*v6)
    {
      uint64_t v25 = sub_1B29A0FE4();
      swift_endAccess();
      if (v25)
      {
        sub_1B299D804();
        uint64_t v26 = *(void *)(v24 + 16);
        swift_bridgeObjectRetain();
        swift_release();
        uint64_t v27 = *(void *)(v26 + 16);
        swift_bridgeObjectRelease();
        if (v27)
        {
          uint64_t result = swift_release();
LABEL_29:
          char v28 = 6;
          goto LABEL_27;
        }
        sub_1B299D804();
        uint64_t v29 = *(void *)(v25 + 16);
        swift_bridgeObjectRetain();
        swift_release();
        uint64_t v30 = *(void *)(v29 + 16);
        uint64_t result = swift_bridgeObjectRelease();
        if (v30) {
          goto LABEL_29;
        }
        goto LABEL_26;
      }
    }
    else
    {
      swift_endAccess();
    }
    uint64_t result = swift_release();
  }
LABEL_26:
  char v28 = 2;
LABEL_27:
  *a3 = v28;
  return result;
}

uint64_t sub_1B2DB4EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (((1 << *(unsigned char *)(a6 + 64)) & 0x1FA) == 0)
  {
LABEL_26:
    uint64_t result = 0;
    *(void *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 88) = xmmword_1B2EC01D0;
    *(unsigned char *)(a1 + 104) = 0;
    return result;
  }
  uint64_t v8 = (void *)(a6 + 32);
  sub_1B2DB76D4();
  if (*(void *)(a6 + 32))
  {
    uint64_t v9 = sub_1B29B2540(115, 0xE100000000000000);
    swift_endAccess();
    if (v9)
    {
      sub_1B299D804();
      uint64_t v10 = *(void *)(v9 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v9 = sub_1B2DDC660(v10);
    }
  }
  else
  {
    swift_endAccess();
    uint64_t v9 = 0;
  }
  sub_1B2DB76D4();
  if (!*v8)
  {
    swift_endAccess();
LABEL_13:
    uint64_t v11 = 0;
    goto LABEL_14;
  }
  uint64_t v11 = sub_1B29B2540(112, 0xE100000000000000);
  if (!v11)
  {
    swift_endAccess();
    goto LABEL_14;
  }
  swift_endAccess();
  sub_1B299D804();
  uint64_t v12 = *(void *)(v11 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v12 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v11 = sub_1B2DDC660(v12);
LABEL_14:
  sub_1B2DB76D4();
  if (*v8 && (uint64_t v13 = sub_1B29A0FE4()) != 0)
  {
    uint64_t v14 = v13;
    swift_endAccess();
    sub_1B299D804();
    uint64_t v15 = *(void *)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    if (*(void *)(v15 + 16))
    {
      uint64_t v16 = sub_1B2DDC660(v15);
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v16 = 0;
LABEL_20:
  sub_1B29A3EB4(&qword_1E9C37F48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC89A0;
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v11;
  *(void *)(inited + 48) = v16;
  char v18 = sub_1B2DE35E4(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2D98F60();
  if (v18)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB7E30F0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1B2E81FB8();
    sub_1B29A4B98(v19, (uint64_t)qword_1EB7E30D8);
    char v20 = sub_1B2E81F98();
    os_log_type_t v21 = sub_1B2E82DB8();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_1B2996000, v20, v21, "Sort operator must have subject and predicate args", v22, 2u);
      MEMORY[0x1B3EB30C0](v22, -1, -1);
    }

    goto LABEL_26;
  }
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = v11;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = v16;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 80) = 0;
  uint64_t result = 1;
  *(unsigned char *)(a1 + 104) = 32;
  return result;
}

void sub_1B2DB5240(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)sub_1B2DC1414(112, 0xE100000000000000);
  uint64_t v5 = (void *)sub_1B2DC1414(0x6465727071, 0xE500000000000000);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  v121 = v4;
  sub_1B2DB47B0(v6, v4, v5);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v119 = v1;
  if (v9)
  {
    uint64_t v116 = a1;
    swift_bridgeObjectRetain();
    uint64_t v11 = (uint64_t *)(v8 + 56);
    uint64_t v12 = MEMORY[0x1E4FBC860];
    double v13 = 0.0;
    do
    {
      uint64_t v136 = v9;
      uint64_t v14 = *(v11 - 2);
      uint64_t v15 = *(v11 - 1);
      uint64_t v16 = *v11;
      uint64_t v17 = v11[1];
      uint64_t v18 = v11[6];
      uint64_t v19 = v11[7];
      uint64_t v139 = *(v11 - 3);
      uint64_t v140 = v14;
      uint64_t v141 = v15;
      uint64_t v142 = v16;
      uint64_t v143 = v17;
      long long v144 = *((_OWORD *)v11 + 1);
      long long v145 = *((_OWORD *)v11 + 2);
      uint64_t v146 = v18;
      uint64_t v147 = v19;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1B2DB601C(v121, v5, v13, 0.0);
      double v13 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = v139;
      uint64_t v22 = v141;
      uint64_t v23 = v142;
      long long v24 = v144;
      uint64_t v130 = *((void *)&v145 + 1);
      uint64_t v133 = v145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B7480();
        uint64_t v12 = v28;
      }
      unint64_t v25 = *(void *)(v12 + 16);
      uint64_t v26 = v12;
      if (v25 >= *(void *)(v12 + 24) >> 1)
      {
        sub_1B29B7480();
        uint64_t v26 = v29;
      }
      *(void *)(v26 + 16) = v25 + 1;
      uint64_t v12 = v26;
      uint64_t v27 = v26 + 88 * v25;
      *(void *)(v27 + 32) = v21;
      *(void *)(v27 + 40) = v14;
      *(void *)(v27 + 48) = v22;
      *(void *)(v27 + 56) = v23;
      *(void *)(v27 + 64) = v17;
      *(_OWORD *)(v27 + 72) = v24;
      *(void *)(v27 + 88) = v133;
      *(void *)(v27 + 96) = v130;
      *(void *)(v27 + 104) = v18;
      *(void *)(v27 + 112) = v19;
      v11 += 11;
      uint64_t v9 = v136 - 1;
    }
    while (v136 != 1);
    swift_bridgeObjectRelease();
    a1 = v116;
    uint64_t v2 = v119;
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  else
  {
    double v13 = 0.0;
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  uint64_t v115 = v12;
  swift_bridgeObjectRelease();
  uint64_t v30 = v121[2];
  swift_bridgeObjectRelease();
  if (v30)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = v5[2];
    swift_bridgeObjectRelease();
    if (!v31)
    {
      uint64_t v32 = sub_1B2DC1414(115, 0xE100000000000000);
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        uint64_t v117 = a1;
        sub_1B29C00B8();
        uint64_t v34 = v10;
        uint64_t v35 = (uint64_t *)(v32 + 40);
        while (_Records_GDEntityPredicate_records)
        {
          if (*((uint64_t *)_Records_GDEntityPredicate_records + 1) >= 2674) {
            goto LABEL_72;
          }
          if (*((uint64_t *)_Records_GDEntityPredicate_records + 2) >= 3558) {
            goto LABEL_73;
          }
          uint64_t v137 = v33;
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_76;
          }
          uint64_t v37 = *(v35 - 1);
          uint64_t v36 = *v35;
          swift_bridgeObjectRetain_n();
          uint64_t v38 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_75;
          }
          uint64_t v40 = v38;
          uint64_t v41 = v39;
          sub_1B2E82538();
          swift_bridgeObjectRelease();
          uint64_t v139 = v37;
          uint64_t v140 = v36;
          swift_bridgeObjectRetain_n();
          sub_1B2E82518();
          sub_1B29A2368();
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          sub_1B29A2368();
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          sub_1B29A2368();
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          uint64_t v141 = 0;
          uint64_t v142 = v37;
          uint64_t v143 = v36;
          *(void *)&long long v144 = 0;
          *((void *)&v144 + 1) = v40;
          *(void *)&long long v145 = v41;
          *((void *)&v145 + 1) = v37;
          uint64_t v146 = v36;
          uint64_t v147 = MEMORY[0x1E4FBC860];
          sub_1B2DB601C(MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], v13, 0.0);
          double v13 = v42;
          swift_bridgeObjectRelease();
          uint64_t v43 = v37;
          long long v44 = v144;
          long long v45 = v145;
          unint64_t v46 = *(void *)(v34 + 16);
          uint64_t v47 = v147;
          if (v46 >= *(void *)(v34 + 24) >> 1)
          {
            sub_1B29C00B8();
            uint64_t v43 = v139;
            long long v45 = v145;
            long long v44 = v144;
          }
          v35 += 2;
          *(void *)(v34 + 16) = v46 + 1;
          uint64_t v48 = v34 + 88 * v46;
          *(void *)(v48 + 32) = v43;
          *(void *)(v48 + 40) = v36;
          *(void *)(v48 + 48) = 0;
          *(void *)(v48 + 56) = v37;
          *(void *)(v48 + 64) = v36;
          *(_OWORD *)(v48 + 72) = v44;
          *(_OWORD *)(v48 + 88) = v45;
          *(void *)(v48 + 104) = v36;
          *(void *)(v48 + 112) = v47;
          uint64_t v33 = v137 - 1;
          uint64_t v2 = v119;
          if (v137 == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v115 = v34;
            uint64_t v10 = MEMORY[0x1E4FBC860];
            a1 = v117;
            goto LABEL_25;
          }
        }
        goto LABEL_74;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v115 = MEMORY[0x1E4FBC860];
    }
  }
LABEL_25:
  if (*(void *)(a1 + 8))
  {
    uint64_t v112 = *(void *)(a1 + 8);
  }
  else
  {
    type metadata accessor for ResultGraph();
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = sub_1B2E82148();
    *(void *)(v49 + 24) = v10;
    uint64_t v112 = v49;
  }
  uint64_t v50 = v115;
  uint64_t v51 = *(void *)(v115 + 16);
  if (v51)
  {
    uint64_t v139 = v10;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B29BFD80();
    uint64_t v52 = v10;
    uint64_t v53 = (uint64_t *)(v115 + 64);
    do
    {
      uint64_t v55 = *(v53 - 1);
      uint64_t v54 = *v53;
      uint64_t v139 = v52;
      unint64_t v57 = *(void *)(v52 + 16);
      unint64_t v56 = *(void *)(v52 + 24);
      swift_bridgeObjectRetain();
      if (v57 >= v56 >> 1)
      {
        sub_1B29BFD80();
        uint64_t v52 = v139;
      }
      *(void *)(v52 + 16) = v57 + 1;
      uint64_t v58 = v52 + 16 * v57;
      *(void *)(v58 + 32) = v55;
      *(void *)(v58 + 40) = v54;
      v53 += 11;
      --v51;
    }
    while (v51);
    uint64_t v50 = v115;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_retain();
    uint64_t v52 = MEMORY[0x1E4FBC860];
  }
  uint64_t v120 = sub_1B2DDC660(v52);
  uint64_t v59 = *(void *)(v50 + 16);
  uint64_t v60 = v50;
  if (v59)
  {
    unint64_t v61 = 0;
    int v62 = *(uint64_t (**)(void))(*(void *)v2 + 224);
    uint64_t v63 = 48;
    while (v61 < *(void *)(v60 + 16))
    {
      double v64 = *(double *)(v60 + v63);
      char v65 = v62();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (v65)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1B2CC3384();
          uint64_t v60 = v68;
        }
        if (v61 >= *(void *)(v60 + 16)) {
          goto LABEL_70;
        }
        double v67 = v64 - v13;
      }
      else
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1B2CC3384();
          uint64_t v60 = v69;
        }
        if (v61 >= *(void *)(v60 + 16)) {
          goto LABEL_71;
        }
        double v67 = 1.0 / (v64 - v13 + 1.0);
      }
      ++v61;
      *(double *)(v60 + v63) = v67;
      v63 += 88;
      if (v59 == v61) {
        goto LABEL_48;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_48:
    uint64_t v70 = sub_1B2D984EC();
    uint64_t v71 = *(void *)(v70 + 16);
    uint64_t v72 = MEMORY[0x1E4FBC860];
    if (!v71)
    {
LABEL_60:
      swift_bridgeObjectRelease();
      uint64_t v97 = *(void *)(v72 + 16);
      if (v97)
      {
        uint64_t v139 = MEMORY[0x1E4FBC860];
        uint64_t v114 = v72;
        sub_1B29C00B8();
        uint64_t v98 = v139;
        uint64_t v99 = (uint64_t *)(v114 + 56);
        do
        {
          uint64_t v125 = *(v99 - 3);
          uint64_t v100 = v99[1];
          uint64_t v101 = v99[2];
          uint64_t v132 = v99[3];
          uint64_t v135 = *v99;
          uint64_t v102 = v99[4];
          uint64_t v127 = *(v99 - 2);
          uint64_t v129 = v99[5];
          uint64_t v103 = v99[6];
          uint64_t v104 = v99[7];
          unint64_t v105 = *(void *)(v98 + 16);
          unint64_t v123 = *(void *)(v98 + 24);
          uint64_t v139 = v98;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v105 >= v123 >> 1)
          {
            sub_1B29C00B8();
            uint64_t v98 = v139;
          }
          *(void *)(v98 + 16) = v105 + 1;
          uint64_t v106 = (void *)(v98 + 88 * v105);
          v106[4] = v125;
          v106[5] = v127;
          v106[6] = 0;
          v106[7] = v135;
          v106[8] = v100;
          v106[9] = v101;
          v106[10] = v132;
          v106[11] = v102;
          v106[12] = v129;
          v106[13] = v103;
          v106[14] = v104;
          v99 += 11;
          --v97;
        }
        while (v97);
        uint64_t v107 = v98;
        swift_release();
      }
      else
      {
        swift_release();
        uint64_t v107 = MEMORY[0x1E4FBC860];
      }
      sub_1B2D97734();
      LOBYTE(v139) = 0;
      uint64_t v108 = swift_bridgeObjectRetain();
      sub_1B2D97CC8(v108, &v139);
      swift_bridgeObjectRelease();
      LOBYTE(v139) = 0;
      sub_1B2D97CC8(v107, &v139);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_retain();
      sub_1B2DB4A30((uint64_t *)(v112 + 24), v112);
      swift_endAccess();
      sub_1B2D984EC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    unint64_t v73 = 0;
    uint64_t v118 = *(void *)(v70 + 16);
    uint64_t v74 = v71 - 1;
    uint64_t v75 = v70 + 56;
    uint64_t v131 = v70;
    uint64_t v110 = v70 + 56;
    uint64_t v111 = v74;
LABEL_50:
    uint64_t v113 = v72;
    char v76 = (uint64_t *)(v75 + 88 * v73);
    unint64_t v77 = v73;
    while (v77 < *(void *)(v70 + 16))
    {
      uint64_t v78 = *(v76 - 2);
      uint64_t v122 = *(v76 - 3);
      uint64_t v79 = *(v76 - 1);
      uint64_t v80 = *v76;
      uint64_t v81 = v76[1];
      uint64_t v82 = v76[2];
      uint64_t v83 = v76[4];
      uint64_t v126 = v76[5];
      uint64_t v128 = v76[3];
      unint64_t v138 = v77 + 1;
      unint64_t v124 = v77;
      uint64_t v85 = v76[6];
      uint64_t v84 = v76[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v134 = v78;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B29FB4D4(v80, v81, v120);
      LOBYTE(v78) = v86;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v78 & 1) == 0)
      {
        uint64_t v109 = v81;
        uint64_t v87 = v80;
        unint64_t v73 = v138;
        uint64_t v72 = v113;
        uint64_t v139 = v113;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29C00B8();
          uint64_t v72 = v139;
        }
        uint64_t v88 = v87;
        uint64_t v89 = v85;
        uint64_t v91 = v84;
        uint64_t v90 = v109;
        uint64_t v93 = v126;
        uint64_t v92 = v128;
        unint64_t v94 = *(void *)(v72 + 16);
        unint64_t v95 = v94 + 1;
        if (v94 >= *(void *)(v72 + 24) >> 1)
        {
          sub_1B29C00B8();
          unint64_t v95 = v94 + 1;
          uint64_t v91 = v84;
          uint64_t v90 = v109;
          uint64_t v93 = v126;
          uint64_t v92 = v128;
          uint64_t v89 = v85;
          uint64_t v72 = v139;
        }
        *(void *)(v72 + 16) = v95;
        uint64_t v96 = (void *)(v72 + 88 * v94);
        v96[4] = v122;
        v96[5] = v134;
        v96[6] = v79;
        v96[7] = v88;
        v96[8] = v90;
        v96[9] = v82;
        v96[10] = v92;
        v96[11] = v83;
        v96[12] = v93;
        v96[13] = v89;
        v96[14] = v91;
        uint64_t v70 = v131;
        uint64_t v75 = v110;
        if (v111 != v124) {
          goto LABEL_50;
        }
        goto LABEL_60;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v76 += 11;
      unint64_t v77 = v138;
      uint64_t v70 = v131;
      if (v118 == v138)
      {
        uint64_t v72 = v113;
        goto LABEL_60;
      }
    }
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
}

uint64_t sub_1B2DB5DF0(void *a1, void *a2, void *a3)
{
  if (a1[7])
  {
    uint64_t v4 = a1[6];
    unint64_t v5 = a1[7];
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  uint64_t v6 = a1[10];
  uint64_t v7 = a2[2];
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  BOOL v10 = v8 == v4 && v9 == v5;
  if (v10 || (uint64_t result = sub_1B2E837A8(), (result & 1) != 0))
  {
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v12 = 1;
LABEL_46:
    swift_bridgeObjectRelease();
    return v12;
  }
  if (v7 == 1)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(v6 + 16);
    if (!v17) {
      return 0;
    }
    uint64_t v28 = v6 + 32;
    uint64_t v18 = a3[2];
    swift_bridgeObjectRetain();
    uint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *(void *)(v28 + 88 * v19 + 56);
      uint64_t v21 = v20 ? *(void *)(v28 + 88 * v19 + 48) : 0;
      uint64_t v22 = v20 ? *(void *)(v28 + 88 * v19 + 56) : 0xE000000000000000;
      if (v18)
      {
        BOOL v23 = a3[4] == v21 && a3[5] == v22;
        if (v23 || (uint64_t result = sub_1B2E837A8(), (result & 1) != 0))
        {
LABEL_45:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v12 = 1;
          goto LABEL_46;
        }
        if (v18 != 1) {
          break;
        }
      }
LABEL_43:
      ++v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v19 == v17)
      {
        uint64_t v12 = 0;
        goto LABEL_46;
      }
    }
    long long v24 = a3 + 7;
    uint64_t v25 = 1;
    while (1)
    {
      uint64_t v26 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        break;
      }
      if (*(v24 - 1) == v21 && *v24 == v22) {
        goto LABEL_45;
      }
      uint64_t result = sub_1B2E837A8();
      if (result) {
        goto LABEL_45;
      }
      v24 += 2;
      ++v25;
      if (v26 == v18) {
        goto LABEL_43;
      }
    }
    __break(1u);
  }
  else
  {
    double v13 = a2 + 7;
    uint64_t v14 = 1;
    while (1)
    {
      uint64_t v15 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      if (*(v13 - 1) == v4 && *v13 == v5) {
        goto LABEL_10;
      }
      uint64_t result = sub_1B2E837A8();
      if (result) {
        goto LABEL_10;
      }
      v13 += 2;
      ++v14;
      if (v15 == v7) {
        goto LABEL_20;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2DB601C(void *a1, void *a2, double a3, double a4)
{
  uint64_t v7 = a2[2];
  uint64_t v8 = a1[2];
  if (v7)
  {
    if (!v8
      || (!*(void *)(v4 + 56)
        ? (uint64_t v10 = 0, v11 = 0xE000000000000000)
        : (uint64_t v10 = *(void *)(v4 + 48), v11 = *(void *)(v4 + 56)),
          char v14 = sub_1B2A1BAF0(v10, v11, a1),
          swift_bridgeObjectRetain(),
          *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRelease()),
          (v14 & 1) != 0))
    {
      uint64_t result = *(uint64_t *)(v4 + 80);
      uint64_t v40 = *(void *)(result + 16);
      if (v40)
      {
        uint64_t v36 = v4;
        uint64_t v16 = result + 32;
        uint64_t v17 = a2[4];
        uint64_t v18 = a2[5];
        swift_bridgeObjectRetain_n();
        uint64_t v19 = 0;
        uint64_t v37 = a2 + 7;
        uint64_t v38 = v18;
        while (1)
        {
          uint64_t v20 = v16;
          uint64_t v21 = (void *)(v16 + 88 * v19);
          uint64_t v22 = v21[8];
          uint64_t v41 = v21[9];
          uint64_t v25 = v21 + 6;
          uint64_t v23 = v21[6];
          unint64_t v24 = v25[1];
          uint64_t v26 = v24 ? v23 : 0;
          unint64_t v27 = v24 ? v24 : 0xE000000000000000;
          if (v17 == v26 && v18 == v27) {
            break;
          }
          *(double *)&uint64_t result = COERCE_DOUBLE(sub_1B2E837A8());
          if (result) {
            break;
          }
          uint64_t v39 = v22;
          if (v7 != 1)
          {
            uint64_t v29 = v37;
            uint64_t v30 = 1;
            while (1)
            {
              uint64_t v31 = v30 + 1;
              if (__OFADD__(v30, 1)) {
                break;
              }
              BOOL v32 = *(v29 - 1) == v26 && *v29 == v27;
              if (v32 || (*(double *)&uint64_t result = COERCE_DOUBLE(sub_1B2E837A8()), (result & 1) != 0))
              {
                uint64_t v4 = v36;
                uint64_t v22 = v39;
                goto LABEL_35;
              }
              v29 += 2;
              ++v30;
              if (v31 == v7) {
                goto LABEL_32;
              }
            }
            __break(1u);
            return result;
          }
LABEL_32:
          ++v19;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v18 = v38;
          uint64_t v16 = v20;
          if (v19 == v40)
          {
            *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRelease_n());
            uint64_t v4 = v36;
            goto LABEL_42;
          }
        }
        uint64_t v4 = v36;
LABEL_35:
        uint64_t v33 = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRelease());
        if (v41) {
          goto LABEL_40;
        }
      }
    }
  }
  else if (!v8 {
         || (!*(void *)(v4 + 56)
  }
           ? (uint64_t v12 = 0, v13 = 0xE000000000000000)
           : (uint64_t v12 = *(void *)(v4 + 48), v13 = *(void *)(v4 + 56)),
             char v34 = sub_1B2A1BAF0(v12, v13, a1),
             swift_bridgeObjectRetain(),
             *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRelease()),
             (v34 & 1) != 0))
  {
    uint64_t v22 = *(void *)(v4 + 64);
    uint64_t v33 = *(void *)(v4 + 72);
    *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRetain());
    if (v33)
    {
LABEL_40:
      *(double *)&uint64_t result = COERCE_DOUBLE(sub_1B2A10088(v22, v33));
      if ((v35 & 1) == 0) {
        a4 = *(double *)&result;
      }
    }
  }
LABEL_42:
  *(double *)(v4 + 16) = a4;
  return result;
}

uint64_t type metadata accessor for Sort()
{
  return self;
}

uint64_t sub_1B2DB6324()
{
  return 0x6373615F74726F73;
}

uint64_t type metadata accessor for SortAsc()
{
  return self;
}

uint64_t sub_1B2DB6360()
{
  return 0x7365645F74726F73;
}

uint64_t type metadata accessor for SortDesc()
{
  return self;
}

uint64_t sub_1B2DB63A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = a1[1];
  swift_retain_n();
  uint64_t v6 = sub_1B2E83738();
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_171;
    }
    if (v5) {
      sub_1B2DB7028(0, v5, 1, a1, a2);
    }
    swift_release_n();
    return swift_release();
  }
  uint64_t v7 = v6;
  uint64_t v176 = v2;
  uint64_t v167 = sub_1B29B6980(v5 / 2);
  v172 = v8;
  uint64_t v175 = a2;
  uint64_t v170 = v5;
  v165 = a1;
  if (v5 <= 0)
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v102 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_133:
    v174 = v11;
    if (v102 >= 2)
    {
      uint64_t v156 = *v165;
      do
      {
        unint64_t v157 = v102 - 2;
        if (v102 < 2) {
          goto LABEL_166;
        }
        if (!v156) {
          goto LABEL_181;
        }
        uint64_t v158 = *(void *)&v174[16 * v157 + 32];
        uint64_t v159 = *(void *)&v174[16 * v102 + 24];
        v160 = (char *)(v156 + 16 * *(void *)&v174[16 * v102 + 16]);
        swift_retain();
        sub_1B2DB73A8((char *)(v156 + 16 * v158), v160, v156 + 16 * v159, v172, v175);
        if (v176) {
          goto LABEL_129;
        }
        if (v159 < v158) {
          goto LABEL_167;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v174 = sub_1B2DCA54C();
        }
        if (v157 >= *((void *)v174 + 2)) {
          goto LABEL_168;
        }
        v161 = &v174[16 * v157 + 32];
        *(void *)v161 = v158;
        *((void *)v161 + 1) = v159;
        unint64_t v162 = *((void *)v174 + 2);
        if (v102 > v162) {
          goto LABEL_169;
        }
        memmove(&v174[16 * v102 + 16], &v174[16 * v102 + 32], 16 * (v162 - v102));
        *((void *)v174 + 2) = v162 - 1;
        unint64_t v102 = v162 - 1;
        uint64_t v5 = v170;
      }
      while (v162 > 2);
    }
    swift_bridgeObjectRelease();
    if (v5 < -1) {
      goto LABEL_177;
    }
    goto LABEL_147;
  }
  uint64_t v166 = v7;
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  v186 = (uint64_t *)(a2 + 16);
  uint64_t v164 = v10 + 40;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v177 = v10;
  while (1)
  {
    uint64_t v12 = v9 + 1;
    uint64_t v173 = (uint64_t)v11;
    uint64_t v169 = v9;
    if (v9 + 1 >= v5) {
      goto LABEL_40;
    }
    uint64_t v13 = v9;
    char v14 = (uint64_t *)(v10 + 16 * v12);
    uint64_t v15 = v14[1];
    v185[0] = *v14;
    v185[1] = v15;
    uint64_t v16 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v17 = v16[1];
    uint64_t v183 = *v16;
    uint64_t v184 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v181) = sub_1B2D98BF8(v185, &v183, a2);
    if (v176)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_130:
      if (v5 < -1) {
        goto LABEL_173;
      }
LABEL_147:
      *(void *)(v167 + 16) = 0;
      swift_release_n();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v13 + 2;
    if (v13 + 2 >= v5) {
      goto LABEL_32;
    }
    uint64_t v18 = (uint64_t *)(v164 + 16 * v13);
    while (1)
    {
      uint64_t v178 = v12;
      uint64_t v19 = *(v18 - 1);
      uint64_t v20 = *v18;
      uint64_t v22 = *(v18 - 3);
      uint64_t v21 = *(v18 - 2);
      uint64_t v23 = v186;
      swift_beginAccess();
      uint64_t v24 = *v23;
      uint64_t v25 = *(void *)(v24 + 16);
      swift_bridgeObjectRetain();
      if (v25)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_1B29DB060(v19, v20, v26, v27, v28, v29, v30, v31, v164, (uint64_t)v165, v166, v167, v168, v169, v170, v171, (uint64_t)v172, v173, v175,
                v176,
                v177,
                v178,
                v181,
                (uint64_t)v182,
                v183,
                v184);
        if (v33)
        {
          uint64_t v34 = *(void *)(v24 + 56) + 40 * v32;
          unint64_t v35 = *(void *)(v34 + 8);
          v182 = *(char **)v34;
          double v36 = *(double *)(v34 + 24);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_endAccess();
      sub_1B29A3EB4(&qword_1E9C43CE8);
      sub_1B2E82148();
      v182 = 0;
      double v36 = 0.0;
      unint64_t v35 = 0xE000000000000000;
LABEL_14:
      uint64_t v37 = v186;
      swift_beginAccess();
      uint64_t v38 = *v37;
      if (*(void *)(v38 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v45 = sub_1B29DB060(v22, v21, v39, v40, v41, v42, v43, v44, v164, (uint64_t)v165, v166, v167, v168, v169, v170, v171, (uint64_t)v172, v173, v175,
                v176,
                v177,
                v178,
                v181,
                (uint64_t)v182,
                v183,
                v184);
        if (v46)
        {
          uint64_t v47 = *(void *)(v38 + 56) + 40 * v45;
          uint64_t v48 = *(char **)v47;
          unint64_t v49 = *(void *)(v47 + 8);
          double v50 = *(double *)(v47 + 24);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      sub_1B29A3EB4(&qword_1E9C43CE8);
      sub_1B2E82148();
      uint64_t v48 = 0;
      double v50 = 0.0;
      unint64_t v49 = 0xE000000000000000;
LABEL_19:
      if (v36 == v50)
      {
        BOOL v51 = v48 == v182 && v49 == v35;
        int v52 = v51 ? 0 : sub_1B2E837A8();
        uint64_t v11 = (char *)v173;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v52 = v50 < v36;
        uint64_t v11 = (char *)v173;
      }
      uint64_t v12 = v178;
      if ((v181 ^ v52)) {
        break;
      }
      v18 += 2;
      uint64_t v12 = v178 + 1;
      if (v178 + 1 >= v170)
      {
        uint64_t v5 = v170;
        uint64_t v12 = v170;
        goto LABEL_32;
      }
    }
    uint64_t v5 = v170;
LABEL_32:
    uint64_t v10 = v177;
    if (v181) {
      break;
    }
LABEL_40:
    uint64_t v60 = v169;
    if (v12 < v5)
    {
      if (__OFSUB__(v12, v169)) {
        goto LABEL_172;
      }
      if (v12 - v169 < v166)
      {
        uint64_t v61 = v169 + v166;
        if (__OFADD__(v169, v166)) {
          goto LABEL_174;
        }
        if (v61 >= v5) {
          uint64_t v61 = v5;
        }
        if (v61 < v169)
        {
LABEL_175:
          __break(1u);
          goto LABEL_176;
        }
        if (v12 == v61) {
          goto LABEL_76;
        }
        int v62 = (uint64_t *)(v10 + 16 * v12);
        uint64_t v168 = v61;
LABEL_49:
        uint64_t v179 = v12;
        uint64_t v63 = (uint64_t *)(v10 + 16 * v12);
        uint64_t v65 = *v63;
        uint64_t v64 = v63[1];
        uint64_t v66 = v169;
        uint64_t v171 = (uint64_t)v62;
        while (1)
        {
          uint64_t v67 = *(v62 - 2);
          uint64_t v68 = *(v62 - 1);
          uint64_t v69 = v186;
          swift_beginAccess();
          uint64_t v70 = *v69;
          uint64_t v71 = *(void *)(v70 + 16);
          swift_bridgeObjectRetain();
          if (v71)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v78 = sub_1B29DB060(v65, v64, v72, v73, v74, v75, v76, v77, v164, (uint64_t)v165, v166, v167, v168, v169, v170, v171, (uint64_t)v172, v173, v175,
                    v176,
                    v177,
                    v179,
                    v181,
                    (uint64_t)v182,
                    v183,
                    v184);
            if (v79)
            {
              uint64_t v80 = *(void *)(v70 + 56) + 40 * v78;
              unint64_t v81 = *(void *)(v80 + 8);
              unint64_t v181 = *(void *)v80;
              uint64_t v82 = *(char **)(v80 + 16);
              double v83 = *(double *)(v80 + 24);
              swift_endAccess();
              swift_bridgeObjectRetain();
              v182 = v82;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_56;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          swift_endAccess();
          sub_1B29A3EB4(&qword_1E9C43CE8);
          unint64_t v181 = 0;
          v182 = (char *)sub_1B2E82148();
          double v83 = 0.0;
          unint64_t v81 = 0xE000000000000000;
LABEL_56:
          uint64_t v84 = v186;
          swift_beginAccess();
          uint64_t v85 = *v84;
          if (*(void *)(v85 + 16))
          {
            swift_bridgeObjectRetain();
            uint64_t v92 = sub_1B29DB060(v67, v68, v86, v87, v88, v89, v90, v91, v164, (uint64_t)v165, v166, v167, v168, v169, v170, v171, (uint64_t)v172, v173, v175,
                    v176,
                    v177,
                    v179,
                    v181,
                    (uint64_t)v182,
                    v183,
                    v184);
            if (v93)
            {
              uint64_t v94 = *(void *)(v85 + 56) + 40 * v92;
              uint64_t v95 = *(void *)v94;
              unint64_t v96 = *(void *)(v94 + 8);
              double v97 = *(double *)(v94 + 24);
              swift_endAccess();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_61;
            }
            swift_bridgeObjectRelease();
          }
          swift_endAccess();
          sub_1B29A3EB4(&qword_1E9C43CE8);
          sub_1B2E82148();
          uint64_t v95 = 0;
          double v97 = 0.0;
          unint64_t v96 = 0xE000000000000000;
LABEL_61:
          if (v83 == v97)
          {
            if (v95 == v181 && v96 == v81)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_73:
              uint64_t v10 = v177;
LABEL_74:
              uint64_t v12 = v179 + 1;
              int v62 = (uint64_t *)(v171 + 16);
              if (v179 + 1 == v168)
              {
                uint64_t v12 = v168;
                uint64_t v11 = (char *)v173;
                uint64_t v60 = v169;
                break;
              }
              goto LABEL_49;
            }
            char v99 = sub_1B2E837A8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v99 & 1) == 0) {
              goto LABEL_73;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v97 >= v83) {
              goto LABEL_73;
            }
          }
          uint64_t v10 = v177;
          if (!v177) {
            goto LABEL_178;
          }
          uint64_t v65 = *v62;
          uint64_t v64 = v62[1];
          *(_OWORD *)int v62 = *((_OWORD *)v62 - 1);
          *(v62 - 1) = v64;
          *(v62 - 2) = v65;
          v62 -= 2;
          if (v179 == ++v66) {
            goto LABEL_74;
          }
        }
      }
    }
LABEL_76:
    if (v12 < v60) {
      goto LABEL_170;
    }
    uint64_t v180 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1B2DCA454(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v101 = *((void *)v11 + 2);
    unint64_t v100 = *((void *)v11 + 3);
    unint64_t v102 = v101 + 1;
    uint64_t v10 = v177;
    if (v101 >= v100 >> 1)
    {
      v155 = sub_1B2DCA454((char *)(v100 > 1), v101 + 1, 1, v11);
      uint64_t v10 = v177;
      uint64_t v11 = v155;
    }
    *((void *)v11 + 2) = v102;
    uint64_t v103 = v11 + 32;
    uint64_t v104 = &v11[16 * v101 + 32];
    *(void *)uint64_t v104 = v60;
    *((void *)v104 + 1) = v180;
    if (v101)
    {
      while (1)
      {
        unint64_t v105 = v102 - 1;
        if (v102 >= 4)
        {
          uint64_t v110 = &v103[16 * v102];
          uint64_t v111 = *((void *)v110 - 8);
          uint64_t v112 = *((void *)v110 - 7);
          BOOL v116 = __OFSUB__(v112, v111);
          uint64_t v113 = v112 - v111;
          if (v116) {
            goto LABEL_155;
          }
          uint64_t v115 = *((void *)v110 - 6);
          uint64_t v114 = *((void *)v110 - 5);
          BOOL v116 = __OFSUB__(v114, v115);
          uint64_t v108 = v114 - v115;
          char v109 = v116;
          if (v116) {
            goto LABEL_156;
          }
          unint64_t v117 = v102 - 2;
          uint64_t v118 = &v103[16 * v102 - 32];
          uint64_t v120 = *(void *)v118;
          uint64_t v119 = *((void *)v118 + 1);
          BOOL v116 = __OFSUB__(v119, v120);
          uint64_t v121 = v119 - v120;
          if (v116) {
            goto LABEL_157;
          }
          BOOL v116 = __OFADD__(v108, v121);
          uint64_t v122 = v108 + v121;
          if (v116) {
            goto LABEL_159;
          }
          if (v122 >= v113)
          {
            uint64_t v140 = &v103[16 * v105];
            uint64_t v142 = *(void *)v140;
            uint64_t v141 = *((void *)v140 + 1);
            BOOL v116 = __OFSUB__(v141, v142);
            uint64_t v143 = v141 - v142;
            if (v116) {
              goto LABEL_165;
            }
            BOOL v133 = v108 < v143;
            goto LABEL_113;
          }
        }
        else
        {
          if (v102 != 3)
          {
            uint64_t v134 = *((void *)v11 + 4);
            uint64_t v135 = *((void *)v11 + 5);
            BOOL v116 = __OFSUB__(v135, v134);
            uint64_t v127 = v135 - v134;
            char v128 = v116;
            goto LABEL_107;
          }
          uint64_t v107 = *((void *)v11 + 4);
          uint64_t v106 = *((void *)v11 + 5);
          BOOL v116 = __OFSUB__(v106, v107);
          uint64_t v108 = v106 - v107;
          char v109 = v116;
        }
        if (v109) {
          goto LABEL_158;
        }
        unint64_t v117 = v102 - 2;
        unint64_t v123 = &v103[16 * v102 - 32];
        uint64_t v125 = *(void *)v123;
        uint64_t v124 = *((void *)v123 + 1);
        BOOL v126 = __OFSUB__(v124, v125);
        uint64_t v127 = v124 - v125;
        char v128 = v126;
        if (v126) {
          goto LABEL_160;
        }
        uint64_t v129 = &v103[16 * v105];
        uint64_t v131 = *(void *)v129;
        uint64_t v130 = *((void *)v129 + 1);
        BOOL v116 = __OFSUB__(v130, v131);
        uint64_t v132 = v130 - v131;
        if (v116) {
          goto LABEL_162;
        }
        if (__OFADD__(v127, v132)) {
          goto LABEL_164;
        }
        if (v127 + v132 >= v108)
        {
          BOOL v133 = v108 < v132;
LABEL_113:
          if (v133) {
            unint64_t v105 = v117;
          }
          goto LABEL_115;
        }
LABEL_107:
        if (v128) {
          goto LABEL_161;
        }
        uint64_t v136 = &v103[16 * v105];
        uint64_t v138 = *(void *)v136;
        uint64_t v137 = *((void *)v136 + 1);
        BOOL v116 = __OFSUB__(v137, v138);
        uint64_t v139 = v137 - v138;
        if (v116) {
          goto LABEL_163;
        }
        if (v139 < v127) {
          goto LABEL_124;
        }
LABEL_115:
        unint64_t v144 = v105 - 1;
        if (v105 - 1 >= v102)
        {
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
          goto LABEL_175;
        }
        if (!v10) {
          goto LABEL_179;
        }
        long long v145 = v103;
        uint64_t v146 = &v103[16 * v144];
        uint64_t v147 = *(void *)v146;
        v148 = v145;
        unint64_t v149 = v105;
        v150 = &v145[16 * v105];
        uint64_t v151 = *((void *)v150 + 1);
        v152 = (char *)(v10 + 16 * *(void *)v146);
        unint64_t v181 = v10 + 16 * v151;
        v182 = (char *)(v10 + 16 * *(void *)v150);
        swift_retain();
        sub_1B2DB73A8(v152, v182, v181, v172, v175);
        if (v176)
        {
LABEL_129:
          swift_bridgeObjectRelease();
          uint64_t v5 = v170;
          goto LABEL_130;
        }
        if (v151 < v147) {
          goto LABEL_152;
        }
        if (v149 > *((void *)v11 + 2)) {
          goto LABEL_153;
        }
        unint64_t v153 = v149;
        *(void *)uint64_t v146 = v147;
        *(void *)&v148[16 * v144 + 8] = v151;
        unint64_t v154 = *((void *)v11 + 2);
        if (v153 >= v154) {
          goto LABEL_154;
        }
        uint64_t v103 = v148;
        uint64_t v176 = 0;
        unint64_t v102 = v154 - 1;
        memmove(v150, v150 + 16, 16 * (v154 - 1 - v153));
        *((void *)v11 + 2) = v154 - 1;
        uint64_t v10 = v177;
        if (v154 <= 2) {
          goto LABEL_124;
        }
      }
    }
    unint64_t v102 = 1;
LABEL_124:
    uint64_t v5 = v170;
    uint64_t v9 = v180;
    a2 = v175;
    if (v180 >= v170) {
      goto LABEL_133;
    }
  }
  uint64_t v53 = v169;
  if (v12 >= v169)
  {
    if (v169 < v12)
    {
      uint64_t v54 = 16 * v12;
      uint64_t v55 = 16 * v169;
      uint64_t v56 = v12;
      do
      {
        if (v53 != --v56)
        {
          if (!v177) {
            goto LABEL_180;
          }
          uint64_t v57 = v177 + v54;
          uint64_t v58 = *(void *)(v177 + v55);
          uint64_t v59 = *(void *)(v177 + v55 + 8);
          *(_OWORD *)(v177 + v55) = *(_OWORD *)(v177 + v54 - 16);
          *(void *)(v57 - 16) = v58;
          *(void *)(v57 - 8) = v59;
        }
        ++v53;
        v54 -= 16;
        v55 += 16;
      }
      while (v53 < v56);
    }
    goto LABEL_40;
  }
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  swift_release_n();
  __break(1u);
LABEL_179:
  swift_release_n();
  __break(1u);
LABEL_180:
  swift_release_n();
  __break(1u);
LABEL_181:
  uint64_t result = swift_release_n();
  __break(1u);
  return result;
}

uint64_t sub_1B2DB7028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v48 = a2;
  uint64_t v49 = a1;
  if (a3 == a2) {
    return swift_release();
  }
  uint64_t v46 = a5;
  uint64_t v47 = v5;
  uint64_t v6 = a5 + 16;
  uint64_t v51 = a5 + 16;
  uint64_t v52 = *a4;
  uint64_t v7 = (uint64_t *)(*a4 + 16 * a3);
  while (2)
  {
    uint64_t v53 = a3;
    uint64_t v8 = (uint64_t *)(v52 + 16 * a3);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    uint64_t v11 = v49;
    uint64_t v50 = (uint64_t)v7;
    while (1)
    {
      uint64_t v12 = *(v7 - 2);
      uint64_t v13 = *(v7 - 1);
      swift_beginAccess();
      uint64_t v14 = *(void *)v6;
      uint64_t v15 = *(void *)(*(void *)v6 + 16);
      swift_bridgeObjectRetain();
      uint64_t v54 = v7 - 2;
      if (v15)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_1B29DB060(v9, v10, v16, v17, v18, v19, v20, v21, v46, v47, v48, v49, v50, v51, v52, v53, (uint64_t)v54, v55, v56,
                v57,
                v58,
                v59,
                v60,
                v61,
                v62,
                v63);
        if (v23)
        {
          uint64_t v24 = *(void *)(v14 + 56) + 40 * v22;
          uint64_t v25 = *(void *)v24;
          unint64_t v26 = *(void *)(v24 + 8);
          uint64_t v27 = *(void *)(v24 + 16);
          double v28 = *(double *)(v24 + 24);
          swift_endAccess();
          swift_bridgeObjectRetain();
          uint64_t v61 = v27;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_endAccess();
      sub_1B29A3EB4(&qword_1E9C43CE8);
      uint64_t v61 = sub_1B2E82148();
      uint64_t v25 = 0;
      double v28 = 0.0;
      unint64_t v26 = 0xE000000000000000;
LABEL_10:
      swift_beginAccess();
      uint64_t v29 = *(void *)v6;
      if (*(void *)(*(void *)v6 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_1B29DB060(v12, v13, v30, v31, v32, v33, v34, v35, v46, v47, v48, v49, v50, v51, v52, v53, (uint64_t)v54, v55, v56,
                v57,
                v58,
                v59,
                v60,
                v61,
                v62,
                v63);
        if (v37)
        {
          uint64_t v38 = *(void *)(v29 + 56) + 40 * v36;
          uint64_t v40 = *(void *)v38;
          unint64_t v39 = *(void *)(v38 + 8);
          double v41 = *(double *)(v38 + 24);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      sub_1B29A3EB4(&qword_1E9C43CE8);
      sub_1B2E82148();
      uint64_t v40 = 0;
      double v41 = 0.0;
      unint64_t v39 = 0xE000000000000000;
LABEL_15:
      if (v28 != v41)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v45 = v53;
        uint64_t v6 = v51;
        if (v41 >= v28) {
          goto LABEL_27;
        }
        goto LABEL_23;
      }
      if (v40 == v25 && v39 == v26) {
        break;
      }
      char v43 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v45 = v53;
      uint64_t v6 = v51;
      if ((v43 & 1) == 0) {
        goto LABEL_27;
      }
LABEL_23:
      if (!v52)
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = *v7;
      uint64_t v10 = v7[1];
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v54;
      *(v7 - 1) = v10;
      *(v7 - 2) = v9;
      v7 -= 2;
      if (v45 == ++v11) {
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v45 = v53;
    uint64_t v6 = v51;
LABEL_27:
    a3 = v45 + 1;
    uint64_t v7 = (uint64_t *)(v50 + 16);
    if (a3 != v48) {
      continue;
    }
    return swift_release();
  }
}

uint64_t sub_1B2DB73A8(char *a1, char *a2, unint64_t a3, char *a4, uint64_t a5)
{
  unint64_t v7 = a3;
  uint64_t v8 = a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = (a2 - a1) / 16;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = (uint64_t)(a3 - (void)a2) / 16;
  if (v10 >= v12)
  {
    sub_1B29BDECC(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    uint64_t v16 = a2;
    uint64_t v14 = &a4[16 * v12];
    if (v8 >= a2 || v11 < 16) {
      goto LABEL_13;
    }
    uint64_t v32 = (char *)(v7 - 16);
    uint64_t v33 = v5;
    uint64_t v45 = v8;
    while (1)
    {
      unint64_t v34 = (unint64_t)v14;
      uint64_t v36 = *((void *)v14 - 1);
      uint64_t v35 = v14 - 16;
      uint64_t v50 = *((void *)v14 - 2);
      uint64_t v51 = v36;
      char v37 = v16;
      uint64_t v39 = *((void *)v16 - 1);
      uint64_t v38 = v16 - 16;
      uint64_t v48 = *((void *)v16 - 2);
      uint64_t v49 = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v40 = sub_1B2D98BF8(&v50, &v48, a5);
      if (v33)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B29BDECC(a4, (uint64_t)(v34 - (void)a4) / 16, v37);
        goto LABEL_15;
      }
      char v41 = v40;
      uint64_t v52 = 0;
      uint64_t v42 = v32 + 16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v41)
      {
        BOOL v43 = v42 != v37 || v32 >= v37;
        uint64_t v16 = v38;
        uint64_t v14 = (char *)v34;
        if (!v43) {
          goto LABEL_38;
        }
      }
      else
      {
        BOOL v44 = v42 != (char *)v34 || (unint64_t)v32 >= v34;
        uint64_t v38 = v35;
        uint64_t v14 = v35;
        uint64_t v16 = v37;
        if (!v44) {
          goto LABEL_38;
        }
      }
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v38;
LABEL_38:
      uint64_t v21 = a4;
      uint64_t v33 = v52;
      if (v16 <= v45) {
        goto LABEL_14;
      }
      v32 -= 16;
      if (v14 <= a4) {
        goto LABEL_13;
      }
    }
  }
  sub_1B29BDECC(a1, (a2 - a1) / 16, a4);
  uint64_t v14 = &a4[16 * v10];
  if ((unint64_t)a2 < v7 && v9 >= 16)
  {
    uint64_t v20 = (uint64_t *)a2;
    uint64_t v21 = a4;
    uint64_t v22 = a5;
    uint64_t v52 = v14;
    while (1)
    {
      unint64_t v23 = v7;
      uint64_t v24 = v20[1];
      uint64_t v25 = v20;
      uint64_t v50 = *v20;
      uint64_t v51 = v24;
      uint64_t v26 = *((void *)v21 + 1);
      uint64_t v48 = *(void *)v21;
      uint64_t v49 = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v27 = v22;
      char v28 = sub_1B2D98BF8(&v50, &v48, v22);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B29BDECC(v21, (v52 - v21) / 16, v8);
        goto LABEL_15;
      }
      char v29 = v28;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0) {
        break;
      }
      uint64_t v30 = v25;
      uint64_t v20 = v25 + 2;
      if (v8 != (char *)v25) {
        goto LABEL_21;
      }
LABEL_22:
      v8 += 16;
      uint64_t v14 = v52;
      uint64_t v22 = v27;
      if (v21 < v52)
      {
        unint64_t v7 = v23;
        if ((unint64_t)v20 < v23) {
          continue;
        }
      }
      uint64_t v16 = v8;
      goto LABEL_14;
    }
    uint64_t v30 = v21;
    BOOL v31 = v8 == v21;
    v21 += 16;
    uint64_t v20 = v25;
    if (v31) {
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)uint64_t v8 = *v30;
    goto LABEL_22;
  }
  uint64_t v16 = v8;
LABEL_13:
  uint64_t v21 = a4;
LABEL_14:
  sub_1B29BDECC(v21, (v14 - v21) / 16, v16);
LABEL_15:
  swift_release();
  return 1;
}

uint64_t sub_1B2DB76AC()
{
  return sub_1B2E83418();
}

uint64_t sub_1B2DB76D4()
{
  return swift_beginAccess();
}

uint64_t SourceConfidenceIdentifier.source.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SourceConfidenceIdentifier.signalType.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

IntelligencePlatform::SourceConfidenceIdentifier __swiftcall SourceConfidenceIdentifier.init(_:_:)(Swift::String_optional a1, Swift::String_optional a2)
{
  *uint64_t v2 = a1;
  v2[1] = a2;
  result.signalType = a2;
  result.source = a1;
  return result;
}

uint64_t static SourceConfidenceIdentifier.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  if (!v3)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_1B2E837A8(), uint64_t result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8)
      {
        BOOL v12 = v4 == v7 && v5 == v8;
        if (v12 || (sub_1B2E837A8() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t SourceConfidenceIdentifier.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!*(void *)(v0 + 8))
  {
    sub_1B2E839A8();
    if (v1) {
      goto LABEL_3;
    }
    return sub_1B2E839A8();
  }
  sub_1B2E839A8();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  if (!v1) {
    return sub_1B2E839A8();
  }
LABEL_3:
  sub_1B2E839A8();
  swift_bridgeObjectRetain();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t SourceConfidenceIdentifier.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_1B2E83988();
  sub_1B2E839A8();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
  }
  sub_1B2E839A8();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
  }
  return sub_1B2E839E8();
}

uint64_t sub_1B2DB79B8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_1B2E83988();
  sub_1B2E839A8();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
  }
  sub_1B2E839A8();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
  }
  return sub_1B2E839E8();
}

unint64_t sub_1B2DB7A80()
{
  unint64_t result = qword_1EB7D8908;
  if (!qword_1EB7D8908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8908);
  }
  return result;
}

ValueMetadata *type metadata accessor for SourceConfidenceIdentifier()
{
  return &type metadata for SourceConfidenceIdentifier;
}

uint64_t ViewService.sourceConfidenceView.getter@<X0>(void *a1@<X8>)
{
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  uint64_t v5 = (void *)sub_1B2E82348();
  v17[0] = 0;
  id v6 = objc_msgSend(v4, sel_requestAssertionForViewName_error_, v5, v17);

  id v7 = v17[0];
  if (v6)
  {
    uint64_t v16 = a1;
    uint64_t v8 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    uint64_t v9 = v8[5];
    uint64_t v10 = v8[6];
    sub_1B29AEC7C(v8 + 2, v9);
    uint64_t v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 8);
    id v12 = v7;
    uint64_t result = v11(v6, v9, v10);
    if (v2)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      *uint64_t v16 = v6;
      v16[1] = 0xD000000000000010;
      v16[2] = 0x80000001B2EA3DA0;
      v16[3] = result;
      v16[4] = v14;
    }
  }
  else
  {
    id v15 = v17[0];
    sub_1B2E80388();

    return swift_willThrow();
  }
  return result;
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.SourceConfidenceView.confidence(source:signalType:)(Swift::String source, Swift::String signalType)
{
  swift_getObjectType();
  sub_1B2E80C28();
  if (!v2) {
    return v4;
  }
  return result;
}

uint64_t sub_1B2DB7D1C@<X0>(uint64_t a1@<X0>, void (**a2)(char *, uint64_t)@<X2>, uint64_t a3@<X3>, void (**a4)(char *, char *, uint64_t)@<X4>, void (*a5)(void, void, void)@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v73 = a5;
  uint64_t v71 = a4;
  uint64_t v72 = a2;
  uint64_t v69 = a1;
  uint64_t v65 = a6;
  uint64_t v81 = sub_1B2E80B98();
  uint64_t v64 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v80 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1B2E816D8();
  uint64_t v79 = *(void *)(v77 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v77);
  uint64_t v78 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v84 = (char *)v60 - v10;
  uint64_t v75 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D88D0);
  MEMORY[0x1F4188790](v75);
  uint64_t v74 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1B29A3EB4(&qword_1EB7D88E0);
  uint64_t v12 = MEMORY[0x1F4188790](v67);
  uint64_t v66 = (void *)((char *)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v76 = (uint64_t)v60 - v14;
  uint64_t v15 = sub_1B29A3EB4(&qword_1EB7E2790);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1B29A3EB4(&qword_1EB7E2E90);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1B2E814D8();
  sub_1B29A3EB4((uint64_t *)&unk_1E9C43F50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EBFA40;
  *(void *)(inited + 32) = 0x656372756F73;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v24 = MEMORY[0x1E4FBB1A0];
  uint64_t v25 = MEMORY[0x1E4F62F70];
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 80) = v25;
  *(void *)(inited + 48) = v72;
  *(void *)(inited + 56) = a3;
  *(void *)(inited + 88) = 0x79546C616E676973;
  *(void *)(inited + 96) = 0xEA00000000006570;
  *(void *)(inited + 128) = v24;
  *(void *)(inited + 136) = v25;
  uint64_t v26 = v73;
  *(void *)(inited + 104) = v71;
  *(void *)(inited + 112) = v26;
  uint64_t v68 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29A3EB4(&qword_1E9C3B6A8);
  sub_1B2E82148();
  sub_1B2E81468();
  swift_bridgeObjectRelease();
  sub_1B2A72DB8();
  uint64_t v27 = v70;
  uint64_t v28 = sub_1B2E80A68();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v27) {
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  uint64_t v30 = v67;
  uint64_t v62 = v22;
  uint64_t v31 = v79;
  uint64_t v63 = v20;
  if (!v28)
  {
    uint64_t v82 = 0;
    unint64_t v83 = 0xE000000000000000;
    sub_1B2E831F8();
    sub_1B2E82518();
    sub_1B2E82518();
    sub_1B2E82518();
    sub_1B2E82518();
    uint64_t v57 = v82;
    unint64_t v58 = v83;
    sub_1B2A823FC();
    swift_allocError();
    *(void *)uint64_t v59 = v57;
    *(void *)(v59 + 8) = v58;
    *(unsigned char *)(v59 + 16) = 1;
    swift_willThrow();
    uint64_t v20 = v63;
    uint64_t v22 = v62;
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  v60[1] = 0;
  uint64_t v61 = v19;
  uint64_t v82 = v28;
  uint64_t v32 = v66;
  *uint64_t v66 = v28;
  uint64_t v33 = v30;
  sub_1B2E813A8();
  sub_1B2B210EC((unint64_t *)&unk_1EB7D9AF0, MEMORY[0x1E4F62E40]);
  v60[0] = v28;
  swift_retain_n();
  sub_1B2E82BD8();
  uint64_t v34 = (uint64_t)v32;
  uint64_t v35 = v76;
  sub_1B2DB9F1C(v34, v76);
  uint64_t v69 = 0;
  uint64_t v36 = v35 + *(int *)(v33 + 36);
  uint64_t v37 = v31 + 16;
  uint64_t v73 = *(void (**)(void, void, void))(v31 + 16);
  uint64_t v72 = (void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v71 = (void (**)(char *, char *, uint64_t))(v64 + 32);
  uint64_t v70 = (void (**)(char *, uint64_t))(v64 + 8);
  LODWORD(v68) = 1;
  uint64_t v38 = v78;
  uint64_t v39 = v84;
  uint64_t v40 = v77;
  uint64_t v79 = v37;
  char v41 = v72;
  while (1)
  {
    v73(v39, v36, v40);
    uint64_t v42 = v38;
    sub_1B2E82C08();
    sub_1B2B210EC(&qword_1EB7D9B00, MEMORY[0x1E4F62F10]);
    char v43 = sub_1B2E82328();
    BOOL v44 = (uint64_t *)v35;
    uint64_t v45 = *v41;
    uint64_t v46 = v42;
    uint64_t v39 = v84;
    (*v41)(v46, v40);
    v45(v39, v40);
    if (v43) {
      break;
    }
    uint64_t v47 = (void (*)(uint64_t *, void))sub_1B2E82D38();
    uint64_t v48 = v74;
    sub_1B2B21134(v49, (uint64_t)v74);
    v47(&v82, 0);
    uint64_t v82 = *v44;
    sub_1B2E82C18();
    uint64_t v51 = *(void *)v48;
    uint64_t v50 = *((void *)v48 + 1);
    (*v71)(v80, &v48[*(int *)(v75 + 48)], v81);
    if (v51 == 0x6E656469666E6F63 && v50 == 0xEA00000000006563)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v53 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if ((v53 & 1) == 0)
      {
        (*v70)(v80, v81);
        goto LABEL_12;
      }
    }
    uint64_t v54 = v80;
    uint64_t v69 = sub_1B2E82AA8();
    LODWORD(v68) = v55 & 1;
    (*v70)(v54, v81);
LABEL_12:
    uint64_t v38 = v78;
    uint64_t v40 = v77;
    uint64_t v35 = v76;
  }
  swift_release_n();
  sub_1B2A10B50((uint64_t)v44, &qword_1EB7D88E0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v62, v61);
  uint64_t v56 = 0x3FE999999999999ALL;
  if ((v68 & 1) == 0) {
    uint64_t v56 = v69;
  }
  *uint64_t v65 = v56;
  return result;
}

uint64_t sub_1B2DB8730@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2DB7D1C(a1, *(void (***)(char *, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void (***)(char *, char *, uint64_t))(v2 + 40), *(void (**)(void, void, void))(v2 + 48), a2);
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.SourceConfidenceView.confidence(source:)(Swift::String source)
{
  swift_getObjectType();
  sub_1B2E80C28();
  if (!v1) {
    return v3;
  }
  return result;
}

uint64_t sub_1B2DB87FC@<X0>(void (*a1)(char *, uint64_t, uint64_t)@<X0>, void (**a2)(char *, uint64_t, uint64_t)@<X2>, void (**a3)(char *, char *, uint64_t)@<X3>, double *a4@<X8>)
{
  uint64_t v85 = a2;
  unint64_t v83 = a1;
  uint64_t v64 = a4;
  uint64_t v87 = sub_1B2E80B98();
  uint64_t v75 = *(void (***)(char *, uint64_t))(v87 - 8);
  MEMORY[0x1F4188790](v87);
  id v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1B2E816D8();
  uint64_t v79 = *(void (***)(char *, uint64_t))(v80 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v80);
  uint64_t v82 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v81 = (char *)&v61 - v9;
  uint64_t v78 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D88D0);
  MEMORY[0x1F4188790](v78);
  uint64_t v77 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1B29A3EB4(&qword_1EB7D88E0);
  uint64_t v11 = MEMORY[0x1F4188790](v71);
  uint64_t v70 = (double *)((char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v88 = (uint64_t *)((char *)&v61 - v13);
  uint64_t v14 = sub_1B29A3EB4(&qword_1EB7E2790);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1B29A3EB4(&qword_1EB7E2E90);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1B2E814D8();
  v90[3] = sub_1B2E81508();
  v90[4] = MEMORY[0x1E4F62E90];
  sub_1B29D1C70(v90);
  sub_1B2E81518();
  v89[3] = MEMORY[0x1E4FBB1A0];
  v89[4] = MEMORY[0x1E4F62F68];
  v89[0] = v85;
  v89[1] = a3;
  uint64_t v93 = sub_1B2E80BE8();
  uint64_t v94 = MEMORY[0x1E4F62D00];
  sub_1B29D1C70((uint64_t *)&v91);
  uint64_t v76 = a3;
  swift_bridgeObjectRetain();
  sub_1B2E812D8();
  sub_1B2A10B50((uint64_t)v89, &qword_1EB7E3BD0);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v90);
  sub_1B2E81498();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v91);
  sub_1B2A72DB8();
  double v22 = *(double *)&v84;
  unint64_t v23 = sub_1B2E80A58();
  double v24 = v22;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (v22 != 0.0) {
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  uint64_t v62 = v21;
  uint64_t v69 = v19;
  uint64_t v63 = v18;
  if (v23 >> 62) {
    goto LABEL_32;
  }
  uint64_t v26 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  uint64_t v27 = v82;
  uint64_t v19 = v69;
  uint64_t v28 = v71;
  if (!v26)
  {
    swift_bridgeObjectRelease();
    double v91 = 0.0;
    unint64_t v92 = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    double v91 = -2.31584178e77;
    unint64_t v92 = 0x80000001B2EA3DC0;
    sub_1B2E82518();
    uint64_t v58 = *(void *)&v91;
    unint64_t v59 = v92;
    sub_1B2A823FC();
    swift_allocError();
    *(void *)uint64_t v60 = v58;
    *(void *)(v60 + 8) = v59;
    *(unsigned char *)(v60 + 16) = 1;
    swift_willThrow();
    uint64_t v18 = v63;
    uint64_t v21 = v62;
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  double v61 = v24;
  uint64_t v72 = 0;
  uint64_t v29 = 0;
  unint64_t v68 = v23 & 0xC000000000000001;
  unint64_t v65 = v23 + 32;
  uint64_t v85 = (void (**)(char *, uint64_t, uint64_t))(v79 + 2);
  ++v79;
  uint64_t v76 = (void (**)(char *, char *, uint64_t))(v75 + 4);
  ++v75;
  double v30 = 0.0;
  uint64_t v31 = (uint64_t)v88;
  uint64_t v86 = v6;
  unint64_t v67 = v23;
  uint64_t v66 = v26;
  do
  {
    unint64_t v32 = v68;
    sub_1B2B47548(v29, v68 == 0, v23);
    if (v32)
    {
      double v24 = COERCE_DOUBLE(MEMORY[0x1B3EB1A20](v29, v23));
    }
    else
    {
      double v24 = *(double *)(v65 + 8 * v29);
      swift_retain();
    }
    uint64_t v33 = v70;
    BOOL v34 = __OFADD__(v29, 1);
    uint64_t v35 = v29 + 1;
    if (v34)
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1B2E83448();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    uint64_t v74 = v35;
    double v91 = v24;
    *uint64_t v70 = v24;
    uint64_t v36 = (uint64_t)v33;
    uint64_t v37 = v27;
    uint64_t v38 = sub_1B2E813A8();
    unint64_t v23 = sub_1B2B210EC((unint64_t *)&unk_1EB7D9AF0, MEMORY[0x1E4F62E40]);
    double v73 = v24;
    swift_retain();
    uint64_t v84 = v38;
    uint64_t v39 = v37;
    sub_1B2E82BD8();
    sub_1B2DB9F1C(v36, v31);
    uint64_t v40 = v31 + *(int *)(v28 + 36);
    unint64_t v83 = *v85;
    id v6 = v81;
    uint64_t v41 = v80;
    while (1)
    {
      v83(v6, v40, v41);
      sub_1B2E82C08();
      sub_1B2B210EC(&qword_1EB7D9B00, MEMORY[0x1E4F62F10]);
      char v42 = sub_1B2E82328();
      char v43 = *v79;
      (*v79)(v39, v41);
      v43(v6, v41);
      if (v42) {
        break;
      }
      BOOL v44 = v88;
      uint64_t v45 = (void (*)(double *, void))sub_1B2E82D38();
      uint64_t v46 = v77;
      sub_1B2B21134(v47, (uint64_t)v77);
      v45(&v91, 0);
      double v91 = *(double *)v44;
      sub_1B2E82C18();
      uint64_t v49 = *(void *)v46;
      uint64_t v48 = *((void *)v46 + 1);
      (*v76)(v86, &v46[*(int *)(v78 + 48)], v87);
      if (v49 == 0x6E656469666E6F63 && v48 == 0xEA00000000006563)
      {
        swift_bridgeObjectRelease();
LABEL_20:
        uint64_t v52 = v86;
        double v24 = COERCE_DOUBLE(sub_1B2E82AA8());
        char v54 = v53;
        char v55 = v52;
        uint64_t v39 = v82;
        (*v75)(v55, v87);
        id v6 = v81;
        uint64_t v41 = v80;
        if ((v54 & 1) == 0)
        {
          double v30 = v30 + v24;
          BOOL v34 = __OFADD__(v72++, 1);
          if (v34) {
            goto LABEL_31;
          }
        }
      }
      else
      {
        char v51 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        if (v51) {
          goto LABEL_20;
        }
        (*v75)(v86, v87);
        id v6 = v81;
        uint64_t v41 = v80;
        uint64_t v39 = v82;
      }
    }
    uint64_t v31 = (uint64_t)v88;
    sub_1B2A10B50((uint64_t)v88, &qword_1EB7D88E0);
    swift_release();
    uint64_t v29 = v74;
    uint64_t v56 = v69;
    uint64_t v28 = v71;
    unint64_t v23 = v67;
    uint64_t v27 = v82;
  }
  while (v74 != v66);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v62, v63);
  if (v30 == 0.0) {
    double v57 = 0.8;
  }
  else {
    double v57 = v30 / (double)v72;
  }
  double *v64 = v57;
  return result;
}

uint64_t sub_1B2DB928C@<X0>(void (*a1)(char *, uint64_t, uint64_t)@<X0>, double *a2@<X8>)
{
  return sub_1B2DB87FC(a1, *(void (***)(char *, uint64_t, uint64_t))(v2 + 24), *(void (***)(char *, char *, uint64_t))(v2 + 32), a2);
}

uint64_t ViewService.SourceConfidenceView.confidenceMap(source:)()
{
  sub_1B2DB9390();
  uint64_t v2 = sub_1B2E82148();
  swift_getObjectType();
  sub_1B2E80C28();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  return v2;
}

unint64_t sub_1B2DB9390()
{
  unint64_t result = qword_1EB7D88C0;
  if (!qword_1EB7D88C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D88C0);
  }
  return result;
}

uint64_t sub_1B2DB93DC(void (**a1)(char *, char *, uint64_t), uint64_t a2, void (**a3)(void, void, void), uint64_t a4, void (*a5)(char *, uint64_t))
{
  uint64_t v88 = a3;
  uint64_t v82 = a1;
  uint64_t v90 = sub_1B2E80B98();
  uint64_t v78 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v89 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B2E816D8();
  uint64_t v77 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v86 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  double v97 = (char *)v66 - v11;
  uint64_t v84 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D88D0);
  MEMORY[0x1F4188790](v84);
  unint64_t v83 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1B29A3EB4(&qword_1EB7D88E0);
  uint64_t v13 = MEMORY[0x1F4188790](v76);
  uint64_t v75 = (void *)((char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v85 = (uint64_t)v66 - v15;
  uint64_t v16 = sub_1B29A3EB4(&qword_1EB7E2790);
  uint64_t v81 = *(void (***)(char *, uint64_t))(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1B29A3EB4(&qword_1EB7E2E90);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  double v22 = (char *)v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1B2E814D8();
  v92[3] = sub_1B2E81508();
  v92[4] = MEMORY[0x1E4F62E90];
  sub_1B29D1C70(v92);
  sub_1B2E81518();
  v91[3] = MEMORY[0x1E4FBB1A0];
  v91[4] = MEMORY[0x1E4F62F68];
  v91[0] = v88;
  v91[1] = a4;
  uint64_t v95 = sub_1B2E80BE8();
  uint64_t v96 = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(&v93);
  uint64_t v80 = a4;
  swift_bridgeObjectRetain();
  sub_1B2E812D8();
  sub_1B2A10B50((uint64_t)v91, &qword_1EB7E3BD0);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v92);
  sub_1B2E81498();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v93);
  sub_1B2A72DB8();
  unint64_t v23 = v87;
  unint64_t v24 = sub_1B2E80A58();
  uint64_t v25 = (uint64_t)v23;
  uint64_t v26 = v18;
  uint64_t v27 = v19;
  v81[1](v26, v16);
  if (!v23)
  {
    unint64_t v67 = v22;
    uint64_t v68 = v20;
    uint64_t v74 = v19;
    if (v24 >> 62) {
      goto LABEL_33;
    }
    uint64_t v29 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      uint64_t v30 = v74;
      uint64_t v31 = v97;
      if (!v29) {
        break;
      }
      v66[1] = v25;
      uint64_t v79 = 0;
      uint64_t v80 = 0;
      uint64_t v32 = 0;
      unint64_t v73 = v24 & 0xC000000000000001;
      unint64_t v69 = v24 + 32;
      uint64_t v88 = (void (**)(void, void, void))(v77 + 16);
      uint64_t v33 = (void (**)(char *, uint64_t))(v77 + 8);
      uint64_t v82 = (void (**)(char *, char *, uint64_t))(v78 + 32);
      uint64_t v81 = (void (**)(char *, uint64_t))(v78 + 8);
      uint64_t v72 = a5;
      unint64_t v71 = v24;
      uint64_t v70 = v29;
      while (1)
      {
        unint64_t v34 = v73;
        sub_1B2B47548(v32, v73 == 0, v24);
        if (v34)
        {
          uint64_t v25 = MEMORY[0x1B3EB1A20](v32, v24);
        }
        else
        {
          uint64_t v25 = *(void *)(v69 + 8 * v32);
          swift_retain();
        }
        BOOL v35 = __OFADD__(v32, 1);
        uint64_t v36 = v32 + 1;
        uint64_t v37 = v76;
        uint64_t v38 = v75;
        if (v35) {
          break;
        }
        uint64_t v78 = v36;
        uint64_t v93 = v25;
        *uint64_t v75 = v25;
        uint64_t v39 = v37;
        uint64_t v40 = (uint64_t)v38;
        sub_1B2E813A8();
        sub_1B2B210EC((unint64_t *)&unk_1EB7D9AF0, MEMORY[0x1E4F62E40]);
        uint64_t v77 = v25;
        swift_retain();
        sub_1B2E82BD8();
        uint64_t v41 = v85;
        sub_1B2DB9F1C(v40, v85);
        uint64_t v42 = *(int *)(v39 + 36);
        uint64_t v43 = v41;
        uint64_t v44 = v41 + v42;
        uint64_t v87 = *v88;
LABEL_12:
        uint64_t v45 = v86;
        while (1)
        {
          v87(v31, v44, v8);
          uint64_t v46 = v45;
          sub_1B2E82C08();
          sub_1B2B210EC(&qword_1EB7D9B00, MEMORY[0x1E4F62F10]);
          char v47 = sub_1B2E82328();
          uint64_t v48 = (uint64_t *)v43;
          a5 = *v33;
          uint64_t v49 = v46;
          uint64_t v31 = v97;
          (*v33)(v49, v8);
          a5(v31, v8);
          if (v47) {
            break;
          }
          uint64_t v50 = (void (*)(uint64_t *, void))sub_1B2E82D38();
          char v51 = v83;
          sub_1B2B21134(v52, (uint64_t)v83);
          v50(&v93, 0);
          char v53 = v51;
          uint64_t v93 = *v48;
          sub_1B2E82C18();
          uint64_t v54 = *(void *)v51;
          uint64_t v55 = *((void *)v53 + 1);
          (*v82)(v89, &v53[*(int *)(v84 + 48)], v90);
          BOOL v56 = v54 == 0x79546C616E676973 && v55 == 0xEA00000000006570;
          if (v56 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v59 = v89;
            uint64_t v79 = sub_1B2E82428();
            uint64_t v80 = v60;
            (*v81)(v59, v90);
          }
          else
          {
            if (v54 == 0x6E656469666E6F63 && v55 == 0xEA00000000006563)
            {
              swift_bridgeObjectRelease();
LABEL_28:
              double v61 = v89;
              sub_1B2E82AA8();
              (*v81)(v61, v90);
              uint64_t v43 = v85;
              goto LABEL_12;
            }
            char v58 = sub_1B2E837A8();
            swift_bridgeObjectRelease();
            if (v58) {
              goto LABEL_28;
            }
            (*v81)(v89, v90);
          }
          uint64_t v45 = v86;
          uint64_t v43 = v85;
        }
        sub_1B2A10B50((uint64_t)v48, &qword_1EB7D88E0);
        swift_bridgeObjectRetain();
        sub_1B2B2A6C0();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v32 = v78;
        uint64_t v62 = v74;
        unint64_t v24 = v71;
        if (v78 == v70)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v67, v62);
        }
      }
      __break(1u);
LABEL_33:
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1B2E83448();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v93 = 0;
    unint64_t v94 = 0xE000000000000000;
    uint64_t v27 = v30;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    uint64_t v93 = 0xD00000000000002ELL;
    unint64_t v94 = 0x80000001B2EA3DC0;
    sub_1B2E82518();
    uint64_t v63 = v93;
    unint64_t v64 = v94;
    sub_1B2A823FC();
    swift_allocError();
    *(void *)uint64_t v65 = v63;
    *(void *)(v65 + 8) = v64;
    *(unsigned char *)(v65 + 16) = 1;
    swift_willThrow();
    uint64_t v20 = v68;
    double v22 = v67;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v27);
}

uint64_t sub_1B2DB9EEC(void (**a1)(char *, char *, uint64_t))
{
  return sub_1B2DB93DC(a1, *(void *)(v1 + 16), *(void (***)(void, void, void))(v1 + 24), *(void *)(v1 + 32), *(void (**)(char *, uint64_t))(v1 + 40));
}

ValueMetadata *type metadata accessor for ViewService.SourceConfidenceView()
{
  return &type metadata for ViewService.SourceConfidenceView;
}

uint64_t sub_1B2DB9F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7D88E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B2DB9F84()
{
  sub_1B299F300();
  uint64_t v34 = v3;
  uint64_t v4 = v0;
  uint64_t v5 = v2;
  uint64_t v6 = *(void *)(v1 + 16);
  if (v6)
  {
    uint64_t v7 = v1;
    uint64_t v40 = MEMORY[0x1E4FBC860];
    sub_1B29C17E4();
    int64_t v8 = sub_1B2AC5030(v7);
    int v10 = v9;
    char v12 = v11 & 1;
    uint64_t v33 = v7 + 56;
    uint64_t v26 = v5;
    uint64_t v13 = *(void *)(v5 + 24);
    uint64_t v31 = *(void *)(v5 + 32);
    uint64_t v32 = v13;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v29 = v39;
    long long v28 = xmmword_1B2EC00A0;
    uint64_t v27 = v7;
    while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(unsigned char *)(v7 + 32))
    {
      if (((*(void *)(v33 + (((unint64_t)v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_16;
      }
      if (*(_DWORD *)(v7 + 36) != v10) {
        goto LABEL_17;
      }
      int v14 = v10;
      uint64_t v36 = v6;
      uint64_t v15 = *(void *)(*(void *)(v7 + 48) + 8 * v8);
      sub_1B29A3EB4(&qword_1EB7D98E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v28;
      *(void *)(inited + 32) = v15;
      sub_1B2A17D40();
      v38[0] = 0;
      v38[1] = v17;
      uint64_t v18 = v29;
      *uint64_t v29 = 0u;
      v18[1] = 0u;
      v18[2] = 0u;
      v18[3] = 0u;
      v18[4] = 0u;
      *((void *)v18 + 10) = 0;
      v39[88] = 65;
      MEMORY[0x1F4188790](v17);
      sub_1B2DC0AE4((uint64_t)&v26);
      *(void *)(v19 - 16) = v38;
      sub_1B29A3EB4(&qword_1EB7D7628);
      sub_1B2E80C28();
      if (v4)
      {
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_1B2B876B4(v26);
        goto LABEL_14;
      }
      uint64_t v35 = 0;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v20 = v37;
      unint64_t v21 = *(void *)(v40 + 16);
      if (v21 >= *(void *)(v40 + 24) >> 1) {
        sub_1B29C17E4();
      }
      *(void *)(v40 + 16) = v21 + 1;
      uint64_t v22 = v40 + 16 * v21;
      *(void *)(v22 + 32) = v15;
      *(void *)(v22 + 40) = v20;
      uint64_t v7 = v27;
      int64_t v23 = sub_1B2DC088C(v8, v14, v12 & 1, v27);
      int64_t v8 = v23;
      int v10 = v24;
      char v12 = v25 & 1;
      uint64_t v6 = v36 - 1;
      uint64_t v4 = v35;
      if (v36 == 1)
      {
        sub_1B2A84DD4(v23, v24, v25 & 1);
        sub_1B2B876B4(v26);
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    sub_1B2B876B4(v2);
LABEL_14:
    sub_1B29998C8();
  }
}

uint64_t sub_1B2DBA29C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!v3) {
    return v4;
  }
  uint64_t v5 = a1;
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1B29C1794();
  uint64_t v4 = v22;
  uint64_t v6 = sub_1B2B1D160(v5);
  if (v6 < 0 || (unint64_t v8 = v6, v6 >= 1 << *(unsigned char *)(v5 + 32)))
  {
LABEL_18:
    __break(1u);
  }
  else
  {
    uint64_t v9 = v5 + 64;
    uint64_t v18 = v5 + 64;
    while ((*(void *)(v9 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
    {
      if (v7 != *(_DWORD *)(v5 + 36)) {
        goto LABEL_20;
      }
      uint64_t v19 = v3;
      int v20 = v7;
      uint64_t v10 = *(void *)(v5 + 56);
      uint64_t v11 = v5;
      uint64_t v12 = *(void *)(*(void *)(v5 + 48) + 8 * v8);
      uint64_t v21 = *(void *)(v10 + 8 * v8);
      swift_bridgeObjectRetain_n();
      sub_1B2DBA688(&v21);
      if (v2) {
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      uint64_t v13 = v21;
      uint64_t v22 = v4;
      unint64_t v14 = *(void *)(v4 + 16);
      if (v14 >= *(void *)(v4 + 24) >> 1)
      {
        sub_1B29C1794();
        uint64_t v4 = v22;
      }
      *(void *)(v4 + 16) = v14 + 1;
      uint64_t v15 = v4 + 16 * v14;
      *(void *)(v15 + 32) = v12;
      *(void *)(v15 + 40) = v13;
      if ((uint64_t)v8 >= -(-1 << *(unsigned char *)(v11 + 32))) {
        goto LABEL_21;
      }
      uint64_t v9 = v18;
      if ((*(void *)(v18 + 8 * (v8 >> 6)) & (1 << v8)) == 0) {
        goto LABEL_22;
      }
      uint64_t v5 = v11;
      if (v20 != *(_DWORD *)(v11 + 36)) {
        goto LABEL_23;
      }
      uint64_t v16 = sub_1B2E830E8();
      uint64_t v3 = v19 - 1;
      if (v19 == 1) {
        return v4;
      }
      unint64_t v8 = v16;
      uint64_t v2 = 0;
      if ((v16 & 0x8000000000000000) == 0)
      {
        int v7 = *(_DWORD *)(v5 + 36);
        if (v16 < 1 << *(unsigned char *)(v5 + 32)) {
          continue;
        }
      }
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1B2DBA498(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v6 = (unsigned char *)(swift_bridgeObjectRetain() + 88);
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v28 = a2;
    while (1)
    {
      if ((*v6 & 1) == 0)
      {
        uint64_t v8 = *((void *)v6 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B2DA3F50(v8, (uint64_t)&v21);
        if (v3)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = v22;
        if (v22)
        {
          uint64_t v10 = v21;
          long long v19 = v24;
          long long v20 = v23;
          uint64_t v11 = v26;
          long long v17 = v27;
          long long v18 = v25;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B29BA0A8();
            uint64_t v7 = v14;
          }
          unint64_t v12 = *(void *)(v7 + 16);
          if (v12 >= *(void *)(v7 + 24) >> 1)
          {
            sub_1B29BA0A8();
            uint64_t v7 = v15;
          }
          *(void *)(v7 + 16) = v12 + 1;
          uint64_t v13 = v7 + 88 * v12;
          *(void *)(v13 + 32) = v10;
          *(void *)(v13 + 40) = v9;
          *(_OWORD *)(v13 + 48) = v20;
          *(_OWORD *)(v13 + 64) = v19;
          *(_OWORD *)(v13 + 80) = v18;
          *(void *)(v13 + 96) = v11;
          *(_OWORD *)(v13 + 104) = v17;
        }
      }
      v6 += 64;
      if (!--v5)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v7;
      }
    }
  }
  swift_release();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1B2DBA688(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2DCA650();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1B2DBF34C(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1B2DBA6F4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t *, uint64_t (*)(uint64_t, uint64_t), void *))result;
    swift_bridgeObjectRetain();
    uint64_t v7 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v8 = *v7;
      uint64_t v13 = *(v7 - 1);
      uint64_t v12 = v8;
      MEMORY[0x1F4188790](v8);
      id v11[2] = &v12;
      swift_bridgeObjectRetain();
      char v9 = v6(&v13, sub_1B2DA58C0, v11);
      if (v3) {
        break;
      }
      char v10 = v9;
      swift_bridgeObjectRelease();
      if (v10)
      {
        v7 += 2;
        if (--v4) {
          continue;
        }
      }
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2DBA808(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  sub_1B2E831F8();
  uint64_t v4 = 0;
  unint64_t v5 = 0xE000000000000000;
  sub_1B2E82518();
  memcpy(v3, __dst, 0x69uLL);
  sub_1B2E83388();
  sub_1B2E82518();
  sub_1B2DC0970((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B2A34B34);
  return v4;
}

uint64_t sub_1B2DBA8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = MEMORY[0x1E4FBC870];
  void v5[2] = &v6;
  v5[3] = &v7;
  void v5[4] = a1;
  v5[5] = a2;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1B2DBA29C(v2);
  sub_1B2DBA6F4((uint64_t)sub_1B2DC09F8, (uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DBA98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *, char *), uint64_t a7)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v12 = sub_1B29A3EB4(&qword_1E9C3EF58);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  long long v17 = (char *)v26 - v16;
  uint64_t v18 = sub_1B29A3EB4(&qword_1E9C44020);
  MEMORY[0x1F4188790](v18);
  long long v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1B2B55230(a1, &v29);
  if (v7)
  {
  }
  else
  {
    v26[1] = a7;
    uint64_t v22 = v29;
    uint64_t v29 = a5;
    MEMORY[0x1F4188790](v21);
    uint64_t v23 = v28;
    v26[-4] = v27;
    v26[-3] = v23;
    v26[-2] = &v29;
    sub_1B2B86D34(sub_1B2DC0A38, 0, (uint64_t)v17);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v17, 1, v18) != 1)
    {
      sub_1B2DC0764((uint64_t)v17, (uint64_t)v20);
      uint64_t v29 = v22;
      sub_1B29C3FC4((uint64_t)v20, (uint64_t)v15, &qword_1E9C44020);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v15, 0, 1, v18);
      char v24 = a6(&v29, v15);
      sub_1B29C4148((uint64_t)v15, &qword_1E9C3EF58);
      sub_1B29C4148((uint64_t)v20, &qword_1E9C44020);
      return v24 & 1;
    }
    sub_1B29C4148((uint64_t)v17, &qword_1E9C3EF58);
  }
  char v24 = 1;
  return v24 & 1;
}

uint64_t ViewService.sportsSchedulesView.getter@<X0>(void *a1@<X8>)
{
  v16[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  sub_1B29A3494();
  unint64_t v5 = (void *)sub_1B2E82348();
  v16[0] = 0;
  id v6 = objc_msgSend(v4, sel_requestAssertionForViewName_error_, v5, v16);

  id v7 = v16[0];
  if (v6)
  {
    uint64_t v8 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    uint64_t v9 = v8[5];
    uint64_t v10 = v8[6];
    sub_1B29AEC7C(v8 + 2, v9);
    uint64_t v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 8);
    id v12 = v7;
    uint64_t result = v11(v6, v9, v10);
    if (v2)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      *a1 = v6;
      a1[1] = 0x6870617267;
      a1[2] = 0xE500000000000000;
      a1[3] = result;
      a1[4] = v14;
    }
  }
  else
  {
    id v15 = v16[0];
    sub_1B2E80388();

    return swift_willThrow();
  }
  return result;
}

uint64_t static ViewService.SportsSchedulesView.name.getter()
{
  return sub_1B29A3494();
}

void ViewService.SportsSchedulesView.enumerateGames(in:block:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v84 = a2;
  uint64_t v85 = a3;
  uint64_t v5 = sub_1B2E80898();
  sub_1B299D31C();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  uint64_t v89 = v9;
  uint64_t v10 = sub_1B2E80B58();
  sub_1B299D31C();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1B2B705D4();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v91 = (uint64_t)&v84 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v93 = (uint64_t *)((char *)&v84 - v17);
  long long v18 = *(_OWORD *)(v3 + 16);
  v100[0] = *(_OWORD *)v3;
  v100[1] = v18;
  uint64_t v101 = *(void *)(v3 + 32);
  sub_1B2E805C8();
  double v20 = v19;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7D74F0);
  sub_1B2E805C8();
  if (v20 > v21)
  {
    __break(1u);
  }
  else
  {
    uint64_t v108 = v4;
    sub_1B29A3EB4((uint64_t *)&unk_1EB7D9AE0);
    uint64_t v22 = swift_allocObject();
    *(double *)&long long v23 = sub_1B2DC0A98(v22, (__n128)xmmword_1B2EBFA40);
    __src[0] = 0;
    __src[1] = v24;
    long long v103 = v23;
    long long v104 = v23;
    long long v105 = v23;
    long long v106 = v23;
    v107[0] = v23;
    *(_OWORD *)((char *)v107 + 9) = v23;
    if (qword_1EB7E52B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v25 = sub_1B2E81FB8();
  uint64_t v26 = sub_1B29A4B98(v25, (uint64_t)qword_1EB7E52A0);
  swift_bridgeObjectRetain_n();
  uint64_t v90 = (uint8_t *)v26;
  uint64_t v27 = sub_1B2E81F98();
  os_log_type_t v28 = sub_1B2E82DA8();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v92 = v12;
  uint64_t v87 = v7;
  uint64_t v88 = v5;
  if (v29)
  {
    uint64_t v30 = (uint8_t *)sub_1B2C36E08();
    v96[0] = swift_slowAlloc();
    uint64_t v86 = v10;
    *(_DWORD *)uint64_t v30 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1B2DBA808(__src);
    sub_1B29BF6BC(v31, v32, (uint64_t)v96, v33, v34, v35, v36, v37, v84, v85, v86, v87, v88, v89, (uint64_t)v90, v91, v92, (uint64_t)v93, (uint64_t)v94,
      v95);
    uint64_t v99 = v38;
    uint64_t v10 = v86;
    sub_1B2E82FB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B2996000, v27, v28, "SportsSchedulesView: enumerateGames query: %s", v30, 0xCu);
    swift_arrayDestroy();
    sub_1B299B750();
    uint64_t v12 = v92;
    sub_1B299B750();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v99 = MEMORY[0x1E4FBC868];
  uint64_t ObjectType = swift_getObjectType();
  MEMORY[0x1F4188790](ObjectType);
  sub_1B2DC0AE4((uint64_t)&v84);
  *(void *)(v40 - 16) = __src;
  sub_1B29A3EB4(&qword_1EB7D7628);
  uint64_t v41 = v94;
  sub_1B2E80C28();
  if (v41)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = v108;
    uint64_t v43 = (void (*)(void, void, void))v93;
    id v98 = v41;
    id v51 = v41;
    sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
    if (swift_dynamicCast())
    {
      uint64_t v108 = 0;

      uint64_t v52 = v91;
      (*(void (**)(uint64_t, void, uint64_t))(v12 + 32))(v91, v43, v10);
      uint64_t v53 = v12 + 16;
      uint64_t v93 = *(uint64_t **)(v12 + 16);
      ((void (*)(uint64_t, uint64_t, uint64_t))v93)(v42, v52, v10);
      uint64_t v54 = sub_1B2E81F98();
      uint64_t v55 = v12;
      os_log_type_t v56 = sub_1B2E82DB8();
      BOOL v57 = os_log_type_enabled(v54, v56);
      unint64_t v94 = (void *)v53;
      if (v57)
      {
        char v58 = (uint8_t *)sub_1B2C36E08();
        uint64_t v97 = swift_slowAlloc();
        *(_DWORD *)char v58 = 136315138;
        uint64_t v90 = v58 + 4;
        sub_1B2DBF308(&qword_1E9C43F90);
        uint64_t v59 = sub_1B2E83748();
        sub_1B29BF6BC(v59, v60, (uint64_t)&v97, v61, v62, v63, v64, v65, v84, v85, v86, v87, v88, v89, (uint64_t)v90, v91, v92, (uint64_t)v93, (uint64_t)v94,
          v95);
        v96[12] = v66;
        sub_1B2E82FB8();
        swift_bridgeObjectRelease();
        unint64_t v67 = *(void (**)(void))(v92 + 8);
        sub_1B2C91A78();
        v67();
        _os_log_impl(&dword_1B2996000, v54, v56, "SportsSchedulesView: enumerateGames database error: %s", v58, 0xCu);
        swift_arrayDestroy();
        sub_1B299B750();
        sub_1B299B750();
      }
      else
      {
        unint64_t v67 = *(void (**)(void))(v55 + 8);
        sub_1B2C91A78();
        v67();
      }

      type metadata accessor for ViewService();
      uint64_t v68 = (void *)static ViewService.clientService.getter();
      uint64_t v69 = v89;
      uint64_t v70 = v91;
      sub_1B2E80B48();
      sub_1B2E80888();
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v69, v88);
      v71._countAndFlagsBits = sub_1B29A3494();
      ViewService.reportSQLiteError(for:sqliteErrorCode:)(v71, v72);
      if (v73)
      {
        sub_1B2C91A78();
        v67();
      }
      else
      {

        sub_1B2DBF308(&qword_1E9C3B6B8);
        swift_allocError();
        ((void (*)(uint64_t, uint64_t, uint64_t))v93)(v74, v70, v10);
        swift_willThrow();
        ((void (*)(uint64_t, uint64_t))v67)(v70, v10);
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v96[0];
    uint64_t v45 = *(void *)(v96[0] + 16);
    if (v45)
    {
      uint64_t v86 = v10;
      v96[0] = MEMORY[0x1E4FBC860];
      sub_1B29C03A0();
      uint64_t v46 = v96[0];
      unint64_t v47 = *(void *)(v96[0] + 16);
      uint64_t v48 = 32;
      do
      {
        uint64_t v49 = *(void *)(v44 + v48);
        v96[0] = v46;
        if (v47 >= *(void *)(v46 + 24) >> 1)
        {
          sub_1B29C03A0();
          uint64_t v46 = v96[0];
        }
        *(void *)(v46 + 16) = v47 + 1;
        *(void *)(v46 + 8 * v47 + 32) = v49;
        v48 += 120;
        ++v47;
        --v45;
      }
      while (v45);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2DDC524();
    sub_1B2B8766C((uint64_t)v100);
    sub_1B2DB9F84();
    uint64_t v75 = v50;
    swift_bridgeObjectRelease();
    uint64_t v76 = sub_1B2AF8ED8(v75);
    uint64_t v99 = v76;
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_1B2E81F98();
    os_log_type_t v78 = sub_1B2E82DA8();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)sub_1B2C36E08();
      *(_DWORD *)uint64_t v79 = 134217984;
      v96[0] = *(void *)(v76 + 16);
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B2996000, v77, v78, "SportsSchedulesView: triplesDict: %ld keys", v79, 0xCu);
      sub_1B299B750();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    sub_1B29A3EB4(&qword_1EB7D74E8);
    swift_initStackObject();
    sub_1B2B8766C((uint64_t)v100);
    uint64_t v80 = sub_1B29C88B0((uint64_t)v100);
    swift_beginAccess();
    uint64_t v81 = v99;
    sub_1B29A3EB4(qword_1EB7D7590);
    swift_initStackObject();
    uint64_t v82 = sub_1B29C83C8(v81);
    MEMORY[0x1F4188790](v82);
    uint64_t v83 = v84;
    *(&v84 - 4) = v80;
    *(&v84 - 3) = v83;
    *(&v84 - 2) = v85;
    sub_1B2DBA8E8((uint64_t)sub_1B2DBFE4C, (uint64_t)(&v84 - 6));
    swift_release();
    swift_release();
  }
}

uint64_t sub_1B2DBB724(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1EB7D7628);
  uint64_t result = sub_1B2E80C28();
  if (!v1) {
    return v4;
  }
  return result;
}

uint64_t sub_1B2DBB804(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v49 = a5;
  uint64_t v51 = a3;
  uint64_t v55 = a2;
  uint64_t v50 = type metadata accessor for CustomGraphSportsGameEvent(0);
  MEMORY[0x1F4188790](v50);
  uint64_t v52 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C3EF58);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1B29A3EB4(&qword_1E9C44020);
  uint64_t v13 = MEMORY[0x1F4188790](v54);
  uint64_t v53 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = *a1;
  if (qword_1EB7E52B8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1B2E81FB8();
  uint64_t v48 = sub_1B29A4B98(v18, (uint64_t)qword_1EB7E52A0);
  double v19 = sub_1B2E81F98();
  os_log_type_t v20 = sub_1B2E82DA8();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v47 = v5;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v46 = a4;
    uint64_t v24 = v23;
    uint64_t v57 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v56 = v17;
    sub_1B29A3EB4(&qword_1E9C3F1E0);
    uint64_t v25 = sub_1B2E823E8();
    sub_1B29BF6BC(v25, v26, (uint64_t)&v57, v27, v28, v29, v30, v31, v45, (unint64_t)v46, v47, v48, v49, v50, v51, v52, v53, v54, v55,
      v56);
    uint64_t v56 = v32;
    sub_1B2E82FB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B2996000, v19, v20, "SportsSchedulesView: enumerateGraphObjects: %s", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v33 = v24;
    a4 = v46;
    MEMORY[0x1B3EB30C0](v33, -1, -1);
    uint64_t v34 = v22;
    uint64_t v6 = v47;
    MEMORY[0x1B3EB30C0](v34, -1, -1);
  }

  sub_1B29C3FC4(v55, (uint64_t)v12, &qword_1E9C3EF58);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v12, 1, v54) == 1)
  {
    sub_1B29C4148((uint64_t)v12, &qword_1E9C3EF58);
    LOBYTE(v35) = 1;
    return v35 & 1;
  }
  sub_1B2DC0764((uint64_t)v12, (uint64_t)v16);
  uint64_t v35 = v53;
  sub_1B29C3FC4((uint64_t)v16, v53, &qword_1E9C44020);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v57 = *(void *)v35;
    sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
    swift_willThrowTypedImpl();
LABEL_11:
    sub_1B29C4148((uint64_t)v16, &qword_1E9C44020);
    return v35 & 1;
  }
  uint64_t v36 = (uint64_t)v16;
  uint64_t v37 = v52;
  sub_1B2DC07CC(v35, v52);
  uint64_t v38 = v51;
  uint64_t v35 = *(void *)(v37 + *(int *)(v50 + 48));
  swift_retain();
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v40 = sub_1B2DBA498(v39, v38);
  swift_bridgeObjectRelease();
  if (v6)
  {
    sub_1B2DC0830(v37);
    uint64_t v16 = (char *)v36;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_1B2E81F98();
  os_log_type_t v43 = sub_1B2E82DA8();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 134217984;
    uint64_t v57 = *(void *)(v40 + 16);
    sub_1B2E82FB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B2996000, v42, v43, "SportsSchedulesView: teams: %ld", v44, 0xCu);
    MEMORY[0x1B3EB30C0](v44, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  LOBYTE(v35) = a4(v37, v40);
  swift_bridgeObjectRelease();
  sub_1B2DC0830(v37);
  sub_1B29C4148(v36, &qword_1E9C44020);
  return v35 & 1;
}

void ViewService.SportsSchedulesView.enumerateAllGames(block:)()
{
  sub_1B299F300();
  sub_1B2E80898();
  sub_1B299D31C();
  uint64_t v42 = v4;
  uint64_t v43 = v3;
  MEMORY[0x1F4188790](v3);
  sub_1B299B6D0();
  uint64_t v41 = v5;
  uint64_t v6 = sub_1B2E80B58();
  sub_1B299D31C();
  uint64_t v44 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1B2B705D4();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v38 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v38 - v13;
  long long v15 = *(_OWORD *)(v0 + 16);
  v47[0] = *(_OWORD *)v0;
  v47[1] = v15;
  uint64_t v48 = *(void *)(v0 + 32);
  sub_1B29A3EB4(&qword_1EB7D74E8);
  swift_initStackObject();
  sub_1B2B8766C((uint64_t)v47);
  sub_1B29C88B0((uint64_t)v47);
  swift_retain();
  sub_1B2B84A18();
  if (v1)
  {
    swift_release();
    uint64_t v49 = v1;
    id v16 = v1;
    sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
    if (swift_dynamicCast())
    {

      uint64_t v17 = v44;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v12, v14, v6);
      if (qword_1EB7E52B8 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1B2E81FB8();
      sub_1B29A4B98(v18, (uint64_t)qword_1EB7E52A0);
      double v19 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
      uint64_t v40 = v17 + 16;
      uint64_t v39 = v19;
      v19(v2, v12, v6);
      os_log_type_t v20 = sub_1B2E81F98();
      os_log_type_t v21 = sub_1B2E82DB8();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)sub_1B2C36E08();
        v46[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 136315138;
        uint64_t v38 = v22 + 4;
        sub_1B2DBF308(&qword_1E9C43F90);
        uint64_t v23 = sub_1B2E83748();
        sub_1B29BF6BC(v23, v24, (uint64_t)v46, v25, v26, v27, v28, v29, (uint64_t)v38, (unint64_t)v39, v40, v41, v42, v43, v44, v45, v46[0], v46[1], v46[2],
          v46[3]);
        uint64_t v45 = v30;
        sub_1B2E82FB8();
        swift_bridgeObjectRelease();
        uint64_t v31 = *(void (**)(void))(v44 + 8);
        sub_1B2C91A78();
        v31();
        _os_log_impl(&dword_1B2996000, v20, v21, "SportsSchedulesView: enumerateAllGames database error: %s", v22, 0xCu);
        swift_arrayDestroy();
        sub_1B299B750();
        sub_1B299B750();
      }
      else
      {
        uint64_t v31 = *(void (**)(void))(v17 + 8);
        ((void (*)(uint64_t, uint64_t))v31)(v2, v6);
      }

      type metadata accessor for ViewService();
      uint64_t v32 = (void *)static ViewService.clientService.getter();
      uint64_t v33 = v41;
      sub_1B2E80B48();
      sub_1B2E80888();
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v33, v43);
      v34._countAndFlagsBits = sub_1B29A3494();
      ViewService.reportSQLiteError(for:sqliteErrorCode:)(v34, v35);
      if (v36)
      {
        sub_1B2C91A78();
        v31();
      }
      else
      {

        sub_1B2DBF308(&qword_1E9C3B6B8);
        swift_allocError();
        v39(v37, v12, v6);
        swift_willThrow();
        ((void (*)(char *, uint64_t))v31)(v12, v6);
      }
    }
  }
  else
  {
    swift_release();
  }
  sub_1B29998C8();
}

void sub_1B2DBC1A0()
{
  sub_1B299F300();
  uint64_t v27 = v2;
  uint64_t v28 = v0;
  uint64_t v26 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  type metadata accessor for CustomGraphSportsGameEvent(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v8);
  sub_1B299E4A0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_1B29A3EB4(&qword_1E9C3EF58);
  MEMORY[0x1F4188790](v12 - 8);
  sub_1B299E4A0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_1B29A3EB4(&qword_1E9C44020);
  sub_1B2999864();
  MEMORY[0x1F4188790](v17);
  sub_1B2B87948();
  MEMORY[0x1F4188790](v18);
  os_log_type_t v20 = (char *)&v25 - v19;
  sub_1B29C3FC4(v7, v15, &qword_1E9C3EF58);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v15, 1, v16) == 1)
  {
    sub_1B29C4148(v15, &qword_1E9C3EF58);
  }
  else
  {
    os_log_type_t v21 = v26;
    sub_1B2DC0764(v15, (uint64_t)v20);
    sub_1B29C3FC4((uint64_t)v20, v1, &qword_1E9C44020);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
      swift_willThrowTypedImpl();
    }
    else
    {
      sub_1B2DC07CC(v1, v11);
      swift_retain();
      uint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = v28;
      uint64_t v24 = sub_1B2DBA498(v22, v5);
      swift_bridgeObjectRelease();
      if (!v23)
      {
        v21(v11, v24);
        swift_bridgeObjectRelease();
        sub_1B2DC0830(v11);
        sub_1B29C4148((uint64_t)v20, &qword_1E9C44020);
        goto LABEL_8;
      }
      sub_1B2DC0830(v11);
    }
    sub_1B29C4148((uint64_t)v20, &qword_1E9C44020);
  }
LABEL_8:
  sub_1B29998C8();
}

uint64_t ViewService.SportsSchedulesView.enumerateTriples(for:block:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_1B29A3EB4(&qword_1EB7D98E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
  *(void *)(inited + 32) = v1;
  sub_1B2A17D40();
  swift_getObjectType();
  sub_1B2E80C28();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DBC538(uint64_t a1, uint64_t (*a2)(_OWORD *))
{
  uint64_t v2 = *(void *)(a1 + 32);
  __int16 v3 = *(_WORD *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 80);
  __int16 v5 = *(_WORD *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v8 = *(void *)(a1 + 112);
  long long v9 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v9;
  uint64_t v13 = v2;
  __int16 v14 = v3;
  long long v10 = *(_OWORD *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 48);
  long long v16 = v10;
  uint64_t v17 = v4;
  __int16 v18 = v5;
  uint64_t v19 = v6;
  uint64_t v20 = v7;
  uint64_t v21 = v8;
  return a2(v12) & 1;
}

uint64_t sub_1B2DBC5B0(uint64_t a1, uint64_t (*a2)(uint64_t *, uint64_t (*)()))
{
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1E9C38970);
  uint64_t result = sub_1B2E80C28();
  if (!v2)
  {
    uint64_t v5 = v11;
    uint64_t v6 = *(void *)(v11 + 16);
    if (v6)
    {
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = 0;
      do
      {
        uint64_t v11 = *(void *)(v5 + 8 * v8 + 32);
        uint64_t v9 = MEMORY[0x1F4188790](v7);
        MEMORY[0x1F4188790](v9);
        uint64_t v7 = a2(&v11, sub_1B2DC0A80);
        BOOL v10 = v6 - 1 != v8++;
      }
      while ((v7 & v10 & 1) != 0);
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void ViewService.SportsSchedulesView.enumerateTriples(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B299F300();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1E9C38970);
  sub_1B2E80C28();
  if (!v20)
  {
    uint64_t v25 = a10;
    uint64_t v26 = *(void *)(a10 + 16);
    if (v26)
    {
      uint64_t v27 = swift_bridgeObjectRetain();
      uint64_t v28 = 0;
      do
      {
        a10 = *(void *)(v25 + 8 * v28 + 32);
        MEMORY[0x1F4188790](v27);
        sub_1B299BD80();
        uint64_t v27 = v24(&a10, sub_1B2B876FC);
        BOOL v29 = v26 - 1 != v28++;
      }
      while ((v27 & v29 & 1) != 0);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

void sub_1B2DBC8C0()
{
  sub_1B299F300();
  __int16 v18 = v2;
  uint64_t v3 = sub_1B29A3EB4((uint64_t *)&unk_1E9C3E380);
  sub_1B299D31C();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B2B705D4();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v17 - v8;
  sub_1B29A3EB4(&qword_1EB7D98C0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B2EC00A0;
  if (qword_1E9C38D00 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1B2E81508();
  uint64_t v12 = sub_1B29A4B98(v11, (uint64_t)qword_1E9CAF938);
  uint64_t v13 = MEMORY[0x1E4F62E78];
  *(void *)(v10 + 56) = v11;
  *(void *)(v10 + 64) = v13;
  __int16 v14 = sub_1B29D1C70((uint64_t *)(v10 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v14, v12, v11);
  sub_1B2DC0160();
  MEMORY[0x1B3EAF150](v10);
  swift_bridgeObjectRelease();
  sub_1B2E81108();
  long long v15 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v15(v1, v3);
  sub_1B29D22C4((unint64_t *)&qword_1E9C44410, (uint64_t *)&unk_1E9C3E380);
  sub_1B29D1C24();
  uint64_t v16 = sub_1B2E80A38();
  v15((uint64_t)v9, v3);
  if (!v0) {
    *__int16 v18 = v16;
  }
  sub_1B29998C8();
}

void ViewService.SportsSchedulesView.enumerateTriples<A>(for:block:)()
{
  sub_1B299F300();
  uint64_t v2 = v0;
  uint64_t v20 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_1B299D31C();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1B299E4A0();
  uint64_t v13 = v12 - v11;
  swift_getAssociatedTypeWitness();
  sub_1B299D31C();
  MEMORY[0x1F4188790](v14);
  long long v15 = v2[1];
  long long v22 = *v2;
  long long v23 = v15;
  uint64_t v24 = *((void *)v2 + 4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v13, v20, v5);
  sub_1B2E82668();
  swift_getAssociatedConformanceWitness();
  do
  {
    uint64_t v16 = sub_1B2E82FA8();
    if (v21[8]) {
      break;
    }
    MEMORY[0x1F4188790](v16);
    sub_1B299BD80();
    char v17 = v7(v21, sub_1B2B878A8);
    if (v1) {
      break;
    }
  }
  while ((v17 & 1) != 0);
  uint64_t v18 = sub_1B2DC0B24();
  v19(v18);
  sub_1B29998C8();
}

uint64_t sub_1B2DBCCE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4;
  return ViewService.SportsSchedulesView.enumerateTriples(for:block:)(&v5);
}

uint64_t sub_1B2DBCD1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, const void *a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v32 = a6;
  uint64_t v30 = a1;
  uint64_t v28 = a7;
  uint64_t v12 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D74D8);
  uint64_t v34 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v13);
  long long v15 = (char *)&v27 - v14;
  uint64_t v37 = v16;
  uint64_t v38 = v7;
  int v31 = a5;
  if (a4 == 1)
  {
    uint64_t v36 = 0;
    uint64_t v33 = 0;
    int v29 = 0;
    int v35 = 1;
  }
  else
  {
    int v35 = a3 & 1;
    int v29 = a5 & 1;
    uint64_t v36 = a2;
    uint64_t v33 = a4;
  }
  uint64_t v17 = aGraphFts[0];
  uint64_t v18 = aGraphFts[1];
  v44[3] = sub_1B2E80BE8();
  v44[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v44);
  memcpy(v45, v32, 0x69uLL);
  sub_1B2D9A994((uint64_t)v45, (uint64_t)v46);
  sub_1B2D9A994((uint64_t)v46, (uint64_t)&v43);
  uint64_t v39 = 0x6870617267;
  unint64_t v40 = 0xE500000000000000;
  uint64_t v41 = v17;
  uint64_t v42 = v18;
  swift_bridgeObjectRetain();
  sub_1B2D9A980(a2, a3, a4);
  TriplesQuery.Clause.Impl.graphIdentifierSQLExpression(config:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2DC0160();
  sub_1B2E80978();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v44);
  uint64_t v19 = v33;
  if (v33)
  {
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = v38;
    sub_1B2DFFC34(v20, v19, v29);
    uint64_t v22 = v21;
    sub_1B29D22C4(&qword_1E9C44028, (uint64_t *)&unk_1EB7D74D8);
    uint64_t v23 = v37;
    sub_1B2E80C68();
    swift_bridgeObjectRelease();
    uint64_t v24 = v34;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v15, v23, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = v37;
    uint64_t v22 = v38;
    uint64_t v24 = v34;
  }
  if ((v35 & 1) == 0)
  {
    if (v36 < 0)
    {
      __break(1u);
      return result;
    }
    sub_1B29D22C4((unint64_t *)&unk_1E9C44040, (uint64_t *)&unk_1EB7D74D8);
    sub_1B2E80F28();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v15, v23, v12);
  }
  sub_1B29D22C4((unint64_t *)&unk_1EB7D7550, (uint64_t *)&unk_1EB7D74D8);
  sub_1B2DC0114();
  uint64_t v26 = sub_1B2E809F8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v15, v12);
  if (!v22) {
    *uint64_t v28 = v26;
  }
  return result;
}

uint64_t sub_1B2DBD114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(uint64_t *), uint64_t a7)
{
  uint64_t v11 = *(void *)(a3 + 96);
  char v12 = *(unsigned char *)(a3 + 104);
  v22[0] = 0x6870617267;
  v22[1] = 0xE500000000000000;
  _OWORD v22[2] = aGraphFts[0];
  v22[3] = aGraphFts[1];
  long long v13 = *(_OWORD *)(a3 + 16);
  v19[0] = *(_OWORD *)a3;
  v19[1] = v13;
  long long v14 = *(_OWORD *)(a3 + 48);
  v19[2] = *(_OWORD *)(a3 + 32);
  v19[3] = v14;
  long long v15 = *(_OWORD *)(a3 + 80);
  v19[4] = *(_OWORD *)(a3 + 64);
  v19[5] = v15;
  uint64_t v20 = v11;
  char v21 = v12;
  uint64_t v17 = a4;
  char v18 = a5;
  swift_bridgeObjectRetain();
  sub_1B2DC0970(a3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B29C64D0);
  sub_1B2DBD234(a1, v22, (uint64_t)v19, (uint64_t)&v17, a6, a7);
  sub_1B2DC0970(a3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B2A34B34);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DBD234(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v51 = a6;
  uint64_t v50 = a5;
  uint64_t v64 = a1;
  uint64_t v47 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D74D8);
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v47);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  long long v13 = (char *)&v45 - v12;
  uint64_t v63 = *a2;
  uint64_t v62 = a2[1];
  uint64_t v61 = a2[2];
  uint64_t v60 = a2[3];
  uint64_t v14 = *(void *)(a3 + 8);
  uint64_t v59 = *(void *)a3;
  uint64_t v15 = *(void *)(a3 + 16);
  unint64_t v58 = *(void *)(a3 + 24);
  uint64_t v57 = *(void *)(a3 + 32);
  uint64_t v56 = *(void *)(a3 + 40);
  uint64_t v55 = *(void *)(a3 + 48);
  uint64_t v54 = *(void *)(a3 + 56);
  uint64_t v53 = *(void *)(a3 + 64);
  uint64_t v52 = *(void *)(a3 + 72);
  unint64_t v16 = *(void *)(a3 + 88);
  uint64_t v49 = *(void *)(a3 + 80);
  uint64_t v45 = *(void *)(a3 + 96);
  unsigned int v17 = *(unsigned __int8 *)(a3 + 104);
  uint64_t v18 = *(void *)a4;
  char v19 = *(unsigned char *)(a4 + 8);
  sub_1B2DC0160();
  uint64_t v46 = v13;
  sub_1B2E80958();
  if (v16 >> 1 != 0xFFFFFFFF || v17 >= 2)
  {
    v70[3] = sub_1B2E80BE8();
    v70[4] = MEMORY[0x1E4F62D00];
    sub_1B29D1C70(v70);
    uint64_t v71 = v59;
    uint64_t v72 = v14;
    uint64_t v73 = v15;
    unint64_t v74 = v58;
    uint64_t v75 = v57;
    uint64_t v76 = v56;
    uint64_t v77 = v55;
    uint64_t v78 = v54;
    uint64_t v79 = v53;
    uint64_t v80 = v52;
    uint64_t v81 = v49;
    unint64_t v82 = v16;
    uint64_t v83 = v45;
    LOBYTE(v84) = v17;
    uint64_t v66 = v63;
    uint64_t v67 = v62;
    uint64_t v68 = v61;
    uint64_t v69 = v60;
    TriplesQuery.Clause.Impl.graphIdentifierSQLExpression(config:)();
    sub_1B29D22C4((unint64_t *)&unk_1E9C44030, (uint64_t *)&unk_1EB7D74D8);
    uint64_t v21 = v47;
    uint64_t v22 = v46;
    sub_1B2E80D68();
    uint64_t v23 = v48;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v22, v21);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v70);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v22, v11, v21);
  }
  if (v18)
  {
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = v65;
    sub_1B2DFFC34(v24, v18, v19 & 1);
    uint64_t v26 = v25;
    sub_1B29D22C4(&qword_1E9C44028, (uint64_t *)&unk_1EB7D74D8);
    uint64_t v27 = v47;
    uint64_t v28 = v46;
    sub_1B2E80C68();
    swift_bridgeObjectRelease();
    uint64_t v29 = v48;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v27);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v28, v11, v27);
  }
  else
  {
    uint64_t v27 = v47;
    uint64_t v28 = v46;
    uint64_t v26 = v65;
  }
  sub_1B29D22C4((unint64_t *)&unk_1EB7D7550, (uint64_t *)&unk_1EB7D74D8);
  sub_1B2DC0114();
  uint64_t v30 = sub_1B2E809E8();
  if (v26) {
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v28, v27);
  }
  uint64_t v49 = v30;
  while (1)
  {
    uint64_t v32 = sub_1B2DD0D10((uint64_t)&v71);
    uint64_t v65 = v73;
    if (!v73)
    {
LABEL_17:
      (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
      return swift_release();
    }
    uint64_t v34 = v71;
    uint64_t v33 = v72;
    uint64_t v61 = 0;
    uint64_t v36 = v74;
    uint64_t v35 = v75;
    uint64_t v37 = v76;
    uint64_t v64 = v77;
    uint64_t v38 = v78;
    uint64_t v63 = v79;
    uint64_t v59 = v80;
    uint64_t v62 = v81;
    uint64_t v39 = v83;
    unint64_t v58 = v82;
    uint64_t v40 = v85;
    uint64_t v60 = v84;
    uint64_t v41 = (void *)MEMORY[0x1B3EB2480](v32);
    uint64_t v52 = v34;
    uint64_t v71 = v34;
    uint64_t v72 = v33;
    uint64_t v53 = v33;
    uint64_t v73 = v65;
    unint64_t v74 = v36;
    uint64_t v54 = v36;
    uint64_t v55 = v35;
    uint64_t v75 = v35;
    uint64_t v56 = v37;
    LOWORD(v76) = v37;
    uint64_t v77 = v64;
    uint64_t v78 = v38;
    uint64_t v57 = v38;
    uint64_t v79 = v63;
    uint64_t v80 = v59;
    uint64_t v81 = v62;
    LOWORD(v82) = v58;
    uint64_t v83 = v39;
    uint64_t v84 = v60;
    uint64_t v85 = v40;
    uint64_t v42 = v61;
    char v43 = v50(&v71);
    if (v42) {
      break;
    }
    char v44 = v43;
    sub_1B2B76014(v52, v53, v65);
    if ((v44 & 1) == 0) {
      goto LABEL_17;
    }
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
  swift_release();
  return sub_1B2B76014(v52, v53, v65);
}

uint64_t sub_1B2DBD9C0(uint64_t (*a1)(uint64_t *, uint64_t (*)()))
{
  return sub_1B2DBC5B0(v1, a1);
}

uint64_t sub_1B2DBD9E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1B2DBDA0C(void *a1)
{
  return sub_1B2DBB724(a1);
}

uint64_t sub_1B2DBDA24(uint64_t *a1)
{
  return ViewService.SportsSchedulesView.enumerateTriples(for:block:)(a1);
}

void sub_1B2DBDA3C()
{
}

uint64_t static ViewService.SportsSchedulesView.SportsScheduleTriple.databaseTableName.getter()
{
  return 0x6870617267;
}

uint64_t sub_1B2DBDA8C()
{
  uint64_t v0 = sub_1B2E81648();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = sub_1B2E812B8();
  sub_1B2A4A2A8(v7, qword_1E9C43F70);
  sub_1B29A4B98(v7, (uint64_t)qword_1E9C43F70);
  uint64_t v8 = *MEMORY[0x1E4F62EF0];
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v9(v6, v8, v0);
  v9(v4, v8, v0);
  return sub_1B2E812A8();
}

uint64_t static ViewService.SportsSchedulesView.SportsScheduleTriple.persistenceConflictPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E9C38CF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1B2E812B8();
  uint64_t v3 = sub_1B29A4B98(v2, (uint64_t)qword_1E9C43F70);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void ViewService.SportsSchedulesView.SportsScheduleTriple.subject.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t ViewService.SportsSchedulesView.SportsScheduleTriple.predicate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  __int16 v5 = *(_WORD *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 8);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void ViewService.SportsSchedulesView.SportsScheduleTriple.relationshipId.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 48);
}

uint64_t ViewService.SportsSchedulesView.SportsScheduleTriple.relationshipPredicate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 80);
  __int16 v5 = *(_WORD *)(v1 + 88);
  *(void *)a1 = *(void *)(v1 + 56);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ViewService.SportsSchedulesView.SportsScheduleTriple.object.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

double ViewService.SportsSchedulesView.SportsScheduleTriple.confidence.getter()
{
  return *(double *)(v0 + 112);
}

uint64_t sub_1B2DBDD68()
{
  uint64_t v0 = sub_1B2E81508();
  sub_1B2A4A2A8(v0, qword_1E9CAF938);
  sub_1B29A4B98(v0, (uint64_t)qword_1E9CAF938);
  sub_1B2DBFEB8();
  return sub_1B2E81528();
}

void *ViewService.SportsSchedulesView.SportsScheduleTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:confidence:)@<X0>(void *result@<X0>, long long *a2@<X1>, uint64_t *a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  long long v8 = *a2;
  uint64_t v9 = *((void *)a2 + 2);
  uint64_t v10 = *((void *)a2 + 3);
  __int16 v11 = *((_WORD *)a2 + 16);
  uint64_t v12 = *a3;
  long long v13 = *a4;
  uint64_t v14 = *((void *)a4 + 2);
  uint64_t v15 = *((void *)a4 + 3);
  __int16 v16 = *((_WORD *)a4 + 16);
  *(void *)a7 = *result;
  *(_OWORD *)(a7 + 8) = v8;
  *(void *)(a7 + 24) = v9;
  *(void *)(a7 + 32) = v10;
  *(_WORD *)(a7 + 40) = v11;
  *(void *)(a7 + 48) = v12;
  *(_OWORD *)(a7 + 56) = v13;
  *(void *)(a7 + 72) = v14;
  *(void *)(a7 + 80) = v15;
  *(_WORD *)(a7 + 88) = v16;
  *(void *)(a7 + 96) = a5;
  *(void *)(a7 + 104) = a6;
  *(double *)(a7 + 112) = a8;
  return result;
}

uint64_t sub_1B2DBDE28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7461636964657270 && a2 == 0xE900000000000065;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E6F6974616C6572 && a2 == 0xEE00644970696873;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x80000001B2E95640 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v10 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          if (v10) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

unint64_t sub_1B2DBE0C8(char a1)
{
  unint64_t result = 0x7463656A627573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7461636964657270;
      break;
    case 2:
      unint64_t result = 0x6E6F6974616C6572;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0x7463656A626FLL;
      break;
    case 5:
      unint64_t result = 0x6E656469666E6F63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2DBE1A8()
{
  return sub_1B2DBE0C8(*v0);
}

uint64_t sub_1B2DBE1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DBDE28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DBE1D8(uint64_t a1)
{
  unint64_t v2 = sub_1B2DBFEB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DBE214(uint64_t a1)
{
  unint64_t v2 = sub_1B2DBFEB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ViewService.SportsSchedulesView.SportsScheduleTriple.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C43F98);
  sub_1B299D31C();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2DBFEB8();
  sub_1B2E83A38();
  sub_1B29CB42C();
  sub_1B2E836D8();
  if (!v1)
  {
    sub_1B2A7D6D8();
    sub_1B2DC0B40();
    sub_1B2B42A0C();
    sub_1B2E836D8();
    sub_1B2DC0B40();
    sub_1B2E83688();
    sub_1B2E836A8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t ViewService.SportsSchedulesView.SportsScheduleTriple.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29A3EB4((uint64_t *)&unk_1E9C43FB0);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v5);
  sub_1B299B3C8();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2DBFEB8();
  sub_1B2E83A18();
  if (v2) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  sub_1B29CB3E0();
  sub_1B2DC0B9C();
  sub_1B2E835B8();
  sub_1B2A7D640();
  sub_1B2DC0AF8();
  sub_1B2B42E00();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2DC0B9C();
  sub_1B2E835B8();
  sub_1B2DC0AF8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B299EB4C();
  uint64_t v7 = sub_1B2E83568();
  uint64_t v9 = v8;
  uint64_t v14 = v7;
  swift_bridgeObjectRetain();
  sub_1B299EB4C();
  sub_1B2E83588();
  uint64_t v11 = v10;
  uint64_t v12 = sub_1B29A2384();
  v13(v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v18;
  *(_WORD *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v15;
  *(void *)(a2 + 56) = v15;
  *(void *)(a2 + 64) = v16;
  *(void *)(a2 + 72) = v17;
  *(void *)(a2 + 80) = v18;
  *(_WORD *)(a2 + 88) = v19;
  *(void *)(a2 + 96) = v14;
  *(void *)(a2 + 104) = v9;
  *(void *)(a2 + 112) = v11;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DBE90C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ViewService.SportsSchedulesView.SportsScheduleTriple.init(from:)(a1, a2);
}

uint64_t sub_1B2DBE924(void *a1)
{
  return ViewService.SportsSchedulesView.SportsScheduleTriple.encode(to:)(a1);
}

uint64_t sub_1B2DBE93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2DC06A0();

  return MEMORY[0x1F411AC60](a1, a2, a3, v6);
}

uint64_t sub_1B2DBE9A0()
{
  uint64_t v0 = aGraphFts[0];
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1B2DBE9EC()
{
  return 0x6870617267;
}

uint64_t ViewService.SportsSchedulesView.enumerateGames(in:block:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v7 = *(_OWORD *)(v3 + 16);
  v31[0] = *(_OWORD *)v3;
  v31[1] = v7;
  uint64_t v32 = *(void *)(v3 + 32);
  sub_1B2E805C8();
  double v9 = v8;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7D74F0);
  uint64_t result = sub_1B2E805C8();
  if (v9 > v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v39 = a2;
    sub_1B29A3EB4((uint64_t *)&unk_1EB7D9AE0);
    uint64_t v12 = swift_allocObject();
    *(double *)&long long v13 = sub_1B2DC0A98(v12, (__n128)xmmword_1B2EBFA40);
    v33[0] = 0;
    v33[1] = v14;
    long long v34 = v13;
    long long v35 = v13;
    long long v36 = v13;
    long long v37 = v13;
    v38[0] = v13;
    *(_OWORD *)((char *)v38 + 9) = v13;
    uint64_t ObjectType = swift_getObjectType();
    MEMORY[0x1F4188790](ObjectType);
    sub_1B2DC0AE4((uint64_t)v29);
    *(void *)(v16 - 16) = v33;
    sub_1B29A3EB4(&qword_1EB7D7628);
    sub_1B2E80C28();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4)
    {
      uint64_t v17 = v30;
      uint64_t v18 = *(void *)(v30 + 16);
      if (v18)
      {
        v29[0] = a3;
        uint64_t v30 = MEMORY[0x1E4FBC860];
        sub_1B29C03A0();
        uint64_t v19 = v30;
        unint64_t v20 = *(void *)(v30 + 16);
        uint64_t v21 = 32;
        do
        {
          uint64_t v22 = *(void *)(v17 + v21);
          uint64_t v30 = v19;
          if (v20 >= *(void *)(v19 + 24) >> 1)
          {
            sub_1B29C03A0();
            uint64_t v19 = v30;
          }
          *(void *)(v19 + 16) = v20 + 1;
          *(void *)(v19 + 8 * v20 + 32) = v22;
          v21 += 120;
          ++v20;
          --v18;
        }
        while (v18);
        swift_bridgeObjectRelease();
        a3 = v29[0];
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1B2DDC524();
      sub_1B2B8766C((uint64_t)v31);
      sub_1B2DB9F84();
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      uint64_t v25 = sub_1B2AF8ED8(v24);
      sub_1B29A3EB4(&qword_1EB7D74E8);
      swift_initStackObject();
      sub_1B2B8766C((uint64_t)v31);
      uint64_t v26 = sub_1B29C88B0((uint64_t)v31);
      sub_1B29A3EB4(qword_1EB7D7590);
      swift_initStackObject();
      uint64_t v27 = sub_1B29C83C8(v25);
      MEMORY[0x1F4188790](v27);
      void v28[2] = v26;
      v28[3] = v39;
      v28[4] = a3;
      sub_1B2DBA8E8((uint64_t)sub_1B2DBFF04, (uint64_t)v28);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t ViewService.SportsSchedulesView.enumerateAllGames(block:)()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  v3[0] = *(_OWORD *)v0;
  v3[1] = v1;
  uint64_t v4 = *(void *)(v0 + 32);
  sub_1B29A3EB4(&qword_1EB7D74E8);
  swift_initStackObject();
  sub_1B2B8766C((uint64_t)v3);
  sub_1B29C88B0((uint64_t)v3);
  swift_retain();
  sub_1B2B84E64();
  return swift_release();
}

uint64_t sub_1B2DBEDE0()
{
  sub_1B2DBEDFC();
  return v0 & 1;
}

void sub_1B2DBEDFC()
{
  sub_1B299F300();
  uint64_t v50 = v4;
  uint64_t v51 = v5;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for CustomGraphSportsGameEvent(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v9);
  sub_1B29A0498();
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C3EF58);
  MEMORY[0x1F4188790](v10 - 8);
  sub_1B299B3C8();
  uint64_t v11 = sub_1B29A3EB4(&qword_1E9C44020);
  sub_1B2999864();
  MEMORY[0x1F4188790](v12);
  sub_1B2B87948();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v33 - v14;
  sub_1B29C3FC4(v7, v2, &qword_1E9C3EF58);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v11) == 1)
  {
    uint64_t v16 = &qword_1E9C3EF58;
    uint64_t v17 = v2;
LABEL_9:
    sub_1B29C4148(v17, v16);
    goto LABEL_10;
  }
  sub_1B2DC0764(v2, (uint64_t)v15);
  sub_1B29C3FC4((uint64_t)v15, (uint64_t)v3, &qword_1E9C44020);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v53 = *v3;
    sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
    swift_willThrowTypedImpl();
LABEL_5:
    sub_1B29C4148((uint64_t)v15, &qword_1E9C44020);
LABEL_10:
    sub_1B29998C8();
    return;
  }
  sub_1B2DC07CC((uint64_t)v3, v1);
  uint64_t v18 = *(void *)(v1 + *(int *)(v8 + 48));
  if (*(void *)(v18 + 16) <= 2uLL || *(unsigned char *)(v18 + 88) == 1) {
    goto LABEL_8;
  }
  sub_1B2DA3F50(*(void *)(v18 + 80), (uint64_t)&v53);
  if (v0)
  {
    sub_1B2DC0830(v1);
    goto LABEL_5;
  }
  uint64_t v19 = v54;
  if (!v54)
  {
LABEL_8:
    sub_1B2DC0830(v1);
    uint64_t v16 = &qword_1E9C44020;
    uint64_t v17 = (uint64_t)v15;
    goto LABEL_9;
  }
  if (*(void *)(v18 + 16) >= 2uLL)
  {
    uint64_t v20 = v53;
    uint64_t v21 = v55;
    uint64_t v22 = v61;
    if (*(unsigned char *)(v18 + 152) == 1)
    {
      uint64_t v23 = v53;
      uint64_t v24 = v54;
    }
    else
    {
      uint64_t v43 = v63;
      uint64_t v44 = v62;
      uint64_t v45 = v56;
      uint64_t v46 = v57;
      uint64_t v47 = v58;
      uint64_t v48 = v59;
      uint64_t v49 = v60;
      sub_1B2DA3F50(*(void *)(v18 + 144), (uint64_t)&v53);
      uint64_t v25 = v54;
      uint64_t v26 = v21;
      uint64_t v27 = v20;
      if (v54)
      {
        uint64_t v42 = v53;
        uint64_t v41 = v55;
        uint64_t v40 = v56;
        uint64_t v39 = v57;
        uint64_t v38 = v58;
        uint64_t v37 = v59;
        uint64_t v36 = v60;
        uint64_t v28 = v62;
        uint64_t v34 = v61;
        uint64_t v29 = v63;
        uint64_t v53 = v20;
        uint64_t v54 = v19;
        uint64_t v55 = v26;
        uint64_t v56 = v45;
        uint64_t v57 = v46;
        uint64_t v58 = v47;
        uint64_t v59 = v48;
        uint64_t v60 = v49;
        uint64_t v61 = v22;
        uint64_t v62 = v44;
        uint64_t v63 = v43;
        v52[0] = v42;
        v52[1] = v25;
        v52[2] = v41;
        v52[3] = v40;
        v52[4] = v39;
        v52[5] = v38;
        v52[6] = v37;
        v52[7] = v36;
        v52[8] = v34;
        v52[9] = v28;
        v52[10] = v29;
        uint64_t v30 = v25;
        uint64_t v35 = v27;
        uint64_t v50 = v22;
        v51(v1, &v53, v52);
        sub_1B2DC0830(v1);
        sub_1B29C4148((uint64_t)v15, &qword_1E9C44020);
        sub_1B2B7C590(v42, v30);
        sub_1B29A4A28(v35, v19);
        goto LABEL_10;
      }
      sub_1B2DC0B68();
      uint64_t v33 = v32;
      uint64_t v34 = v31;
      uint64_t v24 = v19;
    }
    sub_1B2B7C590(v23, v24);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1B2DBF2F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2DC0A58(a1, a2);
}

uint64_t sub_1B2DBF308(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B2E80B58();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2DBF34C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return (uint64_t)sub_1B2DBFB24(0, (char *)v3, (char *)1, a1);
      }
      return result;
    }
    goto LABEL_150;
  }
  uint64_t v102 = result;
  uint64_t result = sub_1B29B69EC(v3 / 2);
  unint64_t v100 = a1;
  uint64_t v101 = result;
  uint64_t v110 = v5;
  uint64_t v103 = v3;
  if (v3 <= 0)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    unint64_t v41 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_113:
    if (v41 < 2)
    {
LABEL_126:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v101 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_156;
    }
    uint64_t v90 = *v100;
    while (1)
    {
      unint64_t v91 = v41 - 2;
      if (v41 < 2) {
        break;
      }
      if (!v90) {
        goto LABEL_159;
      }
      uint64_t v92 = v8;
      uint64_t v93 = *(void *)(v8 + 32 + 16 * v91);
      uint64_t v94 = *(void *)(v8 + 32 + 16 * (v41 - 1) + 8);
      uint64_t result = sub_1B2DBFC84((char *)(v90 + 120 * v93), (char *)(v90 + 120 * *(void *)(v8 + 32 + 16 * (v41 - 1))), v90 + 120 * v94, v110);
      if (v1) {
        goto LABEL_109;
      }
      if (v94 < v93) {
        goto LABEL_145;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result)
      {
        uint64_t v95 = v92;
      }
      else
      {
        uint64_t result = (uint64_t)sub_1B2DCA54C();
        uint64_t v95 = result;
      }
      if (v91 >= *(void *)(v95 + 16)) {
        goto LABEL_146;
      }
      uint64_t v96 = (void *)(v95 + 32 + 16 * v91);
      *uint64_t v96 = v93;
      v96[1] = v94;
      unint64_t v97 = *(void *)(v95 + 16);
      if (v41 > v97) {
        goto LABEL_147;
      }
      uint64_t v98 = v95;
      uint64_t result = (uint64_t)memmove((void *)(v95 + 32 + 16 * (v41 - 1)), (const void *)(v95 + 32 + 16 * v41), 16 * (v97 - v41));
      uint64_t v8 = v98;
      *(void *)(v98 + 16) = v97 - 1;
      unint64_t v41 = v97 - 1;
      uint64_t v3 = v103;
      if (v97 <= 2) {
        goto LABEL_126;
      }
    }
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
    return result;
  }
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v99 = v7 + 112;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v9 = v6 + 1;
    uint64_t v106 = v8;
    uint64_t v107 = v6;
    if (v6 + 1 >= v3) {
      goto LABEL_35;
    }
    uint64_t v10 = (unint64_t *)(v7 + 120 * v9);
    unint64_t v11 = *v10;
    unint64_t v12 = v10[6];
    uint64_t v13 = (unint64_t *)(v7 + 120 * v6);
    if (v11 >= *v13)
    {
      if (v11 == *v13)
      {
        BOOL v14 = v12 < v13[6];
        uint64_t v9 = v6 + 2;
        if (v6 + 2 >= v3) {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v9 = v6 + 2;
        if (v6 + 2 >= v3) {
          goto LABEL_35;
        }
        BOOL v14 = 0;
      }
    }
    else
    {
      uint64_t v9 = v6 + 2;
      if (v6 + 2 >= v3) {
        goto LABEL_28;
      }
      BOOL v14 = 1;
    }
    uint64_t v15 = v3 <= v9 + 1 ? v9 + 1 : v3;
    uint64_t v16 = (unint64_t *)(v7 + 120 * v9);
    do
    {
      unint64_t v17 = v11;
      unint64_t v11 = *v16;
      unint64_t v18 = v16[6];
      if (*v16 >= v17)
      {
        if (*v16 == v17)
        {
          if (((v14 ^ (v18 >= v12)) & 1) == 0) {
            goto LABEL_26;
          }
        }
        else if (v14)
        {
          goto LABEL_27;
        }
      }
      else if (!v14)
      {
        goto LABEL_35;
      }
      v16 += 15;
      ++v9;
      unint64_t v12 = v18;
    }
    while (v9 < v3);
    uint64_t v9 = v15;
LABEL_26:
    if (v14)
    {
LABEL_27:
      if (v9 < v6) {
        goto LABEL_152;
      }
LABEL_28:
      if (v6 < v9)
      {
        uint64_t v19 = 120 * v9;
        uint64_t v20 = v9;
        uint64_t v21 = v9;
        uint64_t v22 = v6;
        uint64_t v23 = 120 * v6;
        do
        {
          if (v22 != --v21)
          {
            if (!v7) {
              goto LABEL_158;
            }
            uint64_t v24 = *(void *)(v7 + v23 + 32);
            uint64_t v25 = v7 + v19;
            __int16 v26 = *(_WORD *)(v7 + v23 + 40);
            uint64_t v121 = *(void *)(v7 + v23 + 80);
            __int16 v119 = *(_WORD *)(v7 + v23 + 88);
            uint64_t v117 = *(void *)(v7 + v23 + 96);
            uint64_t v115 = *(void *)(v7 + v23 + 104);
            uint64_t v27 = *(void *)(v7 + v23 + 112);
            long long v108 = *(_OWORD *)(v7 + v23 + 16);
            long long v104 = *(_OWORD *)(v7 + v23);
            long long v111 = *(_OWORD *)(v7 + v23 + 48);
            long long v113 = *(_OWORD *)(v7 + v23 + 64);
            uint64_t result = (uint64_t)memmove((void *)(v7 + v23), (const void *)(v7 + v19 - 120), 0x78uLL);
            *(_OWORD *)(v25 - 120) = v104;
            *(_OWORD *)(v25 - 104) = v108;
            *(void *)(v25 - 88) = v24;
            *(_WORD *)(v25 - 80) = v26;
            *(_OWORD *)(v25 - 72) = v111;
            *(_OWORD *)(v25 - 56) = v113;
            *(void *)(v25 - 40) = v121;
            *(_WORD *)(v25 - 32) = v119;
            *(void *)(v25 - 24) = v117;
            *(void *)(v25 - 16) = v115;
            *(void *)(v25 - 8) = v27;
          }
          ++v22;
          v19 -= 120;
          v23 += 120;
        }
        while (v22 < v21);
        uint64_t v3 = v103;
        uint64_t v9 = v20;
        uint64_t v6 = v107;
      }
    }
LABEL_35:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v6)) {
        goto LABEL_149;
      }
      if (v9 - v6 < v102)
      {
        if (__OFADD__(v6, v102)) {
          goto LABEL_153;
        }
        if (v6 + v102 >= v3) {
          uint64_t v28 = v3;
        }
        else {
          uint64_t v28 = v6 + v102;
        }
        if (v28 < v6) {
          goto LABEL_154;
        }
        if (v9 != v28)
        {
          uint64_t v29 = (void *)(v99 + 120 * v9);
          uint64_t v105 = v28;
          do
          {
            unint64_t v30 = *(void *)(v7 + 120 * v9);
            char v109 = v29;
            do
            {
              unint64_t v31 = *(v29 - 29);
              if (v30 >= v31 && (v30 != v31 || *(v29 - 8) >= *(v29 - 23))) {
                break;
              }
              if (!v7) {
                goto LABEL_155;
              }
              uint64_t v33 = v7;
              long long v116 = *(_OWORD *)(v29 - 13);
              uint64_t v35 = *(v29 - 11);
              uint64_t v34 = *(v29 - 10);
              __int16 v36 = *((_WORD *)v29 - 36);
              __int16 v37 = *((_WORD *)v29 - 12);
              uint64_t v122 = *(v29 - 2);
              uint64_t v118 = *(v29 - 4);
              uint64_t v120 = *(v29 - 1);
              uint64_t v38 = *v29;
              long long v112 = *((_OWORD *)v29 - 4);
              long long v114 = *((_OWORD *)v29 - 3);
              uint64_t result = (uint64_t)memcpy(v29 - 14, v29 - 29, 0x78uLL);
              *(v29 - 15) = v38;
              v29 -= 15;
              *(v29 - 14) = v30;
              *(_OWORD *)(v29 - 13) = v116;
              *(v29 - 11) = v35;
              *(v29 - 10) = v34;
              *((_WORD *)v29 - 36) = v36;
              *((_OWORD *)v29 - 4) = v112;
              *((_OWORD *)v29 - 3) = v114;
              *(v29 - 4) = v118;
              *((_WORD *)v29 - 12) = v37;
              ++v6;
              *(v29 - 2) = v122;
              *(v29 - 1) = v120;
              uint64_t v7 = v33;
            }
            while (v9 != v6);
            ++v9;
            uint64_t v6 = v107;
            uint64_t v29 = v109 + 15;
          }
          while (v9 != v105);
          uint64_t v9 = v105;
        }
      }
    }
    if (v9 < v6) {
      goto LABEL_148;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v123 = v9;
    if (result)
    {
      uint64_t v8 = v106;
    }
    else
    {
      uint64_t result = (uint64_t)sub_1B2DCA454(0, *(void *)(v106 + 16) + 1, 1, (char *)v106);
      uint64_t v8 = result;
    }
    unint64_t v40 = *(void *)(v8 + 16);
    unint64_t v39 = *(void *)(v8 + 24);
    unint64_t v41 = v40 + 1;
    if (v40 >= v39 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454((char *)(v39 > 1), v40 + 1, 1, (char *)v8);
      uint64_t v8 = result;
    }
    *(void *)(v8 + 16) = v41;
    uint64_t v42 = v8 + 32;
    uint64_t v43 = (uint64_t *)(v8 + 32 + 16 * v40);
    *uint64_t v43 = v107;
    v43[1] = v123;
    if (v40) {
      break;
    }
    unint64_t v41 = 1;
LABEL_103:
    uint64_t v3 = v103;
    uint64_t v6 = v123;
    if (v123 >= v103) {
      goto LABEL_113;
    }
  }
  while (1)
  {
    unint64_t v44 = v41 - 1;
    if (v41 >= 4)
    {
      unint64_t v49 = v42 + 16 * v41;
      uint64_t v50 = *(void *)(v49 - 64);
      uint64_t v51 = *(void *)(v49 - 56);
      BOOL v55 = __OFSUB__(v51, v50);
      uint64_t v52 = v51 - v50;
      if (v55) {
        goto LABEL_133;
      }
      uint64_t v54 = *(void *)(v49 - 48);
      uint64_t v53 = *(void *)(v49 - 40);
      BOOL v55 = __OFSUB__(v53, v54);
      uint64_t v47 = v53 - v54;
      char v48 = v55;
      if (v55) {
        goto LABEL_134;
      }
      unint64_t v56 = v41 - 2;
      uint64_t v57 = (uint64_t *)(v42 + 16 * (v41 - 2));
      uint64_t v59 = *v57;
      uint64_t v58 = v57[1];
      BOOL v55 = __OFSUB__(v58, v59);
      uint64_t v60 = v58 - v59;
      if (v55) {
        goto LABEL_135;
      }
      BOOL v55 = __OFADD__(v47, v60);
      uint64_t v61 = v47 + v60;
      if (v55) {
        goto LABEL_137;
      }
      if (v61 >= v52)
      {
        uint64_t v79 = (uint64_t *)(v42 + 16 * v44);
        uint64_t v81 = *v79;
        uint64_t v80 = v79[1];
        BOOL v55 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v55) {
          goto LABEL_143;
        }
        BOOL v72 = v47 < v82;
        goto LABEL_92;
      }
    }
    else
    {
      if (v41 != 3)
      {
        uint64_t v73 = *(void *)(v8 + 32);
        uint64_t v74 = *(void *)(v8 + 40);
        BOOL v55 = __OFSUB__(v74, v73);
        uint64_t v66 = v74 - v73;
        char v67 = v55;
        goto LABEL_86;
      }
      uint64_t v46 = *(void *)(v8 + 32);
      uint64_t v45 = *(void *)(v8 + 40);
      BOOL v55 = __OFSUB__(v45, v46);
      uint64_t v47 = v45 - v46;
      char v48 = v55;
    }
    if (v48) {
      goto LABEL_136;
    }
    unint64_t v56 = v41 - 2;
    uint64_t v62 = (uint64_t *)(v42 + 16 * (v41 - 2));
    uint64_t v64 = *v62;
    uint64_t v63 = v62[1];
    BOOL v65 = __OFSUB__(v63, v64);
    uint64_t v66 = v63 - v64;
    char v67 = v65;
    if (v65) {
      goto LABEL_138;
    }
    uint64_t v68 = (uint64_t *)(v42 + 16 * v44);
    uint64_t v70 = *v68;
    uint64_t v69 = v68[1];
    BOOL v55 = __OFSUB__(v69, v70);
    uint64_t v71 = v69 - v70;
    if (v55) {
      goto LABEL_140;
    }
    if (__OFADD__(v66, v71)) {
      goto LABEL_142;
    }
    if (v66 + v71 >= v47)
    {
      BOOL v72 = v47 < v71;
LABEL_92:
      if (v72) {
        unint64_t v44 = v56;
      }
      goto LABEL_94;
    }
LABEL_86:
    if (v67) {
      goto LABEL_139;
    }
    uint64_t v75 = (uint64_t *)(v42 + 16 * v44);
    uint64_t v77 = *v75;
    uint64_t v76 = v75[1];
    BOOL v55 = __OFSUB__(v76, v77);
    uint64_t v78 = v76 - v77;
    if (v55) {
      goto LABEL_141;
    }
    if (v78 < v66) {
      goto LABEL_103;
    }
LABEL_94:
    unint64_t v83 = v44 - 1;
    if (v44 - 1 >= v41)
    {
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
      goto LABEL_144;
    }
    if (!v7) {
      goto LABEL_157;
    }
    uint64_t v84 = v8;
    uint64_t v85 = (uint64_t *)(v42 + 16 * v83);
    uint64_t v86 = *v85;
    uint64_t v87 = (void *)(v42 + 16 * v44);
    uint64_t v88 = v87[1];
    uint64_t result = sub_1B2DBFC84((char *)(v7 + 120 * *v85), (char *)(v7 + 120 * *v87), v7 + 120 * v88, v110);
    if (v1) {
      break;
    }
    if (v88 < v86) {
      goto LABEL_130;
    }
    if (v44 > *(void *)(v84 + 16)) {
      goto LABEL_131;
    }
    *uint64_t v85 = v86;
    *(void *)(v42 + 16 * v83 + 8) = v88;
    unint64_t v89 = *(void *)(v84 + 16);
    if (v44 >= v89) {
      goto LABEL_132;
    }
    unint64_t v41 = v89 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v42 + 16 * v44), v87 + 2, 16 * (v89 - 1 - v44));
    uint64_t v8 = v84;
    *(void *)(v84 + 16) = v89 - 1;
    if (v89 <= 2) {
      goto LABEL_103;
    }
  }
LABEL_109:
  uint64_t result = swift_bridgeObjectRelease();
  if (v103 < -1) {
    goto LABEL_151;
  }
  *(void *)(v101 + 16) = 0;
  return swift_bridgeObjectRelease();
}

char *sub_1B2DBFB24(char *result, char *a2, char *a3, uint64_t *a4)
{
  unint64_t v17 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v19 = *a4;
    uint64_t v5 = (void *)(*a4 + 120 * (void)a3 + 112);
    while (2)
    {
      unint64_t v6 = *(void *)(v19 + 120 * (void)v4);
      uint64_t v7 = v17;
      unint64_t v18 = v5;
      do
      {
        unint64_t v8 = *(v5 - 29);
        if (v6 >= v8 && (v6 != v8 || *(v5 - 8) >= *(v5 - 23))) {
          break;
        }
        if (!v19)
        {
          __break(1u);
          return result;
        }
        long long v22 = *(_OWORD *)(v5 - 13);
        uint64_t v11 = *(v5 - 11);
        uint64_t v10 = *(v5 - 10);
        __int16 v12 = *((_WORD *)v5 - 36);
        uint64_t v13 = *(v5 - 4);
        __int16 v14 = *((_WORD *)v5 - 12);
        uint64_t v24 = *(v5 - 2);
        uint64_t v23 = *(v5 - 1);
        uint64_t v15 = *v5;
        long long v20 = *((_OWORD *)v5 - 4);
        long long v21 = *((_OWORD *)v5 - 3);
        uint64_t result = (char *)memcpy(v5 - 14, v5 - 29, 0x78uLL);
        *(v5 - 15) = v15;
        v5 -= 15;
        *(v5 - 14) = v6;
        *(_OWORD *)(v5 - 13) = v22;
        *(v5 - 11) = v11;
        *(v5 - 10) = v10;
        *((_WORD *)v5 - 36) = v12;
        *((_OWORD *)v5 - 4) = v20;
        *((_OWORD *)v5 - 3) = v21;
        *(v5 - 4) = v13;
        *((_WORD *)v5 - 12) = v14;
        ++v7;
        *(v5 - 2) = v24;
        *(v5 - 1) = v23;
      }
      while (v4 != v7);
      ++v4;
      uint64_t v5 = v18 + 15;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1B2DBFC84(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  unint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 120;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 120;
  if (v9 >= v11)
  {
    sub_1B29BE254(a2, (uint64_t)(a3 - (void)a2) / 120, a4);
    unint64_t v12 = (unint64_t)&v4[120 * v11];
    if (v7 >= v6 || v10 < 120) {
      goto LABEL_45;
    }
    unint64_t v17 = (char *)(a3 - 120);
    while (1)
    {
      unint64_t v18 = v17 + 120;
      unint64_t v19 = *(void *)(v12 - 120);
      long long v20 = v6 - 120;
      unint64_t v21 = *((void *)v6 - 15);
      if (v19 >= v21 && (v19 == v21 ? (BOOL v22 = *(void *)(v12 - 72) >= *((void *)v6 - 9)) : (BOOL v22 = 1), v22))
      {
        BOOL v23 = v18 != (char *)v12 || (unint64_t)v17 >= v12;
        long long v20 = (char *)(v12 - 120);
        v12 -= 120;
        if (!v23) {
          goto LABEL_41;
        }
      }
      else
      {
        BOOL v24 = v18 != v6 || v17 >= v6;
        v6 -= 120;
        if (!v24) {
          goto LABEL_41;
        }
      }
      memmove(v17, v20, 0x78uLL);
LABEL_41:
      v17 -= 120;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_45;
      }
    }
  }
  sub_1B29BE254(a1, (a2 - a1) / 120, a4);
  unint64_t v12 = (unint64_t)&v4[120 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 120)
  {
    while (*(void *)v6 < *(void *)v4 || *(void *)v6 == *(void *)v4 && *((void *)v6 + 6) < *((void *)v4 + 6))
    {
      __int16 v14 = v6;
      BOOL v15 = v7 == v6;
      v6 += 120;
      if (!v15) {
        goto LABEL_14;
      }
LABEL_15:
      v7 += 120;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_20;
      }
    }
    __int16 v14 = v4;
    BOOL v15 = v7 == v4;
    v4 += 120;
    if (v15) {
      goto LABEL_15;
    }
LABEL_14:
    memmove(v7, v14, 0x78uLL);
    goto LABEL_15;
  }
LABEL_20:
  unint64_t v6 = v7;
LABEL_45:
  sub_1B29BE254(v4, (uint64_t)(v12 - (void)v4) / 120, v6);
  return 1;
}

uint64_t sub_1B2DBFE4C(uint64_t *a1, uint64_t a2)
{
  return sub_1B2DBB804(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24), *(void *)(v2 + 32)) & 1;
}

uint64_t sub_1B2DBFE70(uint64_t a1)
{
  return sub_1B2DBC538(a1, *(uint64_t (**)(_OWORD *))(v1 + 16)) & 1;
}

uint64_t sub_1B2DBFE90(uint64_t a1)
{
  return sub_1B2DBD114(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(uint64_t (**)(uint64_t *))(v1 + 48), *(void *)(v1 + 56));
}

unint64_t sub_1B2DBFEB8()
{
  unint64_t result = qword_1E9C43FA0;
  if (!qword_1E9C43FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43FA0);
  }
  return result;
}

uint64_t sub_1B2DBFF04()
{
  sub_1B2DBEDFC();
  return v0 & 1;
}

unint64_t sub_1B2DBFF28(uint64_t a1)
{
  unint64_t result = sub_1B2DBFF50();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2DBFF50()
{
  unint64_t result = qword_1E9C43FC0;
  if (!qword_1E9C43FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43FC0);
  }
  return result;
}

unint64_t sub_1B2DBFFA0()
{
  unint64_t result = qword_1E9C43FC8;
  if (!qword_1E9C43FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43FC8);
  }
  return result;
}

unint64_t sub_1B2DBFFEC(uint64_t a1)
{
  unint64_t result = sub_1B2DC0014();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2DC0014()
{
  unint64_t result = qword_1E9C43FD0;
  if (!qword_1E9C43FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43FD0);
  }
  return result;
}

uint64_t sub_1B2DC0060()
{
  return sub_1B29D22C4(&qword_1E9C43FD8, &qword_1EB7D7628);
}

uint64_t sub_1B2DC009C()
{
  return sub_1B29D22C4(&qword_1E9C43FE0, (uint64_t *)&unk_1E9C43FE8);
}

_UNKNOWN **sub_1B2DC00D8()
{
  return &protocol witness table for ViewService.SportsSchedulesView.SportsScheduleTriple;
}

unint64_t sub_1B2DC00E4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B2DC0114();
  unint64_t result = sub_1B2DC0160();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B2DC0114()
{
  unint64_t result = qword_1EB7D7568;
  if (!qword_1EB7D7568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D7568);
  }
  return result;
}

unint64_t sub_1B2DC0160()
{
  unint64_t result = qword_1EB7D7560;
  if (!qword_1EB7D7560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D7560);
  }
  return result;
}

void type metadata accessor for ViewService.SportsSchedulesView()
{
}

uint64_t _s19SportsSchedulesViewV20SportsScheduleTripleVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19SportsSchedulesViewV20SportsScheduleTripleVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t _s19SportsSchedulesViewV20SportsScheduleTripleVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t _s19SportsSchedulesViewV20SportsScheduleTripleVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s19SportsSchedulesViewV20SportsScheduleTripleVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ViewService.SportsSchedulesView.SportsScheduleTriple()
{
}

void type metadata accessor for ViewService.SportsSchedulesView.SportsScheduleTriple.Columns()
{
}

unsigned char *_s19SportsSchedulesViewV20SportsScheduleTripleV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DC0578);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19SportsSchedulesViewV20SportsScheduleTripleV10CodingKeysOMa()
{
  return &_s19SportsSchedulesViewV20SportsScheduleTripleV10CodingKeysON;
}

unint64_t sub_1B2DC05B4()
{
  unint64_t result = qword_1E9C43FF8;
  if (!qword_1E9C43FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43FF8);
  }
  return result;
}

unint64_t sub_1B2DC0604()
{
  unint64_t result = qword_1E9C44000;
  if (!qword_1E9C44000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44000);
  }
  return result;
}

unint64_t sub_1B2DC0654()
{
  unint64_t result = qword_1E9C44008;
  if (!qword_1E9C44008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44008);
  }
  return result;
}

unint64_t sub_1B2DC06A0()
{
  unint64_t result = qword_1E9C44010;
  if (!qword_1E9C44010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44010);
  }
  return result;
}

uint64_t sub_1B2DC06EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6[3] = a3;
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t (*)(), void *))(v3 + 16);
  uint64_t v6[2] = a2;
  return v4(a1, sub_1B2DC073C, v6) & 1;
}

uint64_t sub_1B2DC073C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B2DC0764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C44020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2DC07CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CustomGraphSportsGameEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2DC0830(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CustomGraphSportsGameEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

int64_t sub_1B2DC088C(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (unint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    unint64_t v10 = *(void *)(v6 + 8 * v9);
    if (v10) {
      return __clz(__rbit64(v10)) + (v9 << 6);
    }
    unint64_t v11 = (unint64_t)(result + 63) >> 6;
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        return __clz(__rbit64(v10)) + (v9 << 6);
      }
      while (v5 + 3 < v11)
      {
        unint64_t v10 = *(void *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B2DC0970(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 104);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), v4);
  return a1;
}

uint64_t sub_1B2DC09D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t *, char *), uint64_t a7)
{
  return sub_1B2DBA98C(*a1, a2, a3, a4, *a5, a6, a7) & 1;
}

uint64_t sub_1B2DC09F8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2DC09D4(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t **)(v3 + 24), *(uint64_t (**)(uint64_t *, char *))(v3 + 32), *(void *)(v3 + 40)) & 1;
}

void sub_1B2DC0A1C()
{
}

void sub_1B2DC0A38()
{
}

uint64_t sub_1B2DC0A58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2DBCD1C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(const void **)(v2 + 48), a2);
}

uint64_t sub_1B2DC0A80()
{
  return sub_1B2DC073C();
}

double sub_1B2DC0A98(uint64_t a1, __n128 a2)
{
  *(__n128 *)(a1 + 16) = a2;
  *(void *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = v4;
  double result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 128) = 0;
  *(unsigned char *)(a1 + 136) = 0x80;
  *(void *)(a1 + 144) = 768;
  *(void *)(a1 + 152) = v3;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(void *)(a1 + 240) = 0;
  *(unsigned char *)(a1 + 248) = 0x80;
  return result;
}

void sub_1B2DC0AE4(uint64_t a1@<X8>)
{
  *(void *)(a1 - 48) = 0;
  *(void *)(a1 - 40) = 0;
  *(void *)(a1 - 32) = 1;
  *(unsigned char *)(a1 - 24) = 0;
}

uint64_t sub_1B2DC0AF8()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2DC0B24()
{
  return v0;
}

uint64_t sub_1B2DC0B40()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2DC0B84()
{
  return swift_bridgeObjectRelease();
}

void *sub_1B2DC0BB0()
{
  double result = sub_1B2DC0BD0();
  qword_1EB7F3470 = (uint64_t)result;
  return result;
}

void *sub_1B2DC0BD0()
{
  uint64_t v0 = sub_1B2DC0CF0(0x726F775F706F7473, 0xEA00000000007364);
  if (v0)
  {
    return sub_1B2DDCC10(v0);
  }
  else
  {
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1B2E81FB8();
    sub_1B29A4B98(v2, (uint64_t)qword_1EB7E5AC0);
    uint64_t v3 = sub_1B2E81F98();
    os_log_type_t v4 = sub_1B2E82DC8();
    if (os_log_type_enabled(v3, v4))
    {
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      _os_log_impl(&dword_1B2996000, v3, v4, "Failed to load stop_words from resources.", v5, 2u);
      MEMORY[0x1B3EB30C0](v5, -1, -1);
    }

    return (void *)MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1B2DC0CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v81 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7E69E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B2E80498();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  __int16 v14 = (char *)&v68 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v68 - v15;
  if (qword_1EB7E6280 != -1) {
    swift_once();
  }
  id v17 = sub_1B29C340C(a1, a2, 1852797802, 0xE400000000000000, (void *)qword_1EB7E6340);
  if (!v17)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 1, 1, v7);
    goto LABEL_11;
  }
  unint64_t v18 = v17;
  sub_1B2E80448();

  unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v19(v6, v14, v7);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 0, 1, v7);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v7) == 1)
  {
LABEL_11:
    sub_1B29E9E40((uint64_t)v6);
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1B2E81FB8();
    sub_1B29A4B98(v44, (uint64_t)qword_1EB7E5AC0);
    swift_bridgeObjectRetain_n();
    uint64_t v45 = sub_1B2E81F98();
    os_log_type_t v46 = sub_1B2E82DC8();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      id v76 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315138;
      swift_bridgeObjectRetain();
      sub_1B29BF6BC(a1, a2, (uint64_t)&v76, v48, v49, v50, v51, v52, v68, v69, (uint64_t)v70, v71, v72, v73, v74, v75, (uint64_t)v76, v77, v78,
        v79);
      uint64_t v80 = v53;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B2996000, v45, v46, "Error: Unable to read file %s", v47, 0xCu);
      swift_arrayDestroy();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  v19(v16, v6, v7);
  uint64_t v57 = sub_1B2E804D8();
  unint64_t v59 = v58;
  uint64_t v60 = (void *)MEMORY[0x1B3EB2480]();
  uint64_t v61 = self;
  uint64_t v62 = (void *)sub_1B2E80568();
  id v76 = 0;
  id v63 = objc_msgSend(v61, sel_JSONObjectWithData_options_error_, v62, 0, &v76);

  if (!v63)
  {
    id v66 = v76;
    char v67 = (void *)sub_1B2E80388();

    swift_willThrow();
    sub_1B29C34DC(v57, v59);
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1B2E81FB8();
    sub_1B29A4B98(v20, (uint64_t)qword_1EB7E5AC0);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v16, v7);
    id v21 = v67;
    id v22 = v67;
    BOOL v23 = sub_1B2E81F98();
    os_log_type_t v24 = sub_1B2E82DB8();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v70 = (void *)swift_slowAlloc();
      id v76 = v70;
      *(_DWORD *)uint64_t v26 = 136315394;
      sub_1B29C348C();
      HIDWORD(v69) = v25;
      uint64_t v27 = sub_1B2E83748();
      sub_1B29BF6BC(v27, v28, (uint64_t)&v76, v29, v30, v31, v32, v33, v68, v69, (uint64_t)v70, v71, v72, v73, v74, v75, (uint64_t)v76, v77, v78,
        v79);
      uint64_t v80 = v34;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      uint64_t v35 = *(void (**)(void))(v8 + 8);
      sub_1B299B3A0();
      v35();
      *(_WORD *)(v26 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v36 = sub_1B2E838A8();
      sub_1B29BF6BC(v36, v37, (uint64_t)&v76, v38, v39, v40, v41, v42, v68, v69, (uint64_t)v70, v71, v72, v73, v74, v75, (uint64_t)v76, v77, v78,
        v79);
      uint64_t v80 = v43;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B2996000, v23, BYTE4(v69), "Error: Unable to decode file %s with error %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      sub_1B299B750();
      sub_1B299B750();

      sub_1B299B3A0();
      v35();
    }
    else
    {

      uint64_t v54 = *(void (**)(void))(v8 + 8);
      sub_1B299B3A0();
      v54();

      ((void (*)(char *, uint64_t))v54)(v16, v7);
    }
    return 0;
  }
  id v64 = v76;
  sub_1B2E83058();
  swift_unknownObjectRelease();
  sub_1B29A3EB4(&qword_1EB7D94D8);
  if ((swift_dynamicCast() & 1) == 0) {
    uint64_t v80 = 0;
  }
  uint64_t v55 = v80;
  sub_1B299B3A0();
  v65();
  sub_1B29C34DC(v57, v59);
  return v55;
}

#error "1B2DC1468: call analysis failed (funcsize=52)"

uint64_t sub_1B2DC14E4()
{
  sub_1B299D804();
  if (v0[4])
  {
    swift_bridgeObjectRetain_n();
    sub_1B2A43538();
    uint64_t v2 = v1;
    swift_bridgeObjectRelease();
    uint64_t v7 = v2;
    sub_1B2DC1A78(&v7);
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1B2DC182C(v7);
    swift_release();
    uint64_t v7 = v3;
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2C19524((uint64_t)&qword_1EB7E2800);
    sub_1B2E822D8();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  sub_1B2E831F8();
  uint64_t v5 = v0[2];
  unint64_t v4 = v0[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = v5;
  unint64_t v8 = v4;
  sub_1B2E82518();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2E83748();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  return v7;
}

uint64_t sub_1B2DC182C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 48;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v9 = *(void *)(v2 - 16);
    uint64_t v10 = *(void *)(v2 - 8);
    swift_bridgeObjectRetain_n();
    swift_retain();
    sub_1B2E82518();
    sub_1B2DC3D5C();
    sub_1B2E82518();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B29B7048();
      uint64_t v3 = v6;
    }
    unint64_t v4 = *(void *)(v3 + 16);
    if (v4 >= *(void *)(v3 + 24) >> 1)
    {
      sub_1B29B7048();
      uint64_t v3 = v7;
    }
    *(void *)(v3 + 16) = v4 + 1;
    uint64_t v5 = v3 + 16 * v4;
    *(void *)(v5 + 32) = v9;
    *(void *)(v5 + 40) = v10;
    v2 += 24;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t KnosisInternalFact.init(sid:pid:oid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  sub_1B2DCF1DC();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2DCF1DC();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2DCF1DC();
  sub_1B2E82518();
  uint64_t result = swift_bridgeObjectRelease();
  *a7 = a1;
  a7[1] = a2;
  a7[2] = 0;
  a7[3] = a1;
  a7[4] = a2;
  a7[5] = 0;
  a7[6] = a3;
  a7[7] = a4;
  a7[8] = a5;
  a7[9] = a6;
  a7[10] = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_1B2DC1A78(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2DCA55C();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1B2DC9AF4(v6);
  *a1 = v2;
  return result;
}

#error "1B2DC1B38: call analysis failed (funcsize=41)"

uint64_t sub_1B2DC1B88(uint64_t a1, uint64_t a2)
{
  sub_1B299D804();
  uint64_t v4 = *(void *)(a1 + 32);
  sub_1B299D804();
  uint64_t v5 = *(void *)(a2 + 32);
  if (v4)
  {
    if (!v5) {
      goto LABEL_19;
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = swift_bridgeObjectRetain();
    char v7 = sub_1B2D3C734(v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      goto LABEL_19;
    }
  }
  else if (v5)
  {
    goto LABEL_19;
  }
  uint64_t v8 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (!v8) {
      goto LABEL_19;
    }
    swift_retain();
    uint64_t v9 = swift_retain();
    char v10 = sub_1B2DC1B88(v9, v8);
    swift_release();
    swift_release();
    if ((v10 & 1) == 0) {
      goto LABEL_19;
    }
  }
  else if (v8)
  {
    goto LABEL_19;
  }
  BOOL v11 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v11 || (char v12 = 0, (sub_1B2E837A8() & 1) != 0))
  {
    if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(double *)(a1 + 56) == *(double *)(a2 + 56))
    {
      sub_1B299D804();
      uint64_t v13 = *(void *)(a1 + 72);
      sub_1B299D804();
      uint64_t v14 = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v12 = sub_1B2D3C8E8(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
    }
LABEL_19:
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1B2DC1D0C()
{
  sub_1B299D804();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
  sub_1B2B1D124(v18, v1);
  uint64_t v3 = v18[0];
  uint64_t v4 = v18[1];
  int64_t v5 = v18[3];
  unint64_t v6 = v18[4];
  int64_t v7 = (unint64_t)(v18[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v5 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v11 >= v7) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    int64_t v13 = v5 + 1;
    if (!v12)
    {
      int64_t v13 = v5 + 2;
      if (v5 + 2 >= v7) {
        goto LABEL_27;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v5 + 3;
        if (v5 + 3 >= v7) {
          goto LABEL_27;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v5 + 4;
          if (v5 + 4 >= v7) {
            goto LABEL_27;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v5 + 5;
            if (v5 + 5 >= v7) {
              goto LABEL_27;
            }
            unint64_t v12 = *(void *)(v4 + 8 * v13);
            if (!v12)
            {
              int64_t v13 = v5 + 6;
              if (v5 + 6 >= v7) {
                goto LABEL_27;
              }
              unint64_t v12 = *(void *)(v4 + 8 * v13);
              if (!v12)
              {
                int64_t v14 = v5 + 7;
                while (v14 < v7)
                {
                  unint64_t v12 = *(void *)(v4 + 8 * v14++);
                  if (v12)
                  {
                    int64_t v13 = v14 - 1;
                    goto LABEL_22;
                  }
                }
LABEL_27:
                swift_release();
                uint64_t v2 = v17;
                swift_bridgeObjectRelease();
                return v2;
              }
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v5 = v13;
LABEL_23:
    uint64_t v15 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
    uint64_t result = sub_1B299D804();
    if (*(void *)(v15 + 24))
    {
      uint64_t v16 = swift_retain();
      MEMORY[0x1B3EB0FE0](v16);
      if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1B2E828A8();
      }
      sub_1B2E828F8();
      uint64_t result = sub_1B2E82878();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2DC1F00()
{
  if (*(unsigned char *)(v0 + 80)) {
    return 1;
  }
  else {
    return *(unsigned char *)(v0 + 81) & 1;
  }
}

uint64_t sub_1B2DC1F1C()
{
  return sub_1B2DC43BC();
}

BOOL sub_1B2DC1F34()
{
  unint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  return v2 == 0;
}

unint64_t KnosisIndexType.rawValue.getter()
{
  unint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      unint64_t result = sub_1B2A2C2E0();
      break;
    case 2:
      unint64_t result = sub_1B2DCF0D4();
      break;
    case 3:
      unint64_t result = sub_1B2DCF088(0x47746E657665);
      break;
    case 4:
      unint64_t result = sub_1B2DCF00C();
      break;
    case 5:
      unint64_t result = sub_1B2999DFC();
      break;
    case 6:
      unint64_t result = sub_1B2DCF088(0x476C61636F6CLL);
      break;
    case 7:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

void *static KnosisIndexType.allCases.getter()
{
  return &unk_1F0AB8638;
}

uint64_t sub_1B2DC2028(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2DC1AE4();
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1B29A0E20();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B2AD2DD4();
    swift_endAccess();
    swift_release();
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_1B2DC60E4(v6);
  }
  swift_retain();
  sub_1B2DC2100(a1, a2, v5);
  return swift_release_n();
}

uint64_t sub_1B2DC2100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v7 = (uint64_t *)(v3 + 32);
  sub_1B2CF375C();
  if (!*(void *)(v3 + 32))
  {
    sub_1B29A3EB4(&qword_1E9C441F8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 40) = a2;
    *(void *)(inited + 48) = a3;
    type metadata accessor for KnosisQueryParam();
    swift_bridgeObjectRetain();
    swift_retain();
    *int64_t v7 = sub_1B2E82148();
    return swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1B29A0E20();
  if (*v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = swift_retain();
    sub_1B2B2A11C(v9, a1, a2, v10, v11, v12, v13, v14, v16, v17);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

IntelligencePlatform::KnosisIndexType_optional __swiftcall KnosisIndexType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B2DC2268(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = 0;
    uint64_t v46 = swift_bridgeObjectRetain();
    char v5 = (uint64_t *)(v46 + 56);
    do
    {
      uint64_t v58 = v2;
      uint64_t v6 = *(v5 - 3);
      uint64_t v7 = *(v5 - 2);
      double v8 = *((double *)v5 - 1);
      uint64_t v9 = v5[1];
      uint64_t v10 = v5[2];
      uint64_t v49 = v5[3];
      uint64_t v51 = *v5;
      uint64_t v11 = v5[4];
      uint64_t v47 = v5[5];
      uint64_t v12 = v5[7];
      uint64_t v53 = v5[6];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1B2AF182C((uint64_t)v4);
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = *(void *)(v3 + 16);
      *(void *)(v3 + 16) = 0x8000000000000000;
      uint64_t v20 = sub_1B29DB060(v6, v7, v14, v15, v16, v17, v18, v19, v46, v47, v49, v51, v53, v11, v10, v9, v58, v13, v61,
              v62,
              v63,
              v64,
              v65,
              v66,
              v67,
              v68);
      if (__OFADD__(*(void *)(v13 + 16), (v21 & 1) == 0))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        IntelligencePlatform::KnosisIndexType_optional result = sub_1B2E83858();
        __break(1u);
        return result;
      }
      unint64_t v22 = v20;
      char v23 = v21;
      sub_1B29A3EB4(&qword_1E9C441C0);
      uint64_t v30 = v60;
      if (sub_1B2E83398())
      {
        uint64_t v31 = sub_1B29DB060(v6, v7, v24, v25, v26, v27, v28, v29, v46, v48, v50, v52, v54, v55, v56, v57, v59, v60, v61,
                v62,
                v63,
                v64,
                v65,
                v66,
                v67,
                v68);
        if ((v23 & 1) != (v32 & 1)) {
          goto LABEL_26;
        }
        unint64_t v22 = v31;
      }
      *(void *)(v3 + 16) = v30;
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void **)(v3 + 16);
      if ((v23 & 1) == 0)
      {
        v33[(v22 >> 6) + 8] |= 1 << v22;
        uint64_t v34 = (uint64_t *)(v33[6] + 16 * v22);
        uint64_t *v34 = v6;
        v34[1] = v7;
        *(void *)(v33[7] + 8 * v22) = MEMORY[0x1E4FBC860];
        uint64_t v35 = v33[2];
        uint64_t v36 = v35 + 1;
        BOOL v37 = __OFADD__(v35, 1);
        swift_bridgeObjectRetain();
        if (v37) {
          goto LABEL_25;
        }
        void v33[2] = v36;
      }
      swift_bridgeObjectRetain();
      uint64_t v38 = v33[7];
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void *)(v38 + 8 * v22);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v38 + 8 * v22) = v39;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B29B7480();
        uint64_t v39 = v44;
        *(void *)(v38 + 8 * v22) = v44;
      }
      unint64_t v41 = *(void *)(v39 + 16);
      if (v41 >= *(void *)(v39 + 24) >> 1)
      {
        sub_1B29B7480();
        uint64_t v39 = v45;
        *(void *)(v38 + 8 * v22) = v45;
      }
      *(void *)(v39 + 16) = v41 + 1;
      uint64_t v42 = v39 + 88 * v41;
      *(void *)(v42 + 32) = v6;
      *(void *)(v42 + 40) = v7;
      *(double *)(v42 + 48) = v8;
      *(void *)(v42 + 56) = v52;
      *(void *)(v42 + 64) = v57;
      *(void *)(v42 + 72) = v56;
      *(void *)(v42 + 80) = v50;
      *(void *)(v42 + 88) = v55;
      *(void *)(v42 + 96) = v48;
      *(void *)(v42 + 104) = v54;
      *(void *)(v42 + 112) = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      double v43 = *(double *)(v3 + 24);
      if (v43 <= v8) {
        double v43 = v8;
      }
      *(double *)(v3 + 24) = v43;
      v5 += 11;
      uint64_t v4 = sub_1B2CBC3F0;
      uint64_t v2 = v59 - 1;
    }
    while (v59 != 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t KnosisInternalFact.id.getter()
{
  return sub_1B2999874();
}

uint64_t KnosisInternalFact.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*KnosisInternalFact.id.modify())(void)
{
  return nullsub_1;
}

uint64_t KnosisInternalFact.description.getter()
{
  return 979659099;
}

void KnosisInternalFact.init(sid:pid:oid:qpid:qoid:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  KnosisInternalFact.init(sid:pid:oid:)(a1, a2, a3, a4, a5, a6, &v49);
  uint64_t v14 = v50;
  uint64_t v15 = v51;
  uint64_t v16 = v52;
  uint64_t v17 = v53;
  uint64_t v18 = v56;
  uint64_t v19 = v57;
  *a9 = v49;
  a9[1] = v14;
  a9[2] = v15;
  a9[3] = v16;
  a9[4] = v17;
  *(_OWORD *)(a9 + 5) = v54;
  *(_OWORD *)(a9 + 7) = v55;
  a9[9] = v18;
  a9[10] = v19;
  a9 += 10;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1B2C6FC48();
  uint64_t v23 = KnosisInternalFact.init(sid:pid:oid:)(v20, v21, a7, a8, a10, a11, v22);
  uint64_t v24 = v49;
  uint64_t v25 = v50;
  sub_1B299B688(v23, v26, v27, v28, v29, v30, v31, v32, v39, v41, v42, v44, v45, v47, v48, v49, v50, v51, v52,
    v53,
    v54,
    *((uint64_t *)&v54 + 1),
    v55);
  uint64_t v33 = v56;
  uint64_t v34 = v57;
  sub_1B2E314E4();
  uint64_t v35 = *(void *)(*a9 + 16);
  sub_1B2E31B40(v35);
  uint64_t v36 = *a9;
  *(void *)(v36 + 16) = v35 + 1;
  uint64_t v37 = v36 + 88 * v35;
  *(void *)(v37 + 32) = v24;
  *(void *)(v37 + 40) = v25;
  sub_1B2DCF11C(v37, v40, v43, v46);
  *(void *)(v38 + 104) = v33;
  *(void *)(v38 + 112) = v34;
}

Swift::Void __swiftcall KnosisInternalFact.addQualifier(qpid:qoid:)(Swift::String qpid, Swift::String qoid)
{
  sub_1B299B07C();
  uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1B2C6FC48();
  uint64_t v10 = KnosisInternalFact.init(sid:pid:oid:)(v7, v8, v6, v4, v3, v2, v9);
  uint64_t v11 = v35;
  uint64_t v12 = v36;
  sub_1B299B688(v10, v13, v14, v15, v16, v17, v18, v19, v25, v27, v28, v30, v31, v33, v34, v35, v36, v37, v38,
    v39,
    v40,
    v41,
    v42);
  sub_1B2E314E4();
  uint64_t v20 = *(void *)(*(void *)(v2 + 80) + 16);
  sub_1B2E31B40(v20);
  uint64_t v21 = *(void *)(v2 + 80);
  *(void *)(v21 + 16) = v20 + 1;
  uint64_t v22 = v21 + 88 * v20;
  *(void *)(v22 + 32) = v11;
  *(void *)(v22 + 40) = v12;
  sub_1B2DCF11C(v22, v26, v29, v32);
  *(void *)(v23 + 104) = v43;
  *(void *)(v23 + 112) = v44;
  *(void *)(v2 + 80) = v24;
}

uint64_t static KnosisInternalFact.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1B2E837A8();
  }
}

uint64_t KnosisInternalFact.hash(into:)(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[9];
  uint64_t v7 = v1[10];
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  sub_1B2E839C8();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_1B2E839A8();
    swift_bridgeObjectRetain();
    sub_1B2ABA9E4();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1B2E839A8();
    if (v5) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_1B2E839A8();
  if (!v4) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1B2E839A8();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_4:
    sub_1B2E839A8();
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  sub_1B2E839A8();
LABEL_8:
  swift_bridgeObjectRetain();
  sub_1B2ABA958(a1, v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DC2B34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x497463656A627573 && a2 == 0xE900000000000044;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x497463656A627573 && a2 == 0xEA00000000006173;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x7461636964657270 && a2 == 0xEB00000000644965;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x44497463656A626FLL && a2 == 0xE800000000000000;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x656966696C617571 && a2 == 0xEA00000000007372)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = sub_1B2E837A8();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B2DC2E18(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65726F6373;
      break;
    case 2:
    case 3:
      uint64_t result = 0x497463656A627573;
      break;
    case 4:
      uint64_t result = 0x7461636964657270;
      break;
    case 5:
      uint64_t result = 0x44497463656A626FLL;
      break;
    case 6:
      uint64_t result = 0x656966696C617571;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2DC2EF4()
{
  return sub_1B2DC2E18(*v0);
}

uint64_t sub_1B2DC2EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DC2B34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DC2F24(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCC188();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC2F60(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCC188();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t KnosisInternalFact.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C44050);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B29A0498();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2DCC188();
  sub_1B2E83A38();
  sub_1B2E83688();
  if (!v8)
  {
    sub_1B2E836A8();
    sub_1B2E83688();
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2DCD610((uint64_t)&qword_1E9C3F888);
    sub_1B2DCF3CC();
    sub_1B2E83668();
    sub_1B2E83628();
    sub_1B2E83628();
    sub_1B29A3EB4(&qword_1E9C43CE8);
    sub_1B2DCD808((uint64_t)&unk_1E9C44060);
    sub_1B2DCF3CC();
    sub_1B2E836D8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

uint64_t KnosisInternalFact.hashValue.getter()
{
  sub_1B2DCEFB0();
  sub_1B2E83988();
  KnosisInternalFact.hash(into:)((uint64_t)&v1);
  return sub_1B2E839E8();
}

uint64_t sub_1B2DC32C0(void *a1)
{
  return KnosisInternalFact.encode(to:)(a1);
}

uint64_t sub_1B2DC32E0()
{
  sub_1B2DCEFB0();
  sub_1B2E83988();
  KnosisInternalFact.hash(into:)((uint64_t)&v1);
  return sub_1B2E839E8();
}

uint64_t static KnosisInternalFact.< infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[6];
  uint64_t v4 = a1[7];
  uint64_t v6 = a1[8];
  uint64_t v7 = a1[9];
  uint64_t v9 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v11 = a2[6];
  uint64_t v10 = a2[7];
  BOOL v12 = a1[3] == a2[3] && a1[4] == a2[4];
  uint64_t v13 = a2[9];
  uint64_t v40 = a2[8];
  if (v12) {
    goto LABEL_33;
  }
  sub_1B2999874();
  uint64_t v34 = v15;
  uint64_t v35 = v14;
  uint64_t v37 = v7;
  uint64_t v38 = v13;
  uint64_t v36 = v6;
  uint64_t v16 = v8;
  uint64_t v17 = v9;
  uint64_t v18 = v3;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  char v25 = sub_1B2E837A8();
  uint64_t v11 = v34;
  uint64_t v10 = v35;
  uint64_t v5 = v24;
  uint64_t v4 = v22;
  uint64_t v2 = v20;
  uint64_t v3 = v18;
  uint64_t v9 = v17;
  uint64_t v8 = v16;
  uint64_t v6 = v36;
  uint64_t v7 = v37;
  uint64_t v13 = v38;
  if (v25)
  {
LABEL_33:
    if (!v4
      || !v10
      || (v5 == v11 ? (v26 = v4 == v10) : (v26 = 0), v26 || (v39 = v2, v27 = sub_1B2E837A8(), uint64_t v2 = v39, (v27 & 1) != 0)))
    {
      if (v7
        && v13
        && (v6 == v40 ? (BOOL v28 = v7 == v13) : (BOOL v28 = 0),
            !v28 && (sub_1B2DCF298(), v30 = v29, v31 = sub_1B2E837A8(), uint64_t v2 = v30, (v31 & 1) == 0)))
      {
        sub_1B2DCF298();
      }
      else if (v2 == v9 && v3 == v8)
      {
        return 0;
      }
    }
  }
  else
  {
    sub_1B2999874();
  }

  return sub_1B2E837A8();
}

BOOL sub_1B2DC34F4(void *__src, const void *a2)
{
  memcpy(v10, __src, sizeof(v10));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_1B2CA6668(v10, (int)__dst, v3, v4, v5, v6, v7, v8);
}

BOOL sub_1B2DC354C(void *__src, const void *a2)
{
  memcpy(v10, __src, sizeof(v10));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_1B2CA67B8(v10, (int)__dst, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1B2DC35A4(void *__src, const void *a2)
{
  memcpy(v10, __src, sizeof(v10));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_1B2CA6520(v10, (int)__dst, v3, v4, v5, v6, v7, v8) & 1;
}

uint64_t sub_1B2DC35FC()
{
  sub_1B2E831F8();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B299B330();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1B2DCA660(v0);
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  MEMORY[0x1B3EB1020](v2, &type metadata for KnosisInternalFact);
  sub_1B2E82518();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B2DCF2B8();
  sub_1B2E82518();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  return 0;
}

uint64_t KnosisQueryArg.description.getter()
{
  sub_1B2DCF2C4();
  uint64_t v2 = 0x7461636964657270;
  if (!v3) {
    uint64_t v2 = 0x7463656A626FLL;
  }
  if (v0) {
    return v2;
  }
  else {
    return v1;
  }
}

uint64_t KnosisQueryArg.rawValue.getter()
{
  sub_1B2DCF2C4();
  uint64_t v2 = 0x7461636964657270;
  if (!v3) {
    uint64_t v2 = 0x7463656A626FLL;
  }
  if (v0) {
    return v2;
  }
  else {
    return v1;
  }
}

IntelligencePlatform::KnosisQueryArg_optional __swiftcall KnosisQueryArg.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1B2DC387C()
{
  return sub_1B29AAECC();
}

uint64_t sub_1B2DC3888()
{
  return sub_1B29AE630();
}

uint64_t sub_1B2DC3890(uint64_t a1)
{
  return sub_1B2AA6180(a1, *v1);
}

uint64_t sub_1B2DC3898()
{
  return sub_1B29F97CC();
}

IntelligencePlatform::KnosisQueryArg_optional sub_1B2DC38A0(Swift::String *a1)
{
  return KnosisQueryArg.init(rawValue:)(*a1);
}

uint64_t sub_1B2DC38AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = KnosisQueryArg.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2DC38D4()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2DC3934()
{
  return sub_1B2E82788();
}

uint64_t sub_1B2DC3988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  uint64_t v11 = *((void *)a6 + 2);
  int v12 = *((_DWORD *)a6 + 6);
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 88) = a7;
  *(void *)(v10 + 96) = a8;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  *(void *)(v10 + 48) = a5;
  *(void *)(v10 + 56) = 0;
  long long v13 = *a6;
  *(void *)(v10 + 64) = 0;
  *(void *)(v10 + 72) = v11;
  *(_OWORD *)(v10 + 56) = v13;
  *(_DWORD *)(v10 + 80) = v12;
  sub_1B29E4D3C(0, 0);
  *(unsigned char *)(v10 + 104) = a9;
  *(unsigned char *)(v10 + 105) = a10;
  return v10;
}

unint64_t sub_1B2DC39FC()
{
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B299B330();
  swift_bridgeObjectRelease();
  sub_1B2DCF2B8();
  sub_1B2E82518();
  sub_1B2E83748();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2DCF2B8();
  sub_1B2E82518();
  sub_1B2E83748();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_retain();
    sub_1B2DC14E4();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v1 = *(void *)(v0 + 64);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    IntentRequest.description.getter();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B29E4D3C(v2, v1);
    sub_1B2E82518();
    swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(v0 + 104) == 1) {
    sub_1B2E82518();
  }
  if (*(unsigned char *)(v0 + 105) == 1) {
    sub_1B2E82518();
  }
  sub_1B2E82518();
  return 0xD000000000000010;
}

uint64_t sub_1B2DC3CC4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B29E4D3C(*(void *)(v0 + 56), *(void *)(v0 + 64));
  return v0;
}

uint64_t sub_1B2DC3D04()
{
  sub_1B2DC3CC4();

  return swift_deallocClassInstance();
}

unint64_t sub_1B2DC3D38()
{
  return sub_1B2DC39FC();
}

uint64_t sub_1B2DC3D5C()
{
  sub_1B299D804();
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = swift_retain();
    uint64_t v2 = sub_1B2DC14E4(v1);
    swift_release();
  }
  else
  {
    sub_1B299D804();
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v2 = *(void *)(v4 + 16);
    if (v2)
    {
      if (v2 == 1)
      {
        uint64_t v2 = *(void *)(v4 + 32);
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1B29A3EB4(&qword_1EB7E3B30);
        sub_1B2C19524((uint64_t)&qword_1EB7E2800);
        sub_1B2E822D8();
        swift_bridgeObjectRelease();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2E82518();
        return 91;
      }
    }
  }
  return v2;
}

uint64_t sub_1B2DC3EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 56) = 0x3FF0000000000000;
  *(unsigned char *)(v3 + 64) = 0;
  *(void *)(v3 + 72) = sub_1B2E82148();
  *(_WORD *)(v3 + 80) = 514;
  *(void *)(v3 + 96) = 0;
  *(void *)(v3 + 104) = 0;
  *(void *)(v3 + 88) = 0;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  sub_1B2CF375C();
  *(void *)(v3 + 32) = a3;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1B2DC3F50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v48 = a1;
  sub_1B299D2DC();
  uint64_t v50 = v2;
  type metadata accessor for KnosisQueryParam();
  uint64_t v3 = sub_1B2E82148();
  sub_1B299D804();
  uint64_t v49 = v1;
  if (*(void *)(v1 + 32)) {
    uint64_t v4 = *(void *)(v1 + 32);
  }
  else {
    uint64_t v4 = sub_1B2E82148();
  }
  uint64_t v51 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  int64_t v52 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  if (!v7) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v53 = (v7 - 1) & v7;
  uint64_t v55 = v8;
  for (unint64_t i = __clz(__rbit64(v7)) | (v8 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    uint64_t v14 = v4;
    uint64_t v15 = (uint64_t *)(*(void *)(v4 + 48) + 16 * i);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v18 = sub_1B2DC43BC();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = sub_1B29DB060(v17, v16, v19, v20, v21, v22, v23, v24, (uint64_t)v48, v49, v50, v51, v52, v53, v55, v57, v58, v59, v3,
            v61,
            v62,
            v63,
            v64,
            v65,
            v66,
            v67);
    if (__OFADD__(*(void *)(v3 + 16), (v26 & 1) == 0))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      uint64_t result = sub_1B2E83858();
      __break(1u);
      return result;
    }
    unint64_t v27 = v25;
    char v28 = v26;
    sub_1B29A3EB4(&qword_1EB7D9868);
    if (sub_1B2E83398())
    {
      uint64_t v35 = sub_1B29DB060(v17, v16, v29, v30, v31, v32, v33, v34, (uint64_t)v48, v49, v50, v51, v52, v54, v56, v57, v58, v59, (uint64_t)v60,
              v61,
              v62,
              v63,
              v64,
              v65,
              v66,
              v67);
      if ((v28 & 1) != (v36 & 1)) {
        goto LABEL_40;
      }
      unint64_t v27 = v35;
    }
    uint64_t v3 = (uint64_t)v60;
    if (v28)
    {
      uint64_t v37 = v60[7];
      swift_release();
      *(void *)(v37 + 8 * v27) = v18;
    }
    else
    {
      v60[(v27 >> 6) + 8] |= 1 << v27;
      uint64_t v38 = (uint64_t *)(v60[6] + 16 * v27);
      *uint64_t v38 = v17;
      v38[1] = v16;
      *(void *)(v60[7] + 8 * v27) = v18;
      uint64_t v39 = v60[2];
      BOOL v40 = __OFADD__(v39, 1);
      uint64_t v41 = v39 + 1;
      if (v40) {
        goto LABEL_37;
      }
      void v60[2] = v41;
      swift_bridgeObjectRetain();
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v14;
    unint64_t v7 = v54;
    uint64_t v8 = v56;
    if (v54) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v10 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_38;
    }
    if (v10 >= v52) {
      goto LABEL_32;
    }
    unint64_t v11 = *(void *)(v51 + 8 * v10);
    int64_t v12 = v8 + 1;
    if (!v11)
    {
      int64_t v12 = v8 + 2;
      if (v8 + 2 >= v52) {
        goto LABEL_32;
      }
      unint64_t v11 = *(void *)(v51 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v8 + 3;
        if (v8 + 3 >= v52) {
          goto LABEL_32;
        }
        unint64_t v11 = *(void *)(v51 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v53 = (v11 - 1) & v11;
    uint64_t v55 = v12;
  }
  uint64_t v13 = v8 + 4;
  if (v8 + 4 < v52)
  {
    unint64_t v11 = *(void *)(v51 + 8 * v13);
    if (!v11)
    {
      while (1)
      {
        int64_t v12 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_39;
        }
        if (v12 >= v52) {
          goto LABEL_32;
        }
        unint64_t v11 = *(void *)(v51 + 8 * v12);
        ++v13;
        if (v11) {
          goto LABEL_21;
        }
      }
    }
    int64_t v12 = v8 + 4;
    goto LABEL_21;
  }
LABEL_32:
  swift_release();
  uint64_t v42 = swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_1B2999874();
  sub_1B2DC3EA4(v43, v44, v3);
  if (*(void *)(v49 + 40))
  {
    swift_retain();
    uint64_t v45 = sub_1B2DC43BC();
    swift_release();
  }
  else
  {
    uint64_t v45 = 0;
  }
  *(void *)(v42 + 40) = v45;
  swift_release();
  *(void *)(v42 + 48) = *(void *)(v49 + 48);
  *(void *)(v42 + 56) = *(void *)(v49 + 56);
  *(unsigned char *)(v42 + 64) = *(unsigned char *)(v49 + 64);
  *(_WORD *)(v42 + 80) = *(_WORD *)(v49 + 80);
  sub_1B299D804();
  uint64_t v46 = *(void *)(v49 + 72);
  sub_1B2CF375C();
  *(void *)(v42 + 72) = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v42 + 88) = *(void *)(v49 + 88);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  v48[3] = v50;
  *uint64_t v48 = v42;
  return result;
}

uint64_t sub_1B2DC43A4()
{
  return sub_1B2DC43BC();
}

uint64_t sub_1B2DC43BC()
{
  void (*v0)(void *__return_ptr);
  uint64_t v2;
  void v3[4];

  sub_1B299D2DC();
  v0(v3);
  swift_dynamicCast();
  return v2;
}

uint64_t sub_1B2DC4430(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1936159329 && a2 == 0xE400000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1954047342 && a2 == 0xE400000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x74696D696CLL && a2 == 0xE500000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x746867696577 && a2 == 0xE600000000000000;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x7079547865646E69 && a2 == 0xE900000000000065;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x736D61726170 && a2 == 0xE600000000000000;
              if (v11 || (sub_1B2E837A8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x6465747563657865 && a2 == 0xE800000000000000;
                if (v12 || (sub_1B2E837A8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  BOOL v13 = a1 == 0x6365784570696B73 && a2 == 0xE800000000000000;
                  if (v13 || (sub_1B2E837A8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x6449746C75736572 && a2 == 0xE900000000000073;
                    if (v14 || (sub_1B2E837A8() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else if (a1 == 0x656D614E706F76 && a2 == 0xE700000000000000)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else
                    {
                      char v16 = sub_1B2E837A8();
                      swift_bridgeObjectRelease();
                      if (v16) {
                        return 10;
                      }
                      else {
                        return 11;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B2DC4844(char a1)
{
  uint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      uint64_t result = 1936159329;
      break;
    case 2:
      uint64_t result = 1954047342;
      break;
    case 3:
      uint64_t result = 0x74696D696CLL;
      break;
    case 4:
      uint64_t result = 0x746867696577;
      break;
    case 5:
      uint64_t result = 0x7079547865646E69;
      break;
    case 6:
      uint64_t result = 0x736D61726170;
      break;
    case 7:
      uint64_t result = 0x6465747563657865;
      break;
    case 8:
      uint64_t result = 0x6365784570696B73;
      break;
    case 9:
      uint64_t result = 0x6449746C75736572;
      break;
    case 10:
      uint64_t result = 0x656D614E706F76;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2DC497C()
{
  return sub_1B2DC4844(*v0);
}

uint64_t sub_1B2DC4984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DC4430(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DC49AC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD26C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC49E8(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD26C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DC4A24()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 40);
  *(void *)(v0 + 40) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v2 = *(void *)(v1 + 40);
      swift_retain();
      swift_release();
      uint64_t v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t sub_1B2DC4AB0()
{
  sub_1B2DC4A24();

  return swift_deallocClassInstance();
}

void sub_1B2DC4AE4()
{
  sub_1B299F300();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_1B29A3EB4(&qword_1E9C440B8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299ADB4();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DCD26C();
  sub_1B2E83A38();
  uint64_t v5 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1B299B990();
  sub_1B2E83688();
  if (!v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299D804();
    sub_1B29A3EB4(&qword_1E9C440C8);
    sub_1B2DCD2B8();
    sub_1B2DCF15C();
    sub_1B2E83668();
    sub_1B2DCD9B4((uint64_t)&unk_1E9C440E0);
    sub_1B2DCF15C();
    sub_1B2E83668();
    sub_1B299B990();
    sub_1B2E836C8();
    sub_1B299B990();
    sub_1B2E836A8();
    sub_1B2DCD364();
    sub_1B2DCF15C();
    sub_1B2E836D8();
    sub_1B299D804();
    sub_1B29A3EB4(&qword_1EB7D94D8);
    sub_1B2DCDA40((uint64_t)&qword_1E9C3A720);
    sub_1B2DCF0EC();
    sub_1B2E836D8();
    sub_1B2DCF16C(*(unsigned __int8 *)(v1 + 80), 7);
    sub_1B2DCF16C(*(unsigned __int8 *)(v1 + 81), 8);
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2DCD610((uint64_t)&qword_1E9C3F888);
    sub_1B2DCF0EC();
    sub_1B2E83668();
    swift_bridgeObjectRetain();
    sub_1B299B990();
    sub_1B2E83628();
  }
  uint64_t v6 = sub_1B2DCF1B4();
  v7(v6);
  swift_bridgeObjectRelease();
  sub_1B29998C8();
}

uint64_t sub_1B2DC4E88(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1B2DC4ED8(a1, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return v2;
}

void sub_1B2DC4ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  uint64_t v12 = v10;
  BOOL v14 = v13;
  sub_1B29A3EB4(&qword_1E9C441D8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v15);
  sub_1B299F280();
  *(void *)(v12 + 32) = 0;
  *(void *)(v12 + 40) = 0;
  *(void *)(v12 + 48) = 0;
  *(void *)(v12 + 56) = 0x3FF0000000000000;
  *(unsigned char *)(v12 + 64) = 0;
  *(void *)(v12 + 72) = sub_1B2E82148();
  *(_WORD *)(v12 + 80) = 514;
  *(void *)(v12 + 88) = 0;
  *(void *)(v12 + 96) = 0;
  *(void *)(v12 + 104) = 0;
  uint64_t v23 = (uint64_t)v14;
  sub_1B29AEC7C(v14, v14[3]);
  sub_1B2DCD26C();
  sub_1B2E83A18();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v12 + 16) = sub_1B2E83568();
    *(void *)(v12 + 24) = v16;
    sub_1B29A3EB4(&qword_1E9C440C8);
    sub_1B2DCD908();
    sub_1B2E83548();
    sub_1B2DCF278();
    *(void *)(v12 + 32) = v24;
    swift_bridgeObjectRelease();
    sub_1B2DCD9B4((uint64_t)&unk_1EB7D9750);
    sub_1B2E83548();
    *(void *)(v12 + 40) = v24;
    swift_release();
    *(void *)(v12 + 48) = sub_1B2E835A8();
    sub_1B2E83588();
    *(void *)(v12 + 56) = v17;
    LOBYTE(a10) = 5;
    sub_1B2DCD9F4();
    sub_1B2E835B8();
    *(unsigned char *)(v12 + 64) = 4;
    sub_1B29A3EB4(&qword_1EB7D94D8);
    sub_1B2DCDA40((uint64_t)&qword_1EB7D94E0);
    sub_1B2DCF254();
    sub_1B2E835B8();
    swift_beginAccess();
    *(void *)(v12 + 72) = a10;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v12 + 80) = sub_1B2DCF190(7);
    *(unsigned char *)(v12 + 81) = sub_1B2DCF190(8);
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2DCD610((uint64_t)&qword_1EB7E2BC8);
    sub_1B2DCF254();
    sub_1B2E83548();
    *(void *)(v12 + 88) = a10;
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1B2E83508();
    uint64_t v20 = v19;
    uint64_t v21 = sub_1B2DCF3A4();
    v22(v21);
    *(void *)(v12 + 96) = v18;
    *(void *)(v12 + 104) = v20;
    swift_bridgeObjectRelease();
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v23);
  sub_1B29998C8();
}

uint64_t sub_1B2DC539C()
{
  return sub_1B2DC14E4();
}

uint64_t sub_1B2DC53C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B2DC4E88(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_1B2DC53EC()
{
}

uint64_t sub_1B2DC5410(uint64_t *a1, uint64_t *a2)
{
  return sub_1B2DC1B88(*a1, *a2);
}

uint64_t sub_1B2DC541C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E69727473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x74616F6C66 && a2 == 0xE500000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1701669236 && a2 == 0xE400000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x64726F7779656BLL && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1B2DC55AC(char a1)
{
  uint64_t result = 0x676E69727473;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74616F6C66;
      break;
    case 2:
      uint64_t result = 1701669236;
      break;
    case 3:
      uint64_t result = 0x64726F7779656BLL;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1B2DC5630()
{
  sub_1B299F300();
  char v35 = v2;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C44158);
  sub_1B299D278();
  uint64_t v33 = v6;
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  sub_1B299B6D0();
  uint64_t v32 = v7;
  sub_1B29A3EB4(&qword_1E9C44160);
  sub_1B299D278();
  uint64_t v30 = v9;
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  uint64_t v29 = v10;
  sub_1B29A3EB4(&qword_1E9C44168);
  sub_1B299D278();
  uint64_t v27 = v12;
  uint64_t v28 = v11;
  MEMORY[0x1F4188790](v11);
  sub_1B299B3C8();
  uint64_t v13 = sub_1B29A3EB4(&qword_1E9C44170);
  sub_1B299D278();
  uint64_t v26 = v14;
  MEMORY[0x1F4188790](v15);
  sub_1B299E4A0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = sub_1B29A3EB4(&qword_1E9C44178);
  sub_1B299D278();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22);
  sub_1B299F280();
  sub_1B29AEC7C(v4, v4[3]);
  sub_1B2DCD448();
  sub_1B2E83A38();
  switch(v35)
  {
    case 1:
      sub_1B2DCD52C();
      sub_1B2DCF0B8();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v0, v28);
      break;
    case 2:
      sub_1B2DCD4E0();
      uint64_t v23 = v29;
      sub_1B2DCF0B8();
      uint64_t v25 = v30;
      uint64_t v24 = v31;
      goto LABEL_5;
    case 3:
      sub_1B2DCD494();
      uint64_t v23 = v32;
      sub_1B2DCF0B8();
      uint64_t v25 = v33;
      uint64_t v24 = v34;
LABEL_5:
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
      break;
    default:
      sub_1B2DCD578();
      sub_1B2DCF0B8();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v18, v13);
      break;
  }
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v1, v19);
  sub_1B29998C8();
}

void sub_1B2DC5930()
{
  sub_1B299F300();
  char v2 = v1;
  uint64_t v35 = sub_1B29A3EB4(&qword_1E9C44108);
  sub_1B299D278();
  uint64_t v32 = v3;
  MEMORY[0x1F4188790](v4);
  sub_1B29EFB60(v5, v31);
  sub_1B29A3EB4(&qword_1E9C44110);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C44118);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299F280();
  sub_1B29A3EB4(&qword_1E9C44120);
  sub_1B299D278();
  MEMORY[0x1F4188790](v8);
  sub_1B299ADB4();
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C44128);
  sub_1B299D278();
  uint64_t v33 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1B299E4A0();
  uint64_t v14 = v13 - v12;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2DCD448();
  sub_1B2E83A18();
  if (v0) {
    goto LABEL_7;
  }
  char v36 = v2;
  uint64_t v15 = v14;
  uint64_t v16 = sub_1B2E835F8();
  if (!*(void *)(v16 + 16)
    || (uint64_t v17 = *(unsigned __int8 *)(v16 + 32),
        sub_1B29B142C(1),
        uint64_t v19 = v18,
        unint64_t v21 = v20,
        swift_bridgeObjectRelease(),
        v19 != v21 >> 1))
  {
    uint64_t v22 = sub_1B2E83288();
    swift_allocError();
    uint64_t v24 = v23;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v24 = &unk_1F0AC95C8;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x1E4FBBA70], v22);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v15, v9);
    char v2 = v36;
LABEL_7:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    goto LABEL_8;
  }
  switch(v17)
  {
    case 1:
      sub_1B2DCD52C();
      sub_1B2DCF03C();
      goto LABEL_12;
    case 2:
      sub_1B2DCD4E0();
      sub_1B2DCF03C();
      goto LABEL_12;
    case 3:
      sub_1B2DCD494();
      sub_1B2E834E8();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v35);
      swift_unknownObjectRelease();
      uint64_t v28 = sub_1B2CF3D98();
      v29(v28);
      uint64_t v30 = (uint64_t)v36;
      goto LABEL_13;
    default:
      sub_1B2DCD578();
      sub_1B2DCF03C();
LABEL_12:
      sub_1B299B798();
      v25();
      swift_unknownObjectRelease();
      uint64_t v26 = sub_1B2CF3D98();
      v27(v26);
      uint64_t v30 = (uint64_t)v36;
LABEL_13:
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v30);
      break;
  }
LABEL_8:
  sub_1B29998C8();
}

uint64_t sub_1B2DC5E14()
{
  return sub_1B2DC55AC(*v0);
}

uint64_t sub_1B2DC5E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DC541C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DC5E44(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD448();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC5E80(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD448();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DC5EBC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD52C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC5EF8(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD52C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DC5F34(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD494();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC5F70(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD494();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DC5FAC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD578();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC5FE8(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD578();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DC6024(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD4E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC6060(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD4E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B2DC609C(unsigned char *a1@<X8>)
{
  sub_1B2DC5930();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1B2DC60C8()
{
}

uint64_t sub_1B2DC60E4(uint64_t a1)
{
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 0;
  sub_1B2CF375C();
  *(void *)(v1 + 16) = a1;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B2DC6148(uint64_t a1)
{
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 0;
  sub_1B2CF375C();
  *(void *)(v1 + 24) = a1;
  swift_release();
  return v1;
}

uint64_t sub_1B2DC61AC(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 24) = 0;
  *(unsigned char *)(v3 + 32) = 0;
  sub_1B2CF375C();
  *(void *)(v3 + 16) = a1;
  swift_bridgeObjectRelease();
  sub_1B2CF375C();
  *(void *)(v3 + 24) = a2;
  swift_release();
  *(unsigned char *)(v3 + 32) = a3;
  return v3;
}

uint64_t sub_1B2DC6240@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1B299D2DC();
  uint64_t v5 = v4;
  sub_1B299D804();
  uint64_t v6 = *(void *)(v1 + 16);
  sub_1B299D804();
  if (*(void *)(v1 + 24))
  {
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v7 = sub_1B2DC43BC();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  char v8 = *(unsigned char *)(v2 + 32);
  uint64_t v9 = swift_allocObject();
  uint64_t result = sub_1B2DC61AC(v6, v7, v8);
  a1[3] = v5;
  *a1 = v9;
  return result;
}

uint64_t sub_1B2DC633C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = swift_retain();
  a4(v8, v5);
  swift_release();
  sub_1B29AEC7C(v8, v8[3]);
  uint64_t v6 = sub_1B2E83798();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v8);
  return v6;
}

uint64_t sub_1B2DC63A8(uint64_t a1, uint64_t a2)
{
  sub_1B299D804();
  uint64_t v4 = *(void *)(a1 + 16);
  sub_1B299D804();
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  char v6 = sub_1B2A979F8(v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0 && *(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32))
  {
    sub_1B299D804();
    uint64_t v7 = *(void *)(a1 + 24);
    sub_1B299D804();
    uint64_t v8 = *(void *)(a2 + 24);
    char v9 = (v7 | v8) == 0;
    if (v7 && v8)
    {
      type metadata accessor for QueryNode();
      swift_retain();
      uint64_t v10 = swift_retain();
      char v9 = sub_1B2DC1B88(v10, v8);
      swift_release();
      swift_release();
    }
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1B2DC64B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736D726574 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x646C696863 && a2 == 0xE500000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7079546D61726170 && a2 == 0xE900000000000065)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B2DC660C(char a1)
{
  if (!a1) {
    return 0x736D726574;
  }
  if (a1 == 1) {
    return 0x646C696863;
  }
  return 0x7079546D61726170;
}

uint64_t sub_1B2DC6660()
{
  return sub_1B2DC660C(*v0);
}

uint64_t sub_1B2DC6668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DC64B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DC6690(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD3B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC66CC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD3B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DC6708()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1B2DC6730()
{
  sub_1B2DC6708();

  return swift_deallocClassInstance();
}

void sub_1B2DC6764()
{
  sub_1B2B7D848();
  sub_1B29A3EB4(&qword_1E9C440F0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B29A18FC();
  sub_1B2DCD3B0();
  sub_1B299E584();
  sub_1B299D804();
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2DCD610((uint64_t)&qword_1E9C3F888);
  sub_1B2DCF300();
  sub_1B2E836D8();
  if (!v0)
  {
    sub_1B299D804();
    type metadata accessor for QueryNode();
    sub_1B2DCD9B4((uint64_t)&unk_1E9C440E0);
    sub_1B2DCF300();
    sub_1B2E83668();
    sub_1B2DCD3FC();
    sub_1B2E836D8();
  }
  sub_1B2AC9CF4();
  v2();
  sub_1B2B7D834();
}

uint64_t sub_1B2DC6944(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1B2DC6994(a1, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return v2;
}

void sub_1B2DC6994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  uint64_t v12 = v10;
  uint64_t v14 = v13;
  sub_1B29A3EB4(&qword_1E9C441C8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v15);
  sub_1B29A0498();
  *(void *)(v12 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v12 + 24) = 0;
  *(unsigned char *)(v12 + 32) = 0;
  sub_1B29AEC7C(v14, v14[3]);
  sub_1B2DCD3B0();
  sub_1B2E83A18();
  if (v11)
  {
    swift_release();
  }
  else
  {
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2DCD610((uint64_t)&qword_1EB7E2BC8);
    sub_1B2E835B8();
    sub_1B2DCF278();
    *(void *)(v12 + 16) = v18;
    swift_bridgeObjectRelease();
    type metadata accessor for QueryNode();
    sub_1B2DCD9B4((uint64_t)&unk_1EB7D9750);
    sub_1B2E83548();
    swift_beginAccess();
    *(void *)(v12 + 24) = a10;
    swift_release();
    sub_1B2DCD8BC();
    sub_1B2E835B8();
    uint64_t v16 = sub_1B2DCF35C();
    v17(v16);
    *(unsigned char *)(v12 + 32) = a10;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v14);
  sub_1B29998C8();
}

uint64_t sub_1B2DC6C18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B2DC6944(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_1B2DC6C44()
{
}

uint64_t sub_1B2DC6C68(uint64_t *a1, uint64_t *a2)
{
  return sub_1B2DC63A8(*a1, *a2) & 1;
}

uint64_t sub_1B2DC6C8C()
{
  return sub_1B2DC3D5C();
}

unint64_t KnosisIndexType.description.getter()
{
  unint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      unint64_t result = sub_1B2A2C2E0();
      break;
    case 2:
      unint64_t result = sub_1B2DCF0D4();
      break;
    case 3:
      unint64_t result = sub_1B2DCF088(0x47746E657665);
      break;
    case 4:
      unint64_t result = sub_1B2DCF00C();
      break;
    case 5:
      unint64_t result = sub_1B2999DFC();
      break;
    case 6:
      unint64_t result = sub_1B2DCF088(0x476C61636F6CLL);
      break;
    case 7:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2DC6D78(unsigned __int8 *a1, char *a2)
{
  return sub_1B29AB0C0(*a1, *a2);
}

uint64_t sub_1B2DC6D84()
{
  return sub_1B29AE6D0(*v0);
}

uint64_t sub_1B2DC6D8C(uint64_t a1)
{
  return sub_1B2AA49C0(a1, *v1);
}

uint64_t sub_1B2DC6D94()
{
  return sub_1B29F8D20();
}

IntelligencePlatform::KnosisIndexType_optional sub_1B2DC6D9C(Swift::String *a1)
{
  return KnosisIndexType.init(rawValue:)(*a1);
}

unint64_t sub_1B2DC6DA8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = KnosisIndexType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2DC6DD0()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2DC6E30()
{
  return sub_1B2E82788();
}

void sub_1B2DC6E80(void *a1@<X8>)
{
  *a1 = &unk_1F0AB8638;
}

uint64_t sub_1B2DC6E94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1936159329 && a2 == 0xE400000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x746963696C706D69 && a2 == 0xEB00000000677241;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6465746165706572 && a2 == 0xEB00000000677241;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 7432043 && a2 == 0xE300000000000000;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x7551646573726170 && a2 == 0xEF65646F4E797265;
              if (v11 || (sub_1B2E837A8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0xD000000000000011 && a2 == 0x80000001B2EA3F80 || (sub_1B2E837A8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else if (a1 == 0x656D614E706F76 && a2 == 0xE700000000000000)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else
              {
                char v13 = sub_1B2E837A8();
                swift_bridgeObjectRelease();
                if (v13) {
                  return 8;
                }
                else {
                  return 9;
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1B2DC7258(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 1936159329;
      break;
    case 2:
      unint64_t result = 0x746963696C706D69;
      break;
    case 3:
      unint64_t result = 0x6465746165706572;
      break;
    case 4:
      unint64_t result = 0x7470697263736564;
      break;
    case 5:
      unint64_t result = 7432043;
      break;
    case 6:
      unint64_t result = 0x7551646573726170;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0x656D614E706F76;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1B2DC7378()
{
  sub_1B2B7D848();
  sub_1B29A3EB4(&qword_1E9C44198);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B29A18FC();
  sub_1B2DCD708();
  sub_1B299E584();
  LOBYTE(v4) = 0;
  sub_1B299B138();
  if (!v1)
  {
    uint64_t v4 = *(void *)(v0 + 16);
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2DCD610((uint64_t)&qword_1E9C3F888);
    sub_1B2E836D8();
    LOBYTE(v4) = 2;
    sub_1B299B138();
    LOBYTE(v4) = 3;
    sub_1B2E83698();
    LOBYTE(v4) = 4;
    sub_1B299B138();
    LOBYTE(v4) = 5;
    sub_1B299B138();
    sub_1B29C4020(v0 + 80, (uint64_t)&v6, &qword_1E9C40B78);
    sub_1B29C4020((uint64_t)&v6, (uint64_t)&v4, &qword_1E9C40B78);
    type metadata accessor for QueryNode();
    sub_1B2DCD9B4((uint64_t)&unk_1E9C440E0);
    sub_1B2DCEF8C();
    sub_1B29C4020(v0 + 88, (uint64_t)&v5, &qword_1E9C40B78);
    sub_1B29C4020((uint64_t)&v5, (uint64_t)&v4, &qword_1E9C40B78);
    sub_1B2DCEF8C();
    LOBYTE(v4) = 8;
    sub_1B2E83628();
  }
  sub_1B2AC9CF4();
  v3();
  sub_1B2B7D834();
}

void sub_1B2DC762C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  char v13 = v12;
  uint64_t v15 = v14;
  uint64_t v16 = sub_1B29A3EB4(&qword_1EB7D98B0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v17);
  sub_1B299B3C8();
  uint64_t v18 = v13[3];
  unsigned int v19 = sub_1B29AEC7C(v13, v18);
  sub_1B2DCD708();
  sub_1B2E83A18();
  if (v10)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v13);
    sub_1B2DCF314();
    if (v19)
    {
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0) {
        goto LABEL_6;
      }
    }
    else if (!v18)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v20 = sub_1B299BD94();
  uint64_t v22 = v21;
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2DCD610((uint64_t)&qword_1EB7E2BC8);
  swift_bridgeObjectRetain();
  sub_1B2DCF350();
  sub_1B2E835B8();
  uint64_t v37 = v22;
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_1B299BD94();
  uint64_t v24 = v23;
  swift_bridgeObjectRetain();
  sub_1B2DCF3E0();
  char v35 = sub_1B2E83578();
  uint64_t v33 = sub_1B299BD94();
  uint64_t v34 = v20;
  LOBYTE(a10) = 5;
  uint64_t v26 = v25;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1B299BD94();
  type metadata accessor for QueryNode();
  sub_1B2DCD9B4((uint64_t)&unk_1EB7D9750);
  swift_bridgeObjectRetain();
  sub_1B2DCF23C();
  sub_1B2E83548();
  swift_retain();
  sub_1B2DCF23C();
  sub_1B2E83548();
  swift_retain();
  sub_1B2DCF3E0();
  uint64_t v32 = sub_1B2E83508();
  uint64_t v28 = v27;
  uint64_t v29 = sub_1B29A34B8();
  v30(v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v13);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1B2DCF2E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2DCF0A0();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v15 = v34;
  *(void *)(v15 + 8) = v37;
  *(void *)(v15 + 16) = v11;
  *(void *)(v15 + 24) = v36;
  *(void *)(v15 + 32) = v24;
  *(unsigned char *)(v15 + 40) = v35 & 1;
  *(void *)(v15 + 48) = v33;
  *(void *)(v15 + 56) = v26;
  *(void *)(v15 + 64) = v31;
  *(void *)(v15 + 72) = v16;
  *(void *)(v15 + 80) = a10;
  *(void *)(v15 + 88) = a10;
  *(void *)(v15 + 96) = v32;
  *(void *)(v15 + 104) = v28;
LABEL_7:
  sub_1B29998C8();
}

uint64_t sub_1B2DC7BC0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x726F74617265706FLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2DC7C54()
{
  return 0x726F74617265706FLL;
}

void sub_1B2DC7C70()
{
  sub_1B2B7D848();
  sub_1B2DCF1CC();
  sub_1B29A3EB4(&qword_1E9C44300);
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B29A18FC();
  sub_1B2DCE95C();
  sub_1B299E584();
  sub_1B29A3EB4(&qword_1EB7D9768);
  sub_1B2DCE9A8((uint64_t)&unk_1E9C44308);
  sub_1B2DCEFE4();
  sub_1B2AC9CF4();
  v1();
  sub_1B2DCF2AC();
  sub_1B2B7D834();
}

void sub_1B2DC7D80()
{
  sub_1B2B7D848();
  sub_1B2DCF26C();
  sub_1B29A3EB4(&qword_1EB7D98A8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299EB60();
  sub_1B2DCE95C();
  sub_1B2A99BFC();
  if (v1)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
  }
  else
  {
    sub_1B29A3EB4(&qword_1EB7D9768);
    sub_1B2DCE9A8((uint64_t)&unk_1EB7D9770);
    sub_1B29A1004();
    uint64_t v3 = sub_1B299FCA8();
    v4(v3);
    sub_1B2DCF338();
  }
  sub_1B2DCF10C();
  sub_1B2B7D834();
}

uint64_t sub_1B2DC7E98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6F697469646E6F63 && a2 == 0xEC00000051474B6ELL;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1936159329 && a2 == 0xE400000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 7432043 && a2 == 0xE300000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x7367616C66 && a2 == 0xE500000000000000;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x46747865746E6F63 && a2 == 0xEF73657275746165;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x80000001B2EA3F60 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              BOOL v11 = a1 == 0x674B646573726170 && a2 == 0xE900000000000071;
              if (v11 || (sub_1B2E837A8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else if (a1 == 0x614E746E65746E69 && a2 == 0xEA0000000000656DLL)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else
              {
                char v13 = sub_1B2E837A8();
                swift_bridgeObjectRelease();
                if (v13) {
                  return 8;
                }
                else {
                  return 9;
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1B2DC8240(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F697469646E6F63;
      break;
    case 2:
      unint64_t result = 1936159329;
      break;
    case 3:
      unint64_t result = 7432043;
      break;
    case 4:
      unint64_t result = 0x7367616C66;
      break;
    case 5:
      unint64_t result = 0x46747865746E6F63;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0x674B646573726170;
      break;
    case 8:
      unint64_t result = 0x614E746E65746E69;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1B2DC8360()
{
  sub_1B2B7D848();
  sub_1B29A3EB4(&qword_1E9C44180);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B29A18FC();
  sub_1B2DCD5C4();
  sub_1B299E584();
  LOBYTE(v4) = 0;
  sub_1B299B138();
  if (!v1)
  {
    LOBYTE(v4) = 1;
    sub_1B299B138();
    uint64_t v4 = *(void *)(v0 + 32);
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2DCD610((uint64_t)&qword_1E9C3F888);
    sub_1B2DCF05C();
    LOBYTE(v4) = 3;
    sub_1B299B138();
    uint64_t v4 = *(void *)(v0 + 56);
    sub_1B2DCF05C();
    sub_1B29C4020(v0 + 64, (uint64_t)&v7, &qword_1E9C44188);
    sub_1B29C4020((uint64_t)&v7, (uint64_t)&v4, &qword_1E9C44188);
    sub_1B2DCD6BC();
    sub_1B2E83668();
    sub_1B29C4020(v0 + 72, (uint64_t)&v6, &qword_1E9C40B78);
    sub_1B29C4020((uint64_t)&v6, (uint64_t)&v4, &qword_1E9C40B78);
    type metadata accessor for QueryNode();
    sub_1B2DCD9B4((uint64_t)&unk_1E9C440E0);
    sub_1B2DCEF8C();
    sub_1B29C4020(v0 + 80, (uint64_t)&v5, &qword_1E9C40B78);
    sub_1B29C4020((uint64_t)&v5, (uint64_t)&v4, &qword_1E9C40B78);
    sub_1B2DCEF8C();
    LOBYTE(v4) = 8;
    sub_1B2E83628();
  }
  sub_1B2AC9CF4();
  v3();
  sub_1B2B7D834();
}

void sub_1B2DC8634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  sub_1B29A3EB4(&qword_1EB7D9898);
  sub_1B299D278();
  MEMORY[0x1F4188790](v15);
  sub_1B29A0498();
  sub_1B29AEC7C(v12, v12[3]);
  sub_1B2DCD5C4();
  sub_1B2E83A18();
  if (v10)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
  }
  else
  {
    uint64_t v16 = sub_1B2DCF13C();
    LOBYTE(a10) = 1;
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    uint64_t v33 = v18;
    uint64_t v30 = sub_1B2DCF13C();
    uint64_t v31 = v16;
    uint64_t v20 = v19;
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2DCD610((uint64_t)&qword_1EB7E2BC8);
    uint64_t v32 = v20;
    swift_bridgeObjectRetain();
    sub_1B2DCF350();
    sub_1B2E835B8();
    uint64_t v21 = a10;
    LOBYTE(a10) = 3;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1B2DCF13C();
    uint64_t v23 = v22;
    swift_bridgeObjectRetain();
    sub_1B2DCF350();
    sub_1B2E835B8();
    sub_1B2DCD670();
    swift_bridgeObjectRetain();
    sub_1B2DCF350();
    sub_1B2E83548();
    type metadata accessor for QueryNode();
    sub_1B2DCD9B4((uint64_t)&unk_1EB7D9750);
    swift_bridgeObjectRetain();
    sub_1B2DCF224();
    sub_1B2E83548();
    swift_retain();
    sub_1B2DCF224();
    sub_1B2E83548();
    swift_retain();
    uint64_t v28 = sub_1B2E83508();
    uint64_t v25 = v24;
    uint64_t v26 = sub_1B2DCEF74();
    v27(v26);
    swift_bridgeObjectRetain();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v14 = v31;
    v14[1] = v33;
    v14[2] = v30;
    v14[3] = v32;
    void v14[4] = v21;
    v14[5] = v29;
    v14[6] = v23;
    void v14[7] = a10;
    v14[8] = a10;
    v14[9] = a10;
    v14[10] = a10;
    v14[11] = v28;
    v14[12] = v25;
  }
  sub_1B29998C8();
}

uint64_t sub_1B2DC8CA4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F52746E65746E69 && a2 == 0xEC00000073657475)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2DC8D44()
{
  return 0x6F52746E65746E69;
}

void sub_1B2DC8D64()
{
  sub_1B2B7D848();
  sub_1B29A3EB4(&qword_1E9C441A0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B29A0480();
  sub_1B29A18FC();
  sub_1B2DCD120();
  sub_1B299E584();
  sub_1B29A3EB4(&qword_1EB7D9778);
  sub_1B2DCD754();
  sub_1B2E836D8();
  sub_1B2AC9CF4();
  v1();
  sub_1B2DCF2AC();
  sub_1B2B7D834();
}

void sub_1B2DC8E4C()
{
  sub_1B2B7D848();
  sub_1B2DCF26C();
  sub_1B29A3EB4(&qword_1EB7D98B8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299EB60();
  sub_1B2DCD120();
  sub_1B2A99BFC();
  if (v1)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
  }
  else
  {
    sub_1B29A3EB4(&qword_1EB7D9778);
    sub_1B2DCD16C();
    sub_1B29A1004();
    uint64_t v3 = sub_1B299FCA8();
    v4(v3);
    sub_1B2DCF338();
  }
  sub_1B2DCF10C();
  sub_1B2B7D834();
}

uint64_t sub_1B2DC8F2C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F746172656E6567 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2DC8FC0()
{
  return 0x6F746172656E6567;
}

void sub_1B2DC8FDC()
{
  sub_1B2B7D848();
  sub_1B2DCF1CC();
  sub_1B29A3EB4(&qword_1E9C442E8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B29A18FC();
  sub_1B2DCE818();
  sub_1B299E584();
  sub_1B29A3EB4(&qword_1E9C442D0);
  sub_1B2DCE8B0((uint64_t)&unk_1E9C442F0);
  sub_1B2DCEFE4();
  sub_1B2AC9CF4();
  v1();
  sub_1B2DCF2AC();
  sub_1B2B7D834();
}

void sub_1B2DC90EC()
{
  sub_1B2B7D848();
  sub_1B2DCF26C();
  sub_1B29A3EB4(&qword_1E9C442C0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299EB60();
  sub_1B2DCE818();
  sub_1B2A99BFC();
  if (v1)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
  }
  else
  {
    sub_1B29A3EB4(&qword_1E9C442D0);
    sub_1B2DCE8B0((uint64_t)&unk_1E9C442D8);
    sub_1B29A1004();
    uint64_t v3 = sub_1B299FCA8();
    v4(v3);
    sub_1B2DCF338();
  }
  sub_1B2DCF10C();
  sub_1B2B7D834();
}

uint64_t sub_1B2DC9204(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2DC928C()
{
  return 0x7365727574616566;
}

void sub_1B2DC92A4()
{
  sub_1B2B7D848();
  sub_1B2DCF1CC();
  sub_1B29A3EB4(&qword_1E9C44348);
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B29A18FC();
  sub_1B2DCED60();
  sub_1B299E584();
  sub_1B29A3EB4(&qword_1EB7D94D8);
  sub_1B2DCDA40((uint64_t)&qword_1E9C3A720);
  sub_1B2DCEFE4();
  sub_1B2AC9CF4();
  v1();
  sub_1B2DCF2AC();
  sub_1B2B7D834();
}

void sub_1B2DC93A0()
{
  sub_1B2B7D848();
  sub_1B2DCF26C();
  sub_1B29A3EB4(&qword_1E9C44338);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299EB60();
  sub_1B2DCED60();
  sub_1B2A99BFC();
  if (v1)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
  }
  else
  {
    sub_1B29A3EB4(&qword_1EB7D94D8);
    sub_1B2DCDA40((uint64_t)&qword_1EB7D94E0);
    sub_1B29A1004();
    uint64_t v3 = sub_1B299FCA8();
    v4(v3);
    sub_1B2DCF338();
  }
  sub_1B2DCF10C();
  sub_1B2B7D834();
}

unint64_t sub_1B2DC94A4()
{
  return sub_1B2DC7258(*v0);
}

uint64_t sub_1B2DC94AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DC6E94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DC94D4(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD708();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC9510(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD708();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B2DC954C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  sub_1B2DC762C(a1, a2, a3, a4, a5, a6, a7, a8, v11[0], v11[1]);
  if (!v9) {
    memcpy(a9, v11, 0x70uLL);
  }
}

void sub_1B2DC9598()
{
  memcpy(v1, v0, sizeof(v1));
  sub_1B2DC7378();
}

uint64_t sub_1B2DC95F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DC7BC0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2DC961C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCE95C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC9658(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCE95C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B2DC9694(void *a1@<X8>)
{
  sub_1B2DC7D80();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1B2DC96C0()
{
}

unint64_t sub_1B2DC96DC()
{
  return sub_1B2DC8240(*v0);
}

uint64_t sub_1B2DC96E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DC7E98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DC970C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD5C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC9748(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD5C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B2DC9784(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  sub_1B2DC8634(a1, a2, a3, a4, a5, a6, a7, a8, v11, __src[0]);
  if (!v9) {
    memcpy(a9, __src, 0x68uLL);
  }
}

void sub_1B2DC97D0()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_1B2DC8360();
}

uint64_t sub_1B2DC9828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DC8CA4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2DC9854(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD120();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC9890(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCD120();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B2DC98CC(void *a1@<X8>)
{
  sub_1B2DC8E4C();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1B2DC98F8()
{
}

uint64_t sub_1B2DC9918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DC8F2C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2DC9944(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCE818();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC9980(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCE818();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B2DC99BC(void *a1@<X8>)
{
  sub_1B2DC90EC();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1B2DC99E8()
{
}

uint64_t sub_1B2DC9A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DC9204(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2DC9A34(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCED60();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DC9A70(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCED60();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B2DC9AAC(void *a1@<X8>)
{
  sub_1B2DC93A0();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1B2DC9AD8()
{
}

uint64_t sub_1B2DC9AF4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1B2DCA1B4(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1B29B6998(v3 / 2);
  uint64_t v101 = result;
  uint64_t v102 = v3;
  long long v104 = v6;
  uint64_t v99 = a1;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    unint64_t v41 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_110:
    uint64_t result = v9;
    if (v41 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v102 >= -1)
      {
        *(void *)(v101 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v90 = *v99;
    while (1)
    {
      unint64_t v91 = v41 - 2;
      if (v41 < 2) {
        break;
      }
      if (!v90) {
        goto LABEL_153;
      }
      uint64_t v92 = result;
      uint64_t v93 = *(void *)(result + 32 + 16 * v91);
      uint64_t v94 = *(void *)(result + 32 + 16 * (v41 - 1) + 8);
      uint64_t result = sub_1B2DCA294((char *)(v90 + 24 * v93), (char *)(v90 + 24 * *(void *)(result + 32 + 16 * (v41 - 1))), v90 + 24 * v94, v104);
      if (v1) {
        goto LABEL_106;
      }
      if (v94 < v93) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B2DCA54C();
        uint64_t v92 = result;
      }
      if (v91 >= *(void *)(v92 + 16)) {
        goto LABEL_140;
      }
      uint64_t v95 = (void *)(v92 + 32 + 16 * v91);
      *uint64_t v95 = v93;
      v95[1] = v94;
      unint64_t v96 = *(void *)(v92 + 16);
      if (v41 > v96) {
        goto LABEL_141;
      }
      memmove((void *)(v92 + 32 + 16 * (v41 - 1)), (const void *)(v92 + 32 + 16 * v41), 16 * (v96 - v41));
      uint64_t result = v92;
      *(void *)(v92 + 16) = v96 - 1;
      unint64_t v41 = v96 - 1;
      if (v96 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v100 = v5;
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v97 = *a1 - 24;
  uint64_t v98 = *a1 + 8;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v103 = v8;
  while (1)
  {
    uint64_t v10 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    uint64_t v11 = (uint64_t *)(v8 + 24 * v7);
    uint64_t result = *v11;
    uint64_t v12 = v11[1];
    char v13 = (void *)(v8 + 24 * v10);
    if (result == *v13 && v12 == v13[1])
    {
      uint64_t v16 = v10 + 2;
      if (v10 + 2 >= v102) {
        goto LABEL_31;
      }
      int v15 = 0;
    }
    else
    {
      uint64_t result = sub_1B2E837A8();
      int v15 = result;
      uint64_t v16 = v10 + 2;
      if (v10 + 2 >= v102) {
        goto LABEL_23;
      }
    }
    uint64_t v17 = (void *)(v98 + 24 * v16);
    do
    {
      uint64_t result = *(v17 - 1);
      uint64_t v18 = (void *)(v8 + 24 * v7);
      if (result == *v18 && *v17 == v18[1])
      {
        if (v15) {
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t result = sub_1B2E837A8();
        if ((v15 ^ result)) {
          goto LABEL_23;
        }
      }
      v17 += 3;
      uint64_t v20 = v16 + 1;
      uint64_t v7 = v16;
      uint64_t v16 = v20;
    }
    while (v20 < v102);
    uint64_t v16 = v20;
LABEL_23:
    uint64_t v7 = v16;
    if (v15)
    {
LABEL_24:
      if (v16 < v10) {
        goto LABEL_148;
      }
      if (v10 < v16)
      {
        uint64_t v21 = 24 * v16;
        uint64_t v22 = 24 * v10;
        uint64_t v23 = v16;
        uint64_t v24 = v10;
        do
        {
          if (v24 != --v23)
          {
            if (!v8) {
              goto LABEL_152;
            }
            uint64_t v25 = v8 + v22;
            uint64_t v26 = v8 + v21;
            uint64_t v27 = *(void *)(v8 + v22);
            long long v28 = *(_OWORD *)(v8 + v22 + 8);
            long long v29 = *(_OWORD *)(v8 + v21 - 24);
            *(void *)(v25 + 16) = *(void *)(v8 + v21 - 8);
            *(_OWORD *)uint64_t v25 = v29;
            *(void *)(v26 - 24) = v27;
            *(_OWORD *)(v26 - 16) = v28;
          }
          ++v24;
          v21 -= 24;
          v22 += 24;
        }
        while (v24 < v23);
      }
LABEL_31:
      uint64_t v7 = v16;
    }
LABEL_32:
    if (v7 < v102)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_143;
      }
      if (v7 - v10 < v100)
      {
        if (__OFADD__(v10, v100)) {
          goto LABEL_146;
        }
        if (v10 + v100 >= v102) {
          uint64_t v30 = v102;
        }
        else {
          uint64_t v30 = v10 + v100;
        }
        if (v30 < v10) {
          goto LABEL_147;
        }
        if (v7 != v30)
        {
          uint64_t v31 = v97 + 24 * v7;
          do
          {
            uint64_t v32 = (uint64_t *)(v8 + 24 * v7);
            uint64_t result = *v32;
            uint64_t v33 = v32[1];
            uint64_t v34 = v10;
            uint64_t v35 = v31;
            do
            {
              if (result == *(void *)v35 && v33 == *(void *)(v35 + 8)) {
                break;
              }
              uint64_t result = sub_1B2E837A8();
              if ((result & 1) == 0) {
                break;
              }
              if (!v8) {
                goto LABEL_150;
              }
              long long v37 = *(_OWORD *)(v35 + 32);
              uint64_t v38 = *(void *)(v35 + 16);
              uint64_t result = *(void *)(v35 + 24);
              *(_OWORD *)(v35 + 24) = *(_OWORD *)v35;
              *(void *)(v35 + 40) = v38;
              *(void *)uint64_t v35 = result;
              *(_OWORD *)(v35 + 8) = v37;
              uint64_t v33 = v37;
              v35 -= 24;
              ++v34;
            }
            while (v7 != v34);
            ++v7;
            v31 += 24;
          }
          while (v7 != v30);
          uint64_t v7 = v30;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v40 = *(void *)(v9 + 16);
    unint64_t v39 = *(void *)(v9 + 24);
    unint64_t v41 = v40 + 1;
    if (v40 >= v39 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454((char *)(v39 > 1), v40 + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v41;
    uint64_t v42 = v9 + 32;
    uint64_t v43 = (uint64_t *)(v9 + 32 + 16 * v40);
    *uint64_t v43 = v10;
    v43[1] = v7;
    if (v40) {
      break;
    }
    unint64_t v41 = 1;
    uint64_t v8 = v103;
LABEL_101:
    uint64_t v3 = v102;
    if (v7 >= v102) {
      goto LABEL_110;
    }
  }
  uint64_t v8 = v103;
  while (1)
  {
    unint64_t v44 = v41 - 1;
    if (v41 >= 4)
    {
      unint64_t v49 = v42 + 16 * v41;
      uint64_t v50 = *(void *)(v49 - 64);
      uint64_t v51 = *(void *)(v49 - 56);
      BOOL v55 = __OFSUB__(v51, v50);
      uint64_t v52 = v51 - v50;
      if (v55) {
        goto LABEL_127;
      }
      uint64_t v54 = *(void *)(v49 - 48);
      uint64_t v53 = *(void *)(v49 - 40);
      BOOL v55 = __OFSUB__(v53, v54);
      uint64_t v47 = v53 - v54;
      char v48 = v55;
      if (v55) {
        goto LABEL_128;
      }
      unint64_t v56 = v41 - 2;
      uint64_t v57 = (uint64_t *)(v42 + 16 * (v41 - 2));
      uint64_t v59 = *v57;
      uint64_t v58 = v57[1];
      BOOL v55 = __OFSUB__(v58, v59);
      uint64_t v60 = v58 - v59;
      if (v55) {
        goto LABEL_129;
      }
      BOOL v55 = __OFADD__(v47, v60);
      uint64_t v61 = v47 + v60;
      if (v55) {
        goto LABEL_131;
      }
      if (v61 >= v52)
      {
        uint64_t v79 = (uint64_t *)(v42 + 16 * v44);
        uint64_t v81 = *v79;
        uint64_t v80 = v79[1];
        BOOL v55 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v55) {
          goto LABEL_137;
        }
        BOOL v72 = v47 < v82;
        goto LABEL_90;
      }
    }
    else
    {
      if (v41 != 3)
      {
        uint64_t v73 = *(void *)(v9 + 32);
        uint64_t v74 = *(void *)(v9 + 40);
        BOOL v55 = __OFSUB__(v74, v73);
        uint64_t v66 = v74 - v73;
        char v67 = v55;
        goto LABEL_84;
      }
      uint64_t v46 = *(void *)(v9 + 32);
      uint64_t v45 = *(void *)(v9 + 40);
      BOOL v55 = __OFSUB__(v45, v46);
      uint64_t v47 = v45 - v46;
      char v48 = v55;
    }
    if (v48) {
      goto LABEL_130;
    }
    unint64_t v56 = v41 - 2;
    uint64_t v62 = (uint64_t *)(v42 + 16 * (v41 - 2));
    uint64_t v64 = *v62;
    uint64_t v63 = v62[1];
    BOOL v65 = __OFSUB__(v63, v64);
    uint64_t v66 = v63 - v64;
    char v67 = v65;
    if (v65) {
      goto LABEL_132;
    }
    uint64_t v68 = (uint64_t *)(v42 + 16 * v44);
    uint64_t v70 = *v68;
    uint64_t v69 = v68[1];
    BOOL v55 = __OFSUB__(v69, v70);
    uint64_t v71 = v69 - v70;
    if (v55) {
      goto LABEL_134;
    }
    if (__OFADD__(v66, v71)) {
      goto LABEL_136;
    }
    if (v66 + v71 >= v47)
    {
      BOOL v72 = v47 < v71;
LABEL_90:
      if (v72) {
        unint64_t v44 = v56;
      }
      goto LABEL_92;
    }
LABEL_84:
    if (v67) {
      goto LABEL_133;
    }
    uint64_t v75 = (uint64_t *)(v42 + 16 * v44);
    uint64_t v77 = *v75;
    uint64_t v76 = v75[1];
    BOOL v55 = __OFSUB__(v76, v77);
    uint64_t v78 = v76 - v77;
    if (v55) {
      goto LABEL_135;
    }
    if (v78 < v66) {
      goto LABEL_101;
    }
LABEL_92:
    unint64_t v83 = v44 - 1;
    if (v44 - 1 >= v41)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    uint64_t v84 = v8;
    uint64_t v85 = (uint64_t *)(v42 + 16 * v83);
    uint64_t v86 = *v85;
    uint64_t v87 = (void *)(v42 + 16 * v44);
    uint64_t v88 = v87[1];
    uint64_t result = sub_1B2DCA294((char *)(v84 + 24 * *v85), (char *)(v84 + 24 * *v87), v84 + 24 * v88, v104);
    if (v1) {
      break;
    }
    if (v88 < v86) {
      goto LABEL_124;
    }
    if (v44 > *(void *)(v9 + 16)) {
      goto LABEL_125;
    }
    *uint64_t v85 = v86;
    *(void *)(v42 + 16 * v83 + 8) = v88;
    unint64_t v89 = *(void *)(v9 + 16);
    if (v44 >= v89) {
      goto LABEL_126;
    }
    unint64_t v41 = v89 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v42 + 16 * v44), v87 + 2, 16 * (v89 - 1 - v44));
    *(void *)(v9 + 16) = v89 - 1;
    BOOL v72 = v89 > 2;
    uint64_t v8 = v103;
    if (!v72) {
      goto LABEL_101;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v102 < -1) {
    goto LABEL_145;
  }
  *(void *)(v101 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DCA1B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 24 * a3 - 24;
    while (2)
    {
      uint64_t v9 = (uint64_t *)(v7 + 24 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      uint64_t v12 = v8;
      do
      {
        if (result == *(void *)v12 && v10 == *(void *)(v12 + 8)) {
          break;
        }
        uint64_t result = sub_1B2E837A8();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        long long v14 = *(_OWORD *)(v12 + 32);
        uint64_t v15 = *(void *)(v12 + 16);
        uint64_t result = *(void *)(v12 + 24);
        *(_OWORD *)(v12 + 24) = *(_OWORD *)v12;
        *(void *)(v12 + 40) = v15;
        *(void *)uint64_t v12 = result;
        *(_OWORD *)(v12 + 8) = v14;
        uint64_t v10 = v14;
        v12 -= 24;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 24;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1B2DCA294(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  if (v9 >= v11)
  {
    sub_1B29BDF28(a2, (uint64_t)(a3 - (void)a2) / 24, a4);
    uint64_t v12 = &v4[24 * v11];
    if (v7 >= v6 || v10 < 24) {
      goto LABEL_47;
    }
    unint64_t v19 = a3 - 24;
    while (1)
    {
      uint64_t v20 = (char *)(v19 + 24);
      uint64_t v21 = v12 - 24;
      BOOL v22 = *((void *)v12 - 3) == *((void *)v6 - 3) && *((void *)v12 - 2) == *((void *)v6 - 2);
      if (v22 || (sub_1B2E837A8() & 1) == 0)
      {
        BOOL v24 = v20 != v12 || v19 >= (unint64_t)v12;
        v12 -= 24;
        if (!v24) {
          goto LABEL_43;
        }
      }
      else
      {
        BOOL v23 = v20 != v6 || v19 >= (unint64_t)v6;
        uint64_t v21 = v6 - 24;
        v6 -= 24;
        if (!v23) {
          goto LABEL_43;
        }
      }
      long long v25 = *(_OWORD *)v21;
      *(void *)(v19 + 16) = *((void *)v21 + 2);
      *(_OWORD *)unint64_t v19 = v25;
LABEL_43:
      v19 -= 24;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_47;
      }
    }
  }
  sub_1B29BDF28(a1, (a2 - a1) / 24, a4);
  uint64_t v12 = &v4[24 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (1)
    {
      BOOL v14 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v14 && (sub_1B2E837A8() & 1) != 0) {
        break;
      }
      uint64_t v15 = v4;
      BOOL v14 = v7 == v4;
      v4 += 24;
      if (!v14) {
        goto LABEL_15;
      }
LABEL_16:
      v7 += 24;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_21;
      }
    }
    uint64_t v15 = v6;
    BOOL v14 = v7 == v6;
    v6 += 24;
    if (v14) {
      goto LABEL_16;
    }
LABEL_15:
    long long v16 = *(_OWORD *)v15;
    *((void *)v7 + 2) = *((void *)v15 + 2);
    *(_OWORD *)uint64_t v7 = v16;
    goto LABEL_16;
  }
LABEL_21:
  uint64_t v6 = v7;
LABEL_47:
  sub_1B29BDF28(v4, (v12 - v4) / 24, v6);
  return 1;
}

char *sub_1B2DCA454(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1B29A3EB4(&qword_1E9C440B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1B2DCA54C()
{
  uint64_t v0 = (char *)sub_1B29A4760();
  return sub_1B2DCA454(v0, v1, v2, v3);
}

void sub_1B2DCA55C()
{
}

void sub_1B2DCA570()
{
}

void sub_1B2DCA580()
{
}

void sub_1B2DCA590()
{
}

void sub_1B2DCA5A0()
{
}

void sub_1B2DCA5B0()
{
}

void sub_1B2DCA5C0()
{
}

void sub_1B2DCA5D0()
{
}

void sub_1B2DCA5E0()
{
}

void sub_1B2DCA5F0()
{
}

void sub_1B2DCA600()
{
}

void sub_1B2DCA610()
{
}

void sub_1B2DCA620()
{
}

void sub_1B2DCA630()
{
}

void sub_1B2DCA640()
{
}

void sub_1B2DCA650()
{
}

void sub_1B2DCA660(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  uint64_t v44 = 0;
  int64_t v9 = 0;
  uint64_t v43 = (void *)MEMORY[0x1E4FBC860];
  for (uint64_t i = MEMORY[0x1E4FBC860] + 32; ; i += 88)
  {
    if (!v7) {
      goto LABEL_6;
    }
LABEL_5:
    unint64_t v10 = *(void *)(v7 + 16);
    if (v8 == v10)
    {
LABEL_6:
      while (v5)
      {
        unint64_t v11 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        unint64_t v12 = v11 | (v9 << 6);
LABEL_18:
        uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        unint64_t v8 = 0;
        uint64_t v7 = v17;
        if (v17) {
          goto LABEL_5;
        }
      }
      int64_t v13 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        break;
      }
      if (v13 >= v6)
      {
LABEL_50:
        sub_1B2A47690();
        swift_bridgeObjectRelease();
        unint64_t v31 = v43[3];
        if (v31 < 2) {
          return;
        }
        unint64_t v32 = v31 >> 1;
        BOOL v30 = __OFSUB__(v32, v44);
        uint64_t v33 = v32 - v44;
        if (!v30)
        {
          v43[2] = v33;
          return;
        }
        goto LABEL_58;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v13);
      if (v14)
      {
LABEL_17:
        unint64_t v5 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
        int64_t v9 = v13;
        goto LABEL_18;
      }
      int64_t v15 = v9 + 2;
      if (v9 + 2 >= v6) {
        goto LABEL_50;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v15);
      if (v14)
      {
LABEL_13:
        int64_t v13 = v15;
        goto LABEL_17;
      }
      int64_t v16 = v9 + 3;
      if (v9 + 3 >= v6) {
        goto LABEL_50;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v16);
      if (!v14)
      {
        int64_t v15 = v9 + 4;
        if (v9 + 4 >= v6) {
          goto LABEL_50;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v15);
        if (v14) {
          goto LABEL_13;
        }
        int64_t v16 = v9 + 5;
        if (v9 + 5 >= v6) {
          goto LABEL_50;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v16);
        if (!v14)
        {
          int64_t v15 = v9 + 6;
          if (v9 + 6 >= v6) {
            goto LABEL_50;
          }
          unint64_t v14 = *(void *)(v2 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              int64_t v13 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_57;
              }
              if (v13 >= v6) {
                goto LABEL_50;
              }
              unint64_t v14 = *(void *)(v2 + 8 * v13);
              ++v15;
              if (v14) {
                goto LABEL_17;
              }
            }
          }
          goto LABEL_13;
        }
      }
      int64_t v13 = v16;
      goto LABEL_17;
    }
    if (v8 >= v10) {
      break;
    }
    uint64_t v18 = v7 + 88 * v8;
    uint64_t v19 = *(void *)(v18 + 48);
    uint64_t v20 = *(void *)(v18 + 64);
    uint64_t v35 = *(void *)(v18 + 56);
    uint64_t v36 = *(void *)(v18 + 32);
    uint64_t v38 = *(void *)(v18 + 104);
    uint64_t v39 = *(void *)(v18 + 40);
    long long v40 = *(_OWORD *)(v18 + 88);
    long long v41 = *(_OWORD *)(v18 + 72);
    uint64_t v37 = *(void *)(v18 + 112);
    if (v44)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v21 = v43;
    }
    else
    {
      uint64_t v34 = *(void *)(v18 + 64);
      sub_1B2DCF030();
      if (v23) {
        goto LABEL_59;
      }
      int64_t v24 = v22 & 0xFFFFFFFFFFFFFFFELL;
      if (v24 <= 1) {
        uint64_t v25 = 1;
      }
      else {
        uint64_t v25 = v24;
      }
      sub_1B29A3EB4((uint64_t *)&unk_1E9C3BD50);
      uint64_t v21 = (void *)swift_allocObject();
      uint64_t v26 = (uint64_t)(j__malloc_size(v21) - 32) / 88;
      v21[2] = v25;
      v21[3] = 2 * v26;
      uint64_t v27 = v21 + 4;
      uint64_t v28 = v43[3] >> 1;
      uint64_t i = (uint64_t)&v21[11 * v28 + 4];
      uint64_t v44 = (v26 & 0x7FFFFFFFFFFFFFFFLL) - v28;
      if (v43[2])
      {
        BOOL v29 = v21 < v43 || v27 >= &v43[11 * v28 + 4];
        if (!v29 && v21 == v43)
        {
          uint64_t v20 = v34;
        }
        else
        {
          memmove(v27, v43 + 4, 88 * v28);
          uint64_t v20 = v34;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43[2] = 0;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v20 = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_release();
    }
    BOOL v30 = __OFSUB__(v44--, 1);
    if (v30) {
      goto LABEL_56;
    }
    ++v8;
    *(void *)uint64_t i = v36;
    *(void *)(i + 8) = v39;
    *(void *)(i + 16) = v19;
    *(void *)(i + 24) = v35;
    *(void *)(i + 32) = v20;
    *(_OWORD *)(i + 40) = v41;
    *(_OWORD *)(i + 56) = v40;
    *(void *)(i + 72) = v38;
    *(void *)(i + 80) = v37;
    uint64_t v43 = v21;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
}

void sub_1B2DCAB00()
{
  sub_1B299B720();
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B2E81AF8();
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1B2999940();
  uint64_t v109 = v6;
  MEMORY[0x1F4188790](v7);
  int64_t v9 = (char *)&v86 - v8;
  uint64_t v10 = sub_1B2E81AD8();
  sub_1B299D278();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1B29EFB60(v14, v86);
  uint64_t v110 = sub_1B29A3EB4(&qword_1E9C37E90);
  sub_1B299D278();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  sub_1B2999940();
  uint64_t v107 = v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v86 - v20;
  uint64_t v22 = type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(0);
  MEMORY[0x1F4188790](v22 - 8);
  sub_1B299E4A0();
  uint64_t v25 = v24 - v23;
  uint64_t v111 = v16;
  uint64_t v26 = *(unsigned __int8 *)(v16 + 80);
  sub_1B2DCEAA0(v1, v24 - v23, (void (*)(void))type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  uint64_t v27 = sub_1B2E81B98();
  uint64_t v28 = v25;
  unint64_t v30 = v29;
  uint64_t v31 = v27;
  sub_1B2DCEB00(v28, (void (*)(void))type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  unint64_t v32 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = *(void *)(v31 + 16);
  if (v30 != v106)
  {
    uint64_t v90 = (v26 + 32) & ~v26;
    long long v116 = (char *)(MEMORY[0x1E4FBC860] + v90);
    uint64_t v103 = (void (**)(uint64_t, char *, uint64_t))(v4 + 16);
    uint64_t v104 = v12 + 16;
    uint64_t v102 = (uint64_t (**)(uint64_t, uint64_t))(v4 + 88);
    int v101 = *MEMORY[0x1E4FB4190];
    int v89 = *MEMORY[0x1E4FB4188];
    int v87 = *MEMORY[0x1E4FB4180];
    uint64_t v99 = 1336;
    uint64_t v100 = 162;
    uint64_t v108 = v4 + 8;
    uint64_t v105 = v12;
    uint64_t v95 = v12 + 8;
    uint64_t v88 = v26 | 7;
    uint64_t v97 = v10;
    uint64_t v98 = 2889;
    unint64_t v34 = v30;
    unint64_t v96 = v21;
    uint64_t v35 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v33 = 0;
    uint64_t v92 = v31;
    unint64_t v91 = v30;
    uint64_t v94 = v2;
    uint64_t v93 = v9;
    while (1)
    {
      if ((v30 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
        return;
      }
      if (v34 >= *(void *)(v31 + 16)) {
        goto LABEL_74;
      }
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v105 + 16))(v115, v31+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(void *)(v105 + 72) * v34, v10);
      uint64_t v36 = sub_1B2E81AB8();
      sub_1B2E81AB8();
      sub_1B2E82BB8();
      uint64_t v37 = v109;
      (*v103)(v109, v9, v2);
      int v38 = (*v102)(v37, v2);
      long long v113 = v35;
      unint64_t v114 = v34;
      uint64_t v112 = v33;
      if (v38 == v101)
      {
        if (v100 < 1) {
          goto LABEL_76;
        }
        if (!_Records_GDEntityClass_records) {
          goto LABEL_92;
        }
        sub_1B2DCF32C();
        if (v39 == v40) {
          goto LABEL_77;
        }
        sub_1B2DCF320();
        if (v39 == v40) {
          goto LABEL_78;
        }
        if (!_Records_GDEntityClass_classIds[0]) {
          goto LABEL_93;
        }
        uint64_t v42 = v36;
        char v43 = *v41;
        uint64_t v44 = sub_1B2E82538();
        if (!_Records_GDEntityClass_labels) {
          goto LABEL_94;
        }
        goto LABEL_35;
      }
      if (v38 == v89) {
        break;
      }
      if (v38 == v87)
      {
        if (v100 < 61) {
          goto LABEL_85;
        }
        if (!_Records_GDEntityClass_records) {
          goto LABEL_98;
        }
        sub_1B2DCF32C();
        if (v39 == v40) {
          goto LABEL_87;
        }
        sub_1B2DCF320();
        if (v39 == v40) {
          goto LABEL_89;
        }
        if (!_Records_GDEntityClass_classIds[0]) {
          goto LABEL_99;
        }
        uint64_t v42 = v36;
        char v43 = *(unsigned char *)(v47 + 1440);
        uint64_t v44 = sub_1B2E82538();
        if (!_Records_GDEntityClass_labels) {
          goto LABEL_100;
        }
LABEL_35:
        uint64_t v48 = v44;
        uint64_t v49 = v45;
        uint64_t v50 = sub_1B2E82538();
        uint64_t v52 = v51;
        goto LABEL_36;
      }
      if (v100 < 1) {
        goto LABEL_86;
      }
      if (!_Records_GDEntityClass_records) {
        goto LABEL_101;
      }
      sub_1B2DCF32C();
      if (v39 == v40) {
        goto LABEL_88;
      }
      sub_1B2DCF320();
      if (v39 == v40) {
        goto LABEL_90;
      }
      if (!_Records_GDEntityClass_classIds[0]) {
        goto LABEL_102;
      }
      uint64_t v42 = v36;
      char v43 = *v76;
      uint64_t v77 = sub_1B2E82538();
      if (!_Records_GDEntityClass_labels) {
        goto LABEL_103;
      }
      uint64_t v48 = v77;
      uint64_t v49 = v78;
      uint64_t v50 = sub_1B2E82538();
      uint64_t v52 = v79;
      sub_1B299B798();
      v80();
LABEL_36:
      sub_1B299B798();
      v53();
      uint64_t v54 = sub_1B2E81AA8();
      type metadata accessor for VisualUnderstandingService.ObservationSequence();
      BOOL v55 = (void *)swift_allocObject();
      v55[5] = &unk_1F0AD6BC8;
      v55[6] = sub_1B2A4A558();
      v55[2] = v54;
      v55[3] = 0;
      uint64_t v56 = (uint64_t)v107;
      uint64_t v57 = *(int *)(v110 + 80);
      *uint64_t v107 = v42;
      *(void *)(v56 + 8) = v48;
      *(void *)(v56 + 16) = v49;
      *(void *)(v56 + 24) = v50;
      *(void *)(v56 + 32) = v52;
      *(unsigned char *)(v56 + 40) = v43;
      sub_1B2E81AC8();
      uint64_t v10 = v97;
      sub_1B299B798();
      v58();
      *(void *)(v56 + v57) = v55;
      uint64_t v59 = (uint64_t)v96;
      sub_1B29C4020(v56, (uint64_t)v96, &qword_1E9C37E90);
      uint64_t v60 = v112;
      if (v112)
      {
        unint64_t v32 = v113;
        unint64_t v61 = v114;
        uint64_t v2 = v94;
      }
      else
      {
        uint64_t v62 = v113;
        unint64_t v61 = v114;
        sub_1B2DCF030();
        if (v39) {
          goto LABEL_79;
        }
        int64_t v64 = v63 & 0xFFFFFFFFFFFFFFFELL;
        if (v64 <= 1) {
          uint64_t v65 = 1;
        }
        else {
          uint64_t v65 = v64;
        }
        sub_1B29A3EB4(&qword_1E9C44208);
        uint64_t v66 = *(void *)(v111 + 72);
        uint64_t v67 = v90;
        unint64_t v32 = (char *)swift_allocObject();
        size_t v68 = j__malloc_size(v32);
        if (!v66) {
          goto LABEL_80;
        }
        int64_t v69 = v68 - v67;
        if (v68 - v67 == 0x8000000000000000 && v66 == -1) {
          goto LABEL_84;
        }
        uint64_t v71 = v69 / v66;
        *((void *)v32 + 2) = v65;
        *((void *)v32 + 3) = 2 * (v69 / v66);
        BOOL v72 = &v32[v67];
        unint64_t v73 = *((void *)v62 + 3);
        uint64_t v74 = (v73 >> 1) * v66;
        uint64_t v2 = v94;
        if (*((void *)v62 + 2))
        {
          if (v32 < v62 || v72 >= &v62[v90 + v74])
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v32 != v62)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          *((void *)v62 + 2) = 0;
        }
        long long v116 = &v72[v74];
        uint64_t v60 = (v71 & 0x7FFFFFFFFFFFFFFFLL) - (v73 >> 1);
        swift_release();
      }
      uint64_t v31 = v92;
      unint64_t v30 = v91;
      BOOL v40 = __OFSUB__(v60, 1);
      uint64_t v33 = v60 - 1;
      int64_t v9 = v93;
      if (v40) {
        goto LABEL_75;
      }
      unint64_t v34 = v61 + 1;
      uint64_t v81 = v59;
      uint64_t v82 = (uint64_t)v116;
      sub_1B29C4020(v81, (uint64_t)v116, &qword_1E9C37E90);
      long long v116 = (char *)(v82 + *(void *)(v111 + 72));
      uint64_t v35 = v32;
      if (v106 == v34) {
        goto LABEL_69;
      }
    }
    if (v100 < 27) {
      goto LABEL_81;
    }
    if (!_Records_GDEntityClass_records) {
      goto LABEL_95;
    }
    sub_1B2DCF32C();
    if (v39 == v40) {
      goto LABEL_82;
    }
    sub_1B2DCF320();
    if (v39 == v40) {
      goto LABEL_83;
    }
    if (!_Records_GDEntityClass_classIds[0]) {
      goto LABEL_96;
    }
    uint64_t v42 = v36;
    char v43 = *(unsigned char *)(v46 + 624);
    uint64_t v44 = sub_1B2E82538();
    if (!_Records_GDEntityClass_labels) {
      goto LABEL_97;
    }
    goto LABEL_35;
  }
  uint64_t v33 = 0;
LABEL_69:
  swift_bridgeObjectRelease();
  unint64_t v83 = *((void *)v32 + 3);
  if (v83 >= 2)
  {
    unint64_t v84 = v83 >> 1;
    BOOL v40 = __OFSUB__(v84, v33);
    unint64_t v85 = v84 - v33;
    if (v40) {
      goto LABEL_91;
    }
    *((void *)v32 + 2) = v85;
  }
  sub_1B299B738();
}

void sub_1B2DCB350(uint64_t a1)
{
  uint64_t v3 = a1 + 16;
  swift_retain();
  uint64_t v4 = 0;
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  for (uint64_t i = (void *)(MEMORY[0x1E4FBC860] + 32); ; i += 2)
  {
    sub_1B29A0E20();
    sub_1B2A49CD8(v3, *(void *)(a1 + 40));
    sub_1B2C6FC48();
    sub_1B2E82FA8();
    swift_endAccess();
    if (v19) {
      break;
    }
    if (!v4)
    {
      sub_1B2DCF030();
      if (v7) {
        goto LABEL_21;
      }
      sub_1B2DCF1F8();
      sub_1B29A3EB4((uint64_t *)&unk_1E9C39940);
      uint64_t v8 = (void *)swift_allocObject();
      uint64_t v9 = (uint64_t)(j__malloc_size(v8) - 32) / 16;
      uint64_t v8[2] = v1;
      v8[3] = 2 * v9;
      unint64_t v10 = (unint64_t)(v8 + 4);
      unint64_t v1 = v5[3];
      unint64_t v11 = v1 >> 1;
      if (v5[2])
      {
        if (v8 != v5 || v10 >= (unint64_t)&v5[2 * v11 + 4]) {
          memmove(v8 + 4, v5 + 4, 16 * v11);
        }
        void v5[2] = 0;
      }
      uint64_t i = (void *)(v10 + 16 * v11);
      uint64_t v4 = (v9 & 0x7FFFFFFFFFFFFFFFLL) - (v1 >> 1);
      swift_release();
      uint64_t v5 = v8;
    }
    BOOL v13 = __OFSUB__(v4--, 1);
    if (v13)
    {
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    *uint64_t i = v17;
    i[1] = v18;
  }
  swift_release();
  unint64_t v14 = v5[3];
  if (v14 < 2) {
    return;
  }
  unint64_t v15 = v14 >> 1;
  BOOL v13 = __OFSUB__(v15, v4);
  unint64_t v16 = v15 - v4;
  if (!v13)
  {
    void v5[2] = v16;
    return;
  }
LABEL_22:
  __break(1u);
}

void sub_1B2DCB4E0()
{
  sub_1B299B720();
  swift_retain();
  uint64_t v0 = sub_1B2E1E660();
  unint64_t v1 = (void *)MEMORY[0x1E4FBC860];
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = v0;
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
    while (1)
    {
      if (!v4)
      {
        sub_1B2DCF030();
        if (v7) {
          goto LABEL_26;
        }
        int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
        if (v8 <= 1) {
          uint64_t v9 = 1;
        }
        else {
          uint64_t v9 = v8;
        }
        sub_1B29A3EB4(&qword_1EB7E56F0);
        unint64_t v10 = (void *)swift_allocObject();
        uint64_t v11 = (uint64_t)(j__malloc_size(v10) - 32) / 8;
        void v10[2] = v9;
        void v10[3] = 2 * v11;
        unint64_t v12 = (unint64_t)(v10 + 4);
        unint64_t v13 = v1[3];
        unint64_t v14 = v13 >> 1;
        if (v1[2])
        {
          if (v10 != v1 || v12 >= (unint64_t)&v1[v14 + 4]) {
            memmove(v10 + 4, v1 + 4, 8 * v14);
          }
          v1[2] = 0;
        }
        uint64_t v5 = (uint64_t *)(v12 + 8 * v14);
        uint64_t v4 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - (v13 >> 1);
        swift_release();
        unint64_t v1 = v10;
      }
      BOOL v16 = __OFSUB__(v4--, 1);
      if (v16) {
        break;
      }
      *v5++ = v3;
      uint64_t v3 = sub_1B2E1E660();
      if (v17) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v4 = 0;
LABEL_21:
  swift_release();
  unint64_t v18 = v1[3];
  if (v18 < 2)
  {
LABEL_24:
    sub_1B299B738();
    return;
  }
  unint64_t v19 = v18 >> 1;
  BOOL v16 = __OFSUB__(v19, v4);
  unint64_t v20 = v19 - v4;
  if (!v16)
  {
    v1[2] = v20;
    goto LABEL_24;
  }
LABEL_27:
  __break(1u);
}

void sub_1B2DCB628()
{
  sub_1B299B720();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C37E98);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1B29A2B5C();
  uint64_t v27 = sub_1B29A3EB4(&qword_1E9C37E90);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B3C8();
  sub_1B2DCF3B8();
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v8 = MEMORY[0x1E4FBC860] + v7;
  uint64_t v26 = v7;
  swift_retain();
  uint64_t v9 = 0;
  while (1)
  {
    sub_1B29A0E20();
    uint64_t v10 = *(void *)(v3 + 64);
    sub_1B2A49CD8(v3 + 32, *(void *)(v3 + 56));
    sub_1B2E82FA8();
    swift_endAccess();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v0, 1, v27) == 1)
    {
      swift_release();
      sub_1B2A0EA40(v0, &qword_1E9C37E98);
      unint64_t v23 = v6[3];
      if (v23 >= 2)
      {
        unint64_t v24 = v23 >> 1;
        BOOL v22 = __OFSUB__(v24, v9);
        unint64_t v25 = v24 - v9;
        if (v22) {
          goto LABEL_32;
        }
        uint64_t v6[2] = v25;
      }
      sub_1B299B738();
      return;
    }
    sub_1B29C4020(v0, v1, &qword_1E9C37E90);
    if (v9)
    {
      uint64_t v11 = v6;
    }
    else
    {
      sub_1B2DCF030();
      if (v12) {
        goto LABEL_29;
      }
      sub_1B2DCF1F8();
      sub_1B29A3EB4(&qword_1E9C44208);
      uint64_t v13 = *(void *)(v28 + 72);
      uint64_t v11 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v11);
      if (!v13) {
        goto LABEL_30;
      }
      uint64_t v15 = v14 - v26;
      if (v14 - v26 == 0x8000000000000000 && v13 == -1) {
        goto LABEL_31;
      }
      uint64_t v17 = v15 / v13;
      id v11[2] = v10;
      v11[3] = 2 * (v15 / v13);
      unint64_t v18 = (char *)v11 + v26;
      unint64_t v19 = v6[3];
      uint64_t v20 = (v19 >> 1) * v13;
      if (v6[2])
      {
        if (v11 < v6 || v18 >= (char *)v6 + v26 + v20)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v11 != v6)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v6[2] = 0;
      }
      uint64_t v8 = (uint64_t)&v18[v20];
      uint64_t v9 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - (v19 >> 1);
      swift_release();
    }
    BOOL v22 = __OFSUB__(v9--, 1);
    if (v22) {
      break;
    }
    sub_1B29C4020(v1, v8, &qword_1E9C37E90);
    v8 += *(void *)(v28 + 72);
    uint64_t v6 = v11;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

void sub_1B2DCB8B4()
{
  sub_1B299B720();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C381F0);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1B29A2B5C();
  uint64_t v26 = type metadata accessor for VisualUnderstandingService.MappingChange(0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29A0480();
  sub_1B2DCF3B8();
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v8 = MEMORY[0x1E4FBC860] + v7;
  uint64_t v25 = v7;
  swift_retain();
  uint64_t v9 = 0;
  while (1)
  {
    sub_1B29A0E20();
    sub_1B2A49CD8(v3 + 32, *(void *)(v3 + 56));
    sub_1B2E82FA8();
    swift_endAccess();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v0, 1, v26) == 1)
    {
      swift_release();
      sub_1B2A0EA40(v0, &qword_1E9C381F0);
      unint64_t v22 = v6[3];
      if (v22 >= 2)
      {
        unint64_t v23 = v22 >> 1;
        BOOL v21 = __OFSUB__(v23, v9);
        unint64_t v24 = v23 - v9;
        if (v21) {
          goto LABEL_32;
        }
        uint64_t v6[2] = v24;
      }
      sub_1B299B738();
      return;
    }
    sub_1B2DCDAA0(v0, v1);
    if (v9)
    {
      uint64_t v10 = v6;
    }
    else
    {
      sub_1B2DCF030();
      if (v11) {
        goto LABEL_29;
      }
      sub_1B2DCF1F8();
      sub_1B29A3EB4(&qword_1E9C44200);
      uint64_t v12 = *(void *)(v27 + 72);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v13 = j__malloc_size(v10);
      if (!v12) {
        goto LABEL_30;
      }
      uint64_t v14 = v13 - v25;
      if (v13 - v25 == 0x8000000000000000 && v12 == -1) {
        goto LABEL_31;
      }
      uint64_t v16 = v14 / v12;
      void v10[2] = 0;
      void v10[3] = 2 * (v14 / v12);
      uint64_t v17 = (char *)v10 + v25;
      unint64_t v18 = v6[3];
      uint64_t v19 = (v18 >> 1) * v12;
      if (v6[2])
      {
        if (v10 < v6 || v17 >= (char *)v6 + v25 + v19)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v10 != v6)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v6[2] = 0;
      }
      uint64_t v8 = (uint64_t)&v17[v19];
      uint64_t v9 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - (v18 >> 1);
      swift_release();
    }
    BOOL v21 = __OFSUB__(v9--, 1);
    if (v21) {
      break;
    }
    sub_1B2DCDAA0(v1, v8);
    v8 += *(void *)(v27 + 72);
    uint64_t v6 = v10;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

void sub_1B2DCBB2C()
{
  uint64_t v0 = type metadata accessor for AnswerRenderIterator(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v1);
  sub_1B299E4A0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = sub_1B2999874();
  sub_1B2DCEAA0(v5, v6, v7);
  uint64_t v8 = *(int *)(v0 + 24);
  uint64_t v9 = *(void *)(*(void *)(v4 + v8) + 16);
  long long v41 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v10 = 0;
  if (v9)
  {
    uint64_t v36 = v0;
    uint64_t v37 = *(int *)(v0 + 24);
    uint64_t v11 = v4 + *(int *)(v0 + 32);
    uint64_t v12 = MEMORY[0x1E4FBC860] + 32;
    uint64_t v38 = v4;
    uint64_t v40 = v11;
    while ((*(unsigned char *)(v11 + 8) & 1) == 0)
    {
      uint64_t v14 = *(void *)v11;
      if (*(void *)v11 >= v9 - 1) {
        goto LABEL_35;
      }
      *(unsigned char *)(v11 + 8) = 0;
      uint64_t v13 = v14 + 1;
      *(void *)uint64_t v11 = v14 + 1;
      if (v14 == -1)
      {
        uint64_t v13 = 0;
        goto LABEL_11;
      }
      uint64_t v15 = *(void *)(v4 + *(int *)(v36 + 28));
      if (v15 == -1 || v15 && !(v13 % v15)) {
        goto LABEL_11;
      }
LABEL_12:
      if (v13 < 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      uint64_t v16 = *(void *)(v4 + v8);
      if ((unint64_t)v13 >= *(void *)(v16 + 16)) {
        goto LABEL_40;
      }
      uint64_t v17 = v16 + 112 * v13;
      uint64_t v18 = *(void *)(v17 + 104);
      uint64_t v19 = *(void *)(v17 + 112);
      uint64_t v20 = *(void *)(v17 + 120);
      char v42 = *(unsigned char *)(v17 + 128);
      uint64_t v21 = *(void *)(v17 + 136);
      long long v51 = *(_OWORD *)(v17 + 80);
      uint64_t v49 = *(void *)(v17 + 40);
      uint64_t v50 = *(void *)(v17 + 32);
      uint64_t v47 = *(void *)(v17 + 56);
      uint64_t v48 = *(void *)(v17 + 48);
      char v45 = *(unsigned char *)(v17 + 66);
      __int16 v46 = *(_WORD *)(v17 + 64);
      uint64_t v43 = *(void *)(v17 + 72);
      uint64_t v44 = *(void *)(v17 + 96);
      if (v10)
      {
        sub_1B29C5A24(*(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned __int16 *)(v17 + 64), *(unsigned char *)(v17 + 66));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v22 = v21;
        goto LABEL_31;
      }
      uint64_t v39 = *(void *)(v17 + 136);
      sub_1B2DCF030();
      if (v24) {
        goto LABEL_42;
      }
      int64_t v25 = v23 & 0xFFFFFFFFFFFFFFFELL;
      if (v25 <= 1) {
        uint64_t v26 = 1;
      }
      else {
        uint64_t v26 = v25;
      }
      sub_1B29A3EB4(&qword_1E9C39F90);
      uint64_t v27 = (void *)swift_allocObject();
      uint64_t v28 = (uint64_t)(j__malloc_size(v27) - 32) / 112;
      uint64_t v27[2] = v26;
      v27[3] = 2 * v28;
      uint64_t v29 = v41[3] >> 1;
      uint64_t v12 = (uint64_t)&v27[14 * v29 + 4];
      uint64_t v10 = (v28 & 0x7FFFFFFFFFFFFFFFLL) - v29;
      if (!v41[2])
      {
        sub_1B2DCF208();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v22 = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_release();
        long long v41 = v27;
        uint64_t v8 = v37;
        uint64_t v4 = v38;
        goto LABEL_31;
      }
      if (v27 < v41 || v27 + 4 >= &v41[14 * v29 + 4])
      {
        sub_1B2DCF208();
      }
      else
      {
        sub_1B2DCF208();
        if (v27 == v41)
        {
          uint64_t v31 = v37;
          goto LABEL_30;
        }
      }
      uint64_t v31 = v37;
      memmove(v27 + 4, v41 + 4, 112 * v29);
LABEL_30:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41[2] = 0;
      swift_release();
      long long v41 = v27;
      uint64_t v4 = v38;
      uint64_t v8 = v31;
      uint64_t v22 = v39;
LABEL_31:
      BOOL v32 = __OFSUB__(v10--, 1);
      if (v32) {
        goto LABEL_41;
      }
      *(void *)uint64_t v12 = v50;
      *(void *)(v12 + 8) = v49;
      *(void *)(v12 + 16) = v48;
      *(void *)(v12 + 24) = v47;
      *(_WORD *)(v12 + 32) = v46;
      *(unsigned char *)(v12 + 34) = v45;
      *(void *)(v12 + 40) = v43;
      *(_OWORD *)(v12 + 48) = v51;
      *(void *)(v12 + 64) = v44;
      *(void *)(v12 + 72) = v18;
      *(void *)(v12 + 80) = v19;
      *(void *)(v12 + 88) = v20;
      *(unsigned char *)(v12 + 96) = v42;
      *(void *)(v12 + 104) = v22;
      v12 += 112;
      uint64_t v9 = *(void *)(v16 + 16);
      uint64_t v11 = v40;
      if (!v9) {
        goto LABEL_35;
      }
    }
    uint64_t v13 = 0;
    *(void *)uint64_t v11 = 0;
    *(unsigned char *)(v11 + 8) = 0;
LABEL_11:
    sub_1B2D90F8C();
    goto LABEL_12;
  }
LABEL_35:
  sub_1B2DCEB00(v4, (void (*)(void))type metadata accessor for AnswerRenderIterator);
  unint64_t v33 = v41[3];
  if (v33 >= 2)
  {
    unint64_t v34 = v33 >> 1;
    BOOL v32 = __OFSUB__(v34, v10);
    uint64_t v35 = v34 - v10;
    if (v32) {
      goto LABEL_43;
    }
    v41[2] = v35;
  }
}

void sub_1B2DCBF64(uint64_t a1)
{
  swift_bridgeObjectRetain();
  unint64_t v2 = 0;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v7 = (void *)(MEMORY[0x1E4FBC860] + 32);
  while (1)
  {
    while (v3)
    {
      unint64_t v8 = *(void *)(v3 + 16);
      if (v2 == v8) {
        break;
      }
      if (v2 >= v8) {
        goto LABEL_31;
      }
      uint64_t v11 = (void *)(v3 + 40 * v2);
      uint64_t v12 = v11[4];
      uint64_t v13 = v11[5];
      uint64_t v14 = v11[7];
      uint64_t v28 = v11[8];
      uint64_t v29 = v11[6];
      if (v4)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = v6;
      }
      else
      {
        sub_1B2DCF030();
        if (v17) {
          goto LABEL_34;
        }
        int64_t v18 = v16 & 0xFFFFFFFFFFFFFFFELL;
        if (v18 <= 1) {
          uint64_t v19 = 1;
        }
        else {
          uint64_t v19 = v18;
        }
        sub_1B29A3EB4(&qword_1E9C3A160);
        uint64_t v15 = (void *)swift_allocObject();
        uint64_t v20 = (uint64_t)(j__malloc_size(v15) - 32) / 40;
        v15[2] = v19;
        v15[3] = 2 * v20;
        uint64_t v21 = v15 + 4;
        uint64_t v22 = v6[3] >> 1;
        uint64_t v7 = &v15[5 * v22 + 4];
        uint64_t v4 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
        if (v6[2])
        {
          if (v15 != v6 || v21 >= &v6[5 * v22 + 4]) {
            memmove(v21, v6 + 4, 40 * v22);
          }
          swift_bridgeObjectRetain();
          uint64_t v6[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        swift_release();
      }
      BOOL v24 = __OFSUB__(v4--, 1);
      if (v24) {
        goto LABEL_32;
      }
      ++v2;
      *uint64_t v7 = v12;
      v7[1] = v13;
      v7[2] = v29;
      v7[3] = v14;
      v7[4] = v28;
      v7 += 5;
      uint64_t v6 = v15;
    }
    unint64_t v9 = *(void *)(a1 + 16);
    if (v5 == v9) {
      break;
    }
    if (v5 >= v9)
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v10 = *(void *)(a1 + 8 * v5 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v2 = 0;
    uint64_t v3 = v10;
    ++v5;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v25 = v6[3];
  if (v25 < 2) {
    return;
  }
  unint64_t v26 = v25 >> 1;
  BOOL v24 = __OFSUB__(v26, v4);
  uint64_t v27 = v26 - v4;
  if (!v24)
  {
    uint64_t v6[2] = v27;
    return;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

unint64_t sub_1B2DCC188()
{
  unint64_t result = qword_1E9C44058;
  if (!qword_1E9C44058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44058);
  }
  return result;
}

unint64_t sub_1B2DCC1D4()
{
  unint64_t result = qword_1E9C44068;
  if (!qword_1E9C44068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44068);
  }
  return result;
}

unint64_t sub_1B2DCC224()
{
  unint64_t result = qword_1E9C44070;
  if (!qword_1E9C44070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44070);
  }
  return result;
}

unint64_t sub_1B2DCC274()
{
  unint64_t result = qword_1E9C44078;
  if (!qword_1E9C44078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44078);
  }
  return result;
}

unint64_t sub_1B2DCC2C4()
{
  unint64_t result = qword_1EB7D8808;
  if (!qword_1EB7D8808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8808);
  }
  return result;
}

unint64_t sub_1B2DCC310()
{
  return sub_1B2C19524((uint64_t)&unk_1E9C44080);
}

uint64_t destroy for KnosisInternalFact()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KnosisInternalFact(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for KnosisInternalFact(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for KnosisInternalFact(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for KnosisInternalFact()
{
}

void type metadata accessor for KnosisQueryArg()
{
}

uint64_t type metadata accessor for QueryTree()
{
  return self;
}

uint64_t type metadata accessor for QueryNode()
{
  return self;
}

uint64_t type metadata accessor for KnosisQueryParam()
{
  return self;
}

void type metadata accessor for KnosisIndexType()
{
}

void type metadata accessor for KnosisQueryParam.ParamType()
{
}

uint64_t sub_1B2DCC658(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2DCC6A0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t sub_1B2DCC718(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

void type metadata accessor for KnosisInternalEntity()
{
}

uint64_t sub_1B2DCC77C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_1B2DCC7F0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1B2DCC8B0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1B2DCC9D8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t sub_1B2DCC9E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2DCCA90(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2DCCAD0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for IntentRoute()
{
}

uint64_t sub_1B2DCCB34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DCCBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2DCCC58(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2DCCD78(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2DCCE28(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2DCCE68(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for Operator()
{
}

unsigned char *storeEnumTagSinglePayload for KnosisInternalFact.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DCCF9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KnosisInternalFact.CodingKeys()
{
  return &type metadata for KnosisInternalFact.CodingKeys;
}

void type metadata accessor for IntentMap()
{
}

unint64_t sub_1B2DCCFE4()
{
  unint64_t result = qword_1E9C44090;
  if (!qword_1E9C44090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44090);
  }
  return result;
}

unint64_t sub_1B2DCD034()
{
  unint64_t result = qword_1E9C44098;
  if (!qword_1E9C44098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44098);
  }
  return result;
}

unint64_t sub_1B2DCD084()
{
  unint64_t result = qword_1E9C440A0;
  if (!qword_1E9C440A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C440A0);
  }
  return result;
}

unint64_t sub_1B2DCD0D4()
{
  unint64_t result = qword_1E9C440A8;
  if (!qword_1E9C440A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C440A8);
  }
  return result;
}

unint64_t sub_1B2DCD120()
{
  unint64_t result = qword_1EB7D9730;
  if (!qword_1EB7D9730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9730);
  }
  return result;
}

unint64_t sub_1B2DCD16C()
{
  unint64_t result = qword_1EB7D9780;
  if (!qword_1EB7D9780)
  {
    sub_1B29C3588(&qword_1EB7D9778);
    sub_1B2DCD808((uint64_t)&unk_1EB7D97A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9780);
  }
  return result;
}

unint64_t sub_1B2DCD220()
{
  unint64_t result = qword_1EB7D95D0;
  if (!qword_1EB7D95D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D95D0);
  }
  return result;
}

unint64_t sub_1B2DCD26C()
{
  unint64_t result = qword_1E9C440C0;
  if (!qword_1E9C440C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C440C0);
  }
  return result;
}

unint64_t sub_1B2DCD2B8()
{
  unint64_t result = qword_1E9C440D0;
  if (!qword_1E9C440D0)
  {
    sub_1B29C3588(&qword_1E9C440C8);
    sub_1B2DCD9B4((uint64_t)&unk_1E9C440D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C440D0);
  }
  return result;
}

unint64_t sub_1B2DCD364()
{
  unint64_t result = qword_1E9C440E8;
  if (!qword_1E9C440E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C440E8);
  }
  return result;
}

unint64_t sub_1B2DCD3B0()
{
  unint64_t result = qword_1E9C440F8;
  if (!qword_1E9C440F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C440F8);
  }
  return result;
}

unint64_t sub_1B2DCD3FC()
{
  unint64_t result = qword_1E9C44100;
  if (!qword_1E9C44100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44100);
  }
  return result;
}

unint64_t sub_1B2DCD448()
{
  unint64_t result = qword_1E9C44130;
  if (!qword_1E9C44130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44130);
  }
  return result;
}

unint64_t sub_1B2DCD494()
{
  unint64_t result = qword_1E9C44138;
  if (!qword_1E9C44138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44138);
  }
  return result;
}

unint64_t sub_1B2DCD4E0()
{
  unint64_t result = qword_1E9C44140;
  if (!qword_1E9C44140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44140);
  }
  return result;
}

unint64_t sub_1B2DCD52C()
{
  unint64_t result = qword_1E9C44148;
  if (!qword_1E9C44148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44148);
  }
  return result;
}

unint64_t sub_1B2DCD578()
{
  unint64_t result = qword_1E9C44150;
  if (!qword_1E9C44150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44150);
  }
  return result;
}

unint64_t sub_1B2DCD5C4()
{
  unint64_t result = qword_1EB7D95B8;
  if (!qword_1EB7D95B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D95B8);
  }
  return result;
}

unint64_t sub_1B2DCD610(uint64_t a1)
{
  unint64_t result = sub_1B2ACA11C(a1);
  if (!result)
  {
    sub_1B29C3588(&qword_1EB7E3B30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1B2DCD670()
{
  unint64_t result = qword_1EB7D96D8;
  if (!qword_1EB7D96D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D96D8);
  }
  return result;
}

unint64_t sub_1B2DCD6BC()
{
  unint64_t result = qword_1E9C44190;
  if (!qword_1E9C44190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44190);
  }
  return result;
}

unint64_t sub_1B2DCD708()
{
  unint64_t result = qword_1EB7D9700;
  if (!qword_1EB7D9700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9700);
  }
  return result;
}

unint64_t sub_1B2DCD754()
{
  unint64_t result = qword_1E9C441A8;
  if (!qword_1E9C441A8)
  {
    sub_1B29C3588(&qword_1EB7D9778);
    sub_1B2DCD808((uint64_t)&unk_1E9C441B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C441A8);
  }
  return result;
}

unint64_t sub_1B2DCD808(uint64_t a1)
{
  unint64_t result = sub_1B2ACA11C(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_1B29C3588(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1B2DCD870()
{
  unint64_t result = qword_1E9C441B8;
  if (!qword_1E9C441B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C441B8);
  }
  return result;
}

unint64_t sub_1B2DCD8BC()
{
  unint64_t result = qword_1E9C441D0;
  if (!qword_1E9C441D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C441D0);
  }
  return result;
}

unint64_t sub_1B2DCD908()
{
  unint64_t result = qword_1E9C441E0;
  if (!qword_1E9C441E0)
  {
    sub_1B29C3588(&qword_1E9C440C8);
    sub_1B2DCD9B4((uint64_t)&unk_1E9C441E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C441E0);
  }
  return result;
}

unint64_t sub_1B2DCD9B4(uint64_t a1)
{
  unint64_t result = sub_1B2ACA11C(a1);
  if (!result)
  {
    v3();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1B2DCD9F4()
{
  unint64_t result = qword_1E9C441F0;
  if (!qword_1E9C441F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C441F0);
  }
  return result;
}

unint64_t sub_1B2DCDA40(uint64_t a1)
{
  unint64_t result = sub_1B2ACA11C(a1);
  if (!result)
  {
    sub_1B29C3588(&qword_1EB7D94D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1B2DCDAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisualUnderstandingService.MappingChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B2DCDB04()
{
  unint64_t result = qword_1E9C44210;
  if (!qword_1E9C44210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44210);
  }
  return result;
}

unint64_t sub_1B2DCDB50()
{
  unint64_t result = qword_1E9C44218;
  if (!qword_1E9C44218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44218);
  }
  return result;
}

void type metadata accessor for VirtualOperators()
{
}

ValueMetadata *type metadata accessor for Operator.CodingKeys()
{
  return &type metadata for Operator.CodingKeys;
}

unsigned char *_s20IntelligencePlatform15KnosisIndexTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1B2ABB6B0((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1B2ABB698((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DCDC74);
      case 4:
        unint64_t result = (unsigned char *)sub_1B2ABB6A0((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_1B2ABB6A8(result, a2 + 8);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentRoute.CodingKeys()
{
  return &type metadata for IntentRoute.CodingKeys;
}

unsigned char *_s20IntelligencePlatform16KnosisQueryParamC9ParamTypeO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1B2ABB6B0((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1B2ABB698((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DCDD68);
      case 4:
        unint64_t result = (unsigned char *)sub_1B2ABB6A0((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_1B2ABB6A8(result, a2 + 3);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KnosisQueryParam.ParamType.CodingKeys()
{
  return &type metadata for KnosisQueryParam.ParamType.CodingKeys;
}

ValueMetadata *type metadata accessor for KnosisQueryParam.ParamType.StringCodingKeys()
{
  return &type metadata for KnosisQueryParam.ParamType.StringCodingKeys;
}

ValueMetadata *type metadata accessor for KnosisQueryParam.ParamType.FloatCodingKeys()
{
  return &type metadata for KnosisQueryParam.ParamType.FloatCodingKeys;
}

ValueMetadata *type metadata accessor for KnosisQueryParam.ParamType.TimeCodingKeys()
{
  return &type metadata for KnosisQueryParam.ParamType.TimeCodingKeys;
}

ValueMetadata *type metadata accessor for KnosisQueryParam.ParamType.KeywordCodingKeys()
{
  return &type metadata for KnosisQueryParam.ParamType.KeywordCodingKeys;
}

unsigned char *_s20IntelligencePlatform14KnosisQueryArgOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1B2ABB6B0((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1B2ABB698((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DCDE9CLL);
      case 4:
        unint64_t result = (unsigned char *)sub_1B2ABB6A0((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_1B2ABB6A8(result, a2 + 2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KnosisQueryParam.CodingKeys()
{
  return &type metadata for KnosisQueryParam.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for QueryNode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DCDFA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryNode.CodingKeys()
{
  return &type metadata for QueryNode.CodingKeys;
}

ValueMetadata *type metadata accessor for IntentMap.CodingKeys()
{
  return &type metadata for IntentMap.CodingKeys;
}

void type metadata accessor for ContextGeneratorFeatures()
{
}

unint64_t sub_1B2DCDFFC()
{
  unint64_t result = qword_1E9C44220;
  if (!qword_1E9C44220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44220);
  }
  return result;
}

unint64_t sub_1B2DCE04C()
{
  unint64_t result = qword_1E9C44228;
  if (!qword_1E9C44228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44228);
  }
  return result;
}

unint64_t sub_1B2DCE09C()
{
  unint64_t result = qword_1E9C44230;
  if (!qword_1E9C44230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44230);
  }
  return result;
}

unint64_t sub_1B2DCE0EC()
{
  unint64_t result = qword_1E9C44238;
  if (!qword_1E9C44238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44238);
  }
  return result;
}

unint64_t sub_1B2DCE13C()
{
  unint64_t result = qword_1E9C44240;
  if (!qword_1E9C44240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44240);
  }
  return result;
}

unint64_t sub_1B2DCE18C()
{
  unint64_t result = qword_1E9C44248;
  if (!qword_1E9C44248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44248);
  }
  return result;
}

unint64_t sub_1B2DCE1DC()
{
  unint64_t result = qword_1EB7D9710;
  if (!qword_1EB7D9710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9710);
  }
  return result;
}

unint64_t sub_1B2DCE22C()
{
  unint64_t result = qword_1EB7D9708;
  if (!qword_1EB7D9708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9708);
  }
  return result;
}

unint64_t sub_1B2DCE27C()
{
  unint64_t result = qword_1EB7D95C8;
  if (!qword_1EB7D95C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D95C8);
  }
  return result;
}

unint64_t sub_1B2DCE2CC()
{
  unint64_t result = qword_1EB7D95C0;
  if (!qword_1EB7D95C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D95C0);
  }
  return result;
}

unint64_t sub_1B2DCE31C()
{
  unint64_t result = qword_1E9C44250;
  if (!qword_1E9C44250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44250);
  }
  return result;
}

unint64_t sub_1B2DCE36C()
{
  unint64_t result = qword_1E9C44258;
  if (!qword_1E9C44258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44258);
  }
  return result;
}

unint64_t sub_1B2DCE3BC()
{
  unint64_t result = qword_1E9C44260;
  if (!qword_1E9C44260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44260);
  }
  return result;
}

unint64_t sub_1B2DCE40C()
{
  unint64_t result = qword_1E9C44268;
  if (!qword_1E9C44268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44268);
  }
  return result;
}

unint64_t sub_1B2DCE45C()
{
  unint64_t result = qword_1E9C44270;
  if (!qword_1E9C44270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44270);
  }
  return result;
}

unint64_t sub_1B2DCE4AC()
{
  unint64_t result = qword_1E9C44278;
  if (!qword_1E9C44278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44278);
  }
  return result;
}

unint64_t sub_1B2DCE4FC()
{
  unint64_t result = qword_1E9C44280;
  if (!qword_1E9C44280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44280);
  }
  return result;
}

unint64_t sub_1B2DCE54C()
{
  unint64_t result = qword_1E9C44288;
  if (!qword_1E9C44288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44288);
  }
  return result;
}

unint64_t sub_1B2DCE59C()
{
  unint64_t result = qword_1E9C44290;
  if (!qword_1E9C44290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44290);
  }
  return result;
}

unint64_t sub_1B2DCE5EC()
{
  unint64_t result = qword_1E9C44298;
  if (!qword_1E9C44298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44298);
  }
  return result;
}

unint64_t sub_1B2DCE63C()
{
  unint64_t result = qword_1E9C442A0;
  if (!qword_1E9C442A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C442A0);
  }
  return result;
}

unint64_t sub_1B2DCE68C()
{
  unint64_t result = qword_1E9C442A8;
  if (!qword_1E9C442A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C442A8);
  }
  return result;
}

unint64_t sub_1B2DCE6DC()
{
  unint64_t result = qword_1E9C442B0;
  if (!qword_1E9C442B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C442B0);
  }
  return result;
}

unint64_t sub_1B2DCE72C()
{
  unint64_t result = qword_1E9C442B8;
  if (!qword_1E9C442B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C442B8);
  }
  return result;
}

unint64_t sub_1B2DCE77C()
{
  unint64_t result = qword_1EB7D9740;
  if (!qword_1EB7D9740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9740);
  }
  return result;
}

unint64_t sub_1B2DCE7CC()
{
  unint64_t result = qword_1EB7D9738;
  if (!qword_1EB7D9738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9738);
  }
  return result;
}

unint64_t sub_1B2DCE818()
{
  unint64_t result = qword_1E9C442C8;
  if (!qword_1E9C442C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C442C8);
  }
  return result;
}

unint64_t sub_1B2DCE864()
{
  unint64_t result = qword_1E9C442E0;
  if (!qword_1E9C442E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C442E0);
  }
  return result;
}

unint64_t sub_1B2DCE8B0(uint64_t a1)
{
  unint64_t result = sub_1B2ACA11C(a1);
  if (!result)
  {
    sub_1B299B07C();
    sub_1B29C3588(&qword_1E9C442D0);
    v2();
    unint64_t result = sub_1B2DCF370();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1B2DCE910()
{
  unint64_t result = qword_1E9C442F8;
  if (!qword_1E9C442F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C442F8);
  }
  return result;
}

unint64_t sub_1B2DCE95C()
{
  unint64_t result = qword_1EB7D9648;
  if (!qword_1EB7D9648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9648);
  }
  return result;
}

unint64_t sub_1B2DCE9A8(uint64_t a1)
{
  unint64_t result = sub_1B2ACA11C(a1);
  if (!result)
  {
    sub_1B299B07C();
    sub_1B29C3588(&qword_1EB7D9768);
    v2();
    unint64_t result = sub_1B2DCF370();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1B2DCEA08()
{
  unint64_t result = qword_1EB7D9718;
  if (!qword_1EB7D9718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9718);
  }
  return result;
}

unint64_t sub_1B2DCEA54()
{
  unint64_t result = qword_1E9C44310;
  if (!qword_1E9C44310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44310);
  }
  return result;
}

uint64_t sub_1B2DCEAA0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1B2DCEB00(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  sub_1B299B798();
  v3();
  return a1;
}

ValueMetadata *type metadata accessor for VirtualOperators.CodingKeys()
{
  return &type metadata for VirtualOperators.CodingKeys;
}

ValueMetadata *type metadata accessor for ContextGeneratorFeatures.CodingKeys()
{
  return &type metadata for ContextGeneratorFeatures.CodingKeys;
}

void type metadata accessor for ContextGeneratorTypeFeatures()
{
}

unint64_t sub_1B2DCEB84()
{
  unint64_t result = qword_1E9C44318;
  if (!qword_1E9C44318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44318);
  }
  return result;
}

unint64_t sub_1B2DCEBD4()
{
  unint64_t result = qword_1E9C44320;
  if (!qword_1E9C44320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44320);
  }
  return result;
}

unint64_t sub_1B2DCEC24()
{
  unint64_t result = qword_1EB7D9658;
  if (!qword_1EB7D9658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9658);
  }
  return result;
}

unint64_t sub_1B2DCEC74()
{
  unint64_t result = qword_1EB7D9650;
  if (!qword_1EB7D9650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9650);
  }
  return result;
}

unint64_t sub_1B2DCECC4()
{
  unint64_t result = qword_1E9C44328;
  if (!qword_1E9C44328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44328);
  }
  return result;
}

unint64_t sub_1B2DCED14()
{
  unint64_t result = qword_1E9C44330;
  if (!qword_1E9C44330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44330);
  }
  return result;
}

unint64_t sub_1B2DCED60()
{
  unint64_t result = qword_1E9C44340;
  if (!qword_1E9C44340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44340);
  }
  return result;
}

unsigned char *_s20IntelligencePlatform9IntentMapV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2DCEE48);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextGeneratorTypeFeatures.CodingKeys()
{
  return &type metadata for ContextGeneratorTypeFeatures.CodingKeys;
}

unint64_t sub_1B2DCEE84()
{
  unint64_t result = qword_1E9C44350;
  if (!qword_1E9C44350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44350);
  }
  return result;
}

unint64_t sub_1B2DCEED4()
{
  unint64_t result = qword_1E9C44358;
  if (!qword_1E9C44358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44358);
  }
  return result;
}

unint64_t sub_1B2DCEF24()
{
  unint64_t result = qword_1E9C44360;
  if (!qword_1E9C44360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44360);
  }
  return result;
}

uint64_t sub_1B2DCEF74()
{
  return v0;
}

uint64_t sub_1B2DCEF8C()
{
  return sub_1B2E83668();
}

__n128 sub_1B2DCEFB0()
{
  return *(__n128 *)(v0 + 56);
}

uint64_t sub_1B2DCEFE4()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2DCF00C()
{
  return 0x79676F6C6F746E6FLL;
}

uint64_t sub_1B2DCF03C()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B2DCF05C()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2DCF088(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
}

uint64_t sub_1B2DCF0A0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DCF0B8()
{
  return sub_1B2E83618();
}

uint64_t sub_1B2DCF0D4()
{
  return 0x7865646E496F6ELL;
}

uint64_t sub_1B2DCF0EC()
{
  return v0 - 72;
}

uint64_t sub_1B2DCF10C()
{
  return v0;
}

__n128 sub_1B2DCF11C@<Q0>(uint64_t a1@<X8>, __n128 a2, long long a3, long long a4)
{
  *(void *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = a4;
  *(_OWORD *)(a1 + 72) = a3;
  __n128 result = a2;
  *(__n128 *)(a1 + 88) = a2;
  return result;
}

uint64_t sub_1B2DCF13C()
{
  return sub_1B2E83568();
}

uint64_t sub_1B2DCF15C()
{
  return v0 - 128;
}

uint64_t sub_1B2DCF16C@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  *(unsigned char *)(v3 - 72) = a2;
  return MEMORY[0x1F4185630](a1, v3 - 72, v2);
}

uint64_t sub_1B2DCF190@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v2 - 72) = a1;
  return MEMORY[0x1F4185500](v2 - 72, v1);
}

uint64_t sub_1B2DCF1B4()
{
  return v0;
}

uint64_t sub_1B2DCF1DC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2DCF208()
{
  uint64_t v3 = *(void *)(v0 - 144);
  uint64_t v2 = *(void *)(v0 - 136);
  uint64_t v5 = *(void *)(v0 - 160);
  uint64_t v4 = *(void *)(v0 - 152);
  int v7 = *(_DWORD *)(v0 - 168);
  uint64_t v6 = *(unsigned int *)(v0 - 164);
  return sub_1B29C5A24(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1B2DCF224()
{
  return v0;
}

uint64_t sub_1B2DCF23C()
{
  return v0;
}

uint64_t sub_1B2DCF254()
{
  return v0;
}

uint64_t sub_1B2DCF278()
{
  return swift_beginAccess();
}

uint64_t sub_1B2DCF298()
{
  return v0;
}

uint64_t sub_1B2DCF2B8()
{
  return 8236;
}

uint64_t sub_1B2DCF2E8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DCF338()
{
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
}

uint64_t sub_1B2DCF35C()
{
  return v0;
}

uint64_t sub_1B2DCF370()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2DCF390()
{
  return v0;
}

uint64_t sub_1B2DCF3A4()
{
  return *(void *)(v0 - 160);
}

void sub_1B2DCF3B8()
{
  *(void *)(v1 - 112) = v0;
}

uint64_t sub_1B2DCF3CC()
{
  return v0 - 88;
}

uint64_t sub_1B2DCF3E0()
{
  return v0 - 72;
}

uint64_t sub_1B2DCF3F4()
{
  return 6452595;
}

unint64_t sub_1B2DCF404()
{
  return 0xD000000000000020;
}

uint64_t sub_1B2DCF420(uint64_t a1)
{
  uint64_t result = sub_1B2A70090(1, a1);
  if (*(void *)(a1 + 16))
  {
    double v6 = *(double *)(a1 + 32);
    unint64_t v7 = (v5 >> 1) - v4;
    if (v5 >> 1 == v4)
    {
LABEL_6:
      swift_bridgeObjectRetain();
      return swift_unknownObjectRelease();
    }
    if ((uint64_t)(v5 >> 1) > v4)
    {
      uint64_t v8 = (double *)(v3 + 8 * v4);
      do
      {
        double v9 = *v8++;
        double v6 = v6 - v9;
        --v7;
      }
      while (v7);
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Sub()
{
  return self;
}

__n128 Subentity.id.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

uint64_t Subentity.facts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Subentity.entityClass.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  char v5 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 24);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

_UNKNOWN **sub_1B2DCF528()
{
  return &protocol witness table for Subfact;
}

unint64_t sub_1B2DCF538(uint64_t a1)
{
  unint64_t result = sub_1B2DCF560();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2DCF560()
{
  unint64_t result = qword_1E9C38930;
  if (!qword_1E9C38930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38930);
  }
  return result;
}

_UNKNOWN **sub_1B2DCF5AC()
{
  return &protocol witness table for Subfact;
}

unint64_t sub_1B2DCF5C0(uint64_t a1)
{
  unint64_t result = sub_1B2DCF5E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2DCF5E8()
{
  unint64_t result = qword_1E9C38928;
  if (!qword_1E9C38928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38928);
  }
  return result;
}

uint64_t destroy for Subentity()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Subentity(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Subentity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for Subentity(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for Subentity(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Subentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Subentity()
{
  return &type metadata for Subentity;
}

void *SubentityIdentifier.init(parentId:relationshipId:)@<X0>(void *result@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  if (*result)
  {
    uint64_t v3 = *a2;
    if (*a2)
    {
      *a3 = *result;
      a3[1] = v3;
      return result;
    }
    sub_1B2A534E4();
    swift_allocError();
  }
  else
  {
    sub_1B2A533E0();
    swift_allocError();
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v4 + 16) = 0u;
    *(_OWORD *)(v4 + 32) = 0u;
    *(_WORD *)(v4 + 48) = 512;
  }
  return (void *)swift_willThrow();
}

void SubentityIdentifier.parentId.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

void SubentityIdentifier.relationshipId.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
}

uint64_t SubentityIdentifier.hash(into:)()
{
  return sub_1B2E839C8();
}

BOOL static SubentityIdentifier.== infix(_:_:)(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x10uLL) == 0;
}

uint64_t sub_1B2DCF99C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449746E65726170 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xEE00644970696873)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2DCFAB0(char a1)
{
  if (a1) {
    return 0x6E6F6974616C6572;
  }
  else {
    return 0x6449746E65726170;
  }
}

uint64_t sub_1B2DCFAF4()
{
  return sub_1B2DCFAB0(*v0);
}

uint64_t sub_1B2DCFAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DCF99C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DCFB24(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCFCE4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DCFB60(uint64_t a1)
{
  unint64_t v2 = sub_1B2DCFCE4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SubentityIdentifier.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C44368);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  double v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  uint64_t v12 = v1[1];
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2DCFCE4();
  sub_1B2E83A38();
  uint64_t v14 = v10;
  char v13 = 0;
  sub_1B29CB42C();
  sub_1B2DD01CC();
  if (!v2)
  {
    uint64_t v14 = v12;
    char v13 = 1;
    sub_1B2B42A0C();
    sub_1B2DD01CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

unint64_t sub_1B2DCFCE4()
{
  unint64_t result = qword_1E9C44370;
  if (!qword_1E9C44370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44370);
  }
  return result;
}

uint64_t SubentityIdentifier.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t SubentityIdentifier.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C44378);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2DCFCE4();
  sub_1B2E83A18();
  if (!v2)
  {
    sub_1B29CB3E0();
    sub_1B29A34D0();
    sub_1B2B42E00();
    sub_1B29A34D0();
    uint64_t v6 = sub_1B299B8A4();
    v7(v6);
    *a2 = v9;
    a2[1] = v9;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
}

uint64_t sub_1B2DCFEEC()
{
  return sub_1B2E839E8();
}

unint64_t sub_1B2DCFF48()
{
  unint64_t result = qword_1E9C44380;
  if (!qword_1E9C44380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44380);
  }
  return result;
}

uint64_t sub_1B2DCFF98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SubentityIdentifier.init(from:)(a1, a2);
}

uint64_t sub_1B2DCFFB0(void *a1)
{
  return SubentityIdentifier.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SubentityIdentifier()
{
  return &type metadata for SubentityIdentifier;
}

unsigned char *storeEnumTagSinglePayload for SubentityIdentifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DD00A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubentityIdentifier.CodingKeys()
{
  return &type metadata for SubentityIdentifier.CodingKeys;
}

unint64_t sub_1B2DD00E0()
{
  unint64_t result = qword_1E9C44388;
  if (!qword_1E9C44388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44388);
  }
  return result;
}

unint64_t sub_1B2DD0130()
{
  unint64_t result = qword_1E9C44390;
  if (!qword_1E9C44390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44390);
  }
  return result;
}

unint64_t sub_1B2DD0180()
{
  unint64_t result = qword_1E9C44398;
  if (!qword_1E9C44398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44398);
  }
  return result;
}

uint64_t sub_1B2DD01CC()
{
  return sub_1B2E836D8();
}

uint64_t dispatch thunk of SubentityProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t Subfact.Object.asString.getter()
{
  if (v0[2]) {
    return 0;
  }
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void Subfact.Object.asEntityIdentifier.getter(uint64_t a1@<X8>)
{
  int v2 = *((unsigned __int8 *)v1 + 16);
  if (v2 == 1) {
    uint64_t v3 = *v1;
  }
  else {
    uint64_t v3 = 0;
  }
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v2 ^ 1;
}

uint64_t sub_1B2DD0270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 0;
  return swift_bridgeObjectRetain();
}

void *sub_1B2DD0280@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  return result;
}

uint64_t Subfact.predicate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  __int16 v5 = *(_WORD *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t Subfact.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  char v4 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1B2A53708(v2, v3, v4);
}

_UNKNOWN **sub_1B2DD02FC()
{
  return &protocol witness table for Subfact.Object;
}

_UNKNOWN **sub_1B2DD0308()
{
  return &protocol witness table for Subfact.Object;
}

uint64_t destroy for Subfact(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);

  return sub_1B2A53718(v2, v3, v4);
}

uint64_t initializeWithCopy for Subfact(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  char v7 = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2A53708(v5, v6, v7);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  return a1;
}

uint64_t assignWithCopy for Subfact(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v2[2];
  *(void *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *((_WORD *)v2 + 16);
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[6];
  LOBYTE(v2) = *((unsigned char *)v2 + 56);
  sub_1B2A53708(v4, v5, (char)v2);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  char v8 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = (_BYTE)v2;
  sub_1B2A53718(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Subfact(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  char v9 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = v6;
  sub_1B2A53718(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Subfact(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Subfact(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Subfact()
{
  return &type metadata for Subfact;
}

ValueMetadata *type metadata accessor for Subfact.Object()
{
  return &type metadata for Subfact.Object;
}

void sub_1B2DD059C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char a13)
{
  sub_1B2B76354();
  uint64_t v15 = v14;
  sub_1B299D2DC();
  sub_1B29D22C4(&qword_1E9C444A8, &qword_1E9C444B0);
  if (sub_1B2DD5C4C())
  {
    *(void *)uint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    *(void *)(v15 + 16) = 0;
    *(_WORD *)(v15 + 24) = 256;
  }
  else
  {
    sub_1B29D22C4(&qword_1E9C444B8, &qword_1E9C444B0);
    sub_1B2DD5C30();
    sub_1B2DD5D10();
    sub_1B2DD5C14();
    sub_1B299EB84();
    swift_release();
    if (!v13)
    {
      if (a13)
      {
        sub_1B2E80E38();
        *(void *)uint64_t v15 = a9;
        *(void *)(v15 + 8) = a10;
        *(void *)(v15 + 16) = a11;
        *(unsigned char *)(v15 + 24) = a12;
        *(unsigned char *)(v15 + 25) = 1;
      }
      else
      {
        *(void *)uint64_t v15 = a9;
        *(void *)(v15 + 8) = a10;
        *(void *)(v15 + 16) = a11;
        *(unsigned char *)(v15 + 24) = a12 & 1;
        *(unsigned char *)(v15 + 25) = 0;
      }
    }
  }
  sub_1B29A1B68();
}

uint64_t sub_1B2DD06DC@<X0>(uint64_t a1@<X8>)
{
  sub_1B299D2DC();
  sub_1B29D22C4(&qword_1E9C44470, &qword_1E9C44478);
  uint64_t result = sub_1B2DD5C4C();
  if (result)
  {
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 8) = 1;
  }
  else
  {
    sub_1B29D22C4(&qword_1E9C44480, &qword_1E9C44478);
    sub_1B2DD5C30();
    sub_1B2DD5D10();
    sub_1B2DD5C14();
    sub_1B299EB84();
    uint64_t result = swift_release();
    if (!v1)
    {
      if (v5)
      {
        uint64_t result = sub_1B29A4A60();
        *(void *)a1 = v4;
        *(unsigned char *)(a1 + 8) = 1;
      }
      else
      {
        *(void *)a1 = v4;
        *(unsigned char *)(a1 + 8) = 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B2DD07F8()
{
  sub_1B299D2DC();
  if (sub_1B2E80E28()) {
    return 0;
  }
  sub_1B2E80BF8();
  sub_1B2E813A8();
  swift_retain();
  sub_1B2E816E8();
  sub_1B299EB84();
  uint64_t result = swift_release();
  if (!v0)
  {
    uint64_t result = v2;
    if (!v2)
    {
      sub_1B2E80E38();
      return 0;
    }
  }
  return result;
}

void sub_1B2DD08E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  sub_1B2B76354();
  uint64_t v14 = v13;
  sub_1B299D2DC();
  sub_1B29D22C4(&qword_1E9C37D30, &qword_1E9C37D38);
  if (sub_1B2DD5C4C())
  {
    *(void *)uint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    *(void *)(v14 + 16) = 0;
  }
  else
  {
    sub_1B29D22C4((unint64_t *)&unk_1E9C37D20, &qword_1E9C37D38);
    sub_1B2DD5C30();
    sub_1B2DD5D10();
    sub_1B2DD5C14();
    sub_1B299EB84();
    swift_release();
    if (v12) {
      goto LABEL_8;
    }
    if ((a12 & 1) == 0)
    {
      *(void *)uint64_t v14 = a9;
      *(void *)(v14 + 8) = a10;
      *(void *)(v14 + 16) = a11;
      *(unsigned char *)(v14 + 24) = 0;
      goto LABEL_8;
    }
    sub_1B29A4A60();
    *(void *)uint64_t v14 = a9;
    *(void *)(v14 + 8) = a10;
    *(void *)(v14 + 16) = a11;
  }
  *(unsigned char *)(v14 + 24) = 1;
LABEL_8:
  sub_1B29A1B68();
}

uint64_t sub_1B2DD09F4@<X0>(uint64_t a1@<X8>)
{
  sub_1B29D22C4(&qword_1E9C44428, &qword_1E9C44430);
  uint64_t result = sub_1B2E80E28();
  if (result)
  {
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  else
  {
    sub_1B29D22C4(&qword_1E9C44438, &qword_1E9C44430);
    sub_1B2E80BF8();
    swift_retain();
    sub_1B2E816E8();
    swift_release();
    uint64_t result = swift_release();
    if (!v1)
    {
      if (v6)
      {
        *(void *)a1 = v4;
        *(void *)(a1 + 8) = v5;
        *(void *)(a1 + 16) = v6;
        *(void *)(a1 + 24) = v7;
        *(void *)(a1 + 32) = v8;
        *(_WORD *)(a1 + 40) = v9;
        *(void *)(a1 + 48) = v10;
        *(void *)(a1 + 56) = v11;
        *(void *)(a1 + 64) = v12;
        *(void *)(a1 + 72) = v13;
        *(void *)(a1 + 80) = v14;
        *(_WORD *)(a1 + 88) = v15;
      }
      else
      {
        uint64_t result = sub_1B2E80E38();
        *(void *)a1 = v4;
        *(void *)(a1 + 8) = v5;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = v7;
        *(void *)(a1 + 32) = v8;
        *(void *)(a1 + 40) = v9;
        *(void *)(a1 + 48) = v10;
        *(void *)(a1 + 56) = v11;
        *(void *)(a1 + 64) = v12;
        *(void *)(a1 + 72) = v13;
        *(void *)(a1 + 80) = v14;
        *(void *)(a1 + 88) = v15;
      }
      *(void *)(a1 + 96) = v16;
      *(void *)(a1 + 104) = v17;
    }
  }
  return result;
}

void sub_1B2DD0BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  sub_1B2B76354();
  uint64_t v14 = v13;
  sub_1B299D2DC();
  sub_1B29D22C4(&qword_1E9C44488, &qword_1E9C44490);
  if (sub_1B2DD5C4C())
  {
    *(void *)uint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    *(void *)(v14 + 16) = 0;
  }
  else
  {
    sub_1B29D22C4((unint64_t *)&unk_1E9C44498, &qword_1E9C44490);
    sub_1B2DD5C30();
    sub_1B2DD5D10();
    sub_1B2DD5C14();
    sub_1B299EB84();
    swift_release();
    if (v12) {
      goto LABEL_8;
    }
    if ((a12 & 1) == 0)
    {
      *(void *)uint64_t v14 = a9;
      *(void *)(v14 + 8) = a10;
      *(void *)(v14 + 16) = a11;
      *(unsigned char *)(v14 + 24) = 0;
      goto LABEL_8;
    }
    sub_1B29A4A60();
    *(void *)uint64_t v14 = a9;
    *(void *)(v14 + 8) = a10;
    *(void *)(v14 + 16) = a11;
  }
  *(unsigned char *)(v14 + 24) = 1;
LABEL_8:
  sub_1B29A1B68();
}

uint64_t sub_1B2DD0D10@<X0>(uint64_t a1@<X8>)
{
  sub_1B299D2DC();
  sub_1B29D22C4(&qword_1E9C44458, &qword_1E9C44460);
  uint64_t result = sub_1B2E80E28();
  if (result)
  {
    *(void *)(a1 + 112) = 0;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  else
  {
    sub_1B29D22C4(&qword_1E9C44468, &qword_1E9C44460);
    sub_1B2E80BF8();
    swift_retain();
    sub_1B2E816E8();
    swift_release();
    uint64_t result = swift_release();
    if (!v1)
    {
      uint64_t result = v8;
      if (v6)
      {
        *(void *)a1 = v4;
        *(void *)(a1 + 8) = v5;
        *(void *)(a1 + 16) = v6;
        *(void *)(a1 + 24) = v7;
        *(void *)(a1 + 32) = v8;
        *(_WORD *)(a1 + 40) = v9;
        *(void *)(a1 + 48) = v10;
        *(void *)(a1 + 56) = v11;
        *(void *)(a1 + 64) = v12;
        *(void *)(a1 + 72) = v13;
        *(void *)(a1 + 80) = v14;
        *(_WORD *)(a1 + 88) = v15;
      }
      else
      {
        uint64_t result = sub_1B2E80E38();
        *(void *)a1 = v4;
        *(void *)(a1 + 8) = v5;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = v7;
        *(void *)(a1 + 32) = v8;
        *(void *)(a1 + 40) = v9;
        *(void *)(a1 + 48) = v10;
        *(void *)(a1 + 56) = v11;
        *(void *)(a1 + 64) = v12;
        *(void *)(a1 + 72) = v13;
        *(void *)(a1 + 80) = v14;
        *(void *)(a1 + 88) = v15;
      }
      *(void *)(a1 + 96) = v16;
      *(void *)(a1 + 104) = v17;
      *(void *)(a1 + 112) = v18;
    }
  }
  return result;
}

uint64_t sub_1B2DD0F10(uint64_t a1)
{
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(void *)(v1 + 16) = a1;
  swift_retain();
  sub_1B2DD09F4((uint64_t)v10);
  swift_release();
  if (v2)
  {
    swift_release();
  }
  else
  {
    swift_beginAccess();
    uint64_t v3 = *(void *)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 32);
    uint64_t v5 = *(void *)(v1 + 40);
    long long v6 = v10[1];
    *(_OWORD *)(v1 + 24) = v10[0];
    *(_OWORD *)(v1 + 40) = v6;
    long long v7 = v10[3];
    *(_OWORD *)(v1 + 56) = v10[2];
    *(_OWORD *)(v1 + 72) = v7;
    long long v8 = v10[5];
    *(_OWORD *)(v1 + 88) = v10[4];
    *(_OWORD *)(v1 + 104) = v8;
    *(_OWORD *)(v1 + 120) = v10[6];
    sub_1B2B76014(v3, v4, v5);
  }
  return v1;
}

uint64_t sub_1B2DD1004@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  uint64_t v6 = v1[8];
  uint64_t v7 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v9 = v1[12];
  uint64_t v10 = v1[13];
  uint64_t v11 = v1[14];
  uint64_t v12 = v1[15];
  uint64_t v13 = v1[16];
  uint64_t v14 = v1[3];
  uint64_t v24 = v1[11];
  uint64_t v32 = v1[4];
  uint64_t v29 = v4;
  uint64_t v30 = v3;
  uint64_t v27 = v6;
  uint64_t v28 = v5;
  uint64_t v25 = v8;
  uint64_t v26 = v7;
  sub_1B2DD5224(v14, v32, v3);
  sub_1B2DD09F4((uint64_t)v31);
  if (v23) {
    return sub_1B2B76014(v14, v32, v30);
  }
  uint64_t v16 = v1[3];
  uint64_t v17 = v1[4];
  uint64_t v18 = v1[5];
  long long v19 = v31[1];
  *(_OWORD *)(v1 + 3) = v31[0];
  *(_OWORD *)(v1 + 5) = v19;
  long long v20 = v31[3];
  *(_OWORD *)(v1 + 7) = v31[2];
  *(_OWORD *)(v1 + 9) = v20;
  long long v21 = v31[5];
  *(_OWORD *)(v1 + 11) = v31[4];
  *(_OWORD *)(v1 + 13) = v21;
  *(_OWORD *)(v1 + 15) = v31[6];
  uint64_t result = sub_1B2B76014(v16, v17, v18);
  uint64_t v22 = v32;
  *a1 = v14;
  a1[1] = v22;
  a1[2] = v30;
  a1[3] = v29;
  a1[4] = v28;
  a1[5] = v27;
  a1[6] = v26;
  a1[7] = v25;
  a1[8] = v24;
  a1[9] = v9;
  a1[10] = v10;
  a1[11] = v11;
  a1[12] = v12;
  a1[13] = v13;
  return result;
}

uint64_t sub_1B2DD1184@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = v1[9];
  uint64_t v10 = v1[10];
  uint64_t v11 = v1[11];
  uint64_t v12 = v1[12];
  uint64_t v13 = v1[13];
  uint64_t v14 = v1[14];
  uint64_t v15 = v1[15];
  uint64_t v16 = v1[16];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v12;
  a1[10] = v13;
  a1[11] = v14;
  a1[12] = v15;
  a1[13] = v16;
  return sub_1B2DD5224(v3, v4, v5);
}

void *SubgraphView.__allocating_init(accessAssertion:database:tableName:batchSize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1B2DD5CB4();
  uint64_t result = (void *)swift_allocObject();
  result[2] = v10;
  result[3] = v9;
  result[4] = v8;
  result[5] = v7;
  result[6] = v6;
  result[7] = a6;
  return result;
}

void *SubgraphView.init(accessAssertion:database:tableName:batchSize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6[2] = a1;
  v6[3] = a2;
  void v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  return v6;
}

uint64_t SubgraphView.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SubgraphView.__deallocating_deinit()
{
  SubgraphView.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2DD12E0()
{
  return sub_1B2E80C18();
}

uint64_t sub_1B2DD137C(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t *, void))
{
  uint64_t result = a2();
  if (!v4)
  {
    uint64_t v7 = result;
    sub_1B29A3EB4(&qword_1E9C44420);
    swift_initStackObject();
    sub_1B2DD0F10(v7);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = 0;
    *(unsigned char *)(v8 + 24) = 1;
    uint64_t v20 = v8 + 16;
    swift_beginAccess();
    sub_1B2DD1184(&v17);
    uint64_t v9 = v19;
    if (v19)
    {
      uint64_t v10 = 0;
      char v11 = 1;
      do
      {
        uint64_t v12 = v17;
        uint64_t v13 = sub_1B2B76014(v17, v18, v9);
        if (v11)
        {
          *(void *)(v8 + 16) = v12;
          *(unsigned char *)(v8 + 24) = 0;
          uint64_t v10 = v12;
        }
        uint64_t v17 = v10;
        MEMORY[0x1F4188790](v13);
        if ((a4(&v17, sub_1B2DD5208) & 1) == 0) {
          break;
        }
        swift_beginAccess();
        while (1)
        {
          sub_1B2DD1184(&v17);
          if (!v19) {
            break;
          }
          uint64_t v14 = v17;
          uint64_t v15 = *(void *)(v8 + 16);
          char v16 = *(unsigned char *)(v8 + 24);
          sub_1B2B76014(v17, v18, v19);
          if ((v16 & 1) != 0 || v14 != v15) {
            break;
          }
          sub_1B2DD1004(&v17);
          sub_1B2B76014(v17, v18, v19);
        }
        sub_1B2DD1184(&v17);
        if (!v19) {
          break;
        }
        uint64_t v10 = v17;
        sub_1B2B76014(v17, v18, v19);
        *(void *)(v8 + 16) = v10;
        *(unsigned char *)(v8 + 24) = 0;
        sub_1B2DD1184(&v17);
        char v11 = 0;
        uint64_t v9 = v19;
      }
      while (v19);
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B2DD1674(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v12 = (void *)(a4 + 16);
  swift_beginAccess();
  while (1)
  {
    uint64_t result = sub_1B2DD1184(&v15);
    uint64_t v7 = v17;
    if (!v17) {
      break;
    }
    uint64_t v19 = v5;
    uint64_t v8 = v15;
    if ((*(unsigned char *)(a4 + 24) & 1) != 0 || v15 != *v12) {
      return sub_1B2B76014(v15, v16, v17);
    }
    uint64_t v9 = v19;
    uint64_t v19 = v18;
    uint64_t v14 = v16;
    char v10 = a1(&v15);
    uint64_t result = sub_1B2B76014(v8, v14, v7);
    if (!v9)
    {
      sub_1B2DD1004(&v15);
      uint64_t v5 = 0;
      uint64_t result = sub_1B2B76014(v15, v16, v17);
      if (v10) {
        continue;
      }
    }
    return result;
  }
  return result;
}

uint64_t sub_1B2DD1810()
{
  return sub_1B2E80C18();
}

uint64_t sub_1B2DD18CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t *), uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t (*)(uint64_t (*a1)(uint64_t *)), uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a6;
  uint64_t v29 = a5;
  uint64_t v26 = a4;
  uint64_t v25 = a3;
  uint64_t v33 = a1;
  uint64_t v10 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v24 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, a7);
  sub_1B2E82668();
  swift_getAssociatedConformanceWitness();
  sub_1B2E82FA8();
  if ((v31 & 1) == 0)
  {
    uint64_t v17 = v25;
    uint64_t v18 = v30;
    do
    {
      uint64_t v30 = v18;
      uint64_t v19 = v17(v33, &v30);
      if (v7) {
        break;
      }
      uint64_t v20 = v19;
      sub_1B29A3EB4(&qword_1E9C44420);
      swift_initStackObject();
      uint64_t v21 = sub_1B2DD0F10(v20);
      sub_1B2DD1184(&v30);
      uint64_t v22 = v32;
      sub_1B2B76014(v30, v31, v32);
      if (v22)
      {
        uint64_t v30 = v18;
        char v23 = v29(&v30, sub_1B2B76084, v21);
        swift_release();
        if ((v23 & 1) == 0) {
          return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, AssociatedTypeWitness);
        }
      }
      else
      {
        swift_release();
      }
      sub_1B2E82FA8();
      uint64_t v18 = v30;
    }
    while ((v31 & 1) == 0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, AssociatedTypeWitness);
}

uint64_t sub_1B2DD1C80(uint64_t (*a1)(uint64_t *))
{
  do
  {
    uint64_t result = sub_1B2DD1004(v8);
    if (v1) {
      break;
    }
    uint64_t v3 = v9;
    if (!v9) {
      break;
    }
    uint64_t v11 = v10;
    uint64_t v5 = v8[0];
    uint64_t v4 = v8[1];
    char v6 = a1(v8);
    uint64_t result = sub_1B2B76014(v5, v4, v3);
  }
  while ((v6 & 1) != 0);
  return result;
}

uint64_t sub_1B2DD1D9C(uint64_t a1, void (*a2)(uint64_t (*)(uint64_t a1), void *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 1;
  char v10 = v9 + 16;
  uint64_t v11 = (void *)swift_allocObject();
  id v11[2] = v9;
  v11[3] = a4;
  v11[4] = a5;
  swift_retain();
  a2(sub_1B2DD599C, v11);
  if (!v5)
  {
    swift_beginAccess();
    char v10 = *(unsigned char *)(v9 + 16);
  }
  swift_release();
  swift_release();
  return v10 & 1;
}

uint64_t sub_1B2DD1EAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *))
{
  uint64_t v5 = *(void *)(a1 + 32);
  __int16 v6 = *(_WORD *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 80);
  __int16 v8 = *(_WORD *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 96);
  uint64_t v10 = *(void *)(a1 + 104);
  long long v11 = *(_OWORD *)(a1 + 16);
  v15[0] = *(_OWORD *)a1;
  v15[1] = v11;
  uint64_t v16 = v5;
  __int16 v17 = v6;
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v18 = *(_OWORD *)(a1 + 48);
  long long v19 = v12;
  uint64_t v20 = v7;
  __int16 v21 = v8;
  uint64_t v22 = v9;
  uint64_t v23 = v10;
  char v13 = a3(v15);
  if (!v3)
  {
    swift_beginAccess();
    *(unsigned char *)(a2 + 16) = v13 & 1;
  }
  return v13 & 1;
}

uint64_t sub_1B2DD1F54@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  MEMORY[0x1F4188790](v6 - 8);
  __int16 v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B2E80BE8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2DD5074(a1, (uint64_t)v8);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_1B2DD5028((uint64_t)v8, (uint64_t *)&unk_1EB7D9590);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 16))(a3, a2, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    uint64_t v14 = MEMORY[0x1E4F62D00];
    v19[3] = v9;
    v19[4] = MEMORY[0x1E4F62D00];
    uint64_t v15 = sub_1B29D1C70(v19);
    uint64_t v16 = *(void (**)(uint64_t *, char *, uint64_t))(v10 + 16);
    v16(v15, v12, v9);
    v18[3] = v9;
    v18[4] = v14;
    __int16 v17 = sub_1B29D1C70(v18);
    v16(v17, a2, v9);
    sub_1B2E812C8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v18);
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v19);
  }
}

uint64_t sub_1B2DD2158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v22[1] = a1;
  uint64_t v23 = a2;
  uint64_t v25 = a3;
  uint64_t v3 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B2E80BE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1B29A3EB4(&qword_1E9C443F0);
  uint64_t v10 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  long long v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1B29A3EB4((uint64_t *)&unk_1E9C443E0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1B2E814F8();
  sub_1B2DD5074(v23, (uint64_t)v5);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v5, 1, v6) == 1)
  {
    sub_1B2DD5028((uint64_t)v5, (uint64_t *)&unk_1EB7D9590);
    sub_1B2E81448();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v26[3] = v6;
    v26[4] = MEMORY[0x1E4F62D00];
    __int16 v17 = sub_1B29D1C70(v26);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v17, v9, v6);
    sub_1B2E81498();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v26);
  }
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E2ED0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B2EBFA40;
  *(void *)(v18 + 56) = &type metadata for ExtendedTripleColumn;
  unint64_t v19 = sub_1B2B43764();
  *(void *)(v18 + 64) = v19;
  *(unsigned char *)(v18 + 32) = 0;
  *(void *)(v18 + 96) = &type metadata for ExtendedTripleColumn;
  *(void *)(v18 + 104) = v19;
  *(unsigned char *)(v18 + 72) = 2;
  sub_1B29D22C4(&qword_1E9C44450, &qword_1E9C443F0);
  uint64_t v20 = v24;
  sub_1B2E80C58();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

void sub_1B2DD2510(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a4;
  sub_1B299D2DC();
  uint64_t v22 = v8;
  uint64_t v23 = v7;
  uint64_t v9 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v10 = sub_1B299D2A8(v9);
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  uint64_t v17 = *(void *)(v4 + 40);
  uint64_t v18 = *(void *)(v4 + 48);
  sub_1B2DD5074(a2, (uint64_t)v15);
  unint64_t v19 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v17;
  *(void *)(v21 + 24) = v18;
  sub_1B2DD5100((uint64_t)v15, v21 + v19);
  *(void *)(v21 + v20) = v16;
  *(void *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8)) = v22;
  uint64_t v25 = v23;
  uint64_t v26 = v24;
  swift_bridgeObjectRetain();
  sub_1B2DD12E0();
  swift_release();
  sub_1B2DD5D04();
}

uint64_t sub_1B2DD2670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a4;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a1;
  uint64_t v6 = sub_1B2E80BE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1B29A3EB4(&qword_1E9C443F0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = &type metadata for ExtendedTripleColumn;
  unint64_t v26 = sub_1B2B435DC();
  v24[0] = 0;
  v23[3] = &type metadata for EntityIdentifier;
  v23[4] = sub_1B2A28C38();
  v23[0] = a5;
  sub_1B2E812D8();
  sub_1B2DD5028((uint64_t)v23, &qword_1EB7E3BD0);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v24);
  sub_1B2DD1F54(v19, v9, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v6);
  sub_1B2DD2158(v20, (uint64_t)v12, (uint64_t)v16);
  sub_1B2DD5028((uint64_t)v12, (uint64_t *)&unk_1EB7D9590);
  sub_1B29D22C4(&qword_1E9C44440, &qword_1E9C443F0);
  sub_1B2DD5500();
  uint64_t v17 = sub_1B2E809E8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v17;
}

uint64_t SubgraphView.enumerateTriples(for:block:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B299F280();
  uint64_t v13 = *a1;
  uint64_t v9 = sub_1B2E80BE8();
  sub_1B2C6FCE0(v3, v10, v11, v9);
  sub_1B2DD2510(&v13, v3, a2, a3);
  return sub_1B2DD5028(v3, (uint64_t *)&unk_1EB7D9590);
}

void sub_1B2DD29F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a4;
  uint64_t v28 = a6;
  uint64_t v30 = a2;
  sub_1B299D2DC();
  uint64_t v31 = v11;
  uint64_t v32 = v10;
  uint64_t v12 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v13 = sub_1B299D2A8(v12);
  uint64_t v15 = v14;
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = MEMORY[0x1F4188790](v13);
  uint64_t v19 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v28 - v20;
  sub_1B299D31C();
  MEMORY[0x1F4188790](v22);
  sub_1B29A0658();
  uint64_t v23 = *(void *)(v6 + 48);
  uint64_t v29 = *(void *)(v6 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v7, a1, a5);
  swift_bridgeObjectRetain();
  sub_1B29A3EB4(&qword_1EB7E2BD0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v25 = v34;
  if (*(void *)(v34 + 16) >> 4 > 0x752uLL)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1B2DD5074(v30, (uint64_t)v19);
    sub_1B2DD5C68();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v29;
    *(void *)(v27 + 24) = v23;
    sub_1B2DD5100((uint64_t)v19, v27 + v15);
    *(void *)(v27 + v17) = v31;
    sub_1B2DD1810();
    goto LABEL_6;
  }
  sub_1B2DD5074(v30, (uint64_t)v21);
  sub_1B2DD5C68();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v29;
  *(void *)(v26 + 24) = v23;
  sub_1B2DD5100((uint64_t)v21, v26 + v15);
  *(void *)(v26 + v17) = v25;
  *(void *)(v26 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = v31;
  sub_1B2DD12E0();
LABEL_6:
  swift_release();
  sub_1B2DD5D04();
}

uint64_t sub_1B2DD2C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = a1;
  uint64_t v21 = a4;
  uint64_t v22 = a6;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v7 = sub_1B2E80BE8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1B29A3EB4(&qword_1E9C443F0);
  uint64_t v14 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a5;
  uint64_t v27 = &type metadata for ExtendedTripleColumn;
  unint64_t v28 = sub_1B2B435DC();
  v26[0] = 0;
  sub_1B29A3EB4(&qword_1EB7E2BD0);
  sub_1B29D22C4((unint64_t *)&qword_1EB7D9510, &qword_1EB7E2BD0);
  sub_1B2A28C38();
  sub_1B2E82648();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v26);
  sub_1B2DD1F54(v21, v10, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 0, 1, v7);
  sub_1B2DD2158(v23, (uint64_t)v13, (uint64_t)v16);
  sub_1B2DD5028((uint64_t)v13, (uint64_t *)&unk_1EB7D9590);
  sub_1B29D22C4(&qword_1E9C44440, &qword_1E9C443F0);
  sub_1B2DD5500();
  uint64_t v17 = v20;
  uint64_t v18 = sub_1B2E809E8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v17);
  return v18;
}

void sub_1B2DD2F30()
{
  sub_1B299F300();
  uint64_t v25 = v1;
  uint64_t v26 = v0;
  uint64_t v27 = v3;
  uint64_t v28 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_1B2E80BE8();
  sub_1B299D31C();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B299E4A0();
  uint64_t v12 = (char *)(v11 - v10);
  uint64_t v13 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v14 = sub_1B299B0F0(v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1B29A3EB4(&qword_1E9C443F0);
  sub_1B299D31C();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  sub_1B299E4A0();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = *v5;
  uint64_t v31 = &type metadata for ExtendedTripleColumn;
  unint64_t v32 = sub_1B2B435DC();
  char v30 = 0;
  v29[3] = &type metadata for EntityIdentifier;
  v29[4] = sub_1B2A28C38();
  v29[0] = v24;
  sub_1B2E812D8();
  sub_1B2DD5028((uint64_t)v29, &qword_1EB7E3BD0);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v30);
  sub_1B2DD1F54(v25, v12, (uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v6);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v16, 0, 1, v6);
  sub_1B2DD2158(v26, (uint64_t)v16, v23);
  sub_1B2DD5028((uint64_t)v16, (uint64_t *)&unk_1EB7D9590);
  sub_1B29D22C4(&qword_1E9C44440, &qword_1E9C443F0);
  sub_1B2DD5500();
  sub_1B2E809E8();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v17);
  sub_1B29998C8();
}

void SubgraphView.enumerateTriples<A>(for:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v12 = sub_1B299B0F0(v11);
  MEMORY[0x1F4188790](v12);
  sub_1B29A0658();
  uint64_t v13 = sub_1B2E80BE8();
  sub_1B2C6FCE0(v5, v14, v15, v13);
  sub_1B2DD29F0(a1, v5, a2, a3, a4, a5);
  sub_1B2DD5028(v5, (uint64_t *)&unk_1EB7D9590);
  sub_1B2DD5D04();
}

void sub_1B2DD3250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a3;
  sub_1B299D2DC();
  uint64_t v6 = v5;
  uint64_t v7 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v8 = sub_1B299D2A8(v7);
  uint64_t v10 = v9;
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v14 = *(void *)(v3 + 40);
  uint64_t v13 = *(void *)(v3 + 48);
  sub_1B2DD5074(a1, (uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = v13;
  sub_1B2DD5100((uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  *(void *)(v16 + ((v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
  swift_bridgeObjectRetain();
  sub_1B2DD12E0();
  swift_release();
  sub_1B2DD5D04();
}

uint64_t sub_1B2DD337C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C443F0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2DD2158(a2, a4, (uint64_t)v9);
  sub_1B29D22C4(&qword_1E9C44440, &qword_1E9C443F0);
  sub_1B2DD5500();
  uint64_t v10 = sub_1B2E809E8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

uint64_t SubgraphView.enumerateTriples(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v6 = sub_1B299B0F0(v5);
  MEMORY[0x1F4188790](v6);
  sub_1B299B3C8();
  uint64_t v7 = sub_1B2E80BE8();
  sub_1B2C6FCE0(v2, v8, v9, v7);
  sub_1B2DD3250(v2, a1, a2);
  return sub_1B2DD5028(v2, (uint64_t *)&unk_1EB7D9590);
}

uint64_t sub_1B2DD3588(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  _OWORD v3[2] = a1;
  return SubgraphView.enumerateTriples(block:)((uint64_t)sub_1B2DD4FEC, (uint64_t)v3);
}

uint64_t sub_1B2DD35D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t (*)(), void *))
{
  v5[3] = a3;
  void v5[2] = a2;
  return a4(a1, sub_1B2DC073C, v5) & 1;
}

uint64_t sub_1B2DD3620(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return SubgraphView.enumerateTriples(for:block:)(a1, a2, a3);
}

void sub_1B2DD3644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a3;
  void v5[2] = a2;
  SubgraphView.enumerateTriples<A>(for:block:)(a1, (uint64_t)sub_1B2DD4FEC, (uint64_t)v5, a4, a5);
}

void sub_1B2DD368C()
{
  sub_1B299F300();
  sub_1B299D2DC();
  sub_1B29A3EB4((uint64_t *)&unk_1E9C443E0);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v1);
  sub_1B299E4A0();
  swift_bridgeObjectRetain();
  sub_1B2E814F8();
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1E9C38970);
  sub_1B2E80C28();
  if (!v0) {
    sub_1B2DDC524();
  }
  uint64_t v2 = sub_1B2DD5D28();
  v3(v2);
  sub_1B29998C8();
}

uint64_t sub_1B2DD37DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v34 = a5;
  uint64_t v35 = a2;
  uint64_t v38 = a1;
  unint64_t v32 = a6;
  uint64_t v7 = sub_1B2E80BE8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B29A3EB4(&qword_1E9C443F0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  uint64_t v37 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1B29A3EB4((uint64_t *)&unk_1E9C3E380);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v31 - v20;
  long long v41 = &type metadata for ExtendedTripleColumn;
  unint64_t v42 = sub_1B2B435DC();
  LOBYTE(v40[0]) = 4;
  v39[0] = a4;
  uint64_t v22 = EntityIdentifier.stringValue.getter();
  v39[3] = MEMORY[0x1E4FBB1A0];
  v39[4] = MEMORY[0x1E4F62F68];
  v39[0] = v22;
  v39[1] = v23;
  sub_1B2E812D8();
  sub_1B2DD5028((uint64_t)v39, &qword_1EB7E3BD0);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v40);
  long long v41 = (ValueMetadata *)v7;
  unint64_t v42 = MEMORY[0x1E4F62D00];
  uint64_t v24 = sub_1B29D1C70(v40);
  sub_1B2DD1F54(v33, v10, (uint64_t)v24);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1B29A3EB4((uint64_t *)&unk_1E9C443E0);
  sub_1B2E81498();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v40);
  sub_1B29A3EB4(&qword_1EB7D98C0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1B2EC00A0;
  *(void *)(v25 + 56) = &type metadata for ExtendedTripleColumn;
  *(void *)(v25 + 64) = sub_1B2B437B4();
  *(unsigned char *)(v25 + 32) = 0;
  uint64_t v26 = v36;
  sub_1B2E810F8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v26);
  sub_1B2E81108();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v16 + 8);
  v27(v19, v15);
  sub_1B29D22C4((unint64_t *)&qword_1E9C44410, (uint64_t *)&unk_1E9C3E380);
  sub_1B29D1C24();
  uint64_t v28 = v43;
  uint64_t v29 = sub_1B2E80A38();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v27)(v21, v15);
  if (!v28) {
    *unint64_t v32 = v29;
  }
  return result;
}

uint64_t SubgraphView.entityIds(referringTo:)(uint64_t *a1)
{
  return sub_1B2DD4398(a1, (uint64_t (*)(uint64_t, uint64_t *))sub_1B2DD368C);
}

uint64_t sub_1B2DD3BE4(uint64_t *a1)
{
  return SubgraphView.entityIds(referringTo:)(a1);
}

void sub_1B2DD3C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  sub_1B299D2DC();
  uint64_t v12 = sub_1B29A3EB4((uint64_t *)&unk_1E9C443E0);
  sub_1B299D31C();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  sub_1B299B3C8();
  swift_bridgeObjectRetain();
  sub_1B2E814F8();
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2E80C28();
  if (v10)
  {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v12);
  }
  else
  {
    uint64_t v16 = v11;
    uint64_t v17 = *(void *)(a10 + 16);
    uint64_t v18 = v12;
    uint64_t v19 = v14;
    if (v17)
    {
      uint64_t v30 = v12;
      swift_bridgeObjectRetain();
      uint64_t v20 = (unint64_t *)(a10 + 40);
      uint64_t v21 = MEMORY[0x1E4FBC860];
      uint64_t v22 = v16;
      do
      {
        uint64_t v23 = *(v20 - 1);
        unint64_t v24 = *v20;
        swift_bridgeObjectRetain();
        EntityIdentifier.init(_:)(v23, v24, (uint64_t)&v31);
        if ((v32 & 1) == 0)
        {
          uint64_t v25 = v19;
          uint64_t v26 = v31;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B29B7148();
            uint64_t v21 = v28;
          }
          unint64_t v27 = *(void *)(v21 + 16);
          if (v27 >= *(void *)(v21 + 24) >> 1)
          {
            sub_1B29B7148();
            uint64_t v21 = v29;
          }
          *(void *)(v21 + 16) = v27 + 1;
          *(void *)(v21 + 8 * v27 + 32) = v26;
          uint64_t v19 = v25;
          uint64_t v22 = v16;
        }
        v20 += 2;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      uint64_t v18 = v30;
    }
    else
    {
      uint64_t v22 = v16;
    }
    swift_bridgeObjectRelease();
    sub_1B2DDC524();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v18);
  }
  sub_1B29998C8();
}

uint64_t sub_1B2DD3E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v29 = a5;
  uint64_t v28 = a3;
  uint64_t v30 = a2;
  uint64_t v34 = a1;
  uint64_t v26 = a6;
  uint64_t v7 = sub_1B2E80BE8();
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1B29A3EB4(&qword_1E9C443F0);
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1B29A3EB4((uint64_t *)&unk_1E9C443F8);
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v26 - v16;
  unint64_t v42 = &type metadata for ExtendedTripleColumn;
  unint64_t v43 = sub_1B2B435DC();
  LOBYTE(v41[0]) = 0;
  uint64_t v39 = &type metadata for EntityIdentifier;
  unint64_t v40 = sub_1B2A28C38();
  v38[0] = a4;
  uint64_t v45 = v7;
  uint64_t v46 = MEMORY[0x1E4F62D00];
  unint64_t v18 = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v44);
  sub_1B2E812D8();
  sub_1B2DD5028((uint64_t)v38, &qword_1EB7E3BD0);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v41);
  char v47 = 4;
  uint64_t v39 = (ValueMetadata *)MEMORY[0x1E4FBB1A0];
  unint64_t v40 = MEMORY[0x1E4F62F68];
  v38[0] = 624583789;
  v38[1] = 0xE400000000000000;
  uint64_t v37 = 0;
  memset(v36, 0, sizeof(v36));
  unint64_t v42 = (ValueMetadata *)v7;
  unint64_t v43 = v18;
  sub_1B29D1C70(v41);
  sub_1B2E81178();
  sub_1B2DD5028((uint64_t)v36, &qword_1EB7E3BD0);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v38);
  sub_1B2E812C8();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v41);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v44);
  uint64_t v45 = v7;
  uint64_t v46 = MEMORY[0x1E4F62D00];
  uint64_t v19 = sub_1B29D1C70(v44);
  sub_1B2DD1F54(v28, v9, (uint64_t)v19);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v7);
  sub_1B29A3EB4((uint64_t *)&unk_1E9C443E0);
  sub_1B2E81498();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v44);
  sub_1B29A3EB4(&qword_1EB7D98C0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1B2EC00A0;
  *(void *)(v20 + 56) = &type metadata for ExtendedTripleColumn;
  *(void *)(v20 + 64) = sub_1B2B437B4();
  *(unsigned char *)(v20 + 32) = 4;
  uint64_t v21 = v32;
  sub_1B2E810F8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v21);
  sub_1B2E81108();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v31 + 8);
  v22(v15, v12);
  sub_1B29D22C4(&qword_1E9C44408, (uint64_t *)&unk_1E9C443F8);
  uint64_t v23 = v35;
  uint64_t v24 = sub_1B2E80A18();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v17, v12);
  if (!v23) {
    *uint64_t v26 = v24;
  }
  return result;
}

uint64_t SubgraphView.entityIds(referredBy:)(uint64_t *a1)
{
  return sub_1B2DD4398(a1, (uint64_t (*)(uint64_t, uint64_t *))sub_1B2DD3C08);
}

uint64_t sub_1B2DD4398(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t *))
{
  uint64_t v5 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v6 = sub_1B299B0F0(v5);
  MEMORY[0x1F4188790](v6);
  sub_1B299B3C8();
  uint64_t v7 = *a1;
  uint64_t v8 = sub_1B2E80BE8();
  sub_1B2C6FCE0(v2, v9, v10, v8);
  uint64_t v13 = v7;
  uint64_t v11 = a2(v2, &v13);
  sub_1B2DD5028(v2, (uint64_t *)&unk_1EB7D9590);
  return v11;
}

uint64_t sub_1B2DD445C(uint64_t *a1)
{
  return SubgraphView.entityIds(referredBy:)(a1);
}

uint64_t SubgraphView.filteredView(with:)()
{
  sub_1B2E80BE8();
  sub_1B299D31C();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = sub_1B29A1030(v2, v9);
  v4(v3);
  type metadata accessor for SubgraphFilteredView();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v0;
  uint64_t v6 = sub_1B2DD5C88(v5, OBJC_IVAR____TtC20IntelligencePlatform20SubgraphFilteredView_filter);
  v7(v6);
  swift_retain();
  return v5;
}

uint64_t type metadata accessor for SubgraphFilteredView()
{
  uint64_t result = qword_1E9C443D0;
  if (!qword_1E9C443D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SubgraphView.filteredContext(with:)()
{
  sub_1B2E80BE8();
  sub_1B299D31C();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = sub_1B29A1030(v2, v9);
  v4(v3);
  type metadata accessor for SubgraphFilteredView();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v0;
  uint64_t v6 = sub_1B2DD5C88(v5, OBJC_IVAR____TtC20IntelligencePlatform20SubgraphFilteredView_filter);
  v7(v6);
  sub_1B29A3EB4((uint64_t *)&unk_1E9C443A8);
  swift_allocObject();
  swift_retain();
  return sub_1B29C83C8(v5);
}

uint64_t SubgraphFilteredView.subgraphView.getter()
{
  return swift_retain();
}

uint64_t SubgraphFilteredView.filter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC20IntelligencePlatform20SubgraphFilteredView_filter;
  sub_1B2E80BE8();
  sub_1B2999864();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a1, v3, v4);
}

uint64_t SubgraphFilteredView.deinit()
{
  swift_release();
  sub_1B2E80BE8();
  sub_1B2999864();
  uint64_t v1 = sub_1B2DD5CCC();
  v2(v1);
  return v0;
}

uint64_t SubgraphFilteredView.__deallocating_deinit()
{
  swift_release();
  sub_1B2E80BE8();
  sub_1B2999864();
  uint64_t v0 = sub_1B2DD5CCC();
  v1(v0);

  return swift_deallocClassInstance();
}

uint64_t SubgraphFilteredView.enumerateTriples(for:block:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B299F280();
  uint64_t v12 = *a1;
  uint64_t v9 = sub_1B2DD5CEC();
  sub_1B2999864();
  sub_1B299ADCC();
  v10();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v3, 0, 1, v9);
  sub_1B2DD2510(&v12, v3, a2, a3);
  return sub_1B2DD5028(v3, (uint64_t *)&unk_1EB7D9590);
}

void SubgraphFilteredView.enumerateTriples<A>(for:block:)()
{
  sub_1B299F300();
  sub_1B2DD5CB4();
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v7 = sub_1B299B0F0(v6);
  MEMORY[0x1F4188790](v7);
  sub_1B29A0658();
  uint64_t v8 = sub_1B2DD5CEC();
  sub_1B2999864();
  sub_1B299ADCC();
  v9();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5, 0, 1, v8);
  sub_1B2DD29F0(v4, v5, v3, v2, v1, v0);
  sub_1B2DD5028(v5, (uint64_t *)&unk_1EB7D9590);
  sub_1B29998C8();
}

uint64_t SubgraphFilteredView.enumerateTriples(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v6 = sub_1B299B0F0(v5);
  MEMORY[0x1F4188790](v6);
  sub_1B299B3C8();
  uint64_t v7 = sub_1B2DD5CEC();
  sub_1B2999864();
  sub_1B299ADCC();
  v8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2, 0, 1, v7);
  sub_1B2DD3250(v2, a1, a2);
  return sub_1B2DD5028(v2, (uint64_t *)&unk_1EB7D9590);
}

uint64_t sub_1B2DD4AB8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  _OWORD v3[2] = a1;
  return SubgraphFilteredView.enumerateTriples(block:)((uint64_t)sub_1B2DD4FEC, (uint64_t)v3);
}

uint64_t sub_1B2DD4B00(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return SubgraphFilteredView.enumerateTriples(for:block:)(a1, a2, a3);
}

void sub_1B2DD4B24()
{
}

uint64_t SubgraphFilteredView.entityIds(referringTo:)(uint64_t *a1)
{
  return sub_1B2DD4BE8(a1, (uint64_t (*)(uint64_t, uint64_t *))sub_1B2DD368C);
}

uint64_t sub_1B2DD4B98(uint64_t *a1)
{
  return SubgraphFilteredView.entityIds(referringTo:)(a1);
}

uint64_t SubgraphFilteredView.entityIds(referredBy:)(uint64_t *a1)
{
  return sub_1B2DD4BE8(a1, (uint64_t (*)(uint64_t, uint64_t *))sub_1B2DD3C08);
}

uint64_t sub_1B2DD4BE8(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t *))
{
  uint64_t v5 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v6 = sub_1B299B0F0(v5);
  MEMORY[0x1F4188790](v6);
  sub_1B299B3C8();
  uint64_t v7 = *a1;
  uint64_t v8 = sub_1B2DD5CEC();
  sub_1B2999864();
  sub_1B299ADCC();
  v9();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2, 0, 1, v8);
  uint64_t v12 = v7;
  uint64_t v10 = a2(v2, &v12);
  sub_1B2DD5028(v2, (uint64_t *)&unk_1EB7D9590);
  return v10;
}

uint64_t sub_1B2DD4CF4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B2DD4E80(qword_1E9C38440, a2, (void (*)(uint64_t))type metadata accessor for SubgraphView);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for SubgraphView()
{
  return self;
}

uint64_t sub_1B2DD4D70(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B2DD4E80(&qword_1E9C38438, a2, (void (*)(uint64_t))type metadata accessor for SubgraphView);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2DD4DC8(uint64_t a1)
{
  uint64_t result = sub_1B2DD4E80(&qword_1E9C443B8, 255, (void (*)(uint64_t))type metadata accessor for SubgraphFilteredView);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2DD4E24(uint64_t a1)
{
  uint64_t result = sub_1B2DD4E80((unint64_t *)&unk_1E9C443C0, 255, (void (*)(uint64_t))type metadata accessor for SubgraphFilteredView);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2DD4E80(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2DD4EC8(uint64_t *a1)
{
  return SubgraphFilteredView.entityIds(referredBy:)(a1);
}

uint64_t method lookup function for SubgraphView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SubgraphView);
}

uint64_t dispatch thunk of SubgraphView.__allocating_init(accessAssertion:database:tableName:batchSize:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1B2DD4F2C()
{
  return type metadata accessor for SubgraphFilteredView();
}

uint64_t sub_1B2DD4F34()
{
  uint64_t result = sub_1B2E80BE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SubgraphFilteredView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SubgraphFilteredView);
}

uint64_t sub_1B2DD4FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2DC06EC(a1, a2, a3) & 1;
}

uint64_t sub_1B2DD5008@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2DD3E74(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1B2DD5028(uint64_t a1, uint64_t *a2)
{
  sub_1B29A3EB4(a2);
  sub_1B2999864();
  uint64_t v3 = sub_1B2DD5CCC();
  v4(v3);
  return a1;
}

uint64_t sub_1B2DD5074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2DD50DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2DD37DC(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1B2DD5100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2DD5168(uint64_t a1)
{
  uint64_t v3 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  sub_1B299D2A8(v3);
  sub_1B2DD5CA4();
  return sub_1B2DD337C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + v4);
}

uint64_t sub_1B2DD51DC(uint64_t a1)
{
  return sub_1B2DD137C(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t *, void))(v1 + 32));
}

uint64_t sub_1B2DD51FC()
{
  return sub_1B29A0A90(v0, 32);
}

uint64_t sub_1B2DD5208(uint64_t (*a1)(uint64_t *), uint64_t a2)
{
  return sub_1B2DD1674(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1B2DD5224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B2DD5294()
{
  return sub_1B2E80E48();
}

uint64_t sub_1B2DD5338()
{
  return sub_1B2E80E48();
}

uint64_t sub_1B2DD53DC()
{
  uint64_t result = sub_1B2E80E48();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B2DD5440()
{
  return sub_1B2E80E48();
}

uint64_t sub_1B2DD54E4()
{
  return sub_1B2DD5440();
}

unint64_t sub_1B2DD5500()
{
  unint64_t result = qword_1E9C44448;
  if (!qword_1E9C44448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44448);
  }
  return result;
}

uint64_t sub_1B2DD5550()
{
  uint64_t v1 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  sub_1B299D2A8(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1B2E80BE8();
  if (!sub_1B2DD5BF4(v4))
  {
    sub_1B299998C();
    uint64_t v5 = sub_1B299BDB4();
    v6(v5);
  }
  sub_1B2DD5CDC();

  return MEMORY[0x1F4186498](v0, v7 + 8, v3 | 7);
}

void sub_1B2DD560C()
{
  uint64_t v0 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  sub_1B299D2A8(v0);
  sub_1B2DD5CA4();
  sub_1B2DD2F30();
}

uint64_t sub_1B2DD5690()
{
  uint64_t v1 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  sub_1B299D2A8(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1B2E80BE8();
  if (!sub_1B2DD5BF4(v4))
  {
    sub_1B299998C();
    uint64_t v5 = sub_1B299BDB4();
    v6(v5);
  }
  sub_1B2DD5CDC();
  unint64_t v8 = ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v8, v3 | 7);
}

uint64_t sub_1B2DD5764(uint64_t a1)
{
  return sub_1B2DD58A8(a1, sub_1B2DD2C50);
}

uint64_t sub_1B2DD5790(uint64_t a1)
{
  return sub_1B2DD18CC(a1, *(void *)(v1 + 32), *(uint64_t (**)(uint64_t, uint64_t *))(v1 + 40), *(void *)(v1 + 48), *(uint64_t (**)(uint64_t *, uint64_t (*)(uint64_t (*)(uint64_t *)), uint64_t))(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16));
}

uint64_t sub_1B2DD57B8()
{
  uint64_t v1 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  sub_1B299D2A8(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1B2E80BE8();
  if (!sub_1B2DD5BF4(v4))
  {
    sub_1B299998C();
    uint64_t v5 = sub_1B299BDB4();
    v6(v5);
  }
  sub_1B2DD5CDC();

  return MEMORY[0x1F4186498](v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_1B2DD587C(uint64_t a1)
{
  return sub_1B2DD58A8(a1, (uint64_t (*)(uint64_t, void, void, uint64_t, void, void))sub_1B2DD2670);
}

uint64_t sub_1B2DD58A8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, uint64_t, void, void))
{
  uint64_t v5 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  sub_1B299D2A8(v5);
  sub_1B2DD5CA4();
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1B2DD5938(uint64_t a1, void (*a2)(uint64_t (*)(uint64_t a1), void *), uint64_t a3)
{
  return sub_1B2DD1D9C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24)) & 1;
}

uint64_t sub_1B2DD5958()
{
  return sub_1B29A0A90(v0, 17);
}

uint64_t sub_1B2DD5964()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B2DD599C(uint64_t a1)
{
  return sub_1B2DD1EAC(a1, *(void *)(v1 + 16), *(uint64_t (**)(_OWORD *))(v1 + 24)) & 1;
}

uint64_t sub_1B2DD59C0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t *a4)
{
  return sub_1B2E80E48();
}

uint64_t sub_1B2DD5A5C()
{
  return sub_1B2E80E48();
}

uint64_t sub_1B2DD5B00()
{
  return sub_1B2DD5A5C();
}

uint64_t sub_1B2DD5B1C()
{
  return sub_1B2DD5338();
}

uint64_t sub_1B2DD5B38(uint64_t a1)
{
  return sub_1B2DD59C0(a1, v1, &qword_1E9C44488, &qword_1E9C44490);
}

uint64_t sub_1B2DD5B64(uint64_t a1)
{
  return sub_1B2DD59C0(a1, v1, &qword_1E9C37D30, &qword_1E9C37D38);
}

uint64_t sub_1B2DD5B90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B2DD53DC();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1B2DD5BBC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B2DD5B90(a1);
}

uint64_t sub_1B2DD5BD8()
{
  return sub_1B2DD5294();
}

uint64_t sub_1B2DD5BF4(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, a1);
}

uint64_t sub_1B2DD5C14()
{
  return sub_1B2E816E8();
}

uint64_t sub_1B2DD5C30()
{
  return sub_1B2E80BF8();
}

uint64_t sub_1B2DD5C4C()
{
  return sub_1B2E80E28();
}

uint64_t sub_1B2DD5C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return a1 + a2;
}

uint64_t sub_1B2DD5CCC()
{
  return v0;
}

uint64_t sub_1B2DD5CEC()
{
  return sub_1B2E80BE8();
}

uint64_t sub_1B2DD5D10()
{
  return swift_retain();
}

uint64_t sub_1B2DD5D28()
{
  return v0;
}

uint64_t static SystemPreferencesImpl.personalizationDataCollectionAllowed()()
{
  return sub_1B2DD5D60() & 1;
}

uint64_t sub_1B2DD5D60()
{
  if (qword_1E9C38400 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v0 = byte_1E9C389D8;
  uint64_t v1 = qword_1E9C389E0;
  uint64_t v2 = unk_1E9C389E8;
  uint64_t v3 = (void *)qword_1E9C389F0;
  swift_bridgeObjectRetain();
  id v4 = v3;
  uint64_t v5 = (void *)MEMORY[0x1B3EB2480]();
  char v6 = sub_1B299C144(v0, v1, v2, v4);

  swift_bridgeObjectRelease();
  return v6 & 1;
}

void static SystemPreferencesImpl.updatePersonalizationDataCollectionAllowed(_:)()
{
  sub_1B299C02C();
  sub_1B2DD5EE0();
  id v0 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v0, sel_postNotificationName_object_, @"com.apple.intelligenceplatform.personalizationDataCollectionAllowed.changed", 0);
}

uint64_t sub_1B2DD5EE0()
{
  if (qword_1E9C38400 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_beginAccess();
  uint64_t v1 = (void *)MEMORY[0x1B3EB2480](v0);
  sub_1B2AB41FC((uint64_t)&byte_1E9C389D8);
  return swift_endAccess();
}

id SystemPreferencesImpl.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id SystemPreferencesImpl.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SystemPreferencesImpl.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SystemPreferencesImpl()
{
  return self;
}

uint64_t sub_1B2DD608C()
{
  unsigned __int8 v0 = objc_msgSend(self, sel_isInternalDevice);
  sub_1B299C02C();
  uint64_t result = static NSUserDefaults.makeIntelligencePlatformUserDefaults()();
  byte_1E9C389D8 = v0;
  qword_1E9C389E0 = 0xD000000000000024;
  unk_1E9C389E8 = 0x80000001B2EA40C0;
  qword_1E9C389F0 = result;
  return result;
}

uint64_t sub_1B2DD6100()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EF27C0;
  *(void *)(v0 + 32) = &unk_1F0AC1460;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EC01E0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EF27D0;
  *(void *)(v0 + 72) = 0x80000001B2EA4180;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29A34F8();
  sub_1B29B2124(v1, v2);
  return v0;
}

void sub_1B2DD6190(uint64_t a1@<X1>, char *a2@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 64);
  if (((1 << v2) & 0x1DE) != 0) {
    goto LABEL_2;
  }
  if (!*(unsigned char *)(a1 + 64))
  {
    char v2 = 6;
LABEL_2:
    *a2 = v2;
    return;
  }
  sub_1B29D53EC();
  swift_allocError();
  *(void *)uint64_t v3 = 0xD000000000000038;
  *(void *)(v3 + 8) = 0x80000001B2EA4140;
  *(unsigned char *)(v3 + 16) = 2;
  swift_willThrow();
}

uint64_t sub_1B2DD622C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  if (((1 << *(unsigned char *)(a6 + 64)) & 0x1CA) == 0)
  {
LABEL_31:
    char v28 = 0;
    *(void *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 88) = xmmword_1B2EC01D0;
    *(unsigned char *)(a1 + 104) = 0;
    return v28 & 1;
  }
  uint64_t v11 = (void *)(a6 + 32);
  sub_1B299E198();
  if (*(void *)(a6 + 32))
  {
    uint64_t v12 = sub_1B29B2540(115, 0xE100000000000000);
    swift_endAccess();
    if (v12)
    {
      swift_beginAccess();
      if (*(void *)(*(void *)(v12 + 16) + 16))
      {
        uint64_t v13 = swift_bridgeObjectRetain();
LABEL_6:
        uint64_t v14 = sub_1B2DDC660(v13);
        swift_release();
        goto LABEL_9;
      }
      if (!*(unsigned char *)(v12 + 32))
      {
        uint64_t v13 = MEMORY[0x1E4FBC860];
        goto LABEL_6;
      }
      swift_release();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v14 = 0;
LABEL_9:
  sub_1B299E198();
  if (!*v11)
  {
    swift_endAccess();
LABEL_18:
    uint64_t v15 = 0;
    goto LABEL_19;
  }
  uint64_t v15 = sub_1B29B2540(112, 0xE100000000000000);
  if (!v15)
  {
    swift_endAccess();
    goto LABEL_19;
  }
  swift_endAccess();
  swift_beginAccess();
  uint64_t v16 = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v16 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v15 = sub_1B2DDC660(v16);
LABEL_19:
  sub_1B299E198();
  if (!*v11 || (uint64_t v17 = sub_1B29B2540(111, 0xE100000000000000)) == 0)
  {
    swift_endAccess();
LABEL_26:
    if (qword_1EB7E30F0 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1B2E81FB8();
    sub_1B29A4B98(v29, (uint64_t)qword_1EB7E30D8);
    uint64_t v30 = sub_1B2E81F98();
    os_log_type_t v31 = sub_1B2E82DB8();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_1B2996000, v30, v31, "Text operator is given no object parameter.", v32, 2u);
      MEMORY[0x1B3EB30C0](v32, -1, -1);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  uint64_t v18 = v17;
  swift_endAccess();
  swift_beginAccess();
  uint64_t v19 = *(void *)(v18 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v19 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  uint64_t v20 = sub_1B2DDC660(v19);
  swift_beginAccess();
  uint64_t v21 = sub_1B29B2544(0x65707954737466, 0xE700000000000000);
  if (v22)
  {
    uint64_t v23 = v21;
    uint64_t v24 = v22;
    swift_endAccess();
    v25._countAndFlagsBits = v23;
    v25._object = v24;
    TriplesQuery.FullTextSearchType.init(rawValue:)(v25);
    uint64_t v26 = v75;
    if (v75 == 6)
    {
      swift_bridgeObjectRelease();
      sub_1B29D53EC();
      swift_allocError();
      *(void *)uint64_t v27 = 0xD000000000000027;
      *(void *)(v27 + 8) = 0x80000001B2EA4110;
      *(unsigned char *)(v27 + 16) = 1;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v28 & 1;
    }
  }
  else
  {
    swift_endAccess();
    uint64_t v26 = 3;
  }
  unsigned __int8 v34 = 96;
  if (v14 | v15)
  {
    sub_1B29A3EB4((uint64_t *)&unk_1EB7D9AE0);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1B2EBFA40;
    *(void *)(v35 + 32) = 0;
    *(void *)(v35 + 40) = v14;
    *(void *)(v35 + 48) = 0;
    *(void *)(v35 + 56) = v15;
    *(_OWORD *)(v35 + 64) = 0u;
    *(_OWORD *)(v35 + 80) = 0u;
    *(_OWORD *)(v35 + 96) = 0u;
    *(_OWORD *)(v35 + 112) = 0u;
    *(void *)(v35 + 128) = 0;
    *(unsigned char *)(v35 + 136) = 32;
    *(void *)(v35 + 144) = v20;
    *(void *)(v35 + 152) = v26;
    *(_OWORD *)(v35 + 160) = 0u;
    *(_OWORD *)(v35 + 176) = 0u;
    *(_OWORD *)(v35 + 192) = 0u;
    *(_OWORD *)(v35 + 208) = 0u;
    *(_OWORD *)(v35 + 224) = 0u;
    *(void *)(v35 + 240) = 0;
    *(unsigned char *)(v35 + 248) = 96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    unsigned __int8 v34 = 0;
    uint64_t v26 = v35;
  }
  uint64_t v36 = (long long *)(a2 + *(int *)(type metadata accessor for QueryContext() + 32));
  unint64_t v37 = *((void *)v36 + 11);
  char v38 = *((unsigned char *)v36 + 104);
  if (v37 >> 1 != 0xFFFFFFFF || (*((unsigned char *)v36 + 104) & 0x1E) != 0)
  {
    uint64_t v45 = *((void *)v36 + 12);
    uint64_t v46 = *((void *)v36 + 10);
    long long v47 = v36[1];
    long long v66 = *v36;
    long long v67 = v47;
    long long v48 = v36[3];
    long long v68 = v36[2];
    long long v69 = v48;
    long long v70 = v36[4];
    uint64_t v71 = v46;
    unint64_t v72 = v37;
    uint64_t v73 = v45;
    char v74 = v38;
    v58[0] = v20;
    v58[1] = v26;
    long long v59 = 0u;
    long long v60 = 0u;
    long long v61 = 0u;
    long long v62 = 0u;
    long long v63 = 0u;
    uint64_t v64 = 0;
    unsigned __int8 v65 = v34;
    unsigned __int8 v57 = 1;
    sub_1B2D83BA0((uint64_t)v58, &v57, (uint64_t)&v75);
    sub_1B29A34F8();
    sub_1B2A34A94(v49, v50, v51, v52, v53, v54, v55, v56, 0, 0, 0, 0, 0, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v7) {
      return v28 & 1;
    }
    uint64_t v20 = v75;
    long long v40 = v76;
    long long v39 = v77;
    long long v41 = v78;
    long long v42 = v79;
    long long v43 = v80;
    long long v44 = v81;
    unsigned __int8 v34 = v82;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v39 = 0uLL;
    long long v40 = (unint64_t)v26;
    long long v41 = 0uLL;
    long long v42 = 0uLL;
    long long v43 = 0uLL;
    long long v44 = 0uLL;
  }
  *(void *)a1 = v20;
  *(_OWORD *)(a1 + 8) = v40;
  *(_OWORD *)(a1 + 24) = v39;
  *(_OWORD *)(a1 + 40) = v41;
  *(_OWORD *)(a1 + 56) = v42;
  *(_OWORD *)(a1 + 72) = v43;
  *(_OWORD *)(a1 + 88) = v44;
  char v28 = 1;
  *(unsigned char *)(a1 + 104) = v34;
  return v28 & 1;
}

uint64_t sub_1B2DD67C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ResultGraph();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = sub_1B2E82148();
  *(void *)(v4 + 24) = v5;
  char v7 = 0;
  sub_1B2D97CC8(a3, &v7);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for Text()
{
  return self;
}

uint64_t sub_1B2DD687C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1B2E83A78();
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  uint64_t v27 = a1 & 0xFFFFFFFFFFFFLL;
  uint64_t v28 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    uint64_t v25 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v26 = a2 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (void (**)(char *, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i < v8; i += v12)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        sub_1B2E831E8();
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          sub_1B2DD7154();
        }
        else if ((a1 & 0x1000000000000000) == 0)
        {
          sub_1B2E83298();
        }
        sub_1B2E832A8();
      }
      uint64_t v12 = v11;
      sub_1B2E83A88();
      char v13 = sub_1B2E83A58();
      (*v9)(v7, v4);
      if ((v13 & 1) == 0) {
        sub_1B2E82468();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = v30;
    unint64_t v14 = v31;
  }
  else
  {
    uint64_t v15 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  uint64_t v27 = v15 & 0xFFFFFFFFFFFFLL;
  uint64_t v28 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) != 0) {
    uint64_t v16 = HIBYTE(v14) & 0xF;
  }
  else {
    uint64_t v16 = v15 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    uint64_t v26 = v14 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    uint64_t v17 = 0;
    do
    {
      if ((v14 & 0x1000000000000000) != 0)
      {
        unsigned int v18 = sub_1B2E831E8();
      }
      else
      {
        if ((v14 & 0x2000000000000000) != 0)
        {
          sub_1B2DD7154();
        }
        else if ((v15 & 0x1000000000000000) == 0)
        {
          sub_1B2E83298();
        }
        unsigned int v18 = sub_1B2E832A8();
      }
      if (v18 > 0x7F)
      {
        int v21 = (v18 & 0x3F) << 8;
        if (v18 >= 0x800)
        {
          int v22 = (v21 | (v18 >> 6) & 0x3F) << 8;
          int v23 = (((v22 | (v18 >> 12) & 0x3F) << 8) | (v18 >> 18)) - 2122219023;
          unsigned int v20 = (v22 | (v18 >> 12)) + 8487393;
          if (HIWORD(v18)) {
            unsigned int v20 = v23;
          }
        }
        else
        {
          unsigned int v20 = (v21 | (v18 >> 6)) + 33217;
        }
      }
      else
      {
        unsigned int v20 = v18 + 1;
      }
      v17 += v19;
      uint64_t v29 = (v20 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v20) >> 3))));
      MEMORY[0x1B3EB0C40](&v29);
      sub_1B2E82518();
      swift_bridgeObjectRelease();
    }
    while (v17 < v16);
    swift_bridgeObjectRelease_n();
    return v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1B2DD6BA4(uint64_t a1, uint64_t a2)
{
  return sub_1B2DD6BBC(a1, a2);
}

uint64_t sub_1B2DD6BB0(uint64_t a1, uint64_t a2)
{
  return sub_1B2DD6BBC(a1, a2);
}

uint64_t sub_1B2DD6BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2E800E8();
  sub_1B299D278();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)MEMORY[0x1B3EB2480](v8);
  v15[0] = a1;
  v15[1] = a2;
  sub_1B2E800C8();
  sub_1B29C3640();
  uint64_t v12 = sub_1B2E82FD8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v4);
  v15[0] = v12;
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2A20660();
  uint64_t v13 = sub_1B2E822D8();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1B2DD6CF0(uint64_t a1)
{
  char v2 = (void *)MEMORY[0x1B3EB2480]();
  sub_1B29C3640();
  uint64_t v3 = sub_1B2E82FE8();
  uint64_t v27 = *(void *)(v3 + 16);
  if (!v27)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v25 = v2;
  uint64_t v4 = 0;
  uint64_t v26 = v3 + 32;
  uint64_t v5 = a1 + 56;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v7 = (uint64_t *)(v26 + 16 * v4);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    if (*(void *)(a1 + 16))
    {
      sub_1B2E83988();
      swift_bridgeObjectRetain();
      sub_1B2E82498();
      uint64_t v10 = sub_1B2E839E8();
      uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
      unint64_t v12 = v10 & ~v11;
      if ((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
      {
        uint64_t v13 = *(void *)(a1 + 48);
        unint64_t v14 = (void *)(v13 + 16 * v12);
        BOOL v15 = *v14 == v9 && v14[1] == v8;
        if (v15 || (sub_1B2E837A8() & 1) != 0)
        {
LABEL_10:
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
        uint64_t v18 = ~v11;
        for (unint64_t i = v12 + 1; ; unint64_t i = v20 + 1)
        {
          uint64_t v20 = i & v18;
          if (((*(void *)(v5 + (((i & v18) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v18)) & 1) == 0) {
            break;
          }
          int v21 = (void *)(v13 + 16 * v20);
          BOOL v22 = *v21 == v9 && v21[1] == v8;
          if (v22 || (sub_1B2E837A8() & 1) != 0) {
            goto LABEL_10;
          }
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1B29A3514();
    }
    unint64_t v16 = *(void *)(v6 + 16);
    if (v16 >= *(void *)(v6 + 24) >> 1) {
      sub_1B29BFD80();
    }
    *(void *)(v6 + 16) = v16 + 1;
    uint64_t v17 = v6 + 16 * v16;
    *(void *)(v17 + 32) = v9;
    *(void *)(v17 + 40) = v8;
LABEL_17:
    ++v4;
  }
  while (v4 != v27);
  swift_bridgeObjectRelease();
  char v2 = v25;
LABEL_28:
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2A20660();
  uint64_t v23 = sub_1B2E822D8();
  swift_release();
  return v23;
}

uint64_t sub_1B2DD6F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2E800E8();
  sub_1B299D278();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)MEMORY[0x1B3EB2480](v8);
  v24[0] = a1;
  v24[1] = a2;
  sub_1B2E800D8();
  sub_1B29C3640();
  uint64_t v12 = sub_1B2E82FD8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v4);
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    unint64_t v14 = (uint64_t *)(v12 + 40);
    uint64_t v15 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v17 = *(v14 - 1);
      uint64_t v16 = *v14;
      uint64_t v18 = HIBYTE(*v14) & 0xF;
      if ((*v14 & 0x2000000000000000) == 0) {
        uint64_t v18 = v17 & 0xFFFFFFFFFFFFLL;
      }
      if (v18)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24[0] = v15;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1B29A3514();
          uint64_t v15 = v24[0];
        }
        unint64_t v20 = *(void *)(v15 + 16);
        if (v20 >= *(void *)(v15 + 24) >> 1)
        {
          sub_1B29BFD80();
          uint64_t v15 = v24[0];
        }
        *(void *)(v15 + 16) = v20 + 1;
        uint64_t v21 = v15 + 16 * v20;
        *(void *)(v21 + 32) = v17;
        *(void *)(v21 + 40) = v16;
      }
      v14 += 2;
      --v13;
    }
    while (v13);
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  v24[0] = v15;
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2A20660();
  uint64_t v22 = sub_1B2E822D8();
  swift_release();
  return v22;
}

uint64_t sub_1B2DD7154()
{
  uint64_t v2 = *(void *)(v1 - 136);
  *(void *)(v1 - 112) = v0;
  *(void *)(v1 - 104) = v2;
  return v1 - 112;
}

uint64_t sub_1B2DD7168()
{
  sub_1B29C3640();
  sub_1B299E1B8();
  uint64_t v0 = sub_1B299E1B8();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1B2DD7248(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(unsigned __int8 **)a1;
  int v23 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v5 = *(char **)(a1 + 16);
  LODWORD(v6) = *(unsigned __int8 *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  int v8 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E2738);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v9 + 16);
  long long v14 = 0uLL;
  if (v13)
  {
    v18[1] = v4;
    int v19 = (int)v6;
    unint64_t v20 = v5;
    int v21 = v8;
    unint64_t v22 = v7;
    uint64_t v4 = (unsigned __int8 *)(v9 + 32);
    swift_bridgeObjectRetain_n();
    uint64_t v5 = "";
    uint64_t v6 = "racter";
    while (2)
    {
      int v15 = *v4++;
      unint64_t v7 = 0xEE007372657A696CLL;
      switch(v15)
      {
        case 1:
          unint64_t v7 = 0xE900000000000065;
          goto LABEL_10;
        case 2:
          unint64_t v7 = 0xEF676E6973736563;
          goto LABEL_10;
        case 3:
          unint64_t v7 = 0x80000001B2E919E0;
          goto LABEL_10;
        case 4:
          unint64_t v7 = 0xEA0000000000657ALL;
          goto LABEL_10;
        case 5:
          unint64_t v7 = 0xE700000000000000;
          goto LABEL_10;
        case 6:
          unint64_t v7 = 0x80000001B2E91A10;
          goto LABEL_10;
        case 7:
          swift_bridgeObjectRelease();
          goto LABEL_14;
        default:
LABEL_10:
          LOBYTE(v8) = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          if (v8)
          {
LABEL_14:
            sub_1B2DD83FC(a1);
            sub_1B2DD83FC(a1);
            uint64_t v17 = sub_1B2E806F8();
            _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 1, 1, v17);
            MorphunTokenizer.init(locale:overrideConfigOptions:)((uint64_t)v12, 0, (uint64_t *)&v24);
            sub_1B2DD8428();
            goto LABEL_15;
          }
          if (--v13) {
            continue;
          }
          sub_1B2DD83FC(a1);
          sub_1B2DD83FC(a1);
          sub_1B2DD8428();
          char v16 = v23;
          long long v14 = 0uLL;
          break;
      }
      break;
    }
  }
  else
  {
LABEL_15:
    char v16 = v23;
  }
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v16 & 1;
  *(void *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 24) = v6 & 1;
  *(void *)(a2 + 32) = v7;
  *(unsigned char *)(a2 + 40) = v8 & 1;
  *(void *)(a2 + 48) = v9;
  *(_OWORD *)(a2 + 56) = v14;
}

uint64_t sub_1B2DD7528(uint64_t a1, unint64_t a2)
{
  uint64_t v25 = *(void *)v2;
  int v35 = *(unsigned __int8 *)(v2 + 8);
  uint64_t v26 = *(void *)(v2 + 16);
  int v36 = *(unsigned __int8 *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRetain();
LABEL_7:
    uint64_t v15 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v15 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (!v15)
    {
      swift_bridgeObjectRelease();
      sub_1B2A1F13C();
      sub_1B299E4D4();
      *(void *)uint64_t v18 = 0xD000000000000018;
      *(void *)(v18 + 8) = 0x80000001B2EA42E0;
LABEL_22:
      *(unsigned char *)(v18 + 16) = 2;
      swift_willThrow();
      return a1;
    }
    v29[0] = a1;
    v29[1] = a2;
    uint64_t v27 = 32;
    unint64_t v28 = 0xE100000000000000;
    sub_1B29C3640();
    unint64_t v16 = *(void *)(sub_1B2E82FE8() + 16);
    if (v36)
    {
      if (v16 <= 0x40)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        uint64_t v17 = sub_1B2E824A8();
        if (v35)
        {
          if (v17 <= 1024) {
            return a1;
          }
        }
        else if (v25 >= v17)
        {
          return a1;
        }
        v29[0] = 0;
        v29[1] = 0xE000000000000000;
        sub_1B2E831F8();
        swift_bridgeObjectRelease();
        strcpy((char *)v29, "Query size: ");
        BYTE5(v29[1]) = 0;
        HIWORD(v29[1]) = -5120;
        uint64_t v20 = sub_1B2E824A8();
        swift_bridgeObjectRelease();
        uint64_t v27 = v20;
        sub_1B2E83748();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B29A3534();
        uint64_t v27 = v25;
        char v19 = v35;
        goto LABEL_21;
      }
    }
    else if (v26 >= (uint64_t)v16)
    {
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    v29[0] = 0;
    v29[1] = 0xE000000000000000;
    sub_1B2E831F8();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    uint64_t v27 = v16;
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B29A3534();
    uint64_t v27 = v26;
    char v19 = v36;
LABEL_21:
    LOBYTE(v28) = v19;
    sub_1B29A3EB4(&qword_1E9C3D1C0);
    sub_1B2E823E8();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    uint64_t v21 = v29[0];
    uint64_t v22 = v29[1];
    sub_1B2A1F13C();
    sub_1B299E4D4();
    *(void *)uint64_t v18 = v21;
    *(void *)(v18 + 8) = v22;
    goto LABEL_22;
  }
  uint64_t v8 = *(void *)(v2 + 32);
  char v9 = *(unsigned char *)(v2 + 40);
  long long v24 = *(_OWORD *)(v2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  while (1)
  {
    char v11 = *(unsigned char *)(v6 + v10 + 32);
    v29[0] = v25;
    LOBYTE(v29[1]) = v35;
    v29[2] = v26;
    char v30 = v36;
    uint64_t v31 = v8;
    char v32 = v9;
    uint64_t v33 = v6;
    long long v34 = v24;
    LOBYTE(v27) = v11;
    uint64_t v12 = sub_1B2DD7C3C(a1, a2, (unsigned __int8 *)&v27);
    if (v3) {
      break;
    }
    a1 = v12;
    unint64_t v14 = v13;
    ++v10;
    swift_bridgeObjectRelease();
    a2 = v14;
    if (v7 == v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1B2DD7914(uint64_t a1, uint64_t a2)
{
  if (qword_1EB7E6280 != -1) {
    swift_once();
  }
  sub_1B2DD831C(a1, a2, 0x6C65646F6DLL, 0xE500000000000000, (void *)qword_1EB7E6340);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return sub_1B2DD80F0();
  }
  else
  {
    sub_1B2E831F8();
    sub_1B2E82518();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2A1F13C();
    sub_1B299E4D4();
    *(void *)uint64_t v6 = 0;
    *(void *)(v6 + 8) = 0xE000000000000000;
    *(unsigned char *)(v6 + 16) = 6;
    return swift_willThrow();
  }
}

void sub_1B2DD7A60(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)sub_1B2E82348();
  id v5 = objc_msgSend(a3, sel_encodeAsIDsFrom_, v4);

  sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7E2C40);
  unint64_t v6 = sub_1B2E82838();

  if (v6 >> 62) {
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      uint64_t v13 = MEMORY[0x1E4FBC860];
      sub_1B29C0178();
      if (v7 < 0) {
        break;
      }
      uint64_t v8 = 0;
      while (1)
      {
        id v9 = (v6 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1B3EB1A20](v8, v6) : *(id *)(v6 + 8 * v8 + 32);
        uint64_t v10 = v9;
        uint64_t v11 = (uint64_t)objc_msgSend(v9, sel_integerValue);

        if (v11 < (uint64_t)0xFFFFFFFF80000000) {
          break;
        }
        if (v11 > 0x7FFFFFFF) {
          goto LABEL_15;
        }
        unint64_t v12 = *(void *)(v13 + 16);
        if (v12 >= *(void *)(v13 + 24) >> 1) {
          sub_1B29C0178();
        }
        ++v8;
        *(void *)(v13 + 16) = v12 + 1;
        *(_DWORD *)(v13 + 4 * v12 + 32) = v11;
        if (v7 == v8) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1B2E83448();
      swift_bridgeObjectRelease();
      if (!v7) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B2DD7C3C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v8 = sub_1B2E800E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a3;
  uint64_t v13 = *(void *)(v3 + 56);
  switch(v12)
  {
    case 1:
      uint64_t v22 = sub_1B2E823F8();
      goto LABEL_12;
    case 2:
      swift_bridgeObjectRetain();
      return a1;
    case 3:
      uint64_t v22 = sub_1B2DD7168();
      goto LABEL_12;
    case 4:
      uint64_t v37 = a1;
      unint64_t v38 = a2;
      sub_1B29C3640();
      uint64_t v22 = sub_1B2E82FF8();
      goto LABEL_12;
    case 5:
      uint64_t v37 = 0x203E534F423CLL;
      unint64_t v38 = 0xE600000000000000;
      sub_1B2E82518();
      sub_1B2E82518();
      return v37;
    case 6:
      uint64_t v22 = sub_1B2DD6F70(a1, a2);
LABEL_12:
      a1 = v22;
      break;
    case 7:
      if (v13)
      {
        uint64_t v23 = sub_1B2DD83BC(*(void *)(v3 + 56));
        long long v24 = (void *)MEMORY[0x1B3EB2480](v23);
        uint64_t v25 = (void *)MEMORY[0x1B3EB2480]();
        swift_retain();
        uint64_t v26 = sub_1B2E81728();
        if (v4)
        {
          swift_release();
        }
        else
        {
          uint64_t v35 = sub_1B2D5413C(v26);
          swift_release();
          swift_release();
          uint64_t v37 = v35;
          sub_1B29A3EB4(&qword_1EB7E3B30);
          sub_1B2A20660();
          a1 = sub_1B2E822D8();
          swift_bridgeObjectRelease();
        }
        sub_1B2AD0AE0(v13);
      }
      else
      {
        sub_1B2A1F13C();
        swift_allocError();
        *(void *)uint64_t v34 = 0xD000000000000039;
        *(void *)(v34 + 8) = 0x80000001B2EA4300;
        *(unsigned char *)(v34 + 16) = 7;
        swift_willThrow();
      }
      break;
    default:
      sub_1B2DD6BB0(a1, a2);
      if (qword_1EB7E39C8 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1B2DD6CF0(qword_1EB7F3470);
      unint64_t v16 = v15;
      swift_bridgeObjectRelease();
      uint64_t v17 = sub_1B2DD687C(v14, v16);
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      id v20 = objc_allocWithZone(MEMORY[0x1E4F28BE8]);
      id v21 = sub_1B2DD8268(32);
      if (v4)
      {
      }
      else
      {
        uint64_t v27 = v21;
        if (v21)
        {
          uint64_t v28 = sub_1B2E82348();
          swift_bridgeObjectRetain();
          uint64_t v39 = sub_1B2E825B8();
          swift_bridgeObjectRelease();
          uint64_t v29 = (void *)sub_1B2E82348();
          char v30 = (void *)v28;
          id v31 = objc_msgSend(v27, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v28, 0, 0, v39, v29);

          uint64_t v17 = sub_1B2E82378();
          unint64_t v33 = v32;
          swift_bridgeObjectRelease();

          unint64_t v19 = v33;
        }
      }
      uint64_t v37 = v17;
      unint64_t v38 = v19;
      sub_1B2E800B8();
      sub_1B29C3640();
      a1 = sub_1B2E83008();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      swift_bridgeObjectRelease();
      break;
  }
  return a1;
}

unint64_t sub_1B2DD80F0()
{
  sub_1B29C3CA0(0, &qword_1E9C444C0);
  swift_bridgeObjectRetain();
  id v0 = sub_1B2DD81F4();
  if (v0)
  {
    unint64_t v1 = (unint64_t)v0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    unint64_t v1 = 0x80000001B2EA4270;
    sub_1B2A1F13C();
    sub_1B299E4D4();
    *(void *)uint64_t v2 = 0xD000000000000024;
    *(void *)(v2 + 8) = 0x80000001B2EA4270;
    *(unsigned char *)(v2 + 16) = 6;
    swift_willThrow();
  }
  return v1;
}

id sub_1B2DD81F4()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  unint64_t v1 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithModelPath_, v1);

  return v2;
}

id sub_1B2DD8268(uint64_t a1)
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  v6[0] = 0;
  id v2 = objc_msgSend(v1, sel_initWithTypes_error_, a1, v6);
  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1B2DD831C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  unint64_t v6 = (void *)sub_1B2E82348();
  uint64_t v7 = (void *)sub_1B2E82348();
  id v8 = objc_msgSend(a5, sel_pathForResource_ofType_, v6, v7);

  if (!v8) {
    return 0;
  }
  uint64_t v9 = sub_1B2E82378();

  return v9;
}

uint64_t sub_1B2DD83BC(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B2DD83FC(uint64_t a1)
{
  return a1;
}

uint64_t TransportationActivityEventType.init(modeOfTransportationEntityClass:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 24);
  static EntityClass.onFoot.getter();
  sub_1B299F258(v6, v7, v8, v9, v10, v11, v12, v13, v81, v89, v97, v105);
  BOOL v14 = v14 && v2 == v5;
  if (v14)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_8;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 0;
    goto LABEL_9;
  }
  static EntityClass.vehicle.getter();
  sub_1B299F258(v17, v18, v19, v20, v21, v22, v23, v24, v82, v90, v98, v106);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_17;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 1;
    goto LABEL_9;
  }
  static EntityClass.automobile.getter();
  sub_1B299F258(v26, v27, v28, v29, v30, v31, v32, v33, v83, v91, v99, v107);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    char v16 = 2;
    sub_1B299F268();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 2;
    goto LABEL_9;
  }
  static EntityClass.ship.getter();
  sub_1B299F258(v35, v36, v37, v38, v39, v40, v41, v42, v84, v92, v100, v108);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_32;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_32:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 3;
    goto LABEL_9;
  }
  static EntityClass.plane.getter();
  sub_1B299F258(v44, v45, v46, v47, v48, v49, v50, v51, v85, v93, v101, v109);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_40;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_40:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 4;
    goto LABEL_9;
  }
  static EntityClass.bicycle.getter();
  sub_1B299F258(v53, v54, v55, v56, v57, v58, v59, v60, v86, v94, v102, v110);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_48;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_48:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 5;
    goto LABEL_9;
  }
  static EntityClass.locomotiveTrain.getter();
  sub_1B299F258(v62, v63, v64, v65, v66, v67, v68, v69, v87, v95, v103, v111);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_56;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_56:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 6;
    goto LABEL_9;
  }
  static EntityClass.bus.getter();
  sub_1B299F258(v71, v72, v73, v74, v75, v76, v77, v78, v88, v96, v104, v112);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 7;
  }
  else
  {
    char v80 = sub_1B29B19FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v80) {
      char v16 = 7;
    }
    else {
      char v16 = 8;
    }
  }
LABEL_9:
  *a2 = v16;
  return result;
}

void TransportationActivityEventType.modeOfTransportationEntityClass.getter()
{
  switch(*v0)
  {
    case 1:
      static EntityClass.vehicle.getter();
      break;
    case 2:
      static EntityClass.automobile.getter();
      break;
    case 3:
      static EntityClass.ship.getter();
      break;
    case 4:
      static EntityClass.plane.getter();
      break;
    case 5:
      static EntityClass.bicycle.getter();
      break;
    case 6:
      static EntityClass.locomotiveTrain.getter();
      break;
    case 7:
      static EntityClass.bus.getter();
      break;
    default:
      static EntityClass.onFoot.getter();
      break;
  }
}

uint64_t TransportationActivityEventType.hash(into:)()
{
  return sub_1B2E83998();
}

BOOL static TransportationActivityEventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1B2DD87E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746F6F466E6FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C6369686576 && a2 == 0xE700000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x69626F6D6F747561 && a2 == 0xEA0000000000656CLL;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 1885956211 && a2 == 0xE400000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x656E616C70 && a2 == 0xE500000000000000;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x656C6379636962 && a2 == 0xE700000000000000;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x69746F6D6F636F6CLL && a2 == 0xEF6E696172546576;
              if (v11 || (sub_1B2E837A8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 7566690 && a2 == 0xE300000000000000)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                char v13 = sub_1B2E837A8();
                swift_bridgeObjectRelease();
                if (v13) {
                  return 7;
                }
                else {
                  return 8;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B2DD8B18(char a1)
{
  uint64_t result = 0x746F6F466E6FLL;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1768449398;
      goto LABEL_7;
    case 2:
      uint64_t result = 0x69626F6D6F747561;
      break;
    case 3:
      uint64_t result = 1885956211;
      break;
    case 4:
      uint64_t result = 0x656E616C70;
      break;
    case 5:
      unsigned int v3 = 2036558178;
LABEL_7:
      uint64_t result = v3 | 0x656C6300000000;
      break;
    case 6:
      uint64_t result = 0x69746F6D6F636F6CLL;
      break;
    case 7:
      uint64_t result = 7566690;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2DD8C0C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD9764();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DD8C48(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD9764();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DD8C84(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD9680();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DD8CC0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD9680();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DD8CFC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD95E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DD8D38(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD95E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DD8D74()
{
  return sub_1B2DD8B18(*v0);
}

uint64_t sub_1B2DD8D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DD87E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DD8DA4(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD959C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DD8DE0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD959C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DD8E1C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD9634();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DD8E58(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD9634();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DD8E94(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD97FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DD8ED0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD97FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DD8F0C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD96CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DD8F48(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD96CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DD8F84(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD9718();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DD8FC0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD9718();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DD8FFC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD97B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DD9038(uint64_t a1)
{
  unint64_t v2 = sub_1B2DD97B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TransportationActivityEventType.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C444C8);
  sub_1B299D278();
  uint64_t v63 = v4;
  uint64_t v64 = v3;
  MEMORY[0x1F4188790](v3);
  sub_1B299B6D0();
  uint64_t v62 = v5;
  sub_1B29A3EB4(&qword_1E9C444D0);
  sub_1B299D278();
  uint64_t v60 = v7;
  uint64_t v61 = v6;
  MEMORY[0x1F4188790](v6);
  sub_1B2AC9E30(v8, v43);
  sub_1B29A3EB4(&qword_1E9C444D8);
  sub_1B299D278();
  uint64_t v57 = v10;
  uint64_t v58 = v9;
  MEMORY[0x1F4188790](v9);
  sub_1B299B6D0();
  uint64_t v56 = v11;
  sub_1B29A3EB4(&qword_1E9C444E0);
  sub_1B299D278();
  uint64_t v54 = v13;
  uint64_t v55 = v12;
  MEMORY[0x1F4188790](v12);
  sub_1B299B6D0();
  uint64_t v53 = v14;
  sub_1B29A3EB4(&qword_1E9C444E8);
  sub_1B299D278();
  uint64_t v51 = v16;
  uint64_t v52 = v15;
  MEMORY[0x1F4188790](v15);
  sub_1B299B6D0();
  uint64_t v50 = v17;
  sub_1B29A3EB4(&qword_1E9C444F0);
  sub_1B299D278();
  uint64_t v48 = v19;
  uint64_t v49 = v18;
  MEMORY[0x1F4188790](v18);
  sub_1B299B6D0();
  uint64_t v47 = v20;
  uint64_t v46 = sub_1B29A3EB4(&qword_1E9C444F8);
  sub_1B299D278();
  uint64_t v45 = v21;
  MEMORY[0x1F4188790](v22);
  sub_1B299E4A0();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = sub_1B29A3EB4(&qword_1E9C44500);
  sub_1B299D278();
  uint64_t v44 = v27;
  MEMORY[0x1F4188790](v28);
  sub_1B299E4A0();
  uint64_t v31 = v30 - v29;
  sub_1B29A3EB4(&qword_1E9C44508);
  sub_1B299D278();
  uint64_t v65 = v32;
  MEMORY[0x1F4188790](v33);
  sub_1B299E4A0();
  uint64_t v36 = v35 - v34;
  uint64_t v37 = *v1;
  uint64_t v38 = a1[3];
  sub_1B29AEC7C(a1, v38);
  sub_1B2DD959C();
  sub_1B2E83A38();
  switch(v37)
  {
    case 1:
      sub_1B2DD97B0();
      sub_1B29A239C();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v25, v46);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v36, v38);
    case 2:
      sub_1B2DD9764();
      uint64_t v39 = v47;
      sub_1B29A239C();
      uint64_t v41 = v48;
      uint64_t v40 = v49;
      goto LABEL_10;
    case 3:
      sub_1B2DD9718();
      uint64_t v39 = v50;
      sub_1B29A239C();
      uint64_t v41 = v51;
      uint64_t v40 = v52;
      goto LABEL_10;
    case 4:
      sub_1B2DD96CC();
      uint64_t v39 = v53;
      sub_1B29A239C();
      uint64_t v41 = v54;
      uint64_t v40 = v55;
      goto LABEL_10;
    case 5:
      sub_1B2DD9680();
      uint64_t v39 = v56;
      sub_1B29A239C();
      uint64_t v41 = v57;
      uint64_t v40 = v58;
      goto LABEL_10;
    case 6:
      sub_1B2DD9634();
      uint64_t v39 = v59;
      sub_1B29A239C();
      uint64_t v41 = v60;
      uint64_t v40 = v61;
      goto LABEL_10;
    case 7:
      sub_1B2DD95E8();
      uint64_t v39 = v62;
      sub_1B29A239C();
      uint64_t v41 = v63;
      uint64_t v40 = v64;
LABEL_10:
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
      break;
    default:
      sub_1B2DD97FC();
      sub_1B29A239C();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v31, v26);
      break;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v36, v38);
}

unint64_t sub_1B2DD959C()
{
  unint64_t result = qword_1E9C44510;
  if (!qword_1E9C44510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44510);
  }
  return result;
}

unint64_t sub_1B2DD95E8()
{
  unint64_t result = qword_1E9C44518;
  if (!qword_1E9C44518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44518);
  }
  return result;
}

unint64_t sub_1B2DD9634()
{
  unint64_t result = qword_1E9C44520;
  if (!qword_1E9C44520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44520);
  }
  return result;
}

unint64_t sub_1B2DD9680()
{
  unint64_t result = qword_1E9C44528;
  if (!qword_1E9C44528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44528);
  }
  return result;
}

unint64_t sub_1B2DD96CC()
{
  unint64_t result = qword_1E9C44530;
  if (!qword_1E9C44530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44530);
  }
  return result;
}

unint64_t sub_1B2DD9718()
{
  unint64_t result = qword_1E9C44538;
  if (!qword_1E9C44538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44538);
  }
  return result;
}

unint64_t sub_1B2DD9764()
{
  unint64_t result = qword_1E9C44540;
  if (!qword_1E9C44540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44540);
  }
  return result;
}

unint64_t sub_1B2DD97B0()
{
  unint64_t result = qword_1E9C44548;
  if (!qword_1E9C44548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44548);
  }
  return result;
}

unint64_t sub_1B2DD97FC()
{
  unint64_t result = qword_1E9C44550;
  if (!qword_1E9C44550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44550);
  }
  return result;
}

uint64_t TransportationActivityEventType.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t TransportationActivityEventType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v83 = a2;
  sub_1B29A3EB4(&qword_1E9C44558);
  sub_1B299D278();
  uint64_t v79 = v4;
  uint64_t v80 = v3;
  MEMORY[0x1F4188790](v3);
  sub_1B299B6D0();
  uint64_t v86 = v5;
  uint64_t v67 = sub_1B29A3EB4(&qword_1E9C44560);
  sub_1B299D278();
  uint64_t v66 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  uint64_t v82 = v8;
  sub_1B29A3EB4(&qword_1E9C44568);
  sub_1B299D278();
  uint64_t v77 = v10;
  uint64_t v78 = v9;
  MEMORY[0x1F4188790](v9);
  sub_1B299B6D0();
  uint64_t v85 = v11;
  sub_1B29A3EB4(&qword_1E9C44570);
  sub_1B299D278();
  uint64_t v75 = v12;
  uint64_t v76 = v13;
  MEMORY[0x1F4188790](v12);
  sub_1B299B6D0();
  uint64_t v81 = v14;
  uint64_t v71 = sub_1B29A3EB4(&qword_1E9C44578);
  sub_1B299D278();
  uint64_t v74 = v15;
  MEMORY[0x1F4188790](v16);
  sub_1B2AC9E30(v17, v61);
  sub_1B29A3EB4(&qword_1E9C44580);
  sub_1B299D278();
  uint64_t v72 = v19;
  uint64_t v73 = v18;
  MEMORY[0x1F4188790](v18);
  sub_1B299B6D0();
  uint64_t v84 = v20;
  sub_1B29A3EB4(&qword_1E9C44588);
  sub_1B299D278();
  uint64_t v69 = v22;
  uint64_t v70 = v21;
  MEMORY[0x1F4188790](v21);
  sub_1B299E4A0();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = sub_1B29A3EB4(&qword_1E9C44590);
  sub_1B299D278();
  uint64_t v68 = v27;
  MEMORY[0x1F4188790](v28);
  sub_1B299E4A0();
  uint64_t v31 = v30 - v29;
  uint64_t v32 = sub_1B29A3EB4(&qword_1E9C44598);
  sub_1B299D278();
  uint64_t v34 = v33;
  MEMORY[0x1F4188790](v35);
  sub_1B299E4A0();
  uint64_t v38 = v37 - v36;
  uint64_t v39 = a1[3];
  uint64_t v87 = a1;
  sub_1B29AEC7C(a1, v39);
  sub_1B2DD959C();
  sub_1B2E83A18();
  if (v88)
  {
    uint64_t v40 = (uint64_t)v87;
LABEL_10:
    uint64_t v56 = v40;
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v56);
  }
  uint64_t v63 = v31;
  uint64_t v62 = v26;
  uint64_t v64 = v25;
  uint64_t v88 = v34;
  uint64_t v41 = v38;
  uint64_t v42 = sub_1B2E835F8();
  if (!*(void *)(v42 + 16))
  {
    uint64_t v51 = v32;
LABEL_9:
    uint64_t v40 = (uint64_t)v87;
    uint64_t v52 = v88;
    uint64_t v53 = sub_1B2E83288();
    swift_allocError();
    uint64_t v55 = v54;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v55 = &type metadata for TransportationActivityEventType;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v53 - 8) + 104))(v55, *MEMORY[0x1E4FBBA70], v53);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v41, v51);
    goto LABEL_10;
  }
  uint64_t v65 = v32;
  uint64_t v43 = *(unsigned __int8 *)(v42 + 32);
  sub_1B29B142C(1);
  uint64_t v45 = v44;
  unint64_t v47 = v46;
  swift_bridgeObjectRelease();
  if (v45 != v47 >> 1)
  {
    uint64_t v51 = v65;
    goto LABEL_9;
  }
  switch(v43)
  {
    case 1:
      char v90 = 1;
      sub_1B2DD97B0();
      sub_1B2DDA7EC();
      goto LABEL_20;
    case 2:
      char v91 = 2;
      sub_1B2DD9764();
      sub_1B2E834E8();
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v84, v73);
      goto LABEL_22;
    case 3:
      char v92 = 3;
      sub_1B2DD9718();
      sub_1B2DDA7EC();
      uint64_t v48 = sub_1B2DDA828();
      uint64_t v58 = v71;
      break;
    case 4:
      char v93 = 4;
      sub_1B2DD96CC();
      sub_1B2DDA7EC();
      goto LABEL_20;
    case 5:
      char v94 = 5;
      sub_1B2DD9680();
      sub_1B2E834E8();
      goto LABEL_20;
    case 6:
      char v95 = 6;
      sub_1B2DD9634();
      sub_1B2DDA7EC();
      uint64_t v48 = sub_1B2DDA828();
      uint64_t v50 = &v98;
      goto LABEL_18;
    case 7:
      char v96 = 7;
      sub_1B2DD95E8();
      sub_1B2DDA7EC();
LABEL_20:
      uint64_t v48 = sub_1B2DDA828();
      break;
    default:
      char v89 = 0;
      sub_1B2DD97FC();
      sub_1B2DDA7EC();
      uint64_t v48 = sub_1B2DDA828();
      uint64_t v50 = &v97;
LABEL_18:
      uint64_t v58 = *(v50 - 32);
      break;
  }
  v49(v48, v58);
LABEL_22:
  swift_unknownObjectRelease();
  uint64_t v59 = sub_1B2DDA80C();
  v60(v59);
  uint64_t v56 = (uint64_t)v87;
  unsigned char *v83 = v43;
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v56);
}

uint64_t sub_1B2DD9FE0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TransportationActivityEventType.init(from:)(a1, a2);
}

uint64_t sub_1B2DD9FF8(void *a1)
{
  return TransportationActivityEventType.encode(to:)(a1);
}

unint64_t sub_1B2DDA014()
{
  unint64_t result = qword_1E9C445A0;
  if (!qword_1E9C445A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C445A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType()
{
  return &type metadata for TransportationActivityEventType;
}

unsigned char *_s20IntelligencePlatform31TransportationActivityEventTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DDA144);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.CodingKeys()
{
  return &type metadata for TransportationActivityEventType.CodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.OnFootCodingKeys()
{
  return &type metadata for TransportationActivityEventType.OnFootCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.VehicleCodingKeys()
{
  return &type metadata for TransportationActivityEventType.VehicleCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.AutomobileCodingKeys()
{
  return &type metadata for TransportationActivityEventType.AutomobileCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.ShipCodingKeys()
{
  return &type metadata for TransportationActivityEventType.ShipCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.PlaneCodingKeys()
{
  return &type metadata for TransportationActivityEventType.PlaneCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.BicycleCodingKeys()
{
  return &type metadata for TransportationActivityEventType.BicycleCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.LocomotiveTrainCodingKeys()
{
  return &type metadata for TransportationActivityEventType.LocomotiveTrainCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.BusCodingKeys()
{
  return &type metadata for TransportationActivityEventType.BusCodingKeys;
}

unint64_t sub_1B2DDA200()
{
  unint64_t result = qword_1E9C445A8;
  if (!qword_1E9C445A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C445A8);
  }
  return result;
}

unint64_t sub_1B2DDA250()
{
  unint64_t result = qword_1E9C445B0;
  if (!qword_1E9C445B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C445B0);
  }
  return result;
}

unint64_t sub_1B2DDA2A0()
{
  unint64_t result = qword_1E9C445B8;
  if (!qword_1E9C445B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C445B8);
  }
  return result;
}

unint64_t sub_1B2DDA2F0()
{
  unint64_t result = qword_1E9C445C0;
  if (!qword_1E9C445C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C445C0);
  }
  return result;
}

unint64_t sub_1B2DDA340()
{
  unint64_t result = qword_1E9C445C8;
  if (!qword_1E9C445C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C445C8);
  }
  return result;
}

unint64_t sub_1B2DDA390()
{
  unint64_t result = qword_1E9C445D0;
  if (!qword_1E9C445D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C445D0);
  }
  return result;
}

unint64_t sub_1B2DDA3E0()
{
  unint64_t result = qword_1E9C445D8;
  if (!qword_1E9C445D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C445D8);
  }
  return result;
}

unint64_t sub_1B2DDA430()
{
  unint64_t result = qword_1E9C445E0;
  if (!qword_1E9C445E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C445E0);
  }
  return result;
}

unint64_t sub_1B2DDA480()
{
  unint64_t result = qword_1E9C445E8;
  if (!qword_1E9C445E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C445E8);
  }
  return result;
}

unint64_t sub_1B2DDA4D0()
{
  unint64_t result = qword_1E9C445F0;
  if (!qword_1E9C445F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C445F0);
  }
  return result;
}

unint64_t sub_1B2DDA520()
{
  unint64_t result = qword_1E9C445F8;
  if (!qword_1E9C445F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C445F8);
  }
  return result;
}

unint64_t sub_1B2DDA570()
{
  unint64_t result = qword_1E9C44600;
  if (!qword_1E9C44600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44600);
  }
  return result;
}

unint64_t sub_1B2DDA5C0()
{
  unint64_t result = qword_1E9C44608;
  if (!qword_1E9C44608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44608);
  }
  return result;
}

unint64_t sub_1B2DDA610()
{
  unint64_t result = qword_1E9C44610;
  if (!qword_1E9C44610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44610);
  }
  return result;
}

unint64_t sub_1B2DDA660()
{
  unint64_t result = qword_1E9C44618;
  if (!qword_1E9C44618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44618);
  }
  return result;
}

unint64_t sub_1B2DDA6B0()
{
  unint64_t result = qword_1E9C44620;
  if (!qword_1E9C44620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44620);
  }
  return result;
}

unint64_t sub_1B2DDA700()
{
  unint64_t result = qword_1E9C44628;
  if (!qword_1E9C44628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44628);
  }
  return result;
}

unint64_t sub_1B2DDA750()
{
  unint64_t result = qword_1E9C44630;
  if (!qword_1E9C44630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44630);
  }
  return result;
}

unint64_t sub_1B2DDA7A0()
{
  unint64_t result = qword_1E9C44638;
  if (!qword_1E9C44638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44638);
  }
  return result;
}

uint64_t sub_1B2DDA7EC()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B2DDA80C()
{
  return v0;
}

uint64_t sub_1B2DDA828()
{
  return v0;
}

uint64_t TrialAssetManager.__allocating_init(refreshPolicy:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  id v2 = objc_msgSend(self, sel_clientWithIdentifier_, 288);
  sub_1B29A1EB0();
  swift_allocObject();
  return sub_1B2DDEA78((uint64_t)v2, v1);
}

uint64_t TrialAssetManager.asset(for:in:assetType:downloadOptions:)()
{
  sub_1B299F394();
  int v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  *(void *)(v1 + 32) = v8;
  *(void *)(v1 + 40) = v0;
  *(void *)(v1 + 16) = v9;
  *(void *)(v1 + 24) = v10;
  uint64_t v11 = type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo(0);
  sub_1B299B0F0(v11);
  *(void *)(v1 + 48) = sub_1B299E508();
  *(void *)(v1 + 56) = swift_task_alloc();
  *(void *)(v1 + 64) = swift_task_alloc();
  *(void *)(v1 + 72) = swift_task_alloc();
  *(unsigned char *)(v1 + 109) = *v7;
  *(unsigned char *)(v1 + 110) = *v5;
  *(_WORD *)(v1 + 106) = *v3;
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v12, v13, v14);
}

#error "1B2DDA9C0: call analysis failed (funcsize=120)"

uint64_t sub_1B2DDAB58()
{
  sub_1B299B3BC();
  sub_1B299B708();
  sub_1B299F388();
  *int v3 = v2;
  uint64_t v4 = *v1;
  sub_1B299B0E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1B2DDAC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = v8;
  uint64_t v9 = *(void *)(v8 + 96);
  TrialAssetManager.locallyAvailableAsset(for:in:assetType:)(*(void *)(v8 + 24), *(void *)(v8 + 32), (uint64_t)&v26, (uint64_t)&v27, a5, a6, a7, a8, v24, *(int *)v25, *(__int16 *)&v25[4], *(unsigned char *)(v8 + 109), *(unsigned char *)(v8 + 110), v28, v29, v30, v31, v32, v33,
    v34,
    v8,
    v36,
    v37);
  if (v9)
  {
    uint64_t v10 = *(void *)(v8 + 72);
LABEL_5:
    sub_1B2DE0F74(v10, (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B299AD7C();
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(v8 + 80);
  uint64_t v12 = *(void *)(v8 + 48);
  sub_1B2DE0F18(*(void *)(v8 + 56), v12, (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
  int v13 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v12, 1, v11);
  uint64_t v14 = *(void *)(v8 + 72);
  uint64_t v15 = *(void *)(v8 + 48);
  uint64_t v16 = *(void *)(v8 + 56);
  if (v13 == 1)
  {
    char v17 = *(unsigned char *)(v8 + 109);
    uint64_t v19 = *(void *)(v8 + 24);
    uint64_t v18 = *(void *)(v8 + 32);
    sub_1B2DE0F74(*(void *)(v8 + 48), (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
    sub_1B2DDFFB4();
    swift_allocError();
    *(void *)uint64_t v20 = v19;
    *(void *)(v20 + 8) = v18;
    *(unsigned char *)(v20 + 16) = v17 | 0x80;
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1B2DE0F74(v16, (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
    uint64_t v10 = v14;
    goto LABEL_5;
  }
  uint64_t v22 = *(void *)(v8 + 16);
  sub_1B2DE0F74(*(void *)(v8 + 56), (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
  sub_1B2DE0F74(v14, (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
  sub_1B2DE0000(v15, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B2999AB8();
LABEL_7:
  return v21();
}

uint64_t sub_1B2DDAE3C()
{
  sub_1B299F394();
  sub_1B2DE0F74(*(void *)(v0 + 72), (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v1();
}

void TrialAssetManager.locallyAvailableAsset(for:in:assetType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  sub_1B299F300();
  a22 = v23;
  a23 = v24;
  char v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v84 = v33;
  uint64_t v34 = sub_1B29A3EB4(&qword_1EB7E69E0);
  uint64_t v35 = sub_1B299B0F0(v34);
  MEMORY[0x1F4188790](v35);
  sub_1B299E4A0();
  uint64_t v80 = v37 - v36;
  sub_1B2E803C8();
  sub_1B299D278();
  uint64_t v76 = v39;
  uint64_t v77 = v38;
  MEMORY[0x1F4188790](v38);
  sub_1B299E4A0();
  uint64_t v42 = v41 - v40;
  sub_1B2E80498();
  sub_1B299D278();
  uint64_t v78 = v44;
  uint64_t v79 = v43;
  MEMORY[0x1F4188790](v43);
  sub_1B299E4A0();
  uint64_t v47 = v46 - v45;
  unsigned __int8 v48 = *v28;
  int v49 = *v26;
  LOBYTE(v85[0]) = *v28;
  uint64_t v50 = (void *)sub_1B2DDEEEC(v32, v30, (unsigned __int8 *)v85);
  if (!v50)
  {
    sub_1B2DDFFB4();
    swift_allocError();
    *(void *)uint64_t v60 = v32;
    *(void *)(v60 + 8) = v30;
    *(unsigned char *)(v60 + 16) = v48;
    swift_bridgeObjectRetain();
    swift_willThrow();
LABEL_24:
    sub_1B29998C8();
    return;
  }
  uint64_t v51 = v50;
  if (v49)
  {
    id v52 = objc_msgSend(v50, sel_directoryValue);
    if (v52)
    {
      sub_1B2DE0DD8(v52);
      uint64_t v82 = v53;
      id v54 = objc_msgSend(v51, sel_directoryValue);
      if (v54)
      {
        uint64_t v55 = v54;
        unsigned int v56 = objc_msgSend(v54, sel_requiresDownload);

        if (!v56) {
          goto LABEL_6;
        }
LABEL_14:

        swift_bridgeObjectRelease();
        uint64_t v66 = type metadata accessor for TrialAssetManager.Asset(0);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v84, 1, 1, v66);
        goto LABEL_24;
      }
    }
    else
    {
      __break(1u);
    }
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_27;
  }
  id v61 = objc_msgSend(v50, sel_fileValue);
  if (!v61)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  sub_1B2DE0DD8(v61);
  uint64_t v82 = v62;
  id v63 = objc_msgSend(v51, sel_fileValue);
  if (v63)
  {
    uint64_t v64 = v63;
    unsigned __int8 v65 = objc_msgSend(v63, sel_requiresDownload);

    if ((v65 & 1) == 0)
    {
LABEL_6:
      if (v82)
      {
        id v57 = objc_msgSend(v51, sel_metadata);
        if (!v57
          || (uint64_t v58 = v57, *(void *)&v85[0] = 0, sub_1B2E820E8(), v58, (v59 = *(void *)&v85[0]) == 0))
        {
          if (qword_1EB7E5AE0 != -1) {
            swift_once();
          }
          uint64_t v67 = sub_1B2E81FB8();
          sub_1B29A4B98(v67, (uint64_t)qword_1EB7E5AC0);
          uint64_t v68 = sub_1B2E81F98();
          os_log_type_t v69 = sub_1B2E82DB8();
          if (os_log_type_enabled(v68, v69))
          {
            uint64_t v70 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v70 = 0;
            _os_log_impl(&dword_1B2996000, v68, v69, "level.metadata is not [String: String]", v70, 2u);
            MEMORY[0x1B3EB30C0](v70, -1, -1);
          }

          uint64_t v59 = sub_1B2E82148();
        }
        uint64_t v71 = (unsigned int *)MEMORY[0x1E4F276A8];
        if (!v49) {
          uint64_t v71 = (unsigned int *)MEMORY[0x1E4F276B8];
        }
        (*(void (**)(uint64_t, void, uint64_t))(v76 + 104))(v42, *v71, v77);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v80, 1, 1, v79);
        sub_1B2E80478();
        a13 = v48;
        TrialAssetManager.experimentIdentifiers(for:)(&a13, (uint64_t *)v85);

        long long v81 = v85[1];
        long long v83 = v85[0];
        uint64_t v72 = v86;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32))(v84, v47, v79);
        uint64_t v73 = type metadata accessor for TrialAssetManager.Asset(0);
        *(void *)(v84 + *(int *)(v73 + 20)) = v59;
        uint64_t v74 = v84 + *(int *)(v73 + 24);
        *(_OWORD *)uint64_t v74 = v83;
        *(_OWORD *)(v74 + 16) = v81;
        *(void *)(v74 + 32) = v72;
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v84, 0, 1, v73);
      }
      else
      {
        sub_1B2DDFFB4();
        swift_allocError();
        *(void *)uint64_t v75 = v32;
        *(void *)(v75 + 8) = v30;
        *(unsigned char *)(v75 + 16) = v48 | 0x40;
        swift_bridgeObjectRetain();
        swift_willThrow();
      }
      goto LABEL_24;
    }
    goto LABEL_14;
  }
LABEL_28:
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t TrialAssetManager.assets(for:in:downloadOptions:)()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  *(void *)(v1 + 16) = v6;
  *(void *)(v1 + 24) = v0;
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C3A598);
  *(void *)(v1 + 32) = v7;
  *(void *)(v1 + 40) = *(void *)(v7 - 8);
  *(void *)(v1 + 48) = sub_1B299E508();
  *(void *)(v1 + 56) = swift_task_alloc();
  *(void *)(v1 + 64) = swift_task_alloc();
  *(void *)(v1 + 72) = swift_task_alloc();
  *(void *)(v1 + 80) = swift_task_alloc();
  *(void *)(v1 + 88) = swift_task_alloc();
  *(void *)(v1 + 96) = swift_task_alloc();
  *(void *)(v1 + 104) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for TrialAssetManager.Asset(0);
  *(void *)(v1 + 112) = v8;
  sub_1B299B0F0(v8);
  *(void *)(v1 + 120) = sub_1B299E508();
  *(void *)(v1 + 128) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo(0);
  sub_1B299B0F0(v9);
  *(void *)(v1 + 136) = sub_1B299E508();
  *(void *)(v1 + 144) = swift_task_alloc();
  *(void *)(v1 + 152) = swift_task_alloc();
  *(void *)(v1 + 160) = swift_task_alloc();
  *(unsigned char *)(v1 + 213) = *v5;
  *(_WORD *)(v1 + 210) = *v3;
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

void sub_1B2DDB570()
{
  uint64_t v121 = v0;
  uint64_t v105 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_1B2E82148();
  uint64_t v3 = v0;
  uint64_t v4 = sub_1B2E82148();
  uint64_t v101 = v1 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v1 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(v1 + 64);
  int64_t v103 = (unint64_t)(63 - v6) >> 6;
  uint64_t v107 = v1;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v109 = v0;
  while (1)
  {
    *(void *)(v3 + 168) = v4;
    *(void *)(v3 + 176) = v2;
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_20;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v11 >= v103) {
      goto LABEL_42;
    }
    unint64_t v12 = *(void *)(v101 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v103) {
        goto LABEL_42;
      }
      unint64_t v12 = *(void *)(v101 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v103) {
          goto LABEL_42;
        }
        unint64_t v12 = *(void *)(v101 + 8 * v8);
        if (!v12) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_20:
    uint64_t v14 = (uint64_t *)(*(void *)(v107 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    char v17 = *(unsigned char *)(*(void *)(v107 + 56) + v10);
    HIBYTE(v111) = *(unsigned char *)(v3 + 213);
    LOBYTE(v112) = v17;
    swift_bridgeObjectRetain();
    TrialAssetManager.locallyAvailableAsset(for:in:assetType:)(v15, v16, (uint64_t)&v111 + 7, (uint64_t)&v112, v18, v19, v20, v21, v94, v96, SWORD2(v96), SBYTE6(v96), HIBYTE(v96), v4, v101, v103, v105, v107, v109,
      v111,
      (uint64_t)v112,
      v113,
      v114);
    uint64_t v22 = *(void *)(v3 + 152);
    uint64_t v23 = *(void *)(v3 + 112);
    sub_1B2DE0F18(*(void *)(v3 + 160), v22, (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v22, 1, v23) == 1)
    {
      uint64_t v24 = v98;
      HIDWORD(v97) = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v31 = sub_1B29DB060(v15, v16, v25, v26, v27, v28, v29, v30, v95, v97, v98, v102, v104, v106, v108, v110, v111, v98, v113,
              v114,
              v115,
              v116,
              v117,
              v118,
              v119,
              v120);
      if (__OFADD__(*(void *)(v24 + 16), (v32 & 1) == 0)) {
        goto LABEL_54;
      }
      unint64_t v33 = v31;
      char v34 = v32;
      sub_1B29A3EB4(&qword_1E9C44678);
      char v35 = sub_1B2E83398();
      uint64_t v42 = v112;
      if (v35)
      {
        sub_1B29DB060(v15, v16, v36, v37, v38, v39, v40, v41, v94, v96, v99, v101, v103, v105, v107, v109, v111, (uint64_t)v112, v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120);
        sub_1B29A4C34();
        if (!v44) {
          goto LABEL_46;
        }
        unint64_t v33 = v43;
      }
      uint64_t v100 = (uint64_t)v42;
      if (v34)
      {
        *(unsigned char *)(v42[7] + v33) = v17;
      }
      else
      {
        sub_1B299EB9C((uint64_t)&v42[v33 >> 6]);
        uint64_t v74 = (uint64_t *)(v42[6] + 16 * v33);
        *uint64_t v74 = v15;
        v74[1] = v16;
        *(unsigned char *)(v42[7] + v33) = v17;
        uint64_t v75 = v42[2];
        BOOL v60 = __OFADD__(v75, 1);
        uint64_t v76 = v75 + 1;
        if (v60) {
          goto LABEL_56;
        }
        v42[2] = v76;
        swift_bridgeObjectRetain();
      }
      uint64_t v3 = v109;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v45 = *(void *)(v3 + 152);
      uint64_t v46 = *(void *)(v3 + 128);
      uint64_t v49 = v3 + 96;
      uint64_t v48 = *(void *)(v3 + 96);
      uint64_t v47 = *(void *)(v49 + 8);
      sub_1B2DE0000(v45, v46);
      sub_1B2DE0F18(v46, v47, (void (*)(void))type metadata accessor for TrialAssetManager.Asset);
      swift_storeEnumTagMultiPayload();
      sub_1B2DE0E48(v47, v48);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1B2DE339C(isUniquelyReferenced_nonNull_native, v51, v52, v53, v54, v55, v56, v57, v95, v97, v98, v102, v104, v106, v108, v110, v111, v2, v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120);
      sub_1B29A0938();
      if (v60) {
        goto LABEL_55;
      }
      unint64_t v61 = v58;
      char v62 = v59;
      sub_1B29A3EB4(&qword_1E9C44670);
      uint64_t v63 = sub_1B2E83398();
      uint64_t v2 = (uint64_t)v112;
      if (v63)
      {
        sub_1B2DE339C(v63, v64, v65, v66, v67, v68, v69, v70, v94, v96, v100, v101, v103, v105, v107, v109, v111, (uint64_t)v112, v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120);
        sub_1B29A4C34();
        if (!v44)
        {
LABEL_46:
          sub_1B2999E1C();
          sub_1B2E83858();
          return;
        }
        unint64_t v61 = v71;
      }
      if (v62)
      {
        sub_1B2DE33E0();
        sub_1B2DE0EB0(v72, v73);
      }
      else
      {
        sub_1B299EB9C(v2 + 8 * (v61 >> 6));
        uint64_t v77 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v61);
        *uint64_t v77 = v15;
        v77[1] = v16;
        sub_1B2DE33E0();
        sub_1B2DE0E48(v78, v79);
        sub_1B2B1D748();
        if (v60) {
          goto LABEL_57;
        }
        *(void *)(v2 + 16) = v80;
        swift_bridgeObjectRetain();
      }
      uint64_t v3 = v109;
      uint64_t v81 = *(void *)(v109 + 128);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2DE0F74(v81, (void (*)(void))type metadata accessor for TrialAssetManager.Asset);
    }
    sub_1B2DE0F74(*(void *)(v3 + 160), (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
    uint64_t v4 = v100;
  }
  int64_t v13 = v11 + 3;
  if (v13 < v103)
  {
    unint64_t v12 = *(void *)(v101 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (v8 >= v103) {
          goto LABEL_42;
        }
        unint64_t v12 = *(void *)(v101 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_19;
        }
      }
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      return;
    }
    int64_t v8 = v13;
    goto LABEL_19;
  }
LABEL_42:
  swift_release();
  if (!*(void *)(v4 + 16))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B2AEC434();
    sub_1B2999E1C();
    __asm { BRAA            X2, X16 }
  }
  __int16 v82 = *(_WORD *)(v3 + 210);
  char v83 = *(unsigned char *)(v3 + 213);
  uint64_t v84 = swift_bridgeObjectRetain();
  uint64_t v85 = sub_1B2DDC79C(v84);
  *(unsigned char *)(v3 + 212) = v83;
  *(void *)(v3 + 184) = v85;
  *(_WORD *)(v3 + 208) = v82;
  uint64_t v86 = (void *)swift_task_alloc();
  *(void *)(v3 + 192) = v86;
  *uint64_t v86 = v3;
  v86[1] = sub_1B2DDBCE8;
  sub_1B2DE3408();
  sub_1B2999E1C();
  TrialAssetManager.downloadOnDemandAssets(for:in:downloadOptions:)(v87, v88, v89);
}

uint64_t sub_1B2DDBCE8()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299B0E0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1B2DDBDE8()
{
  uint64_t v113 = v0;
  uint64_t v1 = 0;
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v93 = v3 + 64;
  uint64_t v97 = v3;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v97 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & v4;
  int64_t v95 = (unint64_t)(63 - v6) >> 6;
  LODWORD(v91) = *(unsigned __int8 *)(v0 + 213) | 0xFFFFFF80;
  uint64_t v8 = *(void **)(v0 + 200);
  if ((v5 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  uint64_t v99 = v1;
  for (unint64_t i = v9 | (v1 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v97 + 48) + 16 * i);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    char v18 = *(unsigned char *)(*(void *)(v97 + 56) + i);
    HIBYTE(v102) = *(unsigned char *)(v0 + 213);
    LOBYTE(v103) = v18;
    swift_bridgeObjectRetain();
    TrialAssetManager.locallyAvailableAsset(for:in:assetType:)(v17, v16, (uint64_t)&v102 + 7, (uint64_t)&v103, v19, v20, v21, v22, v89, v91, SWORD2(v91), SBYTE6(v91), HIBYTE(v91), v93, v95, v97, v99, v102, v103,
      v104,
      v105,
      v106,
      v107);
    if (!v8) {
      break;
    }
    uint64_t v23 = v8;
LABEL_23:
    uint64_t v29 = *(void *)(v0 + 48);
    uint64_t v28 = *(void **)(v0 + 56);
    *uint64_t v28 = v23;
    swift_storeEnumTagMultiPayload();
    sub_1B2DE0E48((uint64_t)v28, v29);
    id v30 = v23;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1B2DE3380(isUniquelyReferenced_nonNull_native, v32, v33, v34, v35, v36, v37, v38, v90, v92, v94, v96, v98, v100, v102, v2, v104, v105, v106,
      v107,
      v108,
      v109,
      v110,
      v111,
      v112,
      v113);
    sub_1B29A0938();
    if (v41)
    {
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      return;
    }
    uint64_t v42 = v39;
    char v43 = v40;
    sub_1B29A3EB4(&qword_1E9C44670);
    uint64_t v44 = sub_1B2E83398();
    uint64_t v2 = v103;
    if (v44)
    {
      uint64_t v52 = sub_1B2DE3380(v44, v45, v46, v47, v48, v49, v50, v51, v89, v91, v93, v95, v97, v101, v102, v103, v104, v105, v106,
              v107,
              v108,
              v109,
              v110,
              v111,
              v112,
              v113);
      if ((v43 & 1) != (v53 & 1)) {
        goto LABEL_46;
      }
      uint64_t v42 = v52;
    }
    uint64_t v55 = *(void *)(v0 + 40);
    uint64_t v54 = *(void *)(v0 + 48);
    if (v43)
    {
      sub_1B2DE0EB0(v54, *(void *)(v2 + 56) + *(void *)(v55 + 72) * v42);
    }
    else
    {
      sub_1B2DE333C(v54, v55);
      sub_1B2B1D748();
      if (v41) {
        goto LABEL_50;
      }
      *(void *)(v2 + 16) = v56;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_32:
    uint64_t v8 = 0;
    uint64_t v1 = v101;
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v1 + 1;
    if (__OFADD__(v1, 1)) {
      goto LABEL_51;
    }
    if (v11 >= v95) {
      goto LABEL_43;
    }
    unint64_t v12 = *(void *)(v93 + 8 * v11);
    int64_t v13 = v1 + 1;
    if (!v12)
    {
      int64_t v13 = v1 + 2;
      if (v1 + 2 >= v95) {
        goto LABEL_43;
      }
      unint64_t v12 = *(void *)(v93 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v1 + 3;
        if (v1 + 3 >= v95) {
          goto LABEL_43;
        }
        unint64_t v12 = *(void *)(v93 + 8 * v13);
        if (!v12)
        {
          uint64_t v14 = v1 + 4;
          if (v1 + 4 >= v95)
          {
LABEL_43:
            swift_release();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v87 = sub_1B2AEC434();
            v88(v87);
            return;
          }
          unint64_t v12 = *(void *)(v93 + 8 * v14);
          if (!v12)
          {
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_53;
              }
              if (v13 >= v95) {
                goto LABEL_43;
              }
              unint64_t v12 = *(void *)(v93 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_18;
              }
            }
          }
          int64_t v13 = v1 + 4;
        }
      }
    }
LABEL_18:
    unint64_t v7 = (v12 - 1) & v12;
    uint64_t v99 = v13;
  }
  uint64_t v24 = *(void *)(v0 + 136);
  uint64_t v25 = *(void *)(v0 + 112);
  sub_1B2DE0F18(*(void *)(v0 + 144), v24, (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v24, 1, v25) == 1)
  {
    uint64_t v26 = *(void *)(v0 + 144);
    sub_1B2DE0F74(*(void *)(v0 + 136), (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
    sub_1B2DDFFB4();
    uint64_t v23 = (void *)swift_allocError();
    *(void *)uint64_t v27 = v17;
    *(void *)(v27 + 8) = v16;
    *(unsigned char *)(v27 + 16) = v92;
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1B2DE0F74(v26, (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
    goto LABEL_23;
  }
  uint64_t v57 = *(void *)(v0 + 120);
  uint64_t v59 = *(void *)(v0 + 80);
  uint64_t v58 = *(void *)(v0 + 88);
  sub_1B2DE0000(*(void *)(v0 + 136), v57);
  sub_1B2DE0F18(v57, v58, (void (*)(void))type metadata accessor for TrialAssetManager.Asset);
  swift_storeEnumTagMultiPayload();
  sub_1B2DE0E48(v58, v59);
  uint64_t v60 = swift_isUniquelyReferenced_nonNull_native();
  sub_1B2DE3380(v60, v61, v62, v63, v64, v65, v66, v67, v90, v92, v94, v96, v98, v100, v102, v2, v104, v105, v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113);
  sub_1B29A0938();
  if (v41) {
    goto LABEL_52;
  }
  uint64_t v70 = v68;
  char v71 = v69;
  sub_1B29A3EB4(&qword_1E9C44670);
  uint64_t v72 = sub_1B2E83398();
  uint64_t v2 = v103;
  if ((v72 & 1) == 0) {
    goto LABEL_38;
  }
  uint64_t v80 = sub_1B2DE3380(v72, v73, v74, v75, v76, v77, v78, v79, v89, v91, v93, v95, v97, v101, v102, v103, v104, v105, v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113);
  if ((v71 & 1) == (v81 & 1))
  {
    uint64_t v70 = v80;
LABEL_38:
    uint64_t v82 = *(void *)(v0 + 80);
    uint64_t v83 = *(void *)(v0 + 40);
    if (v71)
    {
      sub_1B2DE0EB0(v82, *(void *)(v2 + 56) + *(void *)(v83 + 72) * v70);
    }
    else
    {
      sub_1B2DE333C(v82, v83);
      sub_1B2B1D748();
      if (v41) {
        goto LABEL_54;
      }
      *(void *)(v2 + 16) = v84;
      swift_bridgeObjectRetain();
    }
    uint64_t v85 = *(void *)(v0 + 144);
    uint64_t v86 = *(void *)(v0 + 120);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2DE0F74(v86, (void (*)(void))type metadata accessor for TrialAssetManager.Asset);
    sub_1B2DE0F74(v85, (void (*)(void))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
    goto LABEL_32;
  }
LABEL_46:
  sub_1B2E83858();
}

uint64_t sub_1B2DDC3AC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

IntelligencePlatform::TrialNamespace_optional __swiftcall TrialNamespace.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

IntelligencePlatform::TrialAssetManager::AssetType_optional __swiftcall TrialAssetManager.AssetType.init(rawValue:)(Swift::String rawValue)
{
  return (IntelligencePlatform::TrialAssetManager::AssetType_optional)sub_1B2DDF4E4(v1);
}

uint64_t sub_1B2DDC524()
{
  sub_1B2A19AF8();
  sub_1B2A4B170();
  sub_1B2E82B28();
  if (*(void *)(v0 + 16))
  {
    while (1)
    {
      sub_1B2DE33B8();
      sub_1B2A008BC(v2, v3);
    }
  }
  sub_1B299B414();
  return v1;
}

uint64_t sub_1B2DDC5A4()
{
  sub_1B2A19AF8();
  sub_1B29C58F8();
  uint64_t v7 = sub_1B2E82B28();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    uint64_t v3 = 32;
    do
    {
      long long v4 = *(_OWORD *)(v0 + v3 + 16);
      v8[0] = *(_OWORD *)(v0 + v3);
      v8[1] = v4;
      __int16 v9 = *(_WORD *)(v0 + v3 + 32);
      sub_1B29E52BC((uint64_t)v8);
      sub_1B2A009A0(&v6, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    sub_1B299B414();
  }
  return v1;
}

uint64_t sub_1B2DDC660(uint64_t a1)
{
  uint64_t v15 = sub_1B2E82B28();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    long long v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1B2A00B00((uint64_t)&v14, v5, v6, v7, v8, v9, v10, v11, v13, v14);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    sub_1B299B414();
  }
  return v1;
}

#error "1B2DDC764: call analysis failed (funcsize=35)"

void *sub_1B2DDC79C(uint64_t a1)
{
  uint64_t v23 = sub_1B2E82B28();
  IntelligencePlatform::TrialNamespace_optional result = sub_1B2B1D124(v24, a1);
  uint64_t v3 = v24[0];
  uint64_t v4 = v24[1];
  int64_t v5 = v24[3];
  unint64_t v6 = v25;
  int64_t v7 = (unint64_t)(v24[2] + 64) >> 6;
  if (!v25) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v9 = v8 | (v5 << 6);
  while (1)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_1B2A00B00((uint64_t)v22, v15, v16, v17, v18, v19, v20, v21, v22[0], v22[1]);
    IntelligencePlatform::TrialNamespace_optional result = (void *)swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_21;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v10);
    int64_t v12 = v5 + 1;
    if (!v11)
    {
      int64_t v12 = v5 + 2;
      if (v5 + 2 >= v7) {
        goto LABEL_21;
      }
      unint64_t v11 = *(void *)(v4 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v5 + 3;
        if (v5 + 3 >= v7) {
          goto LABEL_21;
        }
        unint64_t v11 = *(void *)(v4 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v5 + 4;
          if (v5 + 4 >= v7) {
            goto LABEL_21;
          }
          unint64_t v11 = *(void *)(v4 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v5 + 5;
            if (v5 + 5 >= v7) {
              goto LABEL_21;
            }
            unint64_t v11 = *(void *)(v4 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v5 + 6;
              while (v13 < v7)
              {
                unint64_t v11 = *(void *)(v4 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return (void *)v23;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v5 = v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2DDC91C(uint64_t a1)
{
  return sub_1B2DDCDC4(a1, (void (*)(void))sub_1B2B2A9E0, (uint64_t)&type metadata for KnosisIndexType, (void (*)(char *, void))sub_1B2A011C8);
}

uint64_t sub_1B2DDC950()
{
  sub_1B2A19AF8();
  sub_1B2AD0B20();
  uint64_t v7 = sub_1B2E82B28();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    uint64_t v3 = 32;
    do
    {
      long long v4 = *(_OWORD *)(v0 + v3 + 16);
      v8[0] = *(_OWORD *)(v0 + v3);
      v8[1] = v4;
      char v9 = *(unsigned char *)(v0 + v3 + 32);
      sub_1B29E52BC((uint64_t)v8);
      sub_1B2A01540(&v6, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    sub_1B299B414();
  }
  return v1;
}

uint64_t sub_1B2DDCA0C()
{
  sub_1B2A19AF8();
  sub_1B2DE32A8();
  uint64_t v7 = sub_1B2E82B28();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    uint64_t v3 = 32;
    do
    {
      long long v4 = *(_OWORD *)(v0 + v3 + 16);
      v8[0] = *(_OWORD *)(v0 + v3);
      v8[1] = v4;
      _OWORD v8[2] = *(_OWORD *)(v0 + v3 + 32);
      sub_1B2A0E7E8((uint64_t)v8);
      sub_1B2A01A24((uint64_t)v6, (uint64_t *)v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 48;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    sub_1B299B414();
  }
  return v1;
}

uint64_t sub_1B2DDCAC8(uint64_t a1)
{
  sub_1B2A4A4AC();
  uint64_t result = sub_1B2E82B28();
  unint64_t v3 = 0;
  uint64_t v16 = result;
  uint64_t v4 = a1;
  uint64_t v14 = a1 + 32;
  while (1)
  {
LABEL_6:
    unint64_t v12 = *(void *)(v4 + 16);
    if (v3 == v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if (v3 >= v12) {
      break;
    }
    uint64_t v13 = *(void *)(v14 + 8 * v3);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    ++v3;
    if (v13)
    {
      unint64_t v5 = *(void *)(v13 + 16);
      if (v5)
      {
        unint64_t v6 = 0;
        uint64_t v7 = (uint64_t *)(v13 + 56);
        while (v6 < v5)
        {
          ++v6;
          uint64_t v9 = *(v7 - 1);
          uint64_t v8 = *v7;
          uint64_t v11 = *(v7 - 3);
          uint64_t v10 = *(v7 - 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2A01CBC(&v15, v11, v10, v9, v8);
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v5 = *(void *)(v13 + 16);
          v7 += 4;
          if (v6 == v5) {
            goto LABEL_6;
          }
        }
        __break(1u);
        break;
      }
    }
  }
  __break(1u);
  return result;
}

void *sub_1B2DDCC10(uint64_t a1)
{
  uint64_t v23 = sub_1B2E82B28();
  uint64_t result = sub_1B2B1D124(v24, a1);
  uint64_t v3 = v24[0];
  uint64_t v4 = v24[1];
  int64_t v5 = v24[3];
  unint64_t v6 = v25;
  int64_t v7 = (unint64_t)(v24[2] + 64) >> 6;
  if (!v25) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v9 = v8 | (v5 << 6);
  while (1)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_1B2A00B00((uint64_t)v22, v15, v16, v17, v18, v19, v20, v21, v22[0], v22[1]);
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_21;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v10);
    int64_t v12 = v5 + 1;
    if (!v11)
    {
      int64_t v12 = v5 + 2;
      if (v5 + 2 >= v7) {
        goto LABEL_21;
      }
      unint64_t v11 = *(void *)(v4 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v5 + 3;
        if (v5 + 3 >= v7) {
          goto LABEL_21;
        }
        unint64_t v11 = *(void *)(v4 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v5 + 4;
          if (v5 + 4 >= v7) {
            goto LABEL_21;
          }
          unint64_t v11 = *(void *)(v4 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v5 + 5;
            if (v5 + 5 >= v7) {
              goto LABEL_21;
            }
            unint64_t v11 = *(void *)(v4 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v5 + 6;
              while (v13 < v7)
              {
                unint64_t v11 = *(void *)(v4 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return (void *)v23;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v5 = v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2DDCD90(uint64_t a1)
{
  return sub_1B2DDCDC4(a1, (void (*)(void))sub_1B2AF7990, (uint64_t)&type metadata for PersonEntityTagType, (void (*)(char *, void))sub_1B2A01E18);
}

uint64_t sub_1B2DDCDC4(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, void))
{
  a2();
  uint64_t v12 = sub_1B2E82B28();
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      uint64_t v9 = a1 + i;
      a4(&v11, *(unsigned __int8 *)(v9 + 32));
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  else
  {
    sub_1B299B414();
  }
  return a3;
}

uint64_t sub_1B2DDCE6C()
{
  sub_1B2A19AF8();
  sub_1B2CAC754();
  uint64_t v10 = sub_1B2E82B28();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(v0 + 56);
    do
    {
      uint64_t v4 = *(v3 - 3);
      uint64_t v5 = *(v3 - 2);
      uint64_t v6 = *(v3 - 1);
      uint64_t v7 = *v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2A02390(&v9, v4, v5, v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 4;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    sub_1B299B414();
  }
  return v1;
}

uint64_t sub_1B2DDCF40(uint64_t a1)
{
  sub_1B2E82B28();
  if (*(void *)(a1 + 16))
  {
    while (1)
    {
      sub_1B2DE33B8();
      sub_1B2A02818(v3, v4);
    }
  }
  sub_1B299B414();
  return v1;
}

id sub_1B2DDCFC0()
{
  return sub_1B2DDCFE4();
}

id sub_1B2DDCFE4()
{
  uint64_t v1 = (void *)sub_1B2E82348();
  uint64_t v2 = (void *)sub_1B2E82348();
  id v3 = objc_msgSend(v0, sel_levelForFactor_withNamespaceName_, v1, v2);

  return v3;
}

uint64_t sub_1B2DDD058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9C44758
                                                                                              + dword_1E9C44758);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_1B2DDD154;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1B2DDD154()
{
  sub_1B299B3BC();
  char v3 = v2;
  sub_1B299B708();
  uint64_t v4 = *v1;
  sub_1B299B0E0();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (v0) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v3 & 1;
  }
  return v6(v7);
}

uint64_t sub_1B2DDD22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v9 = v7;
  uint64_t v14 = v8;
  uint64_t v15 = v8 + 10;
  uint64_t v16 = sub_1B2E82828();
  v14[16] = v16;
  uint64_t v17 = sub_1B2E82348();
  v14[17] = v17;
  if (a6)
  {
    v14[14] = a6;
    v14[15] = a7;
    v14[10] = MEMORY[0x1E4F143A8];
    v14[11] = 1107296256;
    v14[12] = sub_1B2DDD584;
    v14[13] = &unk_1F0AC2538;
    a6 = _Block_copy(v15);
    swift_retain();
    swift_release();
  }
  v14[18] = a6;
  v14[2] = v14;
  void v14[7] = v14 + 19;
  v14[3] = sub_1B2DDD404;
  uint64_t v18 = swift_continuation_init();
  v14[10] = MEMORY[0x1E4F143A8];
  v14[11] = 0x40000000;
  v14[12] = sub_1B2DDD5D8;
  v14[13] = &unk_1E60135D0;
  v14[14] = v18;
  objc_msgSend(v9, sel_downloadLevelsForFactors_withNamespace_queue_options_progress_completion_, v16, v17, a4, a5, a6, v15);
  return MEMORY[0x1F41881E8](v14 + 2);
}

uint64_t sub_1B2DDD404()
{
  sub_1B299B9B8();
  sub_1B299F388();
  *char v3 = v1;
  uint64_t v4 = *v0;
  *char v3 = *v0;
  uint64_t v5 = *(const void **)(v2 + 144);
  uint64_t v6 = *(void **)(v2 + 136);
  uint64_t v7 = *(void **)(v2 + 128);
  if (*(void *)(v2 + 48))
  {
    swift_willThrow();
    _Block_release(v5);

    unint64_t v8 = *(uint64_t (**)(uint64_t))(v4 + 8);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = *(unsigned __int8 *)(v1 + 152);
    _Block_release(*(const void **)(v2 + 144));

    unint64_t v8 = *(uint64_t (**)(uint64_t))(v4 + 8);
    uint64_t v9 = v10;
  }
  return v8(v9);
}

uint64_t sub_1B2DDD584(uint64_t a1, uint64_t a2)
{
  char v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1B2DDD5D8(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    id v4 = a3;
    return sub_1B2DDD638(v3, (uint64_t)v4);
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 32);
    return sub_1B2DDD69C(v6, a2);
  }
}

uint64_t sub_1B2DDD638(uint64_t a1, uint64_t a2)
{
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  uint64_t v4 = swift_allocError();
  *uint64_t v5 = a2;

  return MEMORY[0x1F4188208](a1, v4);
}

uint64_t sub_1B2DDD69C(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(a1 + 64) + 40) = a2;
  return MEMORY[0x1F4188200](a1);
}

id sub_1B2DDD6BC()
{
  return sub_1B2DDD6E0();
}

id sub_1B2DDD6E0()
{
  uint64_t v1 = (void *)sub_1B2E82348();
  id v2 = objc_msgSend(v0, sel_experimentIdentifiersWithNamespaceName_, v1);

  return v2;
}

id sub_1B2DDD72C()
{
  return sub_1B2DDD750();
}

id sub_1B2DDD750()
{
  return objc_msgSend(v0, sel_refresh);
}

id sub_1B2DDD760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2DDD784(a1, a2, a3, a4, a5);
}

id sub_1B2DDD784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (void *)sub_1B2E82348();
  v13[4] = a4;
  v13[5] = a5;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1B2DDD86C;
  v13[3] = &unk_1F0ADC190;
  uint64_t v10 = _Block_copy(v13);
  swift_retain();
  id v11 = objc_msgSend(v5, sel_addUpdateHandlerForNamespaceName_queue_usingBlock_, v9, a3, v10);

  _Block_release(v10);
  swift_release();
  return v11;
}

uint64_t sub_1B2DDD86C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_1B2DDD8CC(uint64_t a1)
{
  return sub_1B2DDD8F0(a1);
}

id sub_1B2DDD8F0(uint64_t a1)
{
  return objc_msgSend(v1, sel_removeUpdateHandlerForToken_, a1);
}

void *static TrialNamespace.allCases.getter()
{
  return &unk_1F0AB83F0;
}

unint64_t TrialNamespace.rawValue.getter()
{
  unint64_t result = 0xD000000000000022;
  switch(*v0)
  {
    case 1:
    case 7:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000028;
      break;
    case 3:
      unint64_t result = 0xD000000000000020;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0x4E4F435F4452454ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2DDDA14(char *a1, char *a2)
{
  return sub_1B29AD80C(*a1, *a2);
}

uint64_t sub_1B2DDDA20()
{
  return sub_1B29AE658(*v0);
}

uint64_t sub_1B2DDDA28(uint64_t a1)
{
  return sub_1B2AA5F70(a1, *v1);
}

uint64_t sub_1B2DDDA30()
{
  return sub_1B29F979C();
}

IntelligencePlatform::TrialNamespace_optional sub_1B2DDDA38(Swift::String *a1)
{
  return TrialNamespace.init(rawValue:)(*a1);
}

unint64_t sub_1B2DDDA44@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = TrialNamespace.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B2DDDA6C(void *a1@<X8>)
{
  *a1 = &unk_1F0AB83F0;
}

uint64_t sub_1B2DDDA7C()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2DDDADC()
{
  return sub_1B2E82788();
}

uint64_t TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.AutoRefreshContent.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.AutoRefreshContent.__deallocating_deinit()
{
  return sub_1B2DE08F0(MEMORY[0x1E4FBC898]);
}

uint64_t TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.updateHandlers.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 24);
  os_unfair_lock_lock(v2);
  sub_1B299D804();
  uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  return v3;
}

uint64_t sub_1B2DDDBC0()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1B2DDDBEC(v0);
}

uint64_t sub_1B2DDDBEC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v4);
  sub_1B299D804();
  *(void *)(*(void *)(v3 + 16) + 16) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v4);
  return swift_bridgeObjectRelease_n();
}

uint64_t TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.deinit()
{
  swift_release();
  return v0;
}

uint64_t TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.__deallocating_deinit()
{
  return sub_1B2DE08F0(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1B2DDDCA4()
{
  uint64_t v1 = v0;
  type metadata accessor for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.AutoRefreshContent();
  uint64_t v2 = sub_1B299D354();
  type metadata accessor for TrialAssetManager.NamespaceUpdateNotificationToken();
  sub_1B29DEB58();
  *(void *)(v2 + 16) = sub_1B2E82148();
  sub_1B29A3EB4(&qword_1EB7E3C88);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1B29E5380(v2);
  return v1;
}

uint64_t TrialAssetManager.refreshPolicy.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

id sub_1B2DDDD40()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B2E82E28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B2E82E18();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1B2E82088();
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v8 = *(void **)(v0 + 56);
  if (v8)
  {
    id v9 = *(id *)(v0 + 56);
  }
  else
  {
    v14[0] = sub_1B29C3CA0(0, &qword_1EB7D9530);
    sub_1B2E82058();
    v14[1] = MEMORY[0x1E4FBC860];
    sub_1B2DE320C();
    sub_1B29A3EB4((uint64_t *)&unk_1E9C37A70);
    sub_1B29D22C4(&qword_1E9C37A80, (uint64_t *)&unk_1E9C37A70);
    sub_1B2E830C8();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC58], v2);
    uint64_t v10 = (void *)sub_1B2E82E48();
    id v11 = *(void **)(v0 + 56);
    *(void *)(v1 + 56) = v10;
    id v9 = v10;

    unint64_t v8 = 0;
  }
  id v12 = v8;
  return v9;
}

id sub_1B2DDDFA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B2E82E28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B2E82E18();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1B2E82088();
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v8 = *(void **)(v0 + 64);
  if (v8)
  {
    id v9 = *(id *)(v0 + 64);
  }
  else
  {
    v14[0] = sub_1B29C3CA0(0, &qword_1EB7D9530);
    sub_1B2E82058();
    v14[1] = MEMORY[0x1E4FBC860];
    sub_1B2DE320C();
    sub_1B29A3EB4((uint64_t *)&unk_1E9C37A70);
    sub_1B29D22C4(&qword_1E9C37A80, (uint64_t *)&unk_1E9C37A70);
    sub_1B2E830C8();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC58], v2);
    uint64_t v10 = (void *)sub_1B2E82E48();
    id v11 = *(void **)(v0 + 64);
    *(void *)(v1 + 64) = v10;
    id v9 = v10;

    unint64_t v8 = 0;
  }
  id v12 = v8;
  return v9;
}

uint64_t sub_1B2DDE200()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);

  return v0;
}

uint64_t sub_1B2DDE230()
{
  sub_1B2DDE200();

  return swift_deallocClassInstance();
}

uint64_t TrialAssetManager.ExperimentIdentifiers.experimentId.getter()
{
  return sub_1B2999874();
}

uint64_t TrialAssetManager.ExperimentIdentifiers.deploymentId.getter()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t TrialAssetManager.ExperimentIdentifiers.treatmentId.getter()
{
  return sub_1B2999874();
}

void sub_1B2DDE2C0(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1)
  {
    id v3 = a1;
    id v4 = objc_msgSend(v3, sel_experimentId);
    uint64_t v5 = sub_1B2E82378();
    uint64_t v7 = v6;

    unsigned int v8 = objc_msgSend(v3, sel_deploymentId);
    id v9 = objc_msgSend(v3, sel_treatmentId);
    uint64_t v10 = sub_1B2E82378();
    uint64_t v12 = v11;

    uint64_t v13 = v8;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    uint64_t v13 = 0;
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v13;
  a2[3] = v10;
  a2[4] = v12;
}

uint64_t static TrialAssetManager.ExperimentIdentifiers.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v5) {
      return 0;
    }
  }
  else
  {
    char v9 = sub_1B2E837A8();
    uint64_t result = 0;
    if ((v9 & 1) == 0 || v2 != v5) {
      return result;
    }
  }
  if (v3 == v6 && v4 == v7) {
    return 1;
  }
  sub_1B2999874();

  return sub_1B2E837A8();
}

uint64_t sub_1B2DDE46C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D697265707865 && a2 == 0xEC0000006449746ELL;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656D796F6C706564 && a2 == 0xEC0000006449746ELL;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E656D7461657274 && a2 == 0xEB00000000644974)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B2DDE600(char a1)
{
  if (!a1) {
    return 0x656D697265707865;
  }
  if (a1 == 1) {
    return 0x656D796F6C706564;
  }
  return 0x6E656D7461657274;
}

uint64_t sub_1B2DDE664()
{
  return sub_1B2DDE600(*v0);
}

uint64_t sub_1B2DDE66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DDE46C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DDE694(uint64_t a1)
{
  unint64_t v2 = sub_1B2DE0FCC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DDE6D0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DE0FCC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TrialAssetManager.ExperimentIdentifiers.encode(to:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C44688);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DE0FCC();
  sub_1B2E83A38();
  sub_1B2E83688();
  if (!v0)
  {
    sub_1B2DE341C();
    sub_1B2E836E8();
    sub_1B2DE341C();
    sub_1B2E83688();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1B29998C8();
}

void TrialAssetManager.ExperimentIdentifiers.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C44698);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2DE0FCC();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    sub_1B2DE3428();
    uint64_t v6 = sub_1B2E83568();
    uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    int v15 = sub_1B2E835C8();
    uint64_t v9 = sub_1B2E83568();
    uint64_t v11 = v10;
    uint64_t v14 = v9;
    uint64_t v12 = sub_1B299F450();
    v13(v12);
    *(void *)uint64_t v4 = v6;
    *(void *)(v4 + 8) = v8;
    *(_DWORD *)(v4 + 16) = v15;
    *(void *)(v4 + 24) = v14;
    *(void *)(v4 + 32) = v11;
    swift_bridgeObjectRetain();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

void sub_1B2DDEA44()
{
}

void sub_1B2DDEA5C()
{
}

uint64_t sub_1B2DDEA78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for TrialAssetManager.InfoToMakeSendable();
  uint64_t v6 = (void *)swift_allocObject();
  v6[5] = sub_1B29C3CA0(0, &qword_1EB7D7660);
  v6[6] = &off_1F0ADA1A8;
  id v6[2] = a1;
  v6[7] = 0;
  v6[8] = 0;
  sub_1B29A3EB4(&qword_1EB7D7638);
  swift_allocObject();
  uint64_t v7 = sub_1B29E5380(v6);
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = v7;
  return v3;
}

uint64_t type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1EB7D8CB8);
}

uint64_t type metadata accessor for TrialAssetManager.Asset(uint64_t a1)
{
  return sub_1B29DAD3C(a1, qword_1EB7D8CA0);
}

Swift::Void __swiftcall TrialAssetManager.refresh()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 24);
  os_unfair_lock_lock(v2);
  sub_1B299D804();
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = v3 + 2;
  os_unfair_lock_unlock(v2);
  uint64_t v5 = v3[5];
  uint64_t v6 = v3[6];
  sub_1B29AEC7C(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
}

uint64_t TrialAssetManager.experimentIdentifiers(for:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(os_unfair_lock_s **)(v5 + 24);
  os_unfair_lock_lock(v6);
  sub_1B299D804();
  sub_1B29C3B84(*(void *)(v5 + 16) + 16, (uint64_t)v15);
  os_unfair_lock_unlock(v6);
  uint64_t v7 = v16;
  uint64_t v8 = v17;
  sub_1B29AEC7C(v15, v16);
  unint64_t v9 = 0xD000000000000022;
  unint64_t v10 = 0x80000001B2E8EBD0;
  switch(v4)
  {
    case 1:
      uint64_t v11 = "BEHAVIORAL_UNDERSTANDING_ANCHOR";
      goto LABEL_10;
    case 2:
      unint64_t v9 = 0xD000000000000028;
      uint64_t v12 = "CONTEXTUAL_UNDERSTANDING_EXPERIMENTATION";
      goto LABEL_8;
    case 3:
      unint64_t v9 = 0xD000000000000020;
      uint64_t v12 = "INTELLIGENCE_PLATFORM_LIGHTHOUSE";
      goto LABEL_8;
    case 4:
      unint64_t v9 = 0xD00000000000001CLL;
      uint64_t v12 = "INTELLIGENCE_PLATFORM_CONFIG";
      goto LABEL_8;
    case 5:
      unint64_t v9 = 0xD00000000000002ELL;
      uint64_t v12 = "INTELLIGENCE_PLATFORM_GLOBAL_KNOWLEDGE_SERVICE";
      goto LABEL_8;
    case 6:
      unint64_t v9 = 0xD00000000000001DLL;
      uint64_t v12 = "KNOWLEDGE_CONSTRUCTION_PERSON";
LABEL_8:
      unint64_t v10 = (unint64_t)(v12 - 32) | 0x8000000000000000;
      break;
    case 7:
      uint64_t v11 = "KNOWLEDGE_CONSTRUCTION_LOCATION";
LABEL_10:
      unint64_t v10 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      unint64_t v9 = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t v10 = 0xEB00000000474946;
      unint64_t v9 = 0x4E4F435F4452454ELL;
      break;
    default:
      break;
  }
  uint64_t v13 = (void *)(*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v8 + 24))(v9, v10, v7, v8);
  swift_bridgeObjectRelease();
  sub_1B2DDE2C0(v13, a2);
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v15);
}

uint64_t TrialAssetManager.AssetType.rawValue.getter()
{
  if (*v0) {
    return 0x726F746365726964;
  }
  else {
    return 1701603686;
  }
}

uint64_t sub_1B2DDEDE4()
{
  return sub_1B29AE7C4();
}

uint64_t sub_1B2DDEDEC()
{
  return sub_1B2AA5964();
}

uint64_t sub_1B2DDEDF4()
{
  return sub_1B29F95E4();
}

IntelligencePlatform::TrialAssetManager::AssetType_optional sub_1B2DDEDFC(Swift::String *a1)
{
  return TrialAssetManager.AssetType.init(rawValue:)(*a1);
}

uint64_t sub_1B2DDEE08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TrialAssetManager.AssetType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2DDEE30()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2DDEE90()
{
  return sub_1B2E82788();
}

uint64_t sub_1B2DDEEE0(char *a1, char *a2)
{
  return sub_1B29AD220(*a1, *a2);
}

uint64_t sub_1B2DDEEEC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *a3;
  uint64_t v8 = *(void *)(v4 + 24);
  unint64_t v9 = *(os_unfair_lock_s **)(v8 + 24);
  os_unfair_lock_lock(v9);
  swift_beginAccess();
  sub_1B29C3B84(*(void *)(v8 + 16) + 16, (uint64_t)v28);
  os_unfair_lock_unlock(v9);
  uint64_t v10 = v29;
  uint64_t v11 = v30;
  sub_1B29AEC7C(v28, v29);
  unint64_t v12 = 0xD000000000000022;
  unint64_t v13 = 0x80000001B2E8EBD0;
  switch(v7)
  {
    case 1:
      uint64_t v14 = "BEHAVIORAL_UNDERSTANDING_ANCHOR";
      goto LABEL_10;
    case 2:
      unint64_t v12 = 0xD000000000000028;
      int v15 = "CONTEXTUAL_UNDERSTANDING_EXPERIMENTATION";
      goto LABEL_8;
    case 3:
      unint64_t v12 = 0xD000000000000020;
      int v15 = "INTELLIGENCE_PLATFORM_LIGHTHOUSE";
      goto LABEL_8;
    case 4:
      unint64_t v12 = 0xD00000000000001CLL;
      int v15 = "INTELLIGENCE_PLATFORM_CONFIG";
      goto LABEL_8;
    case 5:
      unint64_t v12 = 0xD00000000000002ELL;
      int v15 = "INTELLIGENCE_PLATFORM_GLOBAL_KNOWLEDGE_SERVICE";
      goto LABEL_8;
    case 6:
      unint64_t v12 = 0xD00000000000001DLL;
      int v15 = "KNOWLEDGE_CONSTRUCTION_PERSON";
LABEL_8:
      unint64_t v13 = (unint64_t)(v15 - 32) | 0x8000000000000000;
      break;
    case 7:
      uint64_t v14 = "KNOWLEDGE_CONSTRUCTION_LOCATION";
LABEL_10:
      unint64_t v13 = (unint64_t)(v14 - 32) | 0x8000000000000000;
      unint64_t v12 = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t v13 = 0xEB00000000474946;
      unint64_t v12 = 0x4E4F435F4452454ELL;
      break;
    default:
      break;
  }
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v11 + 8))(a1, a2, v12, v13, v10, v11);
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v28);
  if (v16)
  {
    uint64_t v17 = *(void *)(v4 + 16);
    if (v17)
    {
      uint64_t v18 = *(void *)(v17 + 16);
      uint64_t v19 = *(os_unfair_lock_s **)(v18 + 24);
      swift_retain();
      os_unfair_lock_lock(v19);
      swift_beginAccess();
      uint64_t v20 = *(void *)(*(void *)(v18 + 16) + 16);
      swift_bridgeObjectRetain();
      os_unfair_lock_unlock(v19);
      uint64_t v21 = sub_1B29B259C(v7, v20);
      swift_bridgeObjectRelease();
      swift_release();
      if (!v21)
      {
        v27[0] = v7;
        uint64_t v22 = swift_allocObject();
        swift_weakInit();
        swift_retain();
        TrialAssetManager.addUpdateHandler(for:using:)(v27, (uint64_t)sub_1B2DE3324, v22);
        swift_release_n();
        uint64_t v23 = *(void *)(v17 + 16);
        uint64_t v24 = *(os_unfair_lock_s **)(v23 + 24);
        os_unfair_lock_lock(v24);
        swift_beginAccess();
        uint64_t v25 = *(void *)(*(void *)(v23 + 16) + 16);
        swift_bridgeObjectRetain();
        os_unfair_lock_unlock(v24);
        swift_isUniquelyReferenced_nonNull_native();
        sub_1B29DE8E0();
        swift_bridgeObjectRelease();
        sub_1B2DDDBEC(v25);
      }
      swift_release();
    }
  }
  return v16;
}

uint64_t sub_1B2DDF220()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    TrialAssetManager.refresh()();
    return swift_release();
  }
  return result;
}

uint64_t TrialAssetManager.addUpdateHandler(for:using:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(os_unfair_lock_s **)(v7 + 24);
  os_unfair_lock_lock(v8);
  sub_1B299D804();
  sub_1B29C3B84(*(void *)(v7 + 16) + 16, (uint64_t)v20);
  os_unfair_lock_unlock(v8);
  uint64_t v9 = v21;
  uint64_t v10 = v22;
  sub_1B29AEC7C(v20, v21);
  unint64_t v11 = 0xD000000000000022;
  unint64_t v12 = 0x80000001B2E8EBD0;
  switch(v6)
  {
    case 1:
      unint64_t v13 = "BEHAVIORAL_UNDERSTANDING_ANCHOR";
      goto LABEL_10;
    case 2:
      unint64_t v11 = 0xD000000000000028;
      uint64_t v14 = "CONTEXTUAL_UNDERSTANDING_EXPERIMENTATION";
      goto LABEL_8;
    case 3:
      unint64_t v11 = 0xD000000000000020;
      uint64_t v14 = "INTELLIGENCE_PLATFORM_LIGHTHOUSE";
      goto LABEL_8;
    case 4:
      unint64_t v11 = 0xD00000000000001CLL;
      uint64_t v14 = "INTELLIGENCE_PLATFORM_CONFIG";
      goto LABEL_8;
    case 5:
      unint64_t v11 = 0xD00000000000002ELL;
      uint64_t v14 = "INTELLIGENCE_PLATFORM_GLOBAL_KNOWLEDGE_SERVICE";
      goto LABEL_8;
    case 6:
      unint64_t v11 = 0xD00000000000001DLL;
      uint64_t v14 = "KNOWLEDGE_CONSTRUCTION_PERSON";
LABEL_8:
      unint64_t v12 = (unint64_t)(v14 - 32) | 0x8000000000000000;
      break;
    case 7:
      unint64_t v13 = "KNOWLEDGE_CONSTRUCTION_LOCATION";
LABEL_10:
      unint64_t v12 = (unint64_t)(v13 - 32) | 0x8000000000000000;
      unint64_t v11 = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t v12 = 0xEB00000000474946;
      unint64_t v11 = 0x4E4F435F4452454ELL;
      break;
    default:
      break;
  }
  os_unfair_lock_lock(v8);
  id v15 = sub_1B2DDDFA0();
  os_unfair_lock_unlock(v8);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  uint64_t v17 = *(uint64_t (**)(unint64_t, unint64_t, id, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v10 + 40);
  swift_retain();
  uint64_t v18 = v17(v11, v12, v15, sub_1B2DE1048, v16, v9, v10);
  swift_bridgeObjectRelease();

  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v20);
  type metadata accessor for TrialAssetManager.NamespaceUpdateNotificationToken();
  uint64_t result = sub_1B299D354();
  *(void *)(result + 16) = v18;
  return result;
}

uint64_t TrialAssetManager.DownloadOptions.allowsCellularAccess.getter()
{
  return *v0;
}

void TrialAssetManager.DownloadOptions.discretionaryBehavior.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

IntelligencePlatform::TrialAssetManager::DownloadOptions::DiscretionaryNetworkBehavior_optional __swiftcall TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior.init(rawValue:)(Swift::String rawValue)
{
  return (IntelligencePlatform::TrialAssetManager::DownloadOptions::DiscretionaryNetworkBehavior_optional)sub_1B2DDF4E4(v1);
}

uint64_t sub_1B2DDF4E4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B2E834D8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior.rawValue.getter()
{
  if (*v0) {
    return 0x6974657263736964;
  }
  else {
    return 0xD000000000000010;
  }
}

IntelligencePlatform::TrialAssetManager::DownloadOptions::DiscretionaryNetworkBehavior_optional sub_1B2DDF590(Swift::String *a1)
{
  return TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior.init(rawValue:)(*a1);
}

uint64_t sub_1B2DDF59C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2DDF5C4()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2DDF624()
{
  return sub_1B2E82788();
}

uint64_t sub_1B2DDF674(char *a1, char *a2)
{
  return sub_1B29AD17C(*a1, *a2);
}

uint64_t sub_1B2DDF680()
{
  return sub_1B29AE7D0();
}

uint64_t sub_1B2DDF688()
{
  return sub_1B2AA58E8();
}

uint64_t sub_1B2DDF690()
{
  return sub_1B29F9564();
}

IntelligencePlatform::TrialAssetManager::DownloadOptions __swiftcall TrialAssetManager.DownloadOptions.init(allowsCellularAccess:discretionaryBehavior:)(Swift::Bool allowsCellularAccess, IntelligencePlatform::TrialAssetManager::DownloadOptions::DiscretionaryNetworkBehavior discretionaryBehavior)
{
  char v3 = *(unsigned char *)discretionaryBehavior;
  *uint64_t v2 = allowsCellularAccess;
  v2[1] = v3;
  result.allowsCellularAccess = allowsCellularAccess;
  return result;
}

uint64_t static TrialAssetManager.DownloadOptions.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2) {
    return sub_1B29AD17C(a1[1], a2[1]);
  }
  else {
    return 0;
  }
}

uint64_t TrialAssetManager.DownloadOptions.hash(into:)()
{
  sub_1B2E839A8();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DDF768(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001B2EA45F0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001B2EA4610)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1B2DDF854(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000014;
  }
}

unint64_t sub_1B2DDF890()
{
  return sub_1B2DDF854(*v0);
}

uint64_t sub_1B2DDF898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DDF768(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DDF8C0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DE1074();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DDF8FC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DE1074();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TrialAssetManager.DownloadOptions.encode(to:)()
{
  sub_1B299F300();
  char v3 = v2;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C446A0);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DE1074();
  sub_1B2E83A38();
  sub_1B2DE341C();
  sub_1B2E83698();
  if (!v0)
  {
    sub_1B2DE10C0();
    sub_1B2DE341C();
    sub_1B2E836D8();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1B29998C8();
}

uint64_t TrialAssetManager.DownloadOptions.hashValue.getter()
{
  return sub_1B2E839E8();
}

void TrialAssetManager.DownloadOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  sub_1B299F300();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_1B29A3EB4(&qword_1E9C446B8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v17);
  sub_1B29AEC7C(v14, v14[3]);
  sub_1B2DE1074();
  sub_1B2E83A18();
  if (!v12)
  {
    sub_1B2DE3428();
    char v18 = sub_1B2E83578();
    sub_1B2DE110C();
    sub_1B2E835B8();
    uint64_t v19 = sub_1B299F450();
    v20(v19);
    *uint64_t v16 = v18 & 1;
    v16[1] = a12;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v14);
  sub_1B29998C8();
}

void sub_1B2DDFC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TrialAssetManager.DownloadOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_1B2DDFC90()
{
}

uint64_t sub_1B2DDFCB4()
{
  return sub_1B2E839E8();
}

uint64_t TrialAssetManager.downloadOnDemandAsset(for:in:downloadOptions:)(uint64_t a1, uint64_t a2, unsigned char *a3, _WORD *a4)
{
  *(void *)(v5 + 72) = a2;
  *(void *)(v5 + 80) = v4;
  *(void *)(v5 + 64) = a1;
  *(unsigned char *)(v5 + 117) = *a3;
  *(_WORD *)(v5 + 114) = *a4;
  return sub_1B299D7F8((uint64_t)sub_1B2DDFD88);
}

uint64_t sub_1B2DDFD88()
{
  sub_1B299B9B8();
  __int16 v1 = *(_WORD *)(v0 + 114);
  char v2 = *(unsigned char *)(v0 + 117);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  sub_1B29A3EB4(&qword_1EB7E5B00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v3;
  swift_bridgeObjectRetain();
  sub_1B2A184AC();
  *(unsigned char *)(v0 + 116) = v2;
  *(void *)(v0 + 88) = v6;
  *(_WORD *)(v0 + 112) = v1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1B2DDFE84;
  uint64_t v8 = sub_1B2DE3408();
  return TrialAssetManager.downloadOnDemandAssets(for:in:downloadOptions:)(v8, v9, v10);
}

uint64_t sub_1B2DDFE84()
{
  sub_1B299B3BC();
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1B299B0E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 104) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    sub_1B299F2A4();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    sub_1B299AD7C();
    return v10();
  }
}

uint64_t sub_1B2DDFF98()
{
  sub_1B299AD7C();
  return v0();
}

unint64_t sub_1B2DDFFB4()
{
  unint64_t result = qword_1E9C44650;
  if (!qword_1E9C44650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44650);
  }
  return result;
}

uint64_t sub_1B2DE0000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrialAssetManager.Asset(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t TrialAssetManager.downloadOnDemandAssets(for:in:downloadOptions:)(uint64_t a1, unsigned char *a2, _WORD *a3)
{
  *(void *)(v4 + 80) = a1;
  *(void *)(v4 + 88) = v3;
  *(unsigned char *)(v4 + 154) = *a2;
  *(_WORD *)(v4 + 152) = *a3;
  return sub_1B299D7F8((uint64_t)sub_1B2DE008C);
}

void sub_1B2DE008C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 154);
  uint64_t v2 = *(void *)(*(void *)(v0 + 88) + 24);
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + 24);
  os_unfair_lock_lock(v3);
  sub_1B299D804();
  sub_1B29C3B84(*(void *)(v2 + 16) + 16, v0 + 16);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = *(void *)(v0 + 48);
  sub_1B29AEC7C((void *)(v0 + 16), *(void *)(v0 + 40));
  swift_bridgeObjectRetain();
  sub_1B2A43940();
  *(void *)(v0 + 96) = v5;
  swift_bridgeObjectRelease();
  unint64_t v6 = 0x80000001B2E8EBD0;
  switch(v1)
  {
    case 1:
      uint64_t v7 = "BEHAVIORAL_UNDERSTANDING_ANCHOR";
      goto LABEL_10;
    case 2:
      uint64_t v8 = "CONTEXTUAL_UNDERSTANDING_EXPERIMENTATION";
      goto LABEL_8;
    case 3:
      uint64_t v8 = "INTELLIGENCE_PLATFORM_LIGHTHOUSE";
      goto LABEL_8;
    case 4:
      uint64_t v8 = "INTELLIGENCE_PLATFORM_CONFIG";
      goto LABEL_8;
    case 5:
      uint64_t v8 = "INTELLIGENCE_PLATFORM_GLOBAL_KNOWLEDGE_SERVICE";
      goto LABEL_8;
    case 6:
      uint64_t v8 = "KNOWLEDGE_CONSTRUCTION_PERSON";
LABEL_8:
      unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    case 7:
      uint64_t v7 = "KNOWLEDGE_CONSTRUCTION_LOCATION";
LABEL_10:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    case 8:
      unint64_t v6 = 0xEB00000000474946;
      break;
    default:
      break;
  }
  *(void *)(v0 + 104) = v6;
  int v9 = *(unsigned __int8 *)(v0 + 152);
  uint64_t v10 = *(os_unfair_lock_s **)(v2 + 24);
  os_unfair_lock_lock(v10);
  *(void *)(v0 + 112) = sub_1B2DDDD40();
  os_unfair_lock_unlock(v10);
  if (v9 == 2)
  {
    id v11 = 0;
  }
  else
  {
    unint64_t v12 = *(unsigned __int16 *)(v0 + 152);
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB00D8]), sel_initWithAllowsCellular_discretionaryBehavior_, v12 & 1, (v12 >> 7) & 2);
  }
  *(void *)(v0 + 120) = v11;
  uint64_t v13 = *(void *)(v0 + 80);
  uint64_t v14 = sub_1B299D354();
  *(void *)(v0 + 128) = v14;
  *(void *)(v14 + 16) = v13;
  uint64_t v16 = *(void *)(v4 + 16) + **(int **)(v4 + 16);
  swift_bridgeObjectRetain();
  id v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v15;
  *id v15 = v0;
  v15[1] = sub_1B2DE03D4;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1B2DE03D4()
{
  sub_1B299F394();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299B0E0();
  *unint64_t v6 = v5;
  v3[18] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v7 = (void *)v3[15];
    uint64_t v8 = (void *)v3[14];
    swift_release();

    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B2DE04E0()
{
  sub_1B299B3BC();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  TrialAssetManager.refresh()();
  sub_1B2999AB8();
  return v1();
}

uint64_t sub_1B2DE0540()
{
  sub_1B299B9B8();
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v2 = *(void **)(v0 + 112);
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  sub_1B299AD7C();
  return v3();
}

void sub_1B2DE05D8()
{
  if (qword_1EB7E5AE0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1B2E81FB8();
  sub_1B29A4B98(v0, (uint64_t)qword_1EB7E5AC0);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1B2E81F98();
  os_log_type_t v2 = sub_1B2E82D98();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    v14[0] = v4;
    *(_DWORD *)uint64_t v3 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1B2E82B18();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    sub_1B29BF6BC(v5, v7, (uint64_t)v14, v8, v9, v10, v11, v12, v13, v14[0], v14[1], v14[2], v14[3], v14[4], v14[5], v14[6], v14[7], v14[8], v14[9],
      v14[10]);
    sub_1B2E82FB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2048;
    sub_1B2E82FB8();
    _os_log_impl(&dword_1B2996000, v1, v2, "Downloading asset for %s: %ld", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3EB30C0](v4, -1, -1);
    MEMORY[0x1B3EB30C0](v3, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t TrialAssetManager.Asset.url.getter()
{
  sub_1B2E80498();
  sub_1B2999864();
  uint64_t v0 = sub_1B2999874();

  return v1(v0);
}

uint64_t TrialAssetManager.Asset.metadata.getter()
{
  type metadata accessor for TrialAssetManager.Asset(0);

  return swift_bridgeObjectRetain();
}

uint64_t TrialAssetManager.Asset.experimentIdentifiers.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TrialAssetManager.Asset(0) + 24));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;

  return sub_1B29E1A88(v4, v5);
}

uint64_t TrialAssetManager.NamespaceUpdateNotificationToken.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t TrialAssetManager.NamespaceUpdateNotificationToken.__deallocating_deinit()
{
  return sub_1B2DE08F0(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1B2DE08F0(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  sub_1B2DE33D0();

  return swift_deallocClassInstance();
}

void TrialAssetManager.NamespaceUpdateInfo.namespace.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t TrialAssetManager.NamespaceUpdateInfo.token.getter()
{
  return swift_retain();
}

uint64_t sub_1B2DE093C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_namespaceName);
  uint64_t v5 = sub_1B2E82378();
  uint64_t v7 = v6;

  v8._countAndFlagsBits = v5;
  v8._object = v7;
  TrialNamespace.init(rawValue:)(v8);
  uint64_t v9 = LOBYTE(v28[0]);
  if (LOBYTE(v28[0]) == 9)
  {
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1B2E81FB8();
    sub_1B29A4B98(v10, (uint64_t)qword_1EB7E5AC0);
    swift_unknownObjectRetain_n();
    uint64_t v11 = sub_1B2E81F98();
    os_log_type_t v12 = sub_1B2E82DC8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v28[0] = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      id v15 = objc_msgSend(a1, sel_namespaceName);
      uint64_t v16 = sub_1B2E82378();
      uint64_t v18 = v17;

      sub_1B29BF6BC(v16, v18, (uint64_t)v28, v19, v20, v21, v22, v23, v26, (unint64_t)(v13 + 4), v27, v28[0], v28[1], v28[2], v28[3], v28[4], v28[5], v28[6], v28[7],
        v28[8]);
      sub_1B2E82FB8();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B2996000, v11, v12, "TrialAssetmanager: NamespaceUpdateInfo: init: unknown namespaceName %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3EB30C0](v14, -1, -1);
      MEMORY[0x1B3EB30C0](v13, -1, -1);

      uint64_t result = swift_unknownObjectRelease();
    }
    else
    {

      uint64_t result = swift_unknownObjectRelease_n();
    }
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    id v25 = objc_msgSend(a1, sel_token);
    swift_unknownObjectRelease();
    type metadata accessor for TrialAssetManager.NamespaceUpdateNotificationToken();
    uint64_t result = sub_1B299D354();
    *(void *)(result + 16) = v25;
    *a2 = v9;
    a2[1] = result;
  }
  return result;
}

void sub_1B2DE0BA0(uint64_t a1, void (*a2)(void *))
{
  uint64_t v3 = (void *)swift_unknownObjectRetain();
  sub_1B2DE093C(v3, v8);
  if (v8[1])
  {
    a2(v8);
    swift_release();
  }
  else
  {
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1B2E81FB8();
    sub_1B29A4B98(v4, (uint64_t)qword_1EB7E5AC0);
    oslog = sub_1B2E81F98();
    os_log_type_t v5 = sub_1B2E82DB8();
    if (os_log_type_enabled(oslog, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1B2996000, oslog, v5, "TrialAssetmanager: addUpdateHandler: cannot construct triNamespaceUpdate", v6, 2u);
      MEMORY[0x1B3EB30C0](v6, -1, -1);
    }
  }
}

uint64_t TrialAssetManager.removeUpdateHandler(for:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 24);
  os_unfair_lock_lock(v4);
  sub_1B299D804();
  os_log_type_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = v5 + 2;
  os_unfair_lock_unlock(v4);
  uint64_t v7 = v5[5];
  uint64_t v8 = v5[6];
  sub_1B29AEC7C(v6, v7);
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v8 + 48))(*(void *)(a1 + 16), v7, v8);
}

uint64_t TrialAssetManager.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t TrialAssetManager.__deallocating_deinit()
{
  TrialAssetManager.deinit();
  sub_1B29A1EB0();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2DE0DD8(void *a1)
{
  id v2 = objc_msgSend(a1, sel_path);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1B2E82378();

  return v3;
}

uint64_t sub_1B2DE0E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2DE0EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2DE0F18(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1B2999864();
  uint64_t v4 = sub_1B2999874();
  v5(v4);
  return a2;
}

uint64_t sub_1B2DE0F74(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_1B2DE0FCC()
{
  unint64_t result = qword_1E9C44690;
  if (!qword_1E9C44690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44690);
  }
  return result;
}

uint64_t sub_1B2DE1018()
{
  swift_release();
  uint64_t v0 = sub_1B29A1EB0();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

void sub_1B2DE1048(uint64_t a1)
{
  sub_1B2DE0BA0(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t type metadata accessor for TrialAssetManager.NamespaceUpdateNotificationToken()
{
  return self;
}

unint64_t sub_1B2DE1074()
{
  unint64_t result = qword_1E9C446A8;
  if (!qword_1E9C446A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C446A8);
  }
  return result;
}

unint64_t sub_1B2DE10C0()
{
  unint64_t result = qword_1E9C446B0;
  if (!qword_1E9C446B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C446B0);
  }
  return result;
}

unint64_t sub_1B2DE110C()
{
  unint64_t result = qword_1E9C446C0;
  if (!qword_1E9C446C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C446C0);
  }
  return result;
}

uint64_t sub_1B2DE1158()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1B2DE33D0();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

void sub_1B2DE1188()
{
}

unint64_t sub_1B2DE1194()
{
  unint64_t result = qword_1EB7E3C58;
  if (!qword_1EB7E3C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3C58);
  }
  return result;
}

uint64_t sub_1B2DE11E0()
{
  return sub_1B29D22C4(&qword_1E9C446E0, &qword_1E9C446E8);
}

unint64_t sub_1B2DE1220()
{
  unint64_t result = qword_1E9C446F0;
  if (!qword_1E9C446F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C446F0);
  }
  return result;
}

unint64_t sub_1B2DE1270()
{
  unint64_t result = qword_1E9C446F8;
  if (!qword_1E9C446F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C446F8);
  }
  return result;
}

unint64_t sub_1B2DE12C0()
{
  unint64_t result = qword_1E9C44700;
  if (!qword_1E9C44700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44700);
  }
  return result;
}

uint64_t sub_1B2DE130C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.updateHandlers.getter();
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for TrialNamespace(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DE1408);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

void type metadata accessor for TrialNamespace()
{
}

uint64_t type metadata accessor for TrialAssetManager()
{
  return self;
}

uint64_t method lookup function for TrialAssetManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TrialAssetManager);
}

void *initializeBufferWithCopyOfBuffer for TrialAssetManager.RefreshPolicy(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

void *assignWithCopy for TrialAssetManager.RefreshPolicy(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for TrialAssetManager.RefreshPolicy(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

void type metadata accessor for TrialAssetManager.RefreshPolicy()
{
}

uint64_t type metadata accessor for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo()
{
  return self;
}

uint64_t method lookup function for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo);
}

uint64_t type metadata accessor for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.AutoRefreshContent()
{
  return self;
}

uint64_t method lookup function for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.AutoRefreshContent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.AutoRefreshContent);
}

uint64_t type metadata accessor for TrialAssetManager.InfoToMakeSendable()
{
  return self;
}

uint64_t initializeWithCopy for TrialAssetManager.ExperimentIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrialAssetManager.ExperimentIdentifiers(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrialAssetManager.ExperimentIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for TrialAssetManager.ExperimentIdentifiers()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TrialAssetManager.AssetLocalAvailabilityInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for TrialAssetManager.Asset(0);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = sub_1B2E80498();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 20));
      uint64_t v10 = *(int *)(v7 + 24);
      uint64_t v11 = (char *)a1 + v10;
      os_log_type_t v12 = (char *)a2 + v10;
      uint64_t v13 = *(uint64_t *)((char *)a2 + v10 + 8);
      swift_bridgeObjectRetain();
      if (v13)
      {
        *(void *)uint64_t v11 = *(void *)v12;
        *((void *)v11 + 1) = v13;
        *((_DWORD *)v11 + 4) = *((_DWORD *)v12 + 4);
        uint64_t v14 = *((void *)v12 + 3);
        uint64_t v15 = *((void *)v12 + 4);
        *((void *)v11 + 3) = v14;
        *((void *)v11 + 4) = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v16 = *((_OWORD *)v12 + 1);
        *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
        *((_OWORD *)v11 + 1) = v16;
        *((void *)v11 + 4) = *((void *)v12 + 4);
      }
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for TrialAssetManager.AssetLocalAvailabilityInfo(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrialAssetManager.Asset(0);
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_1B2E80498();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(a1 + *(int *)(v2 + 24) + 8);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *initializeWithCopy for TrialAssetManager.AssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrialAssetManager.Asset(0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1B2E80498();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
    uint64_t v8 = *(int *)(v6 + 24);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = *(void *)&a2[v8 + 8];
    swift_bridgeObjectRetain();
    if (v11)
    {
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v11;
      *((_DWORD *)v9 + 4) = *((_DWORD *)v10 + 4);
      uint64_t v12 = *((void *)v10 + 3);
      uint64_t v13 = *((void *)v10 + 4);
      *((void *)v9 + 3) = v12;
      *((void *)v9 + 4) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      *((void *)v9 + 4) = *((void *)v10 + 4);
    }
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for TrialAssetManager.AssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrialAssetManager.Asset(0);
  int v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v14 = sub_1B2E80498();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(a1, a2, v14);
      *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v15 = *(int *)(v6 + 24);
      uint64_t v16 = (uint64_t)&a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = *(void *)&a1[v15 + 8];
      uint64_t v19 = *((void *)v17 + 1);
      if (v18)
      {
        if (v19)
        {
          *(void *)uint64_t v16 = *(void *)v17;
          *(void *)(v16 + 8) = *((void *)v17 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(v16 + 16) = *((_DWORD *)v17 + 4);
          *(void *)(v16 + 24) = *((void *)v17 + 3);
          *(void *)(v16 + 32) = *((void *)v17 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1B29E2560(v16);
          uint64_t v23 = *((void *)v17 + 4);
          long long v24 = *((_OWORD *)v17 + 1);
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
          *(_OWORD *)(v16 + 16) = v24;
          *(void *)(v16 + 32) = v23;
        }
      }
      else if (v19)
      {
        *(void *)uint64_t v16 = *(void *)v17;
        *(void *)(v16 + 8) = *((void *)v17 + 1);
        *(_DWORD *)(v16 + 16) = *((_DWORD *)v17 + 4);
        *(void *)(v16 + 24) = *((void *)v17 + 3);
        *(void *)(v16 + 32) = *((void *)v17 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v25 = *(_OWORD *)v17;
        long long v26 = *((_OWORD *)v17 + 1);
        *(void *)(v16 + 32) = *((void *)v17 + 4);
        *(_OWORD *)uint64_t v16 = v25;
        *(_OWORD *)(v16 + 16) = v26;
      }
      return a1;
    }
    sub_1B2DE0F74((uint64_t)a1, (void (*)(void))type metadata accessor for TrialAssetManager.Asset);
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v8) {
    goto LABEL_7;
  }
  uint64_t v9 = sub_1B2E80498();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
  uint64_t v10 = *(int *)(v6 + 24);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *((void *)v12 + 1);
  swift_bridgeObjectRetain();
  if (v13)
  {
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = *((void *)v12 + 1);
    *((_DWORD *)v11 + 4) = *((_DWORD *)v12 + 4);
    *((void *)v11 + 3) = *((void *)v12 + 3);
    *((void *)v11 + 4) = *((void *)v12 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)v12;
    long long v21 = *((_OWORD *)v12 + 1);
    *((void *)v11 + 4) = *((void *)v12 + 4);
    *(_OWORD *)uint64_t v11 = v20;
    *((_OWORD *)v11 + 1) = v21;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

char *initializeWithTake for TrialAssetManager.AssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrialAssetManager.Asset(0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1B2E80498();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
    uint64_t v8 = *(int *)(v6 + 24);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    *((void *)v9 + 4) = *((void *)v10 + 4);
    long long v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for TrialAssetManager.AssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TrialAssetManager.Asset(0);
  int v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v15 = sub_1B2E80498();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(a1, a2, v15);
      *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
      swift_bridgeObjectRelease();
      uint64_t v16 = *(int *)(v6 + 24);
      uint64_t v17 = (uint64_t)&a1[v16];
      uint64_t v18 = &a2[v16];
      if (*(void *)&a1[v16 + 8])
      {
        uint64_t v19 = *((void *)v18 + 1);
        if (v19)
        {
          *(void *)uint64_t v17 = *(void *)v18;
          *(void *)(v17 + 8) = v19;
          swift_bridgeObjectRelease();
          *(_DWORD *)(v17 + 16) = *((_DWORD *)v18 + 4);
          uint64_t v20 = *((void *)v18 + 4);
          *(void *)(v17 + 24) = *((void *)v18 + 3);
          *(void *)(v17 + 32) = v20;
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_1B29E2560(v17);
      }
      long long v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *(_OWORD *)(v17 + 16) = v21;
      *(void *)(v17 + 32) = *((void *)v18 + 4);
      return a1;
    }
    sub_1B2DE0F74((uint64_t)a1, (void (*)(void))type metadata accessor for TrialAssetManager.Asset);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_1B2E80498();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
  uint64_t v10 = *(int *)(v6 + 24);
  long long v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *((void *)v11 + 4) = *((void *)v12 + 4);
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)long long v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialAssetManager.AssetLocalAvailabilityInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2DE1FB0);
}

uint64_t sub_1B2DE1FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrialAssetManager.Asset(0);
  unsigned int v5 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TrialAssetManager.AssetLocalAvailabilityInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2DE200C);
}

uint64_t sub_1B2DE200C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for TrialAssetManager.Asset(0);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, v5, a3, v6);
}

uint64_t sub_1B2DE2068(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrialAssetManager.Asset(0);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v2);
}

uint64_t sub_1B2DE20AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrialAssetManager.Asset(0);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v4);
}

uint64_t sub_1B2DE20F8()
{
  uint64_t result = type metadata accessor for TrialAssetManager.Asset(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void type metadata accessor for TrialAssetManager.AssetType()
{
}

uint64_t sub_1B2DE2184(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xBFu) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for TrialAssetManager.AssetError(uint64_t a1)
{
  return sub_1B2DE21AC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1B2DE21AC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xBFu) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s20IntelligencePlatform17TrialAssetManagerC10AssetErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B2DE2184(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TrialAssetManager.AssetError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B2DE2184(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B2DE21AC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TrialAssetManager.AssetError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B2DE21AC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialAssetManager.AssetError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xE && *(unsigned char *)(a1 + 17))
    {
      unsigned int v2 = *(_DWORD *)a1 + 13;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 16) >> 2) & 0xC | (*(unsigned __int8 *)(a1 + 16) >> 6)) ^ 0xF;
      if (v2 >= 0xD) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for TrialAssetManager.AssetError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 14;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 16 * (((-a2 >> 2) & 3) - 4 * a2);
    }
  }
  return result;
}

uint64_t sub_1B2DE2350(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_1B2DE235C(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_1B2DE236C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 0xF | (a2 << 6);
  return result;
}

void type metadata accessor for TrialAssetManager.AssetError()
{
}

uint64_t getEnumTagSinglePayload for TrialAssetManager.DownloadOptions(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 65281 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65281 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 16)) - 65282;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TrialAssetManager.DownloadOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DE24F4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for TrialAssetManager.DownloadOptions()
{
}

void type metadata accessor for TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TrialAssetManager.Asset(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B2E80498();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    swift_bridgeObjectRetain();
    if (v11)
    {
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v11;
      *((_DWORD *)v9 + 4) = *((_DWORD *)v10 + 4);
      uint64_t v12 = *((void *)v10 + 3);
      uint64_t v13 = *((void *)v10 + 4);
      *((void *)v9 + 3) = v12;
      *((void *)v9 + 4) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
      *((void *)v9 + 4) = *((void *)v10 + 4);
    }
  }
  return a1;
}

uint64_t destroy for TrialAssetManager.Asset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 24) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TrialAssetManager.Asset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  swift_bridgeObjectRetain();
  if (v10)
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v10;
    *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
    uint64_t v11 = *(void *)(v9 + 24);
    uint64_t v12 = *(void *)(v9 + 32);
    *(void *)(v8 + 24) = v11;
    *(void *)(v8 + 32) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v13;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for TrialAssetManager.Asset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  uint64_t v10 = *(void *)(a1 + v7 + 8);
  uint64_t v11 = *((void *)v9 + 1);
  if (v10)
  {
    if (v11)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = *((void *)v9 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v8 + 16) = *((_DWORD *)v9 + 4);
      *(void *)(v8 + 24) = *((void *)v9 + 3);
      *(void *)(v8 + 32) = *((void *)v9 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B29E2560(v8);
      uint64_t v12 = *((void *)v9 + 4);
      long long v13 = v9[1];
      *(_OWORD *)uint64_t v8 = *v9;
      *(_OWORD *)(v8 + 16) = v13;
      *(void *)(v8 + 32) = v12;
    }
  }
  else if (v11)
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = *((void *)v9 + 1);
    *(_DWORD *)(v8 + 16) = *((_DWORD *)v9 + 4);
    *(void *)(v8 + 24) = *((void *)v9 + 3);
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *v9;
    long long v15 = v9[1];
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    *(_OWORD *)uint64_t v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
  }
  return a1;
}

uint64_t initializeWithTake for TrialAssetManager.Asset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  return a1;
}

uint64_t assignWithTake for TrialAssetManager.Asset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (!*(void *)(a1 + v7 + 8)) {
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(v9 + 8);
  if (!v10)
  {
    sub_1B29E2560(v8);
LABEL_5:
    long long v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v12;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
    return a1;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 32);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialAssetManager.Asset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2DE2A98);
}

uint64_t sub_1B2DE2A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B2E80498();
  sub_1B299B768();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TrialAssetManager.Asset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2DE2B38);
}

void sub_1B2DE2B38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1B2E80498();
  sub_1B299B768();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1B2DE2BC0()
{
  uint64_t result = sub_1B2E80498();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for TrialAssetManager.NamespaceUpdateNotificationToken(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TrialAssetManager.NamespaceUpdateNotificationToken);
}

uint64_t initializeBufferWithCopyOfBuffer for TrialAssetManager.NamespaceUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TrialAssetManager.NamespaceUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TrialAssetManager.NamespaceUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

void type metadata accessor for TrialAssetManager.NamespaceUpdateInfo()
{
}

unsigned char *_s20IntelligencePlatform17TrialAssetManagerC9AssetTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DE2E0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialAssetManager.DownloadOptions.CodingKeys()
{
  return &type metadata for TrialAssetManager.DownloadOptions.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TrialAssetManager.ExperimentIdentifiers.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DE2F10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialAssetManager.ExperimentIdentifiers.CodingKeys()
{
  return &type metadata for TrialAssetManager.ExperimentIdentifiers.CodingKeys;
}

unint64_t sub_1B2DE2F4C()
{
  unint64_t result = qword_1E9C44710;
  if (!qword_1E9C44710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44710);
  }
  return result;
}

unint64_t sub_1B2DE2F9C()
{
  unint64_t result = qword_1E9C44718;
  if (!qword_1E9C44718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44718);
  }
  return result;
}

unint64_t sub_1B2DE2FEC()
{
  unint64_t result = qword_1E9C44720;
  if (!qword_1E9C44720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44720);
  }
  return result;
}

unint64_t sub_1B2DE303C()
{
  unint64_t result = qword_1E9C44728;
  if (!qword_1E9C44728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44728);
  }
  return result;
}

unint64_t sub_1B2DE308C()
{
  unint64_t result = qword_1E9C44730;
  if (!qword_1E9C44730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44730);
  }
  return result;
}

unint64_t sub_1B2DE30DC()
{
  unint64_t result = qword_1E9C44738;
  if (!qword_1E9C44738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44738);
  }
  return result;
}

unint64_t sub_1B2DE3128()
{
  unint64_t result = qword_1E9C44740;
  if (!qword_1E9C44740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44740);
  }
  return result;
}

unint64_t sub_1B2DE3174()
{
  unint64_t result = qword_1E9C44748;
  if (!qword_1E9C44748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44748);
  }
  return result;
}

unint64_t sub_1B2DE31C0()
{
  unint64_t result = qword_1E9C44750;
  if (!qword_1E9C44750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44750);
  }
  return result;
}

unint64_t sub_1B2DE320C()
{
  unint64_t result = qword_1E9C37AB0;
  if (!qword_1E9C37AB0)
  {
    sub_1B2E82E18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37AB0);
  }
  return result;
}

unint64_t sub_1B2DE325C()
{
  unint64_t result = qword_1E9C44760;
  if (!qword_1E9C44760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44760);
  }
  return result;
}

unint64_t sub_1B2DE32A8()
{
  unint64_t result = qword_1E9C44770;
  if (!qword_1E9C44770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44770);
  }
  return result;
}

uint64_t sub_1B2DE32F4()
{
  swift_weakDestroy();
  uint64_t v0 = sub_1B2DE33D0();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_1B2DE3324()
{
  return sub_1B2DDF220();
}

uint64_t sub_1B2DE333C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 8 * (v3 >> 6) + 64) |= 1 << v3;
  uint64_t v7 = (void *)(*(void *)(v2 + 48) + 16 * v3);
  *uint64_t v7 = v5;
  v7[1] = v4;
  uint64_t v8 = *(void *)(v2 + 56) + *(void *)(a2 + 72) * v3;
  return sub_1B2DE0E48(a1, v8);
}

uint64_t sub_1B2DE3380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_1B29DB060(v27, v26, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B2DE339C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_1B29DB060(v26, v27, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B2DE33D0()
{
  return v0;
}

uint64_t sub_1B2DE3408()
{
  return v0;
}

uint64_t sub_1B2DE3428()
{
  *(unsigned char *)(v0 - 65) = 0;
  return v0 - 65;
}

uint64_t sub_1B2DE343C(uint64_t a1, void *a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1B29C0108(0, v3, 0);
    uint64_t v5 = 0;
    uint64_t v6 = v23;
    uint64_t v21 = a1 + 32;
    uint64_t v22 = a2;
    uint64_t v20 = a2 + 7;
    while (1)
    {
      int64_t v7 = v3;
      uint64_t v8 = v21 + 88 * v5;
      uint64_t v9 = *(void *)(v8 + 72);
      if (v9)
      {
        uint64_t v10 = v22[2];
        if (v10)
        {
          uint64_t v11 = *(void *)(v8 + 64);
          if (v22[4] != v11 || v9 != v22[5])
          {
            uint64_t result = sub_1B2E837A8();
            if (v10 != 1 && (result & 1) == 0) {
              break;
            }
          }
        }
      }
LABEL_19:
      unint64_t v18 = *(void *)(v23 + 16);
      unint64_t v17 = *(void *)(v23 + 24);
      unint64_t v19 = v18 + 1;
      if (v18 >= v17 >> 1) {
        sub_1B29C0108(v17 > 1, v18 + 1, 1);
      }
      ++v5;
      *(void *)(v23 + 16) = v19;
      int64_t v3 = v7;
      if (v5 == v7)
      {
        swift_bridgeObjectRelease();
        return v6;
      }
    }
    long long v14 = v20;
    uint64_t v15 = 1;
    while (!__OFADD__(v15, 1))
    {
      if (*(v14 - 1) != v11 || v9 != *v14)
      {
        uint64_t result = sub_1B2E837A8();
        if (v15 + 1 != v10)
        {
          v14 += 2;
          ++v15;
          if ((result & 1) == 0) {
            continue;
          }
        }
      }
      goto LABEL_19;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B2DE35E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 1;
  }
  uint64_t v2 = (uint64_t *)(a1 + 32);
  while (1)
  {
    uint64_t v4 = *v2++;
    uint64_t v3 = v4;
    if (v4)
    {
      if (*(void *)(v3 + 16)) {
        break;
      }
    }
    if (!--v1) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1B2DE3618()
{
  uint64_t v0 = sub_1B2B7F598();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  *(_OWORD *)(v0 + 16) = xmmword_1B2EF3950;
  *(void *)(v0 + 32) = &unk_1F0AC1630;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EC01E0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EF3960;
  *(void *)(v0 + 72) = 0x80000001B2EA4750;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  sub_1B29B2124(v1, v2);
  return v0;
}

uint64_t sub_1B2DE36C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (((1 << *(unsigned char *)(a6 + 64)) & 0x1FA) == 0)
  {
LABEL_30:
    char v25 = 0;
    *(void *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 88) = xmmword_1B2EC01D0;
    *(unsigned char *)(a1 + 104) = 0;
    return v25 & 1;
  }
  uint64_t v10 = (void *)(a6 + 32);
  sub_1B299DEC4();
  if (*(void *)(a6 + 32))
  {
    uint64_t v11 = sub_1B29B2540(115, 0xE100000000000000);
    if (!v11)
    {
      swift_endAccess();
      goto LABEL_10;
    }
    swift_endAccess();
    swift_beginAccess();
    uint64_t v12 = *(void *)(v11 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    if (*(void *)(v12 + 16))
    {
      uint64_t v11 = sub_1B2DDC660(v12);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = 0;
LABEL_10:
  sub_1B299DEC4();
  if (!*v10)
  {
    swift_endAccess();
LABEL_17:
    uint64_t v13 = 0;
    goto LABEL_18;
  }
  uint64_t v13 = sub_1B29B2540(112, 0xE100000000000000);
  if (!v13)
  {
    swift_endAccess();
    goto LABEL_18;
  }
  swift_endAccess();
  swift_beginAccess();
  uint64_t v14 = *(void *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v13 = sub_1B2DDC660(v14);
LABEL_18:
  sub_1B299DEC4();
  if (*v10 && (uint64_t v15 = sub_1B29B2540(111, 0xE100000000000000)) != 0)
  {
    uint64_t v16 = v15;
    swift_endAccess();
    swift_beginAccess();
    uint64_t v17 = *(void *)(v16 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    if (*(void *)(v17 + 16))
    {
      uint64_t v18 = sub_1B2DDC660(v17);
      goto LABEL_24;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v18 = 0;
LABEL_24:
  sub_1B29A3EB4(&qword_1E9C37F48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC89A0;
  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v13;
  *(void *)(inited + 48) = v18;
  char v20 = sub_1B2DE35E4(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2D98F60();
  if (v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB7E30F0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1B2E81FB8();
    sub_1B29A4B98(v21, (uint64_t)qword_1EB7E30D8);
    uint64_t v22 = sub_1B2E81F98();
    os_log_type_t v23 = sub_1B2E82DB8();
    if (os_log_type_enabled(v22, v23))
    {
      long long v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v24 = 0;
      _os_log_impl(&dword_1B2996000, v22, v23, "Triple operator has all empty params", v24, 2u);
      MEMORY[0x1B3EB30C0](v24, -1, -1);
    }

    goto LABEL_30;
  }
  uint64_t v26 = (long long *)(a2 + *(int *)(type metadata accessor for QueryContext() + 32));
  unint64_t v27 = *((void *)v26 + 11);
  char v28 = *((unsigned char *)v26 + 104);
  char v29 = 32;
  if (v27 >> 1 != 0xFFFFFFFF || (*((unsigned char *)v26 + 104) & 0x1E) != 0)
  {
    uint64_t v37 = *((void *)v26 + 12);
    uint64_t v38 = *((void *)v26 + 10);
    long long v39 = v26[1];
    long long v51 = *v26;
    long long v40 = v26[2];
    long long v41 = v26[3];
    long long v52 = v39;
    long long v53 = v40;
    long long v42 = v26[4];
    long long v54 = v41;
    long long v55 = v42;
    uint64_t v56 = v38;
    unint64_t v57 = v27;
    uint64_t v58 = v37;
    char v59 = v28;
    v45[0] = 0;
    v45[1] = v11;
    v45[2] = 0;
    v45[3] = v13;
    v45[4] = 0;
    v45[5] = v18;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    uint64_t v49 = 0;
    char v50 = 32;
    unsigned __int8 v44 = 1;
    sub_1B2D83BA0((uint64_t)v45, &v44, (uint64_t)&v60);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6) {
      return v25 & 1;
    }
    uint64_t v30 = v60;
    long long v31 = v61;
    long long v32 = v62;
    long long v34 = v63;
    long long v33 = v64;
    long long v35 = v65;
    long long v36 = v66;
    char v29 = v67;
  }
  else
  {
    uint64_t v30 = 0;
    long long v31 = (unint64_t)v11;
    long long v32 = (unint64_t)v13;
    long long v33 = 0uLL;
    long long v34 = (unint64_t)v18;
    long long v35 = 0uLL;
    long long v36 = 0uLL;
  }
  *(void *)a1 = v30;
  *(_OWORD *)(a1 + 8) = v31;
  *(_OWORD *)(a1 + 24) = v32;
  *(_OWORD *)(a1 + 40) = v34;
  *(_OWORD *)(a1 + 56) = v33;
  *(_OWORD *)(a1 + 72) = v35;
  *(_OWORD *)(a1 + 88) = v36;
  char v25 = 1;
  *(unsigned char *)(a1 + 104) = v29;
  return v25 & 1;
}

uint64_t sub_1B2DE3B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v61 = *(void *)(a3 + 16);
  if (!v61)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
LABEL_110:
    type metadata accessor for ResultGraph();
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = sub_1B2E82148();
    *(void *)(v56 + 24) = v3;
    v74[0] = 0;
    uint64_t v57 = swift_bridgeObjectRetain();
    sub_1B2D97CC8(v57, v74);
    swift_bridgeObjectRelease();
    return v5;
  }
  uint64_t v60 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v6 = v5;
    int64_t v7 = (uint64_t *)(v60 + 88 * v4);
    uint64_t v8 = v7[1];
    uint64_t v9 = v7[2];
    uint64_t v10 = v7[3];
    uint64_t v11 = v7[4];
    uint64_t v12 = v7[5];
    unint64_t v14 = v7[7];
    uint64_t v13 = v7[8];
    unint64_t v16 = v7[9];
    uint64_t v15 = v7[10];
    uint64_t v64 = v7[6];
    uint64_t v65 = *v7;
    if (v14) {
      uint64_t v17 = v7[6];
    }
    else {
      uint64_t v17 = 0;
    }
    unint64_t v18 = 0xE000000000000000;
    if (v14) {
      unint64_t v19 = v14;
    }
    else {
      unint64_t v19 = 0xE000000000000000;
    }
    if (v16) {
      uint64_t v20 = v13;
    }
    else {
      uint64_t v20 = 0;
    }
    uint64_t v62 = v20;
    uint64_t v63 = v13;
    if (v16) {
      unint64_t v18 = v16;
    }
    unint64_t v73 = v18;
    uint64_t v69 = v12;
    swift_bridgeObjectRetain();
    unint64_t v70 = v14;
    swift_bridgeObjectRetain_n();
    unint64_t v67 = v16;
    swift_bridgeObjectRetain_n();
    uint64_t v72 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    uint64_t v68 = v8;
    swift_bridgeObjectRetain();
    uint64_t v21 = (void *)sub_1B2DC1414(115, 0xE100000000000000);
    uint64_t v22 = (void *)sub_1B2DC1414(112, 0xE100000000000000);
    char v71 = (void *)sub_1B2DC1414(111, 0xE100000000000000);
    uint64_t v23 = v21[2];
    uint64_t v66 = v10;
    if (!v23)
    {
      uint64_t v25 = v11;
LABEL_24:
      uint64_t v5 = v6;
      goto LABEL_25;
    }
    BOOL v24 = v21[4] == v10 && v21[5] == v11;
    uint64_t v25 = v11;
    if (v24 || (sub_1B2E837A8() & 1) != 0) {
      goto LABEL_24;
    }
    uint64_t v5 = v6;
    if (v23 == 1) {
      goto LABEL_21;
    }
    if (v21[6] != v66 || v21[7] != v11)
    {
      uint64_t result = sub_1B2E837A8();
      if ((result & 1) == 0)
      {
        uint64_t v58 = v11;
        if (v23 != 2)
        {
          long long v31 = v21 + 9;
          uint64_t v32 = 2;
          while (1)
          {
            uint64_t v33 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              break;
            }
            if (*(v31 - 1) == v66 && *v31 == v58)
            {
              uint64_t v5 = v6;
              uint64_t v25 = v58;
              goto LABEL_25;
            }
            uint64_t result = sub_1B2E837A8();
            if (result)
            {
              uint64_t v5 = v6;
              uint64_t v25 = v58;
              goto LABEL_25;
            }
            v31 += 2;
            ++v32;
            if (v33 == v23)
            {
              swift_bridgeObjectRelease();
              uint64_t v5 = v6;
              goto LABEL_22;
            }
          }
          __break(1u);
          goto LABEL_112;
        }
LABEL_21:
        swift_bridgeObjectRelease();
LABEL_22:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_93;
      }
    }
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = v22[2];
    if (v26)
    {
      BOOL v27 = v22[4] == v17 && v22[5] == v19;
      uint64_t v28 = v72;
      if (!v27 && (sub_1B29A3558() & 1) == 0)
      {
        if (v26 == 1) {
          goto LABEL_32;
        }
        if (v22[6] != v17 || v22[7] != v19)
        {
          uint64_t result = sub_1B29A3558();
          if ((result & 1) == 0)
          {
            if (v26 != 2)
            {
              uint64_t v59 = v25;
              uint64_t v36 = v5;
              uint64_t v37 = v22 + 9;
              uint64_t v38 = 2;
              while (1)
              {
                uint64_t v39 = v38 + 1;
                if (__OFADD__(v38, 1)) {
                  break;
                }
                BOOL v40 = *(v37 - 1) == v17 && *v37 == v19;
                if (v40 || (uint64_t result = sub_1B29A3558(), (result & 1) != 0))
                {
                  uint64_t v5 = v36;
                  uint64_t v25 = v59;
                  goto LABEL_65;
                }
                v37 += 2;
                ++v38;
                if (v39 == v26)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v5 = v36;
                  goto LABEL_33;
                }
              }
LABEL_112:
              __break(1u);
              goto LABEL_113;
            }
LABEL_32:
            swift_bridgeObjectRelease();
LABEL_33:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_93:
            swift_bridgeObjectRelease();
            goto LABEL_94;
          }
        }
      }
    }
    else
    {
LABEL_65:
      uint64_t v28 = v72;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = v71[2];
    if (!v41)
    {
      uint64_t v43 = v25;
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    BOOL v42 = v71[4] == v62 && v71[5] == v73;
    if (v42 || (sub_1B2E837A8() & 1) != 0)
    {
      uint64_t v43 = v25;
LABEL_73:
      swift_bridgeObjectRelease();
LABEL_75:
      swift_bridgeObjectRelease();
LABEL_76:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B7480();
        uint64_t v5 = v54;
      }
      unint64_t v44 = *(void *)(v5 + 16);
      if (v44 >= *(void *)(v5 + 24) >> 1)
      {
        sub_1B29B7480();
        uint64_t v5 = v55;
      }
      *(void *)(v5 + 16) = v44 + 1;
      uint64_t v45 = (void *)(v5 + 88 * v44);
      v45[4] = v65;
      v45[5] = v68;
      void v45[6] = v9;
      v45[7] = v66;
      v45[8] = v43;
      v45[9] = v69;
      v45[10] = v64;
      v45[11] = v70;
      v45[12] = v63;
      v45[13] = v67;
      v45[14] = v28;
      goto LABEL_95;
    }
    if (v41 != 1)
    {
      uint64_t v43 = v25;
      if (v71[6] == v62 && v71[7] == v73) {
        goto LABEL_73;
      }
      uint64_t result = sub_1B2E837A8();
      if (result) {
        goto LABEL_73;
      }
      if (v41 != 2) {
        break;
      }
    }
LABEL_82:
    swift_bridgeObjectRelease();
    if (!*(void *)(v28 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_93;
    }
    uint64_t v43 = v25;
    swift_bridgeObjectRetain();
    uint64_t v46 = swift_bridgeObjectRetain();
    uint64_t v47 = sub_1B2DE343C(v46, v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void *)(v47 + 16);
    swift_bridgeObjectRelease();
    if (v48) {
      goto LABEL_76;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_94:
    swift_bridgeObjectRelease();
LABEL_95:
    if (++v4 == v61)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = MEMORY[0x1E4FBC860];
      goto LABEL_110;
    }
  }
  char v50 = v71 + 9;
  uint64_t v51 = 2;
  while (1)
  {
    uint64_t v52 = v51 + 1;
    if (__OFADD__(v51, 1)) {
      break;
    }
    BOOL v53 = *(v50 - 1) == v62 && *v50 == v73;
    if (v53 || (uint64_t result = sub_1B2E837A8(), (result & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = v72;
      goto LABEL_76;
    }
    v50 += 2;
    ++v51;
    uint64_t v28 = v72;
    if (v52 == v41) {
      goto LABEL_82;
    }
  }
LABEL_113:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Triple()
{
  return self;
}

uint64_t sub_1B2DE4268(uint64_t *a1, uint64_t (*a2)(void, void *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *a1;
  void v8[2] = a4;
  _OWORD v8[3] = a5;
  void v8[4] = a6;
  v8[6] = v6;
  return a2(sub_1B2DE4EEC, v8);
}

uint64_t sub_1B2DE42C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B2DE43B8(*a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B2DE4310(uint64_t a1)
{
  return sub_1B2DE4350(a1, (uint64_t)sub_1B2DE4DC8, (void (*)(uint64_t *, uint64_t, void *))SubgraphView.enumerateTriples(for:block:));
}

uint64_t sub_1B2DE4350(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t, void *))
{
  uint64_t v6 = a1;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  void v5[2] = &v7;
  a3(&v6, a2, v5);
  if (v3) {
    swift_bridgeObjectRelease();
  }
  return sub_1B299E840();
}

uint64_t sub_1B2DE43B8(uint64_t a1)
{
  long long v3 = v1[1];
  long long v6 = *v1;
  long long v7 = v3;
  uint64_t v8 = *((void *)v1 + 4);
  v5[0] = a1;
  v5[1] = MEMORY[0x1E4FBC860];
  ViewService.SportsSchedulesView.enumerateTriples(for:block:)(v5);
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return sub_1B299E840();
}

uint64_t TripleEnumeratorProtocol<>.triples(for:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1B2E828C8();
  void v8[2] = a2;
  _OWORD v8[3] = a3;
  void v8[4] = &v10;
  uint64_t v9 = v6;
  (*(void (**)(uint64_t *, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(a3 + 16))(&v9, sub_1B2DE4C94, v8, a2, a3);
  if (v3) {
    swift_bridgeObjectRelease();
  }
  return sub_1B299E840();
}

uint64_t sub_1B2DE4510()
{
  sub_1B29A3574();
  unint64_t v2 = sub_1B2DBFF50();
  uint64_t result = sub_1B299E1E0(v2);
  if (!v1) {
    uint64_t *v0 = result;
  }
  return result;
}

uint64_t TripleEnumeratorProtocol<>.triples<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getAssociatedTypeWitness();
  sub_1B2E82968();
  swift_getTupleTypeMetadata2();
  uint64_t v13 = sub_1B2E828C8();
  _OWORD v12[2] = a2;
  void v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  v12[6] = &v13;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t *, void (*)(uint64_t (*)(uint64_t), unsigned char *), uint64_t), void *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24))(a1, sub_1B2DE4CB8, v12, a3, a5, a2, a4);
  if (v5) {
    swift_bridgeObjectRelease();
  }
  return sub_1B299E840();
}

uint64_t sub_1B2DE466C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B2DE4350(*a1, (uint64_t)sub_1B2DE4DC8, (void (*)(uint64_t *, uint64_t, void *))SubgraphView.enumerateTriples(for:block:));
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B2DE46C8()
{
  return sub_1B2DE47B4();
}

uint64_t sub_1B2DE4710@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B2DE4350(*a1, (uint64_t)sub_1B2DE4F3C, (void (*)(uint64_t *, uint64_t, void *))SubgraphFilteredView.enumerateTriples(for:block:));
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B2DE476C()
{
  return sub_1B2DE47B4();
}

uint64_t sub_1B2DE47B4()
{
  sub_1B29A3574();
  uint64_t v4 = sub_1B2DE4D30(v2, v3);
  uint64_t result = sub_1B299E1E0(v4);
  if (!v1) {
    uint64_t *v0 = result;
  }
  return result;
}

uint64_t sub_1B2DE4800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a4;
  void v8[2] = a5;
  _OWORD v8[3] = a6;
  void v8[4] = a7;
  void v8[5] = a1;
  v8[6] = a2;
  return (*(uint64_t (**)(uint64_t *, uint64_t (*)(), void *, uint64_t, uint64_t))(a7 + 16))(&v9, sub_1B2DE4F10, v8, a5, a7);
}

uint64_t sub_1B2DE4870(const void *a1, uint64_t *a2)
{
  sub_1B2DE4E58((uint64_t)a1);
  sub_1B2E31484();
  uint64_t v4 = *(void *)(*a2 + 16);
  sub_1B2E31AE0(v4);
  uint64_t v5 = *a2;
  *(void *)(v5 + 16) = v4 + 1;
  memcpy((void *)(v5 + 112 * v4 + 32), a1, 0x70uLL);
  return 1;
}

uint64_t sub_1B2DE48E4(const void *a1, uint64_t *a2)
{
  sub_1B2DE4E58((uint64_t)a1);
  sub_1B2E314CC();
  uint64_t v4 = *(void *)(*a2 + 16);
  sub_1B2E31B28(v4);
  uint64_t v5 = *a2;
  *(void *)(v5 + 16) = v4 + 1;
  memcpy((void *)(v5 + 120 * v4 + 32), a1, 0x78uLL);
  return 1;
}

uint64_t sub_1B2DE4958(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - v3, a1, AssociatedTypeWitness);
  sub_1B2E82968();
  sub_1B2E82918();
  return 1;
}

uint64_t sub_1B2DE4A58(uint64_t *a1, void (*a2)(uint64_t (*)(uint64_t a1), unsigned char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = *a1;
  swift_getAssociatedTypeWitness();
  uint64_t v24 = sub_1B2E828C8();
  uint64_t v17 = a5;
  uint64_t v18 = a6;
  uint64_t v19 = a7;
  uint64_t v20 = a8;
  uint64_t v21 = &v24;
  a2(sub_1B2DE4EC4, v16);
  if (v8)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = v14;
    uint64_t v23 = v24;
    sub_1B2E82968();
    swift_getTupleTypeMetadata2();
    sub_1B2E82968();
    sub_1B2E82918();
  }
  return 1;
}

uint64_t sub_1B2DE4B94(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - v3, a1, AssociatedTypeWitness);
  sub_1B2E82968();
  sub_1B2E82918();
  return 1;
}

uint64_t sub_1B2DE4C94(uint64_t a1)
{
  return sub_1B2DE4958(a1) & 1;
}

uint64_t sub_1B2DE4CB8(uint64_t *a1, void (*a2)(uint64_t (*)(uint64_t a1), unsigned char *), uint64_t a3)
{
  return sub_1B2DE4A58(a1, a2, a3, v3[6], v3[2], v3[3], v3[4], v3[5]) & 1;
}

uint64_t dispatch thunk of TripleEnumeratorProtocol.enumerateTriples(for:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of TripleEnumeratorProtocol.enumerateTriples<A>(for:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t sub_1B2DE4D30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2DE4D78(void *__src, uint64_t *a2)
{
  memcpy(v4, __src, sizeof(v4));
  return sub_1B2DE4870(v4, a2) & 1;
}

uint64_t sub_1B2DE4DC8(void *a1)
{
  return sub_1B2DE4D78(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_1B2DE4DE8(void *__src, uint64_t *a2)
{
  memcpy(__dst, __src, sizeof(__dst));
  return sub_1B2DE48E4(__dst, a2) & 1;
}

uint64_t sub_1B2DE4E38(void *a1)
{
  return sub_1B2DE4DE8(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_1B2DE4E58(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2DE4EC4(uint64_t a1)
{
  return sub_1B2DE4B94(a1) & 1;
}

uint64_t sub_1B2DE4EEC(uint64_t a1, uint64_t a2)
{
  return sub_1B2DE4800(a1, a2, v2[5], v2[6], v2[2], v2[3], v2[4]);
}

uint64_t sub_1B2DE4F10()
{
  return (*(uint64_t (**)(void))(v0 + 40))() & 1;
}

uint64_t sub_1B2DE4F3C(void *a1)
{
  return sub_1B2DE4DC8(a1) & 1;
}

uint64_t *TripleProviderProtocol.context()(uint64_t a1)
{
  sub_1B299D31C();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  type metadata accessor for GraphObjectContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v8, v1, a1);
  return GraphObjectContext.__allocating_init<>(_:)(v8);
}

uint64_t *TripleProviderProtocol.context<A>(objectMapping:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B299D31C();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B299E4A0();
  uint64_t v12 = v11 - v10;
  sub_1B299D31C();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  sub_1B299E4A0();
  uint64_t v18 = v17 - v16;
  type metadata accessor for GraphObjectContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v18, v3, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, a1, a3);
  return GraphObjectContext.__allocating_init(_:objectMapping:)(v18, v12);
}

uint64_t dispatch thunk of TripleProviderProtocol.triples(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of TripleProviderProtocol.triples<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of TripleProviderReferenceQueryable.entityIds(referredBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1B2DE51C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v16 - v12;
  uint64_t v17 = *a1;
  uint64_t v14 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a3 + 72))(&v17, a2, a3);
  if (!v5)
  {
    MEMORY[0x1F4188790](v14);
    *(&v16 - 4) = a2;
    *(&v16 - 3) = a3;
    *(&v16 - 2) = a4;
    swift_getAssociatedConformanceWitness();
    sub_1B2E82688();
    uint64_t v4 = sub_1B2DDC524();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
  }
  return v4;
}

unint64_t sub_1B2DE5394@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
  uint64_t v4 = swift_checkMetadataState();
  uint64_t v5 = v3(v4, AssociatedConformanceWitness);
  unint64_t v7 = v6;
  if (sub_1B2E825D8())
  {
    unint64_t result = EntityIdentifier.init(_:)(v5, v7, (uint64_t)&v11);
    char v9 = v12;
    if (v12 == 1)
    {
      uint64_t v10 = 0;
    }
    else
    {
      char v9 = 0;
      uint64_t v10 = v11;
    }
  }
  else
  {
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v10 = 0;
    char v9 = 1;
  }
  *(void *)a1 = v10;
  *(unsigned char *)(a1 + 8) = v9;
  return result;
}

unint64_t sub_1B2DE54C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2DE5394(a1);
}

uint64_t dispatch thunk of TripleProviderReferrerQueryable.entityIds(referringTo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1B2DE550C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  if (!v5)
  {
    uint64_t v28 = v10;
    uint64_t v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, AssociatedTypeWitness);
    BOOL v27 = &v26;
    uint64_t v18 = MEMORY[0x1F4188790](v17);
    *(&v26 - 4) = a2;
    *(&v26 - 3) = a3;
    uint64_t v19 = v29;
    *(&v26 - 2) = v29;
    *(&v26 - 1) = v16;
    MEMORY[0x1F4188790](v18);
    *(&v26 - 6) = a2;
    *(&v26 - 5) = a3;
    *(&v26 - 4) = v19;
    *(&v26 - 3) = (uint64_t)sub_1B2DE5918;
    *(&v26 - 2) = v20;
    swift_getAssociatedConformanceWitness();
    uint64_t v21 = sub_1B2E826F8();
    BOOL v27 = &v26;
    uint64_t v30 = v21;
    MEMORY[0x1F4188790](v21);
    *(&v26 - 4) = a2;
    *(&v26 - 3) = a3;
    *(&v26 - 2) = v19;
    swift_getAssociatedTypeWitness();
    swift_getTupleTypeMetadata2();
    uint64_t v22 = sub_1B2E82968();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_1B2A4AB2C((void (*)(char *, uint64_t))sub_1B2DE5C3C, (uint64_t)(&v26 - 6), v22, (uint64_t)&type metadata for EntityIdentifier, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v24);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1B2DDC524();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v15, AssociatedTypeWitness);
  }
  return v4;
}

uint64_t sub_1B2DE585C()
{
  return sub_1B2E82748() & 1;
}

uint64_t sub_1B2DE5918()
{
  return sub_1B2DE585C();
}

uint64_t sub_1B2DE5924()
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
  uint64_t v2 = swift_checkMetadataState();
  uint64_t v3 = v1(v2, AssociatedConformanceWitness);
  uint64_t v5 = v4;
  if (v3 == EntityIdentifier.stringValue.getter() && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B2E837A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B2DE5A44(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48)) & 1;
}

uint64_t sub_1B2DE5ADC(uint64_t a1)
{
  return sub_1B2DE5A44(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 40)) & 1;
}

uint64_t sub_1B2DE5B04@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  char v8 = (char *)&v15 - v7;
  uint64_t v9 = *(int *)(v6 + 56);
  uint64_t v10 = &v8[v9];
  uint64_t v11 = (char *)a1 + v9;
  uint64_t v12 = *a1;
  *(void *)char v8 = v12;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(&v8[v9], v11, AssociatedTypeWitness);
  *a2 = v12;
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, AssociatedTypeWitness);
}

uint64_t sub_1B2DE5C3C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1B2DE5B04(a1, a2);
}

uint64_t sub_1B2DE5C60()
{
  return sub_1B2DE5924() & 1;
}

uint64_t static TriplesQuery.Clause.matchStrings(subjectMatchType:subjects:predicateMatchType:predicates:objectMatchType:objects:relationshipIdMatchType:relationshipIds:relationshipPredicateMatchType:relationshipPredicates:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, unsigned __int8 *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unsigned __int8 *a10, uint64_t a11)
{
  uint64_t v11 = *a3;
  uint64_t v12 = *a5;
  uint64_t v13 = *a7;
  uint64_t v14 = *a10;
  *(void *)a9 = *a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = v11;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = v12;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = v13;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = v14;
  *(void *)(a9 + 72) = a11;
  *(void *)(a9 + 88) = 0;
  *(void *)(a9 + 96) = 0;
  *(void *)(a9 + 80) = 0;
  *(unsigned char *)(a9 + 104) = 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t static TriplesQuery.Clause.aggregate(logicFunction:clauses:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = *a1;
  *(void *)(a3 + 8) = a2;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 89) = 0u;
  return sub_1B29EB518();
}

uint64_t static TriplesQuery.Clause.match(subjectMatchType:subjects:subjectClauses:predicateMatchType:predicates:objectMatchType:objects:relationshipIdMatchType:relationshipIds:relationshipPredicateMatchType:relationshipPredicates:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, unsigned __int8 *a6@<X5>, uint64_t a7@<X6>, unsigned __int8 *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 *a11, uint64_t a12)
{
  uint64_t v12 = *a4;
  uint64_t v13 = *a6;
  uint64_t v14 = *a8;
  uint64_t v15 = *a11;
  *(void *)a9 = *a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = v12;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = v13;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = v14;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = v15;
  *(void *)(a9 + 88) = 0;
  *(void *)(a9 + 96) = 0;
  *(void *)(a9 + 80) = a12;
  *(unsigned char *)(a9 + 104) = 65;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 TriplesQuery.Clause.init(impl:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 96);
  char v3 = *(unsigned char *)(a1 + 104);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v5;
  __n128 result = *(__n128 *)(a1 + 64);
  long long v7 = *(_OWORD *)(a1 + 80);
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v7;
  *(void *)(a2 + 96) = v2;
  *(unsigned char *)(a2 + 104) = v3;
  return result;
}

BOOL static TriplesQuery.Clause.JoinCondition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t static TriplesQuery.Clause.join(joinCondition:clauses:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = *a1;
  *(void *)(a3 + 8) = a2;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(void *)(a3 + 96) = 0;
  *(unsigned char *)(a3 + 104) = -96;
  return sub_1B29EB518();
}

uint64_t TriplesQuery.Clause.impl.getter()
{
  uint64_t v1 = sub_1B2DF2868();
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 96);
  unsigned __int8 v7 = *(unsigned char *)(v0 + 104);
  *(void *)uint64_t v9 = v1;
  *(void *)(v9 + 8) = v8;
  *(void *)(v9 + 16) = v10;
  *(void *)(v9 + 24) = v11;
  *(void *)(v9 + 32) = v12;
  *(void *)(v9 + 40) = v13;
  *(void *)(v9 + 48) = v14;
  *(void *)(v9 + 56) = v15;
  *(void *)(v9 + 64) = v2;
  *(void *)(v9 + 72) = v3;
  *(void *)(v9 + 80) = v4;
  *(void *)(v9 + 88) = v5;
  *(void *)(v9 + 96) = v6;
  *(unsigned char *)(v9 + 104) = v7;
  return sub_1B29C64D0(v1, v8, v10, v11, v12, v13, v14, v15, v2, v3, v4, v5, v6, v7);
}

__n128 TriplesQuery.Clause.impl.setter(long long *a1)
{
  long long v17 = a1[1];
  long long v18 = *a1;
  long long v16 = a1[2];
  long long v14 = a1[4];
  long long v15 = a1[3];
  __n128 v13 = (__n128)a1[5];
  uint64_t v2 = *((void *)a1 + 12);
  char v3 = *((unsigned char *)a1 + 104);
  uint64_t v4 = sub_1B2DF2868();
  sub_1B2A34B34(v4, v5, v6, v7, v8, v9, v10, v11, *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(unsigned char *)(v1 + 104));
  *(_OWORD *)uint64_t v1 = v18;
  *(_OWORD *)(v1 + 16) = v17;
  *(_OWORD *)(v1 + 32) = v16;
  *(_OWORD *)(v1 + 48) = v15;
  __n128 result = v13;
  *(_OWORD *)(v1 + 64) = v14;
  *(__n128 *)(v1 + 80) = v13;
  *(void *)(v1 + 96) = v2;
  *(unsigned char *)(v1 + 104) = v3;
  return result;
}

uint64_t (*TriplesQuery.Clause.impl.modify())(void)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.TableCodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  BOOL v4 = a1 == 0x6469776F72 && a2 == 0xE500000000000000;
  if (v4 || (sub_1B299D7AC() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 0;
  }
  else
  {
    BOOL v9 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
    if (v9 || (sub_1B299D7AC() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      char v8 = 1;
    }
    else
    {
      BOOL v10 = a1 == 0x7461636964657270 && a2 == 0xE900000000000065;
      if (v10 || (sub_1B2AA9230(), (sub_1B299D7AC() & 1) != 0))
      {
        uint64_t result = swift_bridgeObjectRelease();
        char v8 = 2;
      }
      else
      {
        BOOL v11 = a1 == 0x6E6F6974616C6572 && a2 == 0xEE00644970696873;
        if (v11 || (sub_1B299D7AC() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          char v8 = 3;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x80000001B2E95640 || (sub_1B299D7AC() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          char v8 = 4;
        }
        else
        {
          BOOL v12 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
          if (v12 || (sub_1B299D7AC() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            char v8 = 5;
          }
          else
          {
            BOOL v13 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
            if (v13 || (sub_1B299D7AC() & 1) != 0)
            {
              uint64_t result = swift_bridgeObjectRelease();
              char v8 = 6;
            }
            else if (a1 == 0x73656372756F73 && a2 == 0xE700000000000000)
            {
              uint64_t result = swift_bridgeObjectRelease();
              char v8 = 7;
            }
            else
            {
              char v15 = sub_1B299D7AC();
              uint64_t result = swift_bridgeObjectRelease();
              if (v15) {
                char v8 = 7;
              }
              else {
                char v8 = 8;
              }
            }
          }
        }
      }
    }
  }
  *a3 = v8;
  return result;
}

void TriplesQuery.Clause.TableCodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
}

uint64_t TriplesQuery.Clause.TableCodingKeys.intValue.getter()
{
  return 0;
}

uint64_t TriplesQuery.Clause.TableCodingKeys.stringValue.getter()
{
  uint64_t result = 0x6469776F72;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7463656A627573;
      break;
    case 2:
      uint64_t result = sub_1B2AA9230();
      break;
    case 3:
      uint64_t result = 0x6E6F6974616C6572;
      break;
    case 4:
      uint64_t result = 0xD000000000000015;
      break;
    case 5:
      uint64_t result = 0x7463656A626FLL;
      break;
    case 6:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 7:
      uint64_t result = 0x73656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2DE63B4(uint64_t a1)
{
  unint64_t v2 = sub_1B2DF22A4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE63F0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DF22A4();

  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL static TriplesQuery.Clause.AggregateLogicFunction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TriplesQuery.Clause.AggregateLogicFunction.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t sub_1B2DE6470(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7958113 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2DE6548(char a1)
{
  if (a1) {
    return 7958113;
  }
  else {
    return 7105633;
  }
}

uint64_t sub_1B2DE6568(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEA720();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE65A4(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEA720();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE65E0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEA6D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE661C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEA6D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE6658()
{
  return sub_1B2DE6548(*v0);
}

uint64_t sub_1B2DE6660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DE6470(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DE6688(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEA688();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE66C4(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEA688();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.Clause.AggregateLogicFunction.encode(to:)()
{
  sub_1B299F300();
  char v3 = v2;
  sub_1B29A3EB4(&qword_1E9C38178);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C38170);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B0C8();
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C38168);
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B299F280();
  char v10 = *v0;
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DEA688();
  sub_1B2E83A38();
  BOOL v11 = (void (**)(uint64_t, uint64_t))(v8 + 8);
  if (v10)
  {
    sub_1B2DEA6D4();
    sub_1B2E83618();
    sub_1B2ACA25C();
  }
  else
  {
    sub_1B2DEA720();
    sub_1B2E83618();
  }
  sub_1B299B798();
  v13(v12);
  (*v11)(v1, v6);
  sub_1B29998C8();
}

uint64_t TriplesQuery.Clause.AggregateLogicFunction.hashValue.getter()
{
  return sub_1B2E839E8();
}

void TriplesQuery.Clause.AggregateLogicFunction.init(from:)()
{
  sub_1B299F300();
  char v3 = v2;
  uint64_t v22 = v4;
  sub_1B29A3EB4(&qword_1E9C44780);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299ADB4();
  sub_1B29A3EB4(&qword_1E9C44788);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B2999928();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C44790);
  sub_1B299D278();
  uint64_t v23 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1B29A0498();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DEA688();
  sub_1B2E83A18();
  if (v0) {
    goto LABEL_6;
  }
  uint64_t v24 = (uint64_t)v3;
  uint64_t v10 = sub_1B2E835F8();
  if (!*(void *)(v10 + 16)
    || (char v11 = *(unsigned char *)(v10 + 32),
        uint64_t v12 = sub_1B2DF272C(),
        sub_1B29B142C(v12),
        uint64_t v14 = v13,
        unint64_t v16 = v15,
        swift_bridgeObjectRelease(),
        v14 != v16 >> 1))
  {
    uint64_t v17 = sub_1B2E83288();
    swift_allocError();
    uint64_t v19 = v18;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v19 = &type metadata for TriplesQuery.Clause.AggregateLogicFunction;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4FBBA70], v17);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1B299B798();
    v20();
    char v3 = (void *)v24;
LABEL_6:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
    goto LABEL_7;
  }
  sub_1B2DEA6D4();
  sub_1B2E834E8();
  sub_1B299B798();
  v21();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v1, v7);
  *uint64_t v22 = v11;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v24);
LABEL_7:
  sub_1B29998C8();
}

void sub_1B2DE6D30()
{
}

void sub_1B2DE6D48()
{
}

uint64_t TriplesQuery.Clause.JoinCondition.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t sub_1B2DE6D8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6469776F72 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x7461636964657270 && a2 == 0xE900000000000065;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x6E6F6974616C6572 && a2 == 0xEE00644970696873)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_1B2DE6FBC(char a1)
{
  uint64_t result = 0x6469776F72;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7463656A627573;
      break;
    case 2:
      uint64_t result = 0x7463656A626FLL;
      break;
    case 3:
      uint64_t result = 0x7461636964657270;
      break;
    case 4:
      uint64_t result = 0x6E6F6974616C6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2DE7074()
{
  return sub_1B2DE6FBC(*v0);
}

uint64_t sub_1B2DE707C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DE6D8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DE70A4(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE688();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE70E0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE688();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE711C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE76C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE7158(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE76C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE7194(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE720();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE71D0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE720();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE720C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE6D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE7248(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE6D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE7284(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE804();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE72C0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE804();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE72FC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE7B8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE7338(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE7B8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.Clause.JoinCondition.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C38160);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B2AC9DDC(v4, v14);
  sub_1B29A3EB4(&qword_1E9C38158);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C38148);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C38150);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B29A0480();
  sub_1B29A3EB4(&qword_1E9C38140);
  sub_1B299D278();
  MEMORY[0x1F4188790](v8);
  sub_1B299B0C8();
  sub_1B29A3EB4(&qword_1E9C38138);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = *v0;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2DEE688();
  sub_1B2E83A38();
  switch(v10)
  {
    case 1:
      sub_1B2DEE7B8();
      sub_1B2AC9B94();
      goto LABEL_8;
    case 2:
      sub_1B2DEE76C();
      sub_1B2AC9B94();
      goto LABEL_7;
    case 3:
      sub_1B2DEE720();
      sub_1B2AC9B94();
      goto LABEL_7;
    case 4:
      sub_1B2DEE6D4();
      sub_1B2AC9B94();
LABEL_7:
      sub_1B2ACA25C();
LABEL_8:
      sub_1B299B798();
      v12();
      break;
    default:
      sub_1B2DEE804();
      sub_1B2E83618();
      sub_1B299B798();
      v11();
      break;
  }
  sub_1B299B798();
  v13();
  sub_1B29998C8();
}

uint64_t _s20IntelligencePlatform12TriplesQueryV6ClauseV15TableCodingKeysO9hashValueSivg_0()
{
  return sub_1B2E839E8();
}

void TriplesQuery.Clause.JoinCondition.init(from:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  long long v34 = v4;
  sub_1B29A3EB4(&qword_1E9C447B8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C447C0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B2AC9DDC(v7, v32);
  sub_1B29A3EB4(&qword_1E9C447C8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C447D0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B29A0498();
  sub_1B29A3EB4(&qword_1E9C447D8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v10);
  sub_1B299F280();
  uint64_t v11 = sub_1B29A3EB4(&qword_1E9C447E0);
  sub_1B299D278();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  sub_1B2999928();
  uint64_t v35 = (uint64_t)v3;
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DEE688();
  sub_1B2E83A18();
  if (v1) {
    goto LABEL_10;
  }
  uint64_t v15 = sub_1B2E835F8();
  if (!*(void *)(v15 + 16))
  {
    uint64_t v24 = v0;
LABEL_9:
    sub_1B2E83288();
    swift_allocError();
    uint64_t v26 = v25;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v26 = &type metadata for TriplesQuery.Clause.JoinCondition;
    sub_1B2E834F8();
    sub_1B2AC9B6C();
    uint64_t v27 = sub_1B2AC9CB4();
    v28(v27);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v24, v11);
LABEL_10:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v35);
    goto LABEL_11;
  }
  uint64_t v33 = v11;
  uint64_t v16 = v0;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 32);
  uint64_t v18 = sub_1B2DF272C();
  sub_1B29B142C(v18);
  uint64_t v20 = v19;
  unint64_t v22 = v21;
  swift_bridgeObjectRelease();
  if (v20 != v22 >> 1)
  {
    uint64_t v24 = v16;
    uint64_t v11 = v33;
    goto LABEL_9;
  }
  switch(v17)
  {
    case 1:
      uint64_t v23 = v34;
      sub_1B2DEE7B8();
      sub_1B2E834E8();
      goto LABEL_6;
    case 2:
      uint64_t v23 = v34;
      sub_1B2DEE76C();
      sub_1B2AC9BC8();
      goto LABEL_6;
    case 3:
      uint64_t v23 = v34;
      sub_1B2DEE720();
      sub_1B2AC9BC8();
      goto LABEL_6;
    case 4:
      uint64_t v23 = v34;
      sub_1B2DEE6D4();
      sub_1B2AC9BC8();
      sub_1B2ACA25C();
      goto LABEL_16;
    default:
      uint64_t v23 = v34;
      sub_1B2DEE804();
      sub_1B2AC9BC8();
LABEL_6:
      sub_1B2ACA25C();
LABEL_16:
      sub_1B299B798();
      v29();
      swift_unknownObjectRelease();
      uint64_t v30 = sub_1B2AC9FBC();
      v31(v30);
      *uint64_t v23 = v17;
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
      break;
  }
LABEL_11:
  sub_1B29998C8();
}

void sub_1B2DE7C80()
{
}

void sub_1B2DE7C98()
{
}

uint64_t TriplesQuery.Clause.AggregateClause.description.getter()
{
  sub_1B2ABB1E4();
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2DF2818();
  sub_1B299B6A4();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1B3EB1020](v0, &type metadata for TriplesQuery.Clause);
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2DF2518();
  return v2;
}

unint64_t TriplesQuery.Clause.ContainsClause.description.getter()
{
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[9];
  if (!v0[1])
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if (!v2) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v34 = v0[5];
  uint64_t v6 = v0[7];
  sub_1B2DF24E4();
  sub_1B2E82518();
  sub_1B2DF273C();
  sub_1B2E82B18();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  unint64_t v7 = v36;
  sub_1B29B7048();
  uint64_t v9 = v8;
  unint64_t v1 = *(void *)(v8 + 16);
  if (v1 >= *(void *)(v8 + 24) >> 1)
  {
    sub_1B2C83CD4();
    uint64_t v9 = v25;
  }
  sub_1B2DF27E8();
  *(void *)(v10 + 32) = v35;
  *(void *)(v10 + 40) = v7;
  uint64_t v4 = v6;
  uint64_t v3 = v34;
  if (v2)
  {
LABEL_7:
    sub_1B2DF24E4();
    sub_1B2E82518();
    sub_1B2DF273C();
    sub_1B2E82B18();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    unint64_t v11 = v36;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299AF84();
      uint64_t v9 = v26;
    }
    sub_1B2DF2454();
    if (v12)
    {
      sub_1B2C83CD4();
      uint64_t v9 = v27;
    }
    sub_1B2DF27E8();
    *(void *)(v13 + 32) = v35;
    *(void *)(v13 + 40) = v11;
  }
LABEL_12:
  if (v3)
  {
    sub_1B2DF24E4();
    sub_1B2E82518();
    sub_1B2DF273C();
    sub_1B2E82B18();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    unint64_t v14 = v35;
    unint64_t v15 = v36;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299AF84();
      uint64_t v9 = v28;
    }
    sub_1B2DF2454();
    if (v12)
    {
      sub_1B2C83CD4();
      uint64_t v9 = v29;
    }
    *(void *)(v9 + 16) = &v35;
    uint64_t v16 = v9 + 16 * v1;
    *(void *)(v16 + 32) = v14;
    *(void *)(v16 + 40) = v15;
  }
  if (v4)
  {
    sub_1B2DF24E4();
    sub_1B2E82518();
    sub_1B2DF273C();
    sub_1B2E82B18();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    unint64_t v17 = v35;
    unint64_t v18 = v36;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299AF84();
      uint64_t v9 = v30;
    }
    sub_1B2DF2454();
    if (v12)
    {
      sub_1B2C83CD4();
      uint64_t v9 = v31;
    }
    *(void *)(v9 + 16) = &v35;
    uint64_t v19 = v9 + 16 * v1;
    *(void *)(v19 + 32) = v17;
    *(void *)(v19 + 40) = v18;
  }
  if (v5)
  {
    sub_1B2DF24E4();
    sub_1B2E82518();
    sub_1B2DF273C();
    sub_1B2E82B18();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    unint64_t v20 = v35;
    unint64_t v21 = v36;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299AF84();
      uint64_t v9 = v32;
    }
    unint64_t v22 = *(void *)(v9 + 16);
    if (v22 >= *(void *)(v9 + 24) >> 1)
    {
      sub_1B2C83CD4();
      uint64_t v9 = v33;
    }
    *(void *)(v9 + 16) = v22 + 1;
    uint64_t v23 = v9 + 16 * v22;
    *(void *)(v23 + 32) = v20;
    *(void *)(v23 + 40) = v21;
  }
  sub_1B2DF24E4();
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  unint64_t v35 = 0xD000000000000010;
  unint64_t v36 = 0x80000001B2EA4790;
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2A20660();
  sub_1B2E822D8();
  sub_1B2DF2754();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  return v35;
}

uint64_t TriplesQuery.Clause.MatchClause.description.getter()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[10];
  if (!v0[1])
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    if (!v2) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v41 = v0[4];
  uint64_t v42 = v0[6];
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[10];
  sub_1B2DF2770();
  sub_1B2DF26E4();
  sub_1B2A4B170();
  sub_1B2E82B18();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  uint64_t v1 = v43[0];
  uint64_t v9 = v43[1];
  sub_1B29B7048();
  uint64_t v11 = v10;
  unint64_t v12 = *(void *)(v10 + 16);
  if (v12 >= *(void *)(v10 + 24) >> 1)
  {
    sub_1B2C83CD4();
    uint64_t v11 = v30;
  }
  *(void *)(v11 + 16) = v12 + 1;
  uint64_t v13 = v11 + 16 * v12;
  *(void *)(v13 + 32) = v1;
  *(void *)(v13 + 40) = v9;
  uint64_t v6 = v8;
  uint64_t v5 = v7;
  uint64_t v3 = v41;
  uint64_t v4 = v42;
  if (v2)
  {
LABEL_7:
    sub_1B2DF2770();
    sub_1B2DF26E4();
    MEMORY[0x1B3EB1020](v2, &type metadata for TriplesQuery.Clause);
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    uint64_t v14 = v43[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299AF84();
      uint64_t v11 = v31;
    }
    sub_1B2DF2454();
    if (v15)
    {
      sub_1B2C83CD4();
      uint64_t v11 = v32;
    }
    sub_1B2DF27E8();
    *(void *)(v16 + 32) = v43[0];
    *(void *)(v16 + 40) = v14;
  }
LABEL_12:
  if (v3)
  {
    sub_1B2DF2534();
    sub_1B2E82518();
    sub_1B2DF26E4();
    sub_1B29C58F8();
    sub_1B2E82B18();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    uint64_t v17 = v43[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299AF84();
      uint64_t v11 = v33;
    }
    sub_1B2DF2454();
    if (v15)
    {
      sub_1B2C83CD4();
      uint64_t v11 = v34;
    }
    sub_1B2DF27E8();
    *(void *)(v18 + 32) = v43[0];
    *(void *)(v18 + 40) = v17;
  }
  if (v4)
  {
    sub_1B2DF2534();
    sub_1B2E82518();
    sub_1B2DF26E4();
    sub_1B2E82B18();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    uint64_t v19 = v43[0];
    uint64_t v20 = v43[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299AF84();
      uint64_t v11 = v35;
    }
    sub_1B2DF2454();
    if (v15)
    {
      sub_1B2C83CD4();
      uint64_t v11 = v36;
    }
    *(void *)(v11 + 16) = v43;
    uint64_t v21 = v11 + 16 * v1;
    *(void *)(v21 + 32) = v19;
    *(void *)(v21 + 40) = v20;
  }
  if (v5)
  {
    sub_1B2DF2534();
    sub_1B2E82518();
    sub_1B2DF26E4();
    sub_1B2B43C64();
    sub_1B2E82B18();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    uint64_t v22 = v43[0];
    uint64_t v23 = v43[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299AF84();
      uint64_t v11 = v37;
    }
    sub_1B2DF2454();
    if (v15)
    {
      sub_1B2C83CD4();
      uint64_t v11 = v38;
    }
    *(void *)(v11 + 16) = v43;
    uint64_t v24 = v11 + 16 * v1;
    *(void *)(v24 + 32) = v22;
    *(void *)(v24 + 40) = v23;
  }
  if (v6)
  {
    sub_1B2DF2534();
    sub_1B2E82518();
    sub_1B2DF26E4();
    sub_1B29C58F8();
    sub_1B2E82B18();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    uint64_t v25 = v43[0];
    uint64_t v26 = v43[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299AF84();
      uint64_t v11 = v39;
    }
    unint64_t v27 = *(void *)(v11 + 16);
    if (v27 >= *(void *)(v11 + 24) >> 1)
    {
      sub_1B2C83CD4();
      uint64_t v11 = v40;
    }
    *(void *)(v11 + 16) = v27 + 1;
    uint64_t v28 = v11 + 16 * v27;
    *(void *)(v28 + 32) = v25;
    *(void *)(v28 + 40) = v26;
  }
  sub_1B2DF2534();
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  strcpy((char *)v43, "<MatchClause ");
  HIWORD(v43[1]) = -4864;
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2A20660();
  sub_1B2E822D8();
  sub_1B2DF2754();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  return v43[0];
}

uint64_t TriplesQuery.Clause.FullTextSearchClause.description.getter()
{
  sub_1B2ABB1E4();
  sub_1B2E831F8();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2E82B18();
  sub_1B2DF2754();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2DF2818();
  sub_1B2DF2518();
  return v1;
}

unint64_t TriplesQuery.Clause.ComparisonClause.description.getter()
{
  return 0xD000000000000015;
}

uint64_t TriplesQuery.Clause.JoinClause.description.getter()
{
  sub_1B2ABB1E4();
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2DF2818();
  sub_1B299B6A4();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1B3EB1020](v0, &type metadata for TriplesQuery.Clause);
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2DF2518();
  return v2;
}

uint64_t TriplesQuery.Clause.AllClause.description.getter()
{
  return 0x75616C436C6C413CLL;
}

uint64_t sub_1B2DE8994(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461676572676761 && a2 == 0xE900000000000065;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x727453686374616DLL && a2 == 0xEC00000073676E69;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x686374616DLL && a2 == 0xE500000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x747865546C6C7566 && a2 == 0xEE00686372616553;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x73697261706D6F63 && a2 == 0xEA00000000006E6FLL;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 1852403562 && a2 == 0xE400000000000000;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 7105633 && a2 == 0xE300000000000000)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = sub_1B2E837A8();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B2DE8C90(char a1)
{
  uint64_t result = 0x7461676572676761;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x727453686374616DLL;
      break;
    case 2:
      uint64_t result = 0x686374616DLL;
      break;
    case 3:
      uint64_t result = 0x747865546C6C7566;
      break;
    case 4:
      uint64_t result = 0x73697261706D6F63;
      break;
    case 5:
      uint64_t result = 1852403562;
      break;
    case 6:
      uint64_t result = 7105633;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2DE8D80(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEEC78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE8DBC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEEC78();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE8DF8(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE8E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE8E34(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE8E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE8E70()
{
  return sub_1B2DE8C90(*v0);
}

uint64_t sub_1B2DE8E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DE8994(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DE8EA0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE89C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE8EDC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE89C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE8F18(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEEA18();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE8F54(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEEA18();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE8F90(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEEAB0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE8FCC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEEAB0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE9008(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE980();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE9044(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEE980();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE9080(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEEB48();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE90BC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEEB48();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DE90F8(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEEBE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DE9134(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEEBE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.Clause.Impl.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1EB7D9F98);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299B6D0();
  sub_1B29B1A48(v4);
  sub_1B29A3EB4(&qword_1EB7D9FA0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B6D0();
  sub_1B29B1A48(v6);
  sub_1B29A3EB4(&qword_1EB7D9FB8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  sub_1B29B1A48(v8);
  sub_1B29A3EB4(&qword_1EB7D9FC8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B299B6D0();
  sub_1B29B1A48(v10);
  sub_1B29A3EB4(&qword_1EB7D9FA8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v11);
  sub_1B299B6D0();
  sub_1B29B1A48(v12);
  sub_1B29A3EB4(&qword_1EB7D9FC0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v13);
  sub_1B2999928();
  sub_1B29A3EB4(&qword_1EB7D9FB0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v14);
  sub_1B299F280();
  sub_1B29A3EB4(&qword_1EB7D9F90);
  sub_1B299D278();
  MEMORY[0x1F4188790](v15);
  sub_1B299B6D0();
  unsigned int v16 = *(unsigned __int8 *)(v0 + 104);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2DEE89C();
  sub_1B2E83A38();
  switch(v16 >> 5)
  {
    case 1u:
      sub_1B2DEEBE0();
      sub_1B2DF27BC();
      sub_1B2DF2714();
      sub_1B2DF268C();
      sub_1B2DF268C();
      sub_1B2DF268C();
      sub_1B2DEEC2C();
      sub_1B2E836D8();
      break;
    case 2u:
      sub_1B2DEEB48();
      sub_1B2DF242C();
      sub_1B2DF268C();
      sub_1B2DF268C();
      sub_1B2DF268C();
      sub_1B2DEEB94();
      sub_1B2DF266C();
      break;
    case 3u:
      sub_1B2DEEAB0();
      sub_1B2DF242C();
      sub_1B2DEEAFC();
      sub_1B2DF266C();
      break;
    case 4u:
      sub_1B2DEEA18();
      sub_1B2DF27BC();
      sub_1B2DEEA64();
      sub_1B2E836D8();
      break;
    case 5u:
      sub_1B2DEE980();
      sub_1B2DF242C();
      sub_1B2DEE9CC();
      sub_1B2DF266C();
      break;
    case 6u:
      sub_1B2DEE8E8();
      sub_1B2DF242C();
      sub_1B2DEE934();
      sub_1B2E836D8();
      break;
    default:
      sub_1B2DEEC78();
      sub_1B2E83618();
      sub_1B2DF2714();
      sub_1B2DEECC4();
      sub_1B2E836D8();
      break;
  }
  sub_1B299B798();
  v17();
  sub_1B299B798();
  v18();
  sub_1B29998C8();
}

void TriplesQuery.Clause.Impl.init(from:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v74 = v4;
  sub_1B29A3EB4(&qword_1E9C44818);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B6D0();
  uint64_t v75 = v6;
  sub_1B29A3EB4(&qword_1E9C44820);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C44828);
  sub_1B299D278();
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C44830);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C44838);
  sub_1B299D278();
  MEMORY[0x1F4188790](v10);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C44840);
  sub_1B299D278();
  MEMORY[0x1F4188790](v11);
  sub_1B29A0480();
  sub_1B29A3EB4(&qword_1E9C44848);
  sub_1B299D278();
  MEMORY[0x1F4188790](v12);
  sub_1B2999928();
  uint64_t v13 = sub_1B29A3EB4(&qword_1E9C44850);
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299F280();
  uint64_t v76 = v3;
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DEE89C();
  sub_1B2E83A18();
  if (v0)
  {
    uint64_t v17 = (uint64_t)v3;
    goto LABEL_16;
  }
  uint64_t v17 = v75;
  uint64_t v91 = v15;
  uint64_t v18 = v1;
  uint64_t v19 = sub_1B2E835F8();
  if (!*(void *)(v19 + 16))
  {
    uint64_t v17 = (uint64_t)v76;
    uint64_t v27 = v15;
LABEL_9:
    sub_1B2E83288();
    swift_allocError();
    uint64_t v29 = v28;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v29 = &type metadata for TriplesQuery.Clause.Impl;
    sub_1B2E834F8();
    sub_1B2AC9B6C();
    uint64_t v30 = sub_1B2AC9CB4();
    v31(v30);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v18, v13);
    goto LABEL_16;
  }
  uint64_t v20 = v1;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 32);
  uint64_t v22 = sub_1B2DF272C();
  sub_1B29B142C(v22);
  uint64_t v24 = v23;
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  if (v24 != v26 >> 1)
  {
    uint64_t v17 = (uint64_t)v76;
    uint64_t v27 = v91;
    uint64_t v18 = v20;
    goto LABEL_9;
  }
  switch(v21)
  {
    case 1:
      sub_1B2DEEBE0();
      sub_1B2DF23E8();
      sub_1B2DF26BC();
      sub_1B2DEEE8C();
      sub_1B2DF23C4();
      uint64_t v32 = sub_1B29A4A80();
      v33(v32);
      swift_unknownObjectRelease();
      uint64_t v34 = sub_1B29A23BC();
      v35(v34);
      uint64_t v64 = 0;
      uint64_t v65 = 0;
      uint64_t v66 = 0;
      unint64_t v68 = 1;
      uint64_t v69 = v78;
      uint64_t v56 = v79;
      uint64_t v57 = v80;
      uint64_t v58 = v81;
      uint64_t v59 = v82;
      uint64_t v60 = v83;
      uint64_t v61 = v84;
      uint64_t v62 = v85;
      char v67 = 32;
      uint64_t v63 = v86;
      break;
    case 2:
      sub_1B2DEEB48();
      sub_1B2DF23E8();
      sub_1B2DF26BC();
      sub_1B2DEEE40();
      sub_1B2DF23C4();
      uint64_t v36 = sub_1B29A4A80();
      v37(v36);
      swift_unknownObjectRelease();
      uint64_t v38 = sub_1B29A23BC();
      v39(v38);
      unint64_t v68 = 2;
      uint64_t v69 = v78;
      uint64_t v56 = v79;
      uint64_t v57 = v80;
      uint64_t v58 = v81;
      uint64_t v59 = v82;
      uint64_t v60 = v83;
      uint64_t v61 = v84;
      uint64_t v62 = v85;
      uint64_t v63 = v86;
      uint64_t v64 = v87;
      uint64_t v65 = v88;
      char v67 = v90 | 0x40;
      uint64_t v66 = v89;
      break;
    case 3:
      LOBYTE(v77) = 3;
      sub_1B2DEEAB0();
      sub_1B2DF23E8();
      sub_1B2DF26BC();
      sub_1B2DEEDF4();
      sub_1B2DF23C4();
      uint64_t v40 = sub_1B29A4A80();
      v41(v40);
      swift_unknownObjectRelease();
      uint64_t v42 = sub_1B29A23BC();
      v43(v42);
      sub_1B2DF23A8();
      uint64_t v62 = 0;
      uint64_t v63 = 0;
      uint64_t v64 = 0;
      uint64_t v65 = 0;
      uint64_t v66 = 0;
      unint64_t v68 = v77;
      uint64_t v69 = v78;
      char v67 = 96;
      break;
    case 4:
      sub_1B2DEEA18();
      sub_1B2DF23E8();
      sub_1B2DF26BC();
      sub_1B2DEEDA8();
      sub_1B2DF23C4();
      uint64_t v44 = sub_1B29A4A80();
      v45(v44);
      swift_unknownObjectRelease();
      uint64_t v46 = sub_1B29A23BC();
      v47(v46);
      sub_1B2DF23A8();
      uint64_t v62 = 0;
      uint64_t v63 = 0;
      uint64_t v64 = 0;
      uint64_t v65 = 0;
      uint64_t v66 = 0;
      uint64_t v69 = v78;
      unint64_t v68 = ((unint64_t)BYTE1(v77) << 8) | 4;
      char v67 = 0x80;
      break;
    case 5:
      sub_1B2DEE980();
      sub_1B2DF23E8();
      sub_1B2DF26BC();
      sub_1B2DEED5C();
      sub_1B2DF23C4();
      uint64_t v48 = sub_1B29A4A80();
      v49(v48);
      swift_unknownObjectRelease();
      uint64_t v50 = sub_1B29A23BC();
      v51(v50);
      sub_1B2DF23A8();
      uint64_t v62 = 0;
      uint64_t v63 = 0;
      uint64_t v64 = 0;
      uint64_t v65 = 0;
      uint64_t v66 = 0;
      unint64_t v68 = 5;
      uint64_t v69 = v78;
      char v67 = -96;
      break;
    case 6:
      sub_1B2DEE8E8();
      sub_1B2DF23E8();
      sub_1B2DF26BC();
      sub_1B2DEED10();
      sub_1B2E835B8();
      uint64_t v70 = sub_1B29A4A80();
      v71(v70);
      swift_unknownObjectRelease();
      uint64_t v72 = sub_1B29A23BC();
      v73(v72);
      sub_1B2DF23A8();
      uint64_t v62 = 0;
      uint64_t v63 = 0;
      uint64_t v64 = 0;
      uint64_t v65 = 0;
      uint64_t v66 = 0;
      char v67 = -64;
      break;
    default:
      sub_1B2DEEC78();
      sub_1B2DF23E8();
      sub_1B2DEEED8();
      sub_1B2DF23C4();
      uint64_t v52 = sub_1B29A4A80();
      v53(v52);
      swift_unknownObjectRelease();
      uint64_t v54 = sub_1B29A23BC();
      v55(v54);
      sub_1B2DF23A8();
      uint64_t v62 = 0;
      uint64_t v63 = 0;
      uint64_t v64 = 0;
      uint64_t v65 = 0;
      uint64_t v66 = 0;
      char v67 = 0;
      unint64_t v68 = 0;
      uint64_t v69 = v78;
      uint64_t v17 = (uint64_t)v76;
      break;
  }
  *(void *)uint64_t v74 = v68;
  *(void *)(v74 + 8) = v69;
  *(void *)(v74 + 16) = v56;
  *(void *)(v74 + 24) = v57;
  *(void *)(v74 + 32) = v58;
  *(void *)(v74 + 40) = v59;
  *(void *)(v74 + 48) = v60;
  *(void *)(v74 + 56) = v61;
  *(void *)(v74 + 64) = v62;
  *(void *)(v74 + 72) = v63;
  *(void *)(v74 + 80) = v64;
  *(void *)(v74 + 88) = v65;
  *(void *)(v74 + 96) = v66;
  *(unsigned char *)(v74 + 104) = v67;
LABEL_16:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v17);
  sub_1B29998C8();
}

void sub_1B2DEA2B0()
{
}

void sub_1B2DEA2C8()
{
}

uint64_t static TriplesQuery.Clause.&& infix(_:_:)()
{
  sub_1B299FCC4();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v54 = *(void *)(v1 + 56);
  uint64_t v55 = v3;
  uint64_t v50 = *(void *)(v1 + 80);
  uint64_t v52 = *(void *)(v1 + 72);
  uint64_t v48 = *(void *)(v1 + 88);
  uint64_t v44 = *(void *)(v1 + 96);
  HIDWORD(v42) = *(unsigned __int8 *)(v1 + 104);
  uint64_t v5 = *(void *)v4;
  uint64_t v66 = *(void *)v4;
  uint64_t v67 = *(void *)(v4 + 8);
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 32);
  uint64_t v64 = *(void *)(v4 + 40);
  uint64_t v65 = *(void *)(v4 + 24);
  uint64_t v8 = *(void *)(v4 + 48);
  uint64_t v63 = *(void *)(v4 + 56);
  uint64_t v9 = *(void *)(v4 + 64);
  uint64_t v62 = *(void *)(v4 + 72);
  uint64_t v11 = *(void *)(v4 + 80);
  uint64_t v10 = *(void *)(v4 + 88);
  uint64_t v12 = *(void *)(v4 + 96);
  HIDWORD(v46) = *(unsigned __int8 *)(v4 + 104);
  sub_1B29A3EB4((uint64_t *)&unk_1EB7D9AE0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B2EBFA40;
  *(void *)(v13 + 32) = v61;
  *(void *)(v13 + 40) = v60;
  uint64_t v20 = sub_1B299B08C((void *)v13, v60, v14, v15, v16, v17, v18, v19, v35, v36, v37, v38, v39, v40, v42, v44, v46, v48, v50,
          v52,
          v54,
          v55,
          v56,
          v57,
          v58,
          v59);
  v20[12] = v2;
  v20[13] = v53;
  v20[14] = v51;
  v20[15] = v49;
  v20[16] = v45;
  *((unsigned char *)v20 + 136) = v43;
  v20[18] = v5;
  v20[19] = v67;
  v20[20] = v6;
  v20[21] = v65;
  v20[22] = v7;
  v20[23] = v64;
  v20[24] = v8;
  v20[25] = v63;
  v20[26] = v9;
  v20[27] = v62;
  v20[28] = v11;
  v20[29] = v10;
  v20[30] = v12;
  *((unsigned char *)v20 + 248) = v47;
  void *v0 = 0;
  v0[1] = v20;
  sub_1B2DF26C8();
  sub_1B29C64D0(v28, v21, v22, v23, v24, v25, v26, v27, v29, v30, v31, v32, v33, v41);
  return sub_1B29C64D0(v66, v67, v6, v65, v7, v64, v8, v63, v9, v62, v11, v10, v12, v47);
}

uint64_t static TriplesQuery.Clause.|| infix(_:_:)()
{
  sub_1B299FCC4();
  uint64_t v55 = *(void *)(v1 + 56);
  uint64_t v56 = v2;
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v47 = *(void *)(v1 + 72);
  uint64_t v49 = *(void *)(v1 + 64);
  uint64_t v43 = *(void *)(v1 + 96);
  uint64_t v45 = *(void *)(v1 + 88);
  HIDWORD(v40) = *(unsigned __int8 *)(v1 + 104);
  uint64_t v5 = *(void *)v4;
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 24);
  uint64_t v67 = *(void *)v4;
  uint64_t v8 = *(void *)(v4 + 32);
  uint64_t v65 = *(void *)(v4 + 40);
  uint64_t v66 = *(void *)(v4 + 8);
  uint64_t v9 = *(void *)(v4 + 48);
  uint64_t v64 = *(void *)(v4 + 56);
  uint64_t v10 = *(void *)(v4 + 80);
  uint64_t v51 = *(void *)(v4 + 72);
  uint64_t v53 = *(void *)(v4 + 64);
  uint64_t v11 = *(void *)(v4 + 96);
  uint64_t v63 = *(void *)(v4 + 88);
  unsigned __int8 v12 = *(unsigned char *)(v4 + 104);
  sub_1B29A3EB4((uint64_t *)&unk_1EB7D9AE0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B2EBFA40;
  *(void *)(v13 + 32) = v62;
  *(void *)(v13 + 40) = v61;
  uint64_t v20 = sub_1B299B08C((void *)v13, v61, v14, v15, v16, v17, v18, v19, v35, v36, v37, v38, v39, v40, v43, v45, v47, v49, v51,
          v53,
          v55,
          v56,
          v57,
          v58,
          v59,
          v60);
  v20[12] = v50;
  v20[13] = v48;
  v20[14] = v3;
  v20[15] = v46;
  v20[16] = v44;
  *((unsigned char *)v20 + 136) = v42;
  v20[18] = v5;
  v20[19] = v66;
  v20[20] = v6;
  v20[21] = v7;
  v20[22] = v8;
  v20[23] = v65;
  v20[24] = v9;
  v20[25] = v64;
  v20[26] = v54;
  v20[27] = v52;
  v20[28] = v10;
  v20[29] = v63;
  v20[30] = v11;
  *((unsigned char *)v20 + 248) = v12;
  void *v0 = 1;
  v0[1] = v20;
  sub_1B2DF26C8();
  sub_1B29C64D0(v28, v21, v22, v23, v24, v25, v26, v27, v29, v30, v31, v32, v33, v41);
  return sub_1B29C64D0(v67, v66, v6, v7, v8, v65, v9, v64, v54, v52, v10, v63, v11, v12);
}

unsigned char *TriplesQuery.Clause.ContainsClause.init(subjectMatchType:subjects:predicateMatchType:predicates:objectMatchType:objects:relationshipIdMatchType:relationshipIds:relationshipPredicateMatchType:relationshipPredicates:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  char v11 = *a3;
  char v12 = *a5;
  char v13 = *a7;
  char v14 = *a10;
  *(unsigned char *)a9 = *result;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = v11;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = v12;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = v13;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = v14;
  *(void *)(a9 + 72) = a11;
  return result;
}

void TriplesQuery.Clause.MatchClause.init(subjectMatchType:subjects:subjectClauses:predicateMatchType:predicates:objectMatchType:objects:relationshipIdMatchType:relationshipIds:relationshipPredicateMatchType:relationshipPredicates:sourceMatchType:sources:)(uint64_t a1@<X8>, char *a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, char *a5@<X3>, uint64_t a6@<X4>, char *a7@<X5>, uint64_t a8@<X6>, char *a9@<X7>, uint64_t a10, char *a11, uint64_t a12, char *a13, uint64_t a14)
{
  char v14 = *a2;
  char v15 = *a5;
  char v16 = *a7;
  char v17 = *a9;
  char v18 = *a11;
  char v19 = *a13;
  *(unsigned char *)a1 = v14;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a4;
  *(unsigned char *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = a6;
  *(unsigned char *)(a1 + 40) = v16;
  *(void *)(a1 + 48) = a8;
  *(unsigned char *)(a1 + 56) = v17;
  *(void *)(a1 + 64) = a10;
  *(unsigned char *)(a1 + 72) = v18;
  *(void *)(a1 + 80) = a12;
  *(unsigned char *)(a1 + 88) = v19;
  *(void *)(a1 + 96) = a14;
  sub_1B2DF287C(a1);
}

unint64_t sub_1B2DEA688()
{
  unint64_t result = qword_1E9C38048;
  if (!qword_1E9C38048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38048);
  }
  return result;
}

unint64_t sub_1B2DEA6D4()
{
  unint64_t result = qword_1E9C44778;
  if (!qword_1E9C44778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44778);
  }
  return result;
}

unint64_t sub_1B2DEA720()
{
  unint64_t result = qword_1E9C38060;
  if (!qword_1E9C38060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38060);
  }
  return result;
}

uint64_t static TriplesQuery.Clause.fullTextSearch(objects:objectSearchType:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a2;
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = v3;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(void *)(a3 + 96) = 0;
  *(unsigned char *)(a3 + 104) = 96;
  return swift_bridgeObjectRetain();
}

uint64_t TriplesQuery.Clause.FullTextSearchClause.init(objects:objectSearchType:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *a2;
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v3;
  return result;
}

void static TriplesQuery.Clause.comparison(column:matchType:value:)(uint64_t a1@<X8>, unsigned __int8 *a2@<X0>, unsigned __int8 *a3@<X1>, double a4@<D0>)
{
  *(void *)a1 = *a2 | ((unint64_t)*a3 << 8);
  *(double *)(a1 + 8) = a4;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  sub_1B2DF287C(a1);
}

unsigned char *TriplesQuery.Clause.ComparisonClause.init(column:matchType:value:)@<X0>(unsigned char *result@<X0>, char *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  char v4 = *a2;
  *(unsigned char *)a3 = *result;
  *(unsigned char *)(a3 + 1) = v4;
  *(double *)(a3 + 8) = a4;
  return result;
}

void static TriplesQuery.Clause.all()(uint64_t a1@<X8>)
{
  *(void *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_1B2DF287C(a1);
}

uint64_t TriplesQuery.Clause.description.getter()
{
  return 0;
}

uint64_t sub_1B2DEA8DC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEEF24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DEA918(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEEF24();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.Clause.encode(to:)()
{
  sub_1B299F300();
  uint64_t v1 = sub_1B29A3EB4(&qword_1EB7D9F88);
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1B299ADB4();
  sub_1B2DF2408();
  sub_1B2DEEF24();
  sub_1B299E584();
  sub_1B2DEEF70();
  sub_1B2E836D8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  sub_1B29998C8();
}

void TriplesQuery.Clause.init(from:)()
{
  sub_1B299F300();
  sub_1B2C37D50();
  sub_1B29A3EB4(&qword_1E9C44890);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299E524();
  sub_1B2DEEF24();
  sub_1B29A4EDC();
  if (!v1)
  {
    sub_1B2DEEFBC();
    sub_1B29A446C();
    uint64_t v4 = sub_1B299B8A4();
    v5(v4);
    *(_OWORD *)uint64_t v2 = v6;
    *(_OWORD *)(v2 + 16) = v7;
    *(_OWORD *)(v2 + 32) = v8;
    *(_OWORD *)(v2 + 48) = v9;
    *(_OWORD *)(v2 + 64) = v10;
    *(_OWORD *)(v2 + 80) = v11;
    *(void *)(v2 + 96) = v12;
    *(unsigned char *)(v2 + 104) = v13;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
  sub_1B2C37CD8();
  sub_1B29998C8();
}

void sub_1B2DEABBC()
{
}

void sub_1B2DEABD4()
{
}

void TriplesQuery.Clause.AggregateClause.logicFunction.getter(unsigned char *a1@<X8>)
{
}

uint64_t (*TriplesQuery.Clause.AggregateClause.logicFunction.modify())(void)
{
  return nullsub_1;
}

uint64_t (*TriplesQuery.Clause.AggregateClause.clauses.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1B2DEAC38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E75466369676F6CLL && a2 == 0xED00006E6F697463;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73657375616C63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2DEAD4C(char a1)
{
  if (a1) {
    return 0x73657375616C63;
  }
  else {
    return 0x6E75466369676F6CLL;
  }
}

uint64_t sub_1B2DEAD90()
{
  return sub_1B2DEAD4C(*v0);
}

uint64_t sub_1B2DEAD98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DEAC38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DEADC0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF008();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DEADFC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF008();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.Clause.AggregateClause.encode(to:)()
{
  sub_1B299F300();
  sub_1B2C37C9C();
  sub_1B29A3EB4(&qword_1E9C38130);
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B2DF2408();
  sub_1B2DEF008();
  sub_1B299E584();
  sub_1B2DEF054();
  sub_1B29EC544();
  if (!v0)
  {
    sub_1B2DF27DC();
    sub_1B29A3EB4(&qword_1E9C38100);
    sub_1B2DEF398(&qword_1E9C38108, &qword_1E9C38100, (void (*)(void))sub_1B2DEF0A0);
    sub_1B2DF25BC();
  }
  uint64_t v2 = sub_1B299B834();
  v3(v2);
  sub_1B2A4AA78();
  sub_1B29998C8();
}

void TriplesQuery.Clause.AggregateClause.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_1B299F300();
  sub_1B2C37D50();
  sub_1B29A3EB4(&qword_1E9C448A0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v16);
  sub_1B299E524();
  sub_1B2DEF008();
  sub_1B29A4EDC();
  if (!v14)
  {
    sub_1B2DEF0EC();
    sub_1B29A446C();
    sub_1B29A3EB4(&qword_1E9C38100);
    sub_1B2DF27DC();
    sub_1B2DEF398(&qword_1E9C448B0, &qword_1E9C38100, (void (*)(void))sub_1B2DEF138);
    sub_1B2DF255C();
    uint64_t v17 = sub_1B299B8A4();
    v18(v17);
    *(unsigned char *)uint64_t v15 = a13;
    *(void *)(v15 + 8) = v19;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v13);
  sub_1B2C37CD8();
  sub_1B29998C8();
}

void sub_1B2DEB0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TriplesQuery.Clause.AggregateClause.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1B2DEB0F8()
{
}

void TriplesQuery.Clause.JoinClause.joinCondition.getter(unsigned char *a1@<X8>)
{
}

uint64_t (*TriplesQuery.Clause.JoinClause.joinCondition.modify())(void)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.JoinClause.clauses.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*TriplesQuery.Clause.JoinClause.clauses.modify())(void)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.JoinClause.shortDescription.getter()
{
  sub_1B2E82518();
  sub_1B2DF2818();
  sub_1B299B6A4();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1B3EB1020](v0, &type metadata for TriplesQuery.Clause);
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2DF2518();
  return 0;
}

uint64_t sub_1B2DEB23C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646E6F436E696F6ALL && a2 == 0xED00006E6F697469;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73657375616C63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2DEB350(char a1)
{
  if (a1) {
    return 0x73657375616C63;
  }
  else {
    return 0x646E6F436E696F6ALL;
  }
}

uint64_t sub_1B2DEB394()
{
  return sub_1B2DEB350(*v0);
}

uint64_t sub_1B2DEB39C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DEB23C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DEB3C4(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF184();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DEB400(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF184();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.Clause.JoinClause.encode(to:)()
{
  sub_1B299F300();
  sub_1B2C37C9C();
  sub_1B29A3EB4(&qword_1E9C38120);
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B2DF2408();
  sub_1B2DEF184();
  sub_1B299E584();
  sub_1B2DEF1D0();
  sub_1B29EC544();
  if (!v0)
  {
    sub_1B2DF27DC();
    sub_1B29A3EB4(&qword_1E9C38100);
    sub_1B2DEF398(&qword_1E9C38108, &qword_1E9C38100, (void (*)(void))sub_1B2DEF0A0);
    sub_1B2DF25BC();
  }
  uint64_t v2 = sub_1B299B834();
  v3(v2);
  sub_1B2A4AA78();
  sub_1B29998C8();
}

void TriplesQuery.Clause.JoinClause.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_1B299F300();
  sub_1B2C37D50();
  sub_1B29A3EB4(&qword_1E9C448C0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v16);
  sub_1B299E524();
  sub_1B2DEF184();
  sub_1B29A4EDC();
  if (!v14)
  {
    sub_1B2DEF21C();
    sub_1B29A446C();
    sub_1B29A3EB4(&qword_1E9C38100);
    sub_1B2DF27DC();
    sub_1B2DEF398(&qword_1E9C448B0, &qword_1E9C38100, (void (*)(void))sub_1B2DEF138);
    sub_1B2DF255C();
    uint64_t v17 = sub_1B299B8A4();
    v18(v17);
    *(unsigned char *)uint64_t v15 = a13;
    *(void *)(v15 + 8) = v19;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v13);
  sub_1B2C37CD8();
  sub_1B29998C8();
}

void sub_1B2DEB6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TriplesQuery.Clause.JoinClause.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1B2DEB6FC()
{
}

void TriplesQuery.Clause.ContainsClause.subjectMatchType.getter(unsigned char *a1@<X8>)
{
}

uint64_t (*TriplesQuery.Clause.ContainsClause.subjectMatchType.modify())(void)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.ContainsClause.subjects.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.subjects.modify())(void)
{
  return nullsub_1;
}

void TriplesQuery.Clause.ContainsClause.predicateMatchType.getter(unsigned char *a1@<X8>)
{
}

unsigned char *TriplesQuery.Clause.ContainsClause.predicateMatchType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.predicateMatchType.modify())(void)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.ContainsClause.predicates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TriplesQuery.Clause.ContainsClause.predicates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.predicates.modify())(void)
{
  return nullsub_1;
}

void TriplesQuery.Clause.ContainsClause.objectMatchType.getter(unsigned char *a1@<X8>)
{
}

unsigned char *TriplesQuery.Clause.ContainsClause.objectMatchType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.objectMatchType.modify())(void)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.ContainsClause.objects.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TriplesQuery.Clause.ContainsClause.objects.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.objects.modify())(void)
{
  return nullsub_1;
}

void TriplesQuery.Clause.ContainsClause.relationshipIdMatchType.getter(unsigned char *a1@<X8>)
{
}

unsigned char *TriplesQuery.Clause.ContainsClause.relationshipIdMatchType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.relationshipIdMatchType.modify())(void)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.ContainsClause.relationshipIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TriplesQuery.Clause.ContainsClause.relationshipIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.relationshipIds.modify())(void)
{
  return nullsub_1;
}

void TriplesQuery.Clause.ContainsClause.relationshipPredicateMatchType.getter(unsigned char *a1@<X8>)
{
}

unsigned char *TriplesQuery.Clause.ContainsClause.relationshipPredicateMatchType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 64) = *result;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.relationshipPredicateMatchType.modify())(void)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.ContainsClause.relationshipPredicates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TriplesQuery.Clause.ContainsClause.relationshipPredicates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.relationshipPredicates.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1B2DEB9B0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001B2EA47F0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x737463656A627573 && a2 == 0xE800000000000000;
    if (v5 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x80000001B2EA4810 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v6 = a1 == 0x7461636964657270 && a2 == 0xEA00000000007365;
      if (v6 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v7 = a1 == 0x614D7463656A626FLL && a2 == 0xEF65707954686374;
        if (v7 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v8 = a1 == 0x737463656A626FLL && a2 == 0xE700000000000000;
          if (v8 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000017 && a2 == 0x80000001B2EA4830 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            BOOL v9 = a1 == 0x6E6F6974616C6572 && a2 == 0xEF73644970696873;
            if (v9 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001B2EA4850 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001B2EA4870)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else
            {
              char v10 = sub_1B2E837A8();
              swift_bridgeObjectRelease();
              if (v10) {
                return 9;
              }
              else {
                return 10;
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1B2DEBDD8(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x737463656A627573;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x7461636964657270;
      break;
    case 4:
      unint64_t result = 0x614D7463656A626FLL;
      break;
    case 5:
      unint64_t result = 0x737463656A626FLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0x6E6F6974616C6572;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2DEBF1C()
{
  return sub_1B2DEBDD8(*v0);
}

uint64_t sub_1B2DEBF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DEB9B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DEBF4C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF268();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DEBF88(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF268();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.Clause.ContainsClause.encode(to:)()
{
  sub_1B299F300();
  sub_1B2C37C9C();
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C38128);
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  BOOL v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v0;
  uint64_t v9 = *((void *)v0 + 1);
  v23[0] = v0[16];
  uint64_t v20 = *((void *)v0 + 3);
  uint64_t v21 = v9;
  int v19 = v0[32];
  uint64_t v18 = *((void *)v0 + 5);
  int v17 = v0[48];
  uint64_t v16 = *((void *)v0 + 7);
  int v15 = v0[64];
  uint64_t v14 = *((void *)v0 + 9);
  sub_1B2DF2408();
  sub_1B2DEF268();
  sub_1B299E584();
  LOBYTE(v22) = v8;
  char v10 = v7;
  sub_1B2DEF2B4();
  sub_1B2E836D8();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  }
  else
  {
    uint64_t v11 = v20;
    uint64_t v22 = v21;
    sub_1B2ABAD40();
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B2B405B0(&qword_1EB7D9F50);
    sub_1B2E83668();
    LOBYTE(v22) = v23[0];
    sub_1B2C36A44();
    sub_1B2DF27F4();
    uint64_t v21 = v2;
    sub_1B2E836D8();
    uint64_t v22 = v11;
    sub_1B2DF2464(3);
    LOBYTE(v22) = v19;
    sub_1B2DF24F4();
    uint64_t v22 = v18;
    sub_1B2DF2464(5);
    LOBYTE(v22) = v17;
    sub_1B2C37114();
    sub_1B2DF24F4();
    uint64_t v22 = v16;
    sub_1B2DF2464(7);
    LOBYTE(v22) = v15;
    sub_1B2C36490();
    sub_1B2DF24F4();
    uint64_t v22 = v14;
    sub_1B2DF27F4();
    uint64_t v12 = v21;
    sub_1B2E83668();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v12);
  }
  sub_1B2A4AA78();
  sub_1B29998C8();
}

void TriplesQuery.Clause.ContainsClause.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C448D0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299F280();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2DEF268();
  sub_1B2DF2848();
  if (!v0)
  {
    sub_1B2DEF300();
    sub_1B2DF2898();
    sub_1B2E835B8();
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B2ABAD40();
    sub_1B2B405B0((unint64_t *)&unk_1EB7E2BD8);
    sub_1B2E83548();
    sub_1B2C36A44();
    swift_bridgeObjectRetain();
    sub_1B2DF2898();
    sub_1B2E835B8();
    sub_1B2DF2378(3);
    sub_1B2DF2830(4);
    sub_1B2DF2490();
    sub_1B2DF2378(5);
    sub_1B2C37114();
    swift_bridgeObjectRetain();
    sub_1B2DF2490();
    sub_1B2DF2378(7);
    sub_1B2C36490();
    swift_bridgeObjectRetain();
    sub_1B2DF2490();
    sub_1B2DF2378(9);
    sub_1B299B798();
    v6();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)uint64_t v4 = v7;
    *(void *)(v4 + 8) = v7;
    *(unsigned char *)(v4 + 16) = v7;
    *(void *)(v4 + 24) = v7;
    *(unsigned char *)(v4 + 32) = v7;
    *(void *)(v4 + 40) = v7;
    *(unsigned char *)(v4 + 48) = v7;
    *(void *)(v4 + 56) = v7;
    *(unsigned char *)(v4 + 64) = v7;
    *(void *)(v4 + 72) = v7;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B29998C8();
}

void sub_1B2DEC6A8()
{
}

void sub_1B2DEC6C0()
{
}

uint64_t sub_1B2DEC6D8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001B2EA47F0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x737463656A627573 && a2 == 0xE800000000000000;
    if (v5 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 0x437463656A627573 && a2 == 0xEE0073657375616CLL;
      if (v6 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x80000001B2EA4810 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v7 = a1 == 0x7461636964657270 && a2 == 0xEA00000000007365;
        if (v7 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v8 = a1 == 0x614D7463656A626FLL && a2 == 0xEF65707954686374;
          if (v8 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v9 = a1 == 0x737463656A626FLL && a2 == 0xE700000000000000;
            if (v9 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000017 && a2 == 0x80000001B2EA4830 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              BOOL v10 = a1 == 0x6E6F6974616C6572 && a2 == 0xEF73644970696873;
              if (v10 || (sub_1B2E837A8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001B2EA4850 || (sub_1B2E837A8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else if (a1 == 0xD000000000000016 && a2 == 0x80000001B2EA4870 || (sub_1B2E837A8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else
              {
                BOOL v11 = a1 == 0x614D656372756F73 && a2 == 0xEF65707954686374;
                if (v11 || (sub_1B2E837A8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else if (a1 == 0x73656372756F73 && a2 == 0xE700000000000000)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else
                {
                  char v13 = sub_1B2E837A8();
                  swift_bridgeObjectRelease();
                  if (v13) {
                    return 12;
                  }
                  else {
                    return 13;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B2DECC58(char a1)
{
  uint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x737463656A627573;
      break;
    case 2:
      uint64_t result = 0x437463656A627573;
      break;
    case 3:
      uint64_t result = 0xD000000000000012;
      break;
    case 4:
      uint64_t result = 0x7461636964657270;
      break;
    case 5:
      uint64_t v3 = 0x7463656A626FLL;
      goto LABEL_14;
    case 6:
      uint64_t result = 0x737463656A626FLL;
      break;
    case 7:
      uint64_t result = 0xD000000000000017;
      break;
    case 8:
      uint64_t result = 0x6E6F6974616C6572;
      break;
    case 9:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      uint64_t result = 0xD000000000000016;
      break;
    case 11:
      uint64_t v3 = 0x656372756F73;
LABEL_14:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x614D000000000000;
      break;
    case 12:
      uint64_t result = 0x73656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2DECDF4()
{
  return sub_1B2DECC58(*v0);
}

uint64_t sub_1B2DECDFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DEC6D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DECE24(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF34C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DECE60(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF34C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.Clause.MatchClause.encode(to:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C448E0);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DEF34C();
  sub_1B2E83A38();
  sub_1B2DEF2B4();
  sub_1B2DF27F4();
  sub_1B2E836D8();
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  }
  else
  {
    sub_1B2ABAD40();
    sub_1B29A3EB4(&qword_1EB7E2BD0);
    sub_1B2DEF398(&qword_1E9C448F0, &qword_1EB7E2BD0, (void (*)(void))sub_1B29CB42C);
    sub_1B2DF2614();
    sub_1B2C36A44();
    sub_1B29A3EB4(&qword_1E9C38100);
    sub_1B2DEF398(&qword_1E9C38108, &qword_1E9C38100, (void (*)(void))sub_1B2DEF0A0);
    sub_1B2DF2614();
    sub_1B2E836D8();
    sub_1B29A3EB4(&qword_1EB7D9500);
    sub_1B2DEF398(&qword_1E9C43008, &qword_1EB7D9500, (void (*)(void))sub_1B2A7D6D8);
    sub_1B2DF27F4();
    uint64_t v9 = v8;
    sub_1B2E83668();
    sub_1B2DF24BC();
    sub_1B2C37114();
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B2B405B0(&qword_1EB7D9F50);
    sub_1B2DF25E8();
    sub_1B2DF24BC();
    sub_1B2C36490();
    sub_1B29A3EB4(&qword_1EB7D87A8);
    sub_1B2DEF398(&qword_1E9C448F8, &qword_1EB7D87A8, (void (*)(void))sub_1B2B42A0C);
    sub_1B2DF25E8();
    sub_1B2DF24BC();
    sub_1B2E83668();
    sub_1B2E836D8();
    sub_1B2E83658();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v9);
  }
  sub_1B2C37CD8();
  sub_1B29998C8();
}

void TriplesQuery.Clause.MatchClause.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C44900);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B0C8();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2DEF34C();
  sub_1B2DF2848();
  if (v0)
  {
    sub_1B2DF27A4();
  }
  else
  {
    sub_1B2DEF300();
    sub_1B2DF2640();
    sub_1B29A3EB4(&qword_1EB7E2BD0);
    sub_1B2ABAD40();
    sub_1B2DEF398(&qword_1E9C44908, &qword_1EB7E2BD0, (void (*)(void))sub_1B29CB3E0);
    sub_1B2DF258C();
    sub_1B29A3EB4(&qword_1E9C38100);
    sub_1B2C36A44();
    uint64_t v6 = sub_1B2DEF398(&qword_1E9C448B0, &qword_1E9C38100, (void (*)(void))sub_1B2DEF138);
    swift_bridgeObjectRetain();
    sub_1B299B34C();
    if (!v6)
    {
      sub_1B2DF2830(3);
      sub_1B2999E38();
      sub_1B29A3EB4(&qword_1EB7D9500);
      sub_1B2DEF398(&qword_1E9C43038, &qword_1EB7D9500, (void (*)(void))sub_1B2A7D640);
      sub_1B299B34C();
      sub_1B2DF2830(5);
      sub_1B2E835B8();
      sub_1B29A3EB4(&qword_1EB7E4A80);
      sub_1B2C37114();
      sub_1B2B405B0((unint64_t *)&unk_1EB7E2BD8);
      sub_1B299B34C();
      swift_bridgeObjectRetain();
      sub_1B2DF2640();
      sub_1B29A3EB4(&qword_1EB7D87A8);
      sub_1B2C36490();
      sub_1B2DEF398(&qword_1E9C44910, &qword_1EB7D87A8, (void (*)(void))sub_1B2B42E00);
      sub_1B2DF258C();
      swift_bridgeObjectRetain();
      sub_1B2999E38();
      sub_1B299B34C();
      sub_1B2DF2830(11);
      sub_1B2999E38();
      uint64_t v9 = sub_1B2E83538();
      char v14 = v10;
      uint64_t v11 = v9;
      uint64_t v12 = sub_1B29A1064();
      v13(v12);
      *(unsigned char *)uint64_t v4 = v15;
      *(void *)(v4 + 8) = v15;
      *(void *)(v4 + 16) = v15;
      *(unsigned char *)(v4 + 24) = v15;
      *(void *)(v4 + 32) = v15;
      *(unsigned char *)(v4 + 40) = v15;
      *(void *)(v4 + 48) = v15;
      *(unsigned char *)(v4 + 56) = v15;
      *(void *)(v4 + 64) = v15;
      *(unsigned char *)(v4 + 72) = v15;
      *(void *)(v4 + 80) = v15;
      *(unsigned char *)(v4 + 88) = v15;
      *(void *)(v4 + 96) = v11;
      *(unsigned char *)(v4 + 104) = v14 & 1;
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    uint64_t v7 = sub_1B29A1064();
    v8(v7);
    sub_1B2DF2544();
    sub_1B2DF27A4();
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_5:
  swift_bridgeObjectRelease();
  sub_1B29998C8();
}

void sub_1B2DEDA24()
{
}

void sub_1B2DEDA3C()
{
}

uint64_t sub_1B2DEDA54(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737463656A626FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B2EA4890)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2DEDB44(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0x737463656A626FLL;
  }
}

uint64_t sub_1B2DEDB80()
{
  return sub_1B2DEDB44(*v0);
}

uint64_t sub_1B2DEDB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DEDA54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DEDBB0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF404();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DEDBEC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF404();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.Clause.FullTextSearchClause.encode(to:)()
{
  sub_1B299F300();
  sub_1B2C37C9C();
  sub_1B29A3EB4(&qword_1E9C383D8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B29A0498();
  sub_1B2DF2408();
  sub_1B2DEF404();
  sub_1B299E584();
  sub_1B29A3EB4(&qword_1EB7E4A80);
  sub_1B2B405B0(&qword_1EB7D9F50);
  sub_1B2E836D8();
  if (!v0)
  {
    sub_1B2DEF450();
    sub_1B29EC544();
  }
  uint64_t v2 = sub_1B299B834();
  v3(v2);
  sub_1B2A4AA78();
  sub_1B29998C8();
}

void TriplesQuery.Clause.FullTextSearchClause.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  sub_1B29A3EB4(&qword_1E9C44918);
  sub_1B299D278();
  MEMORY[0x1F4188790](v15);
  sub_1B299E524();
  sub_1B2DEF404();
  sub_1B2E83A18();
  if (v10)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v12);
  }
  else
  {
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B2B405B0((unint64_t *)&unk_1EB7E2BD8);
    sub_1B2E835B8();
    sub_1B2DEF49C();
    swift_bridgeObjectRetain();
    sub_1B2E835B8();
    uint64_t v16 = sub_1B2ACA0FC();
    v17(v16);
    *(void *)uint64_t v14 = a10;
    *(unsigned char *)(v14 + 8) = v18;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v12);
    swift_bridgeObjectRelease();
  }
  sub_1B2A4AA78();
  sub_1B29998C8();
}

uint64_t sub_1B2DEDF34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6D756C6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x707954686374616DLL && a2 == 0xE900000000000065;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B2DEE080(char a1)
{
  if (!a1) {
    return 0x6E6D756C6F63;
  }
  if (a1 == 1) {
    return 0x707954686374616DLL;
  }
  return 0x65756C6176;
}

void sub_1B2DEE0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TriplesQuery.Clause.FullTextSearchClause.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1B2DEE0F0()
{
}

uint64_t sub_1B2DEE108()
{
  return sub_1B2DEE080(*v0);
}

uint64_t sub_1B2DEE110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DEDF34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DEE138(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF4E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DEE174(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF4E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.Clause.ComparisonClause.encode(to:)()
{
  sub_1B2C37C9C();
  sub_1B29A3EB4(&qword_1E9C44928);
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B2DF2408();
  sub_1B2DEF4E8();
  sub_1B299E584();
  sub_1B2DEF534();
  sub_1B29EC544();
  if (!v0)
  {
    sub_1B2DEF580();
    sub_1B29EC544();
    sub_1B2E836A8();
  }
  uint64_t v2 = sub_1B299B834();
  v3(v2);
  sub_1B2A4AA78();
}

void TriplesQuery.Clause.ComparisonClause.init(from:)()
{
  sub_1B2C37D50();
  sub_1B29A3EB4(&qword_1E9C44948);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299E524();
  sub_1B2DEF4E8();
  sub_1B29A4EDC();
  if (!v1)
  {
    sub_1B2DEF5CC();
    sub_1B29A446C();
    sub_1B2DEF618();
    sub_1B29A446C();
    sub_1B2E83588();
    uint64_t v5 = v4;
    uint64_t v6 = sub_1B299B8A4();
    v7(v6);
    *(unsigned char *)uint64_t v2 = v9;
    *(unsigned char *)(v2 + 1) = v8;
    *(void *)(v2 + 8) = v5;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
  sub_1B2C37CD8();
}

void sub_1B2DEE490()
{
}

void sub_1B2DEE4A8()
{
}

uint64_t sub_1B2DEE4C0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF664();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DEE4FC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DEF664();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TriplesQuery.Clause.AllClause.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C44960);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299ADB4();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2DEF664();
  sub_1B2E83A38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

uint64_t TriplesQuery.Clause.AllClause.init(from:)(uint64_t a1)
{
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
}

uint64_t sub_1B2DEE638()
{
  return 0x75616C436C6C413CLL;
}

uint64_t sub_1B2DEE658(uint64_t a1)
{
  return TriplesQuery.Clause.AllClause.init(from:)(a1);
}

uint64_t sub_1B2DEE670(void *a1)
{
  return TriplesQuery.Clause.AllClause.encode(to:)(a1);
}

unint64_t sub_1B2DEE688()
{
  unint64_t result = qword_1E9C37FD0;
  if (!qword_1E9C37FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37FD0);
  }
  return result;
}

unint64_t sub_1B2DEE6D4()
{
  unint64_t result = qword_1E9C38028;
  if (!qword_1E9C38028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38028);
  }
  return result;
}

unint64_t sub_1B2DEE720()
{
  unint64_t result = qword_1E9C44798;
  if (!qword_1E9C44798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44798);
  }
  return result;
}

unint64_t sub_1B2DEE76C()
{
  unint64_t result = qword_1E9C447A0;
  if (!qword_1E9C447A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C447A0);
  }
  return result;
}

unint64_t sub_1B2DEE7B8()
{
  unint64_t result = qword_1E9C447A8;
  if (!qword_1E9C447A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C447A8);
  }
  return result;
}

unint64_t sub_1B2DEE804()
{
  unint64_t result = qword_1E9C447B0;
  if (!qword_1E9C447B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C447B0);
  }
  return result;
}

unint64_t sub_1B2DEE850()
{
  unint64_t result = qword_1EB7D7570;
  if (!qword_1EB7D7570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D7570);
  }
  return result;
}

unint64_t sub_1B2DEE89C()
{
  unint64_t result = qword_1EB7D9EA8;
  if (!qword_1EB7D9EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9EA8);
  }
  return result;
}

unint64_t sub_1B2DEE8E8()
{
  unint64_t result = qword_1E9C447E8;
  if (!qword_1E9C447E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C447E8);
  }
  return result;
}

unint64_t sub_1B2DEE934()
{
  unint64_t result = qword_1E9C447F0;
  if (!qword_1E9C447F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C447F0);
  }
  return result;
}

unint64_t sub_1B2DEE980()
{
  unint64_t result = qword_1E9C38090;
  if (!qword_1E9C38090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38090);
  }
  return result;
}

unint64_t sub_1B2DEE9CC()
{
  unint64_t result = qword_1E9C37F88;
  if (!qword_1E9C37F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37F88);
  }
  return result;
}

unint64_t sub_1B2DEEA18()
{
  unint64_t result = qword_1E9C447F8;
  if (!qword_1E9C447F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C447F8);
  }
  return result;
}

unint64_t sub_1B2DEEA64()
{
  unint64_t result = qword_1E9C44800;
  if (!qword_1E9C44800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44800);
  }
  return result;
}

unint64_t sub_1B2DEEAB0()
{
  unint64_t result = qword_1E9C383A0;
  if (!qword_1E9C383A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C383A0);
  }
  return result;
}

unint64_t sub_1B2DEEAFC()
{
  unint64_t result = qword_1E9C38398;
  if (!qword_1E9C38398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38398);
  }
  return result;
}

unint64_t sub_1B2DEEB48()
{
  unint64_t result = qword_1E9C44808;
  if (!qword_1E9C44808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44808);
  }
  return result;
}

unint64_t sub_1B2DEEB94()
{
  unint64_t result = qword_1E9C44810;
  if (!qword_1E9C44810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44810);
  }
  return result;
}

unint64_t sub_1B2DEEBE0()
{
  unint64_t result = qword_1E9C380A0;
  if (!qword_1E9C380A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C380A0);
  }
  return result;
}

unint64_t sub_1B2DEEC2C()
{
  unint64_t result = qword_1E9C37FA8;
  if (!qword_1E9C37FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37FA8);
  }
  return result;
}

unint64_t sub_1B2DEEC78()
{
  unint64_t result = qword_1E9C38098;
  if (!qword_1E9C38098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38098);
  }
  return result;
}

unint64_t sub_1B2DEECC4()
{
  unint64_t result = qword_1E9C37FC8;
  if (!qword_1E9C37FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37FC8);
  }
  return result;
}

unint64_t sub_1B2DEED10()
{
  unint64_t result = qword_1E9C44858;
  if (!qword_1E9C44858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44858);
  }
  return result;
}

unint64_t sub_1B2DEED5C()
{
  unint64_t result = qword_1E9C44860;
  if (!qword_1E9C44860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44860);
  }
  return result;
}

unint64_t sub_1B2DEEDA8()
{
  unint64_t result = qword_1E9C44868;
  if (!qword_1E9C44868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44868);
  }
  return result;
}

unint64_t sub_1B2DEEDF4()
{
  unint64_t result = qword_1E9C44870;
  if (!qword_1E9C44870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44870);
  }
  return result;
}

unint64_t sub_1B2DEEE40()
{
  unint64_t result = qword_1E9C44878;
  if (!qword_1E9C44878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44878);
  }
  return result;
}

unint64_t sub_1B2DEEE8C()
{
  unint64_t result = qword_1E9C44880;
  if (!qword_1E9C44880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44880);
  }
  return result;
}

unint64_t sub_1B2DEEED8()
{
  unint64_t result = qword_1E9C44888;
  if (!qword_1E9C44888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44888);
  }
  return result;
}

unint64_t sub_1B2DEEF24()
{
  unint64_t result = qword_1EB7D9E90;
  if (!qword_1EB7D9E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E90);
  }
  return result;
}

unint64_t sub_1B2DEEF70()
{
  unint64_t result = qword_1EB7D9F30;
  if (!qword_1EB7D9F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9F30);
  }
  return result;
}

unint64_t sub_1B2DEEFBC()
{
  unint64_t result = qword_1E9C44898;
  if (!qword_1E9C44898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44898);
  }
  return result;
}

unint64_t sub_1B2DEF008()
{
  unint64_t result = qword_1E9C37FB0;
  if (!qword_1E9C37FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37FB0);
  }
  return result;
}

unint64_t sub_1B2DEF054()
{
  unint64_t result = qword_1E9C38088;
  if (!qword_1E9C38088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38088);
  }
  return result;
}

unint64_t sub_1B2DEF0A0()
{
  unint64_t result = qword_1EB7D9F38;
  if (!qword_1EB7D9F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9F38);
  }
  return result;
}

unint64_t sub_1B2DEF0EC()
{
  unint64_t result = qword_1E9C448A8;
  if (!qword_1E9C448A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C448A8);
  }
  return result;
}

unint64_t sub_1B2DEF138()
{
  unint64_t result = qword_1E9C448B8;
  if (!qword_1E9C448B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C448B8);
  }
  return result;
}

unint64_t sub_1B2DEF184()
{
  unint64_t result = qword_1E9C37F70;
  if (!qword_1E9C37F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37F70);
  }
  return result;
}

unint64_t sub_1B2DEF1D0()
{
  unint64_t result = qword_1E9C38040;
  if (!qword_1E9C38040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38040);
  }
  return result;
}

unint64_t sub_1B2DEF21C()
{
  unint64_t result = qword_1E9C448C8;
  if (!qword_1E9C448C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C448C8);
  }
  return result;
}

unint64_t sub_1B2DEF268()
{
  unint64_t result = qword_1E9C37F90;
  if (!qword_1E9C37F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37F90);
  }
  return result;
}

unint64_t sub_1B2DEF2B4()
{
  unint64_t result = qword_1E9C380E8;
  if (!qword_1E9C380E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C380E8);
  }
  return result;
}

unint64_t sub_1B2DEF300()
{
  unint64_t result = qword_1E9C448D8;
  if (!qword_1E9C448D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C448D8);
  }
  return result;
}

unint64_t sub_1B2DEF34C()
{
  unint64_t result = qword_1E9C448E8;
  if (!qword_1E9C448E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C448E8);
  }
  return result;
}

uint64_t sub_1B2DEF398(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2DEF404()
{
  unint64_t result = qword_1E9C38380;
  if (!qword_1E9C38380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38380);
  }
  return result;
}

unint64_t sub_1B2DEF450()
{
  unint64_t result = qword_1E9C38370;
  if (!qword_1E9C38370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38370);
  }
  return result;
}

unint64_t sub_1B2DEF49C()
{
  unint64_t result = qword_1E9C44920;
  if (!qword_1E9C44920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44920);
  }
  return result;
}

unint64_t sub_1B2DEF4E8()
{
  unint64_t result = qword_1E9C44930;
  if (!qword_1E9C44930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44930);
  }
  return result;
}

unint64_t sub_1B2DEF534()
{
  unint64_t result = qword_1E9C44938;
  if (!qword_1E9C44938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44938);
  }
  return result;
}

unint64_t sub_1B2DEF580()
{
  unint64_t result = qword_1E9C44940;
  if (!qword_1E9C44940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44940);
  }
  return result;
}

unint64_t sub_1B2DEF5CC()
{
  unint64_t result = qword_1E9C44950;
  if (!qword_1E9C44950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44950);
  }
  return result;
}

unint64_t sub_1B2DEF618()
{
  unint64_t result = qword_1E9C44958;
  if (!qword_1E9C44958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44958);
  }
  return result;
}

unint64_t sub_1B2DEF664()
{
  unint64_t result = qword_1E9C44968;
  if (!qword_1E9C44968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44968);
  }
  return result;
}

unint64_t sub_1B2DEF6B4()
{
  unint64_t result = qword_1E9C44970;
  if (!qword_1E9C44970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44970);
  }
  return result;
}

unint64_t sub_1B2DEF704()
{
  unint64_t result = qword_1EB7E3370;
  if (!qword_1EB7E3370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3370);
  }
  return result;
}

unint64_t sub_1B2DEF754()
{
  unint64_t result = qword_1EB7E3368;
  if (!qword_1EB7E3368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3368);
  }
  return result;
}

unint64_t sub_1B2DEF7A4()
{
  unint64_t result = qword_1E9C44978;
  if (!qword_1E9C44978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44978);
  }
  return result;
}

unint64_t sub_1B2DEF7F4()
{
  unint64_t result = qword_1E9C44980;
  if (!qword_1E9C44980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44980);
  }
  return result;
}

void type metadata accessor for TriplesQuery.Clause()
{
}

unsigned char *_s6ClauseV15TableCodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DEF92CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for TriplesQuery.Clause.TableCodingKeys()
{
}

void type metadata accessor for TriplesQuery.Clause.AggregateLogicFunction()
{
}

void type metadata accessor for TriplesQuery.Clause.JoinCondition()
{
}

uint64_t destroy for TriplesQuery(uint64_t a1)
{
  return sub_1B2A34B34(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
}

uint64_t _s6ClauseV4ImplOwcp_0(uint64_t a1, uint64_t a2)
{
  sub_1B2DF2308(a1, a2);
  sub_1B2DF2884();
  *(void *)(v2 + 64) = v3;
  *(void *)(v2 + 72) = v5;
  *(void *)(v2 + 80) = v6;
  *(void *)(v2 + 88) = v7;
  *(void *)(v2 + 96) = v8;
  *(unsigned char *)(v2 + 104) = v9;
  return v2;
}

uint64_t _s6ClauseV4ImplOwca_0(uint64_t a1, uint64_t a2)
{
  sub_1B2DF2308(a1, a2);
  sub_1B2DF2884();
  *(void *)(v2 + 64) = v3;
  *(void *)(v2 + 72) = v19;
  *(void *)(v2 + 80) = v20;
  *(void *)(v2 + 88) = v21;
  *(void *)(v2 + 96) = v22;
  *(unsigned char *)(v2 + 104) = v23;
  sub_1B2A34B34(v4, v5, v6, v7, v8, v9, v10, v11, v14, v15, v16, v17, v12, v13);
  return v2;
}

uint64_t assignWithTake for TriplesQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 96);
  char v4 = *(unsigned char *)(a2 + 104);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 96);
  unsigned __int8 v16 = *(unsigned char *)(a1 + 104);
  long long v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v17;
  long long v18 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v18;
  long long v19 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v19;
  *(void *)(a1 + 96) = v3;
  *(unsigned char *)(a1 + 104) = v4;
  sub_1B2A34B34(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16);
  return a1;
}

uint64_t _s6ClauseV4ImplOwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_1B2ABB6B8(-1);
  }
  if ((a2 & 0x80000000) == 0 || !*(unsigned char *)(a1 + 105))
  {
    uint64_t v2 = *(void *)(a1 + 88) >> 1;
    if (v2 > 0x80000000) {
      return sub_1B2ABB6B8(~v2);
    }
    return sub_1B2ABB6B8(-1);
  }
  return sub_1B2ABB6B8(*(_DWORD *)a1 + 0x7FFFFFFF);
}

uint64_t sub_1B2DEFBB4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 104) >> 5;
}

uint64_t sub_1B2DEFBC0(uint64_t result)
{
  *(unsigned char *)(result + 104) &= 0x1Fu;
  return result;
}

uint64_t sub_1B2DEFBD0(uint64_t result, char a2)
{
  char v2 = *(unsigned char *)(result + 104) & 1 | (32 * a2);
  *(void *)(result + 88) &= 1uLL;
  *(unsigned char *)(result + 104) = v2;
  return result;
}

void type metadata accessor for TriplesQuery.Clause.Impl()
{
}

uint64_t _s6ClauseV15AggregateClauseVwCP(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6ClauseV15AggregateClauseVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ClauseV15AggregateClauseVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for TriplesQuery.Clause.AggregateClause()
{
}

void type metadata accessor for TriplesQuery.Clause.JoinClause()
{
}

uint64_t _s6ClauseV14ContainsClauseVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s6ClauseV14ContainsClauseVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6ClauseV14ContainsClauseVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s6ClauseV14ContainsClauseVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t _s6ClauseV14ContainsClauseVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ClauseV14ContainsClauseVwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ClauseV14ContainsClauseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for TriplesQuery.Clause.ContainsClause()
{
}

uint64_t _s6ClauseV11MatchClauseVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s6ClauseV11MatchClauseVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6ClauseV11MatchClauseVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v4 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v4;
  return a1;
}

uint64_t _s6ClauseV11MatchClauseVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t _s6ClauseV11MatchClauseVwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 105))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ClauseV11MatchClauseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 105) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for TriplesQuery.Clause.MatchClause()
{
}

uint64_t _s6ClauseV20FullTextSearchClauseVwCP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6ClauseV20FullTextSearchClauseVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t _s6ClauseV20FullTextSearchClauseVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t _s6ClauseV20FullTextSearchClauseVwet(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ClauseV20FullTextSearchClauseVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for TriplesQuery.Clause.FullTextSearchClause()
{
}

uint64_t _s6ClauseV16ComparisonClauseVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[16])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = v3 - 2;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ClauseV16ComparisonClauseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for TriplesQuery.Clause.ComparisonClause()
{
}

void type metadata accessor for TriplesQuery.Clause.AllClause()
{
}

ValueMetadata *_s6ClauseV9AllClauseV10CodingKeysOMa()
{
  return &_s6ClauseV9AllClauseV10CodingKeysON;
}

unsigned char *_s6ClauseV16ComparisonClauseV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DF0680);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ClauseV16ComparisonClauseV10CodingKeysOMa()
{
  return &_s6ClauseV16ComparisonClauseV10CodingKeysON;
}

ValueMetadata *_s6ClauseV20FullTextSearchClauseV10CodingKeysOMa()
{
  return &_s6ClauseV20FullTextSearchClauseV10CodingKeysON;
}

unsigned char *_s6ClauseV11MatchClauseV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DF0794);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ClauseV11MatchClauseV10CodingKeysOMa()
{
  return &_s6ClauseV11MatchClauseV10CodingKeysON;
}

unsigned char *_s6ClauseV14ContainsClauseV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DF0898);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ClauseV14ContainsClauseV10CodingKeysOMa()
{
  return &_s6ClauseV14ContainsClauseV10CodingKeysON;
}

ValueMetadata *_s6ClauseV10JoinClauseV10CodingKeysOMa()
{
  return &_s6ClauseV10JoinClauseV10CodingKeysON;
}

ValueMetadata *_s6ClauseV15AggregateClauseV10CodingKeysOMa()
{
  return &_s6ClauseV15AggregateClauseV10CodingKeysON;
}

ValueMetadata *_s6ClauseV10CodingKeysOMa()
{
  return &_s6ClauseV10CodingKeysON;
}

unsigned char *_s6ClauseV4ImplO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DF09D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ClauseV4ImplO10CodingKeysOMa()
{
  return &_s6ClauseV4ImplO10CodingKeysON;
}

ValueMetadata *_s6ClauseV4ImplO19AggregateCodingKeysOMa()
{
  return &_s6ClauseV4ImplO19AggregateCodingKeysON;
}

ValueMetadata *_s6ClauseV4ImplO22MatchStringsCodingKeysOMa()
{
  return &_s6ClauseV4ImplO22MatchStringsCodingKeysON;
}

ValueMetadata *_s6ClauseV4ImplO15MatchCodingKeysOMa()
{
  return &_s6ClauseV4ImplO15MatchCodingKeysON;
}

ValueMetadata *_s6ClauseV4ImplO24FullTextSearchCodingKeysOMa()
{
  return &_s6ClauseV4ImplO24FullTextSearchCodingKeysON;
}

ValueMetadata *_s6ClauseV4ImplO20ComparisonCodingKeysOMa()
{
  return &_s6ClauseV4ImplO20ComparisonCodingKeysON;
}

ValueMetadata *_s6ClauseV4ImplO14JoinCodingKeysOMa()
{
  return &_s6ClauseV4ImplO14JoinCodingKeysON;
}

unsigned char *_s6ClauseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2DF0B04);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s6ClauseV4ImplO13AllCodingKeysOMa()
{
  return &_s6ClauseV4ImplO13AllCodingKeysON;
}

unsigned char *_s6ClauseV13JoinConditionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DF0C08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ClauseV13JoinConditionO10CodingKeysOMa()
{
  return &_s6ClauseV13JoinConditionO10CodingKeysON;
}

ValueMetadata *_s6ClauseV13JoinConditionO15RowidCodingKeysOMa()
{
  return &_s6ClauseV13JoinConditionO15RowidCodingKeysON;
}

ValueMetadata *_s6ClauseV13JoinConditionO17SubjectCodingKeysOMa()
{
  return &_s6ClauseV13JoinConditionO17SubjectCodingKeysON;
}

ValueMetadata *_s6ClauseV13JoinConditionO16ObjectCodingKeysOMa()
{
  return &_s6ClauseV13JoinConditionO16ObjectCodingKeysON;
}

ValueMetadata *_s6ClauseV13JoinConditionO19PredicateCodingKeysOMa()
{
  return &_s6ClauseV13JoinConditionO19PredicateCodingKeysON;
}

ValueMetadata *_s6ClauseV13JoinConditionO24RelationshipIdCodingKeysOMa()
{
  return &_s6ClauseV13JoinConditionO24RelationshipIdCodingKeysON;
}

unsigned char *_s6ClauseV22AggregateLogicFunctionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DF0D5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ClauseV22AggregateLogicFunctionO10CodingKeysOMa()
{
  return &_s6ClauseV22AggregateLogicFunctionO10CodingKeysON;
}

ValueMetadata *_s6ClauseV22AggregateLogicFunctionO13AllCodingKeysOMa()
{
  return &_s6ClauseV22AggregateLogicFunctionO13AllCodingKeysON;
}

ValueMetadata *_s6ClauseV22AggregateLogicFunctionO13AnyCodingKeysOMa()
{
  return &_s6ClauseV22AggregateLogicFunctionO13AnyCodingKeysON;
}

unint64_t sub_1B2DF0DB8()
{
  unint64_t result = qword_1E9C44988;
  if (!qword_1E9C44988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44988);
  }
  return result;
}

unint64_t sub_1B2DF0E08()
{
  unint64_t result = qword_1E9C44990;
  if (!qword_1E9C44990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44990);
  }
  return result;
}

unint64_t sub_1B2DF0E58()
{
  unint64_t result = qword_1E9C44998;
  if (!qword_1E9C44998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44998);
  }
  return result;
}

unint64_t sub_1B2DF0EA8()
{
  unint64_t result = qword_1E9C449A0;
  if (!qword_1E9C449A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C449A0);
  }
  return result;
}

unint64_t sub_1B2DF0EF8()
{
  unint64_t result = qword_1E9C449A8;
  if (!qword_1E9C449A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C449A8);
  }
  return result;
}

unint64_t sub_1B2DF0F48()
{
  unint64_t result = qword_1E9C449B0;
  if (!qword_1E9C449B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C449B0);
  }
  return result;
}

unint64_t sub_1B2DF0F98()
{
  unint64_t result = qword_1E9C449B8;
  if (!qword_1E9C449B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C449B8);
  }
  return result;
}

unint64_t sub_1B2DF0FE8()
{
  unint64_t result = qword_1E9C449C0;
  if (!qword_1E9C449C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C449C0);
  }
  return result;
}

unint64_t sub_1B2DF1038()
{
  unint64_t result = qword_1E9C449C8;
  if (!qword_1E9C449C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C449C8);
  }
  return result;
}

unint64_t sub_1B2DF1088()
{
  unint64_t result = qword_1E9C449D0;
  if (!qword_1E9C449D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C449D0);
  }
  return result;
}

unint64_t sub_1B2DF10D8()
{
  unint64_t result = qword_1E9C449D8;
  if (!qword_1E9C449D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C449D8);
  }
  return result;
}

unint64_t sub_1B2DF1128()
{
  unint64_t result = qword_1E9C449E0;
  if (!qword_1E9C449E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C449E0);
  }
  return result;
}

unint64_t sub_1B2DF1178()
{
  unint64_t result = qword_1E9C449E8;
  if (!qword_1E9C449E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C449E8);
  }
  return result;
}

unint64_t sub_1B2DF11C8()
{
  unint64_t result = qword_1E9C449F0;
  if (!qword_1E9C449F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C449F0);
  }
  return result;
}

unint64_t sub_1B2DF1218()
{
  unint64_t result = qword_1E9C449F8;
  if (!qword_1E9C449F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C449F8);
  }
  return result;
}

unint64_t sub_1B2DF1268()
{
  unint64_t result = qword_1E9C44A00;
  if (!qword_1E9C44A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44A00);
  }
  return result;
}

unint64_t sub_1B2DF12B8()
{
  unint64_t result = qword_1E9C44A08;
  if (!qword_1E9C44A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44A08);
  }
  return result;
}

unint64_t sub_1B2DF1308()
{
  unint64_t result = qword_1E9C44A10;
  if (!qword_1E9C44A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44A10);
  }
  return result;
}

unint64_t sub_1B2DF1358()
{
  unint64_t result = qword_1E9C44A18;
  if (!qword_1E9C44A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44A18);
  }
  return result;
}

unint64_t sub_1B2DF13A8()
{
  unint64_t result = qword_1E9C44A20;
  if (!qword_1E9C44A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44A20);
  }
  return result;
}

unint64_t sub_1B2DF13F8()
{
  unint64_t result = qword_1E9C44A28;
  if (!qword_1E9C44A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44A28);
  }
  return result;
}

unint64_t sub_1B2DF1448()
{
  unint64_t result = qword_1E9C38390;
  if (!qword_1E9C38390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38390);
  }
  return result;
}

unint64_t sub_1B2DF1498()
{
  unint64_t result = qword_1E9C38388;
  if (!qword_1E9C38388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38388);
  }
  return result;
}

unint64_t sub_1B2DF14E8()
{
  unint64_t result = qword_1E9C44A30;
  if (!qword_1E9C44A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44A30);
  }
  return result;
}

unint64_t sub_1B2DF1538()
{
  unint64_t result = qword_1E9C44A38;
  if (!qword_1E9C44A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44A38);
  }
  return result;
}

unint64_t sub_1B2DF1588()
{
  unint64_t result = qword_1E9C37FA0;
  if (!qword_1E9C37FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37FA0);
  }
  return result;
}

unint64_t sub_1B2DF15D8()
{
  unint64_t result = qword_1E9C37F98;
  if (!qword_1E9C37F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37F98);
  }
  return result;
}

unint64_t sub_1B2DF1628()
{
  unint64_t result = qword_1E9C37F80;
  if (!qword_1E9C37F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37F80);
  }
  return result;
}

unint64_t sub_1B2DF1678()
{
  unint64_t result = qword_1E9C37F78;
  if (!qword_1E9C37F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37F78);
  }
  return result;
}

unint64_t sub_1B2DF16C8()
{
  unint64_t result = qword_1E9C37FC0;
  if (!qword_1E9C37FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37FC0);
  }
  return result;
}

unint64_t sub_1B2DF1718()
{
  unint64_t result = qword_1E9C37FB8;
  if (!qword_1E9C37FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37FB8);
  }
  return result;
}

unint64_t sub_1B2DF1768()
{
  unint64_t result = qword_1EB7D9EA0;
  if (!qword_1EB7D9EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9EA0);
  }
  return result;
}

unint64_t sub_1B2DF17B8()
{
  unint64_t result = qword_1EB7D9E98;
  if (!qword_1EB7D9E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E98);
  }
  return result;
}

unint64_t sub_1B2DF1808()
{
  unint64_t result = qword_1EB7D9EF8;
  if (!qword_1EB7D9EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9EF8);
  }
  return result;
}

unint64_t sub_1B2DF1858()
{
  unint64_t result = qword_1EB7D9EF0;
  if (!qword_1EB7D9EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9EF0);
  }
  return result;
}

unint64_t sub_1B2DF18A8()
{
  unint64_t result = qword_1EB7D9F18;
  if (!qword_1EB7D9F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9F18);
  }
  return result;
}

unint64_t sub_1B2DF18F8()
{
  unint64_t result = qword_1EB7D9F10;
  if (!qword_1EB7D9F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9F10);
  }
  return result;
}

unint64_t sub_1B2DF1948()
{
  unint64_t result = qword_1EB7D9EE8;
  if (!qword_1EB7D9EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9EE8);
  }
  return result;
}

unint64_t sub_1B2DF1998()
{
  unint64_t result = qword_1EB7D9EE0;
  if (!qword_1EB7D9EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9EE0);
  }
  return result;
}

unint64_t sub_1B2DF19E8()
{
  unint64_t result = qword_1EB7D9F28;
  if (!qword_1EB7D9F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9F28);
  }
  return result;
}

unint64_t sub_1B2DF1A38()
{
  unint64_t result = qword_1EB7D9F20;
  if (!qword_1EB7D9F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9F20);
  }
  return result;
}

unint64_t sub_1B2DF1A88()
{
  unint64_t result = qword_1EB7D9F08;
  if (!qword_1EB7D9F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9F08);
  }
  return result;
}

unint64_t sub_1B2DF1AD8()
{
  unint64_t result = qword_1EB7D9F00;
  if (!qword_1EB7D9F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9F00);
  }
  return result;
}

unint64_t sub_1B2DF1B28()
{
  unint64_t result = qword_1EB7D9ED8;
  if (!qword_1EB7D9ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9ED8);
  }
  return result;
}

unint64_t sub_1B2DF1B78()
{
  unint64_t result = qword_1EB7D9ED0;
  if (!qword_1EB7D9ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9ED0);
  }
  return result;
}

unint64_t sub_1B2DF1BC8()
{
  unint64_t result = qword_1EB7D9EC8;
  if (!qword_1EB7D9EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9EC8);
  }
  return result;
}

unint64_t sub_1B2DF1C18()
{
  unint64_t result = qword_1EB7D9EC0;
  if (!qword_1EB7D9EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9EC0);
  }
  return result;
}

unint64_t sub_1B2DF1C68()
{
  unint64_t result = qword_1EB7D9EB8;
  if (!qword_1EB7D9EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9EB8);
  }
  return result;
}

unint64_t sub_1B2DF1CB8()
{
  unint64_t result = qword_1EB7D9EB0;
  if (!qword_1EB7D9EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9EB0);
  }
  return result;
}

unint64_t sub_1B2DF1D08()
{
  unint64_t result = qword_1E9C37FF0;
  if (!qword_1E9C37FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37FF0);
  }
  return result;
}

unint64_t sub_1B2DF1D58()
{
  unint64_t result = qword_1E9C37FE8;
  if (!qword_1E9C37FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37FE8);
  }
  return result;
}

unint64_t sub_1B2DF1DA8()
{
  unint64_t result = qword_1E9C38010;
  if (!qword_1E9C38010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38010);
  }
  return result;
}

unint64_t sub_1B2DF1DF8()
{
  unint64_t result = qword_1E9C38008;
  if (!qword_1E9C38008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38008);
  }
  return result;
}

unint64_t sub_1B2DF1E48()
{
  unint64_t result = qword_1E9C38000;
  if (!qword_1E9C38000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38000);
  }
  return result;
}

unint64_t sub_1B2DF1E98()
{
  unint64_t result = qword_1E9C37FF8;
  if (!qword_1E9C37FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37FF8);
  }
  return result;
}

unint64_t sub_1B2DF1EE8()
{
  unint64_t result = qword_1E9C38020;
  if (!qword_1E9C38020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38020);
  }
  return result;
}

unint64_t sub_1B2DF1F38()
{
  unint64_t result = qword_1E9C38018;
  if (!qword_1E9C38018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38018);
  }
  return result;
}

unint64_t sub_1B2DF1F88()
{
  unint64_t result = qword_1E9C38038;
  if (!qword_1E9C38038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38038);
  }
  return result;
}

unint64_t sub_1B2DF1FD8()
{
  unint64_t result = qword_1E9C38030;
  if (!qword_1E9C38030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38030);
  }
  return result;
}

unint64_t sub_1B2DF2028()
{
  unint64_t result = qword_1E9C37FE0;
  if (!qword_1E9C37FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37FE0);
  }
  return result;
}

unint64_t sub_1B2DF2078()
{
  unint64_t result = qword_1E9C37FD8;
  if (!qword_1E9C37FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37FD8);
  }
  return result;
}

unint64_t sub_1B2DF20C8()
{
  unint64_t result = qword_1E9C38070;
  if (!qword_1E9C38070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38070);
  }
  return result;
}

unint64_t sub_1B2DF2118()
{
  unint64_t result = qword_1E9C38068;
  if (!qword_1E9C38068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38068);
  }
  return result;
}

unint64_t sub_1B2DF2168()
{
  unint64_t result = qword_1E9C38080;
  if (!qword_1E9C38080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38080);
  }
  return result;
}

unint64_t sub_1B2DF21B8()
{
  unint64_t result = qword_1E9C38078;
  if (!qword_1E9C38078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38078);
  }
  return result;
}

unint64_t sub_1B2DF2208()
{
  unint64_t result = qword_1E9C38058;
  if (!qword_1E9C38058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38058);
  }
  return result;
}

unint64_t sub_1B2DF2258()
{
  unint64_t result = qword_1E9C38050;
  if (!qword_1E9C38050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38050);
  }
  return result;
}

unint64_t sub_1B2DF22A4()
{
  unint64_t result = qword_1EB7E3360;
  if (!qword_1EB7E3360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3360);
  }
  return result;
}

uint64_t sub_1B2DF2308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v16 = *(void *)(a2 + 80);
  uint64_t v17 = *(void *)(a2 + 88);
  uint64_t v18 = *(void *)(a2 + 96);
  int v14 = *(unsigned __int8 *)(a2 + 104);
  *(_DWORD *)(v2 - 84) = v14;
  return sub_1B29C64D0(v4, v5, v6, v7, v8, v9, v10, v11, v13, v12, v16, v17, v18, v14);
}

uint64_t sub_1B2DF2378@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_1B2E83548();
}

uint64_t sub_1B2DF23C4()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2DF23E8()
{
  return sub_1B2E834E8();
}

void *sub_1B2DF2408()
{
  return sub_1B29AEC7C(v0, v0[3]);
}

uint64_t sub_1B2DF242C()
{
  return sub_1B2E83618();
}

uint64_t sub_1B2DF2464@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_1B2E83668();
}

uint64_t sub_1B2DF2490()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2DF24BC()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2DF24F4()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2DF2518()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2DF2544()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DF255C()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2DF258C()
{
  return sub_1B2E83548();
}

uint64_t sub_1B2DF25BC()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2DF25E8()
{
  return sub_1B2E83668();
}

uint64_t sub_1B2DF2614()
{
  return sub_1B2E83668();
}

uint64_t sub_1B2DF2640()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2DF266C()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2DF2698()
{
  return swift_bridgeObjectRelease();
}

unsigned char *_s20IntelligencePlatform12TriplesQueryV6ClauseV09AggregateE0V13logicFunctionAE0f5LogicH0Ovs_0(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

double sub_1B2DF26C8()
{
  double result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  *(_OWORD *)((char *)v0 + 89) = 0u;
  return result;
}

uint64_t sub_1B2DF26E4()
{
  return sub_1B2E83388();
}

uint64_t sub_1B2DF26FC()
{
  return v0;
}

void sub_1B2DF2714()
{
  *(unsigned char *)(v0 - 200) = *(void *)(v0 - 232) & 1;
  *(void *)(v0 - 192) = *(void *)(v0 - 224);
}

uint64_t sub_1B2DF272C()
{
  return 1;
}

uint64_t sub_1B2DF273C()
{
  return sub_1B2E83388();
}

uint64_t sub_1B2DF2754()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DF2770()
{
  return sub_1B2E82518();
}

unsigned char *_s20IntelligencePlatform12TriplesQueryV6ClauseV04JoinE0V13joinCondition7clausesAgE0fH0O_SayAEGtcfC_0@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = *result;
  *(void *)(a3 + 8) = a2;
  return result;
}

uint64_t sub_1B2DF27BC()
{
  return sub_1B2E83618();
}

void sub_1B2DF27DC()
{
  *(unsigned char *)(v0 - 67) = 1;
}

void sub_1B2DF27E8()
{
  *(void *)(v0 + 16) = v1;
}

uint64_t sub_1B2DF27F4()
{
  return v0 - 88;
}

uint64_t sub_1B2DF2800()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DF2818()
{
  return sub_1B2E83388();
}

uint64_t sub_1B2DF2830@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2DF2848()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B2DF2868()
{
  return *(void *)v0;
}

void sub_1B2DF287C(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 104) = v1;
}

void sub_1B2DF2884()
{
  void *v0 = v1;
  v0[1] = v2;
  v0[2] = v3;
  v0[3] = v4;
  v0[4] = v5;
  v0[5] = v6;
  v0[6] = v7;
  v0[7] = v8;
}

uint64_t sub_1B2DF28AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ValueMetadata *a5)
{
  uint64_t v78 = a4;
  uint64_t v77 = a2;
  uint64_t v65 = sub_1B2E81418();
  uint64_t v86 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v64 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1B2E81508();
  uint64_t v10 = *(void *)(v68 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v68);
  uint64_t v60 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (char *)&v57 - v13;
  uint64_t v67 = sub_1B2E80BD8();
  uint64_t v14 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v66 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1B2E80BE8();
  uint64_t v16 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    uint64_t v80 = a3;
    uint64_t v79 = a5;
    uint64_t v75 = v5;
    uint64_t v107 = MEMORY[0x1E4FBC860];
    sub_1B29C162C();
    uint64_t v20 = v107;
    uint64_t v61 = (void (**)(char *, uint64_t))(v86 + 8);
    uint64_t v58 = (void (**)(uint64_t *, char *, uint64_t))(v10 + 16);
    uint64_t v63 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v62 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v83 = v16 + 32;
    uint64_t v21 = a1 + 72;
    uint64_t v82 = v16;
    uint64_t v81 = v18;
    while (2)
    {
      uint64_t v85 = v20;
      uint64_t v86 = v19;
      unint64_t v23 = *(void *)(v21 - 40);
      uint64_t v22 = *(void *)(v21 - 32);
      uint64_t v24 = *(void *)(v21 - 24);
      uint64_t v25 = *(void *)(v21 - 16);
      uint64_t v27 = *(void *)(v21 - 8);
      uint64_t v26 = *(void *)v21;
      uint64_t v29 = *(void *)(v21 + 8);
      uint64_t v28 = *(void *)(v21 + 16);
      uint64_t v31 = *(void *)(v21 + 24);
      uint64_t v30 = *(void *)(v21 + 32);
      uint64_t v33 = *(void *)(v21 + 40);
      uint64_t v32 = *(void *)(v21 + 48);
      unsigned int v34 = *(unsigned __int8 *)(v21 + 64);
      uint64_t v35 = *(void *)(v21 + 56);
      v21 += 112;
      switch(v34 >> 5)
      {
        case 1u:
          LOBYTE(v93) = v23 & 1;
          uint64_t v94 = v22;
          LOBYTE(v95) = v24 & 1;
          uint64_t v96 = (ValueMetadata *)v25;
          LOBYTE(v97) = v27 & 1;
          uint64_t v98 = v26;
          LOBYTE(v99) = v29 & 1;
          uint64_t v100 = v28;
          LOBYTE(v101) = v31 & 1;
          uint64_t v102 = v30;
          uint64_t v40 = v81;
          sub_1B2DF8354();
          goto LABEL_15;
        case 2u:
          LOBYTE(v93) = v23 & 1;
          uint64_t v94 = v22;
          uint64_t v95 = v24;
          LOBYTE(v96) = v25 & 1;
          unint64_t v97 = v27;
          LOBYTE(v98) = v26 & 1;
          uint64_t v99 = v29;
          LOBYTE(v100) = v28 & 1;
          uint64_t v101 = v31;
          LOBYTE(v102) = v30 & 1;
          uint64_t v103 = v33;
          char v104 = v32 & 1;
          uint64_t v105 = v35;
          char v106 = v34 & 1;
          unint64_t v88 = v77;
          uint64_t v89 = v80;
          uint64_t v90 = v78;
          uint64_t v91 = v79;
          uint64_t v40 = v81;
          TriplesQuery.Clause.MatchClause.sqlExpression(config:)();
          goto LABEL_15;
        case 3u:
          unint64_t v88 = v23;
          LOBYTE(v89) = v22;
          uint64_t v93 = v77;
          uint64_t v94 = v80;
          uint64_t v95 = v78;
          uint64_t v96 = v79;
          uint64_t v40 = v81;
          TriplesQuery.Clause.FullTextSearchClause.sqlExpression(config:)();
          goto LABEL_15;
        case 4u:
          unint64_t v41 = v23 >> 8;
          if (v23)
          {
            uint64_t v48 = v22;
            uint64_t v96 = &type metadata for TriplesQuery.ComparableColumn;
            unint64_t v97 = sub_1B2DFA9C8();
            LOBYTE(v93) = 1;
            uint64_t v49 = v60;
            sub_1B2E81528();
            uint64_t v50 = v41;
            uint64_t v45 = v82;
            uint64_t v40 = v81;
            uint64_t v46 = v86;
            uint64_t v20 = v85;
            uint64_t v51 = v68;
            switch(v50)
            {
              case 1:
                uint64_t v96 = (ValueMetadata *)v68;
                unint64_t v97 = MEMORY[0x1E4F62E90];
                uint64_t v53 = sub_1B29D1C70(&v93);
                (*v58)(v53, v49, v51);
                uint64_t v92 = MEMORY[0x1E4F62F98];
                uint64_t v91 = (ValueMetadata *)MEMORY[0x1E4FBB3D0];
                unint64_t v88 = v48;
                sub_1B2E812E8();
                break;
              case 2:
                uint64_t v96 = (ValueMetadata *)v68;
                unint64_t v97 = MEMORY[0x1E4F62E90];
                uint64_t v54 = sub_1B29D1C70(&v93);
                (*v58)(v54, v49, v51);
                uint64_t v92 = MEMORY[0x1E4F62F98];
                uint64_t v91 = (ValueMetadata *)MEMORY[0x1E4FBB3D0];
                unint64_t v88 = v48;
                sub_1B2E81098();
                break;
              case 3:
                uint64_t v96 = (ValueMetadata *)v68;
                unint64_t v97 = MEMORY[0x1E4F62E90];
                uint64_t v55 = sub_1B29D1C70(&v93);
                (*v58)(v55, v49, v51);
                uint64_t v92 = MEMORY[0x1E4F62F98];
                uint64_t v91 = (ValueMetadata *)MEMORY[0x1E4FBB3D0];
                unint64_t v88 = v48;
                sub_1B2E812F8();
                break;
              default:
                uint64_t v96 = (ValueMetadata *)v68;
                unint64_t v97 = MEMORY[0x1E4F62E90];
                uint64_t v52 = sub_1B29D1C70(&v93);
                (*v58)(v52, v49, v51);
                uint64_t v92 = MEMORY[0x1E4F62F98];
                uint64_t v91 = (ValueMetadata *)MEMORY[0x1E4FBB3D0];
                unint64_t v88 = v48;
                sub_1B2E81088();
                break;
            }
            _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v88);
            _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v93);
            (*v63)(v49, v51);
          }
          else
          {
            double v42 = *(double *)&v22;
            LOBYTE(v88) = BYTE1(v23);
            uint64_t v96 = &type metadata for TriplesQuery.ComparableColumn;
            unint64_t v97 = sub_1B2DFA9C8();
            LOBYTE(v93) = 0;
            uint64_t v43 = v59;
            sub_1B2E81528();
            uint64_t v40 = v81;
            TriplesQuery.ComparisonType.compare(text:_:)(v42);
            (*v63)(v43, v68);
LABEL_15:
            uint64_t v45 = v82;
            uint64_t v46 = v86;
            uint64_t v20 = v85;
          }
          uint64_t v107 = v20;
          unint64_t v47 = *(void *)(v20 + 16);
          if (v47 >= *(void *)(v20 + 24) >> 1)
          {
            sub_1B29C162C();
            uint64_t v20 = v107;
          }
          *(void *)(v20 + 16) = v47 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v20+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v47, v40, v84);
          uint64_t v19 = v46 - 1;
          if (v19) {
            continue;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 5u:
          LOBYTE(v88) = v23;
          uint64_t v89 = v22;
          uint64_t v93 = v77;
          uint64_t v94 = v80;
          uint64_t v95 = v78;
          uint64_t v96 = v79;
          uint64_t v40 = v81;
          TriplesQuery.Clause.JoinClause.graphIdentifierSQLExpression(config:)();
          goto LABEL_15;
        case 6u:
          uint64_t v44 = v64;
          MEMORY[0x1B3EAFBB0](49, 0xE100000000000000);
          uint64_t v40 = v81;
          sub_1B2E813D8();
          (*v61)(v44, v65);
          goto LABEL_15;
        default:
          uint64_t v76 = v22;
          uint64_t v71 = v26;
          uint64_t v72 = v29;
          uint64_t v73 = v28;
          uint64_t v69 = v30;
          uint64_t v70 = v31;
          sub_1B29C64D0(v23, v22, v24, v25, v27, v26, v29, v28, v31, v30, v33, v32, v35, v34);
          swift_bridgeObjectRetain();
          uint64_t v36 = v79;
          swift_bridgeObjectRetain();
          uint64_t v37 = v36;
          uint64_t v38 = v75;
          uint64_t v74 = sub_1B2DF28AC(v76, v77, v80, v78, v37, v87);
          uint64_t v75 = v38;
          sub_1B2A34B34(v23, v76, v24, v25, v27, v71, v72, v73, v70, v69, v33, v32, v35, v34);
          uint64_t v93 = v74;
          if (v23)
          {
            uint64_t v39 = v66;
            sub_1B2E80BB8();
          }
          else
          {
            uint64_t v39 = v66;
            sub_1B2E80BC8();
          }
          sub_1B29A3EB4(&qword_1EB7E4A70);
          sub_1B29D22C4(&qword_1EB7E4A78, &qword_1EB7E4A70);
          uint64_t v40 = v81;
          sub_1B2E82658();
          (*v62)(v39, v67);
          swift_bridgeObjectRelease();
          goto LABEL_15;
      }
      break;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v20;
}

uint64_t sub_1B2DF33CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ValueMetadata *a5)
{
  uint64_t v104 = a4;
  uint64_t v103 = a2;
  uint64_t v86 = sub_1B2E81418();
  uint64_t v9 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v85 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1B2E81508();
  uint64_t v11 = *(void *)(v94 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v94);
  uint64_t v99 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v83 = (char *)&v81 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v82 = (char *)&v81 - v16;
  uint64_t v93 = sub_1B2E80BD8();
  uint64_t v17 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v92 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1B2E80BE8();
  uint64_t v19 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v113 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    uint64_t v105 = a3;
    uint64_t v106 = v5;
    uint64_t v135 = MEMORY[0x1E4FBC860];
    sub_1B29C162C();
    uint64_t v114 = v135;
    uint64_t v84 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v91 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v90 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v81 = (void (**)(uint64_t *, char *, uint64_t))(v11 + 16);
    uint64_t v110 = v19 + 32;
    uint64_t v22 = a1 + 72;
    uint64_t v23 = v96;
    uint64_t v109 = v19;
    uint64_t v111 = a5;
    while (2)
    {
      uint64_t v112 = v21;
      uint64_t v25 = *(void *)(v22 - 40);
      uint64_t v24 = *(void *)(v22 - 32);
      uint64_t v27 = *(void *)(v22 - 24);
      uint64_t v26 = *(void *)(v22 - 16);
      uint64_t v29 = *(void *)(v22 - 8);
      uint64_t v28 = *(void *)v22;
      uint64_t v30 = *(void *)(v22 + 8);
      uint64_t v31 = *(void *)(v22 + 16);
      uint64_t v32 = *(void *)(v22 + 24);
      uint64_t v33 = *(void *)(v22 + 32);
      uint64_t v35 = *(void *)(v22 + 40);
      uint64_t v34 = *(void *)(v22 + 48);
      unsigned int v36 = *(unsigned __int8 *)(v22 + 64);
      uint64_t v37 = *(void *)(v22 + 56);
      v22 += 112;
      switch(v36 >> 5)
      {
        case 1u:
          LOBYTE(v116) = v25 & 1;
          uint64_t v117 = v24;
          LOBYTE(v118) = v27 & 1;
          uint64_t v119 = (ValueMetadata *)v26;
          LOBYTE(v120) = v29 & 1;
          uint64_t v121 = v28;
          LOBYTE(v122) = v30 & 1;
          uint64_t v123 = v31;
          LOBYTE(v124) = v32 & 1;
          uint64_t v125 = v33;
          TriplesQuery.Clause.ContainsClause.sqlExpression(config:)();
          goto LABEL_28;
        case 2u:
          LOBYTE(v116) = v25 & 1;
          uint64_t v117 = v24;
          uint64_t v118 = v27;
          LOBYTE(v119) = v26 & 1;
          unint64_t v120 = v29;
          LOBYTE(v121) = v28 & 1;
          uint64_t v122 = v30;
          LOBYTE(v123) = v31 & 1;
          uint64_t v124 = v32;
          LOBYTE(v125) = v33 & 1;
          uint64_t v126 = v35;
          char v127 = v34 & 1;
          uint64_t v128 = v37;
          char v129 = v36 & 1;
          uint64_t v130 = v103;
          uint64_t v131 = v105;
          uint64_t v132 = v104;
          BOOL v133 = v111;
          TriplesQuery.Clause.MatchClause.sqlExpression(config:)(&v130);
          goto LABEL_28;
        case 3u:
          uint64_t v130 = v25;
          LOBYTE(v131) = v24;
          uint64_t v116 = v103;
          uint64_t v117 = v105;
          uint64_t v118 = v104;
          uint64_t v119 = v111;
          TriplesQuery.Clause.FullTextSearchClause.sqlExpression(config:)();
          goto LABEL_28;
        case 4u:
          if (v25)
          {
            uint64_t v51 = v24;
            uint64_t v119 = &type metadata for TriplesQuery.ComparableColumn;
            unint64_t v120 = sub_1B2DFA9C8();
            LOBYTE(v116) = 1;
            uint64_t v52 = v83;
            sub_1B2E81528();
            uint64_t v53 = v94;
            uint64_t v54 = v112;
            switch(BYTE1(v25))
            {
              case 1:
                uint64_t v119 = (ValueMetadata *)v94;
                unint64_t v120 = MEMORY[0x1E4F62E90];
                uint64_t v76 = sub_1B29D1C70(&v116);
                (*v81)(v76, v52, v53);
                uint64_t v134 = MEMORY[0x1E4F62F98];
                BOOL v133 = (ValueMetadata *)MEMORY[0x1E4FBB3D0];
                uint64_t v130 = v51;
                sub_1B2E812E8();
                break;
              case 2:
                uint64_t v119 = (ValueMetadata *)v94;
                unint64_t v120 = MEMORY[0x1E4F62E90];
                uint64_t v77 = sub_1B29D1C70(&v116);
                (*v81)(v77, v52, v53);
                uint64_t v134 = MEMORY[0x1E4F62F98];
                BOOL v133 = (ValueMetadata *)MEMORY[0x1E4FBB3D0];
                uint64_t v130 = v51;
                sub_1B2E81098();
                break;
              case 3:
                uint64_t v119 = (ValueMetadata *)v94;
                unint64_t v120 = MEMORY[0x1E4F62E90];
                uint64_t v78 = sub_1B29D1C70(&v116);
                (*v81)(v78, v52, v53);
                uint64_t v134 = MEMORY[0x1E4F62F98];
                BOOL v133 = (ValueMetadata *)MEMORY[0x1E4FBB3D0];
                uint64_t v130 = v51;
                sub_1B2E812F8();
                break;
              default:
                uint64_t v119 = (ValueMetadata *)v94;
                unint64_t v120 = MEMORY[0x1E4F62E90];
                uint64_t v55 = sub_1B29D1C70(&v116);
                (*v81)(v55, v52, v53);
                uint64_t v134 = MEMORY[0x1E4F62F98];
                BOOL v133 = (ValueMetadata *)MEMORY[0x1E4FBB3D0];
                uint64_t v130 = v51;
                sub_1B2E81088();
                break;
            }
            _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v130);
            _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v116);
            uint64_t v72 = v109;
            (*v90)(v52, v53);
            uint64_t v73 = v114;
          }
          else
          {
            LOBYTE(v130) = BYTE1(v25);
            uint64_t v119 = &type metadata for TriplesQuery.ComparableColumn;
            unint64_t v120 = sub_1B2DFA9C8();
            LOBYTE(v116) = 0;
            uint64_t v44 = v82;
            sub_1B2E81528();
            TriplesQuery.ComparisonType.compare(text:_:)(*(double *)&v24);
            (*v90)(v44, v94);
LABEL_28:
            uint64_t v72 = v109;
            uint64_t v73 = v114;
            uint64_t v54 = v112;
          }
          uint64_t v135 = v73;
          unint64_t v74 = *(void *)(v73 + 16);
          if (v74 >= *(void *)(v73 + 24) >> 1)
          {
            sub_1B29C162C();
            uint64_t v73 = v135;
          }
          *(void *)(v73 + 16) = v74 + 1;
          unint64_t v75 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
          uint64_t v114 = v73;
          (*(void (**)(unint64_t, char *, uint64_t))(v72 + 32))(v73 + v75 + *(void *)(v72 + 72) * v74, v113, v23);
          uint64_t v21 = v54 - 1;
          if (v21) {
            continue;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = v114;
          break;
        case 5u:
          uint64_t v87 = v24;
          uint64_t v108 = v30;
          uint64_t v107 = v28;
          uint64_t v97 = v31;
          uint64_t v89 = v35;
          uint64_t v102 = v29;
          switch((char)v25)
          {
            case 1:
              uint64_t v45 = v27;
              uint64_t v119 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
              uint64_t v46 = v29;
              uint64_t v47 = v32;
              uint64_t v48 = v33;
              uint64_t v95 = v26;
              uint64_t v56 = v34;
              unint64_t v120 = sub_1B2DF22A4();
              LOBYTE(v116) = 1;
              sub_1B2E81528();
              uint64_t v57 = v56;
              uint64_t v49 = v95;
              goto LABEL_24;
            case 2:
              uint64_t v45 = v27;
              uint64_t v119 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
              uint64_t v46 = v29;
              uint64_t v47 = v32;
              uint64_t v48 = v33;
              uint64_t v49 = v26;
              uint64_t v98 = v34;
              unint64_t v120 = sub_1B2DF22A4();
              char v58 = 5;
              goto LABEL_22;
            case 3:
              uint64_t v45 = v27;
              uint64_t v119 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
              uint64_t v46 = v29;
              uint64_t v47 = v32;
              uint64_t v48 = v33;
              uint64_t v49 = v26;
              uint64_t v98 = v34;
              unint64_t v120 = sub_1B2DF22A4();
              char v58 = 2;
LABEL_22:
              LOBYTE(v116) = v58;
              sub_1B2E81528();
              goto LABEL_23;
            case 4:
              uint64_t v45 = v27;
              uint64_t v119 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
              uint64_t v61 = v32;
              uint64_t v62 = v33;
              uint64_t v49 = v26;
              uint64_t v63 = v34;
              unint64_t v120 = sub_1B2DF22A4();
              LOBYTE(v116) = 3;
              sub_1B2E81528();
              uint64_t v57 = v63;
              uint64_t v48 = v62;
              uint64_t v59 = v61;
              uint64_t v60 = v102;
              goto LABEL_26;
            default:
              uint64_t v45 = v27;
              uint64_t v46 = v29;
              uint64_t v47 = v32;
              uint64_t v48 = v33;
              uint64_t v49 = v26;
              uint64_t v98 = v34;
              sub_1B2E81518();
LABEL_23:
              uint64_t v57 = v98;
LABEL_24:
              uint64_t v59 = v47;
              uint64_t v60 = v46;
LABEL_26:
              uint64_t v64 = v87;
              uint64_t v100 = v48;
              uint64_t v101 = v59;
              uint64_t v80 = v37;
              uint64_t v98 = v37;
              uint64_t v65 = v89;
              uint64_t v66 = v57;
              sub_1B29C64D0(v25, v87, v45, v49, v60, v107, v108, v97, v59, v48, v89, v57, v80, v36);
              uint64_t v67 = v105;
              swift_bridgeObjectRetain();
              uint64_t v68 = (uint64_t)v111;
              swift_bridgeObjectRetain();
              uint64_t v69 = v67;
              uint64_t v70 = v106;
              uint64_t v88 = sub_1B2DF481C(v64, v103, v69, v104, v68, (uint64_t)v99);
              uint64_t v106 = v70;
              sub_1B2A34B34(v25, v64, v45, v49, v102, v107, v108, v97, v101, v100, v65, v66, v98, v36);
              uint64_t v116 = v88;
              uint64_t v71 = v92;
              sub_1B2E80BC8();
              sub_1B29A3EB4(&qword_1EB7E4A70);
              sub_1B29D22C4(&qword_1EB7E4A78, &qword_1EB7E4A70);
              sub_1B2E82658();
              (*v91)(v71, v93);
              swift_bridgeObjectRelease();
              (*v90)(v99, v94);
              break;
          }
          goto LABEL_27;
        case 6u:
          uint64_t v50 = v85;
          MEMORY[0x1B3EAFBB0](49, 0xE100000000000000);
          sub_1B2E813D8();
          (*v84)(v50, v86);
          goto LABEL_28;
        default:
          uint64_t v95 = v26;
          uint64_t v102 = v29;
          uint64_t v107 = v28;
          uint64_t v108 = v30;
          uint64_t v101 = v32;
          uint64_t v100 = v33;
          uint64_t v98 = v34;
          sub_1B29C64D0(v25, v24, v27, v26, v29, v28, v30, v31, v32, v33, v35, v34, v37, v36);
          uint64_t v38 = v105;
          swift_bridgeObjectRetain();
          uint64_t v39 = v111;
          swift_bridgeObjectRetain();
          uint64_t v40 = v39;
          uint64_t v41 = v106;
          uint64_t v42 = sub_1B2DF33CC(v24, v103, v38, v104, v40, v115);
          uint64_t v106 = v41;
          sub_1B2A34B34(v25, v24, v27, v95, v102, v107, v108, v31, v101, v100, v35, v98, v37, v36);
          uint64_t v116 = v42;
          uint64_t v43 = v92;
          if (v25) {
            sub_1B2E80BB8();
          }
          else {
            sub_1B2E80BC8();
          }
          sub_1B29A3EB4(&qword_1EB7E4A70);
          sub_1B29D22C4(&qword_1EB7E4A78, &qword_1EB7E4A70);
          sub_1B2E82658();
          (*v91)(v43, v93);
          swift_bridgeObjectRelease();
LABEL_27:
          uint64_t v23 = v96;
          goto LABEL_28;
      }
      break;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B2DF42C8(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  void (*v19)(uint64_t *__return_ptr, uint64_t);

  uint64_t v19 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = *(void *)(type metadata accessor for KGQ.Value() - 8);
  uint64_t v7 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v16 = *(void *)(v6 + 72);
  swift_bridgeObjectRetain();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  while (1)
  {
    v19(&v17, v7);
    if (v3) {
      break;
    }
    uint64_t v9 = v18;
    if (v18)
    {
      uint64_t v10 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B2C9FDD4();
        sub_1B29B7048();
        uint64_t v8 = v13;
      }
      unint64_t v11 = *(void *)(v8 + 16);
      if (v11 >= *(void *)(v8 + 24) >> 1)
      {
        sub_1B29B7048();
        uint64_t v8 = v14;
      }
      *(void *)(v8 + 16) = v11 + 1;
      uint64_t v12 = v8 + 16 * v11;
      *(void *)(v12 + 32) = v10;
      *(void *)(v12 + 40) = v9;
    }
    v7 += v16;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B2DF4454(void (*a1)(long long *__return_ptr, long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  while (1)
  {
    long long v22 = *(_OWORD *)(a3 + 16 * v7 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(&v18, &v22);
    if (v3) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v19 + 1))
    {
      long long v14 = v18;
      long long v15 = v19;
      long long v16 = v20;
      long long v17 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B96A4();
        uint64_t v8 = v11;
      }
      unint64_t v9 = *(void *)(v8 + 16);
      if (v9 >= *(void *)(v8 + 24) >> 1)
      {
        sub_1B29B96A4();
        uint64_t v8 = v12;
      }
      *(void *)(v8 + 16) = v9 + 1;
      uint64_t v10 = (_OWORD *)(v8 + (v9 << 6));
      void v10[4] = v16;
      void v10[5] = v17;
      void v10[2] = v14;
      void v10[3] = v15;
    }
    else
    {
      sub_1B2DFAAF4((uint64_t)&v18, &qword_1E9C41ED0);
    }
    if (v4 == ++v7)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B2DF460C(uint64_t a1, void *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  while (v8)
  {
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v14 = v13 | (v11 << 6);
LABEL_22:
    long long v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    swift_bridgeObjectRetain();
    uint64_t result = (uint64_t)a2(&v25, v19, v20);
    if ((v26 & 1) == 0)
    {
      uint64_t v27 = v25;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t v23 = sub_1B2C9FDD4();
        uint64_t result = a3(v23);
        uint64_t v12 = result;
      }
      unint64_t v22 = *(void *)(v12 + 16);
      unint64_t v21 = *(void *)(v12 + 24);
      if (v22 >= v21 >> 1)
      {
        uint64_t result = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))a3)(v21 > 1, v22 + 1, 1, v12);
        uint64_t v12 = result;
      }
      *(void *)(v12 + 16) = v22 + 1;
      *(void *)(v12 + 8 * v22 + 32) = v27;
    }
  }
  int64_t v15 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v15 >= v9) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v5 + 8 * v15);
  ++v11;
  if (v16) {
    goto LABEL_21;
  }
  int64_t v11 = v15 + 1;
  if (v15 + 1 >= v9) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v5 + 8 * v11);
  if (v16) {
    goto LABEL_21;
  }
  int64_t v11 = v15 + 2;
  if (v15 + 2 >= v9) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v5 + 8 * v11);
  if (v16) {
    goto LABEL_21;
  }
  int64_t v11 = v15 + 3;
  if (v15 + 3 >= v9) {
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v5 + 8 * v11);
  if (v16)
  {
LABEL_21:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v9)
  {
LABEL_28:
    swift_release();
    return v12;
  }
  unint64_t v16 = *(void *)(v5 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v9) {
      goto LABEL_28;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1B2DF481C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v54 = a6;
  uint64_t v53 = a4;
  uint64_t v52 = a2;
  uint64_t v11 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1B2E80BE8();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v51 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v47 = (char *)&v45 - v18;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    uint64_t v50 = v13;
    uint64_t v55 = a3;
    uint64_t v56 = a5;
    uint64_t v68 = v7;
    uint64_t v46 = v17;
    uint64_t v48 = (void (**)(char *, uint64_t, uint64_t))(v17 + 32);
    swift_bridgeObjectRetain();
    uint64_t v45 = a1;
    uint64_t v20 = a1 + 72;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    uint64_t v49 = v14;
    uint64_t v22 = (uint64_t)v50;
    while (1)
    {
      uint64_t v57 = v19;
      uint64_t v65 = v21;
      uint64_t v23 = *(void *)(v20 - 32);
      uint64_t v24 = *(void *)(v20 - 24);
      uint64_t v25 = *(void *)(v20 - 16);
      uint64_t v26 = *(void *)(v20 - 8);
      uint64_t v27 = *(void *)v20;
      uint64_t v28 = *(void *)(v20 + 8);
      uint64_t v29 = *(void *)(v20 + 16);
      uint64_t v30 = *(void *)(v20 + 24);
      uint64_t v31 = *(void *)(v20 + 32);
      uint64_t v32 = *(void *)(v20 + 40);
      uint64_t v21 = *(void *)(v20 + 48);
      uint64_t v33 = *(void *)(v20 + 56);
      unsigned __int8 v34 = *(unsigned char *)(v20 + 64);
      v66[0] = *(void *)(v20 - 40);
      v66[1] = v23;
      void v66[2] = v24;
      v66[3] = v25;
      v66[4] = v26;
      v66[5] = v27;
      v66[6] = v28;
      v66[7] = v29;
      v66[8] = v30;
      v66[9] = v31;
      v66[10] = v32;
      v66[11] = v21;
      v66[12] = v33;
      unsigned __int8 v67 = v34;
      uint64_t v35 = v66[0];
      uint64_t v63 = v24;
      uint64_t v64 = v23;
      uint64_t v61 = v26;
      uint64_t v62 = v25;
      uint64_t v59 = v28;
      uint64_t v60 = v27;
      uint64_t v58 = v29;
      sub_1B29C64D0(v66[0], v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v21, v33, v34);
      uint64_t v36 = v68;
      sub_1B2DF8F70(v66, v52, v55, v53, v56, v54);
      uint64_t v68 = v36;
      if (v36) {
        break;
      }
      sub_1B2A34B34(v35, v64, v63, v62, v61, v60, v59, v58, v30, v31, v32, v21, v33, v34);
      uint64_t v37 = v49;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v22, 1, v49) == 1)
      {
        sub_1B2DFAAF4(v22, (uint64_t *)&unk_1EB7D9590);
        uint64_t v21 = v65;
      }
      else
      {
        uint64_t v38 = *v48;
        uint64_t v39 = v47;
        (*v48)(v47, v22, v37);
        v38(v51, (uint64_t)v39, v37);
        uint64_t v21 = v65;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_1B29BA018(0, *(void *)(v21 + 16) + 1, 1, v21);
        }
        unint64_t v41 = *(void *)(v21 + 16);
        unint64_t v40 = *(void *)(v21 + 24);
        uint64_t v42 = v46;
        if (v41 >= v40 >> 1)
        {
          uint64_t v43 = sub_1B29BA018(v40 > 1, v41 + 1, 1, v21);
          uint64_t v42 = v46;
          uint64_t v21 = v43;
        }
        *(void *)(v21 + 16) = v41 + 1;
        v38((char *)(v21+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v41), (uint64_t)v51, v37);
      }
      v20 += 112;
      uint64_t v19 = v57 - 1;
      if (v57 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    sub_1B2A34B34(v35, v64, v63, v62, v61, v60, v59, v58, v30, v31, v32, v21, v33, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v21;
}

uint64_t sub_1B2DF4CC0(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v47 = a1;
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B2E80BE8();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v46 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v42 = (char *)v40 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v45 = v8;
  uint64_t v60 = v4;
  uint64_t v41 = v12;
  uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  swift_bridgeObjectRetain();
  v40[1] = a3;
  uint64_t v15 = a3 + 72;
  uint64_t v48 = MEMORY[0x1E4FBC860];
  uint64_t v44 = v9;
  uint64_t v16 = (uint64_t)v45;
  while (1)
  {
    uint64_t v49 = v14;
    uint64_t v17 = *(void *)(v15 - 32);
    uint64_t v18 = *(void *)(v15 - 24);
    uint64_t v19 = *(void *)(v15 - 16);
    uint64_t v20 = *(void *)(v15 - 8);
    uint64_t v21 = *(void *)v15;
    uint64_t v22 = *(void *)(v15 + 8);
    uint64_t v23 = *(void *)(v15 + 16);
    uint64_t v24 = *(void *)(v15 + 24);
    uint64_t v25 = *(void *)(v15 + 32);
    uint64_t v26 = *(void *)(v15 + 40);
    uint64_t v27 = *(void *)(v15 + 48);
    uint64_t v28 = *(void *)(v15 + 56);
    unsigned __int8 v29 = *(unsigned char *)(v15 + 64);
    v58[0] = *(void *)(v15 - 40);
    v58[1] = v17;
    void v58[2] = v18;
    v58[3] = v19;
    v58[4] = v20;
    v58[5] = v21;
    v58[6] = v22;
    v58[7] = v23;
    v58[8] = v24;
    v58[9] = v25;
    v58[10] = v26;
    v58[11] = v27;
    v58[12] = v28;
    unsigned __int8 v59 = v29;
    uint64_t v56 = v17;
    uint64_t v57 = v58[0];
    uint64_t v54 = v19;
    uint64_t v55 = v18;
    uint64_t v52 = v21;
    uint64_t v53 = v20;
    uint64_t v51 = v22;
    uint64_t v50 = v23;
    sub_1B29C64D0(v58[0], v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
    uint64_t v30 = v60;
    v47(v58);
    uint64_t v60 = v30;
    if (v30) {
      break;
    }
    sub_1B2A34B34(v57, v56, v55, v54, v53, v52, v51, v50, v24, v25, v26, v27, v28, v29);
    uint64_t v31 = v44;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v16, 1, v44) == 1)
    {
      sub_1B2DFAAF4(v16, (uint64_t *)&unk_1EB7D9590);
    }
    else
    {
      uint64_t v32 = *v43;
      uint64_t v33 = v42;
      (*v43)(v42, v16, v31);
      v32(v46, (uint64_t)v33, v31);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v48 = sub_1B29BA018(0, *(void *)(v48 + 16) + 1, 1, v48);
      }
      unint64_t v35 = *(void *)(v48 + 16);
      unint64_t v34 = *(void *)(v48 + 24);
      uint64_t v36 = v41;
      if (v35 >= v34 >> 1)
      {
        uint64_t v38 = sub_1B29BA018(v34 > 1, v35 + 1, 1, v48);
        uint64_t v36 = v41;
        uint64_t v48 = v38;
      }
      uint64_t v37 = v48;
      *(void *)(v48 + 16) = v35 + 1;
      v32((char *)(v37+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v35), (uint64_t)v46, v31);
    }
    v15 += 112;
    uint64_t v14 = v49 - 1;
    if (v49 == 1)
    {
      swift_bridgeObjectRelease();
      return v48;
    }
  }
  sub_1B2A34B34(v57, v56, v55, v54, v53, v52, v51, v50, v24, v25, v26, v27, v28, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t sub_1B2DF5114(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5)
{
  uint64_t v36 = a2;
  uint64_t v8 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B2E80BE8();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v42 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v38 = (char *)&v34 - v15;
  uint64_t v39 = v14;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v44 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  uint64_t v19 = v18 & v16;
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v41 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  uint64_t v43 = MEMORY[0x1E4FBC860];
  int64_t v37 = v20;
  int v45 = a5;
  while (v19)
  {
    v19 &= v19 - 1;
LABEL_22:
    char v47 = a4;
    char v46 = a5;
    swift_bridgeObjectRetain();
    TriplesQuery.Clause.FullTextSearchClause.matchExpression(column:searchType:text:)();
    swift_bridgeObjectRelease();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v11) == 1)
    {
      uint64_t result = sub_1B2DFAAF4((uint64_t)v10, (uint64_t *)&unk_1EB7D9590);
    }
    else
    {
      uint64_t v26 = *v41;
      uint64_t v27 = v38;
      (*v41)(v38, v10, v11);
      unint64_t v40 = v26;
      v26(v42, v27, v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v43 = sub_1B29BA018(0, *(void *)(v43 + 16) + 1, 1, v43);
      }
      unint64_t v29 = *(void *)(v43 + 16);
      unint64_t v28 = *(void *)(v43 + 24);
      unint64_t v30 = v29 + 1;
      int64_t v20 = v37;
      LOBYTE(a5) = v45;
      if (v29 >= v28 >> 1)
      {
        unint64_t v35 = v29 + 1;
        uint64_t v33 = sub_1B29BA018(v28 > 1, v29 + 1, 1, v43);
        unint64_t v30 = v35;
        uint64_t v43 = v33;
      }
      uint64_t v31 = v42;
      uint64_t v32 = v43;
      *(void *)(v43 + 16) = v30;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v40)(v32+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v29, v31, v11);
    }
  }
  int64_t v23 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v23 >= v20) {
    goto LABEL_29;
  }
  uint64_t v24 = *(void *)(v44 + 8 * v23);
  ++v22;
  if (v24) {
    goto LABEL_21;
  }
  int64_t v22 = v23 + 1;
  if (v23 + 1 >= v20) {
    goto LABEL_29;
  }
  uint64_t v24 = *(void *)(v44 + 8 * v22);
  if (v24) {
    goto LABEL_21;
  }
  int64_t v22 = v23 + 2;
  if (v23 + 2 >= v20) {
    goto LABEL_29;
  }
  uint64_t v24 = *(void *)(v44 + 8 * v22);
  if (v24) {
    goto LABEL_21;
  }
  int64_t v22 = v23 + 3;
  if (v23 + 3 >= v20) {
    goto LABEL_29;
  }
  uint64_t v24 = *(void *)(v44 + 8 * v22);
  if (v24)
  {
LABEL_21:
    uint64_t v19 = (v24 - 1) & v24;
    goto LABEL_22;
  }
  int64_t v25 = v23 + 4;
  if (v25 >= v20)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    swift_release();
    return v43;
  }
  uint64_t v24 = *(void *)(v44 + 8 * v25);
  if (v24)
  {
    int64_t v22 = v25;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v22 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v22 >= v20) {
      goto LABEL_29;
    }
    uint64_t v24 = *(void *)(v44 + 8 * v22);
    ++v25;
    if (v24) {
      goto LABEL_21;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1B2DF54F8(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = (void *)(*(void *)(a3 + 48) + 16 * i);
    uint64_t v19 = v18[1];
    v20[0] = *v18;
    v20[1] = v19;
    swift_bridgeObjectRetain();
    a1(v20);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

IntelligencePlatform::TriplesQuerySQLConfig __swiftcall TriplesQuerySQLConfig.init(tableName:ftsTableName:)(Swift::String tableName, Swift::String_optional ftsTableName)
{
  v2->value = tableName;
  v2[1] = ftsTableName;
  result.ftsTableName = ftsTableName;
  result.tableName = tableName;
  return result;
}

uint64_t TriplesQuery.graphIdentifierSQLExpression(config:)(__n128 *a1)
{
  return sub_1B2DF56E8(a1);
}

uint64_t TriplesQuery.sqlExpression(config:)(__n128 *a1)
{
  return sub_1B2DF56E8(a1);
}

uint64_t sub_1B2DF56E8(__n128 *a1)
{
  __n128 v1 = sub_1B299BDC4(a1);
  return v2(v1);
}

uint64_t TriplesQuery.Clause.sqlExpression(config:)(__n128 *a1)
{
  return sub_1B2DF5748(a1);
}

uint64_t TriplesQuery.Clause.graphIdentifierSQLExpression(config:)(__n128 *a1)
{
  return sub_1B2DF5748(a1);
}

uint64_t sub_1B2DF5748(__n128 *a1)
{
  __n128 v1 = sub_1B299BDC4(a1);
  return v2(v1);
}

void TriplesQuery.Clause.Impl.sqlExpression(config:)()
{
  sub_1B2E81418();
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  uint64_t v2 = sub_1B2DFAD28();
  switch(v9)
  {
    case 1:
      sub_1B2DFAC90(v2, *(void *)(v0 + 64), v3, v4, v5, v6);
      TriplesQuery.Clause.ContainsClause.sqlExpression(config:)();
      break;
    case 2:
      sub_1B2DFB01C(v7, v8);
      break;
    case 3:
      sub_1B2DFAFF0(v2, v8);
      break;
    case 4:
      sub_1B2DFAFC4(v2);
      break;
    case 5:
      sub_1B2DFAF98(v2, v8);
      break;
    case 6:
      MEMORY[0x1B3EAFBB0](49, 0xE100000000000000);
      sub_1B2E813D8();
      uint64_t v10 = sub_1B2DFB274();
      v11(v10);
      break;
    default:
      sub_1B2DFB198(v2, v8);
      TriplesQuery.Clause.AggregateClause.sqlExpression(config:)();
      break;
  }
}

void TriplesQuery.Clause.Impl.graphIdentifierSQLExpression(config:)()
{
  sub_1B2E81418();
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  uint64_t v2 = sub_1B2DFAD28();
  switch(v9)
  {
    case 1:
      sub_1B2DFAC90(v2, *(void *)(v0 + 64), v3, v4, v5, v6);
      sub_1B2DF8354();
      break;
    case 2:
      sub_1B2DFB01C(v7, v8);
      break;
    case 3:
      sub_1B2DFAFF0(v2, v8);
      break;
    case 4:
      sub_1B2DFAFC4(v2);
      break;
    case 5:
      sub_1B2DFAF98(v2, v8);
      break;
    case 6:
      MEMORY[0x1B3EAFBB0](49, 0xE100000000000000);
      sub_1B2E813D8();
      uint64_t v10 = sub_1B2DFB274();
      v11(v10);
      break;
    default:
      sub_1B2DFB198(v2, v8);
      sub_1B2DFA57C();
      break;
  }
}

void TriplesQuery.Clause.AggregateClause.sqlExpression(config:)()
{
}

void TriplesQuery.Clause.ContainsClause.sqlExpression(config:)()
{
  sub_1B299B720();
  uint64_t v75 = v1;
  uint64_t v76 = sub_1B2E80BD8();
  sub_1B299D278();
  uint64_t v74 = v2;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = sub_1B2DFAF48(v4, v66[0]);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B2999940();
  sub_1B299B810();
  MEMORY[0x1F4188790](v7);
  uint64_t v71 = (char *)v66 - v8;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v9);
  sub_1B299B810();
  MEMORY[0x1F4188790](v10);
  uint64_t v69 = (char *)v66 - v11;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v12);
  sub_1B299B810();
  MEMORY[0x1F4188790](v13);
  sub_1B299B810();
  MEMORY[0x1F4188790](v14);
  sub_1B2DFB1C4();
  MEMORY[0x1F4188790](v15);
  sub_1B2DFB1B0();
  MEMORY[0x1F4188790](v16);
  sub_1B2DFAF74();
  MEMORY[0x1F4188790](v17);
  uint64_t v18 = *(void *)(v0 + 8);
  int v67 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v72 = *(void *)(v0 + 24);
  char v19 = *(unsigned char *)(v0 + 32);
  uint64_t v20 = *(void *)(v0 + 40);
  int v68 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v77 = *(void *)(v0 + 56);
  int v70 = *(unsigned __int8 *)(v0 + 64);
  uint64_t v73 = *(void *)(v0 + 72);
  if (v18)
  {
    if (*(unsigned char *)v0)
    {
      uint64_t v81 = v18;
      uint64_t v83 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v21 = sub_1B2DF22A4();
      uint64_t v79 = (ValueMetadata *)sub_1B2DFB308(v21);
      sub_1B2DFB078(MEMORY[0x1E4F62E90]);
      sub_1B2999E64();
      uint64_t v83 = (ValueMetadata *)v5;
      sub_1B2B497C4(MEMORY[0x1E4F62D00]);
      sub_1B29A3EB4(&qword_1EB7E4A80);
      sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
      sub_1B2E82648();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v78);
      sub_1B2E810A8();
      uint64_t v22 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v82);
      uint64_t v25 = sub_1B2DFACF4(v22, v23, v24, MEMORY[0x1E4FBC860]);
      unint64_t v27 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      if (v27 >= v26 >> 1) {
        uint64_t v25 = sub_1B2DFAC50(v26 > 1, v27 + 1);
      }
    }
    else
    {
      uint64_t v81 = v18;
      uint64_t v79 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v29 = sub_1B2DF22A4();
      uint64_t v83 = (ValueMetadata *)sub_1B2DFB288(v29);
      sub_1B2B497C4(MEMORY[0x1E4F62E90]);
      sub_1B2DFAD10();
      sub_1B29A3EB4(&qword_1EB7E4A80);
      sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
      sub_1B299B6C4();
      sub_1B2E82648();
      uint64_t v30 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v82);
      uint64_t v25 = sub_1B2DFACF4(v30, v31, v32, MEMORY[0x1E4FBC860]);
      unint64_t v34 = *(void *)(v25 + 16);
      unint64_t v33 = *(void *)(v25 + 24);
      if (v34 >= v33 >> 1) {
        uint64_t v25 = sub_1B2DFAC50(v33 > 1, v34 + 1);
      }
    }
    sub_1B2DFAF0C();
    unint64_t v28 = (ValueMetadata *)v5;
    sub_1B29F83D8();
    v35();
  }
  else
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    unint64_t v28 = (ValueMetadata *)v5;
  }
  if (!v20) {
    goto LABEL_23;
  }
  if ((v19 & 1) == 0)
  {
    uint64_t v81 = v20;
    uint64_t v79 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
    unint64_t v80 = sub_1B2DF22A4();
    uint64_t v41 = sub_1B2DFAEF4(5);
    sub_1B2DFB218(v41);
    sub_1B2DFAD10();
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
    sub_1B2DFB170();
    sub_1B2E82648();
    if ((sub_1B2DFAD9C() & 1) == 0) {
      uint64_t v25 = sub_1B299FCF4();
    }
    sub_1B2DFB144();
    if (v39) {
      uint64_t v25 = sub_1B2DFAC50(v42 > 1, (uint64_t)&qword_1EB7E4A80);
    }
    sub_1B299EBB4();
    sub_1B29F83D8();
    v43();
LABEL_23:
    uint64_t v37 = v73;
    goto LABEL_24;
  }
  uint64_t v81 = v20;
  uint64_t v83 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
  unint64_t v84 = sub_1B2DF22A4();
  uint64_t v36 = sub_1B2DFAF30(5);
  sub_1B2DFB25C(v36);
  sub_1B2999E64();
  uint64_t v83 = v28;
  sub_1B2B497C4(MEMORY[0x1E4F62D00]);
  sub_1B29A3EB4(&qword_1EB7E4A80);
  sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
  sub_1B2DFB170();
  sub_1B2E82648();
  sub_1B2DFB0B4();
  sub_1B2E810A8();
  if ((sub_1B2DFAD9C() & 1) == 0) {
    uint64_t v25 = sub_1B299FCF4();
  }
  uint64_t v37 = v73;
  sub_1B2DFB144();
  unint64_t v28 = (ValueMetadata *)v5;
  if (v39) {
    uint64_t v25 = sub_1B2DFAC50(v38 > 1, (uint64_t)&qword_1EB7E4A80);
  }
  sub_1B299EBB4();
  sub_1B29F83D8();
  v40();
LABEL_24:
  if (v72)
  {
    if (v67)
    {
      uint64_t v81 = v72;
      uint64_t v83 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v84 = sub_1B2DF22A4();
      uint64_t v44 = sub_1B2DFAF30(2);
      sub_1B2DFB25C(v44);
      sub_1B2999E64();
      uint64_t v83 = v28;
      int v45 = sub_1B2B497C4(MEMORY[0x1E4F62D00]);
      sub_1B29A3EB4(&qword_1EB7E4A80);
      sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
      sub_1B2E82648();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v78);
      sub_1B2DFB200();
      if ((sub_1B2DFAD9C() & 1) == 0) {
        uint64_t v25 = sub_1B299FCF4();
      }
      sub_1B2DFAB94();
      if (v39) {
        uint64_t v25 = sub_1B2DFAC50(v46 > 1, (uint64_t)v45);
      }
      sub_1B2DFAE48();
    }
    else
    {
      uint64_t v81 = v72;
      uint64_t v79 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v80 = sub_1B2DF22A4();
      uint64_t v47 = sub_1B2DFAEF4(2);
      sub_1B2DFB218(v47);
      sub_1B2DFAD10();
      sub_1B29A3EB4(&qword_1EB7E4A80);
      sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
      sub_1B299B6C4();
      sub_1B2E82648();
      if ((sub_1B2DFAD9C() & 1) == 0) {
        uint64_t v25 = sub_1B299FCF4();
      }
      sub_1B2DFB144();
      if (v39) {
        uint64_t v25 = sub_1B2DFAC50(v48 > 1, (uint64_t)&qword_1EB7E4A80);
      }
      sub_1B299EBB4();
    }
    sub_1B29F83D8();
    v49();
  }
  if (v77)
  {
    if (v68)
    {
      uint64_t v81 = v77;
      uint64_t v83 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v84 = sub_1B2DF22A4();
      uint64_t v50 = sub_1B2DFAF30(3);
      sub_1B2DFB25C(v50);
      sub_1B2999E64();
      uint64_t v83 = v28;
      uint64_t v51 = sub_1B2B497C4(MEMORY[0x1E4F62D00]);
      sub_1B29A3EB4(&qword_1EB7E4A80);
      sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
      sub_1B2DFB058();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v78);
      sub_1B2DFB200();
      if ((sub_1B2DFAD9C() & 1) == 0) {
        uint64_t v25 = sub_1B299FCF4();
      }
      sub_1B2DFAB94();
      if (v39) {
        uint64_t v25 = sub_1B2DFAC50(v52 > 1, (uint64_t)v51);
      }
      sub_1B2DFAE48();
    }
    else
    {
      uint64_t v81 = v77;
      uint64_t v79 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v80 = sub_1B2DF22A4();
      uint64_t v53 = sub_1B2DFAEF4(3);
      sub_1B2DFB218(v53);
      sub_1B2DFAD10();
      sub_1B29A3EB4(&qword_1EB7E4A80);
      sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
      sub_1B2DFB2F4();
      sub_1B2E82648();
      if ((sub_1B2DFAD9C() & 1) == 0) {
        uint64_t v25 = sub_1B299FCF4();
      }
      sub_1B2DFAB94();
      if (v39) {
        uint64_t v25 = sub_1B2DFAC50(v54 > 1, (uint64_t)&qword_1EB7E4A80);
      }
      *(void *)(v25 + 16) = &qword_1EB7E4A80;
    }
    sub_1B29F83D8();
    v55();
  }
  if (v37)
  {
    if (v70)
    {
      uint64_t v81 = v37;
      uint64_t v83 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v84 = sub_1B2DF22A4();
      uint64_t v56 = sub_1B2DFAF30(4);
      sub_1B2DFB25C(v56);
      sub_1B2999E64();
      uint64_t v83 = v28;
      uint64_t v57 = sub_1B2B497C4(MEMORY[0x1E4F62D00]);
      uint64_t v58 = sub_1B29A3EB4(&qword_1EB7E4A80);
      sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
      sub_1B2DFB058();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v78);
      sub_1B2DFB200();
      if ((sub_1B2DFAD9C() & 1) == 0) {
        uint64_t v25 = sub_1B299FCF4();
      }
      sub_1B2DFAB94();
      if (v39) {
        uint64_t v25 = sub_1B2DFAC50(v59 > 1, (uint64_t)v57);
      }
      unint64_t v60 = sub_1B2DFAED0();
      uint64_t v62 = (char *)v58;
    }
    else
    {
      uint64_t v81 = v37;
      uint64_t v79 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v80 = sub_1B2DF22A4();
      uint64_t v63 = sub_1B2DFAEF4(4);
      sub_1B2DFB218(v63);
      sub_1B2DFAD10();
      sub_1B29A3EB4(&qword_1EB7E4A80);
      sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
      sub_1B2DFB2D4();
      if ((sub_1B2DFAD9C() & 1) == 0) {
        uint64_t v25 = sub_1B299FCF4();
      }
      sub_1B2DFAB94();
      if (v39) {
        uint64_t v25 = sub_1B2DFAC50(v64 > 1, (uint64_t)&qword_1EB7E4A80);
      }
      unint64_t v60 = sub_1B2DFAED0();
      uint64_t v62 = v71;
    }
    v61(v60, v62, v28);
  }
  v82[0] = v25;
  sub_1B2E80BC8();
  sub_1B29A3EB4(&qword_1EB7E4A70);
  sub_1B29D22C4(&qword_1EB7E4A78, &qword_1EB7E4A70);
  sub_1B2E82658();
  sub_1B299B798();
  v65();
  swift_bridgeObjectRelease();
  sub_1B299B738();
}

void TriplesQuery.Clause.MatchClause.sqlExpression(config:)()
{
  sub_1B299B720();
  uint64_t v107 = v5;
  uint64_t v124 = v6;
  uint64_t v7 = sub_1B2E81028();
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  uint64_t v127 = v9;
  uint64_t v112 = sub_1B2E81418();
  sub_1B299D278();
  uint64_t v111 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1B2999940();
  sub_1B299B810();
  MEMORY[0x1F4188790](v12);
  uint64_t v108 = (char *)v104 - v13;
  uint64_t v120 = sub_1B2E80BD8();
  sub_1B299D278();
  uint64_t v119 = v14;
  MEMORY[0x1F4188790](v15);
  sub_1B299B6D0();
  uint64_t v123 = v16;
  uint64_t v128 = sub_1B2E81508();
  sub_1B299D278();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  sub_1B29A0658();
  uint64_t v118 = sub_1B2E80BE8();
  sub_1B299D278();
  uint64_t v122 = v20;
  MEMORY[0x1F4188790](v21);
  sub_1B2999940();
  sub_1B299B810();
  MEMORY[0x1F4188790](v22);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v23);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v24);
  sub_1B299B810();
  MEMORY[0x1F4188790](v25);
  sub_1B299B810();
  MEMORY[0x1F4188790](v26);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v27);
  sub_1B299B810();
  MEMORY[0x1F4188790](v28);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v29);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v30);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v31);
  sub_1B2C390F4();
  MEMORY[0x1F4188790](v32);
  sub_1B2DFB1D8();
  MEMORY[0x1F4188790](v33);
  sub_1B2DFB154();
  MEMORY[0x1F4188790](v34);
  sub_1B2DFAF74();
  MEMORY[0x1F4188790](v35);
  uint64_t v36 = *v1;
  uint64_t v37 = *((void *)v1 + 1);
  int v114 = v1[24];
  uint64_t v38 = *((void *)v1 + 4);
  int v113 = v1[40];
  uint64_t v39 = *((void *)v1 + 6);
  int v115 = v1[56];
  uint64_t v125 = *((void *)v1 + 8);
  int v116 = v1[72];
  uint64_t v126 = *((void *)v1 + 10);
  int v110 = v1[88];
  uint64_t v109 = *((void *)v1 + 12);
  int v121 = v1[104];
  if (v37)
  {
    uint64_t v117 = v39;
    if (v36)
    {
      uint64_t v106 = v38;
      uint64_t v134 = v37;
      uint64_t v136 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v137 = sub_1B2DF22A4();
      LOBYTE(v135[0]) = 1;
      uint64_t v132 = (ValueMetadata *)v128;
      sub_1B2DFB078(MEMORY[0x1E4F62E90]);
      sub_1B2999E64();
      uint64_t v40 = v118;
      uint64_t v136 = (ValueMetadata *)v118;
      sub_1B2B497C4(MEMORY[0x1E4F62D00]);
      sub_1B29A3EB4(&qword_1EB7E2BD0);
      sub_1B29D22C4((unint64_t *)&qword_1EB7D9510, &qword_1EB7E2BD0);
      sub_1B2A28C38();
      sub_1B2E82648();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v129);
      sub_1B2E810A8();
      uint64_t v41 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v135);
      uint64_t v44 = sub_1B2DFACF4(v41, v42, v43, MEMORY[0x1E4FBC860]);
      uint64_t v45 = *(void *)(v44 + 16);
      sub_1B2DFAB94();
      uint64_t v47 = v122;
      if (v48) {
        uint64_t v44 = sub_1B29A23D8(v46);
      }
      uint64_t v49 = v120;
      sub_1B29A3590();
      sub_1B29F83D8();
      v50();
      uint64_t v3 = v119;
      uint64_t v38 = v106;
      uint64_t v36 = v40;
    }
    else
    {
      uint64_t v134 = v37;
      uint64_t v132 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v133 = sub_1B2DF22A4();
      char v129 = 1;
      uint64_t v136 = (ValueMetadata *)v128;
      sub_1B2B497C4(MEMORY[0x1E4F62E90]);
      sub_1B2DFAD10();
      sub_1B29A3EB4(&qword_1EB7E2BD0);
      sub_1B29D22C4((unint64_t *)&qword_1EB7D9510, &qword_1EB7E2BD0);
      sub_1B2A28C38();
      sub_1B2DFB170();
      sub_1B2E82648();
      uint64_t v67 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v135);
      uint64_t v44 = sub_1B2DFACF4(v67, v68, v69, MEMORY[0x1E4FBC860]);
      uint64_t v45 = *(void *)(v44 + 16);
      sub_1B2DFAB94();
      uint64_t v47 = v122;
      if (v48) {
        uint64_t v44 = sub_1B29A23D8(v70);
      }
      sub_1B2DFB1EC();
      sub_1B29A3590();
      sub_1B29F83D8();
      v71();
      uint64_t v49 = v120;
    }
  }
  else
  {
    uint64_t v105 = v4;
    v104[1] = v18;
    uint64_t v45 = *((void *)v1 + 2);
    if (!v45)
    {
      uint64_t v44 = MEMORY[0x1E4FBC860];
      uint64_t v49 = v120;
      sub_1B2DFB1EC();
      uint64_t v47 = v122;
      if (!v72) {
        goto LABEL_32;
      }
      goto LABEL_21;
    }
    uint64_t v117 = v39;
    uint64_t v106 = v38;
    uint64_t v51 = *v107;
    uint64_t v52 = v107[1];
    uint64_t v53 = v107[2];
    uint64_t v107 = (void *)v107[3];
    uint64_t v136 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
    unint64_t v137 = sub_1B2DF22A4();
    LOBYTE(v135[0]) = 1;
    uint64_t v54 = v105;
    uint64_t v55 = sub_1B2E81528();
    MEMORY[0x1F4188790](v55);
    v104[-6] = v51;
    v104[-5] = v52;
    uint64_t v56 = v107;
    v104[-4] = v53;
    v104[-3] = v56;
    v104[-2] = v54;
    v135[0] = sub_1B2DF4CC0((void (*)(uint64_t *))sub_1B2DFA988, (uint64_t)&v104[-8], v45);
    uint64_t v57 = v123;
    sub_1B2E80BB8();
    sub_1B29A3EB4(&qword_1EB7E4A70);
    sub_1B29D22C4(&qword_1EB7E4A78, &qword_1EB7E4A70);
    unint64_t v58 = MEMORY[0x1E4F62D00];
    sub_1B2E82658();
    uint64_t v3 = v119;
    uint64_t v49 = v120;
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v57, v120);
    swift_bridgeObjectRelease();
    if (v36)
    {
      uint64_t v36 = v118;
      uint64_t v136 = (ValueMetadata *)v118;
      unint64_t v137 = v58;
      sub_1B29D1C70(v135);
      sub_1B29A080C();
      v59();
      sub_1B2E810A8();
      uint64_t v60 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v135);
      uint64_t v44 = sub_1B2DFACF4(v60, v61, v62, MEMORY[0x1E4FBC860]);
      unint64_t v64 = *(void *)(v44 + 16);
      unint64_t v63 = *(void *)(v44 + 24);
      if (v64 >= v63 >> 1) {
        uint64_t v44 = sub_1B29BA018(v63 > 1, v64 + 1, 1, v44);
      }
      uint64_t v38 = v106;
      *(void *)(v44 + 16) = v64 + 1;
      uint64_t v45 = v122;
      sub_1B29F83D8();
      v65();
      uint64_t v66 = v2;
      uint64_t v47 = v45;
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v66, v36);
    }
    else
    {
      uint64_t v36 = v118;
      sub_1B29A080C();
      uint64_t v74 = v73();
      uint64_t v44 = sub_1B2DFACF4(v74, v75, v76, MEMORY[0x1E4FBC860]);
      uint64_t v45 = *(void *)(v44 + 16);
      sub_1B2DFAB94();
      if (v48) {
        uint64_t v44 = sub_1B29A23D8(v77);
      }
      uint64_t v38 = v106;
      *(void *)(v44 + 16) = v0;
      uint64_t v78 = v122;
      sub_1B29F83D8();
      v79();
      uint64_t v80 = v2;
      uint64_t v47 = v78;
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v80, v36);
    }
    sub_1B299B798();
    v81();
  }
  uint64_t v72 = v117;
  if (!v117) {
    goto LABEL_32;
  }
LABEL_21:
  if (v113)
  {
    uint64_t v134 = v72;
    uint64_t v136 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
    unint64_t v137 = sub_1B2DF22A4();
    sub_1B2DFB048(5);
    sub_1B2DFB078(MEMORY[0x1E4F62E90]);
    sub_1B2999E64();
    uint64_t v136 = (ValueMetadata *)v36;
    sub_1B2B497C4(MEMORY[0x1E4F62D00]);
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
    sub_1B299B364();
    sub_1B2DFB0B4();
    sub_1B2E810A8();
    if ((sub_1B2DFADC8() & 1) == 0) {
      uint64_t v44 = sub_1B29A107C();
    }
    uint64_t v45 = *(void *)(v44 + 16);
    sub_1B2DFAB94();
    if (v48) {
      uint64_t v44 = sub_1B29A23D8(v82);
    }
  }
  else
  {
    uint64_t v134 = v72;
    uint64_t v132 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
    unint64_t v133 = sub_1B2DF22A4();
    sub_1B2DFAF88(5);
    sub_1B2B497C4(MEMORY[0x1E4F62E90]);
    sub_1B2DFAD10();
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
    sub_1B299B6C4();
    sub_1B2E82648();
    if ((sub_1B2DFADC8() & 1) == 0) {
      uint64_t v44 = sub_1B29A107C();
    }
    uint64_t v45 = *(void *)(v44 + 16);
    sub_1B2DFAB94();
    if (v48) {
      uint64_t v44 = sub_1B29A23D8(v83);
    }
  }
  sub_1B29A3590();
  sub_1B29F83D8();
  v84();
LABEL_32:
  if (v38)
  {
    if (v114)
    {
      uint64_t v134 = v38;
      uint64_t v136 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v137 = sub_1B2DF22A4();
      sub_1B2DFB048(2);
      sub_1B2DFB078(MEMORY[0x1E4F62E90]);
      sub_1B2999E64();
      uint64_t v136 = (ValueMetadata *)v36;
      sub_1B2B497C4(MEMORY[0x1E4F62D00]);
      sub_1B29A3EB4(&qword_1EB7D9500);
      sub_1B29D22C4(&qword_1EB7D9508, &qword_1EB7D9500);
      sub_1B2A7D288();
      sub_1B2DFADF4();
      sub_1B2DFB0B4();
      sub_1B2E810A8();
      if ((sub_1B2DFADC8() & 1) == 0) {
        uint64_t v44 = sub_1B29A107C();
      }
      uint64_t v45 = *(void *)(v44 + 16);
      sub_1B2DFAB94();
      if (v48) {
        uint64_t v44 = sub_1B29A23D8(v85);
      }
    }
    else
    {
      uint64_t v134 = v38;
      uint64_t v132 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v133 = sub_1B2DF22A4();
      sub_1B2DFAF88(2);
      sub_1B2B497C4(MEMORY[0x1E4F62E90]);
      sub_1B2DFAD10();
      sub_1B29A3EB4(&qword_1EB7D9500);
      sub_1B29D22C4(&qword_1EB7D9508, &qword_1EB7D9500);
      sub_1B2A7D288();
      sub_1B299B6C4();
      sub_1B2DFB10C();
      if ((sub_1B2DFADC8() & 1) == 0) {
        uint64_t v44 = sub_1B29A107C();
      }
      uint64_t v45 = *(void *)(v44 + 16);
      sub_1B2DFAB94();
      if (v48) {
        uint64_t v44 = sub_1B29A23D8(v86);
      }
    }
    sub_1B29A3590();
    sub_1B29F83D8();
    v87();
  }
  if (v125)
  {
    if (v115)
    {
      uint64_t v134 = v125;
      uint64_t v136 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v137 = sub_1B2DF22A4();
      sub_1B2DFB048(3);
      sub_1B2DFB078(MEMORY[0x1E4F62E90]);
      sub_1B2999E64();
      uint64_t v136 = (ValueMetadata *)v36;
      sub_1B2B497C4(MEMORY[0x1E4F62D00]);
      sub_1B29A3EB4(&qword_1EB7D87A8);
      sub_1B29D22C4((unint64_t *)&unk_1E9C37A88, &qword_1EB7D87A8);
      sub_1B2D8B84C();
      sub_1B2DFADF4();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v129);
      sub_1B2E810A8();
      if ((sub_1B2DFADC8() & 1) == 0) {
        uint64_t v44 = sub_1B29A107C();
      }
      uint64_t v45 = *(void *)(v44 + 16);
      sub_1B2DFAB94();
      if (v48) {
        uint64_t v44 = sub_1B29A23D8(v88);
      }
    }
    else
    {
      uint64_t v134 = v125;
      uint64_t v132 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v133 = sub_1B2DF22A4();
      sub_1B2DFAF88(3);
      sub_1B2B497C4(MEMORY[0x1E4F62E90]);
      sub_1B2DFAD10();
      sub_1B29A3EB4(&qword_1EB7D87A8);
      sub_1B29D22C4((unint64_t *)&unk_1E9C37A88, &qword_1EB7D87A8);
      sub_1B2D8B84C();
      sub_1B299B6C4();
      sub_1B2DFB10C();
      if ((sub_1B2DFADC8() & 1) == 0) {
        uint64_t v44 = sub_1B29A107C();
      }
      uint64_t v45 = *(void *)(v44 + 16);
      sub_1B2DFAB94();
      if (v48) {
        uint64_t v44 = sub_1B29A23D8(v89);
      }
    }
    sub_1B29A3590();
    sub_1B29F83D8();
    v90();
  }
  if (v126)
  {
    if (v116)
    {
      uint64_t v134 = v126;
      uint64_t v136 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v137 = sub_1B2DF22A4();
      sub_1B2DFB048(4);
      sub_1B2DFB078(MEMORY[0x1E4F62E90]);
      sub_1B2999E64();
      uint64_t v136 = (ValueMetadata *)v36;
      sub_1B2B497C4(MEMORY[0x1E4F62D00]);
      sub_1B29A3EB4(&qword_1EB7D9500);
      sub_1B29D22C4(&qword_1EB7D9508, &qword_1EB7D9500);
      sub_1B2A7D288();
      sub_1B2DFADF4();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v129);
      sub_1B2E810A8();
      if ((sub_1B2DFADC8() & 1) == 0) {
        uint64_t v44 = sub_1B29A107C();
      }
      uint64_t v45 = *(void *)(v44 + 16);
      sub_1B2DFAB94();
      if (v48) {
        uint64_t v44 = sub_1B29A23D8(v91);
      }
    }
    else
    {
      uint64_t v134 = v126;
      uint64_t v132 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v133 = sub_1B2DF22A4();
      sub_1B2DFAF88(4);
      sub_1B2B497C4(MEMORY[0x1E4F62E90]);
      sub_1B2DFAD10();
      sub_1B29A3EB4(&qword_1EB7D9500);
      sub_1B29D22C4(&qword_1EB7D9508, &qword_1EB7D9500);
      sub_1B2A7D288();
      sub_1B299B6C4();
      sub_1B2DFB10C();
      if ((sub_1B2DFADC8() & 1) == 0) {
        uint64_t v44 = sub_1B29A107C();
      }
      uint64_t v45 = *(void *)(v44 + 16);
      sub_1B2DFAB94();
      if (v48) {
        uint64_t v44 = sub_1B29A23D8(v92);
      }
    }
    sub_1B29A3590();
    sub_1B29F83D8();
    v93();
  }
  if ((v121 & 1) == 0)
  {
    sub_1B29A3EB4(&qword_1EB7D98C8);
    uint64_t v94 = sub_1B29A1824();
    uint64_t v95 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v94 + 16) = xmmword_1B2EC00A0;
    uint64_t v96 = MEMORY[0x1E4F62FB8];
    *(void *)(v94 + 56) = v95;
    *(void *)(v94 + 64) = v96;
    *(void *)(v94 + 32) = v109;
    uint64_t v97 = sub_1B2E81008();
    uint64_t v98 = (void (**)(uint64_t, uint64_t))(v111 + 8);
    if (v110)
    {
      sub_1B2DFB0E8(v97, 0x80000001B2EA48B0);
      uint64_t v99 = &v131;
    }
    else
    {
      sub_1B2DFB0E8(v97, 0x80000001B2EA48D0);
      uint64_t v99 = &v130;
    }
    uint64_t v100 = *(v99 - 32);
    sub_1B2E813D8();
    (*v98)(v45, v112);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v44 = sub_1B29A107C();
    }
    uint64_t v101 = *(void *)(v44 + 16);
    sub_1B2DFAB94();
    if (v48) {
      uint64_t v44 = sub_1B29A23D8(v102);
    }
    *(void *)(v44 + 16) = v98;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v47 + 32))(v44+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v101, v100, v36);
  }
  v135[0] = v44;
  uint64_t v103 = v123;
  sub_1B2E80BC8();
  sub_1B29A3EB4(&qword_1EB7E4A70);
  sub_1B29D22C4(&qword_1EB7E4A78, &qword_1EB7E4A70);
  sub_1B2E82658();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v103, v49);
  swift_bridgeObjectRelease();
  sub_1B299B738();
}

void TriplesQuery.Clause.FullTextSearchClause.sqlExpression(config:)()
{
  sub_1B299B720();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1B2E80BD8();
  sub_1B299D278();
  v70[1] = v7;
  v70[2] = v6;
  MEMORY[0x1F4188790](v6);
  sub_1B29A0658();
  uint64_t v78 = sub_1B29A3EB4(&qword_1EB7E2790);
  sub_1B299D278();
  uint64_t v75 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1B2999940();
  uint64_t v71 = v10;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v11);
  sub_1B29A43C0();
  uint64_t v74 = v12;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v13);
  v70[0] = (char *)v70 - v14;
  uint64_t v15 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D9590);
  uint64_t v16 = sub_1B299B0F0(v15);
  MEMORY[0x1F4188790](v16);
  uint64_t v73 = (char *)v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1B29A3EB4(&qword_1E9C37BE8);
  uint64_t v19 = sub_1B299B0F0(v18);
  MEMORY[0x1F4188790](v19);
  sub_1B299B6D0();
  uint64_t v80 = v20;
  sub_1B29A3EB4(&qword_1EB7E2E90);
  sub_1B299D278();
  uint64_t v76 = v22;
  uint64_t v77 = v21;
  MEMORY[0x1F4188790](v21);
  sub_1B299B860();
  sub_1B2DFB154();
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  MEMORY[0x1F4188790](v24);
  uint64_t v81 = (char *)v70 - v26;
  if (!*(void *)(v3 + 24))
  {
    LODWORD(v69) = 0;
    uint64_t v68 = 308;
    sub_1B2E83418();
    __break(1u);
    JUMPOUT(0x1B2DF813CLL);
  }
  uint64_t v72 = v25;
  uint64_t v79 = v5;
  uint64_t v27 = *(void *)v0;
  uint64_t v28 = *(unsigned __int8 *)(v0 + 8);
  switch(v28)
  {
    case 5:
      goto LABEL_4;
    default:
      char v29 = sub_1B2E837A8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v29)
      {
LABEL_4:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v30 = v81;
        sub_1B2E814D8();
        uint64_t v31 = v80;
        uint64_t v32 = v78;
        uint64_t v33 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v80, 1, 1, v78);
        MEMORY[0x1F4188790](v33);
        uint64_t v68 = v31;
        uint64_t v69 = v30;
        swift_bridgeObjectRetain();
        sub_1B2DF54F8((void (*)(void *))sub_1B2DFA9AC, (uint64_t)&v70[-4], v27);
        swift_bridgeObjectRelease();
        int v34 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v31, 1, v32);
        uint64_t v35 = qword_1B2EC0000;
        unint64_t v36 = MEMORY[0x1E4F62E78];
        uint64_t v37 = MEMORY[0x1E4F62E80];
        if (v34)
        {
          uint64_t v38 = MEMORY[0x1E4F62E80];
          uint64_t v39 = sub_1B2E80BE8();
          uint64_t v40 = (uint64_t)v73;
          uint64_t v41 = (uint64_t)v73;
          uint64_t v42 = 1;
        }
        else
        {
          uint64_t v54 = v74;
          uint64_t v53 = v75;
          sub_1B29A080C();
          v55();
          sub_1B29A3EB4(&qword_1EB7D98C0);
          uint64_t v56 = (__n128 *)sub_1B29A1824();
          uint64_t v57 = sub_1B2DFB128(v56, (__n128)xmmword_1B2EC00A0);
          v56[3].n128_u64[1] = v57;
          v56[4].n128_u64[0] = v36;
          sub_1B29D1C70(qword_1B2EC0000);
          sub_1B2DFAC00();
          sub_1B29D22C4(&qword_1EB7D95A8, &qword_1EB7E2790);
          unint64_t v58 = (uint64_t *)v70[0];
          sub_1B2E80FA8();
          swift_bridgeObjectRelease();
          unint64_t v59 = *(void (**)(uint64_t *, uint64_t))(v53 + 8);
          v59(v54, v32);
          uint64_t v84 = v57;
          uint64_t v85 = v37;
          uint64_t v38 = v37;
          sub_1B29D1C70(v83);
          sub_1B2DFAC00();
          uint64_t v31 = v80;
          sub_1B29D22C4(&qword_1EB7D95B0, &qword_1EB7E2790);
          uint64_t v40 = (uint64_t)v73;
          uint64_t v35 = v58;
          sub_1B2E80DA8();
          v59(v58, v32);
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v83);
          uint64_t v39 = sub_1B2E80BE8();
          uint64_t v41 = v40;
          uint64_t v42 = 0;
        }
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v41, v42, 1, v39);
        uint64_t v60 = v77;
        sub_1B29A080C();
        v61();
        sub_1B2E80BE8();
        if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v40, 1, v39) == 1)
        {
          sub_1B29A3EB4(&qword_1EB7D98C0);
          uint64_t v62 = (__n128 *)sub_1B29A1824();
          uint64_t v63 = sub_1B2DFB128(v62, (__n128)xmmword_1B2EC00A0);
          v62[3].n128_u64[1] = v63;
          v62[4].n128_u64[0] = MEMORY[0x1E4F62E78];
          sub_1B29D1C70(v35);
          sub_1B2DFAC00();
          unint64_t v64 = v74;
          sub_1B2E814A8();
          swift_bridgeObjectRelease();
          uint64_t v84 = v63;
          uint64_t v85 = v38;
          sub_1B29D1C70(v83);
          sub_1B2DFAC00();
          sub_1B29D22C4(&qword_1EB7D95B0, &qword_1EB7E2790);
          uint64_t v35 = v64;
          sub_1B2E80DA8();
          uint64_t v31 = v80;
          sub_1B299B798();
          v65();
          uint64_t v66 = sub_1B299B0A8();
          ((void (*)(uint64_t))v35)(v66);
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v83);
          sub_1B2DFAAF4(v40, (uint64_t *)&unk_1EB7D9590);
        }
        else
        {
          uint64_t v67 = sub_1B299B0A8();
          ((void (*)(uint64_t))v35)(v67);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(v79, v40, v39);
        }
        ((void (*)(char *, uint64_t))v35)(v81, v60);
        sub_1B2DFAAF4(v31, &qword_1E9C37BE8);
      }
      else
      {
        sub_1B2E814D8();
        uint64_t v84 = sub_1B2E80BE8();
        uint64_t v85 = MEMORY[0x1E4F62D00];
        sub_1B29D1C70(v83);
        uint64_t v43 = swift_bridgeObjectRetain();
        uint64_t v82 = sub_1B2DF5114(v43, v27, v28, 5, v28);
        sub_1B2E80BB8();
        sub_1B29A3EB4(&qword_1EB7E4A70);
        sub_1B29D22C4(&qword_1EB7E4A78, &qword_1EB7E4A70);
        sub_1B2E82658();
        sub_1B299B798();
        v44();
        swift_bridgeObjectRelease();
        uint64_t v45 = v71;
        sub_1B2E81498();
        sub_1B299B798();
        v46();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v83);
        sub_1B29A3EB4(&qword_1EB7D98C0);
        uint64_t v47 = (__n128 *)sub_1B29A1824();
        uint64_t v48 = sub_1B2DFB128(v47, (__n128)xmmword_1B2EC00A0);
        unint64_t v49 = MEMORY[0x1E4F62E78];
        v47[3].n128_u64[1] = v48;
        v47[4].n128_u64[0] = v49;
        sub_1B29D1C70(v1);
        sub_1B2DFAC00();
        sub_1B29D22C4(&qword_1EB7D95A8, &qword_1EB7E2790);
        uint64_t v50 = v74;
        uint64_t v51 = v78;
        sub_1B2E80FA8();
        swift_bridgeObjectRelease();
        uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
        v52(v45, v51);
        uint64_t v84 = v48;
        uint64_t v85 = MEMORY[0x1E4F62E80];
        sub_1B29D1C70(v83);
        sub_1B2DFAC00();
        sub_1B29D22C4(&qword_1EB7D95B0, &qword_1EB7E2790);
        sub_1B2E80DA8();
        v52((uint64_t)v50, v51);
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v83);
      }
      sub_1B299B738();
      return;
  }
}

uint64_t TriplesQuery.Clause.ComparisonClause.sqlExpression(config:)()
{
  uint64_t v2 = sub_1B2E81508();
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29A0498();
  uint64_t v5 = (uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  if (*v0)
  {
    sub_1B2DFA9C8();
    sub_1B2E81528();
    sub_1B2DFB2C0();
    TriplesQuery.ComparisonType.compare(numeric:_:)();
  }
  else
  {
    sub_1B2DFA9C8();
    sub_1B2E81528();
    double v6 = sub_1B2DFB2C0();
    TriplesQuery.ComparisonType.compare(text:_:)(v6);
  }
  return (*v5)(v1, v2);
}

void TriplesQuery.Clause.JoinClause.sqlExpression(config:)()
{
}

uint64_t TriplesQuery.Clause.AllClause.sqlExpression(config:)()
{
  uint64_t v1 = sub_1B2E81418();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1B29A09B0();
  MEMORY[0x1B3EAFBB0](49, 0xE100000000000000);
  sub_1B2E813D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
}

void sub_1B2DF8354()
{
  sub_1B299B720();
  uint64_t v74 = v1;
  sub_1B2E80BD8();
  sub_1B299D278();
  uint64_t v72 = v3;
  uint64_t v73 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = sub_1B2DFAF48(v4, v63);
  sub_1B299D278();
  uint64_t v70 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1B2999940();
  sub_1B299B810();
  MEMORY[0x1F4188790](v8);
  uint64_t v69 = (char *)&v63 - v9;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v10);
  sub_1B299B810();
  MEMORY[0x1F4188790](v11);
  uint64_t v67 = (char *)&v63 - v12;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v13);
  sub_1B299B810();
  MEMORY[0x1F4188790](v14);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v15);
  sub_1B299B810();
  MEMORY[0x1F4188790](v16);
  sub_1B299B810();
  MEMORY[0x1F4188790](v17);
  sub_1B2DFB1D8();
  MEMORY[0x1F4188790](v18);
  uint64_t v19 = *((void *)v0 + 1);
  int v65 = v0[16];
  uint64_t v20 = *((void *)v0 + 3);
  int v21 = v0[32];
  uint64_t v22 = *((void *)v0 + 5);
  int v66 = v0[48];
  uint64_t v23 = *((void *)v0 + 7);
  int v68 = v0[64];
  uint64_t v71 = *((void *)v0 + 9);
  if (v19)
  {
    HIDWORD(v63) = v21;
    uint64_t v64 = v20;
    char v24 = *v0;
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v26 = sub_1B2DF460C(v25, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))EntityIdentifier.init(_:), (uint64_t (*)(uint64_t))sub_1B29B7148);
    swift_bridgeObjectRelease();
    if (v24)
    {
      uint64_t v78 = v26;
      uint64_t v80 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v27 = sub_1B2DF22A4();
      uint64_t v76 = (ValueMetadata *)sub_1B2DFB308(v27);
      sub_1B2DFB078(MEMORY[0x1E4F62E90]);
      sub_1B2999E64();
      uint64_t v80 = (ValueMetadata *)v5;
      sub_1B2B497C4(MEMORY[0x1E4F62D00]);
      sub_1B29A3EB4(&qword_1E9C38970);
      sub_1B29D22C4((unint64_t *)&qword_1E9C38978, &qword_1E9C38970);
      sub_1B2A28C38();
      sub_1B2DFB170();
      sub_1B2E82648();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v75);
      swift_bridgeObjectRelease();
      sub_1B2E810A8();
      uint64_t v28 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v79);
      sub_1B2DFACF4(v28, v29, v30, MEMORY[0x1E4FBC860]);
      sub_1B2DFB248();
      if (v32) {
        uint64_t v26 = sub_1B2DFAE88(v31);
      }
      sub_1B2DFAC68();
      uint64_t v33 = (ValueMetadata *)v5;
      sub_1B29F83D8();
      v34();
      uint64_t v35 = v23;
    }
    else
    {
      uint64_t v78 = v26;
      uint64_t v76 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v36 = sub_1B2DF22A4();
      uint64_t v80 = (ValueMetadata *)sub_1B2DFB288(v36);
      sub_1B2B497C4(MEMORY[0x1E4F62E90]);
      sub_1B2DFAD10();
      sub_1B29A3EB4(&qword_1E9C38970);
      sub_1B29D22C4((unint64_t *)&qword_1E9C38978, &qword_1E9C38970);
      sub_1B2A28C38();
      sub_1B2DFB170();
      sub_1B2E82648();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v79);
      uint64_t v37 = swift_bridgeObjectRelease();
      sub_1B2DFACF4(v37, v38, v39, MEMORY[0x1E4FBC860]);
      sub_1B2DFB248();
      if (v32) {
        uint64_t v26 = sub_1B2DFAE88(v40);
      }
      uint64_t v35 = v23;
      sub_1B2DFAC68();
      uint64_t v33 = (ValueMetadata *)v5;
      sub_1B29F83D8();
      v41();
    }
    uint64_t v20 = v64;
    LOBYTE(v21) = BYTE4(v63);
  }
  else
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v33 = (ValueMetadata *)v5;
    uint64_t v35 = v23;
  }
  if (!v22)
  {
    unint64_t v43 = MEMORY[0x1E4F62E90];
    if (v20) {
      goto LABEL_32;
    }
LABEL_19:
    if (!v35) {
      goto LABEL_49;
    }
    goto LABEL_20;
  }
  uint64_t v42 = v20;
  if (v21)
  {
    uint64_t v78 = v22;
    uint64_t v80 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
    unint64_t v81 = sub_1B2DF22A4();
    uint64_t v76 = (ValueMetadata *)sub_1B2DFAF30(5);
    unint64_t v43 = MEMORY[0x1E4F62E90];
    unint64_t v77 = MEMORY[0x1E4F62E90];
    sub_1B29D1C70(v75);
    sub_1B2999E64();
    uint64_t v80 = v33;
    sub_1B2B497C4(MEMORY[0x1E4F62D00]);
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
    sub_1B299B364();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v75);
    sub_1B2E810A8();
    if ((sub_1B2DFAE1C() & 1) == 0) {
      uint64_t v26 = sub_1B29A4A9C();
    }
    sub_1B2DFAB94();
    if (v32) {
      uint64_t v26 = sub_1B2DFAB70(v44);
    }
    sub_1B29A5480();
  }
  else
  {
    uint64_t v78 = v22;
    uint64_t v76 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
    unint64_t v77 = sub_1B2DF22A4();
    uint64_t v80 = (ValueMetadata *)sub_1B2DFAEF4(5);
    unint64_t v43 = MEMORY[0x1E4F62E90];
    unint64_t v81 = MEMORY[0x1E4F62E90];
    sub_1B29D1C70(v79);
    sub_1B2DFAD10();
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
    sub_1B299B6C4();
    sub_1B2E82648();
    if ((sub_1B2DFAE1C() & 1) == 0) {
      uint64_t v26 = sub_1B29A4A9C();
    }
    unint64_t v49 = *(void *)(v26 + 24);
    if (*(void *)(v26 + 16) >= v49 >> 1) {
      uint64_t v26 = sub_1B2DFAE88(v49);
    }
    sub_1B2DFAC68();
  }
  sub_1B29F83D8();
  v50();
  uint64_t v20 = v42;
  if (!v42) {
    goto LABEL_19;
  }
LABEL_32:
  if (v65)
  {
    uint64_t v78 = v20;
    uint64_t v80 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
    unint64_t v81 = sub_1B2DF22A4();
    uint64_t v76 = (ValueMetadata *)sub_1B2DFAF30(2);
    unint64_t v77 = v43;
    sub_1B29D1C70(v75);
    sub_1B2999E64();
    uint64_t v80 = v33;
    sub_1B2B497C4(MEMORY[0x1E4F62D00]);
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
    sub_1B299B364();
    sub_1B2DFB0B4();
    sub_1B2E810A8();
    if ((sub_1B2DFAE1C() & 1) == 0) {
      uint64_t v26 = sub_1B29A4A9C();
    }
    sub_1B2DFAB94();
    if (v32) {
      uint64_t v26 = sub_1B2DFAB70(v51);
    }
  }
  else
  {
    uint64_t v78 = v20;
    uint64_t v76 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
    unint64_t v77 = sub_1B2DF22A4();
    uint64_t v80 = (ValueMetadata *)sub_1B2DFAEF4(2);
    unint64_t v81 = v43;
    sub_1B29D1C70(v79);
    sub_1B2DFAD10();
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
    sub_1B299B6C4();
    sub_1B2E82648();
    if ((sub_1B2DFAE1C() & 1) == 0) {
      uint64_t v26 = sub_1B29A4A9C();
    }
    sub_1B2DFAB94();
    if (v32) {
      uint64_t v26 = sub_1B2DFAB70(v54);
    }
  }
  sub_1B29A5480();
  sub_1B29F83D8();
  v55();
  if (!v35)
  {
LABEL_49:
    uint64_t v47 = v71;
    if (!v71) {
      goto LABEL_62;
    }
    goto LABEL_50;
  }
LABEL_20:
  uint64_t v45 = swift_bridgeObjectRetain();
  uint64_t v46 = sub_1B2DF460C(v45, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))RelationshipIdentifier.init(_:), (uint64_t (*)(uint64_t))sub_1B29B9FE4);
  swift_bridgeObjectRelease();
  if (v66)
  {
    uint64_t v78 = v46;
    uint64_t v80 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
    unint64_t v81 = sub_1B2DF22A4();
    uint64_t v76 = (ValueMetadata *)sub_1B2DFAF30(3);
    unint64_t v77 = v43;
    sub_1B29D1C70(v75);
    sub_1B2999E64();
    uint64_t v80 = v33;
    sub_1B2B497C4(MEMORY[0x1E4F62D00]);
    sub_1B29A3EB4(&qword_1E9C44A40);
    sub_1B29D22C4(&qword_1E9C44A48, &qword_1E9C44A40);
    sub_1B2D8B84C();
    sub_1B2E82648();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v75);
    swift_bridgeObjectRelease();
    sub_1B2E810A8();
    if ((sub_1B2DFAE1C() & 1) == 0) {
      uint64_t v26 = sub_1B29A4A9C();
    }
    uint64_t v47 = v71;
    sub_1B2DFAB94();
    if (v32) {
      uint64_t v26 = sub_1B2DFAB70(v48);
    }
  }
  else
  {
    uint64_t v78 = v46;
    uint64_t v76 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
    unint64_t v77 = sub_1B2DF22A4();
    uint64_t v80 = (ValueMetadata *)sub_1B2DFAEF4(3);
    unint64_t v81 = v43;
    sub_1B29D1C70(v79);
    sub_1B2DFAD10();
    sub_1B29A3EB4(&qword_1E9C44A40);
    sub_1B29D22C4(&qword_1E9C44A48, &qword_1E9C44A40);
    sub_1B2D8B84C();
    sub_1B2DFB2F4();
    sub_1B2E82648();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v79);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = sub_1B29A4A9C();
    }
    uint64_t v47 = v71;
    sub_1B2DFAB94();
    if (v32) {
      uint64_t v26 = sub_1B2DFAB70(v52);
    }
  }
  sub_1B29A5480();
  sub_1B29F83D8();
  v53();
  if (v47)
  {
LABEL_50:
    if (v68)
    {
      uint64_t v78 = v47;
      uint64_t v80 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v81 = sub_1B2DF22A4();
      uint64_t v76 = (ValueMetadata *)sub_1B2DFAF30(4);
      unint64_t v77 = v43;
      sub_1B29D1C70(v75);
      sub_1B2999E64();
      uint64_t v80 = v33;
      sub_1B2B497C4(MEMORY[0x1E4F62D00]);
      uint64_t v56 = sub_1B29A3EB4(&qword_1EB7E4A80);
      sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
      sub_1B2DFB058();
      sub_1B2DFB0B4();
      sub_1B2DFB200();
      if ((sub_1B2DFAE1C() & 1) == 0) {
        uint64_t v26 = sub_1B29A4A9C();
      }
      sub_1B2DFAB94();
      if (v32) {
        uint64_t v26 = sub_1B2DFAB70(v57);
      }
      unint64_t v58 = sub_1B2DFAEAC();
      uint64_t v60 = (char *)v56;
    }
    else
    {
      uint64_t v78 = v47;
      uint64_t v76 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v77 = sub_1B2DF22A4();
      uint64_t v80 = (ValueMetadata *)sub_1B2DFAEF4(4);
      unint64_t v81 = v43;
      sub_1B29D1C70(v79);
      sub_1B2DFAD10();
      sub_1B29A3EB4(&qword_1EB7E4A80);
      sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
      sub_1B2DFB2D4();
      if ((sub_1B2DFAE1C() & 1) == 0) {
        uint64_t v26 = sub_1B29A4A9C();
      }
      sub_1B2DFAB94();
      if (v32) {
        uint64_t v26 = sub_1B2DFAB70(v61);
      }
      unint64_t v58 = sub_1B2DFAEAC();
      uint64_t v60 = v69;
    }
    v59(v58, v60, v33);
  }
LABEL_62:
  v79[0] = v26;
  sub_1B2E80BC8();
  sub_1B29A3EB4(&qword_1EB7E4A70);
  sub_1B29D22C4(&qword_1EB7E4A78, &qword_1EB7E4A70);
  sub_1B2E82658();
  sub_1B299B798();
  v62();
  swift_bridgeObjectRelease();
  sub_1B299B738();
}

uint64_t sub_1B2DF8F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v58 = a6;
  uint64_t v55 = a5;
  uint64_t v52 = a4;
  uint64_t v51 = a3;
  uint64_t v61 = a7;
  uint64_t v54 = sub_1B29A3EB4(&qword_1EB7E2E90);
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  unint64_t v83 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1B29A3EB4(&qword_1EB7E2790);
  uint64_t v59 = *(void *)(v60 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v60);
  uint64_t v56 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v57 = (char *)&v43 - v12;
  uint64_t v14 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v50 = *(void *)(a1 + 40);
  uint64_t v49 = *(void *)(a1 + 48);
  uint64_t v48 = *(void *)(a1 + 56);
  uint64_t v47 = *(void *)(a1 + 64);
  uint64_t v46 = *(void *)(a1 + 72);
  uint64_t v45 = *(void *)(a1 + 80);
  uint64_t v44 = *(void *)(a1 + 88);
  unsigned int v18 = *(unsigned __int8 *)(a1 + 104);
  uint64_t v19 = *(void *)(a1 + 96);
  if (((1 << (v18 >> 5)) & 0x5C) != 0)
  {
    uint64_t v43 = v19;
    uint64_t v20 = v17;
    uint64_t v21 = v15;
    uint64_t v22 = v13;
    uint64_t v23 = a2;
    uint64_t v24 = v51;
    swift_bridgeObjectRetain();
    uint64_t v25 = v83;
    sub_1B2E814D8();
    uint64_t v66 = v14;
    uint64_t v67 = v22;
    uint64_t v68 = v21;
    uint64_t v69 = v16;
    uint64_t v70 = v20;
    uint64_t v71 = v50;
    uint64_t v72 = v49;
    uint64_t v73 = v48;
    uint64_t v74 = v47;
    uint64_t v75 = v46;
    uint64_t v76 = v45;
    uint64_t v77 = v44;
    uint64_t v78 = v43;
    char v79 = v18;
    uint64_t v62 = v23;
    uint64_t v63 = v24;
    uint64_t v64 = v52;
    uint64_t v65 = v55;
    uint64_t v55 = sub_1B2E80BE8();
    uint64_t v81 = v55;
    uint64_t v82 = MEMORY[0x1E4F62D00];
    sub_1B29D1C70(&v80);
    TriplesQuery.Clause.Impl.sqlExpression(config:)();
    uint64_t v26 = v56;
    uint64_t v27 = v54;
    sub_1B2E81498();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v25, v27);
  }
  else
  {
    uint64_t v28 = v51;
    swift_bridgeObjectRetain();
    sub_1B2E814D8();
    uint64_t v66 = v14;
    uint64_t v67 = v13;
    uint64_t v68 = v15;
    uint64_t v69 = v16;
    uint64_t v70 = v17;
    uint64_t v71 = v50;
    uint64_t v72 = v49;
    uint64_t v73 = v48;
    uint64_t v74 = v47;
    uint64_t v75 = v46;
    uint64_t v76 = v45;
    uint64_t v77 = v44;
    uint64_t v78 = v19;
    char v79 = v18;
    uint64_t v62 = a2;
    uint64_t v63 = v28;
    uint64_t v64 = v52;
    uint64_t v65 = v55;
    uint64_t v55 = sub_1B2E80BE8();
    uint64_t v81 = v55;
    uint64_t v82 = MEMORY[0x1E4F62D00];
    sub_1B29D1C70(&v80);
    TriplesQuery.Clause.Impl.graphIdentifierSQLExpression(config:)(&v62);
    uint64_t v26 = v56;
    uint64_t v29 = v54;
    uint64_t v30 = v83;
    sub_1B2E81498();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v29);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v80);
  sub_1B29A3EB4(&qword_1EB7D98C0);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1B2EC00A0;
  uint64_t v32 = sub_1B2E81508();
  uint64_t v33 = MEMORY[0x1E4F62E78];
  *(void *)(v31 + 56) = v32;
  *(void *)(v31 + 64) = v33;
  int v34 = sub_1B29D1C70((uint64_t *)(v31 + 32));
  uint64_t v35 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
  uint64_t v36 = v58;
  v35(v34, v58, v32);
  sub_1B29D22C4(&qword_1EB7D95A8, &qword_1EB7E2790);
  uint64_t v37 = v57;
  uint64_t v38 = v60;
  sub_1B2E80FA8();
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v59 + 8);
  v39(v26, v38);
  uint64_t v69 = v32;
  uint64_t v70 = MEMORY[0x1E4F62E80];
  unint64_t v40 = sub_1B29D1C70(&v66);
  v35(v40, v36, v32);
  sub_1B29D22C4(&qword_1EB7D95B0, &qword_1EB7E2790);
  uint64_t v41 = v61;
  sub_1B2E80DA8();
  v39(v37, v38);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v66);
  sub_1B2E80BE8();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v41, 0, 1, v55);
}

void TriplesQuery.Clause.FullTextSearchClause.matchExpression(column:searchType:text:)()
{
  sub_1B299B720();
  uint64_t v77 = v5;
  uint64_t v78 = v6;
  uint64_t v81 = v7;
  uint64_t v82 = v8;
  uint64_t v80 = v9;
  sub_1B2E81508();
  sub_1B299D278();
  uint64_t v75 = v11;
  uint64_t v76 = v10;
  MEMORY[0x1F4188790](v10);
  sub_1B299B6D0();
  uint64_t v74 = v12;
  uint64_t v13 = sub_1B29A3EB4(&qword_1E9C37BC8);
  uint64_t v14 = sub_1B299B0F0(v13);
  MEMORY[0x1F4188790](v14);
  sub_1B299B860();
  uint64_t v17 = v15 - v16;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v72 - v20;
  MEMORY[0x1F4188790](v19);
  sub_1B2C390F4();
  MEMORY[0x1F4188790](v22);
  sub_1B2DFB1B0();
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v72 - v24;
  uint64_t v79 = sub_1B2E80908();
  sub_1B299D278();
  uint64_t v73 = v26;
  MEMORY[0x1F4188790](v27);
  sub_1B299B860();
  uint64_t v30 = v28 - v29;
  MEMORY[0x1F4188790](v31);
  sub_1B2DFB1C4();
  MEMORY[0x1F4188790](v32);
  sub_1B2DFB154();
  MEMORY[0x1F4188790](v33);
  sub_1B2DFAF74();
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v72 - v35;
  switch(*v82)
  {
    case 1:
      char v38 = *v81;
      swift_bridgeObjectRetain();
      sub_1B2E808D8();
      sub_1B2DFB090(v0);
      if (!v39)
      {
        uint64_t v58 = v73;
        sub_1B29F83D8();
        v59();
        uint64_t v84 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
        unint64_t v85 = sub_1B2DF22A4();
        char v83 = v38;
        sub_1B2E81528();
        sub_1B2DFB164();
        sub_1B2DFB2A8();
        uint64_t v60 = sub_1B2DFACD8();
        v61(v60);
        (*(void (**)(uint64_t, char *))(v58 + 8))(v3, v21);
        goto LABEL_20;
      }
      uint64_t v17 = v0;
      goto LABEL_15;
    case 2:
      sub_1B2DFB17C();
      sub_1B2E808F8();
      sub_1B2DFB090((uint64_t)v25);
      if (!v39)
      {
        uint64_t v62 = v73;
        sub_1B29F83D8();
        v63();
        uint64_t v84 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
        unint64_t v64 = sub_1B2DF22A4();
        sub_1B2DFAD78(v64);
        sub_1B2DFB164();
        sub_1B2DFB2A8();
        uint64_t v65 = sub_1B2DFACD8();
        v66(v65);
        (*(void (**)(char *, char *))(v62 + 8))(v36, v21);
        goto LABEL_20;
      }
      uint64_t v17 = (uint64_t)v25;
      goto LABEL_15;
    case 3:
      uint64_t v0 = *v81;
      swift_bridgeObjectRetain();
      sub_1B2E808B8();
      uint64_t v40 = v79;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v17, 1, v79) == 1) {
        goto LABEL_15;
      }
      uint64_t v41 = v73;
      sub_1B29F83D8();
      v42();
      uint64_t v84 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v43 = sub_1B2DF22A4();
      sub_1B2DFAD78(v43);
      sub_1B2DFB164();
      sub_1B2E80EC8();
      sub_1B299B798();
      v44();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v30, v40);
      goto LABEL_20;
    case 4:
      sub_1B2DFB17C();
      sub_1B2E808E8();
      sub_1B2DFB090(v2);
      if (!v39)
      {
        uint64_t v67 = v73;
        sub_1B29F83D8();
        v68();
        uint64_t v84 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
        unint64_t v69 = sub_1B2DF22A4();
        sub_1B2DFAD78(v69);
        sub_1B2DFB164();
        sub_1B2DFB2A8();
        uint64_t v70 = sub_1B2DFACD8();
        v71(v70);
        (*(void (**)(uint64_t, char *))(v67 + 8))(v4, v21);
        goto LABEL_20;
      }
      uint64_t v17 = v2;
      goto LABEL_15;
    case 5:
      sub_1B2E80BE8();
      sub_1B299B738();
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v48, v49, v50, v51);
      return;
    default:
      sub_1B2DFB17C();
      sub_1B2E808C8();
      uint64_t v37 = v79;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v21, 1, v79) == 1)
      {
        uint64_t v17 = (uint64_t)v21;
LABEL_15:
        sub_1B2DFAAF4(v17, &qword_1E9C37BC8);
        uint64_t v45 = sub_1B2E80BE8();
        uint64_t v46 = v80;
        uint64_t v47 = 1;
      }
      else
      {
        uint64_t v53 = v73;
        sub_1B29F83D8();
        v54();
        uint64_t v84 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
        unint64_t v55 = sub_1B2DF22A4();
        sub_1B2DFAD78(v55);
        sub_1B2DFB164();
        sub_1B2DFB2A8();
        uint64_t v56 = sub_1B2DFACD8();
        v57(v56);
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v1, v37);
LABEL_20:
        uint64_t v45 = sub_1B2E80BE8();
        uint64_t v46 = v0;
        uint64_t v47 = 0;
      }
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v46, v47, 1, v45);
      sub_1B299B738();
      return;
  }
}

void TriplesQuery.Clause.FullTextSearchClause.stringSetExpression(column:searchType:textSet:)()
{
  sub_1B299B720();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_1B2E80BD8();
  sub_1B299D278();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  sub_1B299B3C8();
  uint64_t v12 = *(void *)v0;
  uint64_t v13 = *(unsigned __int8 *)(v0 + 8);
  LODWORD(v5) = *v5;
  LOBYTE(v7) = *v7;
  swift_bridgeObjectRetain();
  sub_1B2DF5114(v3, v12, v13, (char)v7, (int)v5);
  sub_1B2E80BB8();
  sub_1B29A3EB4(&qword_1EB7E4A70);
  sub_1B29D22C4(&qword_1EB7E4A78, &qword_1EB7E4A70);
  sub_1B2E82658();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
  swift_bridgeObjectRelease();
  sub_1B299B738();
}

uint64_t sub_1B2DF9C8C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  v29[1] = a3;
  uint64_t v5 = sub_1B2E81028();
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C37BE8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v29 - v12;
  uint64_t v14 = sub_1B29A3EB4(&qword_1EB7E2790);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v29 - v19;
  uint64_t v21 = *a1;
  uint64_t v22 = a1[1];
  uint64_t v30 = a2;
  uint64_t v31 = v21;
  sub_1B2DFAA24(a2, (uint64_t)v13);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v14) == 1)
  {
    sub_1B2DFAAF4((uint64_t)v13, &qword_1E9C37BE8);
    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B29A3EB4(&qword_1EB7D98C8);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1B2EC00A0;
    uint64_t v24 = MEMORY[0x1E4F62F70];
    *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v23 + 64) = v24;
    *(void *)(v23 + 32) = v31;
    *(void *)(v23 + 40) = v22;
    swift_bridgeObjectRetain();
    sub_1B2E81008();
    sub_1B29A3EB4(&qword_1EB7E2E90);
    sub_1B2E81488();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v33);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 0, 1, v14);
    return sub_1B2DFAA8C((uint64_t)v11, v30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B29A3EB4(&qword_1EB7D98C8);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1B2EC00A0;
    uint64_t v27 = MEMORY[0x1E4F62F70];
    *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v26 + 64) = v27;
    *(void *)(v26 + 32) = v31;
    *(void *)(v26 + 40) = v22;
    swift_bridgeObjectRetain();
    sub_1B2E81008();
    sub_1B29D22C4((unint64_t *)&unk_1E9C3C0F0, &qword_1EB7E2790);
    sub_1B2E80D58();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v33);
    uint64_t v28 = *(void (**)(char *, uint64_t))(v15 + 8);
    v28(v20, v14);
    return ((uint64_t (*)(char *, uint64_t))v28)(v18, v14);
  }
}

uint64_t TriplesQuery.ComparisonType.compare(numeric:_:)()
{
  switch(*v0)
  {
    case 1:
      uint64_t v7 = sub_1B2E81508();
      sub_1B2DFB230(v7, MEMORY[0x1E4F62E90], v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
      sub_1B2D20F50();
      sub_1B2DFAE74();
      v8();
      sub_1B2DFAD60();
      sub_1B2E812E8();
      break;
    case 2:
      uint64_t v3 = sub_1B2E81508();
      sub_1B2DFB230(v3, MEMORY[0x1E4F62E90], v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
      sub_1B2D20F50();
      sub_1B2DFAE74();
      v4();
      sub_1B2DFAD60();
      sub_1B2E81098();
      break;
    case 3:
      uint64_t v5 = sub_1B2E81508();
      sub_1B2DFB230(v5, MEMORY[0x1E4F62E90], v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
      sub_1B2D20F50();
      sub_1B2DFAE74();
      v6();
      sub_1B2DFAD60();
      sub_1B2E812F8();
      break;
    default:
      uint64_t v1 = sub_1B2E81508();
      sub_1B2DFB230(v1, MEMORY[0x1E4F62E90], v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
      sub_1B2D20F50();
      sub_1B2DFAE74();
      v2();
      sub_1B2DFAD60();
      sub_1B2E81088();
      break;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v10);
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v15);
}

uint64_t TriplesQuery.ComparisonType.compare(text:_:)(double a1)
{
  uint64_t v4 = sub_1B2E81418();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  uint64_t v8 = sub_1B2E80F98();
  uint64_t v9 = sub_1B299B0F0(v8);
  MEMORY[0x1F4188790](v9);
  sub_1B29A09B0();
  switch(*v1)
  {
    case 2:
    case 3:
      sub_1B2E80F68();
      sub_1B2DFABD0();
      sub_1B2E81508();
      sub_1B2DFAB4C();
      sub_1B2DFABA0();
      sub_1B2DFAB4C();
      sub_1B2DFAC24();
      sub_1B2DFAB4C();
      sub_1B2DFB0D0();
      break;
    default:
      sub_1B2E80F68();
      sub_1B2DFABD0();
      sub_1B2E81508();
      sub_1B2DFAB4C();
      sub_1B2DFABA0();
      sub_1B2DFAB4C();
      sub_1B2DFAC24();
      sub_1B2DFAB4C();
      break;
  }
  sub_1B2E80F58();
  v11[3] = MEMORY[0x1E4FBB3D0];
  v11[4] = MEMORY[0x1E4F62F98];
  *(double *)uint64_t v11 = a1;
  sub_1B2E80F78();
  sub_1B2DFAAF4((uint64_t)v11, &qword_1EB7E3BD0);
  sub_1B2E80F58();
  sub_1B2E813F8();
  sub_1B2E813D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

void sub_1B2DFA57C()
{
  sub_1B299B720();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  v20[0] = v5;
  uint64_t v6 = sub_1B2E80BD8();
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v4;
  uint64_t v13 = v4[1];
  uint64_t v15 = v4[2];
  uint64_t v14 = v4[3];
  char v16 = *v0;
  uint64_t v17 = *((void *)v0 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v2(v17, v12, v13, v15, v14, &v21);
  swift_bridgeObjectRelease();
  uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  v20[1] = v18;
  if (v16) {
    sub_1B2E80BB8();
  }
  else {
    sub_1B2E80BC8();
  }
  sub_1B29A3EB4(&qword_1EB7E4A70);
  sub_1B29D22C4(&qword_1EB7E4A78, &qword_1EB7E4A70);
  sub_1B2E82658();
  (*v19)(v11, v6);
  swift_bridgeObjectRelease();
  sub_1B299B738();
}

void TriplesQuery.Clause.JoinClause.graphIdentifierSQLExpression(config:)()
{
  sub_1B299B720();
  uint64_t v3 = v2;
  uint64_t v23 = v4;
  uint64_t v22 = sub_1B2E80BD8();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1B2E81508();
  sub_1B299D278();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1B299B3C8();
  uint64_t v13 = *v3;
  uint64_t v14 = v3[1];
  uint64_t v15 = v3[2];
  uint64_t v16 = v3[3];
  uint64_t v17 = *(void *)(v0 + 8);
  switch(*(unsigned char *)v0)
  {
    case 1:
      uint64_t v25 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v26 = sub_1B2DF22A4();
      char v18 = 1;
      goto LABEL_7;
    case 2:
      uint64_t v25 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v26 = sub_1B2DF22A4();
      char v18 = 5;
      goto LABEL_7;
    case 3:
      uint64_t v25 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v26 = sub_1B2DF22A4();
      char v18 = 2;
      goto LABEL_7;
    case 4:
      uint64_t v25 = &type metadata for TriplesQuery.Clause.TableCodingKeys;
      unint64_t v26 = sub_1B2DF22A4();
      char v18 = 3;
LABEL_7:
      LOBYTE(v24) = v18;
      sub_1B2E81528();
      break;
    default:
      sub_1B2E81518();
      break;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1B2DF481C(v17, v13, v14, v15, v16, v1);
  swift_bridgeObjectRelease();
  uint64_t v24 = v19;
  sub_1B2E80BC8();
  sub_1B29A3EB4(&qword_1EB7E4A70);
  sub_1B29D22C4(&qword_1EB7E4A78, &qword_1EB7E4A70);
  sub_1B2E82658();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v22);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v21);
  sub_1B299B738();
}

uint64_t sub_1B2DFA988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2DF8F70(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t sub_1B2DFA9AC(uint64_t *a1)
{
  return sub_1B2DF9C8C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1B2DFA9C8()
{
  unint64_t result = qword_1EB7D7580;
  if (!qword_1EB7D7580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D7580);
  }
  return result;
}

ValueMetadata *type metadata accessor for TriplesQuerySQLConfig()
{
  return &type metadata for TriplesQuerySQLConfig;
}

uint64_t sub_1B2DFAA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C37BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2DFAA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C37BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2DFAAF4(uint64_t a1, uint64_t *a2)
{
  sub_1B29A3EB4(a2);
  sub_1B299B798();
  v3();
  return a1;
}

void sub_1B2DFAB4C()
{
  JUMPOUT(0x1B3EAF750);
}

uint64_t sub_1B2DFAB70@<X0>(unint64_t a1@<X8>)
{
  return sub_1B29BA018(a1 > 1, v1, 1, v2);
}

uint64_t sub_1B2DFABA0()
{
  return sub_1B2E80F58();
}

uint64_t sub_1B2DFABD0()
{
  return sub_1B2E80F58();
}

uint64_t sub_1B2DFAC00()
{
  return sub_1B2E81518();
}

uint64_t sub_1B2DFAC24()
{
  return sub_1B2E80F58();
}

uint64_t sub_1B2DFAC50(char a1, uint64_t a2)
{
  return sub_1B29BA018(a1, a2, 1, v2);
}

unint64_t sub_1B2DFAC68()
{
  *(void *)(v3 + 16) = v0;
  return v3
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(void *)(v2 + 72) * v1;
}

uint64_t sub_1B2DFAC90(uint64_t result, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v10 - 160) = result & 1;
  *(void *)(v10 - 152) = v6;
  *(unsigned char *)(v10 - 144) = a6 & 1;
  *(void *)(v10 - 136) = a5;
  *(unsigned char *)(v10 - 128) = a4 & 1;
  *(void *)(v10 - 120) = a3;
  *(unsigned char *)(v10 - 112) = v9 & 1;
  *(void *)(v10 - 104) = v8;
  *(unsigned char *)(v10 - 96) = a2 & 1;
  *(void *)(v10 - 88) = v7;
  return result;
}

uint64_t sub_1B2DFACD8()
{
  return v0;
}

uint64_t sub_1B2DFACF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B29BA018(0, 1, 1, a4);
}

uint64_t sub_1B2DFAD10()
{
  return sub_1B2E81528();
}

uint64_t sub_1B2DFAD28()
{
  return *(void *)v0;
}

uint64_t sub_1B2DFAD78(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(unsigned char *)(v2 - 120) = v1;
  return sub_1B2E81528();
}

uint64_t sub_1B2DFAD9C()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 128);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1B2DFADC8()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 128);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1B2DFADF4()
{
  return sub_1B2E82648();
}

uint64_t sub_1B2DFAE1C()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 128);
  return swift_isUniquelyReferenced_nonNull_native();
}

unint64_t sub_1B2DFAE48()
{
  *(void *)(v3 + 16) = v0;
  return v3
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(void *)(v2 + 72) * v1;
}

uint64_t sub_1B2DFAE88@<X0>(unint64_t a1@<X8>)
{
  return sub_1B29BA018(a1 > 1, v1, 1, v2);
}

unint64_t sub_1B2DFAEAC()
{
  *(void *)(v3 + 16) = v0;
  return v3
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(void *)(v2 + 72) * v1;
}

unint64_t sub_1B2DFAED0()
{
  *(void *)(v3 + 16) = v0;
  return v3
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(void *)(v2 + 72) * v1;
}

uint64_t sub_1B2DFAEF4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 176) = a1;
  return sub_1B2E81508();
}

void sub_1B2DFAF0C()
{
  *(void *)(v1 + 16) = v0;
}

uint64_t sub_1B2DFAF30@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return sub_1B2E81508();
}

uint64_t sub_1B2DFAF48@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_1B2E80BE8();
}

void sub_1B2DFAF88(char a1@<W8>)
{
  *(unsigned char *)(v1 - 176) = a1;
  *(void *)(v1 - 104) = *(void *)(v1 - 192);
}

void sub_1B2DFAF98(char a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v6 - 192) = a1;
  *(void *)(v6 - 184) = v5;
  *(void *)(v6 - 160) = v4;
  *(void *)(v6 - 152) = v3;
  *(void *)(v6 - 144) = v2;
  *(void *)(v6 - 136) = a2;
  TriplesQuery.Clause.JoinClause.graphIdentifierSQLExpression(config:)();
}

uint64_t sub_1B2DFAFC4(__int16 a1)
{
  *(unsigned char *)(v2 - 160) = a1 & 1;
  *(unsigned char *)(v2 - 159) = HIBYTE(a1);
  *(void *)(v2 - 152) = v1;
  return TriplesQuery.Clause.ComparisonClause.sqlExpression(config:)();
}

void sub_1B2DFAFF0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v6 - 192) = a1;
  *(unsigned char *)(v6 - 184) = v5;
  *(void *)(v6 - 160) = v4;
  *(void *)(v6 - 152) = v3;
  *(void *)(v6 - 144) = v2;
  *(void *)(v6 - 136) = a2;
  TriplesQuery.Clause.FullTextSearchClause.sqlExpression(config:)();
}

uint64_t sub_1B2DFB01C@<X0>(char a1@<W6>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v5 - 56) = a1 & 1;
  *(void *)(v5 - 192) = v4;
  *(void *)(v5 - 184) = v3;
  *(void *)(v5 - 176) = v2;
  *(void *)(v5 - 168) = a2;
  return TriplesQuery.Clause.MatchClause.sqlExpression(config:)(v5 - 192);
}

void sub_1B2DFB048(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  *(void *)(v1 - 152) = *(void *)(v1 - 192);
}

uint64_t sub_1B2DFB058()
{
  return sub_1B2E82648();
}

uint64_t *sub_1B2DFB078@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 144) = a1;
  return sub_1B29D1C70((uint64_t *)(v1 - 176));
}

uint64_t sub_1B2DFB090(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, *(void *)(v1 - 152));
}

uint64_t sub_1B2DFB0B4()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 176);
  return v0 - 128;
}

uint64_t sub_1B2DFB0D0()
{
  return 0x4C41455220534120;
}

uint64_t sub_1B2DFB0E8(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F411B188](0xD000000000000012, a2, v2);
}

uint64_t sub_1B2DFB10C()
{
  return sub_1B2E82648();
}

uint64_t sub_1B2DFB128(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_1B2E81508();
}

uint64_t sub_1B2DFB17C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2DFB198@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v6 - 192) = result & 1;
  *(void *)(v6 - 184) = v5;
  *(void *)(v6 - 160) = v4;
  *(void *)(v6 - 152) = v3;
  *(void *)(v6 - 144) = v2;
  *(void *)(v6 - 136) = a2;
  return result;
}

uint64_t sub_1B2DFB200()
{
  return sub_1B2E810A8();
}

uint64_t *sub_1B2DFB218(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 96) = v1;
  return sub_1B29D1C70((uint64_t *)(v2 - 128));
}

uint64_t *sub_1B2DFB230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  a11 = a1;
  a12 = a2;
  return sub_1B29D1C70(&a8);
}

uint64_t *sub_1B2DFB25C(uint64_t a1)
{
  *(void *)(v2 - 152) = a1;
  *(void *)(v2 - 144) = v1;
  return sub_1B29D1C70((uint64_t *)(v2 - 176));
}

uint64_t sub_1B2DFB274()
{
  return v0;
}

uint64_t sub_1B2DFB288(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  *(unsigned char *)(v1 - 176) = 1;
  return sub_1B2E81508();
}

uint64_t sub_1B2DFB2A8()
{
  return sub_1B2E80EC8();
}

double sub_1B2DFB2C0()
{
  return v0;
}

uint64_t sub_1B2DFB2D4()
{
  return sub_1B2E82648();
}

uint64_t sub_1B2DFB2F4()
{
  return v0 - 128;
}

uint64_t sub_1B2DFB308(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  *(unsigned char *)(v1 - 128) = 1;
  return sub_1B2E81508();
}

double static TriplesQuery.compare(column:matchType:value:)@<D0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(void *)a3 = *a1 | ((unint64_t)*a2 << 8);
  *(double *)(a3 + 8) = a4;
  double result = 0.0;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(void *)(a3 + 96) = 0;
  *(unsigned char *)(a3 + 104) = 0x80;
  return result;
}

uint64_t static TriplesQuery.match(subjectMatchType:subjects:predicateMatchType:predicates:objectMatchType:objects:relationshipIdMatchType:relationshipIds:relationshipPredicateMatchType:relationshipPredicates:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1B29A54A8(a1, a2, a3);
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v3;
  *(void *)(v4 + 32) = v7;
  *(void *)(v4 + 40) = v6;
  *(void *)(v4 + 48) = v9;
  *(void *)(v4 + 56) = v8;
  *(void *)(v4 + 64) = v11;
  *(void *)(v4 + 72) = v10;
  *(void *)(v4 + 88) = 0;
  *(void *)(v4 + 96) = 0;
  *(void *)(v4 + 80) = 0;
  *(unsigned char *)(v4 + 104) = 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t vars8;

  sub_1B29A54A8(a1, a2, a3);
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = v4;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v6;
  *(void *)(v3 + 48) = v7;
  *(void *)(v3 + 56) = v8;
  *(void *)(v3 + 64) = v9;
  *(void *)(v3 + 72) = v10;
  *(void *)(v3 + 88) = 0;
  *(void *)(v3 + 96) = 0;
  *(void *)(v3 + 80) = v11;
  *(unsigned char *)(v3 + 104) = 65;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 TriplesQuery.init(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 96);
  char v3 = *(unsigned char *)(a1 + 104);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v5;
  __n128 result = *(__n128 *)(a1 + 64);
  long long v7 = *(_OWORD *)(a1 + 80);
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v7;
  *(void *)(a2 + 96) = v2;
  *(unsigned char *)(a2 + 104) = v3;
  return result;
}

#error "1B2DFB4B4: call analysis failed (funcsize=90)"

#error "1B2DFB6E8: call analysis failed (funcsize=110)"

uint64_t TriplesQueryParameters.init(limit:sorting:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *a3;
  char v5 = *((unsigned char *)a3 + 8);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = a2 & 1;
  *(void *)(a4 + 16) = v4;
  *(unsigned char *)(a4 + 24) = v5;
  return result;
}

IntelligencePlatform::TriplesQuery::FullTextSearchType_optional __swiftcall TriplesQuery.FullTextSearchType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t static TriplesQuery.fullTextSearch(objects:objectSearchType:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a2;
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = v3;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(void *)(a3 + 96) = 0;
  *(unsigned char *)(a3 + 104) = 96;
  return swift_bridgeObjectRetain();
}

uint64_t TriplesQuery.clause.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v11 = *(void *)(v1 + 72);
  uint64_t v12 = *(void *)(v1 + 80);
  uint64_t v13 = *(void *)(v1 + 88);
  uint64_t v14 = *(void *)(v1 + 96);
  unsigned __int8 v15 = *(unsigned char *)(v1 + 104);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = v13;
  *(void *)(a1 + 96) = v14;
  *(unsigned char *)(a1 + 104) = v15;
  return sub_1B29C64D0(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1B2DFB8BC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x657375616C63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2DFB93C()
{
  return 0x657375616C63;
}

uint64_t sub_1B2DFB954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DFB8BC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2DFB980(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFBB78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFB9BC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFBB78();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B29A3EB4(&qword_1EB7D9F80);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299ADB4();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2DFBB78();
  sub_1B2E83A38();
  sub_1B2DEF0A0();
  sub_1B2E836D8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_1B29998C8();
}

unint64_t sub_1B2DFBB78()
{
  unint64_t result = qword_1EB7D9E78;
  if (!qword_1EB7D9E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E78);
  }
  return result;
}

void TriplesQuery.init(from:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C44A50);
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B299B3C8();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DFBB78();
  sub_1B2E83A18();
  if (!v0)
  {
    sub_1B2DEF138();
    sub_1B2E835B8();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
    *(_OWORD *)uint64_t v5 = v10;
    *(_OWORD *)(v5 + 16) = v11;
    *(_OWORD *)(v5 + 32) = v12;
    *(_OWORD *)(v5 + 48) = v13;
    *(_OWORD *)(v5 + 64) = v14;
    *(_OWORD *)(v5 + 80) = v15;
    *(void *)(v5 + 96) = v16;
    *(unsigned char *)(v5 + 104) = v17;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
  sub_1B29998C8();
}

void sub_1B2DFBD08()
{
}

void sub_1B2DFBD20()
{
}

double static TriplesQuery.all()@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 96) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 104) = -64;
  return result;
}

double static TriplesQuery.isA(_:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_1B29A3EB4(&qword_1EB7E34A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
  static EntityPredicate.isA.getter();
  sub_1B2A191EC(inited, v6, v7, v8, v9, v10, v11, v12, 1, 2, v19, v20, v21, v22, v23, v24, v25, v26, v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    vars0,
    vars8);
  uint64_t v14 = v13;
  sub_1B29A3EB4(&qword_1EB7E5B00);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = v18;
  *(void *)(v15 + 32) = v4;
  *(void *)(v15 + 40) = v3;
  swift_bridgeObjectRetain();
  sub_1B2A184AC();
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v17;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 88) = 0u;
  *(unsigned char *)(a2 + 104) = 65;
  return result;
}

uint64_t TriplesQuery.description.getter()
{
  return 0;
}

uint64_t sub_1B2DFBF20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7365686374616DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4D746F4E73656F64 && a2 == 0xEC00000068637461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2DFC028(char a1)
{
  if (a1) {
    return 0x4D746F4E73656F64;
  }
  else {
    return 0x7365686374616DLL;
  }
}

uint64_t sub_1B2DFC068()
{
  return sub_1B2DFC028(*v0);
}

uint64_t sub_1B2DFC070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DFBF20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DFC098(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE388();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFC0D4(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE388();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DFC110(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE3D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFC14C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE3D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DFC188(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE420();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFC1C4(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE420();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.MatchType.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C38180);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29A0CD8(v4, v13);
  sub_1B29A3EB4((uint64_t *)&unk_1E9C38190);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B0C8();
  sub_1B29A3EB4(&qword_1E9C38188);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  char v7 = *v0;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2DFE388();
  sub_1B2DFFC14();
  if (v7)
  {
    sub_1B2DFE3D4();
    sub_1B2DCF0B8();
    sub_1B2ACA25C();
  }
  else
  {
    sub_1B2DFE420();
    sub_1B2DCF0B8();
  }
  sub_1B299B798();
  v10(v8, v9);
  uint64_t v11 = sub_1B2DFFB50();
  v12(v11);
  sub_1B29998C8();
}

void TriplesQuery.MatchType.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C44A60);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299ADB4();
  sub_1B29A3EB4(&qword_1E9C44A68);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B2999928();
  sub_1B29A3EB4(&qword_1E9C44A70);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C((void *)v2, *(void *)(v2 + 24));
  sub_1B2DFE388();
  sub_1B2999E7C();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v6 = sub_1B2DFFB2C();
  if (!*(void *)(v6 + 16) || (uint64_t v7 = sub_1B2DFFA18(), sub_1B29B142C(v7), sub_1B2DFFBA0(), v6))
  {
    sub_1B2E83288();
    swift_allocError();
    uint64_t v9 = v8;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v9 = &type metadata for TriplesQuery.MatchType;
    sub_1B2E834F8();
    sub_1B2DFFAB8();
    uint64_t v10 = sub_1B2DFFBE0();
    v11(v10);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1B299B798();
    v12();
    uint64_t v2 = v0;
LABEL_8:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v2);
    goto LABEL_9;
  }
  if (v2)
  {
    sub_1B2DFE3D4();
    sub_1B2DFFA3C();
    sub_1B2DFFC08();
    sub_1B299B798();
    v13();
    swift_unknownObjectRelease();
    sub_1B2DFFA8C();
    v14();
  }
  else
  {
    sub_1B2DFE420();
    sub_1B2DFFAE4();
    sub_1B2DFFC08();
    sub_1B299B798();
    v15();
    swift_unknownObjectRelease();
    uint64_t v16 = sub_1B2DFFBF4();
    v17(v16);
  }
  MEMORY[0] = v2;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
LABEL_9:
  sub_1B29998C8();
}

void sub_1B2DFC708()
{
}

void sub_1B2DFC720()
{
}

uint64_t TriplesQuery.FullTextSearchType.rawValue.getter()
{
  uint64_t result = 0x6E656B6F54796E61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E656B6F546C6C61;
      break;
    case 2:
      uint64_t result = 0x69666572506C6C61;
      break;
    case 3:
      uint64_t result = 0x657361726870;
      break;
    case 4:
      uint64_t result = 0x6850786966657270;
      break;
    case 5:
      uint64_t result = 0x6E69727473627573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2DFC818()
{
  return sub_1B29AE588(*v0);
}

uint64_t sub_1B2DFC820()
{
  return sub_1B2AA65A4();
}

uint64_t sub_1B2DFC828()
{
  return sub_1B29F9A4C();
}

IntelligencePlatform::TriplesQuery::FullTextSearchType_optional sub_1B2DFC830(Swift::String *a1)
{
  return TriplesQuery.FullTextSearchType.init(rawValue:)(*a1);
}

uint64_t sub_1B2DFC83C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TriplesQuery.FullTextSearchType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2DFC864()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2DFC8C4()
{
  return sub_1B2E82788();
}

uint64_t sub_1B2DFC914()
{
  return sub_1B29AE060();
}

BOOL static TriplesQuery.ComparableColumn.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TriplesQuery.ComparableColumn.hash(into:)()
{
  return sub_1B2E83998();
}

IntelligencePlatform::TriplesQuery::ComparableColumn_optional __swiftcall TriplesQuery.ComparableColumn.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  BOOL v3 = stringValue._countAndFlagsBits == 0x7463656A626FLL && stringValue._object == (void *)0xE600000000000000;
  if (v3
    || (object = stringValue._object, uint64_t countAndFlagsBits = stringValue._countAndFlagsBits, (sub_1B2E837A8() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else if (countAndFlagsBits == 0x6D617473656D6974 && object == (void *)0xE900000000000070)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 1;
  }
  else
  {
    char v9 = sub_1B2E837A8();
    result.value = swift_bridgeObjectRelease();
    if (v9) {
      char v7 = 1;
    }
    else {
      char v7 = 2;
    }
  }
  *uint64_t v2 = v7;
  return result;
}

IntelligencePlatform::TriplesQuery::ComparableColumn_optional __swiftcall TriplesQuery.ComparableColumn.init(intValue:)(Swift::Int intValue)
{
  *uint64_t v1 = 2;
  return (IntelligencePlatform::TriplesQuery::ComparableColumn_optional)intValue;
}

uint64_t sub_1B2DFCA74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2DFCB68(char a1)
{
  if (a1) {
    return 0x6D617473656D6974;
  }
  else {
    return 0x7463656A626FLL;
  }
}

uint64_t sub_1B2DFCBA0()
{
  return sub_1B2DFCB68(*v0);
}

uint64_t sub_1B2DFCBA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DFCA74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DFCBD0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE46C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFCC0C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE46C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DFCC48(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE504();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFCC84(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE504();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DFCCC0(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE4B8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFCCFC(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE4B8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.ComparableColumn.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C44A78);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29A0CD8(v4, v13);
  sub_1B29A3EB4(&qword_1E9C44A80);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B0C8();
  sub_1B29A3EB4(&qword_1E9C44A88);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  char v7 = *v0;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2DFE46C();
  sub_1B2DFFC14();
  if (v7)
  {
    sub_1B2DFE4B8();
    sub_1B2DCF0B8();
    sub_1B2ACA25C();
  }
  else
  {
    sub_1B2DFE504();
    sub_1B2DCF0B8();
  }
  sub_1B299B798();
  v10(v8, v9);
  uint64_t v11 = sub_1B2DFFB50();
  v12(v11);
  sub_1B29998C8();
}

uint64_t _s20IntelligencePlatform12TriplesQueryV9MatchTypeO9hashValueSivg_0()
{
  return sub_1B2E839E8();
}

void TriplesQuery.ComparableColumn.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C44AA8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299ADB4();
  sub_1B29A3EB4(&qword_1E9C44AB0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B2999928();
  sub_1B29A3EB4(&qword_1E9C44AB8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C((void *)v2, *(void *)(v2 + 24));
  sub_1B2DFE46C();
  sub_1B2999E7C();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v6 = sub_1B2DFFB2C();
  if (!*(void *)(v6 + 16) || (uint64_t v7 = sub_1B2DFFA18(), sub_1B29B142C(v7), sub_1B2DFFBA0(), v6))
  {
    sub_1B2E83288();
    swift_allocError();
    uint64_t v9 = v8;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v9 = &type metadata for TriplesQuery.ComparableColumn;
    sub_1B2E834F8();
    sub_1B2DFFAB8();
    uint64_t v10 = sub_1B2DFFBE0();
    v11(v10);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1B299B798();
    v12();
    uint64_t v2 = v0;
LABEL_8:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v2);
    goto LABEL_9;
  }
  if (v2)
  {
    sub_1B2DFE4B8();
    sub_1B2DFFA3C();
    sub_1B2DFFC08();
    sub_1B299B798();
    v13();
    swift_unknownObjectRelease();
    sub_1B2DFFA8C();
    v14();
  }
  else
  {
    sub_1B2DFE504();
    sub_1B2DFFAE4();
    sub_1B2DFFC08();
    sub_1B299B798();
    v15();
    swift_unknownObjectRelease();
    uint64_t v16 = sub_1B2DFFBF4();
    v17(v16);
  }
  MEMORY[0] = v2;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
LABEL_9:
  sub_1B29998C8();
}

uint64_t TriplesQuery.ComparableColumn.intValue.getter()
{
  return 0;
}

uint64_t TriplesQuery.ComparableColumn.stringValue.getter()
{
  if (*v0) {
    return 0x6D617473656D6974;
  }
  else {
    return 0x7463656A626FLL;
  }
}

void sub_1B2DFD2C8()
{
}

void sub_1B2DFD2E0()
{
}

uint64_t sub_1B2DFD2F8(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFA9C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFD334(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFA9C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL static TriplesQuery.ComparisonType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TriplesQuery.ComparisonType.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t sub_1B2DFD3B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5472657461657267 && a2 == 0xEB000000006E6168;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001B2EA4990 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6168547373656CLL && a2 == 0xE800000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x6E6168547373656CLL && a2 == 0xEF6C61757145724FLL)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_1B2DFD590(char a1)
{
  unint64_t result = 0x5472657461657267;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
    case 3:
      unint64_t result = 0x6E6168547373656CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2DFD62C()
{
  return sub_1B2DFD590(*v0);
}

uint64_t sub_1B2DFD634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2DFD3B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2DFD65C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE550();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFD698(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE550();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DFD6D4(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE680();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFD710(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE680();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DFD74C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE634();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFD788(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE634();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DFD7C4(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE5E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFD800(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE5E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2DFD83C(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE59C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2DFD878(uint64_t a1)
{
  unint64_t v2 = sub_1B2DFE59C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TriplesQuery.ComparisonType.encode(to:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  sub_1B29A3EB4(&qword_1E9C44AC0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A0CD8(v5, v17);
  sub_1B29A3EB4(&qword_1E9C44AC8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B2DFFB10(v7, v18);
  sub_1B29A3EB4(&qword_1E9C44AD0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C44AD8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B29A0480();
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C44AE0);
  sub_1B299D278();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1B299B3C8();
  uint64_t v14 = *v0;
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DFE550();
  sub_1B2E83A38();
  switch(v14)
  {
    case 1:
      sub_1B2DFE634();
      sub_1B2DFFA6C();
      break;
    case 2:
      sub_1B2DFE5E8();
      sub_1B2DFFA6C();
      break;
    case 3:
      sub_1B2DFE59C();
      sub_1B2DFFA6C();
      break;
    default:
      sub_1B2DFE680();
      sub_1B2E83618();
      break;
  }
  sub_1B299B798();
  v16(v15);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v10);
  sub_1B29998C8();
}

uint64_t TriplesQuery.ComparisonType.hashValue.getter()
{
  return sub_1B2E839E8();
}

void TriplesQuery.ComparisonType.init(from:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v32 = v4;
  uint64_t v36 = sub_1B29A3EB4(&qword_1E9C44B10);
  sub_1B299D278();
  uint64_t v33 = v5;
  MEMORY[0x1F4188790](v6);
  sub_1B299B6D0();
  uint64_t v35 = v7;
  sub_1B29A3EB4(&qword_1E9C44B18);
  sub_1B299D278();
  MEMORY[0x1F4188790](v8);
  sub_1B2DFFB10(v9, v30);
  sub_1B29A3EB4(&qword_1E9C44B20);
  sub_1B299D278();
  MEMORY[0x1F4188790](v10);
  sub_1B299ADB4();
  sub_1B29A3EB4(&qword_1E9C44B28);
  sub_1B299D278();
  MEMORY[0x1F4188790](v11);
  sub_1B29A0480();
  uint64_t v12 = sub_1B29A3EB4(&qword_1E9C44B30);
  sub_1B299D278();
  uint64_t v34 = v13;
  MEMORY[0x1F4188790](v14);
  sub_1B299B0C8();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2DFE550();
  sub_1B2E83A18();
  if (v0) {
    goto LABEL_7;
  }
  uint64_t v37 = v3;
  uint64_t v15 = sub_1B2E835F8();
  if (!*(void *)(v15 + 16)
    || (uint64_t v31 = *(unsigned __int8 *)(v15 + 32),
        sub_1B29B142C(1),
        uint64_t v17 = v16,
        unint64_t v19 = v18,
        swift_bridgeObjectRelease(),
        v17 != v19 >> 1))
  {
    uint64_t v20 = sub_1B2E83288();
    swift_allocError();
    char v22 = v21;
    sub_1B29A3EB4(&qword_1E9C39038);
    *char v22 = &type metadata for TriplesQuery.ComparisonType;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v1, v12);
    uint64_t v3 = v37;
LABEL_7:
    uint64_t v23 = (uint64_t)v3;
    goto LABEL_8;
  }
  switch(v31)
  {
    case 1:
      sub_1B2DFE634();
      sub_1B2DFFA9C();
      goto LABEL_12;
    case 2:
      sub_1B2DFE5E8();
      sub_1B2DFFA9C();
      goto LABEL_12;
    case 3:
      sub_1B2DFE59C();
      sub_1B2DFFA9C();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v36);
      swift_unknownObjectRelease();
      uint64_t v27 = sub_1B29A23FC();
      v28(v27);
      uint64_t v23 = (uint64_t)v37;
      uint64_t v29 = v32;
      goto LABEL_13;
    default:
      sub_1B2DFE680();
      sub_1B2DFFA9C();
LABEL_12:
      sub_1B2ACA25C();
      sub_1B299B798();
      v24();
      swift_unknownObjectRelease();
      uint64_t v25 = sub_1B29A23FC();
      v26(v25);
      uint64_t v23 = (uint64_t)v37;
      uint64_t v29 = v32;
LABEL_13:
      *uint64_t v29 = v31;
      break;
  }
LABEL_8:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v23);
  sub_1B29998C8();
}

void sub_1B2DFE0C0()
{
}

void sub_1B2DFE0D8()
{
}

#error "1B2DFE19C: call analysis failed (funcsize=84)"

uint64_t TriplesQueryParameters.limit.getter()
{
  return *(void *)v0;
}

uint64_t TriplesQueryParameters.sorting.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t QueryableKnowledgeGraph.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t QueryableKnowledgeGraph.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*QueryableKnowledgeGraph.rawValue.modify())(void)
{
  return nullsub_1;
}

IntelligencePlatform::QueryableKnowledgeGraph __swiftcall QueryableKnowledgeGraph.init(rawValue:)(IntelligencePlatform::QueryableKnowledgeGraph rawValue)
{
  *uint64_t v1 = rawValue;
  return rawValue;
}

uint64_t sub_1B2DFE2F4@<X0>(Swift::String *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = QueryableKnowledgeGraph.init(rawValue:)(*a1).rawValue._countAndFlagsBits;
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1B2DFE334@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = QueryableKnowledgeGraph.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2DFE35C(uint64_t *a1, uint64_t *a2)
{
  return sub_1B29AC078(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1B2DFE370()
{
  return sub_1B29AE718();
}

uint64_t sub_1B2DFE378()
{
  return sub_1B2AA533C();
}

uint64_t sub_1B2DFE380()
{
  return sub_1B29F91F8();
}

unint64_t sub_1B2DFE388()
{
  unint64_t result = qword_1E9C380B8;
  if (!qword_1E9C380B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C380B8);
  }
  return result;
}

unint64_t sub_1B2DFE3D4()
{
  unint64_t result = qword_1E9C44A58;
  if (!qword_1E9C44A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44A58);
  }
  return result;
}

unint64_t sub_1B2DFE420()
{
  unint64_t result = qword_1E9C380D0;
  if (!qword_1E9C380D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C380D0);
  }
  return result;
}

unint64_t sub_1B2DFE46C()
{
  unint64_t result = qword_1E9C44A90;
  if (!qword_1E9C44A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44A90);
  }
  return result;
}

unint64_t sub_1B2DFE4B8()
{
  unint64_t result = qword_1E9C44A98;
  if (!qword_1E9C44A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44A98);
  }
  return result;
}

unint64_t sub_1B2DFE504()
{
  unint64_t result = qword_1E9C44AA0;
  if (!qword_1E9C44AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44AA0);
  }
  return result;
}

unint64_t sub_1B2DFE550()
{
  unint64_t result = qword_1E9C44AE8;
  if (!qword_1E9C44AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44AE8);
  }
  return result;
}

unint64_t sub_1B2DFE59C()
{
  unint64_t result = qword_1E9C44AF0;
  if (!qword_1E9C44AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44AF0);
  }
  return result;
}

unint64_t sub_1B2DFE5E8()
{
  unint64_t result = qword_1E9C44AF8;
  if (!qword_1E9C44AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44AF8);
  }
  return result;
}

unint64_t sub_1B2DFE634()
{
  unint64_t result = qword_1E9C44B00;
  if (!qword_1E9C44B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B00);
  }
  return result;
}

unint64_t sub_1B2DFE680()
{
  unint64_t result = qword_1E9C44B08;
  if (!qword_1E9C44B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B08);
  }
  return result;
}

unint64_t sub_1B2DFE6D0()
{
  unint64_t result = qword_1E9C44B38;
  if (!qword_1E9C44B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B38);
  }
  return result;
}

unint64_t sub_1B2DFE720()
{
  unint64_t result = qword_1E9C44B40;
  if (!qword_1E9C44B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B40);
  }
  return result;
}

unint64_t sub_1B2DFE770()
{
  unint64_t result = qword_1E9C44B48;
  if (!qword_1E9C44B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B48);
  }
  return result;
}

unint64_t sub_1B2DFE7C0()
{
  unint64_t result = qword_1EB7D7578;
  if (!qword_1EB7D7578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D7578);
  }
  return result;
}

unint64_t sub_1B2DFE814()
{
  unint64_t result = qword_1E9C44B50;
  if (!qword_1E9C44B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B50);
  }
  return result;
}

unint64_t sub_1B2DFE864()
{
  unint64_t result = qword_1E9C44B58;
  if (!qword_1E9C44B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B58);
  }
  return result;
}

uint64_t initializeWithCopy for TriplesQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  unsigned __int8 v17 = *(unsigned char *)(a2 + 104);
  sub_1B29C64D0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(unsigned char *)(a1 + 104) = v17;
  return a1;
}

uint64_t assignWithCopy for TriplesQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v25 = *(void *)(a2 + 72);
  uint64_t v26 = *(void *)(a2 + 80);
  uint64_t v27 = *(void *)(a2 + 88);
  uint64_t v28 = *(void *)(a2 + 96);
  unsigned __int8 v29 = *(unsigned char *)(a2 + 104);
  sub_1B29C64D0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28, v29);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  uint64_t v22 = *(void *)(a1 + 96);
  unsigned __int8 v23 = *(unsigned char *)(a1 + 104);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v25;
  *(void *)(a1 + 80) = v26;
  *(void *)(a1 + 88) = v27;
  *(void *)(a1 + 96) = v28;
  *(unsigned char *)(a1 + 104) = v29;
  sub_1B2A34B34(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23);
  return a1;
}

void type metadata accessor for TriplesQuery()
{
}

void type metadata accessor for TriplesQuery.MatchType()
{
}

unsigned char *storeEnumTagSinglePayload for TriplesQuery.FullTextSearchType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DFEB8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for TriplesQuery.FullTextSearchType()
{
}

void type metadata accessor for TriplesQuery.ComparableColumn()
{
}

void type metadata accessor for TriplesQuery.ComparisonType()
{
}

uint64_t initializeWithCopy for TriplesQueryParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TriplesQueryParameters(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  return a1;
}

uint64_t assignWithTake for TriplesQueryParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for TriplesQueryParameters(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TriplesQueryParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for TriplesQueryParameters()
{
}

void type metadata accessor for QueryableKnowledgeGraph()
{
}

unsigned char *_s20IntelligencePlatform12TriplesQueryV14ComparisonTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DFEE64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparisonType.CodingKeys()
{
  return &type metadata for TriplesQuery.ComparisonType.CodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparisonType.GreaterThanCodingKeys()
{
  return &type metadata for TriplesQuery.ComparisonType.GreaterThanCodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparisonType.GreaterThanOrEqualCodingKeys()
{
  return &type metadata for TriplesQuery.ComparisonType.GreaterThanOrEqualCodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparisonType.LessThanCodingKeys()
{
  return &type metadata for TriplesQuery.ComparisonType.LessThanCodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparisonType.LessThanOrEqualCodingKeys()
{
  return &type metadata for TriplesQuery.ComparisonType.LessThanOrEqualCodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparableColumn.CodingKeys()
{
  return &type metadata for TriplesQuery.ComparableColumn.CodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparableColumn.ObjectCodingKeys()
{
  return &type metadata for TriplesQuery.ComparableColumn.ObjectCodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparableColumn.TimestampCodingKeys()
{
  return &type metadata for TriplesQuery.ComparableColumn.TimestampCodingKeys;
}

unsigned char *_s20IntelligencePlatform12TriplesQueryV9MatchTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2DFEFD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TriplesQuery.MatchType.CodingKeys()
{
  return &type metadata for TriplesQuery.MatchType.CodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.MatchType.MatchesCodingKeys()
{
  return &type metadata for TriplesQuery.MatchType.MatchesCodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.MatchType.DoesNotMatchCodingKeys()
{
  return &type metadata for TriplesQuery.MatchType.DoesNotMatchCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TriplesQuery.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2DFF0CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TriplesQuery.CodingKeys()
{
  return &type metadata for TriplesQuery.CodingKeys;
}

unint64_t sub_1B2DFF108()
{
  unint64_t result = qword_1E9C44B60;
  if (!qword_1E9C44B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B60);
  }
  return result;
}

unint64_t sub_1B2DFF158()
{
  unint64_t result = qword_1E9C44B68;
  if (!qword_1E9C44B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B68);
  }
  return result;
}

unint64_t sub_1B2DFF1A8()
{
  unint64_t result = qword_1E9C44B70;
  if (!qword_1E9C44B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B70);
  }
  return result;
}

unint64_t sub_1B2DFF1F8()
{
  unint64_t result = qword_1E9C44B78;
  if (!qword_1E9C44B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B78);
  }
  return result;
}

unint64_t sub_1B2DFF248()
{
  unint64_t result = qword_1E9C44B80;
  if (!qword_1E9C44B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B80);
  }
  return result;
}

unint64_t sub_1B2DFF298()
{
  unint64_t result = qword_1E9C44B88;
  if (!qword_1E9C44B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B88);
  }
  return result;
}

unint64_t sub_1B2DFF2E8()
{
  unint64_t result = qword_1E9C44B90;
  if (!qword_1E9C44B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B90);
  }
  return result;
}

unint64_t sub_1B2DFF338()
{
  unint64_t result = qword_1E9C44B98;
  if (!qword_1E9C44B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44B98);
  }
  return result;
}

unint64_t sub_1B2DFF388()
{
  unint64_t result = qword_1E9C44BA0;
  if (!qword_1E9C44BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44BA0);
  }
  return result;
}

unint64_t sub_1B2DFF3D8()
{
  unint64_t result = qword_1E9C44BA8;
  if (!qword_1E9C44BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44BA8);
  }
  return result;
}

unint64_t sub_1B2DFF428()
{
  unint64_t result = qword_1E9C44BB0;
  if (!qword_1E9C44BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44BB0);
  }
  return result;
}

unint64_t sub_1B2DFF478()
{
  unint64_t result = qword_1E9C44BB8;
  if (!qword_1E9C44BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44BB8);
  }
  return result;
}

unint64_t sub_1B2DFF4C8()
{
  unint64_t result = qword_1E9C44BC0;
  if (!qword_1E9C44BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44BC0);
  }
  return result;
}

unint64_t sub_1B2DFF518()
{
  unint64_t result = qword_1E9C44BC8;
  if (!qword_1E9C44BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44BC8);
  }
  return result;
}

unint64_t sub_1B2DFF568()
{
  unint64_t result = qword_1E9C44BD0;
  if (!qword_1E9C44BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44BD0);
  }
  return result;
}

unint64_t sub_1B2DFF5B8()
{
  unint64_t result = qword_1E9C44BD8;
  if (!qword_1E9C44BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44BD8);
  }
  return result;
}

unint64_t sub_1B2DFF608()
{
  unint64_t result = qword_1E9C44BE0;
  if (!qword_1E9C44BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44BE0);
  }
  return result;
}

unint64_t sub_1B2DFF658()
{
  unint64_t result = qword_1E9C44BE8;
  if (!qword_1E9C44BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44BE8);
  }
  return result;
}

unint64_t sub_1B2DFF6A8()
{
  unint64_t result = qword_1E9C44BF0;
  if (!qword_1E9C44BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44BF0);
  }
  return result;
}

unint64_t sub_1B2DFF6F8()
{
  unint64_t result = qword_1E9C44BF8;
  if (!qword_1E9C44BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44BF8);
  }
  return result;
}

unint64_t sub_1B2DFF748()
{
  unint64_t result = qword_1E9C380E0;
  if (!qword_1E9C380E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C380E0);
  }
  return result;
}

unint64_t sub_1B2DFF798()
{
  unint64_t result = qword_1E9C380D8;
  if (!qword_1E9C380D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C380D8);
  }
  return result;
}

unint64_t sub_1B2DFF7E8()
{
  unint64_t result = qword_1E9C380B0;
  if (!qword_1E9C380B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C380B0);
  }
  return result;
}

unint64_t sub_1B2DFF838()
{
  unint64_t result = qword_1E9C380A8;
  if (!qword_1E9C380A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C380A8);
  }
  return result;
}

unint64_t sub_1B2DFF888()
{
  unint64_t result = qword_1E9C380C8;
  if (!qword_1E9C380C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C380C8);
  }
  return result;
}

unint64_t sub_1B2DFF8D8()
{
  unint64_t result = qword_1E9C380C0;
  if (!qword_1E9C380C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C380C0);
  }
  return result;
}

unint64_t sub_1B2DFF928()
{
  unint64_t result = qword_1EB7D9E88;
  if (!qword_1EB7D9E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E88);
  }
  return result;
}

unint64_t sub_1B2DFF978()
{
  unint64_t result = qword_1EB7D9E80;
  if (!qword_1EB7D9E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E80);
  }
  return result;
}

unint64_t sub_1B2DFF9C4()
{
  unint64_t result = qword_1E9C38378;
  if (!qword_1E9C38378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38378);
  }
  return result;
}

uint64_t sub_1B2DFFA18()
{
  *(void *)(v1 - 152) = v0;
  return 1;
}

uint64_t sub_1B2DFFA3C()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B2DFFA6C()
{
  return sub_1B2E83618();
}

uint64_t sub_1B2DFFA9C()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B2DFFAB8()
{
  return sub_1B2E83278();
}

uint64_t sub_1B2DFFAE4()
{
  return sub_1B2E834E8();
}

void sub_1B2DFFB10(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1B2DFFB2C()
{
  *(void *)(v3 - 144) = v2;
  *(void *)(v3 - 136) = v0;
  *(void *)(v3 - 88) = v1;
  return sub_1B2E835F8();
}

uint64_t sub_1B2DFFB50()
{
  return v0;
}

uint64_t sub_1B2DFFBA0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2DFFBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  return sub_1B29C64D0(v14, a2, a3, a4, a5, a6, a7, a8, v15, v16, v17, v18, v19, a14);
}

uint64_t sub_1B2DFFBE0()
{
  return v0;
}

uint64_t sub_1B2DFFBF4()
{
  return v0;
}

uint64_t sub_1B2DFFC14()
{
  return sub_1B2E83A38();
}

uint64_t sub_1B2DFFC34(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1B29C1690();
    uint64_t v6 = v15;
    uint64_t v7 = (void *)(a1 + 32);
    uint64_t v8 = MEMORY[0x1E4F62C30];
    do
    {
      sub_1B29AEC7C(v7, v7[3]);
      uint64_t v13 = sub_1B2E80918();
      uint64_t v14 = v8;
      sub_1B29D1C70((uint64_t *)&v12);
      if (a3) {
        sub_1B2E81168();
      }
      else {
        sub_1B2E81158();
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v15 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B29C1690();
        uint64_t v6 = v15;
      }
      unint64_t v10 = *(void *)(v6 + 16);
      if (v10 >= *(void *)(v6 + 24) >> 1)
      {
        sub_1B29C1690();
        uint64_t v6 = v15;
      }
      *(void *)(v6 + 16) = v10 + 1;
      sub_1B29D1D20(&v12, v6 + 40 * v10 + 32);
      v7 += 5;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v6;
}

uint64_t TriplesSort.sqlOrdering.getter()
{
  char v1 = *(unsigned char *)(v0 + 8);
  uint64_t v2 = swift_bridgeObjectRetain();
  return sub_1B2DFFC34(v2, v2, v1);
}

uint64_t TriplesSort.init(columns:direction:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *a2;
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v3;
  return result;
}

BOOL static TriplesSort.SortDirection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TriplesSort.SortDirection.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t TriplesSort.SortDirection.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t TriplesSort.description.getter()
{
  uint64_t v1 = *v0;
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  sub_1B2E823E8();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B29A3EB4((uint64_t *)&unk_1E9C43CF0);
  MEMORY[0x1B3EB1020](v1, v2);
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  return 0x73656C706972543CLL;
}

unint64_t sub_1B2DFFFBC()
{
  unint64_t result = qword_1E9C44C00;
  if (!qword_1E9C44C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44C00);
  }
  return result;
}

ValueMetadata *type metadata accessor for TriplesSort()
{
  return &type metadata for TriplesSort;
}

unsigned char *storeEnumTagSinglePayload for TriplesSort.SortDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2E000E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TriplesSort.SortDirection()
{
  return &type metadata for TriplesSort.SortDirection;
}

ValueMetadata *type metadata accessor for TriplesIndexHandler()
{
  return &type metadata for TriplesIndexHandler;
}

uint64_t sub_1B2E0012C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 96);
  unsigned __int8 v16 = *(unsigned char *)(a2 + 104);
  uint64_t v58 = *(void *)(a2 + 48);
  uint64_t v40 = v6;
  uint64_t v41 = v8;
  uint64_t v38 = v13;
  uint64_t v39 = v11;
  if ((v16 & 0x10) != 0)
  {
    uint64_t v36 = v4;
    sub_1B2E831F8();
    sub_1B2E82518();
    uint64_t v44 = v36;
    uint64_t v45 = v5;
    uint64_t v46 = v40;
    uint64_t v47 = v7;
    uint64_t v48 = v41;
    uint64_t v49 = v9;
    uint64_t v50 = v58;
    uint64_t v51 = v10;
    uint64_t v52 = v12;
    uint64_t v53 = v39;
    uint64_t v54 = v14;
    uint64_t v55 = v38;
    uint64_t v56 = v15;
    unsigned __int8 v57 = v16;
    sub_1B2E83388();
LABEL_6:
    sub_1B2A32704();
    swift_allocError();
    *(void *)uint64_t v27 = 0;
    *(void *)(v27 + 8) = 0xE000000000000000;
    *(unsigned char *)(v27 + 16) = 1;
    return swift_willThrow();
  }
  else
  {
    unsigned __int8 v31 = v16;
    uint64_t v32 = v14;
    uint64_t v34 = v12;
    uint64_t v17 = v4;
    uint64_t v18 = v5;
    uint64_t v35 = v10;
    int v19 = *a1;
    uint64_t v20 = *((void *)a1 + 1);
    sub_1B29A3EB4(&qword_1EB7D89F8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
    *(void *)(inited + 56) = &type metadata for ExtendedTripleColumn;
    *(void *)(inited + 64) = sub_1B2B4384C();
    *(unsigned char *)(inited + 32) = 0;
    switch(v19)
    {
      case 0:
      case 6:
        uint64_t v28 = v20 & ~(v20 >> 63);
        unint64_t v22 = v20;
        uint64_t v23 = v3[3];
        uint64_t v30 = v3[4];
        sub_1B29AEC7C(v3, v23);
        uint64_t v44 = v17;
        uint64_t v45 = v18;
        uint64_t v46 = v40;
        uint64_t v47 = v7;
        uint64_t v48 = v41;
        uint64_t v49 = v9;
        uint64_t v50 = v58;
        uint64_t v51 = v35;
        uint64_t v52 = v34;
        uint64_t v53 = v39;
        uint64_t v54 = v32;
        uint64_t v55 = v38;
        uint64_t v56 = v15;
        unsigned __int8 v57 = v31;
        v42[0] = v28;
        v42[1] = v22 >> 63;
        v42[2] = inited;
        char v43 = 1;
        unsigned __int8 v29 = *(void (**)(uint64_t *, void *, uint64_t, uint64_t))(v30 + 40);
        sub_1B29C64D0(v17, v18, v40, v7, v41, v9, v58, v35, v34, v39, v32, v38, v15, v31);
        v29(&v44, v42, v23, v30);
        swift_bridgeObjectRelease();
        uint64_t result = sub_1B2A34A94(v17, v18, v40, v7, v41, v9, v58, v35, v34, v39, v32, v38, v15, v31);
        if (!v37)
        {
          swift_getAssociatedTypeWitness();
          sub_1B29A3EB4(&qword_1E9C37C08);
          uint64_t v25 = sub_1B2E83378();
          swift_bridgeObjectRelease();
          uint64_t v26 = sub_1B2E00570(v25);
          uint64_t result = swift_bridgeObjectRelease();
          a3[1] = 0;
          a3[2] = 0;
          *a3 = v26;
        }
        break;
      case 2:
      case 5:
        swift_setDeallocating();
        sub_1B2D98F0C();
        uint64_t result = sub_1B2E00570(MEMORY[0x1E4FBC860]);
        a3[1] = 0;
        a3[2] = 0;
        *a3 = result;
        break;
      default:
        swift_setDeallocating();
        sub_1B2D98F0C();
        sub_1B2E831F8();
        sub_1B2E82518();
        sub_1B2CAF284();
        goto LABEL_6;
    }
  }
  return result;
}

uint64_t sub_1B2E00570(uint64_t a1)
{
  uint64_t v180 = sub_1B2E82148();
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    sub_1B2A436A8();
    uint64_t v131 = v130;
    swift_bridgeObjectRelease_n();
    return v131;
  }
  uint64_t v3 = a1 + 32;
  uint64_t v138 = a1;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1B29C3B84(v3, (uint64_t)v205);
    sub_1B29A2414();
    uint64_t v4 = sub_1B299E208();
    v5(v4);
    uint64_t v7 = v198;
    unint64_t v6 = v199;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v8 = v7 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v174 = v3;
    if (v8 && (sub_1B29AEC7C(v205, v206), uint64_t v9 = sub_1B299E208(), v10(v9), v198))
    {
      sub_1B2E01010();
      uint64_t v11 = sub_1B299E208();
      v12(v11);
      uint64_t v13 = EntityIdentifier.stringValue.getter();
      uint64_t v15 = v14;
      uint64_t v17 = v206;
      uint64_t v16 = v207;
      sub_1B29AEC7C(v205, v206);
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v16 + 24) + 16))(&v185, v17);
      uint64_t v18 = v185;
      uint64_t v19 = v186;
      swift_bridgeObjectRelease();
      uint64_t v21 = v206;
      uint64_t v20 = v207;
      sub_1B29AEC7C(v205, v206);
      (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v20 + 24) + 24))(v196, v21);
      uint64_t v198 = 3828082;
      uint64_t v199 = 0xE300000000000000;
      uint64_t v197 = v196[0];
      sub_1B2E83748();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      KnosisInternalFact.init(sid:pid:oid:)(v13, v15, v18, v19, v198, v199, &v198);
      uint64_t v23 = v198;
      uint64_t v22 = v199;
      uint64_t v24 = v200;
      uint64_t v25 = v201;
      uint64_t v26 = *((void *)&v202 + 1);
      uint64_t v165 = *(void *)&v203[8];
      uint64_t v170 = *((void *)&v200 + 1);
      uint64_t v158 = *(void *)&v203[16];
      uint64_t v182 = v204;
      uint64_t v176 = v202;
      uint64_t v178 = *(void *)v203;
      if (*(void *)(v180 + 16))
      {
        swift_bridgeObjectRetain_n();
        sub_1B29DB060(v23, v22, v27, v28, v29, v30, v31, v32, v133, *((uint64_t *)&v133 + 1), v136, v138, v139, v141, v143, v145, v147, v149, v151,
          v153,
          v155,
          v158,
          v161,
          v165,
          v170,
          v3);
        char v34 = v33;
        swift_bridgeObjectRelease();
        if (v34)
        {
          sub_1B29A2414();
          uint64_t v35 = sub_1B29A10A0();
          v36(v35);
          uint64_t v166 = v196[0];
          uint64_t v171 = v196[1];
          swift_bridgeObjectRelease();
          uint64_t v37 = sub_1B29A35B8();
          uint64_t v162 = v38(v37);
          uint64_t v40 = v39;
          swift_bridgeObjectRetain();
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v197 = v180;
          swift_bridgeObjectRetain();
          uint64_t v47 = sub_1B29DB060(v23, v22, v41, v42, v43, v44, v45, v46, v133, *((uint64_t *)&v133 + 1), v136, v138, v140, v142, v144, v146, v148, v150, v152,
                  v154,
                  v156,
                  v158,
                  v162,
                  v166,
                  v171,
                  v174);
          if (__OFADD__(*(void *)(v180 + 16), (v48 & 1) == 0)) {
            goto LABEL_43;
          }
          unint64_t v49 = v47;
          char v50 = v48;
          sub_1B29A3EB4(&qword_1E9C43AE8);
          if (sub_1B2E83398())
          {
            uint64_t v57 = sub_1B29DB060(v23, v22, v51, v52, v53, v54, v55, v56, v134, v135, v137, v138, v139, v141, v143, v145, v147, v149, v151,
                    v153,
                    v157,
                    v159,
                    v163,
                    v167,
                    v172,
                    v175);
            if ((v50 & 1) != (v58 & 1)) {
              goto LABEL_45;
            }
            unint64_t v49 = v57;
          }
          if ((v50 & 1) == 0) {
            goto LABEL_44;
          }
          uint64_t v59 = *(void *)(v197 + 56) + 88 * v49;
          uint64_t v61 = *(void *)(v59 + 8);
          uint64_t v62 = *(void *)(v59 + 32);
          uint64_t v63 = *(void *)(v59 + 72);
          uint64_t v64 = *(void *)(v59 + 80);
          uint64_t v198 = *(void *)v59;
          uint64_t v60 = v198;
          uint64_t v199 = v61;
          long long v200 = *(_OWORD *)(v59 + 16);
          uint64_t v201 = v62;
          long long v202 = *(_OWORD *)(v59 + 40);
          *(_OWORD *)v203 = *(_OWORD *)(v59 + 56);
          *(void *)&v203[16] = v63;
          uint64_t v204 = v64;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          KnosisInternalFact.init(sid:pid:oid:)(v60, v61, v167, v172, v163, v40, &v185);
          uint64_t v65 = v186;
          uint64_t v66 = v187;
          uint64_t v67 = v188;
          uint64_t v181 = v189;
          uint64_t v183 = v185;
          uint64_t v177 = v191;
          uint64_t v179 = v190;
          uint64_t v161 = v193;
          uint64_t v168 = v192;
          uint64_t v155 = v195;
          uint64_t v158 = v194;
          uint64_t v68 = v204;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B29B7480();
            uint64_t v68 = v128;
          }
          unint64_t v69 = *(void *)(v68 + 16);
          if (v69 >= *(void *)(v68 + 24) >> 1)
          {
            sub_1B29B7480();
            uint64_t v68 = v129;
          }
          *(void *)(v68 + 16) = v69 + 1;
          uint64_t v70 = (void *)(v68 + 88 * v69);
          v70[4] = v183;
          uint64_t v70[5] = v65;
          v70[6] = v66;
          v70[7] = v67;
          v70[8] = v181;
          v70[9] = v179;
          v70[10] = v177;
          v70[11] = v168;
          v70[12] = v161;
          v70[13] = v158;
          v70[14] = v155;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v204 = v68;
          sub_1B29E1304(&v198, 1, &v197, v49, v23, v22);
          uint64_t v136 = v204;
          long long v133 = *(_OWORD *)&v203[8];
          sub_1B2D835C0(v198, v199);
          swift_bridgeObjectRelease();
          uint64_t v180 = v197;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v155 = v25;
      uint64_t v164 = v26;
      uint64_t v87 = v206;
      uint64_t v86 = v207;
      sub_1B29AEC7C(v205, v206);
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v86 + 24) + 32))(&v185, v87);
      uint64_t v89 = v185;
      uint64_t v88 = v186;
      swift_bridgeObjectRelease();
      uint64_t v91 = v206;
      uint64_t v90 = v207;
      sub_1B29AEC7C(v205, v206);
      uint64_t v92 = (*(uint64_t (**)(uint64_t))(*(void *)(v90 + 24) + 40))(v91);
      uint64_t v94 = v93;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v153 = v23;
      KnosisInternalFact.init(sid:pid:oid:)(v23, v22, v89, v88, v92, v94, &v198);
      uint64_t v95 = v198;
      uint64_t v96 = v199;
      long long v97 = v200;
      uint64_t v145 = *(void *)v203;
      uint64_t v147 = *((void *)&v202 + 1);
      uint64_t v141 = *(void *)&v203[16];
      uint64_t v143 = *(void *)&v203[8];
      uint64_t v139 = v204;
      uint64_t v98 = v182;
      uint64_t v149 = v202;
      uint64_t v151 = v201;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B7480();
        uint64_t v98 = v126;
      }
      unint64_t v99 = *(void *)(v98 + 16);
      if (v99 >= *(void *)(v98 + 24) >> 1)
      {
        sub_1B29B7480();
        uint64_t v98 = v127;
      }
      *(void *)(v98 + 16) = v99 + 1;
      uint64_t v184 = v98;
      unint64_t v100 = v98 + 88 * v99;
      *(void *)(v100 + 32) = v95;
      *(void *)(v100 + 40) = v96;
      *(_OWORD *)(v100 + 48) = v97;
      *(void *)(v100 + 64) = v151;
      *(void *)(v100 + 72) = v149;
      *(void *)(v100 + 80) = v147;
      *(void *)(v100 + 88) = v145;
      *(void *)(v100 + 96) = v143;
      *(void *)(v100 + 104) = v141;
      *(void *)(v100 + 112) = v139;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v75 = v155;
      uint64_t v84 = v158;
      uint64_t v85 = v153;
    }
    else
    {
      sub_1B2E01010();
      uint64_t v71 = sub_1B29A10A0();
      v72(v71);
      uint64_t v73 = (v196[0] & 0x80000000000000) != 0 ? 3826797 : 3828069;
      uint64_t v198 = v73;
      uint64_t v199 = 0xE300000000000000;
      uint64_t v185 = v196[0];
      sub_1B2E83748();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      uint64_t v74 = v198;
      uint64_t v75 = v199;
      sub_1B29AEC7C(v205, v206);
      uint64_t v76 = sub_1B299E208();
      v77(v76);
      uint64_t v79 = v198;
      uint64_t v78 = v199;
      swift_bridgeObjectRelease();
      uint64_t v80 = sub_1B29A35B8();
      uint64_t v82 = v81(v80);
      uint64_t v84 = v83;
      uint64_t v170 = v74;
      uint64_t v185 = v74;
      uint64_t v186 = v75;
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      sub_1B2E00FF4();
      uint64_t v164 = v79;
      uint64_t v178 = v78;
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E00FF4();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E00FF4();
      uint64_t v165 = v82;
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      uint64_t v176 = 0;
      uint64_t v85 = v185;
      uint64_t v22 = v186;
      uint64_t v24 = 0;
      uint64_t v184 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v198 = v180;
    uint64_t v107 = sub_1B29DB060(v85, v22, v101, v102, v103, v104, v105, v106, v133, *((uint64_t *)&v133 + 1), v136, v138, v139, v141, v143, v145, v147, v149, v151,
             v153,
             v155,
             v158,
             v164,
             v165,
             v170,
             v174);
    if (__OFADD__(*(void *)(v180 + 16), (v108 & 1) == 0)) {
      break;
    }
    unint64_t v109 = v107;
    char v110 = v108;
    sub_1B29A3EB4(&qword_1E9C43AE8);
    if (sub_1B2E83398())
    {
      uint64_t v117 = sub_1B29DB060(v85, v22, v111, v112, v113, v114, v115, v116, v133, *((uint64_t *)&v133 + 1), v136, v138, v139, v141, v143, v145, v147, v149, v151,
               v153,
               v155,
               v160,
               v161,
               v169,
               v173,
               v175);
      if ((v110 & 1) != (v118 & 1)) {
        goto LABEL_45;
      }
      unint64_t v109 = v117;
    }
    uint64_t v158 = v2;
    uint64_t v119 = (void *)v198;
    uint64_t v180 = v198;
    if (v110)
    {
      uint64_t v120 = (uint64_t *)(*(void *)(v198 + 56) + 88 * v109);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v120 = v85;
      v120[1] = v22;
      v120[2] = v24;
      v120[3] = v173;
      v120[4] = v75;
      v120[5] = v176;
      v120[6] = v161;
      v120[7] = v178;
      v120[8] = v169;
      v120[9] = v84;
      v120[10] = v184;
    }
    else
    {
      *(void *)(v198 + 8 * (v109 >> 6) + 64) |= 1 << v109;
      int v121 = (uint64_t *)(v119[6] + 16 * v109);
      uint64_t *v121 = v85;
      v121[1] = v22;
      uint64_t v122 = (uint64_t *)(v119[7] + 88 * v109);
      *uint64_t v122 = v85;
      v122[1] = v22;
      v122[2] = v24;
      v122[3] = v173;
      v122[4] = v75;
      v122[5] = v176;
      v122[6] = v161;
      v122[7] = v178;
      v122[8] = v169;
      v122[9] = v84;
      v122[10] = v184;
      uint64_t v123 = v119[2];
      BOOL v124 = __OFADD__(v123, 1);
      uint64_t v125 = v123 + 1;
      if (v124) {
        goto LABEL_42;
      }
      v119[2] = v125;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = v158;
LABEL_38:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v205);
    uint64_t v3 = v175 + 40;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2E00FB8()
{
  return sub_1B2A17E38();
}

uint64_t sub_1B2E00FC4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B2E0012C(a1, a2, a3);
}

uint64_t sub_1B2E00FDC()
{
  return sub_1B2E00FB8();
}

uint64_t sub_1B2E00FF4()
{
  return swift_bridgeObjectRetain();
}

void *sub_1B2E01010()
{
  return sub_1B29AEC7C((void *)(v0 - 144), *(void *)(v0 - 120));
}

uint64_t KTSQueryParams.init(startTime:endTime:inclusionType:distanceMinInMeters:distanceMaxInMeters:elevationGainMinInMeters:elevationGainMaxInMeters:durationMinInSeconds:durationMaxInSeconds:roadType:roadName:originId:destinationId:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, char *a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, char a18, char *a19, uint64_t a20,uint64_t a21,uint64_t *a22,uint64_t *a23)
{
  char v23 = *a5;
  char v24 = *a19;
  uint64_t v25 = *a22;
  uint64_t v26 = *a23;
  char v28 = *((unsigned char *)a22 + 8);
  char v27 = *((unsigned char *)a23 + 8);
  *(void *)a9 = result;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4 & 1;
  *(unsigned char *)(a9 + 25) = v23;
  *(void *)(a9 + 32) = a6;
  *(unsigned char *)(a9 + 40) = a7 & 1;
  *(void *)(a9 + 48) = a8;
  *(unsigned char *)(a9 + 56) = a10 & 1;
  *(void *)(a9 + 64) = a11;
  *(unsigned char *)(a9 + 72) = a12 & 1;
  *(void *)(a9 + 80) = a13;
  *(unsigned char *)(a9 + 88) = a14 & 1;
  *(void *)(a9 + 96) = a15;
  *(unsigned char *)(a9 + 104) = a16 & 1;
  *(void *)(a9 + 112) = a17;
  *(unsigned char *)(a9 + 120) = a18 & 1;
  *(unsigned char *)(a9 + 121) = v24;
  *(void *)(a9 + 128) = a20;
  *(void *)(a9 + 136) = a21;
  *(void *)(a9 + 144) = v25;
  *(unsigned char *)(a9 + 152) = v28;
  *(void *)(a9 + 160) = v26;
  *(unsigned char *)(a9 + 168) = v27;
  return result;
}

uint64_t static KTSQueryParams.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 8);
  double v5 = *(double *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  int v7 = *(unsigned __int8 *)(a1 + 25);
  double v8 = *(double *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 40);
  double v10 = *(double *)(a1 + 48);
  char v11 = *(unsigned char *)(a1 + 56);
  double v12 = *(double *)(a1 + 64);
  char v13 = *(unsigned char *)(a1 + 72);
  double v14 = *(double *)(a1 + 80);
  char v15 = *(unsigned char *)(a1 + 88);
  double v16 = *(double *)(a1 + 96);
  char v85 = *(unsigned char *)(a1 + 104);
  double v17 = *(double *)(a1 + 112);
  char v18 = *(unsigned char *)(a1 + 120);
  int v84 = *(unsigned __int8 *)(a1 + 121);
  uint64_t v19 = *(void *)(a1 + 128);
  uint64_t v20 = *(void *)(a1 + 136);
  uint64_t v21 = *(void *)(a1 + 144);
  char v22 = *(unsigned char *)(a1 + 152);
  uint64_t v81 = *(void *)(a1 + 160);
  char v23 = *(unsigned char *)(a1 + 168);
  int v24 = *(unsigned __int8 *)(a2 + 8);
  double v25 = *(double *)(a2 + 16);
  int v26 = *(unsigned __int8 *)(a2 + 24);
  int v27 = *(unsigned __int8 *)(a2 + 25);
  double v28 = *(double *)(a2 + 32);
  int v29 = *(unsigned __int8 *)(a2 + 40);
  double v30 = *(double *)(a2 + 48);
  int v31 = *(unsigned __int8 *)(a2 + 56);
  double v32 = *(double *)(a2 + 64);
  int v33 = *(unsigned __int8 *)(a2 + 72);
  double v34 = *(double *)(a2 + 80);
  int v35 = *(unsigned __int8 *)(a2 + 88);
  double v36 = *(double *)(a2 + 96);
  int v37 = *(unsigned __int8 *)(a2 + 104);
  double v38 = *(double *)(a2 + 112);
  int v39 = *(unsigned __int8 *)(a2 + 120);
  int v83 = *(unsigned __int8 *)(a2 + 121);
  uint64_t v40 = *(void *)(a2 + 136);
  uint64_t v82 = *(void *)(a2 + 128);
  uint64_t v41 = *(void *)(a2 + 144);
  int v42 = *(unsigned __int8 *)(a2 + 152);
  uint64_t v43 = *(void *)(a2 + 160);
  char v44 = *(unsigned char *)(a2 + 168);
  if (v4)
  {
    if (!v24) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 == *(double *)a2) {
      char v45 = v24;
    }
    else {
      char v45 = 1;
    }
    if (v45) {
      return 0;
    }
  }
  if (v6)
  {
    if (!v26) {
      return 0;
    }
  }
  else
  {
    if (v5 == v25) {
      char v46 = v26;
    }
    else {
      char v46 = 1;
    }
    if (v46) {
      return 0;
    }
  }
  if (v7 == 8)
  {
    if (v27 != 8) {
      return 0;
    }
  }
  else
  {
    if (v27 == 8) {
      return 0;
    }
    char v80 = v23;
    uint64_t v79 = v21;
    char v77 = *(unsigned char *)(a2 + 168);
    char v78 = v22;
    uint64_t v76 = v19;
    uint64_t v75 = v20;
    int v74 = *(unsigned __int8 *)(a2 + 152);
    uint64_t v72 = *(void *)(a2 + 136);
    uint64_t v73 = *(void *)(a2 + 144);
    double v71 = v17;
    char v70 = v18;
    double v68 = v14;
    double v69 = v16;
    double v67 = *(double *)(a2 + 112);
    char v47 = sub_1B29ACEF0(v7, v27);
    double v38 = v67;
    double v14 = v68;
    double v16 = v69;
    char v18 = v70;
    double v17 = v71;
    uint64_t v40 = v72;
    uint64_t v41 = v73;
    int v42 = v74;
    uint64_t v20 = v75;
    uint64_t v19 = v76;
    char v44 = v77;
    char v22 = v78;
    uint64_t v21 = v79;
    char v23 = v80;
    if ((v47 & 1) == 0) {
      return 0;
    }
  }
  if (v9)
  {
    if (!v29) {
      return 0;
    }
  }
  else
  {
    if (v8 == v28) {
      char v48 = v29;
    }
    else {
      char v48 = 1;
    }
    if (v48) {
      return 0;
    }
  }
  if (v11)
  {
    if (!v31) {
      return 0;
    }
  }
  else
  {
    if (v10 == v30) {
      char v49 = v31;
    }
    else {
      char v49 = 1;
    }
    if (v49) {
      return 0;
    }
  }
  if (v13)
  {
    if (!v33) {
      return 0;
    }
  }
  else
  {
    if (v12 == v32) {
      char v50 = v33;
    }
    else {
      char v50 = 1;
    }
    if (v50) {
      return 0;
    }
  }
  if (v15)
  {
    if (!v35) {
      return 0;
    }
  }
  else
  {
    if (v14 == v34) {
      char v51 = v35;
    }
    else {
      char v51 = 1;
    }
    if (v51) {
      return 0;
    }
  }
  if (v85)
  {
    if (!v37) {
      return 0;
    }
  }
  else
  {
    if (v16 == v36) {
      char v52 = v37;
    }
    else {
      char v52 = 1;
    }
    if (v52) {
      return 0;
    }
  }
  if (v18)
  {
    if (!v39) {
      return 0;
    }
  }
  else
  {
    if (v17 == v38) {
      char v53 = v39;
    }
    else {
      char v53 = 1;
    }
    if (v53) {
      return 0;
    }
  }
  if (v84 == 5)
  {
    if (v83 != 5) {
      return 0;
    }
  }
  else if (v83 == 5 || v84 != v83)
  {
    return 0;
  }
  if (!v20)
  {
    if (!v40) {
      goto LABEL_79;
    }
    return 0;
  }
  if (!v40) {
    return 0;
  }
  if (v19 == v82 && v20 == v40) {
    goto LABEL_79;
  }
  char v56 = v44;
  char v57 = v23;
  uint64_t v58 = v21;
  char v59 = v22;
  int v60 = v42;
  uint64_t v61 = v41;
  char v62 = sub_1B2E837A8();
  uint64_t v41 = v61;
  int v42 = v60;
  char v44 = v56;
  char v22 = v59;
  uint64_t v21 = v58;
  char v23 = v57;
  char v63 = v62;
  uint64_t result = 0;
  if (v63)
  {
LABEL_79:
    if (v22)
    {
      if (!v42) {
        return 0;
      }
    }
    else
    {
      if (v21 == v41) {
        char v65 = v42;
      }
      else {
        char v65 = 1;
      }
      if (v65) {
        return 0;
      }
    }
    if (v23)
    {
      if ((v44 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v81 == v43) {
        char v66 = v44;
      }
      else {
        char v66 = 1;
      }
      if (v66) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

IntelligencePlatform::InclusionType_optional __swiftcall InclusionType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t InclusionType.rawValue.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
    case 2:
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2E015F8(unsigned __int8 *a1, char *a2)
{
  return sub_1B29ACEF0(*a1, *a2);
}

uint64_t sub_1B2E01604()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2E01664()
{
  return sub_1B2E82788();
}

uint64_t sub_1B2E016B4()
{
  return sub_1B29AE5A0(*v0);
}

uint64_t sub_1B2E016BC(uint64_t a1)
{
  return sub_1B2AA649C(a1, *v1);
}

uint64_t sub_1B2E016C4()
{
  return sub_1B29F9A34();
}

IntelligencePlatform::InclusionType_optional sub_1B2E016CC(Swift::String *a1)
{
  return InclusionType.init(rawValue:)(*a1);
}

unint64_t sub_1B2E016D8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = InclusionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t KTSQueryParams.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  int v4 = *(unsigned __int8 *)(v2 + 24);
  int v16 = *(unsigned __int8 *)(v2 + 25);
  int v5 = *(unsigned __int8 *)(v2 + 121);
  uint64_t v6 = *(void *)(v2 + 136);
  int v7 = *(unsigned __int8 *)(v2 + 152);
  int v8 = *(unsigned __int8 *)(v2 + 168);
  int v22 = *(unsigned __int8 *)(v2 + 120);
  uint64_t v14 = *(void *)(v2 + 80);
  uint64_t v15 = *(void *)(v2 + 96);
  int v20 = *(unsigned __int8 *)(v2 + 88);
  int v21 = *(unsigned __int8 *)(v2 + 104);
  uint64_t v12 = *(void *)(v2 + 48);
  uint64_t v13 = *(void *)(v2 + 64);
  int v18 = *(unsigned __int8 *)(v2 + 56);
  int v19 = *(unsigned __int8 *)(v2 + 72);
  uint64_t v10 = *(void *)(v2 + 16);
  uint64_t v11 = *(void *)(v2 + 32);
  int v17 = *(unsigned __int8 *)(v2 + 40);
  if (*(unsigned char *)(v2 + 8) == 1)
  {
    sub_1B2E839A8();
    if (!v4)
    {
LABEL_3:
      sub_1B2E839A8();
      sub_1B299EBDC(v10);
      sub_1B2E839C8();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1B2E839A8();
    sub_1B2E839C8();
    if (!v4) {
      goto LABEL_3;
    }
  }
  sub_1B2E839A8();
LABEL_6:
  sub_1B2E839A8();
  if (v16 != 8) {
    sub_1B2AA649C(a1, v16);
  }
  sub_1B2E839A8();
  if (!v17)
  {
    sub_1B299EBDC(v11);
    sub_1B2E839C8();
  }
  sub_1B2E839A8();
  if (!v18)
  {
    sub_1B299EBDC(v12);
    sub_1B2E839C8();
  }
  sub_1B2E839A8();
  if (!v19)
  {
    sub_1B299EBDC(v13);
    sub_1B2E839C8();
  }
  sub_1B2E839A8();
  if (!v20)
  {
    sub_1B299EBDC(v14);
    sub_1B2E839C8();
  }
  sub_1B2E839A8();
  if (!v21)
  {
    sub_1B299EBDC(v15);
    sub_1B2E839C8();
  }
  sub_1B2E839A8();
  if (!v22) {
    sub_1B2E839C8();
  }
  if (v5 == 5)
  {
    sub_1B2E839A8();
    if (v6) {
      goto LABEL_22;
    }
  }
  else
  {
    sub_1B2E839A8();
    sub_1B2E839B8();
    if (v6)
    {
LABEL_22:
      sub_1B2E839A8();
      swift_bridgeObjectRetain();
      sub_1B2E82498();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_23;
      }
LABEL_27:
      sub_1B2E839A8();
      sub_1B2E839C8();
      if (!v8) {
        goto LABEL_24;
      }
      return sub_1B2E839A8();
    }
  }
  sub_1B2E839A8();
  if (!v7) {
    goto LABEL_27;
  }
LABEL_23:
  sub_1B2E839A8();
  if (!v8)
  {
LABEL_24:
    sub_1B2E839A8();
    return sub_1B2E839C8();
  }
  return sub_1B2E839A8();
}

uint64_t sub_1B2E01A0C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656D6954646E65 && a2 == 0xE700000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6F6973756C636E69 && a2 == 0xED0000657079546ELL;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001B2EA49D0 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001B2EA49F0 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x80000001B2EA4A10 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x80000001B2EA4A30 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B2EA4A50 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B2EA4A70 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 8;
      }
      else
      {
        BOOL v8 = a1 == 0x6570795464616F72 && a2 == 0xE800000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 9;
        }
        else
        {
          BOOL v9 = a1 == 0x656D614E64616F72 && a2 == 0xE800000000000000;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else
          {
            BOOL v10 = a1 == 0x64496E696769726FLL && a2 == 0xE800000000000000;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else if (a1 == 0x74616E6974736564 && a2 == 0xED000064496E6F69)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else
            {
              char v12 = sub_1B2E837A8();
              swift_bridgeObjectRelease();
              if (v12) {
                return 12;
              }
              else {
                return 13;
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1B2E01F2C(char a1)
{
  unint64_t result = 0x6D69547472617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D6954646E65;
      break;
    case 2:
      unint64_t result = 0x6F6973756C636E69;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0x6570795464616F72;
      break;
    case 10:
      unint64_t result = 0x656D614E64616F72;
      break;
    case 11:
      unint64_t result = 0x64496E696769726FLL;
      break;
    case 12:
      unint64_t result = 0x74616E6974736564;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2E020D8()
{
  return sub_1B2E01F2C(*v0);
}

uint64_t sub_1B2E020E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2E01A0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2E02108(uint64_t a1)
{
  unint64_t v2 = sub_1B2E0251C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2E02144(uint64_t a1)
{
  unint64_t v2 = sub_1B2E0251C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void KTSQueryParams.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C44C08);
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = v2[3];
  BOOL v10 = v2;
  uint64_t v12 = v11;
  sub_1B29AEC7C(v10, v9);
  sub_1B2E0251C();
  sub_1B2E83A38();
  sub_1B2E83648();
  if (!v0)
  {
    sub_1B2E06970(1);
    sub_1B2E0697C();
    sub_1B2E02568();
    sub_1B2E06AAC();
    sub_1B2E06970(3);
    sub_1B2E0697C();
    sub_1B2E06970(4);
    sub_1B2E0697C();
    sub_1B2E06970(5);
    sub_1B2E0697C();
    sub_1B2E06970(6);
    sub_1B2E0697C();
    sub_1B2E06970(7);
    sub_1B2E0697C();
    sub_1B2E06970(8);
    sub_1B2E0697C();
    sub_1B2CEA668();
    sub_1B2E06AAC();
    sub_1B2E06970(10);
    sub_1B2E83628();
    sub_1B29CB42C();
    sub_1B2E06A3C();
    sub_1B2E06A3C();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v12);
  sub_1B29998C8();
}

unint64_t sub_1B2E0251C()
{
  unint64_t result = qword_1E9C44C10;
  if (!qword_1E9C44C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44C10);
  }
  return result;
}

unint64_t sub_1B2E02568()
{
  unint64_t result = qword_1E9C44C18;
  if (!qword_1E9C44C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44C18);
  }
  return result;
}

uint64_t KTSQueryParams.hashValue.getter()
{
  sub_1B29B1A78();
  KTSQueryParams.hash(into:)((uint64_t)v1);
  return sub_1B2E839E8();
}

void KTSQueryParams.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C44C20);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299F280();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2E0251C();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    uint64_t v41 = v4;
    uint64_t v6 = sub_1B29A10B4();
    char v8 = v7;
    uint64_t v40 = v6;
    char v101 = v7 & 1;
    uint64_t v39 = sub_1B29A10B4();
    char v99 = v9 & 1;
    char v38 = v9;
    sub_1B2E02C98();
    sub_1B2E069F8();
    uint64_t v37 = sub_1B29A10B4();
    char v96 = v10 & 1;
    sub_1B2E06AA0(4);
    char v36 = v11;
    uint64_t v35 = sub_1B29A10B4();
    char v94 = v12 & 1;
    sub_1B2E06AA0(5);
    char v34 = v13;
    uint64_t v33 = sub_1B29A10B4();
    char v92 = v14 & 1;
    sub_1B2E06AA0(6);
    char v32 = v15;
    uint64_t v31 = sub_1B29A10B4();
    char v30 = v16;
    char v90 = v16 & 1;
    uint64_t v29 = sub_1B29A10B4();
    char v27 = v17;
    char v88 = v17 & 1;
    LOBYTE(v43) = 8;
    uint64_t v28 = sub_1B29A10B4();
    char v26 = v18;
    char v86 = v18 & 1;
    sub_1B2CEB254();
    sub_1B2E069F8();
    sub_1B2E06AA0(10);
    uint64_t v25 = sub_1B2E83508();
    uint64_t v20 = v19;
    LOBYTE(v79) = 11;
    sub_1B29CB3E0();
    swift_bridgeObjectRetain();
    sub_1B2E83548();
    uint64_t v24 = v43;
    char v23 = v44;
    char v83 = v44;
    char v78 = 12;
    sub_1B2E83548();
    uint64_t v21 = sub_1B2E06958();
    v22(v21);
    uint64_t v102 = v79;
    char v81 = v80;
    char v42 = v80;
    *(void *)uint64_t v41 = v40;
    *(unsigned char *)(v41 + 8) = v8 & 1;
    *(void *)(v41 + 16) = v39;
    *(unsigned char *)(v41 + 24) = v38 & 1;
    *(unsigned char *)(v41 + 25) = 1;
    *(void *)(v41 + 32) = v37;
    *(unsigned char *)(v41 + 40) = v36 & 1;
    *(void *)(v41 + 48) = v35;
    *(unsigned char *)(v41 + 56) = v34 & 1;
    *(void *)(v41 + 64) = v33;
    *(unsigned char *)(v41 + 72) = v32 & 1;
    *(void *)(v41 + 80) = v31;
    *(unsigned char *)(v41 + 88) = v30 & 1;
    *(void *)(v41 + 96) = v29;
    *(unsigned char *)(v41 + 104) = v27 & 1;
    *(void *)(v41 + 112) = v28;
    *(unsigned char *)(v41 + 120) = v26 & 1;
    *(unsigned char *)(v41 + 121) = 8;
    *(void *)(v41 + 128) = v25;
    *(void *)(v41 + 136) = v20;
    *(void *)(v41 + 144) = v24;
    *(unsigned char *)(v41 + 152) = v23;
    *(void *)(v41 + 160) = v102;
    *(unsigned char *)(v41 + 168) = v42;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    uint64_t v43 = v40;
    char v44 = v101;
    *(_DWORD *)char v45 = *(_DWORD *)v100;
    *(_DWORD *)&v45[3] = *(_DWORD *)&v100[3];
    uint64_t v46 = v39;
    char v47 = v99;
    char v48 = 1;
    int v49 = v97;
    __int16 v50 = v98;
    uint64_t v51 = v37;
    char v52 = v96;
    *(_DWORD *)&v53[3] = *(_DWORD *)&v95[3];
    *(_DWORD *)char v53 = *(_DWORD *)v95;
    uint64_t v54 = v35;
    char v55 = v94;
    *(_DWORD *)char v56 = *(_DWORD *)v93;
    *(_DWORD *)&v56[3] = *(_DWORD *)&v93[3];
    uint64_t v57 = v33;
    char v58 = v92;
    *(_DWORD *)char v59 = *(_DWORD *)v91;
    *(_DWORD *)&v59[3] = *(_DWORD *)&v91[3];
    uint64_t v60 = v31;
    char v61 = v90;
    *(_DWORD *)&v62[3] = *(_DWORD *)&v89[3];
    *(_DWORD *)char v62 = *(_DWORD *)v89;
    uint64_t v63 = v29;
    char v64 = v88;
    *(_DWORD *)&v65[3] = *(_DWORD *)&v87[3];
    *(_DWORD *)char v65 = *(_DWORD *)v87;
    uint64_t v66 = v28;
    char v67 = v86;
    char v68 = 8;
    __int16 v70 = v85;
    int v69 = v84;
    uint64_t v71 = v25;
    uint64_t v72 = v20;
    uint64_t v73 = v24;
    char v74 = v83;
    *(_DWORD *)&uint64_t v75[3] = *(_DWORD *)&v82[3];
    *(_DWORD *)uint64_t v75 = *(_DWORD *)v82;
    uint64_t v76 = v102;
    char v77 = v81;
    sub_1B2D19BEC((uint64_t)&v43);
  }
  sub_1B29998C8();
}

void sub_1B2E02C24()
{
}

void sub_1B2E02C3C()
{
}

uint64_t sub_1B2E02C5C()
{
  sub_1B2E83988();
  KTSQueryParams.hash(into:)((uint64_t)v1);
  return sub_1B2E839E8();
}

unint64_t sub_1B2E02C98()
{
  unint64_t result = qword_1E9C44C28;
  if (!qword_1E9C44C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44C28);
  }
  return result;
}

BOOL static KTSQueryConstraint.== infix(_:_:)(uint64_t a1, double *a2)
{
  uint64_t v3 = *(uint64_t *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(uint64_t *)(a1 + 16);
  unsigned int v5 = *(unsigned __int16 *)(a1 + 24);
  double v7 = *a2;
  uint64_t v6 = *((void *)a2 + 1);
  double v8 = a2[2];
  unsigned int v9 = *((unsigned __int16 *)a2 + 12);
  switch(v5 >> 13)
  {
    case 1u:
      if ((v9 & 0xE000) == 0x2000) {
        goto LABEL_12;
      }
      goto LABEL_26;
    case 2u:
      if ((v9 & 0xE000) != 0x4000) {
        goto LABEL_26;
      }
      goto LABEL_12;
    case 3u:
      if ((v9 & 0xE000) != 0x6000) {
        goto LABEL_26;
      }
LABEL_12:
      if (v2)
      {
        if ((v6 & 1) == 0) {
          goto LABEL_27;
        }
      }
      else if ((v6 & 1) != 0 || *(double *)&v3 != v7)
      {
        goto LABEL_27;
      }
      if (v5)
      {
        if ((v9 & 1) == 0) {
          goto LABEL_27;
        }
        goto LABEL_29;
      }
      if ((v9 & 1) == 0 && *(double *)&v4 == v8)
      {
LABEL_29:
        int v13 = (v5 >> 8) & 0x1F;
        int v14 = (v9 >> 8) & 0x1F;
        goto LABEL_37;
      }
LABEL_27:
      sub_1B2E06914();
      return 0;
    case 4u:
      if ((v9 & 0xE000) != 0x8000) {
        goto LABEL_26;
      }
      sub_1B2E06914();
      return LOBYTE(v7) == v3;
    case 5u:
      double v11 = *(double *)a1;
      if ((v9 & 0xE000) == 0xA000)
      {
        char v12 = sub_1B2AA6AA8(*(void *)&v11, *(void *)a2);
        sub_1B2E06ACC();
        sub_1B2D19F00(v3, v2, v4, v5);
        goto LABEL_38;
      }
      swift_bridgeObjectRetain();
LABEL_26:
      sub_1B2E06ACC();
      goto LABEL_27;
    default:
      if (v9 >= 0x2000) {
        goto LABEL_26;
      }
      if (v2)
      {
        if ((v6 & 1) == 0) {
          goto LABEL_27;
        }
      }
      else if ((v6 & 1) != 0 || *(double *)&v3 != v7)
      {
        goto LABEL_27;
      }
      if (v5)
      {
        if ((v9 & 1) == 0) {
          goto LABEL_27;
        }
      }
      else if ((v9 & 1) != 0 || *(double *)&v4 != v8)
      {
        goto LABEL_27;
      }
      int v14 = v9 >> 8;
      int v13 = v5 >> 8;
LABEL_37:
      char v12 = sub_1B29ACEF0(v13, v14);
LABEL_38:
      sub_1B2E06914();
      return v12 & 1;
  }
}

uint64_t KTSQueryConstraint.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unsigned int v3 = *(unsigned __int16 *)(v1 + 24);
  switch(v3 >> 13)
  {
    case 1u:
      int v5 = (v3 >> 8) & 0x1F;
      goto LABEL_9;
    case 2u:
      int v5 = (v3 >> 8) & 0x1F;
      goto LABEL_9;
    case 3u:
      int v5 = (v3 >> 8) & 0x1F;
LABEL_9:
      sub_1B2E83998();
      if (v2)
      {
        sub_1B2E839A8();
        if (v3) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_1B2E839A8();
        sub_1B2E839C8();
        if (v3)
        {
LABEL_11:
          sub_1B2E839A8();
          goto LABEL_14;
        }
      }
      sub_1B2E839A8();
      sub_1B2E839C8();
LABEL_14:
      uint64_t v7 = a1;
      LOBYTE(v8) = v5;
      goto LABEL_21;
    case 4u:
      sub_1B2E83998();
      return sub_1B2E839B8();
    case 5u:
      sub_1B2E83998();
      return sub_1B2AB4ABC();
    default:
      sub_1B2E83998();
      if (v2)
      {
        sub_1B2E839A8();
        if (v3) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1B2E839A8();
        sub_1B2E839C8();
        if (v3)
        {
LABEL_4:
          sub_1B2E839A8();
          goto LABEL_20;
        }
      }
      sub_1B2E839A8();
      sub_1B2E839C8();
LABEL_20:
      unsigned int v8 = v3 >> 8;
      uint64_t v7 = a1;
LABEL_21:
      return sub_1B2AA649C(v7, v8);
  }
}

uint64_t sub_1B2E0306C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65636E6174736964 && a2 == 0xE800000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6F69746176656C65 && a2 == 0xED00006E6961476ELL;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6570795464616F72 && a2 == 0xE800000000000000;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x746573627573 && a2 == 0xE600000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = sub_1B2E837A8();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B2E0330C(char a1)
{
  uint64_t result = 0x676E6152656D6974;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65636E6174736964;
      break;
    case 2:
      uint64_t result = 0x6F69746176656C65;
      break;
    case 3:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 4:
      uint64_t result = 0x6570795464616F72;
      break;
    case 5:
      uint64_t result = 0x746573627573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2E033E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001B2EA49D0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001B2EA49F0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6973756C636E69 && a2 == 0xED0000657079546ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B2E03550(unsigned __int8 a1)
{
  uint64_t result = 0xD000000000000013;
  if (a1 >= 2u) {
    return 0x6F6973756C636E69;
  }
  return result;
}

uint64_t sub_1B2E035B8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001B2EA4A50 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001B2EA4A70 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6973756C636E69 && a2 == 0xED0000657079546ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B2E03724(unsigned __int8 a1)
{
  uint64_t result = 0xD000000000000014;
  if (a1 >= 2u) {
    return 0x6F6973756C636E69;
  }
  return result;
}

uint64_t sub_1B2E0378C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001B2EA4A10 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001B2EA4A30 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6973756C636E69 && a2 == 0xED0000657079546ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B2E038F8(unsigned __int8 a1)
{
  uint64_t result = 0xD000000000000018;
  if (a1 >= 2u) {
    return 0x6F6973756C636E69;
  }
  return result;
}

uint64_t sub_1B2E03960(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6570795464616F72 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2E039E8()
{
  return 0x6570795464616F72;
}

uint64_t sub_1B2E03A00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656D6954646E65 && a2 == 0xE700000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6F6973756C636E69 && a2 == 0xED0000657079546ELL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B2E03B80(char a1)
{
  if (!a1) {
    return 0x6D69547472617473;
  }
  if (a1 == 1) {
    return 0x656D6954646E65;
  }
  return 0x6F6973756C636E69;
}

uint64_t sub_1B2E03BE8()
{
  return sub_1B2E0330C(*v0);
}

uint64_t sub_1B2E03BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2E0306C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2E03C18(uint64_t a1)
{
  unint64_t v2 = sub_1B2E052FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2E03C54(uint64_t a1)
{
  unint64_t v2 = sub_1B2E052FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2E03C90()
{
  return sub_1B2E03550(*v0);
}

uint64_t sub_1B2E03C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2E033E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2E03CC0(uint64_t a1)
{
  unint64_t v2 = sub_1B2E05478();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2E03CFC(uint64_t a1)
{
  unint64_t v2 = sub_1B2E05478();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2E03D38()
{
  return sub_1B2E03724(*v0);
}

uint64_t sub_1B2E03D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2E035B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2E03D68(uint64_t a1)
{
  unint64_t v2 = sub_1B2E053E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2E03DA4(uint64_t a1)
{
  unint64_t v2 = sub_1B2E053E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2E03DE0()
{
  return sub_1B2E038F8(*v0);
}

uint64_t sub_1B2E03DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2E0378C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2E03E10(uint64_t a1)
{
  unint64_t v2 = sub_1B2E0542C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2E03E4C(uint64_t a1)
{
  unint64_t v2 = sub_1B2E0542C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2E03E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2E03960(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2E03EB8(uint64_t a1)
{
  unint64_t v2 = sub_1B2E05394();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2E03EF4(uint64_t a1)
{
  unint64_t v2 = sub_1B2E05394();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2E03F30(uint64_t a1)
{
  unint64_t v2 = sub_1B2E05348();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2E03F6C(uint64_t a1)
{
  unint64_t v2 = sub_1B2E05348();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2E03FA8()
{
  return sub_1B2E03B80(*v0);
}

uint64_t sub_1B2E03FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2E03A00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2E03FD8(uint64_t a1)
{
  unint64_t v2 = sub_1B2E054C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2E04014(uint64_t a1)
{
  unint64_t v2 = sub_1B2E054C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void KTSQueryConstraint.encode(to:)()
{
  sub_1B299F300();
  char v3 = v2;
  sub_1B29A3EB4(&qword_1E9C44C30);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B2AC9E30(v5, v21);
  sub_1B29A3EB4(&qword_1E9C44C38);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C44C40);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C44C48);
  sub_1B299D278();
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C44C50);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C44C58);
  sub_1B299D278();
  MEMORY[0x1F4188790](v10);
  sub_1B299F280();
  sub_1B29A3EB4(&qword_1E9C44C60);
  sub_1B299D278();
  MEMORY[0x1F4188790](v11);
  sub_1B299E4A0();
  unsigned int v12 = *(unsigned __int16 *)(v0 + 24);
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2E052FC();
  sub_1B2E83A38();
  switch(v12 >> 13)
  {
    case 1u:
      sub_1B2E05478();
      sub_1B2E83618();
      sub_1B29A54D8();
      sub_1B2E83648();
      if (!v1)
      {
        sub_1B2E83648();
        sub_1B2E069C0(BYTE1(v12) & 0x1F);
        sub_1B2E836D8();
      }
      sub_1B2AC9FB0();
      sub_1B299B798();
      v14(v13);
      goto LABEL_19;
    case 2u:
      sub_1B2E0542C();
      sub_1B2E069DC();
      sub_1B29A54D8();
      sub_1B2E83648();
      if (!v1)
      {
        sub_1B2E06A20();
        sub_1B2E83648();
        sub_1B2E069C0(BYTE1(v12) & 0x1F);
        sub_1B2E836D8();
      }
      sub_1B2AC9FB0();
      goto LABEL_18;
    case 3u:
      sub_1B2E053E0();
      sub_1B2E069DC();
      sub_1B29A54D8();
      sub_1B2E83648();
      if (!v1)
      {
        sub_1B2E83648();
        sub_1B2E069C0(BYTE1(v12) & 0x1F);
        sub_1B2E836D8();
      }
      sub_1B2AC9FB0();
      goto LABEL_18;
    case 4u:
      sub_1B2E05394();
      sub_1B2E069DC();
      sub_1B2CEA668();
      sub_1B2E836D8();
      goto LABEL_18;
    case 5u:
      sub_1B2E05348();
      sub_1B2E83618();
      sub_1B29A3EB4(&qword_1E9C38970);
      sub_1B2E05510(&qword_1E9C3C710, (void (*)(void))sub_1B29CB42C);
      sub_1B2E836D8();
      sub_1B299B798();
      v20(v19);
      goto LABEL_19;
    default:
      sub_1B2E054C4();
      sub_1B2E069DC();
      sub_1B29A54D8();
      sub_1B2E83648();
      if (!v1)
      {
        sub_1B2E06A20();
        sub_1B2E83648();
        sub_1B2E069C0(SBYTE1(v12));
        sub_1B2E836D8();
      }
LABEL_18:
      sub_1B299B798();
      v16(v15);
LABEL_19:
      sub_1B299B798();
      v18(v17);
      sub_1B29998C8();
      return;
  }
}

uint64_t KTSQueryConstraint.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  __int16 v2 = *((_WORD *)v0 + 12);
  long long v5 = *v0;
  uint64_t v6 = v1;
  __int16 v7 = v2;
  sub_1B29B1A78();
  KTSQueryConstraint.hash(into:)((uint64_t)v4);
  return sub_1B2E839E8();
}

void KTSQueryConstraint.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  unsigned int v12 = v11;
  uint64_t v72 = v13;
  sub_1B29A3EB4(&qword_1E9C44CA0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v14);
  sub_1B299B6D0();
  uint64_t v71 = v15;
  sub_1B29A3EB4(&qword_1E9C44CA8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v16);
  sub_1B2AC9E30(v17, v70);
  sub_1B29A3EB4(&qword_1E9C44CB0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v18);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C44CB8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v19);
  sub_1B299B6D0();
  uint64_t v73 = v20;
  sub_1B29A3EB4(&qword_1E9C44CC0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v21);
  sub_1B299E4A0();
  uint64_t v24 = v23 - v22;
  sub_1B29A3EB4(&qword_1E9C44CC8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v25);
  sub_1B299F280();
  uint64_t v26 = sub_1B29A3EB4(&qword_1E9C44CD0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v27);
  sub_1B299E4A0();
  char v30 = v29 - v28;
  uint64_t v79 = v12;
  sub_1B29AEC7C(v12, v12[3]);
  sub_1B2E052FC();
  sub_1B2E83A18();
  if (v10) {
    goto LABEL_12;
  }
  uint64_t v31 = v73;
  uint64_t v32 = sub_1B2E835F8();
  if (!*(void *)(v32 + 16)
    || (uint64_t v33 = *(unsigned __int8 *)(v32 + 32),
        sub_1B29B142C(1),
        uint64_t v35 = v34,
        unint64_t v37 = v36,
        swift_bridgeObjectRelease(),
        v35 != v37 >> 1))
  {
    uint64_t v39 = sub_1B2E83288();
    swift_allocError();
    uint64_t v41 = v40;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v41 = &type metadata for KTSQueryConstraint;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v39 - 8) + 104))(v41, *MEMORY[0x1E4FBBA70], v39);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v42 = sub_1B2E06A90();
    v46(v42, v26);
LABEL_12:
    uint64_t v67 = (uint64_t)v79;
    goto LABEL_13;
  }
  switch(v33)
  {
    case 1:
      sub_1B2E05478();
      uint64_t v31 = v24;
      sub_1B29A2440();
      sub_1B2E06A80();
      sub_1B2E83528();
      uint64_t v49 = sub_1B2E06994();
      char v77 = v50;
      sub_1B2E06A64(v49);
      sub_1B299FD18();
      sub_1B299B798();
      v68();
      swift_unknownObjectRelease();
      sub_1B299B798();
      v69();
      __int16 v66 = v77 & 1 | 0x2100;
      goto LABEL_14;
    case 2:
      sub_1B2E0542C();
      sub_1B29A2440();
      sub_1B2E06A80();
      sub_1B2E83528();
      uint64_t v51 = sub_1B2E06994();
      char v78 = v52;
      sub_1B2E06A64(v51);
      sub_1B299FD18();
      sub_1B299B798();
      v62();
      swift_unknownObjectRelease();
      sub_1B299B798();
      v63();
      __int16 v66 = v78 & 1 | 0x4200;
      goto LABEL_14;
    case 3:
      sub_1B2E053E0();
      sub_1B29A2440();
      sub_1B2E06A80();
      uint64_t v31 = sub_1B2E83528();
      char v30 = v43;
      uint64_t v44 = sub_1B2E83528();
      char v74 = v45;
      sub_1B2E06A64(v44);
      sub_1B299FD18();
      sub_1B299B798();
      v60();
      swift_unknownObjectRelease();
      sub_1B299B798();
      v61();
      __int16 v66 = v74 & 1 | 0x6100;
LABEL_14:
      uint64_t v67 = (uint64_t)v79;
      uint64_t v59 = v71;
      break;
    case 4:
      sub_1B2E05394();
      sub_1B29A2440();
      sub_1B2CEB254();
      sub_1B2E835B8();
      sub_1B299B798();
      v53();
      swift_unknownObjectRelease();
      sub_1B2E06A90();
      sub_1B299B798();
      v54();
      char v30 = 0;
      uint64_t v59 = 0;
      uint64_t v31 = 4;
      __int16 v66 = 0x8000;
      uint64_t v67 = (uint64_t)v79;
      break;
    case 5:
      LOBYTE(a10) = 5;
      sub_1B2E05348();
      sub_1B29A2440();
      sub_1B29A3EB4(&qword_1E9C38970);
      sub_1B2E05510(&qword_1E9C3C760, (void (*)(void))sub_1B29CB3E0);
      sub_1B2E835B8();
      sub_1B299B798();
      v55();
      swift_unknownObjectRelease();
      uint64_t v56 = sub_1B299BE08();
      v57(v56);
      char v30 = 0;
      uint64_t v59 = 0;
      uint64_t v31 = a10;
      __int16 v66 = -24576;
      uint64_t v67 = (uint64_t)v79;
      break;
    default:
      sub_1B2E054C4();
      sub_1B29A2440();
      uint64_t v38 = sub_1B2E83528();
      char v30 = v47;
      uint64_t v76 = v38;
      uint64_t v48 = sub_1B2E83528();
      char v75 = v58;
      uint64_t v59 = v48;
      sub_1B2E02C98();
      sub_1B2E835B8();
      sub_1B299B798();
      v64();
      swift_unknownObjectRelease();
      sub_1B299B798();
      v65();
      __int16 v66 = v75 & 1 | 0x100;
      uint64_t v31 = v76;
      uint64_t v67 = (uint64_t)v79;
      break;
  }
  *(void *)uint64_t v72 = v31;
  *(void *)(v72 + 8) = v30 & 1;
  *(void *)(v72 + 16) = v59;
  *(_WORD *)(v72 + 24) = v66;
LABEL_13:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v67);
  sub_1B29998C8();
}

void sub_1B2E0526C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  KTSQueryConstraint.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1B2E05284()
{
}

uint64_t sub_1B2E052A4()
{
  uint64_t v1 = *((void *)v0 + 2);
  __int16 v2 = *((_WORD *)v0 + 12);
  long long v5 = *v0;
  uint64_t v6 = v1;
  __int16 v7 = v2;
  sub_1B2E83988();
  KTSQueryConstraint.hash(into:)((uint64_t)v4);
  return sub_1B2E839E8();
}

unint64_t sub_1B2E052FC()
{
  unint64_t result = qword_1E9C44C68;
  if (!qword_1E9C44C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44C68);
  }
  return result;
}

unint64_t sub_1B2E05348()
{
  unint64_t result = qword_1E9C44C70;
  if (!qword_1E9C44C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44C70);
  }
  return result;
}

unint64_t sub_1B2E05394()
{
  unint64_t result = qword_1E9C44C78;
  if (!qword_1E9C44C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44C78);
  }
  return result;
}

unint64_t sub_1B2E053E0()
{
  unint64_t result = qword_1E9C44C80;
  if (!qword_1E9C44C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44C80);
  }
  return result;
}

unint64_t sub_1B2E0542C()
{
  unint64_t result = qword_1E9C44C88;
  if (!qword_1E9C44C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44C88);
  }
  return result;
}

unint64_t sub_1B2E05478()
{
  unint64_t result = qword_1E9C44C90;
  if (!qword_1E9C44C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44C90);
  }
  return result;
}

unint64_t sub_1B2E054C4()
{
  unint64_t result = qword_1E9C44C98;
  if (!qword_1E9C44C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44C98);
  }
  return result;
}

uint64_t sub_1B2E05510(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(&qword_1E9C38970);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2E05584()
{
  unint64_t result = qword_1E9C44CD8;
  if (!qword_1E9C44CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44CD8);
  }
  return result;
}

unint64_t sub_1B2E055D4()
{
  unint64_t result = qword_1E9C44CE0;
  if (!qword_1E9C44CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44CE0);
  }
  return result;
}

unint64_t sub_1B2E05624()
{
  unint64_t result = qword_1E9C44CE8;
  if (!qword_1E9C44CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44CE8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InclusionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2E0573CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for InclusionType()
{
}

uint64_t destroy for KTSQueryParams()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KTSQueryParams(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v3 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  uint64_t v4 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v4;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for KTSQueryParams(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
  uint64_t v6 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = a2[12];
  *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = a2[14];
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(void *)(a1 + 112) = v11;
  *(unsigned char *)(a1 + 121) = *((unsigned char *)a2 + 121);
  *(void *)(a1 + 128) = a2[16];
  *(void *)(a1 + 136) = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[18];
  *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
  *(void *)(a1 + 144) = v12;
  uint64_t v13 = a2[20];
  *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
  *(void *)(a1 + 160) = v13;
  return a1;
}

void *initializeWithTake for KTSQueryParams(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA9uLL);
}

uint64_t assignWithTake for KTSQueryParams(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  uint64_t v5 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  return a1;
}

uint64_t getEnumTagSinglePayload for KTSQueryParams(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 169))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 136);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KTSQueryParams(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 168) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 169) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 169) = 0;
    }
    if (a2) {
      *(void *)(result + 136) = a2;
    }
  }
  return result;
}

void type metadata accessor for KTSQueryParams()
{
}

uint64_t destroy for KTSQueryConstraint(uint64_t a1)
{
  return sub_1B2D19F14(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(_WORD *)(a1 + 24));
}

uint64_t initializeWithCopy for KTSQueryConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  __int16 v6 = *(_WORD *)(a2 + 24);
  sub_1B2D19F00(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for KTSQueryConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  __int16 v6 = *(_WORD *)(a2 + 24);
  sub_1B2D19F00(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  __int16 v10 = *(_WORD *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v6;
  sub_1B2D19F14(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for KTSQueryConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  __int16 v4 = *(_WORD *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  __int16 v8 = *(_WORD *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v4;
  sub_1B2D19F14(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for KTSQueryConstraint(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 26))
    {
      int v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *(void *)(a1 + 8) >> 1;
      if (v2 > 0x80000000) {
        int v3 = ~v2;
      }
      else {
        int v3 = -1;
      }
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for KTSQueryConstraint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 2 * -a2;
      *(void *)(result + 16) = 0;
      *(_WORD *)(result + 24) = 0;
      return result;
    }
    *(unsigned char *)(result + 26) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1B2E05CD4(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 24) >> 13;
}

uint64_t sub_1B2E05CE0(uint64_t result)
{
  *(_WORD *)(result + 24) &= 0x1FFFu;
  return result;
}

uint64_t sub_1B2E05CF0(uint64_t result, __int16 a2)
{
  __int16 v2 = *(_WORD *)(result + 24) & 0x701 | (a2 << 13);
  *(void *)(result + 8) &= 1uLL;
  *(_WORD *)(result + 24) = v2;
  return result;
}

void type metadata accessor for KTSQueryConstraint()
{
}

unsigned char *storeEnumTagSinglePayload for KTSQueryConstraint.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2E05DECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.CodingKeys()
{
  return &type metadata for KTSQueryConstraint.CodingKeys;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.TimeRangeCodingKeys()
{
  return &type metadata for KTSQueryConstraint.TimeRangeCodingKeys;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.DistanceCodingKeys()
{
  return &type metadata for KTSQueryConstraint.DistanceCodingKeys;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.ElevationGainCodingKeys()
{
  return &type metadata for KTSQueryConstraint.ElevationGainCodingKeys;
}

unsigned char *_s20IntelligencePlatform18KTSQueryConstraintO19TimeRangeCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2E05F24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.DurationCodingKeys()
{
  return &type metadata for KTSQueryConstraint.DurationCodingKeys;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.RoadTypeCodingKeys()
{
  return &type metadata for KTSQueryConstraint.RoadTypeCodingKeys;
}

unsigned char *_s20IntelligencePlatform18KTSQueryConstraintO18RoadTypeCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2E0600CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.SubsetCodingKeys()
{
  return &type metadata for KTSQueryConstraint.SubsetCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for KTSQueryParams.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2E06110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KTSQueryParams.CodingKeys()
{
  return &type metadata for KTSQueryParams.CodingKeys;
}

unint64_t sub_1B2E0614C()
{
  unint64_t result = qword_1E9C44CF0;
  if (!qword_1E9C44CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44CF0);
  }
  return result;
}

unint64_t sub_1B2E0619C()
{
  unint64_t result = qword_1E9C44CF8;
  if (!qword_1E9C44CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44CF8);
  }
  return result;
}

unint64_t sub_1B2E061EC()
{
  unint64_t result = qword_1E9C44D00;
  if (!qword_1E9C44D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D00);
  }
  return result;
}

unint64_t sub_1B2E0623C()
{
  unint64_t result = qword_1E9C44D08;
  if (!qword_1E9C44D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D08);
  }
  return result;
}

unint64_t sub_1B2E0628C()
{
  unint64_t result = qword_1E9C44D10;
  if (!qword_1E9C44D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D10);
  }
  return result;
}

unint64_t sub_1B2E062DC()
{
  unint64_t result = qword_1E9C44D18;
  if (!qword_1E9C44D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D18);
  }
  return result;
}

unint64_t sub_1B2E0632C()
{
  unint64_t result = qword_1E9C44D20;
  if (!qword_1E9C44D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D20);
  }
  return result;
}

unint64_t sub_1B2E0637C()
{
  unint64_t result = qword_1E9C44D28;
  if (!qword_1E9C44D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D28);
  }
  return result;
}

unint64_t sub_1B2E063CC()
{
  unint64_t result = qword_1E9C44D30;
  if (!qword_1E9C44D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D30);
  }
  return result;
}

unint64_t sub_1B2E0641C()
{
  unint64_t result = qword_1E9C44D38;
  if (!qword_1E9C44D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D38);
  }
  return result;
}

unint64_t sub_1B2E0646C()
{
  unint64_t result = qword_1E9C44D40;
  if (!qword_1E9C44D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D40);
  }
  return result;
}

unint64_t sub_1B2E064BC()
{
  unint64_t result = qword_1E9C44D48;
  if (!qword_1E9C44D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D48);
  }
  return result;
}

unint64_t sub_1B2E0650C()
{
  unint64_t result = qword_1E9C44D50;
  if (!qword_1E9C44D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D50);
  }
  return result;
}

unint64_t sub_1B2E0655C()
{
  unint64_t result = qword_1E9C44D58;
  if (!qword_1E9C44D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D58);
  }
  return result;
}

unint64_t sub_1B2E065AC()
{
  unint64_t result = qword_1E9C44D60;
  if (!qword_1E9C44D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D60);
  }
  return result;
}

unint64_t sub_1B2E065FC()
{
  unint64_t result = qword_1E9C44D68;
  if (!qword_1E9C44D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D68);
  }
  return result;
}

unint64_t sub_1B2E0664C()
{
  unint64_t result = qword_1E9C44D70;
  if (!qword_1E9C44D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D70);
  }
  return result;
}

unint64_t sub_1B2E0669C()
{
  unint64_t result = qword_1E9C44D78;
  if (!qword_1E9C44D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D78);
  }
  return result;
}

unint64_t sub_1B2E066EC()
{
  unint64_t result = qword_1E9C44D80;
  if (!qword_1E9C44D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D80);
  }
  return result;
}

unint64_t sub_1B2E0673C()
{
  unint64_t result = qword_1E9C44D88;
  if (!qword_1E9C44D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D88);
  }
  return result;
}

unint64_t sub_1B2E0678C()
{
  unint64_t result = qword_1E9C44D90;
  if (!qword_1E9C44D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D90);
  }
  return result;
}

unint64_t sub_1B2E067DC()
{
  unint64_t result = qword_1E9C44D98;
  if (!qword_1E9C44D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44D98);
  }
  return result;
}

unint64_t sub_1B2E0682C()
{
  unint64_t result = qword_1E9C44DA0;
  if (!qword_1E9C44DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44DA0);
  }
  return result;
}

unint64_t sub_1B2E0687C()
{
  unint64_t result = qword_1E9C44DA8;
  if (!qword_1E9C44DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44DA8);
  }
  return result;
}

unint64_t sub_1B2E068C8()
{
  unint64_t result = qword_1E9C44DB0[0];
  if (!qword_1E9C44DB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C44DB0);
  }
  return result;
}

uint64_t sub_1B2E06914()
{
  sub_1B2D19F14(v7, v6, v5, v4);
  return sub_1B2D19F14(v3, v2, v1, v0);
}

uint64_t sub_1B2E06958()
{
  return v0;
}

void sub_1B2E06970(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
}

uint64_t sub_1B2E0697C()
{
  return sub_1B2E83648();
}

uint64_t sub_1B2E06994()
{
  *(unsigned char *)(v0 - 72) = 1;
  return sub_1B2E83528();
}

unint64_t sub_1B2E069C0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  *(unsigned char *)(v1 - 89) = 2;
  return sub_1B2E02568();
}

uint64_t sub_1B2E069DC()
{
  return sub_1B2E83618();
}

uint64_t sub_1B2E069F8()
{
  return sub_1B2E83548();
}

uint64_t sub_1B2E06A20()
{
  *(unsigned char *)(v0 - 72) = 1;
  return *(void *)(v0 - 136);
}

uint64_t sub_1B2E06A3C()
{
  return sub_1B2E83668();
}

unint64_t sub_1B2E06A64(uint64_t a1)
{
  *(void *)(v1 - 152) = a1;
  *(unsigned char *)(v1 - 89) = 2;
  return sub_1B2E02C98();
}

uint64_t sub_1B2E06A80()
{
  *(unsigned char *)(v0 - 72) = 0;
  return v0 - 72;
}

uint64_t sub_1B2E06A90()
{
  return v0;
}

uint64_t sub_1B2E06AA0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 232) = a1;
  return v1 + 232;
}

uint64_t sub_1B2E06AAC()
{
  return sub_1B2E83668();
}

uint64_t sub_1B2E06ACC()
{
  return sub_1B2D19F00(v3, v2, v1, v0);
}

uint64_t TypedEntityIdentifier.cast<A>(as:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, void *a3@<X8>)
{
  uint64_t v5 = *v3;
  return TypedEntityIdentifier.init(untyped:)(&v5, a1, a2, a3);
}

BOOL static TypedEntityIdentifier.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t TypedEntityIdentifier.init(untyped:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a1;
  EntityClass.init(intValue:)(HIBYTE(*a1), (uint64_t)&v21);
  uint64_t v8 = *((void *)&v21 + 1);
  if (*((void *)&v21 + 1))
  {
    uint64_t v9 = v21;
    long long v10 = v22;
    int v27 = v23;
    static GraphObjectBase.entityClass.getter(a2, *(void *)(a3 + 8));
    v24[0] = v21;
    v24[1] = v22;
    uint64_t v11 = v23;
    unsigned __int8 v25 = v23;
    if ((void)v22 == (void)v10 && *((void *)&v10 + 1) == *((void *)&v22 + 1)) {
      goto LABEL_8;
    }
    uint64_t v13 = v21;
    uint64_t v19 = v22;
    uint64_t v20 = *((void *)&v21 + 1);
    uint64_t v18 = *((void *)&v22 + 1);
    if (sub_1B2E837A8()) {
      goto LABEL_8;
    }
    *(void *)&long long v21 = v9;
    *((void *)&v21 + 1) = v8;
    long long v22 = v10;
    unsigned __int8 v23 = v27;
    EntityClass.ancestorClassesSet.getter();
    sub_1B29FB9A8();
    int v26 = v14;
    swift_bridgeObjectRelease();
    if (v26)
    {
LABEL_8:
      sub_1B29D1EF4(v9, v8);
      uint64_t result = sub_1B29C5E2C((uint64_t)v24);
      *a4 = v7;
      return result;
    }
    sub_1B29D1EA8();
    swift_allocError();
    *(void *)uint64_t v17 = v13;
    *(void *)(v17 + 8) = v20;
    *(void *)(v17 + 16) = v19;
    *(void *)(v17 + 24) = v18;
    *(void *)(v17 + 32) = v11;
    *(void *)(v17 + 40) = v9;
    *(void *)(v17 + 48) = v8;
    *(_OWORD *)(v17 + 56) = v10;
    *(unsigned char *)(v17 + 72) = v27;
  }
  else
  {
    sub_1B29D1EA8();
    swift_allocError();
    *uint64_t v16 = xmmword_1B2EC00B0;
    v16[1] = 0u;
    id v16[2] = 0u;
    v16[3] = 0u;
    *(_OWORD *)((char *)v16 + 57) = 0u;
  }
  return swift_willThrow();
}

uint64_t sub_1B2E06D08()
{
  return sub_1B2E82688();
}

uint64_t EntityIdentifier.typed<A>(as:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *v3;
  return TypedEntityIdentifier.init(untyped:)(&v5, a1, a2, a3);
}

#error "1B2E06DDC: call analysis failed (funcsize=8)"

void TypedEntityIdentifier<>.init(objectiveCGraphObjectEntityIdentifier:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  id v8 = objc_msgSend(a1, sel_intValue);
  sub_1B2E06F94((uint64_t *)&v8, a2, *(void *)(a3 + 8), &v9);

  *a4 = v9;
}

id TypedEntityIdentifier<>.objectiveCGraphObjectEntityIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_getAssociatedTypeWitness();
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithValue_, v1);
  if (!result) {
    __break(1u);
  }
  return result;
}

#error "1B2E06EC4: call analysis failed (funcsize=8)"

uint64_t TypedEntityIdentifier.init(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  EntityIdentifier.init(_:)(a1, a2, (uint64_t)&v12);
  if (v13 == 1)
  {
    sub_1B29D1EA8();
    swift_allocError();
    *uint64_t v9 = 0u;
    v9[1] = 0u;
    v9[2] = 0u;
    v9[3] = 0u;
    *(_OWORD *)((char *)v9 + 57) = 0u;
    return swift_willThrow();
  }
  else
  {
    uint64_t v11 = v12;
    uint64_t result = TypedEntityIdentifier.init(untyped:)(&v11, a3, a4, &v12);
    if (!v5) {
      *a5 = v12;
    }
  }
  return result;
}

uint64_t sub_1B2E06F94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t result = TypedEntityIdentifier.init(untyped:)(&v6, a2, a3, &v7);
  *a4 = v7;
  return result;
}

void TypedEntityIdentifier.untyped.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t TypedEntityIdentifier.hash(into:)()
{
  return sub_1B2E839C8();
}

uint64_t sub_1B2E071BC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x64657079746E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2E07244()
{
  return 0x64657079746E75;
}

uint64_t sub_1B2E0725C()
{
  return _s20IntelligencePlatform34LocationEmbedderInferenceInterfaceO6ErrorsO9InitErrorO9hashValueSivg_0();
}

uint64_t sub_1B2E07268()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2E072AC()
{
  return sub_1B2E07244();
}

uint64_t sub_1B2E072B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2E071BC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2E072EC()
{
  return sub_1B29A782C();
}

uint64_t sub_1B2E07310(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2E07364(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t TypedEntityIdentifier.encode(to:)(void *a1)
{
  type metadata accessor for TypedEntityIdentifier.CodingKeys();
  swift_getWitnessTable();
  sub_1B2E83718();
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v14 - v6;
  uint64_t v8 = *v1;
  uint64_t v9 = a1[3];
  long long v10 = a1;
  uint64_t v12 = v11;
  sub_1B29AEC7C(v10, v9);
  sub_1B2E83A38();
  v14[3] = v8;
  sub_1B29CB42C();
  sub_1B2E836D8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v12);
}

uint64_t type metadata accessor for TypedEntityIdentifier.CodingKeys()
{
  return sub_1B29A1278();
}

uint64_t TypedEntityIdentifier.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t TypedEntityIdentifier.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for TypedEntityIdentifier.CodingKeys();
  swift_getWitnessTable();
  sub_1B2E83608();
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2E83A18();
  if (!v2)
  {
    sub_1B29CB3E0();
    sub_1B2E835B8();
    uint64_t v5 = sub_1B29A2460();
    v6(v5);
    *a2 = v9;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
}

uint64_t sub_1B2E076E0()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2E07720@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return TypedEntityIdentifier.init(from:)(a1, a2);
}

uint64_t sub_1B2E07740(void *a1)
{
  return TypedEntityIdentifier.encode(to:)(a1);
}

uint64_t Sequence.filter<A, B>(by:)()
{
  return sub_1B2E82688();
}

void sub_1B2E077D4(uint64_t a1@<X3>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  TypedEntityIdentifier.cast<A>(as:)(a1, a2, &v6);
  if (v3)
  {

    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = v6;
  }
  *(void *)a3 = v5;
  *(unsigned char *)(a3 + 8) = v3 != 0;
}

void sub_1B2E0784C(uint64_t a1@<X8>)
{
  sub_1B2E077D4(*(void *)(v1 + 32), *(void *)(v1 + 56), a1);
}

uint64_t type metadata accessor for TypedEntityIdentifier()
{
  return sub_1B29A1278();
}

void sub_1B2E07888(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  EntityIdentifier.typed<A>(as:)(a1, a2, &v6);
  if (v3)
  {

    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = v6;
  }
  *(void *)a3 = v5;
  *(unsigned char *)(a3 + 8) = v3 != 0;
}

void EntityIdentifier.entity<A>(from:)()
{
}

#error "1B2E07938: call analysis failed (funcsize=9)"

#error "1B2E0795C: call analysis failed (funcsize=9)"

#error "1B2E07980: call analysis failed (funcsize=9)"

uint64_t EntityIdentifier.graphObject<A>(from:)()
{
  return GraphObjectContextProtocol.graphObject(forUntyped:)();
}

{
  sub_1B299E21C();
  return GraphObjectContextProtocol.graphObject<>(forUntyped:)();
}

uint64_t sub_1B2E079D8()
{
  return swift_getWitnessTable();
}

unint64_t destroy for TypedEntityIdentifierError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for TypedEntityIdentifierError(void *__dst, void *a2)
{
  unint64_t v3 = a2[1];
  if (v3 < 0xFFFFFFFF)
  {
    memcpy(__dst, a2, 0x49uLL);
  }
  else
  {
    *__dst = *a2;
    __dst[1] = v3;
    uint64_t v4 = a2[3];
    __dst[2] = a2[2];
    __dst[3] = v4;
    *((unsigned char *)__dst + 32) = *((unsigned char *)a2 + 32);
    uint64_t v5 = a2[6];
    __dst[5] = a2[5];
    __dst[6] = v5;
    uint64_t v6 = a2[8];
    __dst[7] = a2[7];
    __dst[8] = v6;
    *((unsigned char *)__dst + 72) = *((unsigned char *)a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return __dst;
}

void *assignWithCopy for TypedEntityIdentifierError(void *__dst, void *__src)
{
  unint64_t v4 = __src[1];
  if (__dst[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *__dst = *__src;
      __dst[1] = __src[1];
      __dst[2] = __src[2];
      __dst[3] = __src[3];
      *((unsigned char *)__dst + 32) = *((unsigned char *)__src + 32);
      __dst[5] = __src[5];
      __dst[6] = __src[6];
      __dst[7] = __src[7];
      __dst[8] = __src[8];
      *((unsigned char *)__dst + 72) = *((unsigned char *)__src + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return __dst;
    }
LABEL_7:
    memcpy(__dst, __src, 0x49uLL);
    return __dst;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *__dst = *__src;
  __dst[1] = __src[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[2] = __src[2];
  __dst[3] = __src[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)__dst + 32) = *((unsigned char *)__src + 32);
  __dst[5] = __src[5];
  __dst[6] = __src[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[7] = __src[7];
  __dst[8] = __src[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)__dst + 72) = *((unsigned char *)__src + 72);
  return __dst;
}

void *assignWithTake for TypedEntityIdentifierError(void *__dst, void *__src)
{
  if (__dst[1] < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = __src[1];
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    memcpy(__dst, __src, 0x49uLL);
    return __dst;
  }
  *__dst = *__src;
  __dst[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = __src[3];
  __dst[2] = __src[2];
  __dst[3] = v5;
  swift_bridgeObjectRelease();
  *((unsigned char *)__dst + 32) = *((unsigned char *)__src + 32);
  uint64_t v6 = __src[6];
  __dst[5] = __src[5];
  __dst[6] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = __src[8];
  __dst[7] = __src[7];
  __dst[8] = v7;
  swift_bridgeObjectRelease();
  *((unsigned char *)__dst + 72) = *((unsigned char *)__src + 72);
  return __dst;
}

uint64_t getEnumTagSinglePayload for TypedEntityIdentifierError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TypedEntityIdentifierError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 57) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

double sub_1B2E07E04(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 72) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TypedEntityIdentifierError()
{
  return &type metadata for TypedEntityIdentifierError;
}

unsigned char *sub_1B2E07E4C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2E07EE8);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2E07F10()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2E07F2C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2E07F48()
{
  return swift_getWitnessTable();
}

void sub_1B2E07F64(uint64_t a1@<X8>)
{
  sub_1B2E07888(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1B2E07F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a10 = *v20;
  uint64_t v23 = *(void *)(a2 + 16);
  uint64_t v24 = *(void *)(a2 + 24);
  GraphObjectBareContextProtocol.graphObject<A>(for:)((uint64_t)&a10, a3, v23, a4, v24, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t sub_1B2E07FB4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1B2E0808C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(a3 + 40);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v5 + 64) + v8;
  uint64_t v11 = *(void *)(v7 + 64);
  int v12 = *(_DWORD *)(v5 + 80) | v8;
  uint64_t v13 = v12;
  int v14 = v12 & 0x100000;
  if (v13 > 7 || v14 != 0 || v11 + (v10 & (unint64_t)~v9) + 1 > 0x18)
  {
    uint64_t v17 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v17 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  else
  {
    uint64_t v18 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v19 = ((unint64_t)a2 + v10) & v18;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v18, v19, v6);
    *(unsigned char *)((((unint64_t)v4 + v10) & v18) + v11) = *(unsigned char *)(v19 + v11);
  }
  return v4;
}

uint64_t sub_1B2E08204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 40) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_1B2E082A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 40) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  *(unsigned char *)(*(void *)(v9 + 48) + v12) = *(unsigned char *)(*(void *)(v9 + 48) + v13);
  return a1;
}

uint64_t sub_1B2E08364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 40) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  *(unsigned char *)(*(void *)(v9 + 40) + v12) = *(unsigned char *)(*(void *)(v9 + 40) + v13);
  return a1;
}

uint64_t sub_1B2E08420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 40) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  *(unsigned char *)(*(void *)(v9 + 32) + v12) = *(unsigned char *)(*(void *)(v9 + 32) + v13);
  return a1;
}

uint64_t sub_1B2E084DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 40) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  *(unsigned char *)(*(void *)(v9 + 24) + v12) = *(unsigned char *)(*(void *)(v9 + 24) + v13);
  return a1;
}

uint64_t sub_1B2E08598(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  unsigned int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(a3 + 40);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= v5) {
    unsigned int v9 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
  if (v9 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = v9;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)(v4 - 8) + 64) + v10;
  int v14 = a2 - v12;
  if (a2 <= v12) {
    goto LABEL_27;
  }
  uint64_t v15 = v11 + (v13 & ~v10) + 1;
  char v16 = 8 * v15;
  if (v15 > 3) {
    goto LABEL_10;
  }
  unsigned int v18 = ((v14 + ~(-1 << v16)) >> v16) + 1;
  if (HIWORD(v18))
  {
    int v17 = *(_DWORD *)((char *)a1 + v15);
    if (v17) {
      goto LABEL_17;
    }
  }
  else
  {
    if (v18 <= 0xFF)
    {
      if (v18 < 2) {
        goto LABEL_27;
      }
LABEL_10:
      int v17 = *((unsigned __int8 *)a1 + v15);
      if (!*((unsigned char *)a1 + v15)) {
        goto LABEL_27;
      }
LABEL_17:
      int v19 = (v17 - 1) << v16;
      if (v15 > 3) {
        int v19 = 0;
      }
      if (v11 + (v13 & ~v10) == -1)
      {
        int v21 = 0;
      }
      else
      {
        if (v15 <= 3) {
          int v20 = v11 + (v13 & ~v10) + 1;
        }
        else {
          int v20 = 4;
        }
        switch(v20)
        {
          case 2:
            int v21 = *a1;
            break;
          case 3:
            int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v21 = *(_DWORD *)a1;
            break;
          default:
            int v21 = *(unsigned __int8 *)a1;
            break;
        }
      }
      int v24 = v12 + (v21 | v19);
      return (v24 + 1);
    }
    int v17 = *(unsigned __int16 *)((char *)a1 + v15);
    if (*(unsigned __int16 *)((char *)a1 + v15)) {
      goto LABEL_17;
    }
  }
LABEL_27:
  if (v5 == v12)
  {
    uint64_t v8 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
    uint64_t v6 = v4;
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, v8, v6);
  }
  a1 = (unsigned __int16 *)(((unint64_t)a1 + v13) & ~v10);
  if (v8 == v12) {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, v8, v6);
  }
  unsigned int v23 = *((unsigned __int8 *)a1 + v11);
  if (v23 < 2) {
    return 0;
  }
  int v24 = (v23 + 2147483646) & 0x7FFFFFFF;
  return (v24 + 1);
}

void sub_1B2E087A0(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 40);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  if (v12 <= 0xFE) {
    unsigned int v12 = 254;
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  uint64_t v15 = v14 & ~v13;
  uint64_t v16 = *(void *)(*(void *)(v9 - 8) + 64);
  uint64_t v17 = v16 + v15 + 1;
  char v18 = 8 * v17;
  BOOL v19 = a3 >= v12;
  unsigned int v20 = a3 - v12;
  if (v20 != 0 && v19)
  {
    if (v17 <= 3)
    {
      unsigned int v24 = ((v20 + ~(-1 << v18)) >> v18) + 1;
      if (HIWORD(v24))
      {
        int v21 = 4;
      }
      else if (v24 >= 0x100)
      {
        int v21 = 2;
      }
      else
      {
        int v21 = v24 > 1;
      }
    }
    else
    {
      int v21 = 1;
    }
  }
  else
  {
    int v21 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v22 = ~v12 + a2;
    if (v17 < 4)
    {
      int v23 = (v22 >> v18) + 1;
      if (v16 + v15 != -1)
      {
        int v25 = v22 & ~(-1 << v18);
        bzero(a1, v16 + v15 + 1);
        if (v17 == 3)
        {
          *(_WORD *)uint64_t v6 = v25;
          id v6[2] = BYTE2(v25);
        }
        else if (v17 == 2)
        {
          *(_WORD *)uint64_t v6 = v25;
        }
        else
        {
          *uint64_t v6 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v16 + v15 + 1);
      *(_DWORD *)uint64_t v6 = v22;
      int v23 = 1;
    }
    switch(v21)
    {
      case 1:
        v6[v17] = v23;
        return;
      case 2:
        *(_WORD *)&v6[v17] = v23;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&v6[v17] = v23;
        return;
      default:
        return;
    }
  }
  switch(v21)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1B2E08A54);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (!a2) {
        return;
      }
LABEL_26:
      if (v8 == v12) {
        goto LABEL_29;
      }
      a1 = (char *)((unint64_t)&a1[v14] & ~v13);
      if (v11 == v12)
      {
        uint64_t v8 = v11;
        uint64_t v7 = v9;
LABEL_29:
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, a2, v8, v7);
      }
      else
      {
        a1[v16] = a2 + 1;
      }
      return;
  }
}

uint64_t type metadata accessor for TypedGraphObjectSequence()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B2E08A94()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1B2E08B90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(a3 + 40);
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v11 + 64);
  int v15 = (v12 | *(_DWORD *)(v7 + 80)) & 0x100000;
  uint64_t v16 = *a2;
  *a1 = *a2;
  if ((v12 | v8) > 7
    || v15 != 0
    || v14 + ((v9 + v12 + ((v8 + 8) & ~v8)) & ~(unint64_t)v12) + 1 > 0x18)
  {
    a1 = (uint64_t *)(v16
                   + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v19 = ~v8;
    unsigned int v20 = (char *)a1 + v8;
    int v21 = (char *)a2 + v8;
    uint64_t v22 = (unint64_t)(v20 + 8) & v19;
    uint64_t v23 = (unint64_t)(v21 + 8) & v19;
    unsigned int v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    uint64_t v29 = v10;
    uint64_t v25 = AssociatedTypeWitness;
    swift_bridgeObjectRetain();
    v24(v22, v23, v25);
    uint64_t v26 = (v22 + v9 + v13) & ~v13;
    uint64_t v27 = (v23 + v9 + v13) & ~v13;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v26, v27, v29);
    *(unsigned char *)(v26 + v14) = *(unsigned char *)(v27 + v14);
  }
  return a1;
}

uint64_t sub_1B2E08D84(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5 + 8;
  unint64_t v7 = (a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(*(void *)(a2 + 40) - 8);
  uint64_t v9 = *(uint64_t (**)(unint64_t))(v8 + 8);
  unint64_t v10 = (v7 + *(void *)(v6 + 56) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);

  return v9(v10);
}

void *sub_1B2E08E64(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  uint64_t v9 = v7 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = ((unint64_t)a1 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)a2 + v10 + 8) & ~v10;
  swift_bridgeObjectRetain();
  v8(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(*(void *)(a3 + 40) - 8);
  uint64_t v14 = v13 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = *(void *)(v9 + 48) + v15;
  uint64_t v17 = (v16 + v11) & ~v15;
  uint64_t v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v17, v18);
  *(unsigned char *)(*(void *)(v14 + 48) + v17) = *(unsigned char *)(*(void *)(v14 + 48) + v18);
  return a1;
}

void *sub_1B2E08F84(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v10, v11, AssociatedTypeWitness);
  uint64_t v12 = *(void *)(v8 + 40);
  uint64_t v13 = *(void *)(*(void *)(a3 + 40) - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v17, v18);
  *(unsigned char *)(*(void *)(v14 + 40) + v17) = *(unsigned char *)(*(void *)(v14 + 40) + v18);
  return a1;
}

void *sub_1B2E090A0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, v11, AssociatedTypeWitness);
  uint64_t v12 = *(void *)(v8 + 32);
  uint64_t v13 = *(void *)(*(void *)(a3 + 40) - 8);
  uint64_t v14 = v13 + 32;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v17, v18);
  *(unsigned char *)(*(void *)(v14 + 32) + v17) = *(unsigned char *)(*(void *)(v14 + 32) + v18);
  return a1;
}

void *sub_1B2E091AC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(v10, v11, AssociatedTypeWitness);
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(*(void *)(a3 + 40) - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v17, v18);
  *(unsigned char *)(*(void *)(v14 + 24) + v17) = *(unsigned char *)(*(void *)(v14 + 24) + v18);
  return a1;
}

uint64_t sub_1B2E092C0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(a3 + 40);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v8 <= v11) {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v16 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = *(void *)(v10 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v13) {
    goto LABEL_28;
  }
  uint64_t v18 = v17 + ((v15 + v16 + ((v14 + 8) & ~v14)) & ~v16) + 1;
  char v19 = 8 * v18;
  if (v18 <= 3)
  {
    unsigned int v22 = ((a2 - v13 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v22))
    {
      int v20 = *(_DWORD *)((char *)a1 + v18);
      if (!v20) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v22 > 0xFF)
    {
      int v20 = *(unsigned __int16 *)((char *)a1 + v18);
      if (!*(unsigned __int16 *)((char *)a1 + v18)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v22 < 2)
    {
LABEL_28:
      if ((v12 & 0x80000000) != 0)
      {
        uint64_t v27 = ((unint64_t)a1 + v14 + 8) & ~v14;
        if (v8 == v13)
        {
          uint64_t v9 = AssociatedTypeWitness;
        }
        else
        {
          uint64_t v27 = (v27 + v15 + v16) & ~v16;
          uint64_t v8 = v11;
        }
        return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v27, v8, v9);
      }
      else
      {
        uint64_t v26 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v26) = -1;
        }
        return (v26 + 1);
      }
    }
  }
  int v20 = *((unsigned __int8 *)a1 + v18);
  if (!*((unsigned char *)a1 + v18)) {
    goto LABEL_28;
  }
LABEL_18:
  int v23 = (v20 - 1) << v19;
  if (v18 > 3) {
    int v23 = 0;
  }
  if (v18)
  {
    if (v18 <= 3) {
      int v24 = v18;
    }
    else {
      int v24 = 4;
    }
    switch(v24)
    {
      case 2:
        int v25 = *a1;
        break;
      case 3:
        int v25 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v25 = *(_DWORD *)a1;
        break;
      default:
        int v25 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v25 = 0;
  }
  return v13 + (v25 | v23) + 1;
}

void sub_1B2E0954C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(void *)(a4 + 40);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  if (v10 <= v13) {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v18 = *(unsigned __int8 *)(v12 + 80);
  size_t v19 = *(void *)(v12 + 64) + ((v17 + v18 + ((v16 + 8) & ~v16)) & ~v18) + 1;
  char v20 = 8 * v19;
  if (a3 <= v15)
  {
    int v21 = 0;
  }
  else if (v19 <= 3)
  {
    unsigned int v24 = ((a3 - v15 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v24))
    {
      int v21 = 4;
    }
    else if (v24 >= 0x100)
    {
      int v21 = 2;
    }
    else
    {
      int v21 = v24 > 1;
    }
  }
  else
  {
    int v21 = 1;
  }
  if (v15 < a2)
  {
    unsigned int v22 = ~v15 + a2;
    if (v19 < 4)
    {
      int v23 = (v22 >> v20) + 1;
      if (v19)
      {
        int v25 = v22 & ~(-1 << v20);
        bzero(a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v22;
      int v23 = 1;
    }
    switch(v21)
    {
      case 1:
        a1[v19] = v23;
        return;
      case 2:
        *(_WORD *)&a1[v19] = v23;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v19] = v23;
        return;
      default:
        return;
    }
  }
  switch(v21)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x1B2E09854);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if ((v14 & 0x80000000) != 0)
        {
          uint64_t v27 = (unint64_t)&a1[v16 + 8] & ~v16;
          if (v10 == v15)
          {
            uint64_t v28 = a2;
            uint64_t v11 = AssociatedTypeWitness;
          }
          else
          {
            uint64_t v27 = (v27 + v17 + v18) & ~v18;
            uint64_t v28 = a2;
            uint64_t v10 = v13;
          }
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v27, v28, v10, v11);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v26 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v26 = (a2 - 1);
          }
          *(void *)a1 = v26;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TypedGraphObjectSequence.Iterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B2E09894()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2E098B0@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  sub_1B299B3B0();
  sub_1B29A15F0();
  v4();
  uint64_t v5 = type metadata accessor for TypedGraphObjectSequence();
  sub_1B299B3B0();
  sub_1B29A15F0();
  uint64_t result = v6();
  *(unsigned char *)(a2 + *(int *)(v5 + 96)) = a1;
  return result;
}

uint64_t sub_1B2E099AC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  char v64 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  sub_1B29C3588((uint64_t *)&unk_1EB7E3A10);
  uint64_t v82 = v4;
  uint64_t v5 = sub_1B2E83A08();
  sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v71 = v6;
  uint64_t v72 = v7;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v8);
  uint64_t v68 = (uint64_t)&v60 - v9;
  uint64_t v70 = v5;
  uint64_t v61 = *(void *)(v5 - 8);
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v10);
  uint64_t v60 = (char *)&v60 - v11;
  uint64_t v12 = *(void *)(a1 + 24);
  sub_1B299D31C();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  sub_1B299E4A0();
  uint64_t v83 = v17 - v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v63 = sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v62 = v19;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v20);
  unsigned int v22 = (uint64_t *)((char *)&v60 - v21);
  sub_1B299D31C();
  uint64_t v76 = v23;
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  char v80 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (uint64_t *)((char *)&v60 - v27);
  uint64_t v29 = *(int *)(a1 + 92);
  uint64_t v69 = v2;
  uint64_t v30 = v2 + v29;
  uint64_t v81 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v79 = AssociatedTypeWitness;
  sub_1B2E82FA8();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v22, 1, TupleTypeMetadata2) == 1)
  {
LABEL_5:
    sub_1B299B798();
    v46();
    type metadata accessor for TypedEntityIdentifier();
    uint64_t v47 = swift_getTupleTypeMetadata2();
    uint64_t v48 = (uint64_t)v64;
    uint64_t v49 = 1;
  }
  else
  {
    uint64_t v33 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
    uint64_t v32 = v14 + 32;
    char v74 = (void (**)(char *, char *, uint64_t))(v32 - 16);
    char v75 = v33;
    v76 += 8;
    uint64_t v77 = v32 - 24;
    uint64_t v65 = v72 + 8;
    uint64_t v66 = v32;
    uint64_t v67 = TupleTypeMetadata2;
    uint64_t v73 = v22;
    while (1)
    {
      uint64_t v34 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v35 = (char *)v28 + v34;
      uint64_t v36 = *v22;
      *uint64_t v28 = *v22;
      unint64_t v37 = v75;
      v75((uint64_t)v28 + v34, (char *)v22 + v34, v12);
      uint64_t v38 = &v80[*(int *)(TupleTypeMetadata2 + 48)];
      (*v74)(v38, v35, v12);
      v37(v83, v38, v12);
      uint64_t v84 = v36;
      TypedEntityIdentifier.init(untyped:)(&v84, v82, *(void *)(v81 + 64), &v85);
      uint64_t v39 = v30;
      uint64_t v40 = v85;
      uint64_t v41 = *(int *)(v81 + 100);
      uint64_t v72 = v69 + *(int *)(v81 + 96);
      LODWORD(v36) = *(unsigned __int8 *)(v69 + v41);
      swift_getAssociatedTypeWitness();
      uint64_t v42 = v68;
      sub_1B2B897B4(v82, v36, v82, v68);
      TupleTypeMetadata2 = v67;
      sub_1B299B798();
      v43();
      sub_1B299B798();
      v44();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v42, 1, v70) != 1) {
        break;
      }
      sub_1B299B798();
      v45();
      uint64_t v30 = v39;
      unsigned int v22 = v73;
      sub_1B2E82FA8();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v22, 1, TupleTypeMetadata2) == 1) {
        goto LABEL_5;
      }
    }
    uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 32);
    uint64_t v52 = v40;
    char v53 = v60;
    uint64_t v54 = v42;
    uint64_t v55 = v70;
    v51(v60, v54, v70);
    type metadata accessor for TypedEntityIdentifier();
    uint64_t v56 = swift_getTupleTypeMetadata2();
    uint64_t v57 = *(int *)(v56 + 48);
    char v58 = v64;
    uint64_t v59 = (uint64_t)&v64[v57];
    *(void *)char v64 = v52;
    v51(&v58[v57], (uint64_t)v53, v55);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v59, 0, 1, v55);
    uint64_t v48 = (uint64_t)v58;
    uint64_t v49 = 0;
    uint64_t v47 = v56;
  }
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v48, v49, 1, v47);
}

uint64_t sub_1B2E09FFC@<X0>(uint64_t a1@<X0>, char a2@<W3>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v5 = type metadata accessor for TypedGraphObjectSequence.Iterator();
  swift_getAssociatedTypeWitness();
  sub_1B299B3B0();
  sub_1B29A15F0();
  v6();
  sub_1B299B3B0();
  sub_1B29A15F0();
  uint64_t result = v7();
  *((unsigned char *)a3 + *(int *)(v5 + 100)) = a2;
  return result;
}

uint64_t sub_1B2E0A11C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 40);
  sub_1B299D31C();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1B299E4A0();
  uint64_t v11 = v10 - v9;
  uint64_t v13 = *(void *)(v12 + 16);
  sub_1B299D31C();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v19 = v18 - v17;
  swift_getAssociatedTypeWitness();
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v19, v3, v13);
  sub_1B2E82668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, v3 + *(int *)(a1 + 92), v5);
  return sub_1B2E09FFC(MEMORY[0x1E4FBC870], *(unsigned char *)(v3 + *(int *)(a1 + 96)), a2);
}

uint64_t sub_1B2E0A2E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1B2E0A11C(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v4(v2, a1);
}

uint64_t static UniversalEmbeddingModelClient.shared()()
{
  id v0 = objc_msgSend(self, sel_service);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v0;
  return result;
}

uint64_t UniversalEmbeddingModelClient.embed(items:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1B2E0A3BC, 0, 0);
}

uint64_t sub_1B2E0A3BC()
{
  uint64_t v1 = v0[4];
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F74688]), sel_init);
  v0[5] = v2;
  objc_msgSend(v2, sel_setVersion_, 4);
  uint64_t v3 = *(void **)(v1 + 16);
  v0[6] = v3;
  if (v3)
  {
    sub_1B29A3EB4(&qword_1E9C38A78);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1B2EE4DB0;
    *(void *)(v4 + 32) = v2;
    uint64_t v14 = v4;
    sub_1B2E82878();
    v0[7] = v14;
    v3;
    id v5 = v2;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[8] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1B2E0A5EC;
    return sub_1B2E0A964();
  }
  else
  {
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1B2E81FB8();
    sub_1B29A4B98(v8, (uint64_t)qword_1EB7E5AC0);
    uint64_t v9 = sub_1B2E81F98();
    os_log_type_t v10 = sub_1B2E82DB8();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1B2996000, v9, v10, "Couldn't fetch embedding due to error: madService is nil", v11, 2u);
      sub_1B299B750();
    }

    uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v13 = MEMORY[0x1E4FBC860];
    return v12(v13);
  }
}

uint64_t sub_1B2E0A5EC(uint64_t a1)
{
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_1B299F388();
  *uint64_t v8 = v7;
  *(void *)(v5 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v9 = sub_1B2E0A758;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v5 + 80) = a1;
    uint64_t v9 = sub_1B2E0A6F0;
  }
  return MEMORY[0x1F4188298](v9, 0, 0);
}

uint64_t sub_1B2E0A6F0()
{
  sub_1B299B3BC();
  uint64_t v1 = *(void **)(v0 + 48);

  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1B2E0A758()
{
  swift_bridgeObjectRelease();
  if (qword_1EB7E5AE0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 72);
  uint64_t v2 = sub_1B2E81FB8();
  sub_1B29A4B98(v2, (uint64_t)qword_1EB7E5AC0);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1B2E81F98();
  os_log_type_t v6 = sub_1B2E82DB8();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 72);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v12;
    sub_1B2E82FB8();
    *os_log_type_t v10 = v12;

    _os_log_impl(&dword_1B2996000, v5, v6, "Couldn't fetch embedding due to error: %@", v9, 0xCu);
    sub_1B29A3EB4(&qword_1EB7E3110);
    swift_arrayDestroy();
    sub_1B299B750();
    sub_1B299B750();
  }
  else
  {
  }
  uint64_t v13 = *(void **)(v0 + 72);
  uint64_t v14 = *(void **)(v0 + 48);

  uint64_t v15 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  return v15(v16);
}

uint64_t sub_1B2E0A964()
{
  sub_1B299B3BC();
  v1[6] = v2;
  v1[7] = v0;
  v1[4] = v3;
  v1[5] = v4;
  v1[3] = v5;
  v1[8] = swift_getObjectType();
  return MEMORY[0x1F4188298](sub_1B2E0A9D8, 0, 0);
}

uint64_t sub_1B2E0A9D8()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1B2E83448();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v2 = *(void *)(v0 + 64);
    long long v16 = *(_OWORD *)(v0 + 40);
    uint64_t v4 = swift_task_alloc();
    *(void *)(v0 + 72) = v4;
    long long v5 = *(_OWORD *)(v0 + 24);
    *(void *)(v4 + 16) = v3;
    *(_OWORD *)(v4 + 24) = v5;
    *(_OWORD *)(v4 + 40) = v16;
    *(void *)(v4 + 56) = v2;
    os_log_type_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v6;
    uint64_t v7 = sub_1B29A3EB4(&qword_1E9C44E48);
    *os_log_type_t v6 = v0;
    v6[1] = sub_1B2E0AC34;
    return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD00000000000001BLL, 0x80000001B2EA4AE0, sub_1B2E0B8B0, v4, v7);
  }
  if (qword_1EB7E5AE0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1B2E81FB8();
  sub_1B29A4B98(v9, (uint64_t)qword_1EB7E5AC0);
  os_log_type_t v10 = sub_1B2E81F98();
  os_log_type_t v11 = sub_1B2E82DB8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_1B2996000, v10, v11, "No requests to perform", v12, 2u);
    sub_1B299B750();
  }

  uint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  return v13(v14);
}

uint64_t sub_1B2E0AC34()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *os_log_type_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = sub_1B2E0AD20;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v7 = sub_1B2A12068;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1B2E0AD20()
{
  sub_1B299B3BC();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t UniversalEmbeddingModelClient.deinit()
{
  return v0;
}

uint64_t UniversalEmbeddingModelClient.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1B2E0ADD8(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v22 = a7;
  id v23 = a2;
  uint64_t v20 = a5;
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C44E50);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62)
  {
    sub_1B29C3CA0(0, &qword_1E9C44E58);
    swift_bridgeObjectRetain();
    sub_1B2E83438();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B2E837D8();
    sub_1B29C3CA0(0, &qword_1E9C44E58);
  }
  sub_1B29C3CA0(0, &qword_1E9C44E58);
  uint64_t v21 = sub_1B2E82828();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_1B2E82828();
  if (a6) {
    a6 = (void *)sub_1B2E82348();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v15, v13, v10);
  *(void *)(v17 + v16) = a3;
  *(void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v22;
  aBlock[4] = sub_1B2E0B970;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B2E0B7FC;
  aBlock[3] = &unk_1F0ADC1B8;
  uint64_t v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v19 = (void *)v21;
  objc_msgSend(v23, sel_performRequests_text_identifier_completionHandler_, v21, v14, a6, v18, v20);
  _Block_release(v18);
}

void sub_1B2E0B0BC(int a1, id a2, uint64_t a3, unint64_t a4)
{
  v47[3] = *MEMORY[0x1E4F143B8];
  if (a2)
  {
    v47[0] = a2;
    id v4 = a2;
LABEL_3:
    sub_1B29A3EB4(&qword_1E9C44E50);
    sub_1B2E829C8();
    return;
  }
  unint64_t v5 = a4;
  if (a4 >> 62) {
    goto LABEL_41;
  }
  uint64_t v6 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    sub_1B2E0BB48();
    uint64_t v40 = swift_allocError();
    *uint64_t v41 = 1;
    v47[0] = v40;
    goto LABEL_3;
  }
  while (1)
  {
    sub_1B2B47548(0, (v5 & 0xC000000000000001) == 0, v5);
    if ((v5 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1B3EB1A20](0, v5);
    }
    else {
      id v7 = *(id *)(v5 + 32);
    }
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    unint64_t v9 = sub_1B2E0BAD8(v8);
    if (!v9)
    {
      sub_1B2E0BB48();
      uint64_t v38 = swift_allocError();
      unsigned char *v39 = 2;
      v47[0] = v38;
      sub_1B29A3EB4(&qword_1E9C44E50);
      sub_1B2E829C8();
      goto LABEL_47;
    }
    unint64_t v10 = v9;
    if (v9 >> 62) {
      break;
    }
    uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      goto LABEL_45;
    }
LABEL_11:
    uint64_t v42 = v8;
    unint64_t v45 = v10 & 0xC000000000000001;
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v13 = 4;
    uint64_t v43 = v11;
    unint64_t v44 = v10;
    while (1)
    {
      uint64_t v14 = v45 ? (id *)MEMORY[0x1B3EB1A20](v13 - 4, v10) : (id *)*(id *)(v10 + 8 * v13);
      unint64_t v5 = (unint64_t)v14;
      uint64_t v15 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      if (qword_1EB7E5AE0 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1B2E81FB8();
      sub_1B29A4B98(v16, (uint64_t)qword_1EB7E5AC0);
      uint64_t v17 = (id)v5;
      uint64_t v18 = sub_1B2E81F98();
      os_log_type_t v19 = sub_1B2E82DA8();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 134217984;
        *(void *)(v20 + 4) = [v17 elementType];

        _os_log_impl(&dword_1B2996000, v18, v19, "Embedding type = %ld", (uint8_t *)v20, 0xCu);
        MEMORY[0x1B3EB30C0](v20, -1, -1);
      }
      else
      {

        uint64_t v18 = v17;
      }

      uint64_t v21 = v17;
      uint64_t v22 = sub_1B2E81F98();
      os_log_type_t v23 = sub_1B2E82DA8();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 134217984;
        *(void *)(v24 + 4) = [v21 elementCount];

        _os_log_impl(&dword_1B2996000, v22, v23, "Embedding count = %ld", (uint8_t *)v24, 0xCu);
        MEMORY[0x1B3EB30C0](v24, -1, -1);
      }
      else
      {

        uint64_t v22 = v21;
      }

      id v25 = [v21 embeddingData];
      uint64_t v26 = sub_1B2E80588();
      unint64_t v5 = (unint64_t)v27;

      switch(v5 >> 62)
      {
        case 1uLL:
          if (v26 >> 32 < (int)v26) {
            goto LABEL_40;
          }
          swift_retain();
          sub_1B2E0BA2C((int)v26, v26 >> 32);
          uint64_t v30 = v29;
          sub_1B29C34DC(v26, v5);
          break;
        case 2uLL:
          uint64_t v32 = *(void *)(v26 + 16);
          uint64_t v31 = *(void *)(v26 + 24);
          swift_retain();
          swift_retain();
          sub_1B2E0BA2C(v32, v31);
          uint64_t v30 = v33;
          swift_release();
          swift_release();
          break;
        case 3uLL:
          memset(v47, 0, 14);
          uint64_t v28 = (char *)v47;
          goto LABEL_30;
        default:
          v47[0] = v26;
          LOWORD(v47[1]) = v5;
          BYTE2(v47[1]) = BYTE2(v5);
          BYTE3(v47[1]) = BYTE3(v5);
          BYTE4(v47[1]) = BYTE4(v5);
          BYTE5(v47[1]) = BYTE5(v5);
          uint64_t v28 = (char *)v47 + BYTE6(v5);
LABEL_30:
          sub_1B2E0B6F0((__int16 *)v47, (uint64_t)v28, &v46);
          uint64_t v30 = v46;
          break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29BA184();
        uint64_t v12 = v36;
      }
      unint64_t v34 = *(void *)(v12 + 16);
      if (v34 >= *(void *)(v12 + 24) >> 1)
      {
        sub_1B29BA184();
        uint64_t v12 = v37;
      }
      *(void *)(v12 + 16) = v34 + 1;
      *(void *)(v12 + 8 * v34 + 32) = v30;

      sub_1B29C34DC(v26, v5);
      ++v13;
      BOOL v35 = v15 == v43;
      unint64_t v10 = v44;
      if (v35)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = v42;
        goto LABEL_46;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
    if (!sub_1B2E83448()) {
      goto LABEL_42;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1B2E83448();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_11;
  }
LABEL_45:
  swift_bridgeObjectRelease();
  uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_46:
  v47[0] = v12;
  sub_1B29A3EB4(&qword_1E9C44E50);
  sub_1B2E829D8();
LABEL_47:
}

void sub_1B2E0B6F0(__int16 *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (!a1)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    goto LABEL_10;
  }
  id v4 = a1;
  uint64_t v5 = a2 - (void)a1;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if ((unint64_t)(a2 - (void)a1 + 1) < 3)
  {
LABEL_10:
    *a3 = v6;
    return;
  }
  uint64_t v7 = v5 / 2;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1B29C0530();
  if (v5 >= -1)
  {
    uint64_t v6 = v15;
    unint64_t v8 = *(void *)(v15 + 16);
    do
    {
      _H8 = *v4;
      uint64_t v16 = v6;
      if (v8 >= *(void *)(v6 + 24) >> 1)
      {
        sub_1B29C0530();
        uint64_t v6 = v16;
      }
      __asm { FCVT            S0, H8 }
      *(void *)(v6 + 16) = v8 + 1;
      *(_DWORD *)(v6 + 4 * v8 + 32) = _S0;
      ++v4;
      ++v8;
      --v7;
    }
    while (v7);
    goto LABEL_10;
  }
  __break(1u);
}

void sub_1B2E0B7FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t type metadata accessor for UniversalEmbeddingModelClient()
{
  return self;
}

uint64_t method lookup function for UniversalEmbeddingModelClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UniversalEmbeddingModelClient);
}

void sub_1B2E0B8B0(uint64_t a1)
{
  sub_1B2E0ADD8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1B2E0B8C0()
{
  uint64_t v1 = sub_1B29A3EB4(&qword_1E9C44E50);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1B2E0B970(int a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1B29A3EB4(&qword_1E9C44E50) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1B2E0B0BC(a1, a2, v2 + v6, v7);
}

void sub_1B2E0BA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (__int16 *)sub_1B2E80188();
  if (v4)
  {
    uint64_t v5 = sub_1B2E801A8();
    if (__OFSUB__(a1, v5))
    {
LABEL_13:
      __break(1u);
      return;
    }
    uint64_t v4 = (__int16 *)((char *)v4 + a1 - v5);
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = sub_1B2E80198();
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  unint64_t v10 = (char *)v4 + v9;
  if (v4) {
    uint64_t v11 = (uint64_t)v10;
  }
  else {
    uint64_t v11 = 0;
  }
  sub_1B2E0B6F0(v4, v11, &v12);
}

uint64_t sub_1B2E0BAD8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_embeddingResults);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_1B29C3CA0(0, &qword_1E9C44E68);
  uint64_t v3 = sub_1B2E82838();

  return v3;
}

unint64_t sub_1B2E0BB48()
{
  unint64_t result = qword_1E9C44E60;
  if (!qword_1E9C44E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44E60);
  }
  return result;
}

unsigned char *_s14EmbeddingErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2E0BC60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14EmbeddingErrorOMa()
{
  return &_s14EmbeddingErrorON;
}

unint64_t sub_1B2E0BC9C()
{
  unint64_t result = qword_1E9C44E70;
  if (!qword_1E9C44E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44E70);
  }
  return result;
}

id sub_1B2E0BCE8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1B29A3EB4(&qword_1EB7E6AF0);
  sub_1B29A3EB4(qword_1EB7E6AF8);
  sub_1B2E0BF28();
  uint64_t v2 = v0;
  id v5 = sub_1B2E0BDD8(0, 5);
  *(void *)&v2[qword_1E9C44E78] = UnfairLockedBox.__allocating_init(contents:)((uint64_t)&v5);

  v4.receiver = v2;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

id sub_1B2E0BDD8(uint64_t a1, uint64_t a2)
{
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_mapTableWithKeyOptions_valueOptions_, a1, a2);

  return v2;
}

id sub_1B2E0BE34()
{
  return sub_1B2E0BCE8();
}

uint64_t sub_1B2E0BE58(void *a1, uint64_t a2, void *a3)
{
  id v8 = objc_msgSend(a1, sel_objectForKey_, a2);
  if (v8)
  {
    uint64_t v4 = (uint64_t)v8;
  }
  else
  {
    uint64_t v9 = sub_1B2E134A4(a2, a3);
    if (!v3)
    {
      uint64_t v4 = v9;
      objc_msgSend(a1, sel_setObject_forKey_, v9, a2);
    }
  }
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1B2E0BF00()
{
  return swift_release();
}

uint64_t type metadata accessor for URLToObjectStrongWeakMap()
{
  return sub_1B29A1278();
}

unint64_t sub_1B2E0BF28()
{
  unint64_t result = qword_1EB7E6C08;
  if (!qword_1EB7E6C08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB7E6C08);
  }
  return result;
}

void UserDefault.wrappedValue.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v5 = (void *)MEMORY[0x1B3EB2480]();
  sub_1B2E0C330(v2, *(void *)(a1 + 16), a2);
}

uint64_t UserDefault.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)MEMORY[0x1B3EB2480]();
  uint64_t v6 = *(void *)(a2 + 16);
  sub_1B2E0C608(v2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(a1, v6);
}

uint64_t UserDefault.init(key:defaultValue:container:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for UserDefault();
  uint64_t v13 = (void *)(a6 + *(int *)(v12 + 28));
  *uint64_t v13 = a1;
  v13[1] = a2;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a3, a5);
  *(void *)(a6 + *(int *)(v12 + 32)) = a4;
  return result;
}

uint64_t UserDefault.projectedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B299E234(*(uint64_t (**)(uint64_t))(*(void *)(a1 - 8) + 16), a2);
}

uint64_t UserDefault.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B299E234(*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16), a2);
}

uint64_t static NSUserDefaults.makeIntelligencePlatformUserDefaults()()
{
  uint64_t v0 = (void *)MEMORY[0x1B3EB2480]();
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  id v2 = sub_1B2E0CBEC(0xD00000000000001ELL, 0x80000001B2EA4B20);
  if (v2) {
    return (uint64_t)v2;
  }
  uint64_t result = sub_1B2E83418();
  __break(1u);
  return result;
}

void sub_1B2E0C224(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UserDefault();
  UserDefault.wrappedValue.getter(v2, a1);
}

uint64_t sub_1B2E0C260(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (char *)&v6 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v6 - v1);
  uint64_t v4 = type metadata accessor for UserDefault();
  return UserDefault.wrappedValue.setter((uint64_t)v2, v4);
}

uint64_t sub_1B2E0C330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v18 = a3;
  uint64_t v5 = type metadata accessor for UserDefault();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_1B2E82F38();
  uint64_t v17 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = *(void **)(a1 + *(int *)(v5 + 32));
  uint64_t v13 = (void *)sub_1B2E82348();
  id v14 = objc_msgSend(v12, sel_objectForKey_, v13);

  if (v14)
  {
    sub_1B2E83058();
    swift_unknownObjectRelease();
    sub_1B29E4FEC(&v19, v20);
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E6270);
  int v15 = swift_dynamicCast();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, v15 ^ 1u, 1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v11, 1, a2) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(a2 - 8) + 16))(v18, v8, a2);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a2 - 8) + 32))(v18, v11, a2);
  }
}

void sub_1B2E0C608(uint64_t a1)
{
  id v1 = *(id *)(a1 + *(int *)(type metadata accessor for UserDefault() + 32));
  uint64_t v2 = sub_1B2E83798();
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);

  swift_unknownObjectRelease();
}

uint64_t type metadata accessor for UserDefault()
{
  return sub_1B29A1278();
}

void (*UserDefault.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  void v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  UserDefault.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_1B2E0C7B8;
}

void sub_1B2E0C7B8(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    UserDefault.wrappedValue.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    UserDefault.wrappedValue.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);

  free(v2);
}

Swift::Void __swiftcall UserDefault.removeObject()()
{
  uint64_t v2 = *(void **)(v1 + *(int *)(v0 + 32));
  id v3 = (id)sub_1B2E82348();
  objc_msgSend(v2, sel_removeObjectForKey_, v3);
}

uint64_t static NSUserDefaults.isKTSEnabled.setter()
{
  if (qword_1EB7E4C68 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_beginAccess();
  uint64_t v1 = (void *)MEMORY[0x1B3EB2480](v0);
  sub_1B2AB41FC((uint64_t)&byte_1EB7E4C40);
  return swift_endAccess();
}

void (*static NSUserDefaults.isKTSEnabled.modify(void *a1))(void **a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  if (qword_1EB7E4C68 != -1) {
    swift_once();
  }
  uint64_t v3 = swift_beginAccess();
  char v4 = byte_1EB7E4C40;
  uint64_t v5 = qword_1EB7E4C48;
  uint64_t v6 = unk_1EB7E4C50;
  uint64_t v7 = (void *)qword_1EB7E4C58;
  size_t v8 = (void *)MEMORY[0x1B3EB2480](v3);
  char v9 = sub_1B299C144(v4, v5, v6, v7);
  v2[3] = 0;
  *((unsigned char *)v2 + 32) = v9 & 1;
  return sub_1B2E0CA7C;
}

void sub_1B2E0CA7C(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void *)MEMORY[0x1B3EB2480]();
  sub_1B2AB41FC((uint64_t)&byte_1EB7E4C40);
  swift_endAccess();

  free(v1);
}

uint64_t sub_1B2E0CAF8()
{
  sub_1B299C02C();
  uint64_t result = static NSUserDefaults.makeIntelligencePlatformUserDefaults()();
  byte_1EB7E4C40 = 0;
  qword_1EB7E4C48 = 0xD000000000000020;
  unk_1EB7E4C50 = 0x80000001B2EA4BB0;
  qword_1EB7E4C58 = result;
  return result;
}

id static NSUserDefaults.$isKTSEnabled.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB7E4C68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = qword_1EB7E4C48;
  uint64_t v2 = unk_1EB7E4C50;
  id v6 = (id)qword_1EB7E4C58;
  uint64_t v4 = qword_1EB7E4C58;
  *(unsigned char *)a1 = byte_1EB7E4C40;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();

  return v6;
}

id sub_1B2E0CBEC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = (void *)sub_1B2E82348();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

uint64_t sub_1B2E0CC58()
{
  return 8;
}

void *sub_1B2E0CC64(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B2E0CC70()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B2E0CD18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  id v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *id v4 = *a2;
    id v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    v10[1] = v11[1];
    uint64_t v12 = (void **)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = *v12;
    *(void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8) = *v12;
    swift_bridgeObjectRetain();
    id v14 = v13;
  }
  return v4;
}

void sub_1B2E0CE40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)((v4 + 23) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1B2E0CEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  size_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *v9;
  *(void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *v9;
  swift_bridgeObjectRetain();
  id v11 = v10;
  return a1;
}

uint64_t sub_1B2E0CF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  size_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  id v11 = *v9;
  *uint64_t v9 = v10;
  id v12 = v10;

  return a1;
}

uint64_t sub_1B2E0D01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  size_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B2E0D0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  size_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *v9;
  *uint64_t v9 = *(void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1B2E0D154(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B2E0D298);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1B2E0D2AC(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1B2E0D48CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *unint64_t v17 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            v17[1] = (a2 - 1);
          }
        }
        else
        {
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

IntelligencePlatform::UserInterestsType_optional __swiftcall UserInterestsType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B2E83808();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 13;
  switch(v3)
  {
    case 0:
      goto LABEL_15;
    case 1:
      char v5 = 1;
      goto LABEL_15;
    case 2:
      char v5 = 2;
      goto LABEL_15;
    case 3:
      char v5 = 3;
      goto LABEL_15;
    case 4:
      char v5 = 4;
      goto LABEL_15;
    case 5:
      char v5 = 5;
      goto LABEL_15;
    case 6:
      char v5 = 6;
      goto LABEL_15;
    case 7:
      char v5 = 7;
      goto LABEL_15;
    case 8:
      char v5 = 8;
      goto LABEL_15;
    case 9:
      char v5 = 9;
      goto LABEL_15;
    case 10:
      char v5 = 10;
      goto LABEL_15;
    case 11:
      char v5 = 11;
      goto LABEL_15;
    case 12:
      char v5 = 12;
LABEL_15:
      char v6 = v5;
      break;
    case 13:
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    default:
      char v6 = 31;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

void *static UserInterestsType.allCases.getter()
{
  return &unk_1F0AB90C8;
}

uint64_t UserInterestsType.rawValue.getter()
{
  uint64_t result = 0x6172676F746F6870;
  switch(*v0)
  {
    case 1:
      return 0x6E696E6564726167;
    case 2:
      unsigned int v2 = 1802465123;
      return v2 | 0x676E6900000000;
    case 3:
      unsigned int v2 = 1684104562;
      return v2 | 0x676E6900000000;
    case 4:
      return 0x676E69746E696170;
    case 5:
      return 0x636973756DLL;
    case 6:
      return 7631457;
    case 7:
      return 0x6D61476F65646976;
    case 8:
      return 0x6E6F6968736166;
    case 9:
      return 0x7075656B616DLL;
    case 0xA:
      return 1634168697;
    case 0xB:
      unsigned int v2 = 1818458467;
      return v2 | 0x676E6900000000;
    case 0xC:
      return 0x676E696B6968;
    case 0xD:
      unsigned int v2 = 1835628403;
      return v2 | 0x676E6900000000;
    case 0xE:
      return 0x6369626F726561;
    case 0xF:
      unsigned int v2 = 1852732786;
      return v2 | 0x676E6900000000;
    case 0x10:
      unsigned int v2 = 1802264951;
      return v2 | 0x676E6900000000;
    case 0x11:
      return 0x726563636F73;
    case 0x12:
      return 0x74656B63697263;
    case 0x13:
      uint64_t v3 = 0x74656B736162;
      goto LABEL_25;
    case 0x14:
      return 0x636F48646C656966;
    case 0x15:
      return 0x73696E6E6574;
    case 0x16:
      uint64_t v3 = 0x79656C6C6F76;
LABEL_25:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6162000000000000;
      break;
    case 0x17:
      uint64_t result = 0x6E6554656C626174;
      break;
    case 0x18:
      uint64_t result = 0x6C6C616265736162;
      break;
    case 0x19:
      uint64_t result = 0xD000000000000010;
      break;
    case 0x1A:
      uint64_t result = 1718382439;
      break;
    case 0x1B:
      uint64_t result = 6908787;
      break;
    case 0x1C:
      uint64_t result = 0x6E61676576;
      break;
    case 0x1D:
      uint64_t result = 0x6972617465676576;
      break;
    case 0x1E:
      uint64_t result = 0x72466E6574756C67;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2E0DA14(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B29AD0D4(*a1, *a2);
}

uint64_t sub_1B2E0DA20()
{
  return sub_1B29AE7DC();
}

uint64_t sub_1B2E0DA28(uint64_t a1)
{
  return sub_1B2AA5880(a1, *v1);
}

uint64_t sub_1B2E0DA30()
{
  return sub_1B29F9500();
}

IntelligencePlatform::UserInterestsType_optional sub_1B2E0DA38(Swift::String *a1)
{
  return UserInterestsType.init(rawValue:)(*a1);
}

uint64_t sub_1B2E0DA44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = UserInterestsType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B2E0DA6C(void *a1@<X8>)
{
  *a1 = &unk_1F0AB90C8;
}

uint64_t sub_1B2E0DA7C()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2E0DADC()
{
  return sub_1B2E82788();
}

void *static UserInterestsService.supportedTags(version:)()
{
  return &unk_1F0ABA538;
}

uint64_t UserInterestsService.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t UserInterestsService.init()()
{
  return v0;
}

uint64_t sub_1B2E0DB74()
{
  sub_1B29A3EB4(&qword_1E9C38A78);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B2EF7C50;
  type metadata accessor for UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag();
  uint64_t v1 = swift_allocObject();
  *(unsigned char *)(v1 + 16) = 27;
  *(void *)(v1 + 24) = 0x3FDAE147AE147AE1;
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = sub_1B299E244();
  *(unsigned char *)(v2 + 16) = 12;
  *(void *)(v2 + 24) = 0x3FD51EB851EB851FLL;
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = sub_1B299E244();
  *(unsigned char *)(v3 + 16) = 21;
  *(void *)(v3 + 24) = 0x3FB47AE147AE147BLL;
  *(void *)(v0 + 48) = v3;
  uint64_t v4 = sub_1B299E244();
  *(unsigned char *)(v4 + 16) = 5;
  *(void *)(v4 + 24) = 0x3FB47AE147AE147BLL;
  *(void *)(v0 + 56) = v4;
  uint64_t v5 = sub_1B299E244();
  *(unsigned char *)(v5 + 16) = 6;
  *(void *)(v5 + 24) = 0x3FB47AE147AE147BLL;
  *(void *)(v0 + 64) = v5;
  sub_1B2E82878();
  type metadata accessor for UserInterestsService.ScoreRankedUserInterestsTags();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v0;
  return result;
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag.__allocating_init(tag:score:)(unsigned char *a1, double a2)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = *a1;
  *(double *)(result + 24) = a2;
  return result;
}

uint64_t type metadata accessor for UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag()
{
  return self;
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.__allocating_init(scoreUserInterestsTags:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t UserInterestsService.__deallocating_deinit()
{
  return sub_1B29A35F4();
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag.init(tag:score:)(unsigned char *a1, double a2)
{
  *(unsigned char *)(v2 + 16) = *a1;
  *(double *)(v2 + 24) = a2;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

uint64_t type metadata accessor for UserInterestsService.ScoreRankedUserInterestsTags()
{
  return self;
}

void UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag.tag.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

double UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag.score.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag.__deallocating_deinit()
{
  return sub_1B29A35F4();
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.init(scoreUserInterestsTags:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.scoreUserInterestsTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_1B2E0DE0C()
{
  unint64_t result = qword_1E9C44E80;
  if (!qword_1E9C44E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44E80);
  }
  return result;
}

unint64_t sub_1B2E0DE5C()
{
  unint64_t result = qword_1E9C44E88;
  if (!qword_1E9C44E88)
  {
    sub_1B29C3588(&qword_1E9C44E90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C44E88);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UserInterestsType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE2)
  {
    if (a2 + 30 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 30) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 31;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1F;
  int v5 = v6 - 31;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for UserInterestsType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 30 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 30) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE1)
  {
    unsigned int v6 = ((a2 - 226) >> 8) + 1;
    *unint64_t result = a2 + 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2E0E004);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 30;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserInterestsType()
{
  return &type metadata for UserInterestsType;
}

uint64_t type metadata accessor for UserInterestsService()
{
  return self;
}

uint64_t method lookup function for UserInterestsService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UserInterestsService);
}

uint64_t dispatch thunk of UserInterestsService.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of UserInterestsService.globalUserInterests()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t method lookup function for UserInterestsService.ScoreRankedUserInterestsTags(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UserInterestsService.ScoreRankedUserInterestsTags);
}

uint64_t dispatch thunk of UserInterestsService.ScoreRankedUserInterestsTags.__allocating_init(scoreUserInterestsTags:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag);
}

uint64_t dispatch thunk of UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag.__allocating_init(tag:score:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_1B2E0E130()
{
  unint64_t result = qword_1E9C44E98[0];
  if (!qword_1E9C44E98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C44E98);
  }
  return result;
}

void sub_1B2E0E17C()
{
}

void sub_1B2E0E1B0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  (*(void (**)(void))(*(void *)(v1 - 8) + 16))();
  sub_1B29A35FC();
  __break(1u);
}

uint64_t type metadata accessor for VectorSearchSelectorBase()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2E0E2A4()
{
  return sub_1B2E0E9FC();
}

uint64_t sub_1B2E0E2C4()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = v0[3];
  uint64_t v13 = v0[2];
  uint64_t v14 = v2;
  uint64_t v11 = *(void *)(v1 + 128);
  uint64_t v12 = *(void *)(v1 + 136);
  v9[2] = v11;
  v9[3] = v12;
  v9[4] = sub_1B2E0F01C;
  v9[5] = &v10;
  uint64_t v3 = type metadata accessor for OrderedDictionary();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_1B2A4AB2C((void (*)(char *, uint64_t))sub_1B2E0F06C, (uint64_t)v9, v3, TupleTypeMetadata2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1B2E0E424(uint64_t a1@<X0>, float (*a2)(uint64_t, uint64_t, float)@<X1>, uint64_t a3@<X8>)
{
  float v6 = *(float *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  uint64_t v7 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  *(float *)(a3 + v7) = a2(a3, a1, v6);
}

uint64_t sub_1B2E0E4E4(uint64_t a1, float a2)
{
  uint64_t v27 = *(void *)v2;
  uint64_t v28 = a1;
  uint64_t v4 = *(void *)(v27 + 128);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1B299D31C();
  uint64_t v7 = v6;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)v26 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  unint64_t v17 = (char *)v26 - v16;
  MEMORY[0x1F4188790](v15);
  sub_1B29A165C();
  long long v19 = *(void (**)(void))(v18 + 16);
  uint64_t v28 = v4;
  uint64_t v21 = v20;
  sub_1B29A1F64();
  v19();
  *(float *)(v21 + *(int *)(TupleTypeMetadata2 + 48)) = a2;
  float v22 = v2[8];
  BOOL v23 = v22 > a2;
  if (*((unsigned char *)v2 + 36) != 1) {
    BOOL v23 = v22 < a2;
  }
  if (v23)
  {
    void v26[2] = v14;
    v26[3] = v11;
    v26[4] = v7;
    uint64_t v26[5] = TupleTypeMetadata2;
    uint64_t v24 = *(int *)(TupleTypeMetadata2 + 48);
    sub_1B29A1F64();
    v19();
    *(float *)&v17[v24] = a2;
    swift_beginAccess();
    sub_1B2D61378();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v21, TupleTypeMetadata2);
}

uint64_t sub_1B2E0E928()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2E0E960()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B2E0E990()
{
  sub_1B2E0E960();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VectorSearchExhaustiveSelector()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2E0E9DC()
{
  return sub_1B2E0E9FC();
}

uint64_t sub_1B2E0E9FC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B2E0EA40()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B2C79A44(v1);
  swift_getTupleTypeMetadata2();
  type metadata accessor for PriorityQueue();
  swift_getWitnessTable();
  sub_1B2E82988();
  sub_1B2E82968();
  swift_getWitnessTable();
  return sub_1B2E82758();
}

uint64_t sub_1B2E0EB70(uint64_t a1, float a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(*v3 + 128);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1B2E82F38();
  sub_1B299D31C();
  v23[3] = v9;
  v23[4] = v8;
  MEMORY[0x1F4188790](v8);
  sub_1B2999940();
  v23[2] = v10;
  MEMORY[0x1F4188790](v11);
  sub_1B299D31C();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  sub_1B2999940();
  uint64_t v25 = v15;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v23[7] = (char *)v23 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v23 - v19;
  sub_1B29A165C();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v24(v20, a1, v6);
  *(float *)&v20[*(int *)(TupleTypeMetadata2 + 48)] = a2;
  if (v3[2] >= 1)
  {
    void v23[5] = v13;
    v23[6] = v6;
    swift_beginAccess();
    sub_1B2E0F090();
    type metadata accessor for PriorityQueue();
    PriorityQueue.count.getter();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v20, TupleTypeMetadata2);
}

uint64_t sub_1B2E0EF38()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRelease();
  swift_release();

  return sub_1B2AF182C(v1);
}

uint64_t sub_1B2E0EF88()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B2AF182C(v1);
  return v0;
}

uint64_t sub_1B2E0EFD0()
{
  sub_1B2E0EF88();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VectorSearchTopKSelector()
{
  return sub_1B29A1278();
}

float sub_1B2E0F01C(float a1)
{
  (*(void (**)(void))(*(void *)(*(void *)(v1 + 16) - 8) + 16))();
  return a1;
}

void sub_1B2E0F06C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B2E0E424(a1, *(float (**)(uint64_t, uint64_t, float))(v2 + 32), a2);
}

__n128 sub_1B2E0F090()
{
  uint64_t v2 = *(void *)(v0 + 48);
  *(_OWORD *)(v1 - 176) = *(_OWORD *)(v0 + 32);
  *(void *)(v1 - 160) = v2;
  __n128 result = *(__n128 *)(v0 + 56);
  *(__n128 *)(v1 - 152) = result;
  return result;
}

uint64_t sub_1B2E0F0AC(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1B2E83448())
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    for (uint64_t i = 4; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = MEMORY[0x1B3EB1A20](i - 4, a1);
      }
      else
      {
        uint64_t v8 = *(void *)(a1 + 8 * i);
        swift_retain();
      }
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v21 = v8;
      sub_1B2E11FA4(a3, (uint64_t)&v19);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1B2AF17D8(a2);
        return v6;
      }
      swift_release();
      uint64_t v10 = v19;
      if (v19)
      {
        int v11 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29BA198();
          uint64_t v6 = v14;
        }
        unint64_t v12 = *(void *)(v6 + 16);
        if (v12 >= *(void *)(v6 + 24) >> 1)
        {
          sub_1B29BA198();
          uint64_t v6 = v15;
        }
        *(void *)(v6 + 16) = v12 + 1;
        uint64_t v13 = v6 + 16 * v12;
        *(void *)(v13 + 32) = v10;
        *(_DWORD *)(v13 + 40) = v11;
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        sub_1B2AF17D8(a2);
        return v6;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_1B2AF17D8(a2);
  return MEMORY[0x1E4FBC860];
}

void *sub_1B2E0F298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v7)(uint64_t *__return_ptr, void *);
  uint64_t v8;
  uint64_t v9;
  void *result;
  void v11[2];
  uint64_t v12;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    __n128 result = (void *)sub_1B2E831C8();
    if (!v4) {
      return (void *)HIDWORD(v12);
    }
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    if ((v6 & 0x2000000000000000) != 0)
    {
      v11[0] = v5;
      v11[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      __n128 result = v7(&v12, v11);
      if (!v4) {
        return (void *)v12;
      }
    }
    else
    {
      if ((v5 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v9 = v5 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v8 = sub_1B2E83298();
      }
      return sub_1B2E12458(v8, v9, (void *(*)(uint64_t *__return_ptr))sub_1B2E12D84);
    }
  }
  return result;
}

uint64_t static SearchMode.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (a1[1])
  {
    if (v2 == v3) {
      return *((unsigned __int8 *)a2 + 8);
    }
    else {
      return 0;
    }
  }
  else
  {
    return (a2[1] & 1) == 0 && *(float *)&v2 == *(float *)&v3;
  }
}

uint64_t sub_1B2E0F3EC(void *a1)
{
  uint64_t v2 = *a1;
  uint64_t v38 = sub_1B2E816D8();
  uint64_t v3 = *(void *)(v38 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v38);
  uint64_t v41 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v44 = (char *)&v33 - v6;
  uint64_t v7 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D88D0);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v36 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v37 = (uint64_t)&v33 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v43 = (uint64_t *)((char *)&v33 - v12);
  uint64_t v13 = sub_1B29A3EB4(&qword_1EB7D88E0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = a1;
  uint64_t v46 = MEMORY[0x1E4FBC860];
  sub_1B2E12C80(&qword_1E9C3D7C8, MEMORY[0x1E4F62E40]);
  sub_1B2E82668();
  uint64_t v17 = &v16[*(int *)(v14 + 44)];
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v42 = v3 + 16;
  uint64_t v39 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v40 = v18;
  uint64_t v35 = v2;
  uint64_t v19 = v41;
  while (1)
  {
    uint64_t v20 = v38;
    v40(v44, v17, v38);
    sub_1B2E12C80((unint64_t *)&unk_1EB7D9AF0, MEMORY[0x1E4F62E40]);
    sub_1B2E82C08();
    sub_1B2E12C80(&qword_1EB7D9B00, MEMORY[0x1E4F62F10]);
    char v21 = sub_1B2E82328();
    float v22 = v16;
    uint64_t v23 = v2;
    uint64_t v24 = *v39;
    (*v39)(v19, v20);
    v24(v44, v20);
    if (v21) {
      break;
    }
    uint64_t v25 = (void (*)(uint64_t *, void))sub_1B2E82D38();
    uint64_t v26 = v37;
    sub_1B2B21134(v27, v37);
    v25(v45, 0);
    v45[0] = *(void *)v22;
    sub_1B2E82C18();
    uint64_t v28 = v43;
    sub_1B2A844A0(v26, (uint64_t)v43, (uint64_t *)&unk_1EB7D88D0);
    BOOL v29 = *v28 == 0x6469776F72 && v28[1] == 0xE500000000000000;
    uint64_t v2 = v23;
    if (v29 || (sub_1B2E837A8() & 1) != 0)
    {
      sub_1B2DFAAF4((uint64_t)v43, (uint64_t *)&unk_1EB7D88D0);
      uint64_t v16 = v22;
    }
    else
    {
      sub_1B2A844A0((uint64_t)v43, v36, (uint64_t *)&unk_1EB7D88D0);
      uint64_t v30 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29C1834();
        uint64_t v30 = v46;
      }
      unint64_t v31 = *(void *)(v30 + 16);
      if (v31 >= *(void *)(v30 + 24) >> 1)
      {
        sub_1B29C1834();
        uint64_t v30 = v46;
      }
      *(void *)(v30 + 16) = v31 + 1;
      sub_1B2A844A0(v36, v30+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v31, (uint64_t *)&unk_1EB7D88D0);
      uint64_t v2 = v35;
      uint64_t v16 = v22;
    }
  }
  sub_1B2DFAAF4((uint64_t)v22, &qword_1EB7D88E0);
  return v46;
}

uint64_t sub_1B2E0F910(char a1, float a2)
{
  swift_retain();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v6 = sub_1B2E82148();
  *(void *)(v2 + 16) = v5;
  *(void *)(v2 + 24) = v6;
  *(float *)(v2 + 32) = a2;
  *(unsigned char *)(v2 + 36) = a1;
  swift_release();
  return v2;
}

uint64_t sub_1B2E0F98C(uint64_t a1, char a2)
{
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = a2;
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = a2;
  *(void *)(v2 + 32) = sub_1B2E12DD8;
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 56) = sub_1B2E12DD8;
  *(void *)(v2 + 64) = v4;
  swift_retain();
  return v2;
}

BOOL sub_1B2E0F9F8(float a1, float a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1) {
    return a2 < a1;
  }
  else {
    return a1 < a2;
  }
}

uint64_t static VectorSearchError.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (a1[2])
  {
    if (a2[2])
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        char v7 = sub_1B2E837A8();
        goto LABEL_17;
      }
LABEL_16:
      char v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5) {
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  char v7 = 0;
LABEL_17:
  sub_1B29EB518();
  sub_1B29EB518();
  sub_1B29EB530();
  sub_1B29EB530();
  return v7 & 1;
}

IntelligencePlatform::VectorSearchSimilarityMetric_optional __swiftcall VectorSearchSimilarityMetric.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t VectorSearchSimilarityMetric.rawValue.getter()
{
  uint64_t v1 = 0x616564696C637565;
  if (*v0 != 1) {
    uint64_t v1 = 7630692;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656E69736F63;
  }
}

uint64_t sub_1B2E0FBBC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974737561687865 && a2 == 0xEA00000000006576;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1265659764 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2E0FCA8(char a1)
{
  if (a1) {
    return 1265659764;
  }
  else {
    return 0x6974737561687865;
  }
}

uint64_t sub_1B2E0FCDC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2E0FD70()
{
  return 0x6C6F687365726874;
}

uint64_t sub_1B2E0FD8C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x74696D694C6D756ELL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2E0FE20()
{
  return 0x74696D694C6D756ELL;
}

uint64_t sub_1B2E0FE3C(unsigned __int8 *a1, char *a2)
{
  return sub_1B29ABCD0(*a1, *a2);
}

uint64_t sub_1B2E0FE48()
{
  return sub_1B29AE984();
}

uint64_t sub_1B2E0FE50()
{
  return sub_1B2AA5188();
}

uint64_t sub_1B2E0FE58()
{
  return sub_1B29F8F84();
}

IntelligencePlatform::VectorSearchSimilarityMetric_optional sub_1B2E0FE60(Swift::String *a1)
{
  return VectorSearchSimilarityMetric.init(rawValue:)(*a1);
}

uint64_t sub_1B2E0FE6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = VectorSearchSimilarityMetric.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2E0FE94()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2E0FEF4()
{
  return sub_1B2E82788();
}

uint64_t sub_1B2E0FF44()
{
  return sub_1B2E0FCA8(*v0);
}

uint64_t sub_1B2E0FF4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2E0FBBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2E0FF74(uint64_t a1)
{
  unint64_t v2 = sub_1B2E10370();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2E0FFB0(uint64_t a1)
{
  unint64_t v2 = sub_1B2E10370();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2E0FFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2E0FCDC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2E1001C(uint64_t a1)
{
  unint64_t v2 = sub_1B2E10408();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2E10058(uint64_t a1)
{
  unint64_t v2 = sub_1B2E10408();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2E10098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2E0FD8C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2E100C4(uint64_t a1)
{
  unint64_t v2 = sub_1B2E103BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2E10100(uint64_t a1)
{
  unint64_t v2 = sub_1B2E103BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SearchMode.encode(to:)()
{
  sub_1B2D0F42C();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C45020);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C45028);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C45030);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29A0480();
  char v6 = *(unsigned char *)(v0 + 8);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2E10370();
  sub_1B2E83A38();
  if (v6)
  {
    sub_1B2E103BC();
    sub_1B2E83618();
    sub_1B2E836C8();
  }
  else
  {
    sub_1B2E10408();
    sub_1B2E83618();
    sub_1B2E836B8();
  }
  sub_1B299B798();
  v8(v7);
  sub_1B299B798();
  v10(v9);
  sub_1B29A0C38();
}

unint64_t sub_1B2E10370()
{
  unint64_t result = qword_1EB7E2EE8;
  if (!qword_1EB7E2EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2EE8);
  }
  return result;
}

unint64_t sub_1B2E103BC()
{
  unint64_t result = qword_1EB7E2F10;
  if (!qword_1EB7E2F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F10);
  }
  return result;
}

unint64_t sub_1B2E10408()
{
  unint64_t result = qword_1EB7D7630;
  if (!qword_1EB7D7630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D7630);
  }
  return result;
}

void SearchMode.init(from:)()
{
  sub_1B2D0F42C();
  unint64_t v2 = v1;
  uint64_t v32 = v3;
  sub_1B29A3EB4(&qword_1EB7E3138);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1EB7E3140);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29A0480();
  uint64_t v6 = sub_1B29A3EB4(&qword_1EB7E3130);
  sub_1B299D278();
  uint64_t v33 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1B299E4A0();
  uint64_t v11 = v10 - v9;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2E10370();
  sub_1B2E83A18();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v12 = sub_1B2E835F8();
  if (!*(void *)(v12 + 16))
  {
    uint64_t v13 = v11;
    goto LABEL_7;
  }
  uint64_t v13 = v11;
  char v14 = *(unsigned char *)(v12 + 32);
  sub_1B29B142C(1);
  uint64_t v16 = v15;
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (v16 != v18 >> 1)
  {
LABEL_7:
    uint64_t v19 = sub_1B2E83288();
    swift_allocError();
    char v21 = v20;
    sub_1B29A3EB4(&qword_1E9C39038);
    *char v21 = &type metadata for SearchMode;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4FBBA70], v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v13, v6);
LABEL_8:
    uint64_t v22 = (uint64_t)v2;
    goto LABEL_9;
  }
  if (v14)
  {
    sub_1B2E103BC();
    sub_1B2E834E8();
    uint64_t v23 = sub_1B2E835A8();
    sub_1B299B798();
    v24();
    swift_unknownObjectRelease();
    uint64_t v25 = sub_1B29A2478();
    v26(v25);
  }
  else
  {
    sub_1B2E10408();
    sub_1B2E834E8();
    sub_1B2E83598();
    unsigned int v28 = v27;
    sub_1B299B798();
    v29();
    swift_unknownObjectRelease();
    uint64_t v30 = sub_1B29A04D0();
    v31(v30);
    uint64_t v23 = v28;
  }
  *(void *)uint64_t v32 = v23;
  *(unsigned char *)(v32 + 8) = v14;
  uint64_t v22 = (uint64_t)v2;
LABEL_9:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v22);
  sub_1B29A0C38();
}

void sub_1B2E10908()
{
}

void sub_1B2E10920()
{
}

uint64_t SearchMode.description.getter()
{
  if (*(unsigned char *)(v0 + 8))
  {
    uint64_t v2 = 0x284B706F74;
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
    sub_1B2E82518();
    sub_1B2E82AE8();
  }
  sub_1B2E82518();
  return v2;
}

uint64_t VectorSearchEngine.init(db:table:vectorColumnName:keyColumnName:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v9 = 0x6E69646465626D65;
  if (a6) {
    uint64_t v9 = a5;
  }
  *a9 = a3;
  a9[1] = a4;
  unint64_t v10 = 0xE900000000000067;
  if (a6) {
    unint64_t v10 = a6;
  }
  uint64_t v11 = 0x6469776F72;
  a9[2] = result;
  a9[3] = a2;
  if (a8) {
    uint64_t v11 = a7;
  }
  a9[4] = v9;
  a9[5] = v10;
  if (a8) {
    unint64_t v12 = a8;
  }
  else {
    unint64_t v12 = 0xE500000000000000;
  }
  a9[6] = v11;
  a9[7] = v12;
  return result;
}

void VectorSearchEngine.search(for:using:in:filterClause:joinColumnName:)()
{
  sub_1B2D0F42C();
  uint64_t v2 = v1;
  long long v3 = v0[1];
  v45[0] = *v0;
  v45[1] = v3;
  long long v4 = v0[3];
  long long v6 = *v0;
  long long v5 = v0[1];
  v45[2] = v0[2];
  v45[3] = v4;
  char v8 = *v7;
  uint64_t v10 = *(void *)v9;
  int v11 = *(unsigned __int8 *)(v9 + 8);
  long long v41 = v6;
  long long v42 = v5;
  long long v12 = v0[3];
  long long v43 = v0[2];
  long long v44 = v12;
  uint64_t v39 = sub_1B2E10E34(v13, v14, v15, v16);
  uint64_t v18 = v17;
  if (qword_1EB7E3A20 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1B2E81FB8();
  sub_1B29A4B98(v19, (uint64_t)qword_1EB7E4AD8);
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_1B2E81F98();
  os_log_type_t v21 = sub_1B2E82DD8();
  if (os_log_type_enabled(v20, v21))
  {
    HIDWORD(v34) = v11;
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = v10;
    uint64_t v23 = swift_slowAlloc();
    *(void *)&long long v41 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    swift_bridgeObjectRetain();
    sub_1B29BF6BC(v39, v18, (uint64_t)&v41, v24, v25, v26, v27, v28, v33, v34, v36, v1, v39, v40, v41, *((uint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43,
      *((uint64_t *)&v43 + 1));
    uint64_t v40 = v29;
    uint64_t v2 = v38;
    sub_1B2E82FB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B2996000, v20, v21, "ECR VectorSearch: search command: %s", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v30 = v23;
    uint64_t v10 = v37;
    MEMORY[0x1B3EB30C0](v30, -1, -1);
    MEMORY[0x1B3EB30C0](v22, -1, -1);

    if ((v35 & 1) == 0)
    {
LABEL_5:
      sub_1B29A3EB4(&qword_1E9C45040);
      swift_allocObject();
      sub_1B2E0F910(v8, *(float *)&v10);
      goto LABEL_8;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if ((v11 & 1) == 0) {
      goto LABEL_5;
    }
  }
  sub_1B29A3EB4(&qword_1E9C45038);
  swift_allocObject();
  sub_1B2E0F98C(v10, v8);
LABEL_8:
  *(void *)&long long v41 = MEMORY[0x1E4FBC860];
  uint64_t v40 = sub_1B2E82148();
  uint64_t ObjectType = swift_getObjectType();
  MEMORY[0x1F4188790](ObjectType);
  sub_1B2E80C28();
  if (v2)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1B2AF14F8((uint64_t)v45);
    unint64_t v32 = swift_bridgeObjectRetain();
    sub_1B2E0F0AC(v32, (uint64_t)v45, &v40);
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B29A0C38();
}

uint64_t sub_1B2E10E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(v4 + 48);
  uint64_t v5 = *(void *)(v4 + 56);
  if (a2 && a4)
  {
    BOOL v9 = v6 == 0x6469776F72 && v5 == 0xE500000000000000;
    if (v9 || (sub_1B2E837A8() & 1) != 0)
    {
      BOOL v10 = v6 == a3 && v5 == a4;
      if (v10 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2E82518();
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2E82518();
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2E82518();
        sub_1B2E82518();
      }
      uint64_t v12 = 0;
      sub_1B2E831F8();
      sub_1B2E82518();
      sub_1B2E82518();
      sub_1B2E82518();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      sub_1B2E82518();
      sub_1B2E82518();
    }
    else
    {
      uint64_t v12 = 0;
      sub_1B2E831F8();
      sub_1B2E82518();
      sub_1B2E82518();
      sub_1B2E82518();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      sub_1B2E82518();
      sub_1B2E82518();
    }
    sub_1B2E82518();
  }
  else
  {
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    uint64_t v12 = 0x205443454C4553;
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
  }
  sub_1B2E82518();
  return v12;
}

uint64_t sub_1B2E11454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, void *a8, uint64_t *a9)
{
  uint64_t v10 = v9;
  uint64_t v76 = a8;
  uint64_t v81 = a4;
  v90[1] = *(sqlite3_stmt **)MEMORY[0x1E4F143B8];
  uint64_t v17 = sub_1B2E81028();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  char v78 = (char *)v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1B29A3EB4(&qword_1E9C37BE0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v80 = (uint64_t)v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1B2E80898();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v79 = (char *)v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90[0] = 0;
  uint64_t v77 = a1;
  uint64_t v84 = a1;
  uint64_t v85 = a2;
  uint64_t v86 = a3;
  uint64_t v87 = v90;
  sub_1B2E0F298((uint64_t)sub_1B2E12C60, (uint64_t)v83, a2, a3);
  uint64_t v24 = v90[0];
  uint64_t v25 = sqlite3_step(v90[0]);
  if (v25 == 100)
  {
    v72[0] = a2;
    v72[1] = a3;
    uint64_t v73 = v9;
    uint64_t v74 = v18;
    uint64_t v75 = v17;
    while (1)
    {
      uint64_t v27 = sub_1B2E83938();
      int v28 = sqlite3_column_bytes(v24, 1);
      if (!sqlite3_column_blob(v24, 1))
      {
        *(void *)&v88[0] = 0;
        *((void *)&v88[0] + 1) = 0xE000000000000000;
        sub_1B2E831F8();
        swift_bridgeObjectRelease();
        *(void *)&v88[0] = 0xD00000000000001DLL;
        *((void *)&v88[0] + 1) = 0x80000001B2EA4DB0;
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      uint64_t v29 = v28 / 4;
      uint64_t v30 = *(void *)(a5 + 16);
      if (v30 != v29) {
        break;
      }
      if (a6)
      {
        cblas_sdot_NEWLAPACK();
        if (a6 == 1)
        {
          float v32 = v31.n128_f32[0];
          cblas_sdot_NEWLAPACK();
          float v34 = v33;
          cblas_sdot_NEWLAPACK();
          v31.n128_f32[0] = sqrtf((float)(v34 + v31.n128_f32[0]) - (float)(v32 + v32));
        }
      }
      else
      {
        cblas_sdot_NEWLAPACK();
        float v36 = v35;
        cblas_snrm2_NEWLAPACK();
        float v38 = v37;
        cblas_snrm2_NEWLAPACK();
        v31.n128_f32[0] = v36 / (float)((float)(v38 * v31.n128_f32[0]) + 0.00000011921);
      }
      *(void *)&v88[0] = v27;
      (*(void (**)(_OWORD *, __n128))(*(void *)a7 + 104))(v88, v31);
      uint64_t v25 = sqlite3_step(v24);
      if (v25 != 100)
      {
        uint64_t v17 = v75;
        uint64_t v18 = v74;
        uint64_t v10 = v73;
        goto LABEL_11;
      }
    }
    *(void *)&v88[0] = 0;
    *((void *)&v88[0] + 1) = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    *(void *)&v88[0] = 0xD00000000000001BLL;
    *((void *)&v88[0] + 1) = 0x80000001B2EA4DD0;
    uint64_t v82 = v30;
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    uint64_t v82 = v29;
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
LABEL_33:
    long long v60 = v88[0];
    sub_1B2E12D1C();
    swift_allocError();
    *(_OWORD *)uint64_t v61 = v60;
    *(unsigned char *)(v61 + 16) = 1;
    goto LABEL_34;
  }
LABEL_11:
  if (v25 != 101)
  {
    sub_1B2E80878();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v80, 1, 1, v17);
    sub_1B2E80B58();
    sub_1B2E12C80(&qword_1E9C3B6B8, MEMORY[0x1E4F62CB0]);
    swift_allocError();
    swift_bridgeObjectRetain();
    sub_1B2E80B18();
LABEL_34:
    swift_willThrow();
    return sqlite3_finalize(v90[0]);
  }
  uint64_t v73 = v10;
  uint64_t v74 = v18;
  uint64_t v75 = v17;
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a7 + 96))(v25, v26);
  uint64_t v40 = MEMORY[0x1E4FBC860];
  long long v41 = (void *)sub_1B2E82148();
  uint64_t v42 = *(void *)(v39 + 16);
  if (!v42)
  {
LABEL_24:
    void *v76 = v41;
    swift_bridgeObjectRelease();
    uint64_t v55 = *(void *)(v39 + 16);
    if (v55)
    {
      *(void *)&v88[0] = v40;
      sub_1B29C0848();
      uint64_t v56 = *(void *)&v88[0];
      unint64_t v57 = *(void *)(*(void *)&v88[0] + 16);
      uint64_t v58 = 32;
      do
      {
        uint64_t v59 = *(void *)(v39 + v58);
        *(void *)&v88[0] = v56;
        if (v57 >= *(void *)(v56 + 24) >> 1)
        {
          sub_1B29C0848();
          uint64_t v56 = *(void *)&v88[0];
        }
        *(void *)(v56 + 16) = v57 + 1;
        *(void *)(v56 + 8 * v57 + 32) = v59;
        v58 += 16;
        ++v57;
        --v55;
      }
      while (v55);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v56 = MEMORY[0x1E4FBC860];
    }
    sub_1B2E81128();
    BOOL v62 = *(void *)(v81 + 48) == 0x6469776F72 && *(void *)(v81 + 56) == 0xE500000000000000;
    if (v62 || (sub_1B2E837A8() & 1) != 0)
    {
      *(void *)&v88[0] = 0;
      *((void *)&v88[0] + 1) = 0xE000000000000000;
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      unint64_t v63 = 0xD000000000000015;
      unint64_t v64 = 0x80000001B2EA4D90;
    }
    else
    {
      *(void *)&v88[0] = 0;
      *((void *)&v88[0] + 1) = 0xE000000000000000;
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      unint64_t v63 = 0x2A205443454C4553;
      unint64_t v64 = 0xEE00204D4F524620;
    }
    *(void *)&v88[0] = v63;
    *((void *)&v88[0] + 1) = v64;
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2E813A8();
    *(void *)&v88[0] = v56;
    sub_1B29A3EB4(&qword_1E9C3CCC8);
    sub_1B2E12CC8();
    uint64_t v65 = v78;
    sub_1B2E81038();
    uint64_t v89 = 0;
    memset(v88, 0, sizeof(v88));
    uint64_t v66 = v73;
    uint64_t v67 = sub_1B2E81388();
    uint64_t v68 = v75;
    uint64_t v69 = v74;
    if (v66)
    {
      swift_bridgeObjectRelease();
      sub_1B2DFAAF4((uint64_t)v88, &qword_1E9C37BC0);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v65, v68);
    }
    else
    {
      uint64_t v70 = v67;
      swift_bridgeObjectRelease();
      sub_1B2DFAAF4((uint64_t)v88, &qword_1E9C37BC0);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v65, v68);
      *a9 = v70;
      swift_bridgeObjectRelease();
    }
    return sqlite3_finalize(v90[0]);
  }
  swift_bridgeObjectRetain();
  long long v43 = (_DWORD *)(v39 + 40);
  while (1)
  {
    uint64_t v44 = *((void *)v43 - 1);
    int v45 = *v43;
    swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v88[0] = v41;
    uint64_t v46 = sub_1B29E5378(v44);
    if (__OFADD__(v41[2], (v47 & 1) == 0))
    {
      __break(1u);
LABEL_48:
      __break(1u);
    }
    unint64_t v48 = v46;
    char v49 = v47;
    sub_1B29A3EB4(&qword_1E9C45070);
    if ((sub_1B2E83398() & 1) == 0) {
      goto LABEL_18;
    }
    uint64_t v50 = sub_1B29E5378(v44);
    if ((v49 & 1) != (v51 & 1)) {
      break;
    }
    unint64_t v48 = v50;
LABEL_18:
    long long v41 = *(void **)&v88[0];
    if (v49)
    {
      *(_DWORD *)(*(void *)(*(void *)&v88[0] + 56) + 4 * v48) = v45;
    }
    else
    {
      *(void *)(*(void *)&v88[0] + 8 * (v48 >> 6) + 64) |= 1 << v48;
      *(void *)(v41[6] + 8 * v48) = v44;
      *(_DWORD *)(v41[7] + 4 * v48) = v45;
      uint64_t v52 = v41[2];
      BOOL v53 = __OFADD__(v52, 1);
      uint64_t v54 = v52 + 1;
      if (v53) {
        goto LABEL_48;
      }
      v41[2] = v54;
    }
    v43 += 4;
    swift_bridgeObjectRelease();
    if (!--v42)
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = MEMORY[0x1E4FBC860];
      goto LABEL_24;
    }
  }
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2E11EEC@<X0>(const char *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, sqlite3_stmt **a4@<X4>, _DWORD *a5@<X8>)
{
  uint64_t v10 = (sqlite3 *)sub_1B2E81638();
  if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v13 = sub_1B2E82558();
    if (v13 < (uint64_t)0xFFFFFFFF80000000) {
      __break(1u);
    }
    uint64_t v11 = v13;
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
    {
LABEL_6:
      uint64_t v11 = HIBYTE(a3) & 0xF;
      goto LABEL_7;
    }
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 > 0x7FFFFFFF)
  {
    __break(1u);
    goto LABEL_6;
  }
LABEL_7:
  uint64_t result = sqlite3_prepare_v2(v10, a1, v11, a4, 0);
  *a5 = result;
  return result;
}

uint64_t sub_1B2E11FA4@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v67 = sub_1B29A3EB4((uint64_t *)&unk_1EB7D88D0);
  uint64_t v5 = *(void *)(v67 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v67);
  uint64_t v66 = (uint64_t *)((char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v65 = (uint64_t *)((char *)&v59 - v9);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v59 - v10);
  sub_1B2A1F960();
  if (!v2)
  {
    unint64_t v13 = sub_1B29B2E58(v12, *a1);
    if ((v13 & 0x100000000) != 0)
    {
      uint64_t result = 0;
      LODWORD(v14) = 0;
    }
    else
    {
      uint64_t v14 = v13;
      uint64_t v15 = (void *)swift_retain();
      uint64_t v16 = sub_1B2E0F3EC(v15);
      sub_1B29A3EB4(&qword_1E9C3B6A8);
      uint64_t v17 = sub_1B2E82148();
      uint64_t v18 = *(void *)(v16 + 16);
      if (v18)
      {
        uint64_t v71 = v17;
        uint64_t v60 = v14;
        uint64_t v61 = 0;
        uint64_t v62 = a2;
        uint64_t v19 = v16 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        uint64_t v63 = *(void *)(v5 + 72);
        uint64_t v59 = v16;
        swift_bridgeObjectRetain();
        unint64_t v64 = v11;
        while (1)
        {
          uint64_t v69 = v19;
          uint64_t v70 = v18;
          sub_1B2B21134(v19, (uint64_t)v11);
          uint64_t v20 = v67;
          uint64_t v21 = *(int *)(v67 + 48);
          uint64_t v22 = v65;
          uint64_t v23 = (uint64_t)v65 + v21;
          uint64_t v24 = (char *)v11 + v21;
          uint64_t v26 = *v11;
          uint64_t v25 = v11[1];
          *uint64_t v65 = *v11;
          v22[1] = v25;
          uint64_t v27 = sub_1B2E80B98();
          uint64_t v28 = *(void *)(v27 - 8);
          uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 16);
          uint64_t v68 = v23;
          v29(v23, v24, v27);
          uint64_t v30 = *(int *)(v20 + 48);
          __n128 v31 = v66;
          float v32 = (char *)v66 + v30;
          *uint64_t v66 = v26;
          v31[1] = v25;
          v29((uint64_t)v31 + v30, v24, v27);
          v77[3] = v27;
          v77[4] = MEMORY[0x1E4F62CD8];
          float v33 = sub_1B29D1C70(v77);
          (*(void (**)(uint64_t *, char *, uint64_t))(v28 + 32))(v33, v32, v27);
          sub_1B2A844A0((uint64_t)v77, (uint64_t)&v72, &qword_1E9C3B6A8);
          swift_bridgeObjectRetain();
          uint64_t v34 = v71;
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v78 = v34;
          uint64_t v41 = sub_1B29DB060(v26, v25, v35, v36, v37, v38, v39, v40, v59, v60, v61, v62, v63, (uint64_t)v64, (uint64_t)v65, (uint64_t)v66, v67, v68, v69,
                  v70,
                  v71,
                  v72,
                  v73,
                  v74,
                  v75,
                  v76);
          if (__OFADD__(*(void *)(v34 + 16), (v42 & 1) == 0)) {
            break;
          }
          unint64_t v43 = v41;
          char v44 = v42;
          sub_1B29A3EB4(&qword_1E9C45068);
          if (sub_1B2E83398())
          {
            uint64_t v51 = sub_1B29DB060(v26, v25, v45, v46, v47, v48, v49, v50, v59, v60, v61, v62, v63, (uint64_t)v64, (uint64_t)v65, (uint64_t)v66, v67, v68, v69,
                    v70,
                    v71,
                    v72,
                    v73,
                    v74,
                    v75,
                    v76);
            if ((v44 & 1) != (v52 & 1)) {
              goto LABEL_20;
            }
            unint64_t v43 = v51;
          }
          BOOL v53 = (void *)v78;
          uint64_t v71 = v78;
          if (v44)
          {
            sub_1B2E12BF8((uint64_t)&v72, *(void *)(v78 + 56) + 40 * v43);
          }
          else
          {
            *(void *)(v78 + 8 * (v43 >> 6) + 64) |= 1 << v43;
            uint64_t v54 = (uint64_t *)(v53[6] + 16 * v43);
            uint64_t *v54 = v26;
            v54[1] = v25;
            sub_1B2A844A0((uint64_t)&v72, v53[7] + 40 * v43, &qword_1E9C3B6A8);
            uint64_t v55 = v53[2];
            BOOL v56 = __OFADD__(v55, 1);
            uint64_t v57 = v55 + 1;
            if (v56) {
              goto LABEL_19;
            }
            v53[2] = v57;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v68, v27);
          uint64_t v11 = v64;
          sub_1B2DFAAF4((uint64_t)v64, (uint64_t *)&unk_1EB7D88D0);
          uint64_t v19 = v69 + v63;
          uint64_t v18 = v70 - 1;
          if (v70 == 1)
          {
            swift_bridgeObjectRelease();
            a2 = v62;
            LODWORD(v14) = v60;
            goto LABEL_15;
          }
        }
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        sub_1B2E83858();
        __break(1u);
        goto LABEL_21;
      }
LABEL_15:
      swift_bridgeObjectRelease();
      sub_1B2E813A8();
      uint64_t result = sub_1B2E813C8();
    }
    *(void *)a2 = result;
    *(_DWORD *)(a2 + 8) = v14;
    return result;
  }
LABEL_21:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void *sub_1B2E12458(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    uint64_t result = a3(&v5);
    if (!v3) {
      return (void *)v5;
    }
  }
  else
  {
    uint64_t result = ((void *(*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&v5 + 4), 0, 0);
    if (!v3) {
      return (void *)HIDWORD(v5);
    }
  }
  return result;
}

uint64_t sub_1B2E124B4(uint64_t a1)
{
  return sub_1B2E11454(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64), *(uint64_t **)(v1 + 72));
}

unint64_t sub_1B2E124F0()
{
  unint64_t result = qword_1E9C45048;
  if (!qword_1E9C45048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45048);
  }
  return result;
}

void type metadata accessor for VectorSearchError()
{
}

unsigned char *storeEnumTagSinglePayload for VectorSearchSimilarityMetric(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2E12614);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for VectorSearchSimilarityMetric()
{
}

uint64_t getEnumTagSinglePayload for SearchMode(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B2E126CC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

void type metadata accessor for SearchMode()
{
}

void type metadata accessor for VectorSearchEngine()
{
}

unsigned char *storeEnumTagSinglePayload for SearchMode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2E127BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMode.CodingKeys()
{
  return &type metadata for SearchMode.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchMode.ExhaustiveCodingKeys()
{
  return &type metadata for SearchMode.ExhaustiveCodingKeys;
}

unsigned char *_s20IntelligencePlatform10SearchModeO20ExhaustiveCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2E128A4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMode.TopKCodingKeys()
{
  return &type metadata for SearchMode.TopKCodingKeys;
}

unint64_t sub_1B2E128E0()
{
  unint64_t result = qword_1E9C45050;
  if (!qword_1E9C45050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45050);
  }
  return result;
}

unint64_t sub_1B2E12930()
{
  unint64_t result = qword_1E9C45058;
  if (!qword_1E9C45058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45058);
  }
  return result;
}

unint64_t sub_1B2E12980()
{
  unint64_t result = qword_1E9C45060;
  if (!qword_1E9C45060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45060);
  }
  return result;
}

unint64_t sub_1B2E129D0()
{
  unint64_t result = qword_1EB7E2F20;
  if (!qword_1EB7E2F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F20);
  }
  return result;
}

unint64_t sub_1B2E12A20()
{
  unint64_t result = qword_1EB7E2F18;
  if (!qword_1EB7E2F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F18);
  }
  return result;
}

unint64_t sub_1B2E12A70()
{
  unint64_t result = qword_1EB7E2F08;
  if (!qword_1EB7E2F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F08);
  }
  return result;
}

unint64_t sub_1B2E12AC0()
{
  unint64_t result = qword_1EB7E2F00;
  if (!qword_1EB7E2F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2F00);
  }
  return result;
}

unint64_t sub_1B2E12B10()
{
  unint64_t result = qword_1EB7E2EF8;
  if (!qword_1EB7E2EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2EF8);
  }
  return result;
}

unint64_t sub_1B2E12B60()
{
  unint64_t result = qword_1EB7E2EF0;
  if (!qword_1EB7E2EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2EF0);
  }
  return result;
}

unint64_t sub_1B2E12BAC()
{
  unint64_t result = qword_1EB7D7650;
  if (!qword_1EB7D7650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D7650);
  }
  return result;
}

uint64_t sub_1B2E12BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3B6A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2E12C60@<X0>(const char *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1B2E11EEC(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), *(sqlite3_stmt ***)(v2 + 40), a2);
}

uint64_t sub_1B2E12C80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2E12CC8()
{
  unint64_t result = qword_1E9C45078;
  if (!qword_1E9C45078)
  {
    sub_1B29C3588(&qword_1E9C3CCC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45078);
  }
  return result;
}

unint64_t sub_1B2E12D1C()
{
  unint64_t result = qword_1E9C45080;
  if (!qword_1E9C45080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45080);
  }
  return result;
}

BOOL sub_1B2E12D68(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B2E0F9F8(*(float *)(a1 + 8), *(float *)(a2 + 8), *(void *)a1, *(void *)a2, a3);
}

void *sub_1B2E12D84@<X0>(_DWORD *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1B2E12DC8()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

BOOL sub_1B2E12DD8(uint64_t a1, uint64_t a2)
{
  return sub_1B2E12D68(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t dispatch thunk of ViewReadonlyGRDBDatabaseProvider.grdbDatabase(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1B2E12E08()
{
  sub_1B29AEC7C((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v1 = sub_1B29A363C();
  return v2(v1);
}

uint64_t sub_1B2E12E58(void *a1, uint64_t (*a2)(id))
{
  uint64_t v6 = *(void *)(v2 + qword_1E9C44E78);
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + 24);
  id v8 = a1;
  os_unfair_lock_lock(v7);
  swift_beginAccess();
  id v9 = *(id *)(v6 + 16);
  id v10 = objc_msgSend(v9, sel_objectForKey_, v8);
  if (v10)
  {
    uint64_t v4 = (uint64_t)v10;
  }
  else
  {
    uint64_t v11 = a2(v8);
    if (!v3)
    {
      uint64_t v4 = v11;
      objc_msgSend(v9, sel_setObject_forKey_, v11, v8);
    }
  }

  os_unfair_lock_unlock(v7);
  return v4;
}

uint64_t sub_1B2E12F5C()
{
  sub_1B29AEC7C((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = sub_1B29A363C();
  return v2(v1);
}

uint64_t sub_1B2E12FAC()
{
  sub_1B29A54F0();
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[16];
  sub_1B29AEC7C(v0 + 12, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v3, v2, v1, v4, v5);
}

uint64_t sub_1B2E13024()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 56);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 96);
  return v0;
}

uint64_t sub_1B2E13054()
{
  sub_1B2E13024();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ViewDatabaseInstances()
{
  return self;
}

uint64_t sub_1B2E130AC()
{
  return sub_1B2E12F5C();
}

uint64_t sub_1B2E130D0()
{
  return sub_1B2E12E08();
}

uint64_t sub_1B2E130F4()
{
  return sub_1B2E12FAC();
}

id sub_1B2E13118(void *a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  id result = objc_msgSend(a1, sel_viewArtifactURL);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + qword_1E9C44E78);
    uint64_t v7 = *(os_unfair_lock_s **)(v6 + 24);
    id v8 = result;
    os_unfair_lock_lock(v7);
    swift_beginAccess();
    id v9 = *(id *)(v6 + 16);
    id v10 = objc_msgSend(v9, sel_objectForKey_, v8);
    if (v10)
    {
      id v3 = v10;
    }
    else
    {
      sub_1B2E13228(v8);
      if (!v2)
      {
        id v3 = v11;
        objc_msgSend(v9, sel_setObject_forKey_, v11, v8);
      }
    }

    os_unfair_lock_unlock(v7);
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B2E13228(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1B2E13E84(a1);
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    v10[0] = 0;
    id v5 = objc_allocWithZone(MEMORY[0x1E4F93BA0]);
    if (!sub_1B2E13E04(v3, v4, 3473409, (uint64_t)v10, 0))
    {
      uint64_t v6 = (void *)v10[0];
      if (!v10[0])
      {
        sub_1B2E13EE8();
        swift_allocError();
        *uint64_t v7 = 1;
      }
      id v8 = v6;
      swift_willThrow();
    }
  }
  else
  {
    sub_1B2E13EE8();
    swift_allocError();
    *id v9 = 0;
    swift_willThrow();
  }
}

uint64_t type metadata accessor for ViewDatabasePasProvider()
{
  return self;
}

id sub_1B2E13370(void *a1)
{
  return sub_1B2E13118(a1);
}

id sub_1B2E13394(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v1 + 16);
  id result = objc_msgSend(a1, sel_viewArtifactURL);
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void *)(v5 + qword_1E9C44E78);
    id v9 = *(os_unfair_lock_s **)(v8 + 24);
    swift_unknownObjectRetain_n();
    id v10 = v7;
    os_unfair_lock_lock(v9);
    swift_beginAccess();
    uint64_t v11 = *(void **)(v8 + 16);
    swift_unknownObjectRetain();
    id v12 = v11;
    uint64_t v13 = v3;
    uint64_t v14 = sub_1B2E0BE58(v12, (uint64_t)v10, a1);

    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v9);
    swift_unknownObjectRelease_n();

    if (v13) {
      return (id)MEMORY[0x1E4F62CC8];
    }
    else {
      return (id)v14;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B2E134A4(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1B2E82088();
  MEMORY[0x1F4188790](v3 - 8);
  sub_1B299B6D0();
  uint64_t v49 = v4;
  uint64_t v5 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E2780);
  MEMORY[0x1F4188790](v5 - 8);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  uint64_t v51 = sub_1B2E82048();
  sub_1B299D31C();
  uint64_t v54 = v9;
  MEMORY[0x1F4188790](v10);
  sub_1B2999940();
  uint64_t v45 = v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v48 = (char *)&v45 - v13;
  uint64_t v50 = sub_1B2E816C8();
  sub_1B299D31C();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v19 = (void *)(v18 - v17);
  sub_1B2E80B08();
  sub_1B299D31C();
  uint64_t v46 = v21;
  uint64_t v47 = v20;
  MEMORY[0x1F4188790](v20);
  sub_1B2999940();
  uint64_t v53 = v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v45 - v24;
  uint64_t v26 = sub_1B2E80498();
  sub_1B299D31C();
  uint64_t v28 = v27;
  MEMORY[0x1F4188790](v29);
  sub_1B299E4A0();
  uint64_t v32 = v31 - v30;
  id v33 = objc_msgSend(a2, sel_viewArtifactURL, v45);
  sub_1B2E80448();

  sub_1B2E80468();
  uint64_t v35 = v34;
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v26);
  uint64_t v36 = v51;
  sub_1B2E80AF8();
  sub_1B2E80AB8();
  sub_1B2E80AE8();
  *uint64_t v19 = 0x4059000000000000;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v19, *MEMORY[0x1E4F62F08], v50);
  sub_1B2E80AD8();
  qos_class_self();
  sub_1B2E82038();
  int v37 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v8, 1, v36);
  uint64_t v52 = v35;
  uint64_t v38 = v48;
  if (v37 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v54 + 104))(v48, *MEMORY[0x1E4FBCB10], v36);
    sub_1B2E13D34(v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v48, v8, v36);
  }
  uint64_t v40 = v46;
  uint64_t v39 = v47;
  sub_1B29A080C();
  v41();
  sub_1B2E82078();
  sub_1B2E80AC8();
  sub_1B29A080C();
  v42();
  sub_1B2E80B88();
  swift_allocObject();
  uint64_t v43 = sub_1B2E80B68();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v36);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v39);
  return v43;
}

uint64_t sub_1B2E138E8()
{
  return sub_1B2E81658();
}

uint64_t type metadata accessor for ViewDatabaseGRDBProvider()
{
  return self;
}

id sub_1B2E1395C(void *a1)
{
  return sub_1B2E13394(a1);
}

uint64_t sub_1B2E13980()
{
  sub_1B29A54F0();
  uint64_t v0 = (void *)sub_1B2E803F8();
  uint64_t v1 = sub_1B2E12E58(v0, (uint64_t (*)(id))sub_1B2E13DE4);

  return v1;
}

char *sub_1B2E13A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a4;
  uint64_t v6 = sub_1B2E80498();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = sub_1B2E81838();
  uint64_t v28 = *(void *)(v13 - 8);
  uint64_t v29 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v27 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v27 - v20;
  if (a2 == 0xD000000000000016 && a3 == 0x80000001B2EA5060 || (sub_1B2E837A8() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, v30, v6);
    uint64_t v22 = v31;
    sub_1B2E81828();
    if (v22) {
      return v16;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v30, v6);
    uint64_t v23 = v31;
    sub_1B2E81828();
    uint64_t v21 = v16;
    if (v23) {
      return v16;
    }
  }
  uint64_t v25 = v28;
  uint64_t v24 = v29;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v19, v21, v29);
  sub_1B2E81808();
  swift_allocObject();
  uint64_t v16 = (char *)sub_1B2E817B8();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v24);
  return v16;
}

uint64_t type metadata accessor for VectorDatabaseClientProvider()
{
  return self;
}

uint64_t sub_1B2E13D10()
{
  return sub_1B2E13980();
}

uint64_t sub_1B2E13D34(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E2780);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B2E13D94()
{
  unint64_t result = qword_1EB7E2AE8[0];
  if (!qword_1EB7E2AE8[0])
  {
    type metadata accessor for UnicodeWrapperTokenizer();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB7E2AE8);
  }
  return result;
}

char *sub_1B2E13DE4(uint64_t a1)
{
  return sub_1B2E13A10(a1, v1[2], v1[3], v1[4]);
}

id sub_1B2E13E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v5, sel_initWithFilename_flags_error_errorHandler_, v9, a3, a4, a5);

  swift_unknownObjectRelease();
  return v10;
}

uint64_t sub_1B2E13E84(void *a1)
{
  id v1 = objc_msgSend(a1, sel_path);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B2E82378();

  return v3;
}

unint64_t sub_1B2E13EE8()
{
  unint64_t result = qword_1E9C45088;
  if (!qword_1E9C45088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45088);
  }
  return result;
}

uint64_t *sub_1B2E13F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v55 = a8;
  uint64_t v53 = a6;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  sub_1B299D31C();
  uint64_t v13 = v12;
  uint64_t v54 = a9;
  uint64_t v52 = a10;
  MEMORY[0x1F4188790](v14);
  sub_1B299B6D0();
  uint64_t v49 = v15;
  uint64_t v17 = v16;
  sub_1B299D31C();
  uint64_t v19 = v18;
  uint64_t v48 = v18;
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v46 - v24;
  sub_1B299D31C();
  uint64_t v27 = v26;
  uint64_t v29 = MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v46 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  id v33 = (char *)&v46 - v32;
  (*(void (**)(char *))(v27 + 32))((char *)&v46 - v32);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
  uint64_t v47 = v25;
  v34(v25, a2, v17);
  uint64_t v51 = (uint64_t *)swift_allocObject();
  sub_1B29A080C();
  v35();
  uint64_t v36 = v17;
  sub_1B29A080C();
  v37();
  uint64_t v39 = v49;
  uint64_t v38 = v50;
  uint64_t v40 = v53;
  sub_1B29A080C();
  v41();
  uint64_t v42 = v39;
  uint64_t v43 = a5;
  char v44 = sub_1B2E141FC((uint64_t)v31, (uint64_t)v23, v42, v51, a5, v40, v36, v55, v54, v52);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v38, v40);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v36);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v33, v43);
  return v44;
}

uint64_t *sub_1B2E141FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v22 = a5;
  uint64_t v23 = a8;
  uint64_t v17 = sub_1B29D1C70((uint64_t *)&v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v17, a1, a5);
  a4[5] = a7;
  a4[6] = a10;
  uint64_t v18 = sub_1B29D1C70(a4 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(v18, a2, a7);
  a4[15] = a6;
  a4[16] = a9;
  uint64_t v19 = sub_1B29D1C70(a4 + 12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v19, a3, a6);
  sub_1B29D1D20(&v21, (uint64_t)(a4 + 7));
  return a4;
}

unsigned char *storeEnumTagSinglePayload for ViewDatabaseInstances.CacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2E143F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewDatabaseInstances.CacheError()
{
  return &type metadata for ViewDatabaseInstances.CacheError;
}

unint64_t sub_1B2E1442C()
{
  unint64_t result = qword_1E9C45090;
  if (!qword_1E9C45090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45090);
  }
  return result;
}

uint64_t static ViewService.clientService.getter()
{
  if (qword_1EB7E69D0 != -1) {
    swift_once();
  }
  uint64_t v0 = *(void *)(qword_1EB7E6920 + OBJC_IVAR____TtC20IntelligencePlatform22ViewServiceUserManager_lockedServices);
  id v1 = *(os_unfair_lock_s **)(v0 + 24);
  id v2 = (id)*MEMORY[0x1E4F4FB00];
  os_unfair_lock_lock(v1);
  sub_1B2E172D0();
  v4[0] = *(void *)(v0 + 16);
  swift_retain();
  sub_1B2E15820(0, v4, v2, &v5);
  swift_release();
  os_unfair_lock_unlock(v1);

  return v5;
}

void *ViewService.subgraphView(name:tableName:batchSize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v27[1] = *(id *)MEMORY[0x1E4F143B8];
  id v10 = *(void **)((char *)v5 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  uint64_t v11 = (void *)sub_1B2E82348();
  v27[0] = 0;
  id v12 = objc_msgSend(v10, sel_requestAssertionForViewName_error_, v11, v27);

  id v13 = v27[0];
  if (v12)
  {
    uint64_t v25 = a3;
    uint64_t v26 = a5;
    uint64_t v14 = *(void **)((char *)v5 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    uint64_t v16 = v14[5];
    uint64_t v15 = v14[6];
    uint64_t v5 = sub_1B29AEC7C(v14 + 2, v16);
    uint64_t v17 = *(uint64_t (**)(id, uint64_t, uint64_t))(v15 + 8);
    id v18 = v13;
    uint64_t v19 = v17(v12, v16, v15);
    if (v6)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v22 = v19;
      uint64_t v23 = v20;
      type metadata accessor for SubgraphView();
      swift_allocObject();
      uint64_t v5 = SubgraphView.init(accessAssertion:database:tableName:batchSize:)((uint64_t)v12, v22, v23, v25, a4, v26);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    id v21 = v27[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v5;
}

uint64_t ViewService.addressContactResolverEmbeddingView()()
{
  uint64_t v3 = v1;
  v19[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1B2E80498();
  sub_1B299D31C();
  MEMORY[0x1F4188790](v4);
  sub_1B29A0498();
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  uint64_t v6 = (void *)sub_1B2E82348();
  v19[0] = 0;
  id v7 = objc_msgSend(v5, sel_requestAssertionForViewName_error_, v6, v19);

  if (v7)
  {
    uint64_t v8 = *(void **)(v0 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    id v9 = v19[0];
    id v10 = objc_msgSend(v7, sel_viewArtifactURL);
    sub_1B2E80448();

    uint64_t v11 = v8 + 12;
    uint64_t v12 = v8[15];
    uint64_t v13 = v8[16];
    sub_1B29AEC7C(v11, v12);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v13 + 8))(v2, 0xD000000000000016, 0x80000001B2EA5060, v12, v13);
    if (!v1) {
      uint64_t v3 = v14;
    }
    swift_unknownObjectRelease();
    uint64_t v15 = sub_1B299B834();
    v16(v15);
  }
  else
  {
    id v17 = v19[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v3;
}

void *ViewService.knosisEntitySubgraphService()()
{
  return sub_1B2E16B68(0x7553797469746E65, 0xEE00687061726762, (void *(*)(void *__return_ptr))sub_1B2CCE7C0, (uint64_t (*)(void *))sub_1B2CC8E60);
}

uint64_t ViewService.entitySimilarityFeatureView.getter()
{
  return sub_1B2E165B0(0xD000000000000018);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.reportSQLiteError(for:sqliteErrorCode:)(Swift::String a1, Swift::Int64 sqliteErrorCode)
{
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR___GDSwiftViewService_errorReporter);
  if (v3)
  {
    swift_unknownObjectRetain();
    uint64_t v5 = (void *)sub_1B2E82348();
    v15[0] = 0;
    unsigned int v6 = objc_msgSend(v3, sel_reportSQLiteError_sqliteErrorCode_error_, v5, sqliteErrorCode, v15);

    if (v6)
    {
      id v7 = v15[0];
    }
    else
    {
      id v14 = v15[0];
      sub_1B2E80388();

      swift_willThrow();
    }
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EB7E52B8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1B2E81FB8();
    sub_1B29A4B98(v8, (uint64_t)qword_1EB7E52A0);
    id v9 = sub_1B2E81F98();
    os_log_type_t v10 = sub_1B2E82DB8();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (_WORD *)swift_slowAlloc();
      *uint64_t v11 = 0;
      sub_1B2999C0C(&dword_1B2996000, v12, v13, "ViewService: reportSQLiteError not supported");
      MEMORY[0x1B3EB30C0](v11, -1, -1);
    }
  }
}

uint64_t static ViewService.clientService(useCase:)(void *a1)
{
  if (qword_1EB7E69D0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(qword_1EB7E6920 + OBJC_IVAR____TtC20IntelligencePlatform22ViewServiceUserManager_lockedServices);
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + 24);
  id v4 = a1;
  os_unfair_lock_lock(v3);
  sub_1B2E172D0();
  v6[0] = *(void *)(v2 + 16);
  swift_retain();
  sub_1B2E15820(0, v6, v4, &v7);
  swift_release();
  os_unfair_lock_unlock(v3);

  return v7;
}

id sub_1B2E14C8C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ViewServiceUserManager()), sel_init);
  qword_1EB7E6920 = (uint64_t)result;
  return result;
}

id ViewService.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id ViewService.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = v0;
  uint64_t v3 = (char *)static ViewService.clientService.getter();
  *(void *)&v2[OBJC_IVAR___GDSwiftViewService_accessRequester] = *(void *)&v3[OBJC_IVAR___GDSwiftViewService_accessRequester];
  *(void *)&v2[OBJC_IVAR___GDSwiftViewService_errorReporter] = *(void *)&v3[OBJC_IVAR___GDSwiftViewService_errorReporter];
  *(void *)&v2[OBJC_IVAR___GDSwiftViewService_databaseCache] = *(void *)&v3[OBJC_IVAR___GDSwiftViewService_databaseCache];
  id v4 = *(void **)&v3[OBJC_IVAR___GDSwiftViewService_useCase];
  swift_unknownObjectRetain();
  swift_retain();
  id v5 = v4;
  swift_unknownObjectRetain();

  *(void *)&v2[OBJC_IVAR___GDSwiftViewService_useCase] = v5;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id ViewService.__allocating_init(accessRequester:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return ViewService.init(accessRequester:)(a1);
}

id ViewService.init(accessRequester:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR___GDSwiftViewService_accessRequester] = a1;
  *(void *)&v2[OBJC_IVAR___GDSwiftViewService_errorReporter] = 0;
  uint64_t v5 = type metadata accessor for ViewDatabasePasProvider();
  uint64_t v6 = sub_1B299D354();
  id v7 = objc_allocWithZone((Class)sub_1B29A3EB4(qword_1EB7E6B80));
  uint64_t v8 = v2;
  swift_unknownObjectRetain();
  *(void *)(v6 + 16) = objc_msgSend(v7, sel_init);
  uint64_t v9 = type metadata accessor for ViewDatabaseGRDBProvider();
  uint64_t v10 = sub_1B299D354();
  *(void *)(v10 + 16) = objc_msgSend(objc_allocWithZone((Class)sub_1B29A3EB4(&qword_1EB7E69E8)), sel_init);
  uint64_t v11 = type metadata accessor for VectorDatabaseClientProvider();
  uint64_t v12 = sub_1B299D354();
  *(void *)(v12 + 16) = objc_msgSend(objc_allocWithZone((Class)sub_1B29A3EB4(&qword_1EB7E6A70)), sel_init);
  type metadata accessor for ViewDatabaseInstances();
  uint64_t v13 = (void *)swift_allocObject();
  v13[5] = v9;
  void v13[6] = &off_1F0AD0238;
  v13[2] = v10;
  v13[15] = v11;
  v13[16] = &off_1F0ABE090;
  v13[12] = v12;
  v13[10] = v5;
  v13[11] = &off_1F0ACF290;
  v13[7] = v6;
  *(void *)&v8[OBJC_IVAR___GDSwiftViewService_databaseCache] = v13;
  id v14 = (void *)*MEMORY[0x1E4F4FB00];
  *(void *)&v8[OBJC_IVAR___GDSwiftViewService_useCase] = *MEMORY[0x1E4F4FB00];
  id v15 = v14;

  v18.receiver = v8;
  v18.super_class = ObjectType;
  id v16 = objc_msgSendSuper2(&v18, sel_init);
  swift_unknownObjectRelease();
  return v16;
}

id ViewService.__allocating_init(viewAccessRequester:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return ViewService.init(viewAccessRequester:)(a1);
}

id ViewService.init(viewAccessRequester:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = v2;
  uint64_t v6 = (char *)static ViewService.clientService.getter();
  uint64_t v7 = OBJC_IVAR___GDSwiftViewService_accessRequester;
  if (a1) {
    uint64_t v8 = a1;
  }
  else {
    uint64_t v8 = swift_unknownObjectRetain();
  }
  *(void *)&v5[v7] = v8;
  *(void *)&v5[OBJC_IVAR___GDSwiftViewService_errorReporter] = 0;
  *(void *)&v5[OBJC_IVAR___GDSwiftViewService_databaseCache] = *(void *)&v6[OBJC_IVAR___GDSwiftViewService_databaseCache];
  uint64_t v9 = *(void **)&v6[OBJC_IVAR___GDSwiftViewService_useCase];
  swift_unknownObjectRetain();
  swift_retain();
  id v10 = v9;

  *(void *)&v5[OBJC_IVAR___GDSwiftViewService_useCase] = v10;
  v13.receiver = v5;
  v13.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v13, sel_init);
  swift_unknownObjectRelease();
  return v11;
}

id ViewService.__allocating_init(accessRequester:grdbDatabaseProvider:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return ViewService.init(accessRequester:grdbDatabaseProvider:)(a1, a2);
}

id ViewService.init(accessRequester:grdbDatabaseProvider:)(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR___GDSwiftViewService_accessRequester] = a1;
  *(void *)&v3[OBJC_IVAR___GDSwiftViewService_errorReporter] = 0;
  uint64_t v24 = (uint64_t *)type metadata accessor for ViewDatabaseInstances();
  uint64_t v6 = type metadata accessor for ViewDatabasePasProvider();
  uint64_t v7 = sub_1B299D354();
  id v8 = objc_allocWithZone((Class)sub_1B29A3EB4(qword_1EB7E6B80));
  uint64_t v9 = v3;
  swift_unknownObjectRetain();
  *(void *)(v7 + 16) = objc_msgSend(v8, sel_init);
  sub_1B29C3B84(a2, (uint64_t)v29);
  uint64_t v10 = type metadata accessor for VectorDatabaseClientProvider();
  uint64_t v11 = sub_1B299D354();
  *(void *)(v11 + 16) = objc_msgSend(objc_allocWithZone((Class)sub_1B29A3EB4(&qword_1EB7E6A70)), (SEL)&selRef_setCountry_);
  uint64_t v13 = v30;
  uint64_t v12 = v31;
  sub_1B2A49CD8((uint64_t)v29, v30);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  uint64_t v27 = v11;
  uint64_t v28 = v7;
  swift_retain();
  objc_super v18 = sub_1B2E13F34((uint64_t)&v28, (uint64_t)v16, (uint64_t)&v27, v24, v6, v10, v13, (uint64_t)&off_1F0ACF290, (uint64_t)&off_1F0ABE090, v12);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v29);
  swift_release();
  *(void *)&v9[OBJC_IVAR___GDSwiftViewService_databaseCache] = v18;
  uint64_t v19 = (void *)*MEMORY[0x1E4F4FB00];
  *(void *)&v9[OBJC_IVAR___GDSwiftViewService_useCase] = *MEMORY[0x1E4F4FB00];
  id v20 = v19;

  v26.receiver = v9;
  v26.super_class = ObjectType;
  id v21 = objc_msgSendSuper2(&v26, sel_init);
  swift_unknownObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a2);
  return v21;
}

uint64_t sub_1B2E153DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_1B2E82378();
  id v6 = a2;
  sub_1B2E82498();

  swift_bridgeObjectRelease();
  if (!a4) {
    return sub_1B2E839A8();
  }
  sub_1B2E839A8();
  swift_bridgeObjectRetain();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

BOOL sub_1B2E154A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_1B2E82378();
  uint64_t v12 = v11;
  if (v10 == sub_1B2E82378() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    if (a3) {
      goto LABEL_7;
    }
  }
  else
  {
    char v15 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v15 & 1) == 0) {
      return result;
    }
    if (a3)
    {
LABEL_7:
      if (a6)
      {
        BOOL v17 = a2 == a5 && a3 == a6;
        if (v17 || (sub_1B2E837A8() & 1) != 0) {
          return 1;
        }
      }
      return 0;
    }
  }
  return !a6;
}

uint64_t sub_1B2E15590(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B2E83988();
  sub_1B2E153DC((uint64_t)v7, a1, a2, a3);
  return sub_1B2E839E8();
}

uint64_t sub_1B2E155F0()
{
  return sub_1B2E15590(*(void **)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1B2E155FC(uint64_t a1)
{
  return sub_1B2E153DC(a1, *(void **)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1B2E15608()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1B2E83988();
  sub_1B2E153DC((uint64_t)v5, v1, v2, v3);
  return sub_1B2E839E8();
}

BOOL sub_1B2E15660(uint64_t *a1, uint64_t *a2)
{
  return sub_1B2E154A0(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t sub_1B2E1567C()
{
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B2E156AC()
{
  sub_1B2E1567C();

  return swift_deallocClassInstance();
}

void *sub_1B2E156E0()
{
  type metadata accessor for ViewService();
  sub_1B2E171E4();
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = sub_1B2E82148();
  return v0;
}

id sub_1B2E15730()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = OBJC_IVAR____TtC20IntelligencePlatform22ViewServiceUserManager_lockedServices;
  type metadata accessor for ViewServiceUserManager.GuardedData();
  uint64_t v4 = swift_allocObject();
  id v5 = v1;
  sub_1B2E156E0();
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E6930);
  swift_allocObject();
  *(void *)&v1[v3] = sub_1B29E5380(v4);

  sub_1B2E81EB8();
  sub_1B2E17194();
  sub_1B2E807D8();
  v7.receiver = v5;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

void sub_1B2E15820(id a1@<X2>, uint64_t *a2@<X0>, void *a3@<X1>, void *a4@<X8>)
{
  uint64_t v6 = *a2;
  if (a1)
  {
    id v7 = objc_msgSend(a1, sel_identifier);
    uint64_t v8 = sub_1B2E82378();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  swift_beginAccess();
  uint64_t v11 = *(void *)(v6 + 32);
  swift_bridgeObjectRetain();
  id v12 = a3;
  id v13 = sub_1B29B2EB4((uint64_t)v12, v8, v10, v11);
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
    uint64_t v14 = *(void **)(v6 + 24);
    uint64_t v30 = a4;
    if (v14)
    {
      id v15 = *(id *)(v6 + 24);
    }
    else
    {
      id v16 = objc_msgSend(objc_allocWithZone((Class)GDRemoteViewAccessRequester), sel_init);
      BOOL v17 = *(void **)(v6 + 24);
      *(void *)(v6 + 24) = v16;
      id v15 = v16;

      uint64_t v14 = 0;
    }
    id v18 = v14;
    uint64_t v19 = sub_1B2E15A60(v6);
    id v20 = objc_allocWithZone((Class)type metadata accessor for RemoteViewAccessRequester());
    id v21 = v12;
    id v29 = v15;
    id v22 = sub_1B2D8CD48((uint64_t)v29, (uint64_t)v21);
    uint64_t v23 = (char *)objc_allocWithZone((Class)type metadata accessor for ViewService());
    id v24 = v22;
    id v25 = v21;
    id v26 = v24;
    swift_retain();
    id v27 = sub_1B2E17230((uint64_t)v26, (uint64_t)v26, (uint64_t)v19, (uint64_t)v25, v23);
    swift_beginAccess();
    id v28 = v25;
    swift_bridgeObjectRetain();
    id v13 = v27;
    sub_1B2B2A73C();
    swift_endAccess();
    swift_release();

    swift_bridgeObjectRelease_n();
    a4 = v30;
  }

  *a4 = v13;
}

void *sub_1B2E15A60(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = v2;
  }
  else
  {
    uint64_t v4 = type metadata accessor for ViewDatabasePasProvider();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = objc_msgSend(objc_allocWithZone((Class)sub_1B29A3EB4(qword_1EB7E6B80)), sel_init);
    uint64_t v6 = type metadata accessor for ViewDatabaseGRDBProvider();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = objc_msgSend(objc_allocWithZone((Class)sub_1B29A3EB4(&qword_1EB7E69E8)), sel_init);
    uint64_t v8 = type metadata accessor for VectorDatabaseClientProvider();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = objc_msgSend(objc_allocWithZone((Class)sub_1B29A3EB4(&qword_1EB7E6A70)), sel_init);
    type metadata accessor for ViewDatabaseInstances();
    uint64_t v3 = (void *)swift_allocObject();
    v3[5] = v6;
    v3[6] = &off_1F0AD0238;
    _OWORD v3[2] = v7;
    v3[15] = v8;
    v3[16] = &off_1F0ABE090;
    v3[11] = &off_1F0ACF290;
    v3[12] = v9;
    v3[10] = v4;
    v3[7] = v5;
    *(void *)(a1 + 16) = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v3;
}

#error "1B2E15C00: call analysis failed (funcsize=22)"

#error "1B2E15C84: call analysis failed (funcsize=24)"

id sub_1B2E15CC8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  id v5 = a1;
  uint64_t v6 = (void *)a4();

  return v6;
}

#error "1B2E15DB4: call analysis failed (funcsize=24)"

#error "1B2E15E34: call analysis failed (funcsize=22)"

#error "1B2E15EB8: call analysis failed (funcsize=24)"

#error "1B2E15F3C: call analysis failed (funcsize=24)"

#error "1B2E15FC0: call analysis failed (funcsize=24)"

void sub_1B2E15FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1B29A17E4();
  a21 = v25;
  a22 = v26;
  id v28 = v27;
  a10 = *MEMORY[0x1E4F143B8];
  id v29 = *(void **)(v22 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  sub_1B2E82348();
  sub_1B2A4EFA8();
  id v30 = objc_msgSend(v29, sel_requestAssertionForViewName_error_, v24, &a9);

  id v31 = a9;
  if (v30)
  {
    uint64_t v32 = *(void **)(v22 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    uint64_t v33 = v32[10];
    uint64_t v34 = v32[11];
    sub_1B29AEC7C(v32 + 7, v33);
    uint64_t v35 = *(uint64_t (**)(id, uint64_t, uint64_t))(v34 + 8);
    id v36 = v31;
    uint64_t v37 = v35(v30, v33, v34);
    if (v23)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v39 = (void *)v37;
      uint64_t v40 = self;
      a9 = 0;
      if (objc_msgSend(v40, *v28, v30, v39, &a9))
      {
        id v41 = a9;
      }
      else
      {
        id v42 = a9;
        sub_1B2E80388();

        swift_willThrow();
      }
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v38 = a9;
    sub_1B2E80388();

    swift_willThrow();
  }
  sub_1B29A17C8();
}

id ViewService.objcLanguageView()()
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  sub_1B29A5504();
  uint64_t v2 = (void *)sub_1B2E82348();
  v11[0] = 0;
  id v3 = objc_msgSend(v1, sel_requestAssertionForViewName_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    id v5 = (objc_class *)type metadata accessor for GDLanguageView();
    uint64_t v6 = (char *)objc_allocWithZone(v5);
    *(void *)&v6[OBJC_IVAR____TtC20IntelligencePlatform14GDLanguageView_assertion] = v3;
    v10.receiver = v6;
    v10.super_class = v5;
    id v7 = v4;
    return objc_msgSendSuper2(&v10, sel_init);
  }
  else
  {
    id v9 = v11[0];
    sub_1B2E80388();

    return (id)swift_willThrow();
  }
}

void *ViewService.autonamingView(viewName:)(uint64_t a1, uint64_t a2)
{
  BOOL result = ViewService.subgraphView(name:tableName:batchSize:)(a1, a2, 0x6870617267627573, 0xE800000000000000, 10);
  if (!v2)
  {
    uint64_t v4 = (uint64_t)result;
    id v5 = objc_allocWithZone((Class)type metadata accessor for AutonamingView());
    return AutonamingView.init(subgraph:isForLiveServing:)(v4, 1);
  }
  return result;
}

void *ViewService.gdSwiftSubgraphViewContext(name:tableName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL result = ViewService.subgraphView(name:tableName:batchSize:)(a1, a2, a3, a4, 10);
  if (!v4)
  {
    id v6 = objc_allocWithZone((Class)type metadata accessor for _GDSwiftSubgraphViewContext());
    return sub_1B2B7F400();
  }
  return result;
}

uint64_t ViewService.featureView.getter()
{
  return sub_1B2E165B0(0xD000000000000013);
}

#error "1B2E165F8: call analysis failed (funcsize=57)"

uint64_t ViewService.handleView.getter()
{
  return sub_1B2E165B0(0x614D656C646E6168);
}

uint64_t ViewService.languageView.getter()
{
  uint64_t v0 = sub_1B29A5504();
  return sub_1B2E165B0(v0);
}

uint64_t ViewService.entityRelevanceHistoricalFeatureView.getter()
{
  sub_1B2A4EFDC();
  void v10[2] = *(id *)MEMORY[0x1E4F143B8];
  id v3 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  uint64_t v4 = (void *)sub_1B2E82348();
  v10[0] = 0;
  id v5 = objc_msgSend(v3, sel_requestAssertionForViewName_error_, v4, v10);

  if (v5)
  {
    id v6 = v10[0];
    uint64_t result = sub_1B2A7D810((uint64_t)v5, (uint64_t)v10);
    if (!v2)
    {
      id v8 = v10[1];
      *(id *)uint64_t v0 = v10[0];
      *(void *)(v0 + 8) = v8;
    }
  }
  else
  {
    id v9 = v10[0];
    sub_1B2E80388();

    return swift_willThrow();
  }
  return result;
}

uint64_t ViewService.phPersonIdentifierMapView()()
{
  return sub_1B2E16910(0xD000000000000015);
}

uint64_t ViewService.muidIdentifierMapView()()
{
  return sub_1B2E16910(0xD000000000000011);
}

#error "1B2E16958: call analysis failed (funcsize=57)"

#error "1B2E16A58: call analysis failed (funcsize=66)"

void *ViewService.knosisIFContextSubgraphService()()
{
  return sub_1B2E16B68(0xD000000000000011, 0x80000001B2EA5190, (void *(*)(void *__return_ptr))sub_1B2CCE810, (uint64_t (*)(void *))sub_1B2CC9358);
}

void *sub_1B2E16B68(uint64_t a1, uint64_t a2, void *(*a3)(void *__return_ptr), uint64_t (*a4)(void *))
{
  uint64_t result = a3(v7);
  if (!v4) {
    return (void *)a4(v7);
  }
  return result;
}

uint64_t ViewService.entityAliasEuclidEmbeddingView()()
{
  uint64_t v3 = v1;
  v19[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1B2E80498();
  sub_1B299D31C();
  MEMORY[0x1F4188790](v4);
  sub_1B29A0498();
  id v5 = *(void **)(v0 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  id v6 = (void *)sub_1B2E82348();
  v19[0] = 0;
  id v7 = objc_msgSend(v5, sel_requestAssertionForViewName_error_, v6, v19);

  if (v7)
  {
    id v8 = *(void **)(v0 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    id v9 = v19[0];
    id v10 = objc_msgSend(v7, sel_viewArtifactURL);
    sub_1B2E80448();

    uint64_t v11 = v8 + 12;
    uint64_t v12 = v8[15];
    uint64_t v13 = v8[16];
    sub_1B29AEC7C(v11, v12);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v13 + 8))(v2, 0xD000000000000014, 0x80000001B2EA51B0, v12, v13);
    if (!v1) {
      uint64_t v3 = v14;
    }
    swift_unknownObjectRelease();
    uint64_t v15 = sub_1B29A45F4();
    v16(v15);
  }
  else
  {
    id v17 = v19[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v3;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.reportUnknownError(for:)(Swift::String a1)
{
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_errorReporter);
  if (v2)
  {
    swift_unknownObjectRetain();
    uint64_t v3 = (void *)sub_1B2E82348();
    v13[0] = 0;
    unsigned int v4 = objc_msgSend(v2, sel_reportUnknownError_error_, v3, v13);

    if (v4)
    {
      id v5 = v13[0];
    }
    else
    {
      id v12 = v13[0];
      sub_1B2E80388();

      swift_willThrow();
    }
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EB7E52B8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1B2E81FB8();
    sub_1B29A4B98(v6, (uint64_t)qword_1EB7E52A0);
    id v7 = sub_1B2E81F98();
    os_log_type_t v8 = sub_1B2E82DB8();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (_WORD *)swift_slowAlloc();
      *id v9 = 0;
      sub_1B2999C0C(&dword_1B2996000, v10, v11, "ViewService: reportUnknownError not supported");
      MEMORY[0x1B3EB30C0](v9, -1, -1);
    }
  }
}

uint64_t type metadata accessor for ViewService()
{
  return self;
}

uint64_t method lookup function for ViewService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ViewService);
}

uint64_t dispatch thunk of ViewService.__allocating_init(accessRequester:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ViewService.__allocating_init(viewAccessRequester:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of ViewService.__allocating_init(accessRequester:grdbDatabaseProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t type metadata accessor for ViewServiceUserManager()
{
  return self;
}

uint64_t type metadata accessor for ViewServiceUserManager.GuardedData()
{
  return self;
}

ValueMetadata *type metadata accessor for ViewError()
{
  return &type metadata for ViewError;
}

uint64_t destroy for ViewServiceUserManager.ServiceKey(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s20IntelligencePlatform22ViewServiceUserManagerC10ServiceKeyVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ViewServiceUserManager.ServiceKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ViewServiceUserManager.ServiceKey(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ViewServiceUserManager.ServiceKey()
{
  return &type metadata for ViewServiceUserManager.ServiceKey;
}

unint64_t sub_1B2E17148()
{
  unint64_t result = qword_1EB7E69D8;
  if (!qword_1EB7E69D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E69D8);
  }
  return result;
}

unint64_t sub_1B2E17194()
{
  unint64_t result = qword_1EB7E6828;
  if (!qword_1EB7E6828)
  {
    sub_1B2E81EB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E6828);
  }
  return result;
}

unint64_t sub_1B2E171E4()
{
  unint64_t result = qword_1EB7E6940;
  if (!qword_1EB7E6940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E6940);
  }
  return result;
}

id sub_1B2E17230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&a5[OBJC_IVAR___GDSwiftViewService_accessRequester] = a1;
  *(void *)&a5[OBJC_IVAR___GDSwiftViewService_errorReporter] = a2;
  *(void *)&a5[OBJC_IVAR___GDSwiftViewService_databaseCache] = a3;
  *(void *)&a5[OBJC_IVAR___GDSwiftViewService_useCase] = a4;
  v12.receiver = a5;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_1B2E172D0()
{
  return swift_beginAccess();
}

uint64_t sub_1B2E172F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v143 = a3 - 1;
  if (a3 < 1)
  {
    sub_1B2E1C4E4();
    sub_1B299E4D4();
    sub_1B2E1C77C();
    *id v9 = v10;
    v9[1] = v11;
    return sub_1B2D5F6B4(v12, (uint64_t)v9);
  }
  uint64_t v4 = v3;
  id v6 = (void *)(a1 + 32);
  sub_1B299D804();
  uint64_t v138 = a1;
  if (*(void *)(a1 + 32))
  {
    uint64_t v8 = *(void *)(a1 + 32);
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    uint64_t v8 = sub_1B2E82148();
  }
  uint64_t v145 = v8 + 64;
  sub_1B299F9C0();
  uint64_t v16 = v15 & v14;
  sub_1B2E1C770();
  uint64_t v146 = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  uint64_t v148 = v8;
  uint64_t v149 = a2;
  uint64_t v147 = v6;
  if (!v16) {
    goto LABEL_8;
  }
LABEL_7:
  sub_1B2D96E84();
  for (uint64_t i = v19 | (v18 << 6); ; uint64_t i = v25 + (v18 << 6))
  {
    uint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * i);
    uint64_t v27 = *v26;
    unint64_t v28 = v26[1];
    sub_1B2E1C740();
    uint64_t v29 = *v6;
    if (!*v6) {
      goto LABEL_86;
    }
    uint64_t v30 = *(void *)(v29 + 16);
    swift_bridgeObjectRetain();
    if (!v30) {
      goto LABEL_85;
    }
    uint64_t v31 = swift_bridgeObjectRetain();
    uint64_t v39 = sub_1B2E1C758(v31, v32, v33, v34, v35, v36, v37, v38, v138, v139, v142, v143, v144, v145, v146, (uint64_t)v147, v148, v149, v16,
            v18,
            v152,
            v153,
            v154,
            v155,
            v156,
            v157);
    if ((v40 & 1) == 0) {
      goto LABEL_84;
    }
    uint64_t v41 = *(void *)(*(void *)(v29 + 56) + 8 * v39);
    swift_endAccess();
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1B299D804();
    id v42 = *(void **)(v41 + 16);
    if (v42[2])
    {
      uint64_t v44 = v42[4];
      unint64_t v43 = v42[5];
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_1B2E1C464(v44, v43);
      if (*(void *)(a2 + 16)
        && (uint64_t v53 = sub_1B29DB060(v45, v46, v47, v48, v49, v50, v51, v52, v138, v139, v142, v143, v144, v145, v146, (uint64_t)v147, v148, v149, v150,
                    v151,
                    v152,
                    v153,
                    v154,
                    v155,
                    v156,
                    v157),
            (v54 & 1) != 0))
      {
        uint64_t v55 = *(void *)(*(void *)(a2 + 56) + 8 * v53);
        swift_retain();
      }
      else
      {
        uint64_t v55 = 0;
      }
      swift_bridgeObjectRelease();
      sub_1B2E1C890();
      char v56 = sub_1B2E825D8();
      swift_bridgeObjectRelease();
      if (v56)
      {
        id v6 = v147;
        uint64_t v8 = v148;
        if (!v55) {
          goto LABEL_50;
        }
        sub_1B299D804();
        if (!*(void *)(v41 + 24))
        {
          swift_retain();
          uint64_t v141 = sub_1B2DC43A4();
          swift_release();
          sub_1B29A0E20();
          if (!*v147) {
            goto LABEL_91;
          }
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v159 = *v147;
          *uint64_t v147 = 0x8000000000000000;
          sub_1B2E1C758(isUniquelyReferenced_nonNull_native, v107, v108, v109, v110, v111, v112, v113, v138, v141, v4, v143, v144, v145, v146, (uint64_t)v147, v148, v149, v150,
            v151,
            v152,
            v153,
            v154,
            v155,
            v156,
            v157);
          sub_1B29E58E8();
          if (v21) {
            goto LABEL_81;
          }
          unint64_t v116 = v114;
          char v117 = v115;
          sub_1B29A3EB4(&qword_1EB7D9868);
          uint64_t v118 = sub_1B2E83398();
          uint64_t v4 = v142;
          if (v118)
          {
            uint64_t v126 = sub_1B2E1C758(v118, v119, v120, v121, v122, v123, v124, v125, v138, v139, v142, v143, v144, v145, v146, (uint64_t)v147, v148, v149, v150,
                     v151,
                     v152,
                     v153,
                     v154,
                     v155,
                     v156,
                     v157);
            if ((v117 & 1) != (v127 & 1)) {
              goto LABEL_92;
            }
            unint64_t v116 = v126;
          }
          uint64_t v103 = v159;
          if (v117)
          {
            uint64_t v128 = *(void *)(v159 + 56);
            swift_release();
            *(void *)(v128 + 8 * v116) = v139;
          }
          else
          {
            sub_1B299D418(v159 + 8 * (v116 >> 6));
            uint64_t v134 = (uint64_t *)(v133 + 16 * v116);
            *uint64_t v134 = v27;
            v134[1] = v28;
            *(void *)(*(void *)(v159 + 56) + 8 * v116) = v139;
            uint64_t v135 = *(void *)(v159 + 16);
            BOOL v21 = __OFADD__(v135, 1);
            uint64_t v136 = v135 + 1;
            if (v21) {
              goto LABEL_83;
            }
            *(void *)(v159 + 16) = v136;
            swift_bridgeObjectRetain();
          }
          id v6 = v147;
          goto LABEL_70;
        }
        sub_1B2E1C740();
        uint64_t v57 = *v147;
        if (!*v147) {
          goto LABEL_87;
        }
        if (!*(void *)(v57 + 16)) {
          goto LABEL_89;
        }
        uint64_t v58 = swift_bridgeObjectRetain();
        uint64_t v66 = sub_1B2E1C758(v58, v59, v60, v61, v62, v63, v64, v65, v138, v139, v142, v143, v144, v145, v146, (uint64_t)v147, v148, v149, v150,
                v151,
                v152,
                v153,
                v154,
                v155,
                v156,
                v157);
        if ((v67 & 1) == 0) {
          goto LABEL_88;
        }
        uint64_t v68 = *(void *)(*(void *)(v57 + 56) + 8 * v66);
        swift_endAccess();
        swift_retain();
        swift_bridgeObjectRelease_n();
        sub_1B299D804();
        uint64_t v69 = *(void *)(v55 + 16);
        swift_bridgeObjectRetain();
        swift_release();
        swift_beginAccess();
        *(void *)(v68 + 16) = v69;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        id v6 = v147;
      }
      uint64_t v8 = v148;
    }
    else
    {
      uint64_t v70 = sub_1B2E1C464(v27, v28);
      if (*(void *)(a2 + 16)
        && (uint64_t v78 = sub_1B29DB060(v70, v71, v72, v73, v74, v75, v76, v77, v138, v139, v142, v143, v144, v145, v146, (uint64_t)v147, v148, v149, v150,
                    v151,
                    v152,
                    v153,
                    v154,
                    v155,
                    v156,
                    v157),
            (v79 & 1) != 0))
      {
        uint64_t v80 = *(void *)(*(void *)(a2 + 56) + 8 * v78);
        swift_retain();
      }
      else
      {
        uint64_t v80 = 0;
      }
      swift_bridgeObjectRelease();
      sub_1B2E1C890();
      if (sub_1B2E825D8())
      {
        if (!v80)
        {
LABEL_50:
          swift_bridgeObjectRelease();
          goto LABEL_51;
        }
        swift_retain();
        uint64_t v140 = sub_1B2DC43A4();
        swift_release();
        sub_1B29A0E20();
        if (!*v6) {
          goto LABEL_90;
        }
        uint64_t v81 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v158 = *v6;
        *id v6 = 0x8000000000000000;
        sub_1B2E1C758(v81, v82, v83, v84, v85, v86, v87, v88, v138, v140, v4, v143, v144, v145, v146, (uint64_t)v147, v148, v149, v150,
          v151,
          v152,
          v153,
          v154,
          v155,
          v156,
          v157);
        sub_1B29E58E8();
        if (v21) {
          goto LABEL_79;
        }
        unint64_t v91 = v89;
        char v92 = v90;
        sub_1B29A3EB4(&qword_1EB7D9868);
        uint64_t v93 = sub_1B2E83398();
        uint64_t v4 = v142;
        id v6 = v147;
        if (v93)
        {
          uint64_t v101 = sub_1B2E1C758(v93, v94, v95, v96, v97, v98, v99, v100, v138, v139, v142, v143, v144, v145, v146, (uint64_t)v147, v148, v149, v150,
                   v151,
                   v152,
                   v153,
                   v154,
                   v155,
                   v156,
                   v157);
          if ((v92 & 1) != (v102 & 1)) {
            goto LABEL_92;
          }
          unint64_t v91 = v101;
        }
        uint64_t v103 = v158;
        if (v92)
        {
          uint64_t v104 = *(void *)(v158 + 56);
          swift_release();
          *(void *)(v104 + 8 * v91) = v139;
        }
        else
        {
          sub_1B299D418(v158 + 8 * (v91 >> 6));
          uint64_t v130 = (uint64_t *)(v129 + 16 * v91);
          *uint64_t v130 = v27;
          v130[1] = v28;
          *(void *)(*(void *)(v158 + 56) + 8 * v91) = v139;
          uint64_t v131 = *(void *)(v158 + 16);
          BOOL v21 = __OFADD__(v131, 1);
          uint64_t v132 = v131 + 1;
          if (v21) {
            goto LABEL_82;
          }
          *(void *)(v158 + 16) = v132;
          swift_bridgeObjectRetain();
        }
LABEL_70:
        *id v6 = v103;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v8 = v148;
        goto LABEL_71;
      }
      swift_bridgeObjectRelease();
      swift_release();
    }
LABEL_51:
    sub_1B299D804();
    if (!*(void *)(v41 + 24)) {
      goto LABEL_72;
    }
    uint64_t v105 = swift_retain();
    sub_1B2E172F0(v105, v149, v143);
    if (v4)
    {
      swift_release();
      swift_release();
      return swift_release();
    }
LABEL_71:
    swift_release();
LABEL_72:
    swift_release();
    a2 = v149;
    uint64_t v16 = v150;
    uint64_t v18 = v151;
    if (v150) {
      goto LABEL_7;
    }
LABEL_8:
    BOOL v21 = __OFADD__(v18++, 1);
    if (v21) {
      break;
    }
    if (v18 >= v146) {
      goto LABEL_74;
    }
    if (!*(void *)(v145 + 8 * v18))
    {
      uint64_t v22 = v18 + 1;
      if (v18 + 1 >= v146) {
        goto LABEL_74;
      }
      if (!*(void *)(v145 + 8 * v22))
      {
        uint64_t v22 = v18 + 2;
        if (v18 + 2 >= v146) {
          goto LABEL_74;
        }
        if (!*(void *)(v145 + 8 * v22))
        {
          uint64_t v22 = v18 + 3;
          if (v18 + 3 >= v146)
          {
LABEL_74:
            uint64_t result = swift_release();
            if (!*(void *)(v138 + 40)) {
              return result;
            }
            uint64_t v137 = swift_retain();
            sub_1B2E172F0(v137, a2, v143);
            return swift_release();
          }
          if (!*(void *)(v145 + 8 * v22))
          {
            while (1)
            {
              uint64_t v18 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_80;
              }
              if (v18 >= v146) {
                goto LABEL_74;
              }
              ++v22;
              if (*(void *)(v145 + 8 * v18)) {
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v18 = v22;
    }
LABEL_18:
    sub_1B29A08E0();
    uint64_t v16 = v24 & v23;
  }
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  swift_bridgeObjectRelease();
LABEL_85:
  swift_endAccess();
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  swift_bridgeObjectRelease();
LABEL_89:
  swift_endAccess();
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2E17A58()
{
  if (qword_1EB7D96F8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB7F3390;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1B2A71F2C();
  sub_1B29FB4D4(v1, v2, v0);
  char v4 = v3;
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1B2E17AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  if ((a6[2] != 0xD00000000000001ALL || a6[3] != 0x80000001B2E8E7A0) && (sub_1B2E1C7C8() & 1) == 0)
  {
    uint64_t v97 = 0;
    uint64_t v98 = 0xE000000000000000;
    sub_1B2E831F8();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
    sub_1B2A29C90();
    swift_bridgeObjectRelease();
LABEL_66:
    uint64_t v72 = v97;
    uint64_t v71 = v98;
    sub_1B2E1C4E4();
    uint64_t v73 = sub_1B299E4D4();
    *uint64_t v74 = v72;
    v74[1] = v71;
    sub_1B2D5F6B4(v73, (uint64_t)v74);
    return 1;
  }
  sub_1B299D804();
  if (!a6[4])
  {
LABEL_65:
    uint64_t v97 = 0;
    uint64_t v98 = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B2E1C77C();
    uint64_t v97 = v69;
    uint64_t v98 = v70;
    swift_bridgeObjectRetain();
    sub_1B2A29C90();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    goto LABEL_66;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1B29B2540(0x657079746469, 0xE600000000000000);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    goto LABEL_65;
  }
  uint64_t v12 = v11;
  sub_1B299D804();
  uint64_t v13 = *(void **)(v12 + 16);
  if (!v13[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_64;
  }
  uint64_t v85 = a1;
  uint64_t v14 = v13[4];
  uint64_t v15 = (void *)v13[5];
  swift_bridgeObjectRetain();
  v16._uint64_t countAndFlagsBits = v14;
  v16._object = v15;
  LiveGlobalKnowledge.ExternalIdentifierType.init(rawValue:)(v16);
  char v91 = v97;
  int v17 = v97;
  uint64_t v83 = sub_1B29B2540(7562345, 0xE300000000000000);
  if (!v83)
  {
LABEL_62:
    swift_bridgeObjectRelease();
LABEL_64:
    swift_release();
    goto LABEL_65;
  }
  uint64_t v18 = sub_1B29B2540(0x69747265706F7270, 0xEA00000000007365);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    swift_release();
    goto LABEL_64;
  }
  sub_1B299D804();
  uint64_t v19 = *(void *)(v83 + 16);
  uint64_t v84 = *(void *)(v19 + 16);
  if (!v84)
  {
    swift_bridgeObjectRetain();
    uint64_t v89 = MEMORY[0x1E4FBC868];
    goto LABEL_70;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v86 = v18 + 16;
  sub_1B299D804();
  uint64_t v20 = 0;
  uint64_t v21 = 233;
  uint64_t v89 = MEMORY[0x1E4FBC868];
  uint64_t v82 = a2;
  while (1)
  {
    uint64_t v88 = v20;
    uint64_t v22 = (uint64_t *)(v19 + 32 + 16 * v20);
    uint64_t v90 = *v22;
    uint64_t v94 = *(void *)(*(void *)v86 + 16);
    uint64_t v92 = v22[1];
    if (v94) {
      break;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v51 = MEMORY[0x1E4FBC860];
LABEL_47:
    sub_1B29C58F8();
    *(void *)__s2 = sub_1B2E82B28();
    uint64_t v52 = *(void *)(v51 + 16);
    if (v52)
    {
      uint64_t v53 = (long long *)(v51 + 32);
      do
      {
        long long v54 = *v53;
        long long v55 = v53[1];
        __int16 v102 = *((_WORD *)v53 + 16);
        v101[0] = v54;
        v101[1] = v55;
        sub_1B29E52BC((uint64_t)v101);
        sub_1B2A009A0(&v97, v101);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = (long long *)((char *)v53 + 40);
        --v52;
      }
      while (v52);
    }
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void *)__s2;
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v97 = v89;
    sub_1B29DB174();
    sub_1B29E58E8();
    if (v59)
    {
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      sub_1B2E83408();
      __break(1u);
LABEL_88:
      sub_1B2E83858();
      __break(1u);
      JUMPOUT(0x1B2E184B8);
    }
    unint64_t v60 = v57;
    char v61 = v58;
    sub_1B29A3EB4(&qword_1E9C43B78);
    uint64_t v21 = 233;
    if (sub_1B2E83398())
    {
      unint64_t v62 = sub_1B29DB174();
      if ((v61 & 1) != (v63 & 1)) {
        goto LABEL_88;
      }
      unint64_t v60 = v62;
    }
    uint64_t v89 = v97;
    if (v61)
    {
      uint64_t v64 = *(void *)(v97 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v64 + 8 * v60) = v56;
    }
    else
    {
      sub_1B299EB3C(v97 + 8 * (v60 >> 6));
      uint64_t v66 = v65[6] + 24 * v60;
      *(void *)uint64_t v66 = v90;
      *(void *)(v66 + 8) = v92;
      *(unsigned char *)(v66 + 16) = v91;
      *(void *)(v65[7] + 8 * v60) = v56;
      uint64_t v67 = v65[2];
      BOOL v59 = __OFADD__(v67, 1);
      uint64_t v68 = v67 + 1;
      if (v59) {
        goto LABEL_81;
      }
      v65[2] = v68;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v20 = v88 + 1;
    if (v88 + 1 == v84)
    {
      swift_bridgeObjectRelease();
LABEL_70:
      swift_bridgeObjectRelease();
      switch(v17)
      {
        case 0:
        case 1:
        case 2:
        case 4:
          goto LABEL_73;
        case 3:
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v77 = 0;
          goto LABEL_76;
        default:
          goto LABEL_62;
      }
    }
  }
  uint64_t v87 = v7;
  uint64_t v93 = *(void *)v86 + 32;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  a2 = 0;
  uint64_t v103 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v23 = (void *)(v93 + 16 * a2);
    uint64_t v24 = v23[1];
    if ((v24 & 0x1000000000000000) != 0)
    {
LABEL_45:
      swift_bridgeObjectRetain();
      sub_1B29A3EB4(&qword_1E9C3C1C0);
      sub_1B2E831C8();
      goto LABEL_33;
    }
    if ((v24 & 0x2000000000000000) != 0) {
      break;
    }
    if ((*v23 & 0x1000000000000000) == 0) {
      goto LABEL_45;
    }
    uint64_t v25 = _Records_GDEntityPredicate_records;
    uint64_t v26 = (const char *)_Records_GDEntityPredicate_predicateIds;
    swift_bridgeObjectRetain();
    uint64_t v27 = 233;
    unint64_t v28 = (uint64_t *)(v25 + 8);
    while (1)
    {
      if (!v25) {
        goto LABEL_84;
      }
      uint64_t v29 = *(v28 - 1);
      if (v29 >= 2674) {
        goto LABEL_72;
      }
      if (!v26) {
        goto LABEL_85;
      }
      if (!strcmp(&v26[v29], (const char *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 32))) {
        break;
      }
      v28 += 3;
      if (!--v27) {
        goto LABEL_29;
      }
    }
    char v33 = 0;
    uint64_t v34 = *((unsigned __int16 *)v28 - 8);
    uint64_t v35 = *v28;
LABEL_32:
    uint64_t v21 = 233;
    uint64_t v97 = v34;
    uint64_t v98 = v29;
    uint64_t v99 = v35;
    LOBYTE(v100) = v33;
LABEL_33:
    swift_bridgeObjectRelease();
    if ((v100 & 1) == 0)
    {
      if (v98 >= 2674)
      {
        __break(1u);
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      if (v99 >= 3558) {
        goto LABEL_79;
      }
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_87;
      }
      __int16 v36 = v97;
      uint64_t v37 = sub_1B2E82538();
      uint64_t v39 = v103;
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_86;
      }
      uint64_t v40 = v37;
      uint64_t v41 = v38;
      uint64_t v42 = sub_1B2E82538();
      uint64_t v44 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B299B8BC();
        sub_1B29B7260();
        uint64_t v39 = v49;
      }
      uint64_t v45 = v39;
      unint64_t v46 = *(void *)(v39 + 16);
      uint64_t v103 = v45;
      if (v46 >= *(void *)(v45 + 24) >> 1)
      {
        sub_1B29B7260();
        uint64_t v103 = v50;
      }
      uint64_t v47 = v103;
      *(void *)(v103 + 16) = v46 + 1;
      uint64_t v48 = v47 + 40 * v46;
      *(void *)(v48 + 32) = v40;
      *(void *)(v48 + 40) = v41;
      *(void *)(v48 + 48) = v42;
      *(void *)(v48 + 56) = v44;
      *(_WORD *)(v48 + 64) = v36;
      uint64_t v21 = 233;
    }
    if (++a2 == v94)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v7 = v87;
      a2 = v82;
      uint64_t v51 = v103;
      goto LABEL_47;
    }
  }
  *(void *)__s2 = *v23;
  uint64_t v96 = v24 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v30 = _Records_GDEntityPredicate_records;
  uint64_t v31 = (const char *)_Records_GDEntityPredicate_predicateIds;
  swift_bridgeObjectRetain();
  uint64_t v32 = (uint64_t *)(v30 + 8);
  while (1)
  {
    if (!v30) {
      goto LABEL_82;
    }
    uint64_t v29 = *(v32 - 1);
    if (v29 >= 2674) {
      break;
    }
    if (!v31) {
      goto LABEL_83;
    }
    if (!strcmp(&v31[v29], __s2))
    {
      char v33 = 0;
      uint64_t v34 = *((unsigned __int16 *)v32 - 8);
      uint64_t v35 = *v32;
      goto LABEL_32;
    }
    v32 += 3;
    if (!--v21)
    {
LABEL_29:
      sub_1B2CC79D0();
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  char v76 = sub_1B2E837A8();
  swift_release();
  swift_bridgeObjectRelease();
  if (v76) {
    uint64_t v77 = 0;
  }
  else {
    uint64_t v77 = 256;
  }
LABEL_76:
  swift_release();
  swift_release();
  uint64_t v78 = a2 + *(int *)(type metadata accessor for QueryContext() + 44);
  uint64_t v79 = *(void *)v78;
  uint64_t v80 = *(void *)(v78 + 8);
  unsigned __int8 v81 = *(unsigned char *)(v78 + 16);
  *(void *)uint64_t v85 = v89;
  *(void *)(v85 + 8) = v79;
  *(void *)(v85 + 16) = v80;
  *(void *)(v85 + 24) = v77 | v81;
  *(void *)(v85 + 96) = 0;
  *(_OWORD *)(v85 + 64) = 0u;
  *(_OWORD *)(v85 + 80) = 0u;
  *(_OWORD *)(v85 + 32) = 0u;
  *(_OWORD *)(v85 + 48) = 0u;
  *(unsigned char *)(v85 + 104) = 16;
  sub_1B29C65EC(v79, v80, v81);
  return 1;
}

void sub_1B2E184CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  uint64_t v12 = v11;
  sub_1B2E7FF98();
  swift_allocObject();
  sub_1B2E7FF88();
  uint64_t v13 = sub_1B2E804D8();
  if (v10)
  {
    sub_1B2E80498();
    sub_1B299F3B8();
    uint64_t v15 = sub_1B2E1C7B8();
    v16(v15);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v13;
    unint64_t v18 = v14;
    sub_1B2E1C6E4();
    sub_1B2E7FF78();
    swift_allocObject();
    sub_1B2E190E0(a10, v12);
    sub_1B2E80498();
    sub_1B299F3B8();
    uint64_t v19 = sub_1B2E1C7B8();
    v20(v19);
    sub_1B29C34DC(v17, v18);
    swift_release();
  }
  sub_1B29998C8();
}

void sub_1B2E18664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B299F300();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  uint64_t v130 = *v25;
  uint64_t v132 = v25[1];
  uint64_t v138 = v25[3];
  uint64_t v126 = v21;
  uint64_t v128 = v25[4];
  uint64_t v134 = v25[2];
  uint64_t v136 = v25[5];
  a10 = MEMORY[0x1E4FBC860];
  uint64_t v168 = v20 + 16;
  sub_1B299D804();
  uint64_t v140 = v20[16] + 64;
  sub_1B29A19EC();
  uint64_t v28 = v27 & v26;
  int64_t v142 = (unint64_t)(v29 + 63) >> 6;
  uint64_t v148 = v30;
  swift_bridgeObjectRetain();
  int64_t v31 = 0;
  uint64_t v146 = (uint64_t)v20;
  if (!v28) {
    goto LABEL_3;
  }
LABEL_2:
  sub_1B2E1C854();
  for (int64_t i = v32 | (v31 << 6); ; int64_t i = v38 + (v31 << 6))
  {
    uint64_t v39 = (uint64_t *)(*(void *)(v148 + 48) + 16 * i);
    uint64_t v41 = *v39;
    uint64_t v40 = v39[1];
    uint64_t v42 = *(void *)(v148 + 56) + 112 * i;
    uint64_t v43 = *(void *)v42;
    uint64_t v44 = *(void *)(v42 + 8);
    uint64_t v46 = *(void *)(v42 + 16);
    uint64_t v45 = *(void *)(v42 + 24);
    uint64_t v47 = *(void *)(v42 + 32);
    char v48 = *(unsigned char *)(v42 + 40);
    uint64_t v49 = *(void *)(v42 + 48);
    uint64_t v50 = *(void *)(v42 + 56);
    uint64_t v51 = *(void *)(v42 + 64);
    uint64_t v52 = *(void *)(v42 + 72);
    uint64_t v53 = *(void *)(v42 + 80);
    uint64_t v54 = *(void *)(v42 + 104);
    long long v55 = *(_OWORD *)(v42 + 88);
    uint64_t v174 = v41;
    unint64_t v175 = v40;
    uint64_t v176 = v43;
    uint64_t v177 = v44;
    uint64_t v178 = v46;
    uint64_t v179 = v45;
    uint64_t v180 = v47;
    char v181 = v48;
    uint64_t v182 = v49;
    uint64_t v183 = v50;
    uint64_t v184 = v51;
    uint64_t v185 = v52;
    uint64_t v186 = v53;
    long long v187 = v55;
    uint64_t v188 = v54;
    sub_1B2E1C740();
    uint64_t v56 = *v168;
    if (!*(void *)(*v168 + 16))
    {
      sub_1B2E1C530((uint64_t)&v174);
LABEL_42:
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      sub_1B2E1C7AC();
      sub_1B2E1C77C();
      id v172 = v116;
      uint64_t v173 = v117;
      sub_1B2E82518();
      sub_1B2E1C4E4();
      uint64_t v118 = sub_1B299E4D4();
      *uint64_t v119 = v172;
      v119[1] = v173;
      sub_1B29A5524(v118, (uint64_t)v119);
      sub_1B2E1C5D4((uint64_t)&v174);
      swift_release();
LABEL_53:
      sub_1B29998C8();
      return;
    }
    swift_bridgeObjectRetain();
    sub_1B2E1C530((uint64_t)&v174);
    uint64_t v63 = sub_1B29DB060(v41, v40, v57, v58, v59, v60, v61, v62, (uint64_t)v126, v128, v130, v132, v134, v136, v138, v140, v142, v144, v146,
            v148,
            v150,
            v152,
            v154,
            v156,
            v158,
            v160);
    if ((v64 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
    uint64_t v163 = v41;
    uint64_t v151 = v28;
    uint64_t v153 = v31;
    uint64_t v65 = *(void *)(v56 + 56) + 112 * v63;
    uint64_t v66 = *(void *)(v65 + 16);
    HIDWORD(v155) = *(unsigned __int8 *)(v65 + 40);
    uint64_t v67 = *(void *)(v65 + 56);
    uint64_t v68 = *(void *)(v65 + 72);
    uint64_t v157 = *(void *)(v65 + 48);
    uint64_t v159 = *(void *)(v65 + 64);
    uint64_t v69 = *(void *)(v65 + 80);
    uint64_t v70 = *(void *)(v65 + 88);
    uint64_t v71 = *(void *)(v65 + 104);
    uint64_t v161 = *(void *)(v65 + 96);
    swift_endAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1B2E1C530((uint64_t)&v174);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v162 = v67;
    swift_bridgeObjectRetain();
    uint64_t v167 = v68;
    swift_bridgeObjectRetain();
    uint64_t v166 = v69;
    swift_retain();
    uint64_t v165 = v70;
    swift_retain();
    uint64_t v164 = v71;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v72 = *(void *)(v66 + 16);
    if (v72)
    {
      uint64_t v171 = (void *)MEMORY[0x1E4FBC860];
      sub_1B29BFD80();
      uint64_t v73 = v171;
      uint64_t v74 = v66 + 40;
      do
      {
        uint64_t v75 = sub_1B2E823F8();
        uint64_t v77 = v76;
        unint64_t v78 = v171[2];
        if (v78 >= v171[3] >> 1) {
          sub_1B29BFD80();
        }
        v74 += 16;
        v171[2] = v78 + 1;
        uint64_t v79 = (char *)&v171[2 * v78];
        *((void *)v79 + 4) = v75;
        *((void *)v79 + 5) = v77;
        --v72;
      }
      while (v72);
      swift_bridgeObjectRelease();
      uint64_t v80 = v163;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v73 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v80 = v41;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v81 = sub_1B2E823F8();
    uint64_t v83 = v82;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    sub_1B2E1C530((uint64_t)&v174);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B29A0E20();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v170 = (void *)*v168;
    *uint64_t v168 = 0x8000000000000000;
    uint64_t v84 = v80;
    sub_1B29DB060(v80, v40, v85, v86, v87, v88, v89, v90, v127, v129, v131, v133, v135, v137, v139, v141, v143, v145, v147,
      v149,
      v151,
      v153,
      v155,
      v157,
      v159,
      v161);
    sub_1B2E1C87C();
    if (v93) {
      break;
    }
    unint64_t v94 = v91;
    char v95 = v92;
    sub_1B29A3EB4(&qword_1EB7D9878);
    if (sub_1B2E83398())
    {
      uint64_t v102 = sub_1B29DB060(v84, v40, v96, v97, v98, v99, v100, v101, (uint64_t)v126, v128, v130, v132, v134, v136, v138, v140, v142, v144, v146,
               v148,
               v150,
               v152,
               v154,
               v156,
               v158,
               v160);
      if ((v95 & 1) != (v103 & 1)) {
        goto LABEL_58;
      }
      unint64_t v94 = v102;
    }
    if (v95)
    {
      uint64_t v104 = v83;
      uint64_t v105 = v170[7] + 112 * v94;
      uint64_t v144 = *(void *)(v105 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v106 = v84;
      *(void *)uint64_t v105 = v84;
      *(void *)(v105 + 8) = v40;
      *(void *)(v105 + 16) = v73;
      *(void *)(v105 + 24) = v81;
      *(void *)(v105 + 32) = v104;
      *(unsigned char *)(v105 + 40) = BYTE4(v154);
      *(void *)(v105 + 48) = v156;
      *(void *)(v105 + 56) = v162;
      *(void *)(v105 + 64) = v158;
      *(void *)(v105 + 72) = v167;
      *(void *)(v105 + 80) = v166;
      *(void *)(v105 + 88) = v165;
      *(void *)(v105 + 96) = v160;
      *(void *)(v105 + 104) = v164;
    }
    else
    {
      sub_1B299EB3C((uint64_t)&v170[v94 >> 6]);
      uint64_t v107 = (uint64_t *)(v170[6] + 16 * v94);
      *uint64_t v107 = v84;
      v107[1] = v40;
      uint64_t v108 = v170[7] + 112 * v94;
      *(void *)uint64_t v108 = v84;
      *(void *)(v108 + 8) = v40;
      *(void *)(v108 + 16) = v73;
      *(void *)(v108 + 24) = v81;
      *(void *)(v108 + 32) = v83;
      *(unsigned char *)(v108 + 40) = BYTE4(v154);
      *(void *)(v108 + 48) = v156;
      *(void *)(v108 + 56) = v67;
      *(void *)(v108 + 64) = v158;
      *(void *)(v108 + 72) = v167;
      *(void *)(v108 + 80) = v166;
      *(void *)(v108 + 88) = v165;
      *(void *)(v108 + 96) = v160;
      *(void *)(v108 + 104) = v164;
      uint64_t v109 = v170[2];
      BOOL v93 = __OFADD__(v109, 1);
      uint64_t v110 = v109 + 1;
      if (v93) {
        goto LABEL_55;
      }
      uint64_t v106 = v84;
      v170[2] = v110;
      swift_bridgeObjectRetain();
    }
    *uint64_t v168 = v170;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1B2E1C530((uint64_t)&v174);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v111 = a10;
    uint64_t v28 = v150;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299B8BC();
      sub_1B29B7048();
      uint64_t v111 = v114;
    }
    uint64_t v24 = (void *)v146;
    unint64_t v112 = *(void *)(v111 + 16);
    if (v112 >= *(void *)(v111 + 24) >> 1)
    {
      sub_1B29B7048();
      uint64_t v111 = v115;
    }
    *(void *)(v111 + 16) = v112 + 1;
    uint64_t v113 = v111 + 16 * v112;
    *(void *)(v113 + 32) = v106;
    *(void *)(v113 + 40) = v40;
    sub_1B2E1C5D4((uint64_t)&v174);
    a10 = v111;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v31 = v152;
    if (v150) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v34 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      goto LABEL_56;
    }
    if (v34 >= v142) {
      goto LABEL_43;
    }
    ++v31;
    if (*(void *)(v140 + 8 * v34)) {
      goto LABEL_16;
    }
    int64_t v31 = v34 + 1;
    if (v34 + 1 >= v142) {
      goto LABEL_43;
    }
    if (*(void *)(v140 + 8 * v31)) {
      goto LABEL_16;
    }
    int64_t v31 = v34 + 2;
    if (v34 + 2 >= v142) {
      goto LABEL_43;
    }
    if (*(void *)(v140 + 8 * v31)) {
      goto LABEL_16;
    }
    int64_t v35 = v34 + 3;
    if (v35 >= v142)
    {
LABEL_43:
      swift_release();
      sub_1B29D4A88(&a10);
      uint64_t v169 = v24[19];
      v24[19] = v130;
      v24[20] = v132;
      v24[21] = v134;
      v24[22] = v138;
      v24[23] = v128;
      unsigned char v24[24] = v136;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2E1A134(v169);
      sub_1B2E1A1A0();
      swift_bridgeObjectRelease();
      if (v126)
      {
        id v120 = v126;
        sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
        if (swift_dynamicCast())
        {
          uint64_t v122 = v174;
          unint64_t v121 = v175;
          if (v176 != 1) {
            goto LABEL_51;
          }
          uint64_t v123 = HIBYTE(v175) & 0xF;
          if ((v175 & 0x2000000000000000) == 0) {
            uint64_t v123 = v174 & 0xFFFFFFFFFFFFLL;
          }
          if (v123)
          {

            sub_1B2E1C4E4();
            uint64_t v124 = sub_1B299E4D4();
            *uint64_t v125 = v122;
            v125[1] = v121;
            sub_1B29A5524(v124, (uint64_t)v125);
          }
          else
          {
LABEL_51:
            sub_1B2A71F2C();
            sub_1B29EB530();
          }
        }
      }
      else
      {
        sub_1B2E1A928();
      }
      goto LABEL_53;
    }
    if (!*(void *)(v140 + 8 * v35))
    {
      while (1)
      {
        int64_t v31 = v35 + 1;
        if (__OFADD__(v35, 1)) {
          goto LABEL_57;
        }
        if (v31 >= v142) {
          goto LABEL_43;
        }
        ++v35;
        if (*(void *)(v140 + 8 * v31)) {
          goto LABEL_16;
        }
      }
    }
    int64_t v31 = v35;
LABEL_16:
    sub_1B299E5A0();
    uint64_t v28 = v37 & v36;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  sub_1B2E83858();
  __break(1u);
}

uint64_t sub_1B2E19064(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if ((a6 & 1) == 0) {
      return 0;
    }
  }
  else if (a6)
  {
    return 0;
  }
  if (a1 == a4 && a2 == a5) {
    return 1;
  }
  else {
    return sub_1B2E837A8();
  }
}

uint64_t sub_1B2E1909C(uint64_t a1, uint64_t a2)
{
  return sub_1B2E19064(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1B2E190B8()
{
  uint64_t result = sub_1B2DDC660((uint64_t)&unk_1F0AC1880);
  qword_1EB7F3390 = result;
  return result;
}

uint64_t sub_1B2E190E0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a2;
  *(void *)(v2 + 144) = 25;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_OWORD *)(v2 + 184) = 0u;
  swift_retain();
  sub_1B2E1A134(0);
  *(void *)(v2 + 128) = sub_1B2E82148();
  uint64_t v85 = (uint64_t *)(v2 + 128);
  uint64_t v65 = v2;
  uint64_t v66 = a1;
  sub_1B299F9C0();
  sub_1B2E1C770();
  uint64_t v61 = a1 + 64;
  uint64_t v62 = v6;
  if (!v4) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v67 = (v4 - 1) & v4;
  uint64_t v69 = v5;
  for (unint64_t i = __clz(__rbit64(v4)) | (v5 << 6); ; unint64_t i = v14 + (v13 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v66 + 48) + 16 * i);
    uint64_t v16 = v15[1];
    uint64_t v84 = *v15;
    uint64_t v17 = *(void *)(v66 + 56) + 112 * i;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v21 = *(void *)(v17 + 16);
    uint64_t v20 = *(void *)(v17 + 24);
    uint64_t v22 = *(void *)(v17 + 32);
    int v23 = *(unsigned __int8 *)(v17 + 40);
    uint64_t v24 = *(void *)(v17 + 48);
    uint64_t v25 = *(void *)(v17 + 56);
    uint64_t v26 = *(void *)(v17 + 64);
    uint64_t v27 = *(void *)(v17 + 72);
    uint64_t v28 = *(void *)(v17 + 80);
    uint64_t v29 = *(void *)(v17 + 88);
    uint64_t v30 = *(void *)(v17 + 96);
    uint64_t v31 = *(void *)(v17 + 104);
    v87[0] = v84;
    v87[1] = v16;
    v87[2] = v18;
    v87[3] = v19;
    v87[4] = v21;
    v87[5] = v20;
    uint64_t v71 = v20;
    v87[6] = v22;
    HIDWORD(v73) = v23;
    char v88 = v23;
    uint64_t v74 = v24;
    uint64_t v76 = v26;
    uint64_t v89 = v24;
    uint64_t v90 = v25;
    uint64_t v91 = v26;
    uint64_t v92 = v27;
    uint64_t v93 = v28;
    uint64_t v94 = v29;
    uint64_t v78 = v30;
    uint64_t v95 = v30;
    uint64_t v96 = v31;
    sub_1B2E1C530((uint64_t)v87);
    sub_1B2E1C530((uint64_t)v87);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1B2E1C530((uint64_t)v87);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v83 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v86 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B29A0E20();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v97 = *v85;
    *uint64_t v85 = 0x8000000000000000;
    sub_1B29DB060(v84, v16, v32, v33, v34, v35, v36, v37, v59, v60, v61, v62, v63, v64, v65, v66, v67, v69, v71,
      v73,
      v74,
      v76,
      v78,
      v31,
      v29,
      v28);
    sub_1B2E1C87C();
    if (v40)
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    unint64_t v41 = v38;
    char v42 = v39;
    sub_1B29A3EB4(&qword_1EB7D9878);
    if (sub_1B2E83398())
    {
      uint64_t v49 = sub_1B29DB060(v84, v16, v43, v44, v45, v46, v47, v48, v59, v60, v61, v62, v63, v64, v65, v66, v68, v70, v72,
              v73,
              v75,
              v77,
              v79,
              v80,
              v81,
              v82);
      if ((v42 & 1) != (v50 & 1)) {
        goto LABEL_31;
      }
      unint64_t v41 = v49;
    }
    uint64_t v51 = v97;
    if (v42)
    {
      uint64_t v52 = *(void *)(v97 + 56) + 112 * v41;
      uint64_t v63 = *(void *)(v52 + 80);
      uint64_t v64 = *(void *)(v52 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v52 = v84;
      *(void *)(v52 + 8) = v16;
      *(void *)(v52 + 16) = v86;
      *(void *)(v52 + 24) = v72;
      *(void *)(v52 + 32) = v22;
      *(unsigned char *)(v52 + 40) = BYTE4(v73);
      *(void *)(v52 + 48) = v75;
      *(void *)(v52 + 56) = v83;
      *(void *)(v52 + 64) = v77;
      *(void *)(v52 + 72) = v27;
      *(void *)(v52 + 80) = v82;
      *(void *)(v52 + 88) = v81;
      *(void *)(v52 + 96) = v79;
      *(void *)(v52 + 104) = v80;
    }
    else
    {
      sub_1B299D418(v97 + 8 * (v41 >> 6));
      uint64_t v54 = (uint64_t *)(v53 + 16 * v41);
      uint64_t *v54 = v84;
      v54[1] = v16;
      uint64_t v55 = *(void *)(v51 + 56) + 112 * v41;
      *(void *)uint64_t v55 = v84;
      *(void *)(v55 + 8) = v16;
      *(void *)(v55 + 16) = v86;
      *(void *)(v55 + 24) = v72;
      *(void *)(v55 + 32) = v22;
      *(unsigned char *)(v55 + 40) = BYTE4(v73);
      *(void *)(v55 + 48) = v75;
      *(void *)(v55 + 56) = v83;
      *(void *)(v55 + 64) = v77;
      *(void *)(v55 + 72) = v27;
      *(void *)(v55 + 80) = v82;
      *(void *)(v55 + 88) = v81;
      *(void *)(v55 + 96) = v79;
      *(void *)(v55 + 104) = v80;
      uint64_t v56 = *(void *)(v51 + 16);
      BOOL v40 = __OFADD__(v56, 1);
      uint64_t v57 = v56 + 1;
      if (v40) {
        goto LABEL_28;
      }
      *(void *)(v51 + 16) = v57;
      swift_bridgeObjectRetain();
    }
    *uint64_t v85 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1B2E1C5D4((uint64_t)v87);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = v65;
    unint64_t v4 = v68;
    uint64_t v5 = v70;
    if (v68) {
      goto LABEL_2;
    }
LABEL_3:
    uint64_t v8 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_29;
    }
    if (v8 >= v62) {
      goto LABEL_26;
    }
    if (!*(void *)(v61 + 8 * v8))
    {
      if (v5 + 2 >= v62) {
        goto LABEL_26;
      }
      if (!*(void *)(v61 + 8 * (v5 + 2)))
      {
        if (v5 + 3 >= v62) {
          goto LABEL_26;
        }
        if (!*(void *)(v61 + 8 * (v5 + 3)))
        {
          uint64_t v9 = v5 + 4;
          if (v5 + 4 >= v62)
          {
LABEL_26:
            swift_release();
            swift_release();
            *(_OWORD *)(v2 + 96) = 0u;
            *(_OWORD *)(v2 + 112) = 0u;
            *(_OWORD *)(v2 + 64) = 0u;
            *(_OWORD *)(v2 + 80) = 0u;
            *(_OWORD *)(v2 + 32) = 0u;
            *(_OWORD *)(v2 + 48) = 0u;
            *(_OWORD *)(v2 + 16) = 0u;
            return v2;
          }
          if (!*(void *)(v61 + 8 * v9)) {
            break;
          }
        }
      }
    }
LABEL_15:
    sub_1B299E5A0();
    uint64_t v67 = v12 & v11;
    uint64_t v69 = v13;
  }
  while (1)
  {
    uint64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v10 >= v62) {
      goto LABEL_26;
    }
    ++v9;
    if (*(void *)(v61 + 8 * v10)) {
      goto LABEL_15;
    }
  }
LABEL_30:
  __break(1u);
LABEL_31:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2E19658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1B2E1C740();
  uint64_t v7 = *(void *)(v3 + 128);
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B29DB060(a1, a2, v8, v9, v10, v11, v12, v13, v25, v27, v29, v31, v33, v35, v37, v39, v41, v43, v45,
            v46,
            v47,
            v48,
            v50,
            v51,
            v52,
            v53);
    if (v15)
    {
      uint64_t v16 = *(void *)(v7 + 56) + 112 * v14;
      uint64_t v49 = *(void *)v16;
      uint64_t v17 = *(void *)(v16 + 16);
      uint64_t v42 = *(void *)(v16 + 24);
      uint64_t v18 = *(void *)(v16 + 32);
      char v40 = *(unsigned char *)(v16 + 40);
      uint64_t v19 = *(void *)(v16 + 56);
      uint64_t v36 = *(void *)(v16 + 64);
      uint64_t v38 = *(void *)(v16 + 48);
      uint64_t v26 = *(void *)(v16 + 72);
      uint64_t v28 = *(void *)(v16 + 8);
      uint64_t v20 = *(void *)(v16 + 88);
      uint64_t v34 = *(void *)(v16 + 96);
      uint64_t v30 = *(void *)(v16 + 80);
      uint64_t v32 = *(void *)(v16 + 104);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a3 = v49;
      *(void *)(a3 + 8) = v28;
      *(void *)(a3 + 16) = v17;
      *(void *)(a3 + 24) = v42;
      *(void *)(a3 + 32) = v18;
      *(unsigned char *)(a3 + 40) = v40;
      *(void *)(a3 + 48) = v38;
      *(void *)(a3 + 56) = v19;
      *(void *)(a3 + 64) = v36;
      *(void *)(a3 + 72) = v26;
      *(void *)(a3 + 80) = v30;
      *(void *)(a3 + 88) = v20;
      *(void *)(a3 + 96) = v34;
      *(void *)(a3 + 104) = v32;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  sub_1B2E1C868();
  uint64_t v44 = v22;
  sub_1B2E82518();
  sub_1B2E82518();
  sub_1B2E1C4E4();
  uint64_t v23 = sub_1B299E4D4();
  *uint64_t v24 = v44;
  v24[1] = 0xE900000000000020;
  return sub_1B2D5F6B4(v23, (uint64_t)v24);
}

uint64_t sub_1B2E1985C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = v5;
  if (qword_1EB7D96F8 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EB7F3390;
  uint64_t v9 = *a5;
  uint64_t v10 = *(void *)(*a5 + 16);
  uint64_t v11 = *(void *)(*a5 + 24);
  swift_bridgeObjectRetain();
  sub_1B29FB4D4(v10, v11, v8);
  LOBYTE(v10) = v12;
  swift_bridgeObjectRelease();
  if (v10)
  {
    if (*(void *)(v9 + 16) == 0xD00000000000001ALL && *(void *)(v9 + 24) == 0x80000001B2E8E7A0
      || (sub_1B2E1C7C8() & 1) != 0)
    {
      char v13 = 0;
      *(unsigned char *)(v9 + 64) = 8;
      *(void *)(v9 + 48) = 500;
    }
    else
    {
      char v13 = 0;
      *(unsigned char *)(v9 + 64) = 6;
    }
    return v13 & 1;
  }
  uint64_t result = sub_1B2E199E8((void *)v9, 25);
  if (v6) {
    return v13 & 1;
  }
  uint64_t v15 = result;
  if (result)
  {
    uint64_t v16 = *(void *)(result + 40);
    swift_retain();
    if (v16)
    {
      do
      {
        uint64_t v17 = v16;
        swift_retain();
        swift_release();
        uint64_t v16 = *(void *)(v16 + 40);
      }
      while (v16);
    }
    else
    {
      uint64_t v17 = v15;
    }
    *(void *)(v17 + 40) = *(void *)(v9 + 40);
    *(void *)(v15 + 48) = *(void *)(v9 + 48);
    swift_retain();
    swift_release();
    swift_release();
    *a5 = v15;
    char v13 = 1;
    return v13 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2E199E8(void *a1, uint64_t a2)
{
  uint64_t v65 = a1;
  if (a2 <= 0)
  {
    uint64_t v9 = a1[2];
    uint64_t v8 = a1[3];
    swift_bridgeObjectRetain();
    char v10 = sub_1B2E1BBF8(v9, v8);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B299D804();
    uint64_t v12 = a1[4];
    if (v12)
    {
      uint64_t v13 = v12;
    }
    else
    {
      type metadata accessor for KnosisQueryParam();
      uint64_t result = sub_1B2E82148();
      uint64_t v13 = result;
    }
    int64_t v47 = 0;
    uint64_t v48 = v13 + 64;
    uint64_t v49 = 1 << *(unsigned char *)(v13 + 32);
    uint64_t v50 = -1;
    if (v49 < 64) {
      uint64_t v50 = ~(-1 << v49);
    }
    uint64_t v51 = v50 & *(void *)(v13 + 64);
    int64_t v52 = (unint64_t)(v49 + 63) >> 6;
    while (1)
    {
      if (v51)
      {
        sub_1B2CC740C();
        int64_t v54 = v53 | (v47 << 6);
      }
      else
      {
        int64_t v55 = v47 + 1;
        if (__OFADD__(v47, 1))
        {
LABEL_84:
          __break(1u);
          goto LABEL_85;
        }
        if (v55 >= v52) {
          goto LABEL_77;
        }
        ++v47;
        if (!*(void *)(v48 + 8 * v55))
        {
          int64_t v47 = v55 + 1;
          if (v55 + 1 >= v52) {
            goto LABEL_77;
          }
          if (!*(void *)(v48 + 8 * v47))
          {
            int64_t v47 = v55 + 2;
            if (v55 + 2 >= v52) {
              goto LABEL_77;
            }
            if (!*(void *)(v48 + 8 * v47))
            {
              int64_t v56 = v55 + 3;
              if (v56 >= v52)
              {
LABEL_77:
                swift_bridgeObjectRetain();
                swift_release();
                if (v10 != 1) {
                  return swift_retain();
                }
                goto LABEL_78;
              }
              if (!*(void *)(v48 + 8 * v56))
              {
                while (1)
                {
                  int64_t v47 = v56 + 1;
                  if (__OFADD__(v56, 1)) {
                    break;
                  }
                  if (v47 >= v52) {
                    goto LABEL_77;
                  }
                  ++v56;
                  if (*(void *)(v48 + 8 * v47)) {
                    goto LABEL_74;
                  }
                }
LABEL_85:
                __break(1u);
                return result;
              }
              int64_t v47 = v56;
            }
          }
        }
LABEL_74:
        sub_1B2E1C840();
        int64_t v54 = v57 + (v47 << 6);
      }
      uint64_t v58 = *(void *)(*(void *)(v13 + 56) + 8 * v54);
      uint64_t result = sub_1B299D804();
      if (*(void *)(v58 + 24))
      {
        swift_bridgeObjectRetain();
        swift_release();
LABEL_78:
        sub_1B2E831F8();
        sub_1B2E82518();
        swift_bridgeObjectRetain();
        sub_1B2A29C90();
        swift_bridgeObjectRelease();
        sub_1B2E82518();
        sub_1B2E1C4E4();
        uint64_t v59 = sub_1B299E4D4();
        void *v60 = 0;
        v60[1] = 0xE000000000000000;
        return sub_1B2D5F6B4(v59, (uint64_t)v60);
      }
    }
  }
  uint64_t v63 = v2;
  uint64_t v6 = a1 + 4;
  sub_1B299D804();
  uint64_t v64 = v3;
  if (a1[4])
  {
    uint64_t v7 = a1[4];
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    uint64_t v7 = sub_1B2E82148();
  }
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  uint64_t v16 = v15 & *(void *)(v7 + 64);
  sub_1B2E1C770();
  uint64_t v78 = v17;
  uint64_t v62 = a2 - 1;
  uint64_t v19 = v18;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v20 = 0;
  uint64_t v66 = v19;
  uint64_t v67 = (uint64_t)(a1 + 4);
  while (v16)
  {
    sub_1B2E1C854();
    uint64_t v22 = v21 | (v20 << 6);
LABEL_23:
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v22);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    sub_1B2E1C740();
    uint64_t v31 = *v6;
    if (*v6)
    {
      if (!*(void *)(v31 + 16))
      {
        swift_retain_n();
        swift_bridgeObjectRetain();
        goto LABEL_41;
      }
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      uint64_t v38 = sub_1B29DB060(v29, v30, v32, v33, v34, v35, v36, v37, v61, v62, v63, v64, (uint64_t)v65, v66, v67, v68, v69, v70, v71,
              v72,
              v73,
              v74,
              v75,
              v76,
              v77,
              v78);
      if (v39)
      {
        uint64_t v40 = *(void *)(*(void *)(v31 + 56) + 8 * v38);
        swift_endAccess();
        swift_retain();
        swift_release();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        if (*(void *)(v40 + 24))
        {
          BOOL v41 = v65[2] == 0x68636165726F66 && v65[3] == 0xE700000000000000;
          if (v41 || (sub_1B2E837A8())
            && ((sub_1B2E1C868(), v29 == v42) ? (BOOL v43 = v30 == 0xE800000000000000) : (BOOL v43 = 0),
                v43 || (sub_1B2E837A8() & 1) != 0))
          {
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            uint64_t v44 = swift_retain();
            uint64_t v45 = sub_1B2E199E8(v44, v62);
            if (v64)
            {
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              return swift_bridgeObjectRelease();
            }
            uint64_t v46 = v45;
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            *(void *)(v40 + 24) = v46;
            swift_release();
          }
          uint64_t result = swift_release();
        }
        else
        {
          swift_release();
          swift_release();
          uint64_t result = swift_bridgeObjectRelease();
        }
        uint64_t v19 = v66;
        uint64_t v6 = (uint64_t *)v67;
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_41:
        swift_endAccess();
        swift_bridgeObjectRelease();
        uint64_t result = swift_release_n();
      }
    }
    else
    {
      uint64_t result = swift_endAccess();
    }
  }
  if (__OFADD__(v20++, 1))
  {
    __break(1u);
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  if (v20 >= v78) {
    goto LABEL_52;
  }
  if (*(void *)(v19 + 8 * v20))
  {
LABEL_22:
    sub_1B29A08E0();
    uint64_t v16 = v26 & v25;
    uint64_t v22 = v27 + (v20 << 6);
    goto LABEL_23;
  }
  uint64_t v24 = v20 + 1;
  if (v20 + 1 >= v78) {
    goto LABEL_52;
  }
  if (*(void *)(v19 + 8 * v24)) {
    goto LABEL_21;
  }
  uint64_t v24 = v20 + 2;
  if (v20 + 2 >= v78) {
    goto LABEL_52;
  }
  if (*(void *)(v19 + 8 * v24))
  {
LABEL_21:
    uint64_t v20 = v24;
    goto LABEL_22;
  }
  uint64_t v24 = v20 + 3;
  if (v20 + 3 < v78)
  {
    if (!*(void *)(v19 + 8 * v24))
    {
      while (1)
      {
        uint64_t v20 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_83;
        }
        if (v20 >= v78) {
          goto LABEL_52;
        }
        ++v24;
        if (*(void *)(v19 + 8 * v20)) {
          goto LABEL_22;
        }
      }
    }
    goto LABEL_21;
  }
LABEL_52:
  swift_release();
  uint64_t result = sub_1B2E1BCC4(v65);
  if (!v64 && !result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B2E1A038()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 152);

  return sub_1B2E1A134(v1);
}

uint64_t *sub_1B2E1A078()
{
  sub_1B29B2124(v0[2], v0[3]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2E1A134(v0[19]);
  return v0;
}

uint64_t sub_1B2E1A0DC()
{
  sub_1B2E1A078();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Virtual()
{
  return self;
}

uint64_t sub_1B2E1A134(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B2E1A1A0()
{
  sub_1B299F300();
  uint64_t v101 = v1;
  uint64_t v3 = v2;
  uint64_t v107 = sub_1B2E83A78();
  uint64_t v4 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v106 = (uint64_t)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v7 = sub_1B2E82148();
  uint64_t v8 = v3;
  uint64_t v9 = (void *)v7;
  uint64_t v10 = *(void *)(v8 + 16);
  if (!v10)
  {
LABEL_47:
    if (*(void *)(v6 + 16))
    {
      sub_1B2E1C80C();
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      sub_1B2E1C77C();
      unint64_t v121 = v93;
      uint64_t v122 = v94;
      MEMORY[0x1B3EB1020](v6, MEMORY[0x1E4FBB1A0]);
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v95 = v121;
      uint64_t v96 = v122;
      sub_1B2E1C4E4();
      uint64_t v97 = sub_1B299E4D4();
      *uint64_t v98 = v95;
      v98[1] = v96;
      sub_1B29A5524(v97, (uint64_t)v98);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1B29998C8();
    return;
  }
  uint64_t v109 = (uint64_t *)(v0 + 128);
  uint64_t v105 = v4 + 8;
  uint64_t v11 = v8;
  swift_bridgeObjectRetain();
  uint64_t v100 = v11;
  uint64_t v12 = (uint64_t *)(v11 + 40);
  uint64_t v103 = 0x80000001B2EA5630;
  uint64_t v102 = 0x80000001B2EA55E0;
  uint64_t v13 = v9;
  while (1)
  {
    uint64_t v15 = *(v12 - 1);
    uint64_t v14 = *v12;
    uint64_t v16 = HIBYTE(*v12) & 0xF;
    if ((*v12 & 0x2000000000000000) == 0) {
      uint64_t v16 = v15 & 0xFFFFFFFFFFFFLL;
    }
    if (!v16) {
      break;
    }
    uint64_t v118 = v12;
    uint64_t v119 = v10;
    swift_bridgeObjectRetain_n();
    unint64_t v17 = sub_1B2E825F8();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    if (sub_1B2E82278())
    {
      if ((sub_1B2D2E4AC(v17, v19) & 0x100000000) != 0) {
        goto LABEL_54;
      }
      char v20 = v106;
      sub_1B2E83A88();
      sub_1B2E83A48();
      uint64_t v21 = sub_1B299FD3C();
      v22(v21);
      if (v20)
      {
LABEL_16:
        swift_bridgeObjectRelease();
LABEL_17:
        char v27 = 1;
        goto LABEL_24;
      }
    }
    if (sub_1B2E82248())
    {
      if (sub_1B2E82278())
      {
        if ((sub_1B2D2E4AC(v17, v19) & 0x100000000) != 0) {
          goto LABEL_55;
        }
        char v23 = v106;
        sub_1B2E83A88();
        sub_1B2E83A68();
        uint64_t v24 = sub_1B299FD3C();
        v25(v24);
        if (v23) {
          goto LABEL_16;
        }
      }
      if ((sub_1B2E82258() & 1) == 0) {
        goto LABEL_16;
      }
      char v26 = sub_1B2E82248();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1B2E1C80C();
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    unint64_t v121 = 0xD00000000000001DLL;
    uint64_t v122 = v102;
    sub_1B2E82518();
    unint64_t v28 = v121;
    uint64_t v29 = v122;
    uint64_t v30 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B2999EA0();
      uint64_t v6 = v91;
    }
    unint64_t v31 = *(void *)(v6 + 16);
    if (v31 >= *(void *)(v6 + 24) >> 1)
    {
      sub_1B2E1C788();
      uint64_t v6 = v92;
    }
    char v27 = 0;
    *(void *)(v6 + 16) = v31 + 1;
    uint64_t v32 = v6 + 16 * v31;
    *(void *)(v32 + 32) = v28;
    *(void *)(v32 + 40) = v29;
    uint64_t v15 = v30;
LABEL_24:
    uint64_t v33 = sub_1B2E823F8();
    uint64_t v41 = v33;
    uint64_t v42 = v34;
    uint64_t v43 = v13[2];
    id v120 = v13;
    if (v43)
    {
      sub_1B29DB060(v33, v34, v35, v36, v37, v38, v39, v40, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108, (uint64_t)v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116);
      if (v44)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1B2E1C80C();
        sub_1B2E831F8();
        swift_bridgeObjectRelease();
        unint64_t v121 = 0xD000000000000015;
        uint64_t v122 = v103;
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2E82518();
        sub_1B2E82518();
        unint64_t v45 = v121;
        uint64_t v46 = v122;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2999EA0();
          uint64_t v6 = v89;
        }
        unint64_t v47 = *(void *)(v6 + 16);
        if (v47 >= *(void *)(v6 + 24) >> 1)
        {
          sub_1B2E1C788();
          uint64_t v6 = v90;
        }
        *(void *)(v6 + 16) = v47 + 1;
        uint64_t v110 = v6;
        uint64_t v48 = v6 + 16 * v47;
        *(void *)(v48 + 32) = v45;
        *(void *)(v48 + 40) = v46;
        goto LABEL_39;
      }
    }
    if ((v27 & 1) == 0)
    {
      uint64_t v110 = v6;
      swift_bridgeObjectRelease();
LABEL_39:
      sub_1B29A0E20();
      swift_bridgeObjectRetain();
      uint64_t v108 = sub_1B29DB060(v15, v14, v69, v70, v71, v72, v73, v74, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108, (uint64_t)v109,
               v110,
               v111,
               v112,
               v113,
               v114,
               v115,
               v116);
      char v76 = v75;
      swift_bridgeObjectRelease();
      uint64_t v77 = 0;
      uint64_t v116 = 0;
      uint64_t v117 = 0;
      uint64_t v114 = 0;
      uint64_t v115 = 0;
      uint64_t v112 = 0;
      uint64_t v113 = 0;
      uint64_t v111 = 0;
      if (v76)
      {
        uint64_t v78 = v109;
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v123 = *v78;
        uint64_t *v78 = 0x8000000000000000;
        sub_1B29A3EB4(&qword_1EB7D9878);
        sub_1B2E83398();
        uint64_t v79 = v108;
        swift_bridgeObjectRelease();
        uint64_t v80 = *(void *)(v123 + 56) + 112 * v79;
        uint64_t v104 = *(void *)v80;
        uint64_t v81 = *(void *)(v80 + 8);
        uint64_t v116 = *(void *)(v80 + 16);
        uint64_t v117 = v81;
        uint64_t v82 = *(void *)(v80 + 24);
        uint64_t v114 = *(void *)(v80 + 32);
        uint64_t v115 = v82;
        uint64_t v113 = *(unsigned __int8 *)(v80 + 40);
        uint64_t v83 = *(void *)(v80 + 48);
        uint64_t v111 = *(void *)(v80 + 56);
        uint64_t v112 = v83;
        sub_1B2E833B8();
        uint64_t *v78 = v123;
        uint64_t v77 = v104;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      sub_1B29B2124(v77, v117);
      swift_bridgeObjectRelease();
      uint64_t v6 = v110;
      uint64_t v13 = v120;
      goto LABEL_45;
    }
    unint64_t v49 = (unint64_t)v120;
    swift_isUniquelyReferenced_nonNull_native();
    unint64_t v121 = v49;
    uint64_t v117 = v41;
    uint64_t v56 = sub_1B29DB060(v41, v42, v50, v51, v52, v53, v54, v55, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108, (uint64_t)v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116);
    if (__OFADD__(*(void *)(v49 + 16), (v57 & 1) == 0)) {
      goto LABEL_52;
    }
    unint64_t v58 = v56;
    char v59 = v57;
    sub_1B29A3EB4(&qword_1EB7D9850);
    if (sub_1B2E83398())
    {
      uint64_t v66 = sub_1B29DB060(v117, v42, v60, v61, v62, v63, v64, v65, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108, (uint64_t)v109,
              v110,
              v111,
              v112,
              v113,
              v114,
              v115,
              v116);
      if ((v59 & 1) != (v67 & 1)) {
        goto LABEL_56;
      }
      unint64_t v58 = v66;
    }
    uint64_t v13 = (void *)v121;
    if (v59)
    {
      uint64_t v68 = (uint64_t *)(*(void *)(v121 + 56) + 16 * v58);
      swift_bridgeObjectRelease();
      *uint64_t v68 = v15;
      v68[1] = v14;
    }
    else
    {
      sub_1B299EB3C(v121 + 8 * (v58 >> 6));
      uint64_t v84 = (void *)(v13[6] + 16 * v58);
      *uint64_t v84 = v117;
      v84[1] = v42;
      uint64_t v85 = (uint64_t *)(v13[7] + 16 * v58);
      *uint64_t v85 = v15;
      v85[1] = v14;
      uint64_t v86 = v13[2];
      BOOL v87 = __OFADD__(v86, 1);
      uint64_t v88 = v86 + 1;
      if (v87) {
        goto LABEL_53;
      }
      id v13[2] = v88;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_45:
    uint64_t v12 = v118 + 2;
    uint64_t v10 = v119 - 1;
    if (v119 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  sub_1B2E83858();
  __break(1u);
}

void sub_1B2E1A928()
{
  uint64_t v2 = v1;
  unint64_t v45 = (uint64_t *)(v0 + 128);
  sub_1B299D804();
  uint64_t v3 = *(void *)(v0 + 128) + 64;
  sub_1B299F9C0();
  unint64_t v6 = v5 & v4;
  int64_t v43 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v46 = v0;
  uint64_t v47 = v8;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v42 = v3;
  while (v6)
  {
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_15:
    unint64_t v17 = (uint64_t *)(*(void *)(v47 + 48) + 16 * v11);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    swift_bridgeObjectRetain();
    sub_1B2E1ADB4();
    if (v2)
    {
      sub_1B29A0E20();
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1B29DB060(v18, v19, v20, v21, v22, v23, v24, v25, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, (uint64_t)v45,
              v46,
              v47,
              v18,
              v6,
              v9,
              v2,
              v51);
      char v27 = v26;
      swift_bridgeObjectRelease();
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      uint64_t v51 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      if (v27)
      {
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v54 = *v45;
        *unint64_t v45 = 0x8000000000000000;
        sub_1B29A3EB4(&qword_1EB7D9878);
        sub_1B2E83398();
        swift_bridgeObjectRelease();
        uint64_t v34 = (uint64_t *)(*(void *)(v54 + 56) + 112 * v44);
        uint64_t v52 = v34[1];
        uint64_t v53 = *v34;
        uint64_t v51 = v34[7];
        uint64_t v29 = v34[9];
        uint64_t v30 = v34[10];
        uint64_t v31 = v34[11];
        uint64_t v32 = v34[12];
        uint64_t v33 = v34[13];
        uint64_t v28 = v34[8];
        sub_1B2E833B8();
        *unint64_t v45 = v54;
        uint64_t v3 = v42;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      uint64_t v39 = v32;
      uint64_t v40 = v33;
      uint64_t v37 = v30;
      uint64_t v38 = v31;
      uint64_t v35 = v28;
      uint64_t v36 = v29;
      sub_1B29B2124(v53, v52);
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
      sub_1B2E83388();

      uint64_t v2 = 0;
      unint64_t v6 = v48;
      uint64_t v9 = v49;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if (__OFADD__(v9++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v9 >= v43) {
    goto LABEL_24;
  }
  if (*(void *)(v3 + 8 * v9))
  {
LABEL_14:
    sub_1B29A08E0();
    unint64_t v6 = v15 & v14;
    unint64_t v11 = v16 + (v9 << 6);
    goto LABEL_15;
  }
  uint64_t v13 = v9 + 1;
  if (v9 + 1 >= v43) {
    goto LABEL_24;
  }
  if (*(void *)(v3 + 8 * v13)) {
    goto LABEL_13;
  }
  uint64_t v13 = v9 + 2;
  if (v9 + 2 >= v43) {
    goto LABEL_24;
  }
  if (*(void *)(v3 + 8 * v13)) {
    goto LABEL_13;
  }
  uint64_t v13 = v9 + 3;
  if (v9 + 3 >= v43)
  {
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  if (*(void *)(v3 + 8 * v13))
  {
LABEL_13:
    uint64_t v9 = v13;
    goto LABEL_14;
  }
  while (1)
  {
    uint64_t v9 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v9 >= v43) {
      goto LABEL_24;
    }
    ++v13;
    if (*(void *)(v3 + 8 * v9)) {
      goto LABEL_14;
    }
  }
LABEL_26:
  __break(1u);
}

void sub_1B2E1ADB4()
{
  sub_1B299F300();
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  uint64_t v8 = v3;
  uint64_t v9 = v2;
  if (v2[2])
  {
    BOOL v10 = v2[4] == v3 && v2[5] == v4;
    if (v10 || (sub_1B2E837A8() & 1) != 0)
    {
      sub_1B2E1C7FC();
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      sub_1B2E1C7AC();
      sub_1B2E1C7EC(v11 + 7);
      MEMORY[0x1B3EB1020](v9, MEMORY[0x1E4FBB1A0]);
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
LABEL_17:
      sub_1B2E82518();
      sub_1B2E1C4E4();
      uint64_t v33 = sub_1B299E4D4();
      void *v34 = v102;
      v34[1] = v103;
      sub_1B29A5524(v33, (uint64_t)v34);
LABEL_18:
      sub_1B29998C8();
      return;
    }
  }
  sub_1B2E1C740();
  if (!*(void *)(*(void *)(v0 + 128) + 16))
  {
LABEL_16:
    swift_endAccess();
    sub_1B2E1C7FC();
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B2E1C7AC();
    sub_1B2E1C7EC(v32);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  sub_1B29DB060(v8, v7, v12, v13, v14, v15, v16, v17, v66, v67, v68, v69, v71, v73, v75, v77, v79, v80, v82,
    v84,
    v86,
    v88,
    v89,
    v91,
    v93,
    v95);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v99 = v8;
  uint64_t v100 = v0;
  sub_1B2E1C89C();
  uint64_t v78 = v19;
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v76 = *(void *)(v20 + 24);
  uint64_t v97 = *(void *)(v20 + 32);
  char v74 = *(unsigned char *)(v20 + 40);
  uint64_t v22 = *(void *)(v20 + 56);
  uint64_t v23 = *(void *)(v20 + 72);
  uint64_t v98 = *(void *)(v20 + 64);
  uint64_t v101 = v7;
  uint64_t v24 = *(void *)(v20 + 80);
  uint64_t v25 = *(void *)(v20 + 88);
  uint64_t v70 = *(void *)(v20 + 96);
  uint64_t v72 = *(void *)(v20 + 48);
  uint64_t v26 = v6;
  uint64_t v27 = *(void *)(v20 + 104);
  swift_endAccess();
  swift_bridgeObjectRetain();
  uint64_t v90 = v8;
  swift_bridgeObjectRetain();
  uint64_t v92 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v81 = v26;
  if (v26 <= 0)
  {
    sub_1B2E1C7FC();
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B2E1C7AC();
    sub_1B2E1C7EC(v35 + 29);
    sub_1B2E82518();
    sub_1B2E1C4E4();
    uint64_t v36 = sub_1B299E4D4();
    *uint64_t v37 = v102;
    v37[1] = v103;
    sub_1B29A5524(v36, (uint64_t)v37);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_53;
  }
  uint64_t v87 = v27;
  uint64_t v83 = v23;
  uint64_t v85 = v22;
  uint64_t v28 = v24;
  if (v24)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v29 = (uint64_t)v1;
LABEL_13:
    uint64_t v30 = (void *)swift_retain();
    sub_1B2E1B7D0(v30);
    if (!v29)
    {
      uint64_t v46 = v31;
      swift_release();
      uint64_t v94 = v46 + 56;
      sub_1B299F9C0();
      uint64_t v49 = v48 & v47;
      sub_1B2E1C770();
      uint64_t v96 = v50;
      while (1)
      {
        uint64_t v51 = v98;
        if (v49)
        {
          v49 &= v49 - 1;
        }
        else
        {
          if (__OFADD__(v29++, 1))
          {
            __break(1u);
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
          if (v29 >= v96) {
            goto LABEL_49;
          }
          if (!*(void *)(v94 + 8 * v29))
          {
            uint64_t v53 = v29 + 1;
            if (v29 + 1 >= v96) {
              goto LABEL_49;
            }
            if (!*(void *)(v94 + 8 * v53))
            {
              uint64_t v53 = v29 + 2;
              if (v29 + 2 >= v96) {
                goto LABEL_49;
              }
              if (!*(void *)(v94 + 8 * v53))
              {
                uint64_t v53 = v29 + 3;
                if (v29 + 3 >= v96)
                {
LABEL_49:
                  uint64_t v62 = v25;
                  swift_release();
                  swift_release();
                  uint64_t v63 = v85;
                  uint64_t v64 = v87;
                  if (!v25)
                  {
                    uint64_t v65 = (void *)swift_retain();
                    uint64_t v62 = sub_1B2E199E8(v65, v81);
                    swift_release();
                    uint64_t v51 = v98;
                    uint64_t v63 = v85;
                    uint64_t v64 = v87;
                  }
                  v104[0] = v78;
                  v104[1] = v90;
                  void v104[2] = v92;
                  v104[3] = v76;
                  v104[4] = v97;
                  char v105 = v74;
                  uint64_t v106 = v72;
                  uint64_t v107 = v63;
                  uint64_t v108 = v51;
                  uint64_t v109 = v83;
                  uint64_t v110 = v28;
                  uint64_t v111 = v62;
                  uint64_t v112 = v70;
                  uint64_t v113 = v64;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_retain();
                  swift_retain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1B29A0E20();
                  sub_1B2B2A354(v104, v99, v101);
                  swift_endAccess();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_52;
                }
                if (!*(void *)(v94 + 8 * v53))
                {
                  while (1)
                  {
                    uint64_t v29 = v53 + 1;
                    if (__OFADD__(v53, 1)) {
                      goto LABEL_55;
                    }
                    if (v29 >= v96) {
                      goto LABEL_49;
                    }
                    ++v53;
                    if (*(void *)(v94 + 8 * v29)) {
                      goto LABEL_38;
                    }
                  }
                }
              }
            }
            uint64_t v29 = v53;
          }
LABEL_38:
          sub_1B29A08E0();
          uint64_t v49 = v55 & v54;
        }
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v56 = v9;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B299B8BC();
          sub_1B29B7048();
          uint64_t v56 = v60;
        }
        unint64_t v57 = v56[2];
        if (v57 >= v56[3] >> 1)
        {
          sub_1B29B7048();
          uint64_t v56 = v61;
        }
        v56[2] = v57 + 1;
        unint64_t v58 = &v56[2 * v57];
        v58[4] = v99;
        v58[5] = v101;
        swift_bridgeObjectRelease();
        uint64_t v59 = sub_1B2A71F2C();
        sub_1B2E1ADB4(v59);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  uint64_t v38 = *(void *)(v100 + 152);
  if (v38)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B2E1C678(v38);
    uint64_t v39 = sub_1B2D62780(v98, v23);
    uint64_t v29 = (uint64_t)v1;
    if (!v1)
    {
      uint64_t v28 = v39;
      sub_1B2E1C81C();
      goto LABEL_13;
    }
    sub_1B2E1C81C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v40 = v1;
    sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
    if (swift_dynamicCast())
    {

      uint64_t v41 = ParserError.description.getter();
      uint64_t v43 = v42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2E1C4E4();
      uint64_t v44 = sub_1B299E4D4();
      *unint64_t v45 = v41;
      v45[1] = v43;
      sub_1B29A5524(v44, (uint64_t)v45);
    }

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_52:
    swift_bridgeObjectRelease();
LABEL_53:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
LABEL_56:
  __break(1u);
}

void sub_1B2E1B7D0(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v69 = MEMORY[0x1E4FBC870];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  swift_bridgeObjectRetain();
  uint64_t v61 = v1;
  char v7 = sub_1B2E1BBF8(v5, v6);
  swift_bridgeObjectRelease();
  if (!v7)
  {
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B2E1C7AC();
    sub_1B2E1C77C();
    uint64_t v67 = v16;
    uint64_t v68 = v17;
    swift_bridgeObjectRetain();
    sub_1B2A29C90();
    swift_bridgeObjectRelease();
    uint64_t v18 = v68;
    sub_1B2E1C4E4();
    uint64_t v19 = sub_1B299E4D4();
    *uint64_t v20 = v67;
    v20[1] = v18;
    sub_1B29A5524(v19, (uint64_t)v20);
    return;
  }
  if (v7 == 1)
  {
    uint64_t v8 = a1[2];
    uint64_t v9 = a1[3];
    swift_bridgeObjectRetain();
    sub_1B2A00B00((uint64_t)&v67, v8, v9, v10, v11, v12, v13, v14, v59, v61);
    swift_bridgeObjectRelease();
  }
  sub_1B299D804();
  if (a1[4])
  {
    uint64_t v15 = a1[4];
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    uint64_t v15 = sub_1B2E82148();
  }
  uint64_t v62 = v15 + 64;
  sub_1B2B1225C();
  uint64_t v23 = v22 & v21;
  sub_1B2E1C770();
  uint64_t v63 = v24;
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  uint64_t v60 = v15;
  do
  {
LABEL_9:
    if (v23)
    {
      sub_1B2CC740C();
      uint64_t v27 = v26 | (v25 << 6);
    }
    else
    {
      if (__OFADD__(v25++, 1)) {
        goto LABEL_51;
      }
      if (v25 >= v63) {
        goto LABEL_47;
      }
      if (!*(void *)(v62 + 8 * v25))
      {
        uint64_t v29 = v25 + 1;
        if (v25 + 1 >= v63) {
          goto LABEL_47;
        }
        if (!*(void *)(v62 + 8 * v29))
        {
          uint64_t v29 = v25 + 2;
          if (v25 + 2 >= v63) {
            goto LABEL_47;
          }
          if (!*(void *)(v62 + 8 * v29))
          {
            uint64_t v29 = v25 + 3;
            if (v25 + 3 >= v63) {
              goto LABEL_47;
            }
            if (!*(void *)(v62 + 8 * v29))
            {
              while (1)
              {
                uint64_t v25 = v29 + 1;
                if (__OFADD__(v29, 1)) {
                  goto LABEL_52;
                }
                if (v25 >= v63) {
                  break;
                }
                ++v29;
                if (*(void *)(v62 + 8 * v25)) {
                  goto LABEL_21;
                }
              }
LABEL_47:
              swift_release();
              return;
            }
          }
        }
        uint64_t v25 = v29;
      }
LABEL_21:
      sub_1B29A08E0();
      uint64_t v23 = v31 & v30;
      uint64_t v27 = v32 + (v25 << 6);
    }
    uint64_t v33 = *(void *)(*(void *)(v15 + 56) + 8 * v27);
    sub_1B299D804();
  }
  while (!*(void *)(v33 + 24));
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v34 = swift_retain();
  uint64_t v35 = sub_1B2E1B7D0(v34);
  if (v3)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v36 = v35;
  uint64_t v64 = v23;
  uint64_t v65 = v25;
  int64_t v37 = 0;
  uint64_t v38 = v35 + 56;
  sub_1B2B1225C();
  uint64_t v41 = v40 & v39;
  int64_t v43 = (unint64_t)(v42 + 63) >> 6;
  if ((v40 & v39) != 0)
  {
LABEL_25:
    sub_1B2D96E84();
    int64_t v45 = v44 | (v37 << 6);
    goto LABEL_40;
  }
  while (1)
  {
    int64_t v46 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v46 >= v43) {
      goto LABEL_42;
    }
    ++v37;
    if (!*(void *)(v38 + 8 * v46))
    {
      int64_t v37 = v46 + 1;
      if (v46 + 1 >= v43) {
        goto LABEL_42;
      }
      if (!*(void *)(v38 + 8 * v37))
      {
        int64_t v37 = v46 + 2;
        if (v46 + 2 >= v43) {
          goto LABEL_42;
        }
        if (!*(void *)(v38 + 8 * v37)) {
          break;
        }
      }
    }
LABEL_39:
    sub_1B299E5A0();
    uint64_t v41 = v49 & v48;
    int64_t v45 = v50 + (v37 << 6);
LABEL_40:
    uint64_t v51 = (uint64_t *)(*(void *)(v36 + 48) + 16 * v45);
    uint64_t v52 = *v51;
    uint64_t v53 = v51[1];
    swift_bridgeObjectRetain();
    sub_1B2A00B00((uint64_t)v66, v52, v53, v54, v55, v56, v57, v58, v60, v61);
    swift_bridgeObjectRelease();
    if (v41) {
      goto LABEL_25;
    }
  }
  int64_t v47 = v46 + 3;
  if (v47 >= v43)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v25 = v65;
    uint64_t v3 = 0;
    uint64_t v15 = v60;
    uint64_t v23 = v64;
    goto LABEL_9;
  }
  if (*(void *)(v38 + 8 * v47))
  {
    int64_t v37 = v47;
    goto LABEL_39;
  }
  while (1)
  {
    int64_t v37 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v37 >= v43) {
      goto LABEL_42;
    }
    ++v47;
    if (*(void *)(v38 + 8 * v37)) {
      goto LABEL_39;
    }
  }
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
}

#error "1B2E1BC4C: call analysis failed (funcsize=51)"

uint64_t sub_1B2E1BCC4(void *a1)
{
  uint64_t isUniquelyReferenced_nonNull_native = a1;
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v98 = *v1;
  sub_1B2E1C740();
  if (!*(void *)(v1[16] + 16)) {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  sub_1B29DB060(v5, v4, v6, v7, v8, v9, v10, v11, v76, v78, v80, v82, v84, v86, v88, v90, v92, v94, v96,
    v98,
    v100,
    v102,
    v104,
    v106,
    v109,
    v112);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    swift_endAccess();
    swift_retain();
    return (uint64_t)isUniquelyReferenced_nonNull_native;
  }
  sub_1B2E1C89C();
  uint64_t v79 = v2;
  uint64_t v81 = v13;
  uint64_t v15 = v14[2];
  uint64_t v114 = v14[3];
  unint64_t v97 = v14[4];
  uint64_t v16 = v14[7];
  uint64_t v17 = v14[9];
  uint64_t v18 = v14[10];
  uint64_t v19 = v14[11];
  uint64_t v20 = v14[13];
  swift_endAccess();
  uint64_t v85 = v20;
  swift_bridgeObjectRetain();
  uint64_t v83 = v5;
  swift_bridgeObjectRetain();
  uint64_t v95 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v93 = v16;
  swift_bridgeObjectRetain();
  uint64_t v91 = v17;
  swift_bridgeObjectRetain();
  uint64_t v89 = v18;
  swift_retain();
  uint64_t v87 = v19;
  swift_retain();
  swift_bridgeObjectRelease();
  type metadata accessor for KnosisQueryParam();
  uint64_t v21 = sub_1B2E82148();
  sub_1B299D804();
  uint64_t v105 = isUniquelyReferenced_nonNull_native[4];
  if (!v105)
  {
LABEL_42:
    if (v87)
    {
      swift_retain();
      uint64_t isUniquelyReferenced_nonNull_native = (void *)sub_1B2DC1F1C();
      swift_release();
      isUniquelyReferenced_nonNull_native[12] = v81;
      isUniquelyReferenced_nonNull_native[13] = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1B2E172F0((uint64_t)isUniquelyReferenced_nonNull_native, v21, 25);
      if (!v79)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)isUniquelyReferenced_nonNull_native;
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
    swift_bridgeObjectRelease();
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B2E1C77C();
    uint64_t v108 = v71;
    uint64_t v111 = v72;
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2E1C4E4();
    uint64_t v73 = sub_1B299E4D4();
    *char v74 = v108;
    v74[1] = v111;
    sub_1B2D5F6B4(v73, (uint64_t)v74);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_46:
    swift_bridgeObjectRelease();
LABEL_47:
    swift_bridgeObjectRelease();
    return (uint64_t)isUniquelyReferenced_nonNull_native;
  }
  uint64_t v22 = HIBYTE(v97) & 0xF;
  if ((v97 & 0x2000000000000000) == 0) {
    uint64_t v22 = v114 & 0xFFFFFFFFFFFFLL;
  }
  if (v22)
  {
    uint64_t v23 = *(void *)(v95 + 16);
    uint64_t v24 = *(void *)(v105 + 16);
    BOOL v25 = v24 == v23 - 1;
  }
  else
  {
    BOOL v25 = 0;
    uint64_t v24 = *(void *)(v105 + 16);
    uint64_t v23 = *(void *)(v95 + 16);
  }
  if (v24 != v23 && !v25)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1B2E831F8();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    uint64_t v67 = swift_bridgeObjectRetain();
    MEMORY[0x1B3EB1020](v67, MEMORY[0x1E4FBB1A0]);
    uint64_t isUniquelyReferenced_nonNull_native = v68;
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2E82108();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2E1C4E4();
    uint64_t v69 = sub_1B299E4D4();
    *uint64_t v70 = 0;
    v70[1] = 0xE000000000000000;
    sub_1B2D5F6B4(v69, (uint64_t)v70);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  uint64_t v101 = v105 + 64;
  sub_1B29A19EC();
  uint64_t v29 = v28 & v27;
  sub_1B2E1C770();
  uint64_t v103 = v30;
  swift_bridgeObjectRetain();
  uint64_t v31 = 0;
  if (!v29) {
    goto LABEL_17;
  }
LABEL_16:
  sub_1B2CC740C();
  uint64_t v115 = v32;
  for (uint64_t i = v33 | (v32 << 6); ; uint64_t i = v39 + (v38 << 6))
  {
    uint64_t v40 = *(void *)(*(void *)(v105 + 56) + 8 * i);
    uint64_t v41 = sub_1B2E823F8();
    uint64_t v43 = v42;
    swift_retain_n();
    uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    uint64_t v50 = sub_1B29DB060(v41, v43, v44, v45, v46, v47, v48, v49, v77, v79, v81, v83, v85, v87, v89, v91, v93, v95, v97,
            v99,
            v101,
            v103,
            v105,
            v21,
            v110,
            v113);
    if (__OFADD__(*(void *)(v21 + 16), (v51 & 1) == 0))
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    unint64_t v52 = v50;
    char v53 = v51;
    sub_1B29A3EB4(&qword_1EB7D9868);
    if (sub_1B2E83398())
    {
      uint64_t v60 = sub_1B29DB060(v41, v43, v54, v55, v56, v57, v58, v59, v77, v79, v81, v83, v85, v87, v89, v91, v93, v95, v97,
              v99,
              v101,
              v103,
              v105,
              (uint64_t)v107,
              v110,
              v113);
      if ((v53 & 1) != (v61 & 1)) {
        goto LABEL_54;
      }
      unint64_t v52 = v60;
    }
    uint64_t v21 = (uint64_t)v107;
    if (v53)
    {
      uint64_t v62 = v107[7];
      swift_release();
      *(void *)(v62 + 8 * v52) = v40;
    }
    else
    {
      sub_1B299EB3C((uint64_t)&v107[v52 >> 6]);
      uint64_t v63 = (uint64_t *)(v107[6] + 16 * v52);
      *uint64_t v63 = v41;
      v63[1] = v43;
      *(void *)(v107[7] + 8 * v52) = v40;
      uint64_t v64 = v107[2];
      BOOL v65 = __OFADD__(v64, 1);
      uint64_t v66 = v64 + 1;
      if (v65) {
        goto LABEL_51;
      }
      v107[2] = v66;
      swift_bridgeObjectRetain();
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = v115;
    if (v29) {
      goto LABEL_16;
    }
LABEL_17:
    uint64_t v35 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      goto LABEL_52;
    }
    if (v35 >= v103) {
      goto LABEL_41;
    }
    if (!*(void *)(v101 + 8 * v35))
    {
      if (v31 + 2 >= v103) {
        goto LABEL_41;
      }
      if (!*(void *)(v101 + 8 * (v31 + 2)))
      {
        if (v31 + 3 >= v103) {
          goto LABEL_41;
        }
        if (!*(void *)(v101 + 8 * (v31 + 3)))
        {
          uint64_t v36 = v31 + 4;
          if (v31 + 4 >= v103)
          {
LABEL_41:
            swift_release();
            goto LABEL_42;
          }
          if (!*(void *)(v101 + 8 * v36)) {
            break;
          }
        }
      }
    }
LABEL_29:
    sub_1B2E1C840();
    uint64_t v115 = v38;
  }
  while (1)
  {
    uint64_t v37 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v37 >= v103) {
      goto LABEL_41;
    }
    ++v36;
    if (*(void *)(v101 + 8 * v37)) {
      goto LABEL_29;
    }
  }
LABEL_53:
  __break(1u);
LABEL_54:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2E1C464(uint64_t a1, unint64_t a2)
{
  sub_1B2E1C890();
  char v4 = sub_1B2E825D8();
  swift_bridgeObjectRetain();
  if (v4)
  {
    sub_1B2E1C890();
    unint64_t v5 = sub_1B2E824A8();
    unint64_t v6 = sub_1B2A6FFBC(v5, a1, a2);
    a1 = MEMORY[0x1B3EB0C00](v6);
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t sub_1B2E1C4E4()
{
  unint64_t result = qword_1E9C450C0;
  if (!qword_1E9C450C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C450C0);
  }
  return result;
}

uint64_t sub_1B2E1C530(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2E1C5D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2E1C678(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1B2E1C6E4()
{
  unint64_t result = qword_1EB7D9660;
  if (!qword_1EB7D9660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9660);
  }
  return result;
}

ValueMetadata *type metadata accessor for VOPError()
{
  return &type metadata for VOPError;
}

uint64_t sub_1B2E1C740()
{
  return swift_beginAccess();
}

uint64_t sub_1B2E1C758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_1B29DB060(v26, v27, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

void sub_1B2E1C788()
{
  sub_1B29B7048();
}

uint64_t sub_1B2E1C7B8()
{
  return v0;
}

uint64_t sub_1B2E1C7C8()
{
  return sub_1B2E837A8();
}

void sub_1B2E1C7EC(uint64_t a1@<X8>)
{
  *(void *)(v2 - 256) = a1;
  *(void *)(v2 - 248) = (v1 - 32) | 0x8000000000000000;
}

void sub_1B2E1C7FC()
{
  *(void *)(v0 - 256) = 0;
  *(void *)(v0 - 248) = 0xE000000000000000;
}

void sub_1B2E1C80C()
{
  *(void *)(v0 - 112) = 0;
  *(void *)(v0 - 104) = 0xE000000000000000;
}

uint64_t sub_1B2E1C81C()
{
  return sub_1B2E1A134(v0);
}

uint64_t sub_1B2E1C890()
{
  return 36;
}

uint64_t sub_1B2E1C8B0()
{
  sub_1B2DCAB00();
  uint64_t v2 = v1;
  sub_1B2E1F458(v0, (void (*)(void))type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  return v2;
}

uint64_t sub_1B2E1C8F8()
{
  sub_1B2DCB350(v0);
  uint64_t v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_1B2E1C92C()
{
  sub_1B2DCB4E0();
  uint64_t v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1B2E1C960()
{
  sub_1B2DCB628();
  uint64_t v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1B2E1C994()
{
  sub_1B2DCB8B4();
  uint64_t v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1B2E1C9C8()
{
  sub_1B2DCBB2C();
  uint64_t v2 = v1;
  sub_1B2E1F458(v0, (void (*)(void))type metadata accessor for AnswerRenderIterator);
  return v2;
}

uint64_t sub_1B2E1CA30()
{
  sub_1B29AEC7C((void *)(v0 + 16), *(void *)(v0 + 40));

  return swift_retain();
}

IntelligencePlatform::VisualUnderstandingService::Error_optional __swiftcall VisualUnderstandingService.Error.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (rawValue == 1) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (IntelligencePlatform::VisualUnderstandingService::Error_optional)rawValue;
}

uint64_t VisualUnderstandingService.Error.rawValue.getter()
{
  if (*v0) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t sub_1B2E1CA98()
{
  return sub_1B29AE944();
}

uint64_t sub_1B2E1CAA0()
{
  return sub_1B2AA520C();
}

uint64_t sub_1B2E1CAA8()
{
  return sub_1B29F900C();
}

IntelligencePlatform::VisualUnderstandingService::Error_optional sub_1B2E1CAB0(Swift::Int *a1)
{
  return VisualUnderstandingService.Error.init(rawValue:)(*a1);
}

uint64_t sub_1B2E1CAB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = VisualUnderstandingService.Error.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1B2E1CAE0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1B2E23D94();
  unint64_t v5 = sub_1B2B75650();

  return MEMORY[0x1F4185E20](a1, a2, v4, v5);
}

uint64_t VisualUnderstandingService.__allocating_init(client:version:)()
{
  uint64_t v0 = swift_allocObject();
  sub_1B29A4150();
  VisualUnderstandingService.init(client:version:)();
  return v0;
}

void VisualUnderstandingService.init(client:version:)()
{
  sub_1B299F300();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for EntityRecognitionClient(0);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B299E4A0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_1B29A3EB4(&qword_1EB7E69E0);
  uint64_t v13 = sub_1B299B0F0(v12);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v28 - v17;
  uint64_t v19 = type metadata accessor for VisualUnderstandingService.Version(0);
  uint64_t v20 = sub_1B299B0F0(v19);
  MEMORY[0x1F4188790](v20);
  sub_1B299E4A0();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = v2 + OBJC_IVAR____TtC20IntelligencePlatform26VisualUnderstandingService_client;
  sub_1B2E1CF30(v6, v2 + OBJC_IVAR____TtC20IntelligencePlatform26VisualUnderstandingService_client, (void (*)(void))type metadata accessor for EntityRecognitionClient);
  sub_1B2E1CF30(v4, v23, (void (*)(void))type metadata accessor for VisualUnderstandingService.Version);
  uint64_t v25 = sub_1B29A3EB4(&qword_1EB7E3268);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v23, 1, v25) == 1)
  {
    sub_1B2E83418();
    __break(1u);
  }
  else
  {
    sub_1B2E1CF84(v23, (uint64_t)v18);
    sub_1B2E1CF30(v6, v11, (void (*)(void))type metadata accessor for EntityRecognitionClient);
    sub_1B2AD2BAC((uint64_t)v18, (uint64_t)v16, &qword_1EB7E69E0);
    uint64_t v26 = type metadata accessor for VisualUnderstandingServiceBackendV1(0);
    swift_allocObject();
    sub_1B2E240C4();
    if (v1)
    {
      sub_1B2E1F458(v4, (void (*)(void))type metadata accessor for VisualUnderstandingService.Version);
      sub_1B2E1F458(v6, (void (*)(void))type metadata accessor for EntityRecognitionClient);
      sub_1B29C4148((uint64_t)v18, &qword_1EB7E69E0);
      sub_1B2E1F458(v24, (void (*)(void))type metadata accessor for EntityRecognitionClient);
      type metadata accessor for VisualUnderstandingService(0);
      swift_deallocPartialClassInstance();
    }
    else
    {
      uint64_t v30 = v26;
      uint64_t v31 = &off_1F0AD6CB8;
      *(void *)&long long v29 = v27;
      sub_1B2E1F458(v4, (void (*)(void))type metadata accessor for VisualUnderstandingService.Version);
      sub_1B2E1F458(v6, (void (*)(void))type metadata accessor for EntityRecognitionClient);
      sub_1B29C4148((uint64_t)v18, &qword_1EB7E69E0);
      sub_1B29D1D20(&v29, v2 + 16);
    }
    sub_1B29998C8();
  }
}

uint64_t type metadata accessor for EntityRecognitionClient(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1EB7E3B40);
}

uint64_t type metadata accessor for VisualUnderstandingService.Version(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1EB7E2868);
}

uint64_t sub_1B2E1CF30(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1B2999864();
  uint64_t v4 = sub_1B2AD2DAC();
  v5(v4);
  return a2;
}

uint64_t sub_1B2E1CF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7E69E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B2E1CFEC()
{
  sub_1B29AEC7C((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_1B29A4150();
  sub_1B2E242A8();
}

void sub_1B2E1D048()
{
  sub_1B29AEC7C((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_1B2E2459C();
}

void sub_1B2E1D0A8()
{
}

uint64_t sub_1B2E1D0D0()
{
  return sub_1B2E81BE8();
}

uint64_t sub_1B2E1D110()
{
  sub_1B29AEC7C((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t result = sub_1B2E25268();
  if (v1) {
    return v3 & 1;
  }
  return result;
}

void *sub_1B2E1D17C()
{
  return sub_1B2E25370();
}

void sub_1B2E1D1B8(uint64_t *a1@<X8>)
{
  sub_1B29AEC7C((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_1B2E24EF0(a1);
}

void sub_1B2E1D1F4(uint64_t *a1@<X8>)
{
  sub_1B29AEC7C((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_1B2E24EF0(a1);
}

void sub_1B2E1D23C()
{
  sub_1B29AEC7C((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_1B2E2499C();
}

uint64_t VisualUnderstandingService.deinit()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  sub_1B2E1F458(v0 + OBJC_IVAR____TtC20IntelligencePlatform26VisualUnderstandingService_client, (void (*)(void))type metadata accessor for EntityRecognitionClient);
  return v0;
}

uint64_t VisualUnderstandingService.__deallocating_deinit()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  sub_1B2E1F458(v0 + OBJC_IVAR____TtC20IntelligencePlatform26VisualUnderstandingService_client, (void (*)(void))type metadata accessor for EntityRecognitionClient);

  return swift_deallocClassInstance();
}

uint64_t sub_1B2E1D354(uint64_t a1)
{
  return sub_1B2E1D3CC(a1, qword_1EB7E3270, MEMORY[0x1E4FB41C8], 0x736F746F6870, 0xE600000000000000);
}

uint64_t static EntityRecognitionClient.photos.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2E1D5FC(&qword_1EB7E2810, (uint64_t)qword_1EB7E3270, a1);
}

uint64_t sub_1B2E1D39C(uint64_t a1)
{
  return sub_1B2E1D3CC(a1, qword_1E9C37EA0, MEMORY[0x1E4FB41C0], 0x74616369646E7973, 0xEB000000006E6F69);
}

uint64_t sub_1B2E1D3CC(uint64_t a1, uint64_t *a2, unsigned int *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for EntityRecognitionClient(0);
  sub_1B2A4A2A8(v9, a2);
  uint64_t v10 = sub_1B29A4150();
  uint64_t v12 = (void *)sub_1B29A4B98(v10, v11);
  uint64_t v13 = (char *)v12 + *(int *)(v9 + 20);
  uint64_t v14 = *a3;
  sub_1B2E81DA8();
  sub_1B2999864();
  (*(void (**)(char *, uint64_t))(v15 + 104))(v13, v14);
  uint64_t v16 = (char *)v12 + *(int *)(v9 + 24);
  uint64_t v17 = *MEMORY[0x1E4FB41A8];
  sub_1B2E81C48();
  sub_1B2999864();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 104))(v16, v17);
  *uint64_t v12 = a4;
  v12[1] = a5;
  return result;
}

uint64_t static EntityRecognitionClient.syndication.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2E1D5FC(&qword_1E9C37208, (uint64_t)qword_1E9C37EA0, a1);
}

uint64_t sub_1B2E1D4D8(uint64_t a1)
{
  return sub_1B2E1D3CC(a1, qword_1E9C37210, MEMORY[0x1E4FB41D8], 0x74696B656D6F68, 0xE700000000000000);
}

uint64_t static EntityRecognitionClient.homekit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2E1D5FC(&qword_1E9C381C0, (uint64_t)qword_1E9C37210, a1);
}

uint64_t sub_1B2E1D524(uint64_t a1)
{
  return sub_1B2E23E4C(a1, qword_1E9C381C8, MEMORY[0x1E4FB41E0], 0x73746361746E6F63);
}

uint64_t static EntityRecognitionClient.contacts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2E1D5FC(qword_1E9C37228, (uint64_t)qword_1E9C381C8, a1);
}

uint64_t sub_1B2E1D56C(uint64_t a1)
{
  return sub_1B2E23E4C(a1, qword_1E9C450C8, MEMORY[0x1E4FB41E8], 0x6465767265736572);
}

uint64_t static EntityRecognitionClient.reserved.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2E1D5FC(&qword_1E9C38D10, (uint64_t)qword_1E9C450C8, a1);
}

uint64_t sub_1B2E1D5B4(uint64_t a1)
{
  return sub_1B2E1D3CC(a1, qword_1E9C450E0, MEMORY[0x1E4FB41E8], 0x6C74637576, 0xE500000000000000);
}

uint64_t static EntityRecognitionClient.vuctl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2E1D5FC(&qword_1E9C38D18, (uint64_t)qword_1E9C450E0, a1);
}

uint64_t sub_1B2E1D5FC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for EntityRecognitionClient(0);
  uint64_t v6 = sub_1B29A4B98(v5, a2);
  return sub_1B2E1CF30(v6, a3, (void (*)(void))type metadata accessor for EntityRecognitionClient);
}

uint64_t EntityRecognitionClient.hash(into:)()
{
  return sub_1B2E82218();
}

uint64_t static EntityRecognitionClient.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (char v3 = sub_1B2E837A8(), v4 = 0, (v3 & 1) != 0))
  {
    type metadata accessor for EntityRecognitionClient(0);
    sub_1B2E81DA8();
    sub_1B2E1F4D0(&qword_1E9C45108, 255, MEMORY[0x1E4FB41F0]);
    sub_1B2E82778();
    sub_1B2E82778();
    if (v7 == v6) {
      char v4 = sub_1B2E81C38();
    }
    else {
      char v4 = 0;
    }
  }
  return v4 & 1;
}

uint64_t EntityRecognitionClient.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2E1D9D0()
{
  return sub_1B2E839E8();
}

uint64_t VisualUnderstandingStreamingGallery.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  VisualUnderstandingStreamingGallery.init()();
  return v0;
}

uint64_t VisualUnderstandingStreamingGallery.init()()
{
  sub_1B2E819B8();
  swift_allocObject();
  uint64_t v2 = sub_1B2E819A8();
  if (v1)
  {
    type metadata accessor for VisualUnderstandingStreamingGallery();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v0 + 16) = v2;
  }
  return v0;
}

uint64_t VisualUnderstandingStreamingGallery.__allocating_init(for:)(uint64_t a1)
{
  type metadata accessor for VisualUnderstandingStreamingGallery();
  uint64_t v2 = swift_allocObject();
  VisualUnderstandingStreamingGallery.init()();
  sub_1B2E1F458(a1, (void (*)(void))type metadata accessor for EntityRecognitionClient);
  return v2;
}

void sub_1B2E1DC24()
{
  sub_1B299F300();
  uint64_t v57 = v3;
  uint64_t v58 = v0;
  uint64_t v61 = v4;
  uint64_t v62 = v5;
  uint64_t v60 = v6;
  uint64_t v56 = sub_1B2E81DB8();
  sub_1B299D278();
  uint64_t v52 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  uint64_t v51 = v9;
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C45110);
  uint64_t v11 = sub_1B299B0F0(v10);
  MEMORY[0x1F4188790](v11);
  sub_1B299B6D0();
  uint64_t v55 = v12;
  uint64_t v13 = sub_1B29A3EB4(&qword_1EB7D8950);
  uint64_t v14 = sub_1B299B0F0(v13);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v59 = (uint64_t)&v51 - v18;
  uint64_t v19 = sub_1B2E81E18();
  sub_1B299D278();
  uint64_t v54 = v20;
  MEMORY[0x1F4188790](v21);
  sub_1B2CCF154();
  MEMORY[0x1F4188790](v22);
  char v53 = (char *)&v51 - v23;
  uint64_t v24 = type metadata accessor for VisualUnderstandingService.Context(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v25);
  sub_1B2E23E54();
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v51 - v27;
  uint64_t v29 = sub_1B29A3EB4(&qword_1E9C45118);
  uint64_t v30 = sub_1B299B0F0(v29);
  MEMORY[0x1F4188790](v30);
  sub_1B299E4A0();
  uint64_t v33 = v32 - v31;
  uint64_t v34 = sub_1B29A3EB4((uint64_t *)&unk_1E9C371E8);
  uint64_t v35 = sub_1B299B0F0(v34);
  MEMORY[0x1F4188790](v35);
  sub_1B299E4A0();
  uint64_t v38 = v37 - v36;
  uint64_t v58 = *(void *)(v58 + 16);
  sub_1B2AD2BAC(v57, v33, &qword_1E9C45118);
  uint64_t v39 = 1;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v33, 1, v24) != 1)
  {
    sub_1B2E1F55C(v33, (uint64_t)v28);
    sub_1B2E1CF30((uint64_t)v28, v2, (void (*)(void))type metadata accessor for VisualUnderstandingService.Context);
    sub_1B2AD2BAC(v2, v59, &qword_1EB7D8950);
    sub_1B2AD2BAC(v2 + *(int *)(v24 + 20), (uint64_t)v17, &qword_1EB7D8950);
    uint64_t v40 = *(unsigned __int8 *)(v2 + *(int *)(v24 + 24));
    uint64_t v41 = (unsigned int *)MEMORY[0x1E4FB4210];
    uint64_t v42 = 1;
    uint64_t v43 = (uint64_t)v28;
    uint64_t v45 = v55;
    uint64_t v44 = v56;
    switch(v40)
    {
      case 1:
        uint64_t v41 = (unsigned int *)MEMORY[0x1E4FB4208];
        goto LABEL_5;
      case 2:
        uint64_t v41 = (unsigned int *)MEMORY[0x1E4FB4218];
        goto LABEL_5;
      case 3:
        goto LABEL_6;
      default:
LABEL_5:
        uint64_t v46 = *v41;
        uint64_t v57 = v1;
        uint64_t v47 = v51;
        uint64_t v48 = v52;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 104))(v51, v46, v56);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v45, v47, v44);
        uint64_t v43 = (uint64_t)v28;
        uint64_t v1 = v57;
        uint64_t v42 = 0;
LABEL_6:
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v45, v42, 1, v44);
        sub_1B2E81DF8();
        sub_1B2E1F458(v2, (void (*)(void))type metadata accessor for VisualUnderstandingService.Context);
        uint64_t v49 = v53;
        uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
        v50(v53, v1, v19);
        v50((char *)v38, (uint64_t)v49, v19);
        sub_1B2E1F458(v43, (void (*)(void))type metadata accessor for VisualUnderstandingService.Context);
        uint64_t v39 = 0;
        break;
    }
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v38, v39, 1, v19);
  sub_1B2E81978();
  sub_1B29C4148(v38, (uint64_t *)&unk_1E9C371E8);
  sub_1B29998C8();
}

uint64_t VUGallery.Context.init(_:)(uint64_t a1)
{
  uint64_t v3 = sub_1B2E81DB8();
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C45110);
  uint64_t v11 = sub_1B299B0F0(v10);
  MEMORY[0x1F4188790](v11);
  sub_1B299E4A0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_1B29A3EB4(&qword_1EB7D8950);
  uint64_t v16 = sub_1B299B0F0(v15);
  MEMORY[0x1F4188790](v16);
  sub_1B2E23E54();
  MEMORY[0x1F4188790](v17);
  sub_1B2AD2BAC(a1, (uint64_t)&v23 - v18, &qword_1EB7D8950);
  uint64_t v19 = type metadata accessor for VisualUnderstandingService.Context(0);
  sub_1B2AD2BAC(a1 + *(int *)(v19 + 20), v1, &qword_1EB7D8950);
  uint64_t v20 = (unsigned int *)MEMORY[0x1E4FB4210];
  uint64_t v21 = 1;
  switch(*(unsigned char *)(a1 + *(int *)(v19 + 24)))
  {
    case 1:
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FB4208];
      goto LABEL_4;
    case 2:
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FB4218];
      goto LABEL_4;
    case 3:
      goto LABEL_5;
    default:
LABEL_4:
      (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v9, *v20, v3);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v14, v9, v3);
      uint64_t v21 = 0;
LABEL_5:
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v14, v21, 1, v3);
      sub_1B2E81DF8();
      return sub_1B2E1F458(a1, (void (*)(void))type metadata accessor for VisualUnderstandingService.Context);
  }
}

void sub_1B2E1E2D0()
{
  sub_1B299F300();
  uint64_t v2 = sub_1B2E81968();
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1B2CCF154();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v26 - v7;
  uint64_t v9 = sub_1B2E81998();
  if (!v0)
  {
    uint64_t v10 = v9;
    if (v9)
    {
      uint64_t v11 = *(void *)(v9 + 16);
      if (v11)
      {
        uint64_t v29 = v8;
        v26[1] = 0;
        uint64_t v33 = MEMORY[0x1E4FBC860];
        sub_1B29C192C();
        uint64_t v13 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 16);
        uint64_t v12 = v4 + 16;
        uint64_t v14 = *(unsigned __int8 *)(v12 + 64);
        v26[0] = v10;
        uint64_t v15 = v10 + ((v14 + 32) & ~v14);
        uint64_t v27 = *(void *)(v12 + 56);
        uint64_t v28 = v13;
        uint64_t v30 = v12;
        uint64_t v16 = (void (**)(uint64_t))(v12 - 8);
        do
        {
          uint64_t v17 = v29;
          uint64_t v18 = v28;
          v28((uint64_t)v29, (char *)v15, v2);
          v18(v1, v17, v2);
          uint64_t v32 = sub_1B2E81948();
          uint64_t v31 = sub_1B2E81938();
          char v19 = sub_1B2E81958();
          uint64_t v20 = *v16;
          uint64_t v21 = sub_1B29A4150();
          v20(v21);
          ((void (*)(char *, uint64_t))v20)(v17, v2);
          uint64_t v22 = v33;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B29C192C();
            uint64_t v22 = v33;
          }
          unint64_t v23 = *(void *)(v22 + 16);
          if (v23 >= *(void *)(v22 + 24) >> 1)
          {
            sub_1B29C192C();
            uint64_t v22 = v33;
          }
          *(void *)(v22 + 16) = v23 + 1;
          uint64_t v24 = v22 + 24 * v23;
          uint64_t v25 = v31;
          *(void *)(v24 + 32) = v32;
          *(void *)(v24 + 40) = v25;
          *(unsigned char *)(v24 + 48) = v19 & 1;
          v15 += v27;
          --v11;
        }
        while (v11);
      }
      swift_bridgeObjectRelease();
    }
  }
  sub_1B29998C8();
}

uint64_t sub_1B2E1E528()
{
  return sub_1B2E81988();
}

uint64_t VisualUnderstandingStreamingGallery.deinit()
{
  swift_release();
  return v0;
}

uint64_t VisualUnderstandingStreamingGallery.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2E1E5B0()
{
  return sub_1B2E1C960();
}

uint64_t sub_1B2E1E5D4()
{
  return sub_1B2E1CA20();
}

uint64_t sub_1B2E1E5F8()
{
  return sub_1B2E826C8();
}

uint64_t sub_1B2E1E660()
{
  swift_beginAccess();
  uint64_t v0 = sub_1B2C6FC74();
  sub_1B2A49CD8(v0, v1);
  sub_1B2E82FA8();
  swift_endAccess();
  return v3;
}

uint64_t VisualUnderstandingService.ObservationSequence.deinit()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  return v0;
}

uint64_t VisualUnderstandingService.ObservationSequence.__deallocating_deinit()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1B2E1E72C()
{
  return sub_1B2E1C92C();
}

uint64_t sub_1B2E1E750()
{
  return sub_1B2E1CA1C();
}

uint64_t sub_1B2E1E774()
{
  return sub_1B2E826C8();
}

uint64_t sub_1B2E1E7DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1B2E1E660();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1B2E1E810()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B2E1E838()
{
  sub_1B2E23E70();
  sub_1B2A49CD8(v0 + 32, *(void *)(v0 + 56));
  sub_1B2E23EB0();
  return swift_endAccess();
}

uint64_t _s20IntelligencePlatform26VisualUnderstandingServiceC14EntitySequenceCfd_0()
{
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 32);
  return v0;
}

uint64_t _s20IntelligencePlatform26VisualUnderstandingServiceC14EntitySequenceCfD_0()
{
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t sub_1B2E1E904@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
  *a1 = result;
  return result;
}

uint64_t sub_1B2E1E930()
{
  return sub_1B2E1C994();
}

uint64_t sub_1B2E1E954()
{
  return sub_1B2E1CA24();
}

uint64_t sub_1B2E1E978()
{
  return sub_1B2E826C8();
}

uint64_t sub_1B2E1E9E0()
{
  return sub_1B2E1E5A4();
}

uint64_t sub_1B2E1EA04()
{
  sub_1B2E23E70();
  sub_1B2A49CD8(v0 + 16, *(void *)(v0 + 40));
  sub_1B2E23EB0();
  return swift_endAccess();
}

uint64_t sub_1B2E1EA60()
{
  return sub_1B2E1C8F8();
}

uint64_t sub_1B2E1EA84()
{
  return sub_1B2E1CA18();
}

uint64_t sub_1B2E1EAA8()
{
  return sub_1B2E826C8();
}

uint64_t sub_1B2E1EB10()
{
  return sub_1B2E1EA04();
}

uint64_t VisualUnderstandingService.ObservationUpdate.updateType.getter()
{
  return *v0;
}

uint64_t VisualUnderstandingService.ObservationUpdate.observationIdentifier.getter()
{
  return *(void *)(v0 + 8);
}

void VisualUnderstandingService.ObservationUpdate.entityIdentifier.getter(void *a1@<X8>)
{
}

uint64_t VisualUnderstandingService.EntityUpdate.updateType.getter()
{
  return *v0;
}

void VisualUnderstandingService.EntityUpdate.entityIdentifier.getter(void *a1@<X8>)
{
}

uint64_t VisualUnderstandingService.EntityUpdate.tag.getter()
{
  uint64_t v2 = sub_1B299E86C();
  uint64_t v3 = type metadata accessor for VisualUnderstandingService.EntityUpdate(v2);
  return sub_1B2AD2BAC(v1 + *(int *)(v3 + 24), v0, &qword_1EB7D8950);
}

BOOL static VisualUnderstandingService.UpdateType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t VisualUnderstandingService.UpdateType.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t VisualUnderstandingService.UpdateType.hashValue.getter()
{
  return sub_1B2E839E8();
}

BOOL sub_1B2E1EC10(char *a1, char *a2)
{
  return static VisualUnderstandingService.UpdateType.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1B2E1EC1C()
{
  return VisualUnderstandingService.UpdateType.hashValue.getter();
}

uint64_t sub_1B2E1EC24()
{
  return VisualUnderstandingService.UpdateType.hash(into:)();
}

uint64_t VisualUnderstandingService.ChangeBookmark.hash(into:)()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  sub_1B29F4F7C(v2, v1);
  sub_1B2C6FC74();
  sub_1B2E80598();

  return sub_1B29C34DC(v2, v1);
}

void static VisualUnderstandingService.ChangeBookmark.== infix(_:_:)()
{
}

uint64_t sub_1B2E1EC9C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x72656E6E69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2E1ED1C()
{
  return 0x72656E6E69;
}

uint64_t sub_1B2E1ED34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2E1EC9C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2E1ED60(uint64_t a1)
{
  unint64_t v2 = sub_1B2E1F5E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2E1ED9C(uint64_t a1)
{
  unint64_t v2 = sub_1B2E1F5E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void VisualUnderstandingService.ChangeBookmark.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B29A3EB4(qword_1E9C38248);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B29A0480();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2E1F5E0();
  sub_1B2E83A38();
  sub_1B2A43FBC();
  sub_1B2E836D8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_1B29998C8();
}

uint64_t VisualUnderstandingService.ChangeBookmark.hashValue.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1B29B1A78();
  sub_1B29F4F7C(v1, v2);
  sub_1B2E80598();
  sub_1B29C34DC(v1, v2);
  return sub_1B2E839E8();
}

void VisualUnderstandingService.ChangeBookmark.init(from:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C38240);
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B29A0480();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2E1F5E0();
  sub_1B2E83A18();
  if (!v0)
  {
    sub_1B2A44008();
    sub_1B2E835B8();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
    *uint64_t v5 = v10;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
  sub_1B29998C8();
}

void sub_1B2E1F05C()
{
}

void sub_1B2E1F074()
{
}

uint64_t sub_1B2E1F094()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1B2E83988();
  sub_1B29F4F7C(v1, v2);
  sub_1B2E80598();
  sub_1B29C34DC(v1, v2);
  return sub_1B2E839E8();
}

void VisualUnderstandingService.RecognitionResult.entityIdentifier.getter(void *a1@<X8>)
{
}

uint64_t VisualUnderstandingService.RecognitionResult.tag.getter()
{
  return sub_1B2E1F2C8();
}

float VisualUnderstandingService.RecognitionResult.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for VisualUnderstandingService.RecognitionResult(0) + 24));
}

BOOL static VisualUnderstandingService.Source.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t VisualUnderstandingService.Source.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t VisualUnderstandingService.Source.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t VisualUnderstandingService.Context.init()()
{
  sub_1B299E86C();
  sub_1B2E806B8();
  sub_1B299FD5C(v0);
  uint64_t v1 = type metadata accessor for VisualUnderstandingService.Context(0);
  uint64_t v2 = v0 + *(int *)(v1 + 20);
  sub_1B299FD5C(v2);
  uint64_t v3 = *(int *)(v1 + 24);
  *(unsigned char *)(v0 + v3) = 3;
  uint64_t v4 = sub_1B2C6FC74();
  sub_1B29C4148(v4, v5);
  sub_1B299FD5C(v0);
  sub_1B29C4148(v2, &qword_1EB7D8950);
  uint64_t result = sub_1B299FD5C(v2);
  *(unsigned char *)(v0 + v3) = 3;
  return result;
}

uint64_t VisualUnderstandingService.Context.moment.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2AD2BAC(v1, a1, &qword_1EB7D8950);
}

uint64_t VisualUnderstandingService.Context.moment.setter(uint64_t a1)
{
  return sub_1B2E1F64C(a1, v1);
}

uint64_t (*VisualUnderstandingService.Context.moment.modify())(void)
{
  return nullsub_1;
}

uint64_t VisualUnderstandingService.Context.asset.getter()
{
  return sub_1B2E1F2C8();
}

uint64_t sub_1B2E1F2C8()
{
  uint64_t v2 = sub_1B299E86C();
  uint64_t v4 = v3(v2);
  return sub_1B2AD2BAC(v1 + *(int *)(v4 + 20), v0, &qword_1EB7D8950);
}

uint64_t VisualUnderstandingService.Context.asset.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VisualUnderstandingService.Context(0) + 20);

  return sub_1B2E1F64C(a1, v3);
}

uint64_t (*VisualUnderstandingService.Context.asset.modify())(void)
{
  return nullsub_1;
}

uint64_t VisualUnderstandingService.Context.source.getter()
{
  uint64_t v2 = sub_1B299E86C();
  uint64_t result = type metadata accessor for VisualUnderstandingService.Context(v2);
  unsigned char *v0 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t VisualUnderstandingService.Context.source.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for VisualUnderstandingService.Context(0);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

uint64_t (*VisualUnderstandingService.Context.source.modify())(void)
{
  return nullsub_1;
}

uint64_t VisualUnderstandingStreamingGallery.ClusterResult.observationIdentifier.getter()
{
  return *(void *)v0;
}

void VisualUnderstandingStreamingGallery.ClusterResult.entityIdentifier.getter(void *a1@<X8>)
{
}

uint64_t VisualUnderstandingStreamingGallery.ClusterResult.isKeyFace.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1B2E1F458(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t type metadata accessor for VisualUnderstandingService(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1EB7E4BA8);
}

uint64_t sub_1B2E1F4D0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for VisualUnderstandingStreamingGallery()
{
  return self;
}

uint64_t type metadata accessor for VisualUnderstandingService.Context(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1E9C37F50);
}

uint64_t sub_1B2E1F55C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisualUnderstandingService.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for VisualUnderstandingService.EntityUpdate(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1EB7E3418);
}

unint64_t sub_1B2E1F5E0()
{
  unint64_t result = qword_1E9C381F8;
  if (!qword_1E9C381F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C381F8);
  }
  return result;
}

uint64_t type metadata accessor for VisualUnderstandingService.RecognitionResult(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1EB7D8958);
}

uint64_t sub_1B2E1F64C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7D8950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B2E1F6B8()
{
  unint64_t result = qword_1E9C45120;
  if (!qword_1E9C45120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45120);
  }
  return result;
}

uint64_t sub_1B2E1F704()
{
  return sub_1B2E1F4D0(&qword_1E9C45128, 255, (void (*)(uint64_t))type metadata accessor for EntityRecognitionClient);
}

uint64_t sub_1B2E1F750(uint64_t a1, uint64_t a2)
{
  return sub_1B2E1F4D0(&qword_1E9C45130, a2, (void (*)(uint64_t))type metadata accessor for VisualUnderstandingService.EntitySequence);
}

uint64_t type metadata accessor for VisualUnderstandingService.EntitySequence()
{
  return self;
}

uint64_t sub_1B2E1F7BC(uint64_t a1, uint64_t a2)
{
  return sub_1B2E1F4D0(&qword_1E9C45138, a2, (void (*)(uint64_t))type metadata accessor for VisualUnderstandingService.ObservationSequence);
}

uint64_t type metadata accessor for VisualUnderstandingService.ObservationSequence()
{
  return self;
}

uint64_t sub_1B2E1F828(uint64_t a1, uint64_t a2)
{
  return sub_1B2E1F4D0(&qword_1E9C45140, a2, (void (*)(uint64_t))type metadata accessor for VisualUnderstandingService.ChangeSequence);
}

uint64_t type metadata accessor for VisualUnderstandingService.ChangeSequence()
{
  return self;
}

uint64_t sub_1B2E1F894(uint64_t a1, uint64_t a2)
{
  return sub_1B2E1F4D0(&qword_1E9C45148, a2, (void (*)(uint64_t))type metadata accessor for VisualUnderstandingService.SimilarEntitySequence);
}

uint64_t type metadata accessor for VisualUnderstandingService.SimilarEntitySequence()
{
  return self;
}

unint64_t sub_1B2E1F904()
{
  unint64_t result = qword_1E9C45150;
  if (!qword_1E9C45150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45150);
  }
  return result;
}

unint64_t sub_1B2E1F954()
{
  unint64_t result = qword_1E9C45158;
  if (!qword_1E9C45158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45158);
  }
  return result;
}

unint64_t sub_1B2E1F9A4()
{
  unint64_t result = qword_1E9C45160;
  if (!qword_1E9C45160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45160);
  }
  return result;
}

uint64_t sub_1B2E1F9F0()
{
  return type metadata accessor for VisualUnderstandingService(0);
}

uint64_t sub_1B2E1F9F8()
{
  uint64_t result = type metadata accessor for EntityRecognitionClient(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for VisualUnderstandingService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualUnderstandingService);
}

uint64_t dispatch thunk of VisualUnderstandingService.gallery.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of VisualUnderstandingService.__allocating_init(client:version:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of VisualUnderstandingService.recognize(in:contextMoment:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of VisualUnderstandingService.recognize(in:contextMoment:contextAsset:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of VisualUnderstandingService.entities(for:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 128))();
}

{
  uint64_t v0;

  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of VisualUnderstandingService.keyObservation(for:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of VisualUnderstandingService.similarity(between:and:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of VisualUnderstandingService.similarEntities(to:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of VisualUnderstandingService.inferredDeviceOwner()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of VisualUnderstandingService.inferredDeviceOwner(ignoreMeGroundTruth:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of VisualUnderstandingService.changes(since:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualUnderstandingService.Version(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1B29A3EB4(&qword_1EB7E3268);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = sub_1B2E80498();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_1B29A3EB4(&qword_1EB7E69E0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v9);
      }
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for VisualUnderstandingService.Version(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7E3268);
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_1B2E80498();
    uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v4);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      return v5(a1, v4);
    }
  }
  return result;
}

void *initializeWithCopy for VisualUnderstandingService.Version(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1EB7E3268);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1B2E80498();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_1B29A3EB4(&qword_1EB7E69E0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v7);
    }
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for VisualUnderstandingService.Version(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1EB7E3268);
  int v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = sub_1B2E80498();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_1B29A3EB4(&qword_1EB7E69E0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v9);
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1B29C4148((uint64_t)a1, &qword_1EB7E3268);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(a3 - 8) + 64);
    goto LABEL_8;
  }
  uint64_t v6 = sub_1B2E80498();
  int v12 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  int v13 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_13:
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
      return a1;
    }
  }
  else
  {
    uint64_t v15 = *(void *)(v6 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(a1, v6);
  }
  size_t v11 = *(void *)(*(void *)(sub_1B29A3EB4(&qword_1EB7E69E0) - 8) + 64);
LABEL_8:
  memcpy(a1, a2, v11);
  return a1;
}

void *initializeWithTake for VisualUnderstandingService.Version(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1EB7E3268);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1B2E80498();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_1B29A3EB4(&qword_1EB7E69E0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v7);
    }
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for VisualUnderstandingService.Version(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1EB7E3268);
  int v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = sub_1B2E80498();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_1B29A3EB4(&qword_1EB7E69E0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v9);
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1B29C4148((uint64_t)a1, &qword_1EB7E3268);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(a3 - 8) + 64);
    goto LABEL_8;
  }
  uint64_t v6 = sub_1B2E80498();
  int v12 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  int v13 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
LABEL_13:
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
      return a1;
    }
  }
  else
  {
    uint64_t v15 = *(void *)(v6 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(a1, v6);
  }
  size_t v11 = *(void *)(*(void *)(sub_1B29A3EB4(&qword_1EB7E69E0) - 8) + 64);
LABEL_8:
  memcpy(a1, a2, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstandingService.Version(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2E2061C);
}

uint64_t sub_1B2E2061C()
{
  sub_1B2ABB764();
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7E3268);
  unsigned int v3 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, v0, v2);
  if (v3 >= 2) {
    return v3 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingService.Version(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2E20678);
}

uint64_t sub_1B2E20678(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1B29A3EB4(&qword_1EB7E3268);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, v5, a3, v6);
}

uint64_t sub_1B2E206D8(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7E3268);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v2);
}

uint64_t sub_1B2E20720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7E3268);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v4);
}

void sub_1B2E20770()
{
  sub_1B2E21B6C(319, &qword_1EB7E4B98, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

unsigned char *storeEnumTagSinglePayload for VisualUnderstandingService.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2E208D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for VisualUnderstandingService.Error()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for EntityRecognitionClient(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1B2E81DA8();
    int v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1B2E81C48();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t destroy for EntityRecognitionClient(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1B2E81DA8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_1B2E81C48();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *initializeWithCopy for EntityRecognitionClient(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E81DA8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1B2E81C48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

void *assignWithCopy for EntityRecognitionClient(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E81DA8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1B2E81C48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for EntityRecognitionClient(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E81DA8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1B2E81C48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void *assignWithTake for EntityRecognitionClient(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E81DA8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1B2E81C48();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityRecognitionClient(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2E20EA4);
}

uint64_t sub_1B2E20EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1B2E81DA8();
    sub_1B299B768();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = sub_1B2E81C48();
      uint64_t v11 = *(int *)(a3 + 24);
    }
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for EntityRecognitionClient(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2E20F64);
}

void sub_1B2E20F64()
{
  sub_1B2ABB764();
  if (v2 == 0x7FFFFFFF)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v3;
    int v5 = v2;
    sub_1B2E81DA8();
    sub_1B299B768();
    if (*(_DWORD *)(v7 + 84) == v5)
    {
      uint64_t v8 = v6;
      uint64_t v9 = *(int *)(v4 + 20);
    }
    else
    {
      uint64_t v8 = sub_1B2E81C48();
      uint64_t v9 = *(int *)(v4 + 24);
    }
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1 + v9, v0, v0, v8);
  }
}

uint64_t sub_1B2E21008()
{
  uint64_t result = sub_1B2E81DA8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1B2E81C48();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for VisualUnderstandingStreamingGallery(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualUnderstandingStreamingGallery);
}

uint64_t dispatch thunk of VisualUnderstandingStreamingGallery.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of VisualUnderstandingStreamingGallery.add(observations:observationIdentifiers:trackIdentifiers:context:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of VisualUnderstandingStreamingGallery.update(maxKeyFacesPerCluster:sortBy:)()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of VisualUnderstandingStreamingGallery.reset()()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for VisualUnderstandingService.EntitySequence(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualUnderstandingService.EntitySequence);
}

uint64_t dispatch thunk of VisualUnderstandingService.EntitySequence.bookmark.getter()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of VisualUnderstandingService.EntitySequence.next()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t method lookup function for VisualUnderstandingService.ObservationSequence(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualUnderstandingService.ObservationSequence);
}

uint64_t dispatch thunk of VisualUnderstandingService.ObservationSequence.next()()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for VisualUnderstandingService.ChangeSequence(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualUnderstandingService.ChangeSequence);
}

uint64_t dispatch thunk of VisualUnderstandingService.ChangeSequence.bookmark.getter()
{
  sub_1B299F5F0();
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of VisualUnderstandingService.ChangeSequence.next()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t method lookup function for VisualUnderstandingService.SimilarEntitySequence(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualUnderstandingService.SimilarEntitySequence);
}

uint64_t dispatch thunk of VisualUnderstandingService.SimilarEntitySequence.next()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

void type metadata accessor for VisualUnderstandingService.ObservationUpdate()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualUnderstandingService.EntityUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1B2E806B8();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v7, 1, v8))
    {
      uint64_t v9 = sub_1B29A3EB4(&qword_1EB7D8950);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for VisualUnderstandingService.EntityUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_1B2E806B8();
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t initializeWithCopy for VisualUnderstandingService.EntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1B2E806B8();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithCopy for VisualUnderstandingService.EntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1B2E806B8();
  int v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v5, 1, v7);
  int v9 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v7);
  if (!v8)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    uint64_t v11 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v7);
  return a1;
}

uint64_t initializeWithTake for VisualUnderstandingService.EntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1B2E806B8();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for VisualUnderstandingService.EntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1B2E806B8();
  int v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v5, 1, v7);
  int v9 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v7);
  if (!v8)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    uint64_t v11 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstandingService.EntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2E21998);
}

uint64_t sub_1B2E21998(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *a1;
    if (v4 >= 3) {
      return v4 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1B29A3EB4(&qword_1EB7D8950);
    uint64_t v9 = (uint64_t)&a1[*(int *)(a3 + 24)];
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingService.EntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2E21A30);
}

void sub_1B2E21A30()
{
  sub_1B2ABB764();
  if (v3 == 253)
  {
    *unint64_t v1 = v0 + 2;
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_1B29A3EB4(&qword_1EB7D8950);
    uint64_t v6 = (uint64_t)&v1[*(int *)(v4 + 24)];
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v6, v0, v0, v5);
  }
}

void sub_1B2E21AAC()
{
  sub_1B2E21B6C(319, &qword_1EB7E3B38, MEMORY[0x1E4F27990]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1B2E21B6C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B2E82F38();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void type metadata accessor for VisualUnderstandingService.UpdateType()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualUnderstandingService.MappingChange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      uint64_t v7 = *(int *)(type metadata accessor for VisualUnderstandingService.EntityUpdate(0) + 24);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1B2E806B8();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_1B29A3EB4(&qword_1EB7D8950);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for VisualUnderstandingService.MappingChange(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = a1 + *(int *)(type metadata accessor for VisualUnderstandingService.EntityUpdate(0) + 24);
    uint64_t v4 = sub_1B2E806B8();
    uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v3, 1, v4);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      return v5(v3, v4);
    }
  }
  return result;
}

void *initializeWithCopy for VisualUnderstandingService.MappingChange(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(type metadata accessor for VisualUnderstandingService.EntityUpdate(0) + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1B2E806B8();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = sub_1B29A3EB4(&qword_1EB7D8950);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for VisualUnderstandingService.MappingChange(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B2E1F458((uint64_t)a1, (void (*)(void))type metadata accessor for VisualUnderstandingService.MappingChange);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      uint64_t v6 = *(int *)(type metadata accessor for VisualUnderstandingService.EntityUpdate(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1B2E806B8();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_1B29A3EB4(&qword_1EB7D8950);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata accessor for VisualUnderstandingService.MappingChange(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1E9C381E0);
}

void *initializeWithTake for VisualUnderstandingService.MappingChange(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(type metadata accessor for VisualUnderstandingService.EntityUpdate(0) + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1B2E806B8();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = sub_1B29A3EB4(&qword_1EB7D8950);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for VisualUnderstandingService.MappingChange(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B2E1F458((uint64_t)a1, (void (*)(void))type metadata accessor for VisualUnderstandingService.MappingChange);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      uint64_t v6 = *(int *)(type metadata accessor for VisualUnderstandingService.EntityUpdate(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1B2E806B8();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_1B29A3EB4(&qword_1EB7D8950);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B2E2236C()
{
  uint64_t result = type metadata accessor for VisualUnderstandingService.EntityUpdate(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualUnderstandingService.ChangeBookmark(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1B29F4F7C(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for VisualUnderstandingService.ChangeBookmark(uint64_t a1)
{
  return sub_1B29C34DC(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for VisualUnderstandingService.ChangeBookmark(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1B29F4F7C(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1B29C34DC(v5, v6);
  return a1;
}

uint64_t *assignWithTake for VisualUnderstandingService.ChangeBookmark(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1B29C34DC(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstandingService.ChangeBookmark(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xD && *(unsigned char *)(a1 + 16))
    {
      unsigned int v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingService.ChangeBookmark(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)uint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

void type metadata accessor for VisualUnderstandingService.ChangeBookmark()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualUnderstandingService.RecognitionResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1B2E806B8();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_1B29A3EB4(&qword_1EB7D8950);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, v10);
    }
    *(_DWORD *)((char *)v4 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t destroy for VisualUnderstandingService.RecognitionResult(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1B2E806B8();
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v5(v2, v3);
  }
  return result;
}

void *initializeWithCopy for VisualUnderstandingService.RecognitionResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E806B8();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithCopy for VisualUnderstandingService.RecognitionResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E806B8();
  int v10 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *initializeWithTake for VisualUnderstandingService.RecognitionResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E806B8();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for VisualUnderstandingService.RecognitionResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E806B8();
  int v10 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstandingService.RecognitionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2E22C38);
}

uint64_t sub_1B2E22C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_1B29A3EB4(&qword_1EB7D8950);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingService.RecognitionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2E22C9C);
}

uint64_t sub_1B2E22C9C()
{
  sub_1B29A3EB4(&qword_1EB7D8950);
  uint64_t v0 = sub_1B299B84C();

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, v1, v2, v3);
}

void sub_1B2E22CE4()
{
  sub_1B2E21B6C(319, &qword_1EB7E3B38, MEMORY[0x1E4F27990]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *_s20IntelligencePlatform26VisualUnderstandingServiceC10UpdateTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2E22E74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for VisualUnderstandingService.Source()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualUnderstandingService.Context(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B2E806B8();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_1B29A3EB4(&qword_1EB7D8950);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(a3 + 20);
    int v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2 + v10, 1, v7))
    {
      uint64_t v13 = sub_1B29A3EB4(&qword_1EB7D8950);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v11, v12, v7);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 0, 1, v7);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for VisualUnderstandingService.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2E806B8();
  if (!_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v5, 1, v4);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v7(v5, v4);
  }
  return result;
}

char *initializeWithCopy for VisualUnderstandingService.Context(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E806B8();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v10, v6);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithCopy for VisualUnderstandingService.Context(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E806B8();
  int v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)&a1[v11], 1, v6);
  int v15 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v12, v13, v6);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v6);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *initializeWithTake for VisualUnderstandingService.Context(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E806B8();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v9, v10, v6);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for VisualUnderstandingService.Context(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E806B8();
  int v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)&a1[v11], 1, v6);
  int v15 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = sub_1B29A3EB4(&qword_1EB7D8950);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v12, v13, v6);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v6);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstandingService.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2E23958);
}

uint64_t sub_1B2E23958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B29A3EB4(&qword_1EB7D8950);
  sub_1B299B768();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 3u) {
      int v9 = 3;
    }
    else {
      int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    }
    unsigned int v10 = v9 - 3;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 3u) {
      return v10;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingService.Context(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2E23A04);
}

void sub_1B2E23A04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1B2ABB764();
  sub_1B29A3EB4(&qword_1EB7D8950);
  sub_1B299B768();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_1B299B84C();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v9, v10, v11, v12);
  }
  else
  {
    *(unsigned char *)(v5 + *(int *)(a4 + 24)) = v4 + 3;
  }
}

void sub_1B2E23A80()
{
  sub_1B2E21B6C(319, &qword_1EB7E3B38, MEMORY[0x1E4F27990]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for VisualUnderstandingStreamingGallery.ClusterResult(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingStreamingGallery.ClusterResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for VisualUnderstandingStreamingGallery.ClusterResult()
{
}

unsigned char *storeEnumTagSinglePayload for VisualUnderstandingService.ChangeBookmark.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2E23C6CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstandingService.ChangeBookmark.CodingKeys()
{
  return &type metadata for VisualUnderstandingService.ChangeBookmark.CodingKeys;
}

unint64_t sub_1B2E23CA8()
{
  unint64_t result = qword_1E9C45168;
  if (!qword_1E9C45168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45168);
  }
  return result;
}

unint64_t sub_1B2E23CF8()
{
  unint64_t result = qword_1E9C38208;
  if (!qword_1E9C38208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38208);
  }
  return result;
}

unint64_t sub_1B2E23D48()
{
  unint64_t result = qword_1E9C38200;
  if (!qword_1E9C38200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38200);
  }
  return result;
}

unint64_t sub_1B2E23D94()
{
  unint64_t result = qword_1E9C45170;
  if (!qword_1E9C45170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45170);
  }
  return result;
}

uint64_t sub_1B2E23DE4()
{
  return sub_1B2E1E810();
}

void sub_1B2E23E0C()
{
  sub_1B29AEC7C((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_1B2E250B8();
}

uint64_t sub_1B2E23E4C(uint64_t a1, uint64_t *a2, unsigned int *a3, uint64_t a4)
{
  return sub_1B2E1D3CC(a1, a2, a3, a4, 0xE800000000000000);
}

uint64_t sub_1B2E23E70()
{
  return swift_beginAccess();
}

void *sub_1B2E23E90()
{
  uint64_t v2 = *(void *)(v0 + 40);
  return sub_1B29AEC7C((void *)(v0 + 16), v2);
}

uint64_t sub_1B2E23EB0()
{
  return sub_1B2E82FA8();
}

uint64_t sub_1B2E23ED0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E265E4(a1, (uint64_t)v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_1B2E26830((uint64_t)v7, v9 + v8, (void (*)(void))type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  *(void *)(v2 + 16) = sub_1B2E26718;
  *(void *)(v2 + 24) = v9;
  sub_1B2E265E4(a1, (uint64_t)v7);
  uint64_t v16 = &unk_1F0AD6B28;
  unint64_t v17 = sub_1B2E2678C();
  uint64_t v10 = sub_1B2E81B98();
  uint64_t v12 = v11;
  sub_1B2E267D8((uint64_t)v7, (void (*)(void))type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  *(void *)&long long v15 = v10;
  *((void *)&v15 + 1) = v12;
  sub_1B2E267D8(a1, (void (*)(void))type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  sub_1B29D1D20(&v15, v2 + 32);
  return v2;
}

uint64_t sub_1B2E24050(uint64_t a1)
{
  *(void *)(v1 + 16) = sub_1B2E26510;
  *(void *)(v1 + 24) = a1;
  *(void *)(v1 + 56) = &unk_1F0AD6AA8;
  *(void *)(v1 + 64) = sub_1B2E2652C();
  *(void *)(v1 + 32) = a1;
  *(unsigned char *)(v1 + 40) = 0;
  swift_retain();
  return v1;
}

void sub_1B2E240AC(uint64_t *a1@<X8>)
{
}

void sub_1B2E240C4()
{
  sub_1B299F300();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_1B29A3EB4(&qword_1EB7E69E0);
  uint64_t v9 = sub_1B299B0F0(v8);
  MEMORY[0x1F4188790](v9);
  sub_1B299E4A0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_1B2E81DA8();
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299B0C8();
  uint64_t v17 = type metadata accessor for EntityRecognitionClient(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v2, v7 + *(int *)(v17 + 20), v13);
  sub_1B29C3FC4(v5, v12, &qword_1EB7E69E0);
  sub_1B2E81EA8();
  swift_allocObject();
  uint64_t v18 = sub_1B2E81D68();
  if (v1)
  {
    sub_1B29C4148(v5, &qword_1EB7E69E0);
    sub_1B2E267D8(v7, (void (*)(void))type metadata accessor for EntityRecognitionClient);
    type metadata accessor for VisualUnderstandingServiceBackendV1(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v19 = v18;
    sub_1B29C4148(v5, &qword_1EB7E69E0);
    *(void *)(v3 + 16) = v19;
    sub_1B2E26830(v7, v3 + OBJC_IVAR____TtC20IntelligencePlatform35VisualUnderstandingServiceBackendV1_client, (void (*)(void))type metadata accessor for EntityRecognitionClient);
  }
  sub_1B29998C8();
}

void sub_1B2E242A8()
{
  sub_1B299F300();
  sub_1B2E81C88();
  sub_1B299D278();
  uint64_t v32 = v3;
  uint64_t v33 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = sub_1B29A4AC0();
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B299F280();
  uint64_t v7 = sub_1B2E81C48();
  sub_1B299D278();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1B299B0C8();
  uint64_t v11 = sub_1B29A3EB4((uint64_t *)&unk_1E9C371E8);
  uint64_t v12 = sub_1B299B0F0(v11);
  MEMORY[0x1F4188790](v12);
  sub_1B299E4A0();
  uint64_t v15 = v14 - v13;
  sub_1B2E81E18();
  uint64_t v16 = sub_1B29A03F8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v16, v17, v18, v19);
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v2, *MEMORY[0x1E4FB41A8], v7);
  uint64_t v20 = sub_1B2E81E88();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
  sub_1B29C4148(v15, (uint64_t *)&unk_1E9C371E8);
  if (v20)
  {
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      uint64_t v34 = MEMORY[0x1E4FBC860];
      sub_1B2E26EEC();
      sub_1B29C1878();
      unint64_t v22 = v20 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
      uint64_t v31 = *(void *)(v33 + 72);
      do
      {
        sub_1B29A080C();
        v23();
        uint64_t v24 = sub_1B2E81AB8();
        sub_1B2E81C78();
        sub_1B2E81C58();
        *uint64_t v1 = v24;
        *(_DWORD *)((char *)v1 + *(int *)(v5 + 24)) = v25;
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v0, v32);
        uint64_t v26 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2E26E5C();
          uint64_t v26 = v34;
        }
        unint64_t v28 = *(void *)(v26 + 16);
        unint64_t v27 = *(void *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1B2E26E34(v27);
          sub_1B29C1878();
          uint64_t v26 = v34;
        }
        *(void *)(v26 + 16) = v28 + 1;
        sub_1B2E26E44();
        sub_1B2E26830((uint64_t)v1, v29 + v30 * v28, (void (*)(void))type metadata accessor for VisualUnderstandingService.RecognitionResult);
        v22 += v31;
        --v21;
      }
      while (v21);
    }
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

void sub_1B2E2459C()
{
  sub_1B299F300();
  uint64_t v50 = v1;
  uint64_t v52 = v0;
  uint64_t v53 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_1B2E81C88();
  sub_1B299D278();
  uint64_t v56 = v9;
  uint64_t v57 = v10;
  MEMORY[0x1F4188790](v9);
  sub_1B29A4AC0();
  sub_1B299D278();
  uint64_t v54 = v12;
  uint64_t v55 = v11;
  MEMORY[0x1F4188790](v11);
  sub_1B299F280();
  uint64_t v13 = sub_1B29A3EB4(&qword_1EB7D8950);
  uint64_t v14 = sub_1B299B0F0(v13);
  MEMORY[0x1F4188790](v14);
  sub_1B299B860();
  uint64_t v17 = v15 - v16;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v49 - v20;
  MEMORY[0x1F4188790](v19);
  unint64_t v23 = (char *)v49 - v22;
  uint64_t v24 = sub_1B29A3EB4((uint64_t *)&unk_1E9C371E8);
  uint64_t v25 = sub_1B299B0F0(v24);
  MEMORY[0x1F4188790](v25);
  sub_1B299B6D0();
  uint64_t v51 = v26;
  sub_1B2999C2C();
  uint64_t v27 = sub_1B2E806B8();
  uint64_t v28 = v8;
  LODWORD(v8) = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v8, 1, v27);
  sub_1B29C3FC4(v6, (uint64_t)v23, &qword_1EB7D8950);
  if (v8 == 1
    && _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v23, 1, v27) == 1)
  {
    sub_1B29C4148((uint64_t)v23, &qword_1EB7D8950);
    uint64_t v29 = 1;
    uint64_t v30 = v51;
  }
  else
  {
    sub_1B29C4148((uint64_t)v23, &qword_1EB7D8950);
    sub_1B29C3FC4(v28, (uint64_t)v21, &qword_1EB7D8950);
    sub_1B29C3FC4(v6, v17, &qword_1EB7D8950);
    uint64_t v30 = v51;
    MEMORY[0x1B3EB05D0](v21, v17);
    uint64_t v29 = 0;
  }
  uint64_t v31 = sub_1B2E81E18();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v30, v29, 1, v31);
  type metadata accessor for EntityRecognitionClient(0);
  uint64_t v32 = sub_1B2E81E88();
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = *(void *)(v32 + 16);
    if (v34)
    {
      uint64_t v58 = MEMORY[0x1E4FBC860];
      sub_1B29C1878();
      uint64_t v35 = *(void *)(v57 + 16);
      uint64_t v36 = *(unsigned __int8 *)(v57 + 80);
      v49[1] = v33;
      uint64_t v37 = v33 + ((v36 + 32) & ~v36);
      uint64_t v52 = *(void *)(v57 + 72);
      uint64_t v53 = v35;
      v57 += 16;
      uint64_t v38 = (void (**)(uint64_t, uint64_t))(v57 - 8);
      uint64_t v39 = v55;
      do
      {
        uint64_t v40 = v56;
        sub_1B29A080C();
        v41();
        uint64_t v42 = sub_1B2E81AB8();
        sub_1B2E81C78();
        sub_1B2E81C58();
        *uint64_t v3 = v42;
        *(_DWORD *)((char *)v3 + *(int *)(v39 + 24)) = v43;
        (*v38)(v2, v40);
        uint64_t v44 = v58;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2E26E5C();
          uint64_t v44 = v58;
        }
        unint64_t v46 = *(void *)(v44 + 16);
        unint64_t v45 = *(void *)(v44 + 24);
        if (v46 >= v45 >> 1)
        {
          sub_1B2E26E34(v45);
          sub_1B29C1878();
          uint64_t v44 = v58;
        }
        *(void *)(v44 + 16) = v46 + 1;
        sub_1B2E26E44();
        sub_1B2E26830((uint64_t)v3, v47 + v48 * v46, (void (*)(void))type metadata accessor for VisualUnderstandingService.RecognitionResult);
        v37 += v52;
        --v34;
      }
      while (v34);
      uint64_t v30 = v51;
    }
    sub_1B29C4148(v30, (uint64_t *)&unk_1E9C371E8);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B29C4148(v30, (uint64_t *)&unk_1E9C371E8);
  }
  sub_1B29998C8();
}

void sub_1B2E2499C()
{
  uint64_t v1 = v0;
  sub_1B2E256AC();
  sub_1B2E81E48();
  uint64_t v2 = (void *)sub_1B2E82E08();
  if (!v0)
  {
    if (v2)
    {
      id v13 = v2;
      sub_1B2E81E28();

      type metadata accessor for VisualUnderstandingService.ChangeSequence();
      swift_allocObject();
      uint64_t v26 = swift_retain();
      sub_1B2E24050(v26);
      swift_release();

      return;
    }
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1B2E81FB8();
    sub_1B29A4B98(v14, (uint64_t)qword_1EB7E5AC0);
    uint64_t v15 = sub_1B2E81F98();
    os_log_type_t v16 = sub_1B2E82DB8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      v29[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      sub_1B29A3EB4(&qword_1E9C45180);
      uint64_t v18 = sub_1B2E823E8();
      sub_1B29BF6BC(v18, v19, (uint64_t)v29, v20, v21, v22, v23, v24, v27, 0, v28, v29[0], v29[1], v29[2], v29[3], v29[4], v29[5], v29[6], v29[7],
        v29[8]);
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B2996000, v15, v16, "Unexpected bookmark result: %s", v17, 0xCu);
      swift_arrayDestroy();
      sub_1B299B750();
      sub_1B299B750();
    }

    sub_1B2E256EC();
    uint64_t v1 = (void *)sub_1B299E4D4();
    unsigned char *v25 = 0;
    swift_willThrow();
  }
  if (qword_1EB7E5AE0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1B2E81FB8();
  sub_1B29A4B98(v3, (uint64_t)qword_1EB7E5AC0);
  id v4 = v1;
  id v5 = v1;
  uint64_t v6 = sub_1B2E81F98();
  os_log_type_t v7 = sub_1B2E82DB8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v1;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    sub_1B2E26E98();
    sub_1B2E82FB8();
    *uint64_t v9 = v11;

    _os_log_impl(&dword_1B2996000, v6, v7, "Failed to decode bookmark: %@", v8, 0xCu);
    sub_1B29A3EB4(&qword_1EB7E3110);
    swift_arrayDestroy();
    sub_1B299B750();
    sub_1B299B750();
  }
  else
  {
  }
  sub_1B2E256EC();
  sub_1B299E4D4();
  *uint64_t v12 = 0;
  swift_willThrow();
}

void sub_1B2E24EF0(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1B2E81C88();
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  os_log_type_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C37240);
  uint64_t v9 = sub_1B299B0F0(v8);
  MEMORY[0x1F4188790](v9);
  sub_1B299B860();
  uint64_t v12 = v10 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v23 - v14;
  sub_1B2E81CF8();
  sub_1B29C3FC4((uint64_t)v15, v12, &qword_1E9C37240);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v12, 1, v2) == 1)
  {
    type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
    uint64_t v16 = sub_1B29A03F8();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v7, v12, v2);
    uint64_t v20 = sub_1B2E81AB8();
    uint64_t v21 = type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
    sub_1B2E81C78();
    sub_1B2E81C58();
    *a1 = v20;
    *(_DWORD *)((char *)a1 + *(int *)(v21 + 24)) = v22;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
    uint64_t v16 = (uint64_t)a1;
    uint64_t v17 = 0;
    uint64_t v18 = 1;
    uint64_t v19 = v21;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v16, v17, v18, v19);
  sub_1B29C4148((uint64_t)v15, &qword_1E9C37240);
  sub_1B299B738();
}

void sub_1B2E250B8()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1B2E81BB8();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1B2DA38EC();
  uint64_t v9 = type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(v8);
  uint64_t v10 = sub_1B299B0F0(v9);
  MEMORY[0x1F4188790](v10);
  sub_1B299F280();
  if (v3)
  {
    uint64_t v11 = *(void *)(v3 + 16);
    if (v11)
    {
      uint64_t v16 = v6;
      uint64_t v17 = v4;
      uint64_t v18 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B2E26EEC();
      sub_1B29C0490();
      uint64_t v12 = 0;
      unint64_t v13 = *(void *)(v18 + 16);
      do
      {
        uint64_t v14 = *(void *)(v3 + 8 * v12 + 32);
        unint64_t v15 = *(void *)(v18 + 24);
        if (v13 >= v15 >> 1)
        {
          sub_1B2E26E34(v15);
          sub_1B29C0490();
        }
        ++v12;
        *(void *)(v18 + 16) = v13 + 1;
        *(void *)(v18 + 8 * v13++ + 32) = v14;
      }
      while (v11 != v12);
      swift_bridgeObjectRelease();
      uint64_t v4 = v17;
      uint64_t v6 = v16;
    }
  }
  sub_1B2E81E68();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v0, v4);
  type metadata accessor for VisualUnderstandingService.EntitySequence();
  swift_allocObject();
  sub_1B2E23ED0(v1);
  sub_1B29998C8();
}

uint64_t sub_1B2E25268()
{
  uint64_t v0 = sub_1B2E81C28();
  sub_1B299D278();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  sub_1B299E4A0();
  uint64_t v6 = v5 - v4;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v5 - v4, *MEMORY[0x1E4FB41A0], v0);
  uint64_t v7 = sub_1B2E81AE8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  if ((v7 & 0x100000000) != 0) {
    *(double *)&uint64_t result = 0.0;
  }
  else {
    *(double *)&uint64_t result = *(float *)&v7;
  }
  return result;
}

void *sub_1B2E25370()
{
  uint64_t v0 = sub_1B2E81C28();
  sub_1B299D278();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E4FB41A0], v0);
  uint64_t v6 = sub_1B2E81C18();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1B29C18DC();
    uint64_t v8 = 0;
    uint64_t v9 = v19;
    unint64_t v10 = *(void *)(v19 + 16);
    uint64_t v11 = 16 * v10;
    do
    {
      uint64_t v12 = *(void *)(v6 + v8 + 32);
      float v13 = *(float *)(v6 + v8 + 40);
      uint64_t v19 = v9;
      unint64_t v14 = v10 + 1;
      if (v10 >= *(void *)(v9 + 24) >> 1)
      {
        sub_1B29C18DC();
        uint64_t v9 = v19;
      }
      *(void *)(v9 + 16) = v14;
      uint64_t v15 = v9 + v11 + v8;
      *(void *)(v15 + 32) = v12;
      *(double *)(v15 + 40) = v13;
      v8 += 16;
      unint64_t v10 = v14;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for VisualUnderstandingService.SimilarEntitySequence();
  uint64_t v16 = (void *)swift_allocObject();
  v16[5] = &unk_1F0AD6C48;
  v16[6] = sub_1B2E26578();
  id v16[2] = v9;
  v16[3] = 0;
  return v16;
}

uint64_t sub_1B2E25564()
{
  swift_release();
  sub_1B2E267D8(v0 + OBJC_IVAR____TtC20IntelligencePlatform35VisualUnderstandingServiceBackendV1_client, (void (*)(void))type metadata accessor for EntityRecognitionClient);

  return swift_deallocClassInstance();
}

uint64_t sub_1B2E255E4()
{
  return type metadata accessor for VisualUnderstandingServiceBackendV1(0);
}

uint64_t type metadata accessor for VisualUnderstandingServiceBackendV1(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1EB7E4BB8);
}

uint64_t sub_1B2E2560C()
{
  uint64_t result = type metadata accessor for EntityRecognitionClient(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1B2E256AC()
{
  unint64_t result = qword_1E9C38228;
  if (!qword_1E9C38228)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9C38228);
  }
  return result;
}

unint64_t sub_1B2E256EC()
{
  unint64_t result = qword_1E9C45178;
  if (!qword_1E9C45178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45178);
  }
  return result;
}

void sub_1B2E25738(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v86 = a1;
  uint64_t v3 = sub_1B29A3EB4(&qword_1EB7D8950);
  uint64_t v4 = sub_1B299B0F0(v3);
  MEMORY[0x1F4188790](v4);
  sub_1B299B6D0();
  uint64_t v78 = v5;
  sub_1B2999C2C();
  sub_1B2E81A58();
  sub_1B299D278();
  uint64_t v76 = v7;
  uint64_t v77 = v6;
  MEMORY[0x1F4188790](v6);
  sub_1B299B6D0();
  uint64_t v75 = v8;
  sub_1B2999C2C();
  sub_1B2E819C8();
  sub_1B299D278();
  uint64_t v83 = v10;
  uint64_t v84 = v9;
  MEMORY[0x1F4188790](v9);
  sub_1B299B6D0();
  uint64_t v82 = v11;
  sub_1B2999C2C();
  sub_1B2E81A98();
  sub_1B299D278();
  uint64_t v80 = v13;
  uint64_t v81 = v12;
  MEMORY[0x1F4188790](v12);
  sub_1B299B6D0();
  uint64_t v79 = v14;
  uint64_t v15 = sub_1B29A3EB4(&qword_1E9C381B8);
  uint64_t v16 = sub_1B299B0F0(v15);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1B2E81928();
  sub_1B299D278();
  uint64_t v85 = v20;
  MEMORY[0x1F4188790](v21);
  sub_1B299B860();
  uint64_t v24 = v22 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v74 - v26;
  uint64_t v28 = *v1;
  sub_1B2E81B78();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v18, 1, v19) == 1)
  {
LABEL_2:
    sub_1B29C4148((uint64_t)v18, &qword_1E9C381B8);
    uint64_t v29 = type metadata accessor for VisualUnderstandingService.MappingChange(0);
    uint64_t v30 = (uint64_t)v86;
    uint64_t v31 = 1;
  }
  else
  {
    uint64_t v32 = *(char **)(v85 + 32);
    uint64_t v91 = (void (**)(uint64_t, char *, uint64_t))(v85 + 16);
    uint64_t v92 = v32;
    uint64_t v90 = v85 + 88;
    int v33 = *MEMORY[0x1E4FB4130];
    int v88 = *MEMORY[0x1E4FB4138];
    int v89 = v33;
    uint64_t v34 = v85 + 8;
    uint64_t v87 = v85 + 32;
    while (1)
    {
      uint64_t v35 = v34;
      ((void (*)(char *, char *, uint64_t))v92)(v27, v18, v19);
      (*v91)(v24, v27, v19);
      uint64_t v36 = sub_1B2E26EE0();
      int v38 = v37(v36);
      if (v38 == v89)
      {
        uint64_t v48 = sub_1B2E26EE0();
        v49(v48);
        uint64_t v51 = v79;
        uint64_t v50 = v80;
        uint64_t v52 = v81;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v79, v24, v81);
        uint64_t v92 = v27;
        sub_1B2E81A68();
        sub_1B2E25D10();
        uint64_t v53 = sub_1B2E26E18();
        v54(v53);
        uint64_t v55 = sub_1B2E81A88();
        uint64_t v56 = sub_1B2E81A78();
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v52);
        uint64_t v57 = sub_1B2E26ECC();
        v58(v57);
        uint64_t v59 = v86;
        *uint64_t v86 = v24;
        *((void *)v59 + 1) = v55;
        *((void *)v59 + 2) = v56;
        uint64_t v60 = type metadata accessor for VisualUnderstandingService.MappingChange(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v30 = (uint64_t)v59;
        goto LABEL_17;
      }
      if (v38 == v88) {
        break;
      }
      if ((_BYTE)v2[1])
      {
        uint64_t v39 = sub_1B2E26E80();
        ((void (*)(uint64_t))v28)(v39);
      }
      else
      {
        if (qword_1EB7E5AE0 != -1) {
          swift_once();
        }
        uint64_t v40 = sub_1B2E81FB8();
        sub_1B29A4B98(v40, (uint64_t)qword_1EB7E5AC0);
        uint64_t v28 = sub_1B2E81F98();
        os_log_type_t v41 = sub_1B2E82DC8();
        if (os_log_type_enabled(v28, v41))
        {
          uint64_t v42 = v27;
          int v43 = v2;
          uint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v44 = 0;
          _os_log_impl(&dword_1B2996000, v28, v41, "Unknown type of VUGalleryUpdate was received. Ignoring.", v44, 2u);
          unint64_t v45 = v44;
          uint64_t v2 = v43;
          uint64_t v27 = v42;
          uint64_t v34 = v35;
          MEMORY[0x1B3EB30C0](v45, -1, -1);
        }

        uint64_t v46 = sub_1B2E26E80();
        ((void (*)(uint64_t))v28)(v46);
        *((unsigned char *)v2 + 8) = 1;
      }
      uint64_t v47 = sub_1B2E26EE0();
      ((void (*)(uint64_t))v28)(v47);
      uint64_t v28 = *v2;
      sub_1B2E81B78();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v18, 1, v19) == 1) {
        goto LABEL_2;
      }
    }
    uint64_t v61 = sub_1B2E26EE0();
    v62(v61);
    uint64_t v64 = v75;
    uint64_t v63 = v76;
    uint64_t v65 = v77;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 32))(v75, v24, v77);
    uint64_t v92 = v27;
    sub_1B2E81A28();
    sub_1B2E25D10();
    uint64_t v66 = sub_1B2E26E18();
    v67(v66);
    uint64_t v68 = sub_1B2E81A38();
    uint64_t v69 = v78;
    sub_1B2E81A48();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v65);
    uint64_t v70 = sub_1B2E26ECC();
    v71(v70);
    uint64_t v72 = v86;
    *uint64_t v86 = v24;
    *((void *)v72 + 1) = v68;
    uint64_t v73 = type metadata accessor for VisualUnderstandingService.EntityUpdate(0);
    sub_1B2E26DA0(v69, (uint64_t)&v72[*(int *)(v73 + 24)]);
    uint64_t v60 = type metadata accessor for VisualUnderstandingService.MappingChange(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = (uint64_t)v72;
LABEL_17:
    uint64_t v31 = 0;
    uint64_t v29 = v60;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v30, v31, 1, v29);
  sub_1B299B738();
}

uint64_t sub_1B2E25D10()
{
  uint64_t v1 = sub_1B2E819C8();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1B29A2B5C();
  sub_1B29A080C();
  v5();
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v0, v1);
  if (v6 == *MEMORY[0x1E4FB4140]) {
    return 0;
  }
  if (v6 == *MEMORY[0x1E4FB4150]) {
    return 1;
  }
  if (v6 == *MEMORY[0x1E4FB4148]) {
    return 2;
  }
  uint64_t result = sub_1B2E83418();
  __break(1u);
  return result;
}

void sub_1B2E25E54(uint64_t *a1@<X8>)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1B2E81B88();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    v12[0] = 0;
    id v4 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v2, 1, v12);
    id v5 = v12[0];
    if (v4)
    {
      uint64_t v6 = sub_1B2E80588();
      uint64_t v8 = v7;

      *a1 = v6;
      a1[1] = v8;
    }
    else
    {
      uint64_t v11 = v5;
      sub_1B2E80388();

      swift_willThrow();
    }
  }
  else
  {
    sub_1B2E256EC();
    uint64_t v9 = sub_1B299E4D4();
    sub_1B2E26EAC(v9, v10);
  }
}

void sub_1B2E25F68(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_1B2E81AF8();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B2DA38EC();
  uint64_t v8 = sub_1B2E81AD8();
  sub_1B299D278();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  sub_1B299E4A0();
  uint64_t v14 = v13 - v12;
  unint64_t v15 = v1[1];
  unint64_t v16 = *(void *)(*v1 + 16);
  if (v15 == v16)
  {
    sub_1B29A3EB4(&qword_1E9C37E90);
    sub_1B29A03F8();
    sub_1B299B738();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v17, v18, v19, v20);
  }
  else if (v15 >= v16)
  {
    __break(1u);
  }
  else
  {
    v1[1] = v15 + 1;
    sub_1B29A080C();
    v22();
    uint64_t v27 = sub_1B2E81AB8();
    sub_1B2E81AB8();
    sub_1B2E82BB8();
    sub_1B2E261B0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
    uint64_t v23 = sub_1B2E81AA8();
    type metadata accessor for VisualUnderstandingService.ObservationSequence();
    uint64_t v24 = (void *)swift_allocObject();
    v24[5] = &unk_1F0AD6BC8;
    v24[6] = sub_1B2A4A558();
    _OWORD v24[2] = v23;
    v24[3] = 0;
    uint64_t v25 = sub_1B29A3EB4(&qword_1E9C37E90);
    uint64_t v26 = *(int *)(v25 + 80);
    *(void *)a1 = v27;
    *(_OWORD *)(a1 + 8) = v28;
    *(void *)(a1 + 24) = v29;
    *(void *)(a1 + 32) = v30;
    *(unsigned char *)(a1 + 40) = v31;
    sub_1B2E81AC8();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v8);
    *(void *)(a1 + v26) = v24;
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 0, 1, v25);
    sub_1B299B738();
  }
}

void sub_1B2E261B0()
{
  uint64_t v1 = sub_1B2E81AF8();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1B29A2B5C();
  sub_1B29A080C();
  v5();
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v0, v1);
  if (v6 == *MEMORY[0x1E4FB4190])
  {
    static EntityClass.entity.getter();
  }
  else if (v6 == *MEMORY[0x1E4FB4188])
  {
    static EntityClass.person.getter();
  }
  else if (v6 == *MEMORY[0x1E4FB4180])
  {
    static EntityClass.animal.getter();
  }
  else
  {
    static EntityClass.entity.getter();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  }
}

void sub_1B2E262E4(uint64_t *a1@<X8>)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1B2E81BA8();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    v12[0] = 0;
    id v4 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v2, 1, v12);
    id v5 = v12[0];
    if (v4)
    {
      uint64_t v6 = sub_1B2E80588();
      uint64_t v8 = v7;

      *a1 = v6;
      a1[1] = v8;
    }
    else
    {
      uint64_t v11 = v5;
      sub_1B2E80388();

      swift_willThrow();
    }
  }
  else
  {
    sub_1B2E256EC();
    uint64_t v9 = sub_1B299E4D4();
    sub_1B2E26EAC(v9, v10);
  }
}

uint64_t sub_1B2E263F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1B2E263F4();
  uint64_t v5 = v4;
  uint64_t result = sub_1B2E267D8(v1, (void (*)(void))type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  *a1 = v3;
  a1[1] = v5;
  return result;
}

void sub_1B2E26454(uint64_t a1@<X8>)
{
  unint64_t v2 = v1[1];
  unint64_t v3 = *(void *)(*v1 + 16);
  if (v2 == v3)
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 1;
  }
  else if (v2 >= v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *v1 + 16 * v2;
    uint64_t v5 = *(void *)(v4 + 40);
    *(void *)a1 = *(void *)(v4 + 32);
    *(void *)(a1 + 8) = v5;
    v1[1] = v2 + 1;
    *(unsigned char *)(a1 + 16) = 0;
  }
}

uint64_t sub_1B2E264A4()
{
  unint64_t v1 = v0[1];
  unint64_t v2 = *(void *)(*v0 + 16);
  if (v1 == v2) {
    return 0;
  }
  if (v1 >= v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = *(void *)(*v0 + 8 * v1 + 32);
    v0[1] = v1 + 1;
  }
  return result;
}

uint64_t sub_1B2E264E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1B2E264A4();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_1B2E26510(uint64_t *a1@<X8>)
{
}

unint64_t sub_1B2E2652C()
{
  unint64_t result = qword_1E9C38220;
  if (!qword_1E9C38220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38220);
  }
  return result;
}

unint64_t sub_1B2E26578()
{
  unint64_t result = qword_1E9C45188;
  if (!qword_1E9C45188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45188);
  }
  return result;
}

uint64_t type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1E9C37EC0);
}

uint64_t sub_1B2E265E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2E26648()
{
  uint64_t v1 = *(void *)(type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  sub_1B2E81BB8();
  sub_1B2999864();
  (*(void (**)(uint64_t))(v7 + 8))(v6);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

void sub_1B2E26718(uint64_t *a1@<X8>)
{
}

unint64_t sub_1B2E2678C()
{
  unint64_t result = qword_1E9C37EB8;
  if (!qword_1E9C37EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37EB8);
  }
  return result;
}

uint64_t sub_1B2E267D8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1B2E26830(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1.Iterator()
{
}

uint64_t sub_1B2E2689C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2E81BB8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1B2E26908(uint64_t a1)
{
  uint64_t v2 = sub_1B2E81BB8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1B2E2696C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2E81BB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B2E269D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2E81BB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B2E26A34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2E81BB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B2E26A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2E81BB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1B2E26AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2E26B10);
}

uint64_t sub_1B2E26B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2E81BB8();

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v4);
}

uint64_t sub_1B2E26B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2E26B6C);
}

uint64_t sub_1B2E26B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2E81BB8();

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, v4);
}

uint64_t sub_1B2E26BB8()
{
  uint64_t result = sub_1B2E81BB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for VisualUnderstandingServiceBackendV1.SimilarEntitySequenceV1.Iterator()
{
}

uint64_t sub_1B2E26C50(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_1B2E26C88(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_1B2E26CD8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

void type metadata accessor for VisualUnderstandingServiceBackendV1.ChangeSequenceV1.Iterator()
{
}

unint64_t sub_1B2E26D28(uint64_t a1)
{
  unint64_t result = sub_1B2E26D50();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2E26D50()
{
  unint64_t result = qword_1E9C45190;
  if (!qword_1E9C45190)
  {
    type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45190);
  }
  return result;
}

uint64_t sub_1B2E26DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7D8950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void type metadata accessor for VisualUnderstandingServiceBackendV1.ObservationSequenceV1.Iterator()
{
}

uint64_t sub_1B2E26E18()
{
  return v0;
}

BOOL sub_1B2E26E34@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_1B2E26E5C()
{
  sub_1B29C1878();
}

uint64_t sub_1B2E26E80()
{
  return v0;
}

uint64_t sub_1B2E26EAC(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
  return swift_willThrow();
}

uint64_t sub_1B2E26ECC()
{
  return *(void *)(v0 - 88);
}

uint64_t sub_1B2E26EE0()
{
  return v0;
}

uint64_t sub_1B2E26EEC()
{
  return 0;
}

uint64_t sub_1B2E26F00()
{
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_1B29C0490();
  swift_retain();
  uint64_t v0 = sub_1B2E1E660();
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = v0;
    do
    {
      if (!v2)
      {
        if (qword_1E9C38D20 != -1) {
          swift_once();
        }
        uint64_t v3 = sub_1B2E81FB8();
        sub_1B29A4B98(v3, (uint64_t)qword_1E9C45198);
        uint64_t v4 = sub_1B2E81F98();
        os_log_type_t v5 = sub_1B2E82DC8();
        if (os_log_type_enabled(v4, v5))
        {
          uint64_t v6 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v6 = 0;
          _os_log_impl(&dword_1B2996000, v4, v5, "GDVUGalleryTransaction.entities: Observation ID should never be zero. This is an error in VU.", v6, 2u);
          MEMORY[0x1B3EB30C0](v6, -1, -1);
        }
      }
      unint64_t v7 = *(void *)(v10 + 16);
      if (v7 >= *(void *)(v10 + 24) >> 1) {
        sub_1B29C0490();
      }
      *(void *)(v10 + 16) = v7 + 1;
      *(void *)(v10 + 8 * v7 + 32) = v2;
      uint64_t v2 = sub_1B2E1E660();
    }
    while ((v8 & 1) == 0);
  }
  swift_release();
  return v10;
}

void sub_1B2E270A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1B29C197C();
    uint64_t v3 = sub_1B2B1D160(v2);
    if (v3 < 0 || (unint64_t v5 = v3, v3 >= 1 << *(unsigned char *)(v2 + 32)))
    {
LABEL_18:
      __break(1u);
    }
    else
    {
      uint64_t v6 = v2 + 64;
      uint64_t v15 = v2 + 64;
      while ((*(void *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
      {
        if (v4 != *(_DWORD *)(v2 + 36)) {
          goto LABEL_20;
        }
        uint64_t v16 = v1;
        int v17 = v4;
        uint64_t v7 = v2;
        uint64_t v8 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
        id v9 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *(void *)(*(void *)(v2 + 48) + 8 * v5));
        if (!v9) {
          goto LABEL_24;
        }
        id v10 = v9;
        id v11 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v8);
        unint64_t v12 = *(void *)(v18 + 16);
        if (v12 >= *(void *)(v18 + 24) >> 1) {
          sub_1B29C197C();
        }
        *(void *)(v18 + 16) = v12 + 1;
        uint64_t v13 = v18 + 16 * v12;
        *(void *)(v13 + 32) = v10;
        *(void *)(v13 + 40) = v11;
        if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(v7 + 32))) {
          goto LABEL_21;
        }
        uint64_t v6 = v15;
        if ((*(void *)(v15 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
          goto LABEL_22;
        }
        uint64_t v2 = v7;
        if (v17 != *(_DWORD *)(v7 + 36)) {
          goto LABEL_23;
        }
        uint64_t v14 = sub_1B2E830E8();
        --v1;
        if (v16 == 1) {
          return;
        }
        unint64_t v5 = v14;
        if ((v14 & 0x8000000000000000) == 0)
        {
          int v4 = *(_DWORD *)(v7 + 36);
          if (v14 < 1 << *(unsigned char *)(v7 + 32)) {
            continue;
          }
        }
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
}

uint64_t GDVUVisualUnderstandingService.gallery.getter(uint64_t a1)
{
  type metadata accessor for GDVUGallery(a1);
  sub_1B29AEC7C((void *)(*(void *)(v1 + OBJC_IVAR___GDVUVisualUnderstandingService_inner) + 16), *(void *)(*(void *)(v1 + OBJC_IVAR___GDVUVisualUnderstandingService_inner) + 40));
  uint64_t v2 = swift_retain();
  sub_1B2E2A670(v2, (Class *)off_1E60129A8, &OBJC_IVAR___GDVUGallery_inner);
  sub_1B2AE7134();
  swift_release();
  return v1;
}

uint64_t type metadata accessor for GDVUGallery(uint64_t a1)
{
  return sub_1B29C3CA0(a1, &qword_1EB7D9D48);
}

id GDVUVisualUnderstandingService.init(client:version:url:)(void *a1, uint64_t a2, uint64_t a3)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1B2E80498();
  uint64_t v7 = 0;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a3, 1, v6) != 1)
  {
    uint64_t v7 = (void *)sub_1B2E803F8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a3, v6);
  }
  v12[0] = 0;
  id v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithClient_version_url_error_, a1, a2, v7, v12);

  if (v8)
  {
    id v9 = v12[0];
  }
  else
  {
    id v10 = v12[0];
    sub_1B2E80388();

    swift_willThrow();
  }

  return v8;
}

void GDVUVisualUnderstandingService.init(client:version:url:)()
{
  sub_1B299F300();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  id v8 = v7;
  uint64_t v9 = type metadata accessor for EntityRecognitionClient(0);
  uint64_t v10 = sub_1B299B0F0(v9);
  MEMORY[0x1F4188790](v10);
  sub_1B299B3C8();
  uint64_t v11 = type metadata accessor for VisualUnderstandingService.Version(0);
  uint64_t v12 = sub_1B299B0F0(v11);
  MEMORY[0x1F4188790](v12);
  sub_1B299B860();
  uint64_t v15 = v13 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v30 - v17;
  if (v6 == 1)
  {
    sub_1B2AD2BAC(v4, (uint64_t)&v30 - v17, &qword_1EB7E69E0);
    uint64_t v19 = sub_1B29A3EB4(&qword_1EB7E3268);
    uint64_t v20 = (uint64_t)v18;
    uint64_t v21 = 0;
  }
  else
  {
    if (v6)
    {
      uint64_t v32 = 0;
      unint64_t v33 = 0xE000000000000000;
      id v29 = v0;
      sub_1B2E831F8();
      sub_1B2E82518();
      type metadata accessor for GDVUVersion(0);
      sub_1B2E83388();
      sub_1B2E83418();
      __break(1u);
      return;
    }
    uint64_t v19 = sub_1B29A3EB4(&qword_1EB7E3268);
    uint64_t v20 = (uint64_t)v18;
    uint64_t v21 = 1;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v20, v21, 1, v19);
  sub_1B299FD78();
  uint64_t v24 = v23 + *(void *)(v22 + 88);
  sub_1B299D804();
  sub_1B2E2F7B0(v24, v2, (void (*)(void))type metadata accessor for EntityRecognitionClient);
  sub_1B2E2F7B0((uint64_t)v18, v15, (void (*)(void))type metadata accessor for VisualUnderstandingService.Version);
  type metadata accessor for VisualUnderstandingService(0);
  swift_allocObject();
  uint64_t v25 = v0;
  VisualUnderstandingService.init(client:version:)();
  if (v1)
  {

    sub_1B29C4148(v4, &qword_1EB7E69E0);
    uint64_t v27 = sub_1B2E2FBB8((uint64_t)v18, (void (*)(void))type metadata accessor for VisualUnderstandingService.Version);
    type metadata accessor for GDVUVisualUnderstandingService(v27);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v28 = v26;
    sub_1B2E2FBB8((uint64_t)v18, (void (*)(void))type metadata accessor for VisualUnderstandingService.Version);
    *(void *)&v25[OBJC_IVAR___GDVUVisualUnderstandingService_inner] = v28;

    v31.receiver = v25;
    v31.super_class = (Class)GDVUVisualUnderstandingService;
    objc_msgSendSuper2(&v31, sel_init);

    sub_1B29C4148(v4, &qword_1EB7E69E0);
  }
  sub_1B29998C8();
}

void GDVUVisualUnderstandingService.recognize(in:contextMoment:)()
{
  sub_1B299F300();
  uint64_t v3 = type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299ADB4();
  sub_1B29AEC7C((void *)(*(void *)(v0 + OBJC_IVAR___GDVUVisualUnderstandingService_inner) + 16), *(void *)(*(void *)(v0 + OBJC_IVAR___GDVUVisualUnderstandingService_inner) + 40));
  sub_1B29998FC();
  sub_1B2E242A8();
  if (!v1)
  {
    if (v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = sub_1B2E832F8();
      type metadata accessor for GDVURecognitionResult(v10);
      uint64_t v11 = v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v12 = *(void *)(v5 + 72);
      do
      {
        sub_1B2E2F7B0(v11, (uint64_t)v2, (void (*)(void))type metadata accessor for VisualUnderstandingService.RecognitionResult);
        uint64_t v13 = *v2;
        sub_1B2E27AC0(&v13, (uint64_t)v2 + *(int *)(v3 + 20), *(float *)((char *)v2 + *(int *)(v3 + 24)));
        sub_1B2E2FBB8((uint64_t)v2, (void (*)(void))type metadata accessor for VisualUnderstandingService.RecognitionResult);
        sub_1B2E832C8();
        sub_1B2E83308();
        sub_1B2E83318();
        sub_1B2E832D8();
        v11 += v12;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_1B29998C8();
}

id sub_1B2E27AC0(uint64_t *a1, uint64_t a2, float a3)
{
  uint64_t v7 = sub_1B29A3EB4(&qword_1EB7D8950);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B29A0498();
  uint64_t v11 = *a1;
  sub_1B2AD2BAC(a2, v3, &qword_1EB7D8950);
  id v9 = objc_allocWithZone((Class)GDVURecognitionResult);
  return sub_1B2E2ED50(&v11, v3, a3);
}

void GDVUVisualUnderstandingService.recognize(in:context:)()
{
  sub_1B299F300();
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
  sub_1B299D278();
  uint64_t v29 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1B29A0498();
  uint64_t v9 = sub_1B29A3EB4(&qword_1EB7D8950);
  uint64_t v10 = sub_1B299B0F0(v9);
  MEMORY[0x1F4188790](v10);
  sub_1B2E2FE58();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v28 - v12;
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR___GDVUVisualUnderstandingService_inner);
  if (v5)
  {
    id v15 = objc_msgSend(v5, sel_moment);
    sub_1B2E80698();

    uint64_t v16 = sub_1B2E806B8();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 0, 1, v16);
    id v17 = objc_msgSend(v5, sel_asset);
    sub_1B2E80698();

    uint64_t v18 = v3;
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v16 = sub_1B2E806B8();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 1, 1, v16);
    uint64_t v18 = v3;
    uint64_t v19 = 1;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v18, v19, 1, v16);
  sub_1B29AEC7C((void *)(v14 + 16), *(void *)(v14 + 40));
  sub_1B2E2459C();
  uint64_t v21 = v20;
  sub_1B29C4148(v3, &qword_1EB7D8950);
  sub_1B29C4148((uint64_t)v13, &qword_1EB7D8950);
  if (!v1)
  {
    if (v21) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = MEMORY[0x1E4FBC860];
    }
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23)
    {
      uint64_t v24 = sub_1B2E832F8();
      type metadata accessor for GDVURecognitionResult(v24);
      uint64_t v25 = *(unsigned __int8 *)(v29 + 80);
      v28[1] = v22;
      uint64_t v26 = v22 + ((v25 + 32) & ~v25);
      uint64_t v27 = *(void *)(v29 + 72);
      do
      {
        sub_1B2E2F7B0(v26, (uint64_t)v2, (void (*)(void))type metadata accessor for VisualUnderstandingService.RecognitionResult);
        uint64_t v30 = *v2;
        sub_1B2E27AC0(&v30, (uint64_t)v2 + *(int *)(v6 + 20), *(float *)((char *)v2 + *(int *)(v6 + 24)));
        sub_1B2E2FBB8((uint64_t)v2, (void (*)(void))type metadata accessor for VisualUnderstandingService.RecognitionResult);
        sub_1B2E832C8();
        sub_1B2E83308();
        sub_1B2E83318();
        sub_1B2E832D8();
        v26 += v27;
        --v23;
      }
      while (v23);
    }
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

void sub_1B2E28020(unint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = v3;
  uint64_t v69 = a3;
  uint64_t v7 = sub_1B29A3EB4(&qword_1EB7D8950);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v70 = (uint64_t)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C37E90);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v66 = (void *)((char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v75 = (void *)((char *)v64 - v12);
  uint64_t v13 = sub_1B29A3EB4(&qword_1E9C37E98);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = *(void *)(a2 + OBJC_IVAR___GDVUVisualUnderstandingService_inner);
  uint64_t v68 = (char *)v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_16;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1B2E83448();
    if (v16) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v16) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v76 = v15;
  uint64_t v77 = MEMORY[0x1E4FBC860];
  sub_1B29C03A0();
  if (v16 < 0)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  uint64_t v74 = v3;
  uint64_t v67 = v9;
  uint64_t v17 = 0;
  uint64_t v18 = v77;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v19 = (id)MEMORY[0x1B3EB1A20](v17, a1);
    }
    else {
      id v19 = *(id *)(a1 + 8 * v17 + 32);
    }
    uint64_t v20 = v19;
    id v21 = objc_msgSend(v19, sel_intValue);

    uint64_t v77 = v18;
    unint64_t v22 = *(void *)(v18 + 16);
    if (v22 >= *(void *)(v18 + 24) >> 1)
    {
      sub_1B29C03A0();
      uint64_t v18 = v77;
    }
    ++v17;
    *(void *)(v18 + 16) = v22 + 1;
    *(void *)(v18 + 8 * v22 + 32) = v21;
  }
  while (v16 != v17);
  swift_bridgeObjectRelease();
  uint64_t v9 = v67;
  uint64_t v4 = v74;
  uint64_t v15 = v76;
LABEL_16:
  sub_1B29AEC7C((void *)(v15 + 16), *(void *)(v15 + 40));
  uint64_t v23 = v4;
  sub_1B2E250B8();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_25:
    _Block_release(v69);
    return;
  }
  uint64_t v74 = 0;
  v64[1] = v69 + 16;
  uint64_t v26 = swift_retain();
  uint64_t v67 = v9;
  uint64_t v65 = v25;
  do
  {
    uint64_t v27 = (uint64_t)v68;
    sub_1B2E1E5A4(v26);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v27, 1, v9) == 1) {
      break;
    }
    uint64_t v28 = *(int *)(v9 + 64);
    uint64_t v29 = v75;
    uint64_t v30 = (uint64_t)v75 + v28;
    uint64_t v76 = (uint64_t)v75 + v28;
    uint64_t v31 = *(void *)v27;
    uint64_t v32 = *(void *)(v27 + 8);
    uint64_t v34 = *(void *)(v27 + 16);
    uint64_t v73 = *(void *)(v27 + 24);
    uint64_t v33 = v73;
    uint64_t v35 = v9;
    uint64_t v36 = *(void *)(v27 + 32);
    char v37 = *(unsigned char *)(v27 + 40);
    uint64_t v38 = v27 + v28;
    uint64_t v39 = *(int *)(v35 + 80);
    uint64_t v40 = *(void *)(v27 + v39);
    *uint64_t v75 = v31;
    v29[1] = v32;
    void v29[2] = v34;
    void v29[3] = v33;
    v29[4] = v36;
    *((unsigned char *)v29 + 40) = v37;
    sub_1B2E26DA0(v38, v30);
    *(uint64_t *)((char *)v29 + v39) = v40;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v41 = v74;
    uint64_t v42 = sub_1B2E26F00();
    uint64_t v74 = v41;
    int v43 = v66;
    uint64_t v44 = (uint64_t)v66 + *(int *)(v35 + 64);
    uint64_t v45 = *(int *)(v35 + 80);
    uint64_t v71 = v42;
    uint64_t v72 = v45;
    *uint64_t v66 = v31;
    v43[1] = v32;
    uint64_t v46 = v32;
    uint64_t v47 = v73;
    void v43[2] = v34;
    v43[3] = v47;
    v43[4] = v36;
    char v48 = v37;
    *((unsigned char *)v43 + 40) = v37;
    uint64_t v49 = v44;
    sub_1B2AD2BAC(v76, v44, &qword_1EB7D8950);
    swift_release();
    *(uint64_t *)((char *)v43 + v72) = v40;
    id v50 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v31);
    uint64_t v51 = sub_1B29C4148(v49, &qword_1EB7D8950);
    if (!v50) {
      goto LABEL_28;
    }
    type metadata accessor for GDVUEntityClass(v51);
    uint64_t v77 = v46;
    uint64_t v78 = v34;
    uint64_t v79 = v47;
    uint64_t v80 = v36;
    char v81 = v48;
    id v52 = sub_1B2E28A44((uint64_t)&v77);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v53 = v70;
    sub_1B2AD2BAC(v76, v70, &qword_1EB7D8950);
    uint64_t v54 = sub_1B2E806B8();
    uint64_t v55 = 0;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v53, 1, v54) != 1)
    {
      uint64_t v56 = v70;
      uint64_t v55 = (void *)sub_1B2E80688();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v56, v54);
    }
    uint64_t v57 = (void *)sub_1B2E82828();
    char v58 = (*((uint64_t (**)(char *, id, id, void *, void *))v69 + 2))(v69, v50, v52, v55, v57);

    swift_bridgeObjectRelease();
    uint64_t v26 = sub_1B29C4148((uint64_t)v75, &qword_1E9C37E90);
    uint64_t v9 = v67;
    uint64_t v25 = v65;
  }
  while ((v58 & 1) != 0);
  uint64_t v59 = swift_release();
  uint64_t v60 = v74;
  uint64_t v61 = (*(void *(**)(uint64_t *__return_ptr, uint64_t))(v25 + 16))(&v77, v59);
  if (v60)
  {
    swift_release();
    goto LABEL_25;
  }
  type metadata accessor for GDVUChangeBookmark((uint64_t)v61);
  uint64_t v62 = v77;
  unint64_t v63 = v78;
  v82[0] = v77;
  v82[1] = v78;
  sub_1B2E28AB4(v82);
  swift_release();
  sub_1B29C34DC(v62, v63);
  _Block_release(v69);
}

void GDVUVisualUnderstandingService.entities(for:body:)()
{
  sub_1B299F300();
  uint64_t v46 = v4;
  unint64_t v6 = v5;
  uint64_t v50 = sub_1B29A3EB4(&qword_1E9C37E90);
  sub_1B2999864();
  MEMORY[0x1F4188790](v7);
  sub_1B299B860();
  uint64_t v47 = v8 - v9;
  MEMORY[0x1F4188790](v10);
  sub_1B2E2FE48();
  uint64_t v11 = sub_1B29A3EB4(&qword_1E9C37E98);
  uint64_t v12 = sub_1B299B0F0(v11);
  MEMORY[0x1F4188790](v12);
  sub_1B299ADB4();
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR___GDVUVisualUnderstandingService_inner);
  uint64_t v49 = v2;
  if (!v6) {
    goto LABEL_16;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B2E83448();
    if (v14) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v14 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v14) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v55 = v13;
  uint64_t v57 = MEMORY[0x1E4FBC860];
  sub_1B29C03A0();
  if (v14 < 0)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  uint64_t v15 = 0;
  uint64_t v16 = v57;
  do
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v17 = (id)MEMORY[0x1B3EB1A20](v15, v6);
    }
    else {
      id v17 = *(id *)(v6 + 8 * v15 + 32);
    }
    uint64_t v18 = v17;
    id v19 = objc_msgSend(v17, sel_intValue);

    uint64_t v57 = v16;
    unint64_t v20 = *(void *)(v16 + 16);
    if (v20 >= *(void *)(v16 + 24) >> 1)
    {
      sub_1B29C03A0();
      uint64_t v16 = v57;
    }
    ++v15;
    *(void *)(v16 + 16) = v20 + 1;
    *(void *)(v16 + 8 * v20 + 32) = v19;
  }
  while (v14 != v15);
  swift_bridgeObjectRelease();
  uint64_t v13 = v55;
LABEL_16:
  uint64_t v21 = v50;
  sub_1B29AEC7C((void *)(v13 + 16), *(void *)(v13 + 40));
  sub_1B2E250B8();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (!v1)
  {
    uint64_t v24 = swift_retain();
    uint64_t v25 = v49;
    uint64_t v48 = v3;
    uint64_t v45 = v23;
    do
    {
      sub_1B2E1E5A4(v24);
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v3, 1, v21) == 1) {
        break;
      }
      uint64_t v26 = *(int *)(v21 + 64);
      uint64_t v56 = v25 + v26;
      uint64_t v27 = *(void *)(v3 + 8);
      uint64_t v54 = *(void *)v3;
      uint64_t v29 = *(void *)(v3 + 16);
      uint64_t v28 = *(void *)(v3 + 24);
      uint64_t v30 = *(void *)(v3 + 32);
      char v31 = *(unsigned char *)(v3 + 40);
      uint64_t v32 = v3 + v26;
      uint64_t v33 = *(int *)(v21 + 80);
      uint64_t v34 = *(void *)(v3 + v33);
      *(void *)uint64_t v25 = v54;
      *(void *)(v25 + 8) = v27;
      *(void *)(v25 + 16) = v29;
      *(void *)(v25 + 24) = v28;
      *(void *)(v25 + 32) = v30;
      *(unsigned char *)(v25 + 40) = v31;
      sub_1B2E26DA0(v32, v25 + v26);
      *(void *)(v25 + v33) = v34;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1B2E26F00();
      uint64_t v52 = v28;
      uint64_t v35 = v47 + *(int *)(v21 + 64);
      uint64_t v53 = *(int *)(v21 + 80);
      *(void *)uint64_t v47 = v54;
      *(void *)(v47 + 8) = v27;
      *(void *)(v47 + 16) = v29;
      *(void *)(v47 + 24) = v28;
      *(void *)(v47 + 32) = v30;
      *(unsigned char *)(v47 + 40) = v31;
      uint64_t v36 = v35;
      sub_1B2AD2BAC(v56, v35, &qword_1EB7D8950);
      swift_release();
      *(void *)(v47 + v53) = v34;
      id v37 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v54);
      uint64_t v38 = sub_1B29C4148(v36, &qword_1EB7D8950);
      if (!v37) {
        goto LABEL_24;
      }
      type metadata accessor for GDVUEntityClass(v38);
      uint64_t v57 = v27;
      uint64_t v58 = v29;
      uint64_t v59 = v52;
      uint64_t v60 = v30;
      char v61 = v31;
      id v39 = sub_1B2E28A44((uint64_t)&v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v40 = v46(v37, v39, v56, v51);

      swift_bridgeObjectRelease();
      uint64_t v25 = v49;
      uint64_t v24 = sub_1B29C4148(v49, &qword_1E9C37E90);
      uint64_t v21 = v50;
      uint64_t v3 = v48;
      uint64_t v23 = v45;
    }
    while ((v40 & 1) != 0);
    uint64_t v41 = swift_release();
    uint64_t v42 = (*(void *(**)(uint64_t *__return_ptr, uint64_t))(v23 + 16))(&v57, v41);
    type metadata accessor for GDVUChangeBookmark((uint64_t)v42);
    uint64_t v43 = v57;
    unint64_t v44 = v58;
    v62[0] = v57;
    v62[1] = v58;
    sub_1B2E28AB4(v62);
    swift_release();
    sub_1B29C34DC(v43, v44);
  }
  sub_1B29998C8();
}

id sub_1B2E28A44(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  type metadata accessor for GDVUEntityClass(a1);
  v7[0] = v2;
  v7[1] = v1;
  v7[2] = v4;
  v7[3] = v3;
  char v8 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1B2E2C848((uint64_t)v7);
}

id sub_1B2E28AB4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  type metadata accessor for GDVUChangeBookmark((uint64_t)a1);
  *(void *)&long long v4 = v1;
  *((void *)&v4 + 1) = v2;
  sub_1B29F4F7C(v1, v2);
  return sub_1B2E2E108(&v4);
}

void GDVUVisualUnderstandingService.keyObservation(for:output:)(void *a1, uint64_t *a2)
{
  objc_msgSend(a1, sel_intValue);
  uint64_t v4 = sub_1B2E1D0D0();
  if (v2) {
    return;
  }
  if (v5)
  {
    uint64_t v4 = 0;
    goto LABEL_10;
  }
  if (v4)
  {
LABEL_10:
    *a2 = v4;
    return;
  }
  if (qword_1E9C38D20 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1B2E81FB8();
  sub_1B29A4B98(v6, (uint64_t)qword_1E9C45198);
  uint64_t v7 = sub_1B2E81F98();
  os_log_type_t v8 = sub_1B2E82DC8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    MEMORY[0x1B3EB30C0](v9, -1, -1);
  }

  *a2 = 0;
}

uint64_t GDVUVisualUnderstandingService.similarity(withBetween:and:output:)(void *a1, void *a2, double *a3)
{
  objc_msgSend(a1, sel_intValue);
  objc_msgSend(a2, sel_intValue);
  uint64_t result = sub_1B2E1D110();
  if (!v3)
  {
    double v8 = *(double *)&result;
    if (v7) {
      double v8 = NAN;
    }
    *a3 = v8;
  }
  return result;
}

void sub_1B2E28F34(void *a1, uint64_t a2, uint64_t (**a3)(void, void))
{
  id v8 = objc_msgSend(a1, sel_intValue);
  sub_1B2E1D17C();
  if (v3)
  {
LABEL_6:
    _Block_release(a3);
  }
  else
  {
    while (1)
    {
      swift_retain();
      sub_1B2E1EA04();
      swift_release();
      if (v9)
      {
LABEL_5:
        swift_release();
        goto LABEL_6;
      }
      id v5 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v8);
      if (!v5) {
        break;
      }
      uint64_t v6 = v5;
      char v7 = ((uint64_t (**)(void, id))a3)[2](a3, v5);

      if ((v7 & 1) == 0) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

void *GDVUVisualUnderstandingService.similarEntities(to:body:)(void *a1, uint64_t (*a2)())
{
  id v7 = objc_msgSend(a1, sel_intValue);
  uint64_t result = sub_1B2E1D17C();
  if (!v2)
  {
    while (1)
    {
      swift_retain();
      sub_1B2E1EA04();
      swift_release();
      if (v8) {
        return (void *)swift_release();
      }
      uint64_t result = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v7);
      if (!result) {
        break;
      }
      id v5 = result;
      char v6 = a2();

      if ((v6 & 1) == 0) {
        return (void *)swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

id sub_1B2E291F8(uint64_t a1, uint64_t a2, uint64_t (**a3)(void, void))
{
  uint64_t v5 = type metadata accessor for VisualUnderstandingService.EntityUpdate(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v46 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v46 - v8;
  uint64_t v10 = type metadata accessor for VisualUnderstandingService.MappingChange(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1B29A3EB4(&qword_1E9C381F0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1 + OBJC_IVAR___GDVUChangeBookmark_inner;
  uint64_t v17 = *(void *)(a1 + OBJC_IVAR___GDVUChangeBookmark_inner);
  unint64_t v18 = *(void *)(v16 + 8);
  uint64_t v49 = v17;
  uint64_t v50 = v18;
  sub_1B29F4F7C(v17, v18);
  id v19 = v53;
  sub_1B2E1D23C();
  uint64_t v21 = v20;
  id v22 = v19;
  sub_1B29C34DC(v17, v18);
  uint64_t v48 = v19;
  if (!v19)
  {
    uint64_t v23 = swift_retain();
    sub_1B2E1E5A4(v23);
    int v24 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v15, 1, v10);
    uint64_t v25 = (uint64_t)v46;
    if (v24 != 1)
    {
      uint64_t v53 = a3 + 2;
      uint64_t v47 = v15;
      do
      {
        sub_1B2E2FB58((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for VisualUnderstandingService.MappingChange);
        uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          sub_1B2E2FB58((uint64_t)v12, (uint64_t)v9, (void (*)(void))type metadata accessor for VisualUnderstandingService.EntityUpdate);
          sub_1B2E2F7B0((uint64_t)v9, v25, (void (*)(void))type metadata accessor for VisualUnderstandingService.EntityUpdate);
          id v27 = objc_allocWithZone((Class)GDVUEntityUpdate);
          id v28 = sub_1B2E2EA18(v25);
          int v29 = ((uint64_t (**)(void, id))a3)[2](a3, v28);

          uint64_t v30 = sub_1B2E2FBB8((uint64_t)v9, (void (*)(void))type metadata accessor for VisualUnderstandingService.EntityUpdate);
          if (!v29) {
            break;
          }
        }
        else
        {
          char v31 = *v12;
          uint64_t v32 = v10;
          uint64_t v33 = v21;
          uint64_t v34 = v9;
          uint64_t v35 = a3;
          uint64_t v36 = v25;
          uint64_t v37 = *((void *)v12 + 1);
          uint64_t v38 = *((void *)v12 + 2);
          type metadata accessor for GDVUObservationUpdate(EnumCaseMultiPayload);
          LOBYTE(v49) = v31;
          uint64_t v50 = v37;
          uint64_t v51 = v38;
          uint64_t v25 = v36;
          a3 = v35;
          char v9 = v34;
          uint64_t v21 = v33;
          uint64_t v10 = v32;
          uint64_t v15 = v47;
          id v39 = sub_1B2E2991C((uint64_t)&v49);
          LOBYTE(v37) = ((uint64_t (**)(void, id))a3)[2](a3, v39);

          if ((v37 & 1) == 0) {
            break;
          }
        }
        sub_1B2E1E5A4(v30);
      }
      while (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v15, 1, v10) != 1);
    }
    uint64_t v40 = swift_release();
    id v22 = *(id *)(v21 + 24);
    uint64_t v41 = v48;
    uint64_t v42 = (*(void *(**)(uint64_t *__return_ptr, uint64_t))(v21 + 16))(&v49, v40);
    if (v41)
    {
      swift_release();
    }
    else
    {
      type metadata accessor for GDVUChangeBookmark((uint64_t)v42);
      uint64_t v44 = v49;
      unint64_t v45 = v50;
      v52[0] = v49;
      v52[1] = v50;
      id v22 = sub_1B2E28AB4(v52);
      swift_release();
      sub_1B29C34DC(v44, v45);
    }
  }
  _Block_release(a3);
  return v22;
}

void GDVUVisualUnderstandingService.changes(since:body:)()
{
  sub_1B299F300();
  uint64_t v52 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for VisualUnderstandingService.EntityUpdate(0);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2E23E54();
  MEMORY[0x1F4188790](v9);
  uint64_t v51 = (char *)&v49 - v10;
  uint64_t v50 = type metadata accessor for VisualUnderstandingService.MappingChange(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v11);
  sub_1B299E4A0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_1B29A3EB4(&qword_1E9C381F0);
  uint64_t v16 = sub_1B299B0F0(v15);
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v58 = v18 - v17;
  uint64_t v19 = *(void *)(v6 + OBJC_IVAR___GDVUChangeBookmark_inner);
  unint64_t v20 = *(void *)(v6 + OBJC_IVAR___GDVUChangeBookmark_inner + 8);
  uint64_t v54 = v19;
  uint64_t v55 = v20;
  sub_1B29F4F7C(v19, v20);
  sub_1B2E1D23C();
  uint64_t v22 = v21;
  sub_1B29C34DC(v19, v20);
  if (!v0)
  {
    uint64_t v49 = 0;
    uint64_t v23 = swift_retain();
    uint64_t v24 = v58;
    sub_1B2E1E5A4(v23);
    uint64_t v25 = v50;
    int v26 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v58, 1, v50);
    uint64_t v28 = (uint64_t)v51;
    uint64_t v27 = v52;
    if (v26 != 1)
    {
      uint64_t v53 = v22;
      do
      {
        sub_1B2E2FB58(v24, v14, (void (*)(void))type metadata accessor for VisualUnderstandingService.MappingChange);
        uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          sub_1B2E2FB58(v14, v28, (void (*)(void))type metadata accessor for VisualUnderstandingService.EntityUpdate);
          sub_1B2E2F7B0(v28, v1, (void (*)(void))type metadata accessor for VisualUnderstandingService.EntityUpdate);
          id v30 = objc_allocWithZone((Class)GDVUEntityUpdate);
          id v31 = sub_1B2E2EA18(v1);
          char v32 = v4();

          uint64_t v24 = v58;
          uint64_t v33 = sub_1B2E2FBB8(v28, (void (*)(void))type metadata accessor for VisualUnderstandingService.EntityUpdate);
          if ((v32 & 1) == 0) {
            break;
          }
        }
        else
        {
          char v34 = *(unsigned char *)v14;
          uint64_t v35 = v25;
          uint64_t v36 = v28;
          uint64_t v37 = v1;
          uint64_t v38 = v4;
          uint64_t v39 = v27;
          uint64_t v40 = *(void *)(v14 + 8);
          uint64_t v41 = *(void *)(v14 + 16);
          type metadata accessor for GDVUObservationUpdate(EnumCaseMultiPayload);
          LOBYTE(v54) = v34;
          uint64_t v55 = v40;
          uint64_t v56 = v41;
          uint64_t v27 = v39;
          uint64_t v4 = v38;
          uint64_t v1 = v37;
          uint64_t v28 = v36;
          uint64_t v25 = v35;
          uint64_t v22 = v53;
          id v42 = sub_1B2E2991C((uint64_t)&v54);
          char v43 = v4();

          uint64_t v24 = v58;
          if ((v43 & 1) == 0) {
            break;
          }
        }
        sub_1B2E1E5A4(v33);
      }
      while (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v24, 1, v25) != 1);
    }
    uint64_t v44 = swift_release();
    uint64_t v45 = v49;
    uint64_t v46 = (*(void *(**)(uint64_t *__return_ptr, uint64_t))(v22 + 16))(&v54, v44);
    if (v45)
    {
      swift_release();
    }
    else
    {
      type metadata accessor for GDVUChangeBookmark((uint64_t)v46);
      uint64_t v47 = v54;
      unint64_t v48 = v55;
      v57[0] = v54;
      v57[1] = v55;
      sub_1B2E28AB4(v57);
      swift_release();
      sub_1B29C34DC(v47, v48);
    }
  }
  sub_1B29998C8();
}

id sub_1B2E2991C(uint64_t a1)
{
  char v1 = *(unsigned char *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  type metadata accessor for GDVUObservationUpdate(a1);
  v5[0] = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  return sub_1B2E2E788(v5);
}

id sub_1B2E29A40()
{
  uint64_t v4 = type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v5);
  sub_1B2999928();
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C45328);
  uint64_t v7 = sub_1B299B0F0(v6);
  MEMORY[0x1F4188790](v7);
  sub_1B2CCF154();
  MEMORY[0x1F4188790](v8);
  sub_1B2E2FE48();
  id v9 = (id)*sub_1B29AEC7C((void *)(*(void *)(v1 + OBJC_IVAR___GDVUVisualUnderstandingService_inner) + 16), *(void *)(*(void *)(v1 + OBJC_IVAR___GDVUVisualUnderstandingService_inner) + 40));
  sub_1B2E24EF0(v2);
  uint64_t v10 = sub_1B299EB30();
  sub_1B2AD2BAC(v10, v11, &qword_1E9C45328);
  sub_1B2E2FE74(v3);
  if (!v12)
  {
    uint64_t v13 = sub_1B2E2FB58(v3, (uint64_t)v0, (void (*)(void))type metadata accessor for VisualUnderstandingService.RecognitionResult);
    type metadata accessor for GDVURecognitionResult(v13);
    uint64_t v15 = *v0;
    id v9 = sub_1B2E27AC0(&v15, (uint64_t)v0 + *(int *)(v4 + 20), *(float *)((char *)v0 + *(int *)(v4 + 24)));
    sub_1B2E2FBB8((uint64_t)v0, (void (*)(void))type metadata accessor for VisualUnderstandingService.RecognitionResult);
  }
  sub_1B29C4148((uint64_t)v2, &qword_1E9C45328);
  return v9;
}

id sub_1B2E29BEC()
{
  uint64_t v4 = type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v5);
  sub_1B2999928();
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C45328);
  uint64_t v7 = sub_1B299B0F0(v6);
  MEMORY[0x1F4188790](v7);
  sub_1B2CCF154();
  MEMORY[0x1F4188790](v8);
  sub_1B2E2FE48();
  id v9 = (id)*sub_1B29AEC7C((void *)(*(void *)(v1 + OBJC_IVAR___GDVUVisualUnderstandingService_inner) + 16), *(void *)(*(void *)(v1 + OBJC_IVAR___GDVUVisualUnderstandingService_inner) + 40));
  sub_1B2E24EF0(v2);
  uint64_t v10 = sub_1B299EB30();
  sub_1B2AD2BAC(v10, v11, &qword_1E9C45328);
  sub_1B2E2FE74(v3);
  if (!v12)
  {
    uint64_t v13 = sub_1B2E2FB58(v3, (uint64_t)v0, (void (*)(void))type metadata accessor for VisualUnderstandingService.RecognitionResult);
    type metadata accessor for GDVURecognitionResult(v13);
    uint64_t v15 = *v0;
    id v9 = sub_1B2E27AC0(&v15, (uint64_t)v0 + *(int *)(v4 + 20), *(float *)((char *)v0 + *(int *)(v4 + 24)));
    sub_1B2E2FBB8((uint64_t)v0, (void (*)(void))type metadata accessor for VisualUnderstandingService.RecognitionResult);
  }
  sub_1B29C4148((uint64_t)v2, &qword_1E9C45328);
  return v9;
}

void GDVUVisualUnderstandingService.init()()
{
}

uint64_t GDVUGallery.version.getter()
{
  return sub_1B2E81E38();
}

uint64_t GDVUGallery.ready.getter()
{
  return sub_1B2E81D78() & 1;
}

uint64_t GDVUGallery.faceprintRevision.getter()
{
  return sub_1B2E81C98();
}

uint64_t GDVUGallery.torsoprintRevision.getter()
{
  return sub_1B2E81CB8();
}

uint64_t GDVUGallery.animalprintRevision.getter()
{
  return sub_1B2E81CE8();
}

uint64_t GDVUGallery.observationsCount.getter()
{
  return sub_1B2E81CA8();
}

uint64_t GDVUGallery.primaryCount.getter()
{
  return sub_1B2E81B58();
}

uint64_t GDVUGallery.secondaryCount.getter()
{
  return sub_1B2E81BF8();
}

uint64_t GDVUGallery.personObservationsCount.getter()
{
  return sub_1B2E81D38();
}

uint64_t GDVUGallery.animalObservationsCount.getter()
{
  return sub_1B2E81D28();
}

uint64_t GDVUGallery.tagsCount.getter()
{
  return sub_1B2E81E98();
}

uint64_t GDVUGallery.entityCount.getter()
{
  return sub_1B2E81B48();
}

uint64_t GDVUGallery.personEntitiesCount.getter()
{
  return sub_1B2E81D08();
}

uint64_t GDVUGallery.animalEntitiesCount.getter()
{
  return sub_1B2E81CD8();
}

uint64_t GDVUGallery.observationsCountPerEntity.getter()
{
  uint64_t v0 = sub_1B2E81D58();
  sub_1B2E270A4(v0);
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  return sub_1B2E2A440(v2);
}

uint64_t sub_1B2E2A440(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B29A3EB4(&qword_1E9C3DE70);
    uint64_t v3 = sub_1B2E83498();
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC868];
  }
  uint64_t v6 = v3;
  sub_1B2E2FC74(a1, 1, &v6);
  uint64_t v4 = v6;
  if (v1) {
    swift_release();
  }
  return v4;
}

uint64_t GDVUGallery.assets.getter()
{
  return sub_1B2E81DC8();
}

uint64_t GDVUGallery.unassignedObservations.getter()
{
  return sub_1B2E81D18();
}

uint64_t GDVUGallery.mutate(handler:)()
{
  return sub_1B2E81DD8();
}

void sub_1B2E2A5F8(uint64_t a1, uint64_t (*a2)(void))
{
  type metadata accessor for GDVUGalleryTransaction(a1);
  id v4 = sub_1B2E2A670(a1, (Class *)off_1E60129B0, &OBJC_IVAR___GDVUGalleryTransaction_inner);
  uint64_t v5 = a2();

  if (v5) {
    swift_willThrow();
  }
}

id sub_1B2E2A670(uint64_t a1, Class *a2, void *a3)
{
  uint64_t v6 = (char *)objc_allocWithZone(*a2);
  *(void *)&v6[*a3] = a1;
  uint64_t v7 = *a2;
  v9.receiver = v6;
  v9.super_class = v7;
  swift_retain();
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_1B2E2A78C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);

  return v2;
}

uint64_t GDVUGallery.clusters(for:)()
{
  uint64_t v1 = sub_1B2E81AF8();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1B29A2B5C();
  sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7E62E8);
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_person);
  char v7 = sub_1B2E82F08();

  if ((v7 & 1) != 0
    || (id v8 = objc_msgSend(v5, sel_animal),
        sub_1B2E2FED4(),
        char v9 = sub_1B2E82F08(),
        v8,
        (v9 & 1) != 0))
  {
    sub_1B2E2FEF4();
    v10();
    uint64_t v11 = sub_1B2E81E58();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    return v11;
  }
  else
  {
    sub_1B29A3EB4(&qword_1E9C37CF0);
    return sub_1B2E82148();
  }
}

Swift::Void __swiftcall GDVUGallery.updateSocialGroups(with:)(Swift::OpaquePointer with)
{
  uint64_t v3 = sub_1B2E81B38();
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B29A0480();
  if ((unint64_t)with._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B2E83448();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)(((unint64_t)with._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v7)
  {
LABEL_12:
    sub_1B2E81CC8();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
  sub_1B29C19CC();
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = 0;
    unint64_t v15 = (unint64_t)with._rawValue & 0xC000000000000001;
    rawValue = with._rawValue;
    do
    {
      if (v15) {
        id v9 = (id)MEMORY[0x1B3EB1A20](v8, with._rawValue);
      }
      else {
        id v9 = *((id *)with._rawValue + v8 + 4);
      }
      uint64_t v10 = v9;
      sub_1B299FD78();
      uint64_t v13 = v12 + *(void *)(v11 + 88);
      sub_1B299D804();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v13, v3);

      unint64_t v14 = *(void *)(v17 + 16);
      if (v14 >= *(void *)(v17 + 24) >> 1) {
        sub_1B29C19CC();
      }
      ++v8;
      *(void *)(v17 + 16) = v14 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v14, v1, v3);
      with._rawValue = rawValue;
    }
    while (v7 != v8);
    goto LABEL_12;
  }
  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> GDVUGallery.reset()()
{
}

uint64_t GDVUGallery.reset(with:)()
{
  uint64_t v1 = sub_1B2E81E78();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1B2E2FE58();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1B2E2FEE0();
  sub_1B2E2FEF4();
  v8();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v7, v0, v1);
  sub_1B2E81D88();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v7, v1);
}

uint64_t GDVUGallery.update(progressHandler:)(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
  }
  uint64_t v5 = sub_1B299EB30();
  sub_1B2C79A44(v5);
  sub_1B29998FC();
  sub_1B2E81DE8();
  uint64_t v6 = sub_1B29998FC();
  return sub_1B2AF182C(v6);
}

uint64_t sub_1B2E2AEE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = sub_1B2E81BD8();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  id v8 = objc_allocWithZone((Class)GDVUProgressStatus);
  id v9 = sub_1B2E2B4EC((uint64_t)v6);
  char v10 = a2();

  return v10 & 1;
}

Swift::Void __swiftcall GDVUGallery.updateInferredDeviceOwner()()
{
}

uint64_t GDVUGallery.keyObservations(for:limit:offset:)(uint64_t a1)
{
  uint64_t v1 = sub_1B2E81C08();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    if (qword_1E9C38D20 != -1) {
LABEL_16:
    }
      swift_once();
    uint64_t v3 = 0;
    uint64_t v4 = MEMORY[0x1E4FBC860];
    uint64_t v5 = (float *)(v1 + 40);
    do
    {
      uint64_t v6 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_16;
      }
      uint64_t v7 = *((void *)v5 - 1);
      float v8 = *v5;
      uint64_t v9 = sub_1B2E81FB8();
      sub_1B29A4B98(v9, (uint64_t)qword_1E9C45198);
      char v10 = sub_1B2E81F98();
      os_log_type_t v11 = sub_1B2E82DA8();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 134218496;
        *(void *)(v12 + 4) = a1;
        *(_WORD *)(v12 + 12) = 2048;
        *(void *)(v12 + 14) = v7;
        *(_WORD *)(v12 + 22) = 2048;
        *(double *)(v12 + 24) = v8;
        _os_log_impl(&dword_1B2996000, v10, v11, "keyObservation for entity %ld : %ld (%f", (uint8_t *)v12, 0x20u);
        MEMORY[0x1B3EB30C0](v12, -1, -1);
      }

      sub_1B29A3EB4(&qword_1E9C451D8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
      *(void *)(inited + 32) = v7;
      *(float *)(inited + 40) = v8;
      uint64_t v1 = sub_1B2E82148();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29BA1CC();
        uint64_t v4 = v15;
      }
      unint64_t v14 = *(void *)(v4 + 16);
      if (v14 >= *(void *)(v4 + 24) >> 1)
      {
        sub_1B29BA1CC();
        uint64_t v4 = v16;
      }
      v5 += 4;
      *(void *)(v4 + 16) = v14 + 1;
      *(void *)(v4 + 8 * v14 + 32) = v1;
      ++v3;
    }
    while (v6 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v4;
}

Swift::Void __swiftcall GDVUGallery.reportMetrics()()
{
}

void GDVUGallery.init()()
{
}

id sub_1B2E2B4EC(uint64_t a1)
{
  uint64_t v3 = sub_1B2E81BD8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_1B29A3EB4(&qword_1E9C383E0);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v7 + *(void *)(*(void *)v7 + 88), v6, v3);
  *(void *)&v1[OBJC_IVAR___GDVUProgressStatus_inner] = v7;
  v10.receiver = v1;
  v10.super_class = (Class)GDVUProgressStatus;
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

float GDVUProgressStatus.fractionCompleted.getter()
{
  uint64_t v1 = sub_1B2E81BD8();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1B29A2B5C();
  sub_1B299D804();
  uint64_t v5 = sub_1B299BE20();
  v6(v5);
  swift_retain();
  sub_1B2E81BC8();
  float v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  swift_release();
  return v8;
}

void GDVUProgressStatus.init()()
{
}

void __swiftcall GDVUSocialGroup.init(numberOfMomentNodes:tags:)(GDVUSocialGroup *__return_ptr retstr, NSNumber_optional numberOfMomentNodes, Swift::OpaquePointer tags)
{
  Class isa = numberOfMomentNodes.value.super.super.isa;
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1B2E806B8();
  uint64_t v5 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_initWithNumberOfMomentNodes_tags_, isa, v5);
}

id GDVUSocialGroup.init(numberOfMomentNodes:tags:)(void *a1)
{
  uint64_t v4 = sub_1B2E81B38();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  float v8 = v1;
  if (a1) {
    objc_msgSend(a1, sel_integerValue);
  }
  sub_1B2E81B18();
  sub_1B29A3EB4(&qword_1E9C451E8);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v9 + *(void *)(*(void *)v9 + 88), v2, v4);
  *(void *)&v8[OBJC_IVAR___GDVUSocialGroup_inner] = v9;

  v12.receiver = v8;
  v12.super_class = (Class)GDVUSocialGroup;
  id v10 = objc_msgSendSuper2(&v12, sel_init);

  return v10;
}

id sub_1B2E2BA2C()
{
  uint64_t v1 = sub_1B2E81B38();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1B29A0498();
  sub_1B299FD78();
  uint64_t v7 = v6 + *(void *)(v5 + 88);
  sub_1B299D804();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v7, v1);
  uint64_t v8 = sub_1B2E81B08();
  char v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  id result = 0;
  if ((v10 & 1) == 0) {
    return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v8);
  }
  return result;
}

id sub_1B2E2BB50(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  sub_1B2E806B8();
  uint64_t v5 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1B2E2BBBC()
{
  uint64_t v1 = sub_1B2E81B38();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1B29A2B5C();
  sub_1B299FD78();
  sub_1B299D804();
  uint64_t v5 = sub_1B299BE20();
  v6(v5);
  uint64_t v7 = sub_1B2E81B28();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return v7;
}

void GDVUSocialGroup.init()()
{
}

id sub_1B2E2BCD0()
{
  uint64_t v1 = type metadata accessor for VisualUnderstandingService.Context(0);
  uint64_t v2 = v1 - 8;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B2E806B8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 1, 1, v5);
  uint64_t v6 = (uint64_t)&v4[*(int *)(v2 + 28)];
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v6, 1, 1, v5);
  uint64_t v7 = *(int *)(v2 + 32);
  v4[v7] = 3;
  uint64_t v8 = v0;
  sub_1B29C4148((uint64_t)v4, &qword_1EB7D8950);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 1, 1, v5);
  sub_1B29C4148(v6, &qword_1EB7D8950);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v6, 1, 1, v5);
  v4[v7] = 3;
  sub_1B29A3EB4(&qword_1E9C383E8);
  uint64_t v9 = swift_allocObject();
  sub_1B2E2FB58((uint64_t)v4, v9 + *(void *)(*(void *)v9 + 88), (void (*)(void))type metadata accessor for VisualUnderstandingService.Context);
  *(void *)&v8[OBJC_IVAR___GDVUContext_inner] = v9;

  v11.receiver = v8;
  v11.super_class = (Class)GDVUContext;
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t GDVUContext.moment.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1B299D804();
  sub_1B299FD78();
  uint64_t v4 = v3 + *(void *)(v2 + 88);
  sub_1B299D804();
  return sub_1B2AD2BAC(v4, a1, &qword_1EB7D8950);
}

uint64_t GDVUContext.moment.setter(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for VisualUnderstandingService.Context(0);
  uint64_t v5 = sub_1B299B0F0(v4);
  MEMORY[0x1F4188790](v5);
  sub_1B29A0480();
  uint64_t v6 = sub_1B29A3EB4(&qword_1EB7D8950);
  uint64_t v7 = sub_1B299B0F0(v6);
  MEMORY[0x1F4188790](v7);
  sub_1B2CCF154();
  MEMORY[0x1F4188790](v8);
  sub_1B2E2FE48();
  sub_1B2AD2BAC(a1, v1, &qword_1EB7D8950);
  sub_1B2E2FE98();
  uint64_t v9 = sub_1B299EB30();
  sub_1B2AD2BAC(v9, v10, &qword_1EB7D8950);
  sub_1B299FD78();
  sub_1B299D804();
  uint64_t v11 = sub_1B29998FC();
  sub_1B2E2F7B0(v11, v12, v13);
  sub_1B29C4148(v2, &qword_1EB7D8950);
  uint64_t v14 = sub_1B2E2FED4();
  sub_1B2E26DA0(v14, v15);
  sub_1B2E2F604(v2);
  sub_1B29C4148(v1, &qword_1EB7D8950);
  swift_endAccess();
  return sub_1B29C4148(a1, &qword_1EB7D8950);
}

uint64_t GDVUContext.asset.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1B299D804();
  sub_1B299FD78();
  uint64_t v4 = v3 + *(void *)(v2 + 88);
  sub_1B299D804();
  uint64_t v5 = type metadata accessor for VisualUnderstandingService.Context(0);
  return sub_1B2AD2BAC(v4 + *(int *)(v5 + 20), a1, &qword_1EB7D8950);
}

void sub_1B2E2C14C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v8 = sub_1B29A3EB4(&qword_1EB7D8950);
  uint64_t v9 = sub_1B299B0F0(v8);
  MEMORY[0x1F4188790](v9);
  sub_1B29A2B5C();
  if (a3)
  {
    sub_1B2E80698();
    uint64_t v10 = sub_1B2E806B8();
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = sub_1B2E806B8();
    uint64_t v11 = 1;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v4, v11, 1, v10);
  id v12 = a1;
  a4(v4);
}

uint64_t GDVUContext.asset.setter(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for VisualUnderstandingService.Context(0);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  sub_1B299B3C8();
  uint64_t v6 = sub_1B29A3EB4(&qword_1EB7D8950);
  uint64_t v7 = sub_1B299B0F0(v6);
  MEMORY[0x1F4188790](v7);
  sub_1B2E23E54();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v18[-v9];
  sub_1B2AD2BAC(a1, (uint64_t)&v18[-v9], &qword_1EB7D8950);
  sub_1B2E2FE98();
  uint64_t v11 = sub_1B2E2FED4();
  sub_1B2AD2BAC(v11, v12, &qword_1EB7D8950);
  sub_1B299FD78();
  uint64_t v15 = v14 + *(void *)(v13 + 88);
  sub_1B299D804();
  sub_1B2E2F7B0(v15, v2, (void (*)(void))type metadata accessor for VisualUnderstandingService.Context);
  uint64_t v16 = v2 + *(int *)(v5 + 28);
  sub_1B29C4148(v16, &qword_1EB7D8950);
  sub_1B2E26DA0(v1, v16);
  sub_1B2E2F604(v2);
  sub_1B29C4148((uint64_t)v10, &qword_1EB7D8950);
  swift_endAccess();
  return sub_1B29C4148(a1, &qword_1EB7D8950);
}

uint64_t sub_1B2E2C38C@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1B2E80698();

    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 1;
  }
  uint64_t v7 = sub_1B2E806B8();

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a3, v6, 1, v7);
}

void sub_1B2E2C408(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8 = sub_1B29A3EB4(&qword_1EB7D8950);
  uint64_t v9 = sub_1B299B0F0(v8);
  MEMORY[0x1F4188790](v9);
  sub_1B299E4A0();
  uint64_t v12 = v11 - v10;
  sub_1B2AD2BAC(a1, v11 - v10, &qword_1EB7D8950);
  uint64_t v13 = *a2;
  uint64_t v14 = sub_1B2E806B8();
  uint64_t v15 = 0;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v12, 1, v14) != 1)
  {
    uint64_t v15 = (void *)sub_1B2E80688();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
  }
  objc_msgSend(v13, *a5, v15);
}

uint64_t GDVUContext.source.getter()
{
  sub_1B299D804();
  sub_1B299FD78();
  uint64_t v2 = v1 + *(void *)(v0 + 88);
  sub_1B299D804();
  return qword_1B2EF96D8[*(char *)(v2 + *(int *)(type metadata accessor for VisualUnderstandingService.Context(0) + 24))];
}

uint64_t GDVUContext.source.setter(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for VisualUnderstandingService.Context(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  sub_1B29A0498();
  if (a1 >= 4) {
    char v5 = 2;
  }
  else {
    char v5 = 0x2010003u >> (8 * a1);
  }
  swift_beginAccess();
  sub_1B299FD78();
  uint64_t v8 = v7 + *(void *)(v6 + 88);
  sub_1B299D804();
  sub_1B2E2F7B0(v8, v1, (void (*)(void))type metadata accessor for VisualUnderstandingService.Context);
  *(unsigned char *)(v1 + *(int *)(v4 + 32)) = v5;
  sub_1B2E2F604(v1);
  return swift_endAccess();
}

uint64_t GDVUEntityClass.id.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___GDVUEntityClass_inner);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1B2E2C780(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v3 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t GDVUEntityClass.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___GDVUEntityClass_inner + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GDVUEntityClass.intValue.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___GDVUEntityClass_inner + 32);
}

id sub_1B2E2C848(uint64_t a1)
{
  uint64_t v2 = (char *)objc_allocWithZone((Class)GDVUEntityClass);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = &v2[OBJC_IVAR___GDVUEntityClass_inner];
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a1;
  *((void *)v6 + 2) = v3;
  *((void *)v6 + 3) = v4;
  v6[32] = v5;
  v8.receiver = v2;
  v8.super_class = (Class)GDVUEntityClass;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t GDVUEntityClass.isEqual(_:)(uint64_t a1)
{
  sub_1B2AD2BAC(a1, (uint64_t)&v7, (uint64_t *)&unk_1EB7E6270);
  if (!v8)
  {
    sub_1B29C4148((uint64_t)&v7, (uint64_t *)&unk_1EB7E6270);
LABEL_10:
    char v4 = 0;
    return v4 & 1;
  }
  sub_1B29E4FEC(&v7, v9);
  uint64_t v2 = sub_1B29C3B28((uint64_t)v9, (uint64_t)&v7);
  type metadata accessor for GDVUEntityClass(v2);
  if ((swift_dynamicCast() & 1) == 0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v9);
    goto LABEL_10;
  }
  if (*(void *)(v1 + OBJC_IVAR___GDVUEntityClass_inner + 16) == *(void *)&v6[OBJC_IVAR___GDVUEntityClass_inner + 16]
    && *(void *)(v1 + OBJC_IVAR___GDVUEntityClass_inner + 24) == *(void *)&v6[OBJC_IVAR___GDVUEntityClass_inner + 24])
  {
    char v4 = 1;
  }
  else
  {
    char v4 = sub_1B2E837A8();
  }

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v9);
  return v4 & 1;
}

id GDVUEntityClass.hash.getter()
{
  return objc_msgSend(v0, sel_hash);
}

id static GDVUEntityClass.person()()
{
  return sub_1B2E2CA60((void (*)(long long *__return_ptr))static EntityClass.person.getter);
}

id static GDVUEntityClass.animal()()
{
  return sub_1B2E2CA60((void (*)(long long *__return_ptr))static EntityClass.animal.getter);
}

id sub_1B2E2CA60(void (*a1)(long long *__return_ptr))
{
  type metadata accessor for GDVUEntityClass((uint64_t)a1);
  a1(&v7);
  long long v3 = v7;
  uint64_t v4 = v8;
  uint64_t v5 = v9;
  char v6 = v10;
  return sub_1B2E2C848((uint64_t)&v3);
}

id static GDVUEntityClass.entity()()
{
  return sub_1B2E2CA60((void (*)(long long *__return_ptr))static EntityClass.entity.getter);
}

void GDVUEntityClass.init()()
{
}

void GDVUGalleryTransaction.add(with:context:priority:at:output:)()
{
  sub_1B299F300();
  uint64_t v37 = v3;
  uint64_t v38 = v2;
  uint64_t v5 = v4;
  uint64_t v39 = v6;
  uint64_t v7 = sub_1B2E81A18();
  sub_1B299D278();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1B299B860();
  uint64_t v13 = v11 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = type metadata accessor for VisualUnderstandingService.Context(0);
  uint64_t v18 = sub_1B299B0F0(v17);
  MEMORY[0x1F4188790](v18);
  sub_1B29A0480();
  uint64_t v19 = sub_1B29A3EB4((uint64_t *)&unk_1E9C371E8);
  uint64_t v20 = sub_1B299B0F0(v19);
  MEMORY[0x1F4188790](v20);
  sub_1B299E4A0();
  uint64_t v23 = v22 - v21;
  if (v5)
  {
    sub_1B299D804();
    sub_1B299FD78();
    sub_1B299D804();
    uint64_t v24 = sub_1B2E2FED4();
    sub_1B2E2F7B0(v24, v25, v26);
    VUGallery.Context.init(_:)(v1);
    uint64_t v27 = sub_1B2E81E18();
    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v27 = sub_1B2E81E18();
    uint64_t v28 = 1;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v23, v28, 1, v27);
  sub_1B2E2FEE0();
  sub_1B2E2FEF4();
  v29();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v16, v13, v7);
  uint64_t v30 = sub_1B2E819D8();
  if (v0)
  {
    uint64_t v31 = sub_1B2E2FEBC();
    v32(v31);
    sub_1B29C4148(v23, (uint64_t *)&unk_1E9C371E8);
  }
  else
  {
    uint64_t v33 = v30;
    uint64_t v34 = sub_1B2E2FEBC();
    v35(v34);
    sub_1B29C4148(v23, (uint64_t *)&unk_1E9C371E8);
    *uint64_t v37 = v33;
  }
  sub_1B29998C8();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> GDVUGalleryTransaction.remove(_:)(Swift::Int a1)
{
}

uint64_t sub_1B2E2CF3C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  id v7 = a1;
  a5(a3);

  return 1;
}

uint64_t GDVUGalleryTransaction.remove(withAsset:)()
{
  return sub_1B2E819F8();
}

void GDVUGalleryTransaction.tag(_:with:type:)(uint64_t a1)
{
  uint64_t v3 = sub_1B2E81A08();
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299ADB4();
  if (a1)
  {
    sub_1B2E2FEF4();
    v11();
    sub_1B2E819E8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  }
  else
  {
    if (qword_1E9C38D20 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1B2E81FB8();
    sub_1B29A4B98(v7, (uint64_t)qword_1E9C45198);
    uint64_t v8 = sub_1B2E81F98();
    os_log_type_t v9 = sub_1B2E82DC8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1B2996000, v8, v9, "GDVUGalleryTransaction.tag: Observation ID should never be zero.", v10, 2u);
      MEMORY[0x1B3EB30C0](v10, -1, -1);
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> GDVUGalleryTransaction.untag(_:)(Swift::Int a1)
{
}

void sub_1B2E2D4A4(uint64_t a1, void (*a2)(void), const char *a3)
{
  if (a1)
  {
    a2();
  }
  else
  {
    if (qword_1E9C38D20 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1B2E81FB8();
    sub_1B29A4B98(v4, (uint64_t)qword_1E9C45198);
    uint64_t v5 = sub_1B2E81F98();
    os_log_type_t v6 = sub_1B2E82DC8();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1B2996000, v5, v6, a3, v7, 2u);
      MEMORY[0x1B3EB30C0](v7, -1, -1);
    }
  }
}

void GDVUGalleryTransaction.init()()
{
}

uint64_t sub_1B2E2D60C()
{
  uint64_t v0 = sub_1B2E81FB8();
  sub_1B2A4A2A8(v0, qword_1E9C45198);
  sub_1B29A4B98(v0, (uint64_t)qword_1E9C45198);
  return sub_1B2E81FA8();
}

char *sub_1B2E2D698(void *a1)
{
  type metadata accessor for VisualUnderstandingStreamingGallery();
  swift_allocObject();
  uint64_t v4 = v1;
  uint64_t v5 = VisualUnderstandingStreamingGallery.init()();
  if (v2)
  {

    type metadata accessor for GDVUStreamingGallery(v6);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)&v4[OBJC_IVAR___GDVUStreamingGallery_inner] = v5;

    v8.receiver = v4;
    v8.super_class = (Class)GDVUStreamingGallery;
    uint64_t v4 = (char *)objc_msgSendSuper2(&v8, sel_init);
  }
  return v4;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> GDVUStreamingGallery.reset()()
{
}

uint64_t sub_1B2E2D82C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  id v5 = a1;
  a4();

  return 1;
}

void *GDVUStreamingGallery.update(withMaxKeyFacesPerCluster:)(uint64_t a1)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = (void *)sub_1B2E82828();
  v10[0] = 0;
  id v4 = objc_msgSend(v1, sel_updateWithMaxKeyFacesPerCluster_sortBy_error_, a1, v3, v10);

  id v6 = v10[0];
  if (v4)
  {
    type metadata accessor for GDVUClusterResult(v5);
    uint64_t v3 = (void *)sub_1B2E82838();
    id v7 = v6;
  }
  else
  {
    id v8 = v10[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v3;
}

id GDVUStreamingGallery.update(withMaxKeyFacesPerCluster:sortBy:)()
{
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___GDVUStreamingGallery_inner);
  sub_1B2E1E2D0();
  if (v1) {
    return (id)v2;
  }
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return (id)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1B2E832F8();
  id v6 = (char *)(v4 + 48);
  while (1)
  {
    uint64_t v7 = *((void *)v6 - 2);
    char v8 = *v6;
    id result = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *((void *)v6 - 1));
    if (!result) {
      break;
    }
    uint64_t v10 = (uint64_t)result;
    v6 += 24;
    id v11 = objc_allocWithZone((Class)GDVUClusterResult);
    sub_1B2E2DFB0(v7, v10, v8);
    sub_1B2E832C8();
    sub_1B2E83308();
    sub_1B29998FC();
    sub_1B2E83318();
    sub_1B2E832D8();
    if (!--v5)
    {
      uint64_t v2 = v12;
      swift_bridgeObjectRelease();
      return (id)v2;
    }
  }
  __break(1u);
  return result;
}

uint64_t GDVUStreamingGallery.add(with:observationIdentifiers:trackIdentifiers:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C45118);
  uint64_t v7 = sub_1B299B0F0(v6);
  MEMORY[0x1F4188790](v7);
  sub_1B29A0480();
  if (a4)
  {
    sub_1B299D804();
    sub_1B299FD78();
    uint64_t v10 = v9 + *(void *)(v8 + 88);
    sub_1B299D804();
    sub_1B2E2F7B0(v10, v4, (void (*)(void))type metadata accessor for VisualUnderstandingService.Context);
    uint64_t v11 = type metadata accessor for VisualUnderstandingService.Context(0);
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v11 = type metadata accessor for VisualUnderstandingService.Context(0);
    uint64_t v12 = 1;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v4, v12, 1, v11);
  sub_1B2E1DC24();
  uint64_t v14 = v13;
  sub_1B29C4148(v4, &qword_1E9C45118);
  return v14;
}

void GDVUStreamingGallery.init()()
{
}

id sub_1B2E2DFB0(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v3 + OBJC_IVAR___GDVUClusterResult_observationIdentifier) = a1;
  *(void *)(v3 + OBJC_IVAR___GDVUClusterResult_entityIdentifier) = a2;
  *(unsigned char *)(v3 + OBJC_IVAR___GDVUClusterResult_isKeyFace) = a3;
  v5.super_class = (Class)GDVUClusterResult;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t GDVUClusterResult.observationIdentifier.getter()
{
  return *(void *)(v0 + OBJC_IVAR___GDVUClusterResult_observationIdentifier);
}

id GDVUClusterResult.entityIdentifier.getter()
{
  return *(id *)(v0 + OBJC_IVAR___GDVUClusterResult_entityIdentifier);
}

uint64_t GDVUClusterResult.isKeyFace.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___GDVUClusterResult_isKeyFace);
}

void GDVUClusterResult.init()()
{
}

id sub_1B2E2E108(_OWORD *a1)
{
  uint64_t v2 = (char *)objc_allocWithZone((Class)GDVUChangeBookmark);
  *(_OWORD *)&v2[OBJC_IVAR___GDVUChangeBookmark_inner] = *a1;
  v4.receiver = v2;
  v4.super_class = (Class)GDVUChangeBookmark;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t GDVUChangeBookmark.encodeToData()()
{
  sub_1B2E7FFF8();
  swift_allocObject();
  sub_1B2E7FFE8();
  uint64_t v0 = sub_1B299EB30();
  sub_1B29F4F7C(v0, v1);
  sub_1B2E2F818();
  uint64_t v2 = sub_1B2E7FFD8();
  uint64_t v3 = sub_1B299EB30();
  sub_1B29C34DC(v3, v4);
  swift_release();
  return v2;
}

uint64_t static GDVUChangeBookmark.decode(from:)()
{
  sub_1B2E7FF98();
  swift_allocObject();
  uint64_t v1 = sub_1B2E7FF88();
  sub_1B2E2F864();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B2E7FF78();
  if (v0)
  {
    swift_release();
  }
  else
  {
    uint64_t v2 = type metadata accessor for GDVUChangeBookmark(v3);
    sub_1B2E2E108(&v5);
    sub_1B2AE7134();
    swift_release();
  }
  return v2;
}

uint64_t GDVUChangeBookmark.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1B2AD2BAC(a1, (uint64_t)&v5, (uint64_t *)&unk_1EB7E6270);
  if (!v6)
  {
    sub_1B29C4148((uint64_t)&v5, (uint64_t *)&unk_1EB7E6270);
LABEL_6:
    char v2 = 0;
    return v2 & 1;
  }
  sub_1B29E4FEC(&v5, v7);
  sub_1B29C3B28((uint64_t)v7, (uint64_t)&v5);
  if ((swift_dynamicCast() & 1) == 0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v7);
    goto LABEL_6;
  }
  sub_1B29C3CA0(0, (unint64_t *)&qword_1EB7E62E8);
  char v2 = sub_1B2E82F08();

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v7);
  return v2 & 1;
}

uint64_t sub_1B2E2E598(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    sub_1B2E83058();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    id v7 = a1;
  }
  char v8 = a4(v10);

  sub_1B29C4148((uint64_t)v10, (uint64_t *)&unk_1EB7E6270);
  return v8 & 1;
}

char *GDVUChangeBookmark.hash.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___GDVUChangeBookmark_inner);
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR___GDVUChangeBookmark_inner + 8);
  sub_1B2E83988();
  sub_1B29F4F7C(v1, v2);
  sub_1B2E80598();
  sub_1B2E839E8();
  uint64_t v3 = sub_1B2AE7134();
  sub_1B29C34DC(v3, v2);
  return &v5;
}

void GDVUChangeBookmark.init()()
{
}

id GDVUUpdate.init()()
{
  v1.super_class = (Class)GDVUUpdate;
  return objc_msgSendSuper2(&v1, sel_init);
}

id sub_1B2E2E788(char *a1)
{
  unint64_t v2 = (char *)objc_allocWithZone((Class)GDVUObservationUpdate);
  uint64_t v3 = &v2[OBJC_IVAR___GDVUObservationUpdate_inner];
  *uint64_t v3 = *a1;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a1 + 8);
  v5.receiver = v2;
  v5.super_class = (Class)GDVUObservationUpdate;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t GDVUObservationUpdate.updateType.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___GDVUObservationUpdate_inner);
}

uint64_t GDVUObservationUpdate.observationIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___GDVUObservationUpdate_inner + 8);
  if (!v1)
  {
    if (qword_1E9C38D20 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1B2E81FB8();
    sub_1B29A4B98(v2, (uint64_t)qword_1E9C45198);
    uint64_t v3 = sub_1B2E81F98();
    os_log_type_t v4 = sub_1B2E82DC8();
    if (os_log_type_enabled(v3, v4))
    {
      objc_super v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)objc_super v5 = 0;
      _os_log_impl(&dword_1B2996000, v3, v4, "GDVUObservationUpdate.observationIdentifier: Observation ID should never be zero. This is an error in VU.", v5, 2u);
      MEMORY[0x1B3EB30C0](v5, -1, -1);
    }
  }
  return v1;
}

id GDVUObservationUpdate.entityIdentifier.getter()
{
  id result = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *(void *)(v0 + OBJC_IVAR___GDVUObservationUpdate_inner + 16));
  if (!result) {
    __break(1u);
  }
  return result;
}

void GDVUObservationUpdate.init()()
{
}

id sub_1B2E2EA18(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for VisualUnderstandingService.EntityUpdate(0);
  MEMORY[0x1F4188790](v3 - 8);
  objc_super v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E2F7B0(a1, (uint64_t)v5, (void (*)(void))type metadata accessor for VisualUnderstandingService.EntityUpdate);
  sub_1B29A3EB4(&qword_1E9C45338);
  uint64_t v6 = swift_allocObject();
  sub_1B2E2FB58((uint64_t)v5, v6 + *(void *)(*(void *)v6 + 88), (void (*)(void))type metadata accessor for VisualUnderstandingService.EntityUpdate);
  *(void *)&v1[OBJC_IVAR___GDVUEntityUpdate_inner] = v6;
  v9.receiver = v1;
  v9.super_class = (Class)GDVUEntityUpdate;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  sub_1B2E2FBB8(a1, (void (*)(void))type metadata accessor for VisualUnderstandingService.EntityUpdate);
  return v7;
}

uint64_t GDVUEntityUpdate.updateType.getter()
{
  sub_1B299FD78();
  uint64_t v2 = (unsigned __int8 *)(v1 + *(void *)(v0 + 88));
  sub_1B299D804();
  return *v2;
}

id GDVUEntityUpdate.entityIdentifier.getter()
{
  sub_1B299FD78();
  uint64_t v2 = v1 + *(void *)(v0 + 88);
  sub_1B299D804();
  id result = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *(void *)(v2 + 8));
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t GDVUEntityUpdate.tag.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1B299FD78();
  uint64_t v4 = v3 + *(void *)(v2 + 88);
  sub_1B299D804();
  uint64_t v5 = type metadata accessor for VisualUnderstandingService.EntityUpdate(0);
  return sub_1B2AD2BAC(v4 + *(int *)(v5 + 24), a1, &qword_1EB7D8950);
}

void GDVUEntityUpdate.init()()
{
}

id sub_1B2E2ED50(uint64_t *a1, uint64_t a2, float a3)
{
  uint64_t v7 = sub_1B29A3EB4(&qword_1EB7D8950);
  MEMORY[0x1F4188790](v7 - 8);
  objc_super v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  id v11 = objc_allocWithZone((Class)GDEntityIdentifier);
  uint64_t v12 = v3;
  id result = objc_msgSend(v11, sel_initWithValue_, v10);
  if (result)
  {
    *(void *)&v12[OBJC_IVAR___GDVURecognitionResult_entityIdentifier] = result;
    sub_1B2AD2BAC(a2, (uint64_t)v9, &qword_1EB7D8950);
    sub_1B29A3EB4(&qword_1E9C37E80);
    uint64_t v14 = swift_allocObject();
    sub_1B2E26DA0((uint64_t)v9, v14 + *(void *)(*(void *)v14 + 88));
    *(void *)&v12[OBJC_IVAR___GDVURecognitionResult__tag] = v14;
    *(float *)&v12[OBJC_IVAR___GDVURecognitionResult_confidence] = a3;

    v16.receiver = v12;
    v16.super_class = (Class)GDVURecognitionResult;
    id v15 = objc_msgSendSuper2(&v16, sel_init);
    sub_1B29C4148(a2, &qword_1EB7D8950);
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id GDVURecognitionResult.entityIdentifier.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___GDVURecognitionResult_entityIdentifier);
  sub_1B299D804();
  uint64_t v2 = *v1;

  return v2;
}

void GDVURecognitionResult.entityIdentifier.setter(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR___GDVURecognitionResult_entityIdentifier);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

id sub_1B2E2EFF8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_entityIdentifier);
  *a2 = result;
  return result;
}

id sub_1B2E2F04C(void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1EB7D8950);
  uint64_t v7 = sub_1B299B0F0(v6);
  MEMORY[0x1F4188790](v7);
  sub_1B2999928();
  a3();
  uint64_t v8 = sub_1B2E806B8();
  sub_1B2E2FE74(v3);
  if (!v9)
  {
    a1 = (void *)sub_1B2E80688();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v3, v8);
  }

  return a1;
}

uint64_t GDVURecognitionResult.tag.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1B299FD78();
  uint64_t v4 = v3 + *(void *)(v2 + 88);
  sub_1B299D804();
  return sub_1B2AD2BAC(v4, a1, &qword_1EB7D8950);
}

float GDVURecognitionResult.confidence.getter()
{
  return *(float *)(v0 + OBJC_IVAR___GDVURecognitionResult_confidence);
}

void GDVURecognitionResult.init()()
{
}

id sub_1B2E2F248(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EntityRecognitionClient(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E2F7B0(a1, (uint64_t)v5, (void (*)(void))type metadata accessor for EntityRecognitionClient);
  sub_1B29A3EB4(&qword_1EB7D9D40);
  uint64_t v6 = swift_allocObject();
  sub_1B2E2FB58((uint64_t)v5, v6 + *(void *)(*(void *)v6 + 88), (void (*)(void))type metadata accessor for EntityRecognitionClient);
  *(void *)&v1[OBJC_IVAR___GDVUEntityRecognitionClient_inner] = v6;
  v9.receiver = v1;
  v9.super_class = (Class)GDVUEntityRecognitionClient;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  sub_1B2E2FBB8(a1, (void (*)(void))type metadata accessor for EntityRecognitionClient);
  return v7;
}

id static GDVUEntityRecognitionClient.photos()()
{
  return sub_1B2E2F3E8(&qword_1EB7E2810, (uint64_t)qword_1EB7E3270);
}

id static GDVUEntityRecognitionClient.syndication()()
{
  return sub_1B2E2F3E8(&qword_1E9C37208, (uint64_t)qword_1E9C37EA0);
}

id sub_1B2E2F3E8(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for EntityRecognitionClient(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v6);
  sub_1B2999928();
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1B29A4B98(v5, a2);
  sub_1B2E2F7B0(v7, v2, (void (*)(void))type metadata accessor for EntityRecognitionClient);
  id v8 = objc_allocWithZone((Class)GDVUEntityRecognitionClient);
  uint64_t v9 = sub_1B2AE7134();
  return sub_1B2E2F248(v9);
}

id static GDVUEntityRecognitionClient.homekit()()
{
  return sub_1B2E2F3E8(&qword_1E9C381C0, (uint64_t)qword_1E9C37210);
}

id static GDVUEntityRecognitionClient.contacts()()
{
  return sub_1B2E2F3E8(qword_1E9C37228, (uint64_t)qword_1E9C381C8);
}

id static GDVUEntityRecognitionClient.reserved()()
{
  return sub_1B2E2F3E8(&qword_1E9C38D10, (uint64_t)qword_1E9C450C8);
}

void GDVUEntityRecognitionClient.init()()
{
}

uint64_t sub_1B2E2F604(uint64_t a1)
{
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v3 = *(void *)v1 + *(void *)(**(void **)v1 + 88);
    swift_beginAccess();
    sub_1B2E2FC10(a1, v3);
    return swift_endAccess();
  }
  else
  {
    sub_1B29A3EB4(&qword_1E9C383E8);
    uint64_t v5 = swift_allocObject();
    sub_1B2E2FB58(a1, v5 + *(void *)(*(void *)v5 + 88), (void (*)(void))type metadata accessor for VisualUnderstandingService.Context);
    uint64_t result = swift_release();
    *(void *)uint64_t v1 = v5;
  }
  return result;
}

uint64_t type metadata accessor for GDVUVisualUnderstandingService(uint64_t a1)
{
  return sub_1B29C3CA0(a1, &qword_1E9C45250);
}

uint64_t type metadata accessor for GDVURecognitionResult(uint64_t a1)
{
  return sub_1B29C3CA0(a1, &qword_1E9C37E88);
}

BOOL sub_1B2E2F70C(uint64_t a1)
{
  return (a1 & 0xC000000000000001) == 0;
}

uint64_t type metadata accessor for GDVUChangeBookmark(uint64_t a1)
{
  return sub_1B29C3CA0(a1, (unint64_t *)&unk_1E9C37ED8);
}

uint64_t type metadata accessor for GDVUEntityClass(uint64_t a1)
{
  return sub_1B29C3CA0(a1, &qword_1E9C37ED0);
}

uint64_t type metadata accessor for GDVUObservationUpdate(uint64_t a1)
{
  return sub_1B29C3CA0(a1, &qword_1E9C38238);
}

void sub_1B2E2F754(uint64_t a1)
{
  sub_1B2E2A5F8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1B2E2F770()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B2E2F7A8(uint64_t a1)
{
  return sub_1B2E2AEE8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1B2E2F7B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1B2999864();
  uint64_t v4 = sub_1B2AD2DAC();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for GDVUClusterResult(uint64_t a1)
{
  return sub_1B29C3CA0(a1, &qword_1E9C45278);
}

unint64_t sub_1B2E2F818()
{
  unint64_t result = qword_1E9C38210;
  if (!qword_1E9C38210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38210);
  }
  return result;
}

unint64_t sub_1B2E2F864()
{
  unint64_t result = qword_1E9C38218;
  if (!qword_1E9C38218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38218);
  }
  return result;
}

char *sub_1B2E2F8B0()
{
  return sel_moment;
}

uint64_t sub_1B2E2F8BC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2E2C38C(a1, (SEL *)&selRef_moment, a2);
}

void sub_1B2E2F8DC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *sub_1B2E2F8FC()
{
  return sel_asset;
}

uint64_t sub_1B2E2F908@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2E2C38C(a1, (SEL *)&selRef_asset, a2);
}

void sub_1B2E2F928(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *sub_1B2E2F948()
{
  return sel_source;
}

id sub_1B2E2F954@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_source);
  *a2 = result;
  return result;
}

id sub_1B2E2F988(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSource_, *a1);
}

char *sub_1B2E2F99C()
{
  return sel_entityIdentifier;
}

id sub_1B2E2F9AC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEntityIdentifier_, *a1);
}

uint64_t type metadata accessor for GDVUProgressStatus(uint64_t a1)
{
  return sub_1B29C3CA0(a1, &qword_1E9C45258);
}

uint64_t type metadata accessor for GDVUSocialGroup(uint64_t a1)
{
  return sub_1B29C3CA0(a1, &qword_1E9C45260);
}

uint64_t type metadata accessor for GDVUContext(uint64_t a1)
{
  return sub_1B29C3CA0(a1, &qword_1E9C45268);
}

uint64_t type metadata accessor for GDVUGalleryTransaction(uint64_t a1)
{
  return sub_1B29C3CA0(a1, (unint64_t *)&unk_1E9C383F0);
}

uint64_t type metadata accessor for GDVUStreamingGallery(uint64_t a1)
{
  return sub_1B29C3CA0(a1, &qword_1E9C45270);
}

uint64_t type metadata accessor for GDVUUpdate(uint64_t a1)
{
  return sub_1B29C3CA0(a1, &qword_1E9C45280);
}

uint64_t type metadata accessor for GDVUEntityUpdate(uint64_t a1)
{
  return sub_1B29C3CA0(a1, &qword_1E9C45288);
}

uint64_t type metadata accessor for GDVUEntityRecognitionClient(uint64_t a1)
{
  return sub_1B29C3CA0(a1, qword_1E9C45290);
}

uint64_t type metadata accessor for ObjCResilientBox.Box()
{
  return sub_1B29A1278();
}

uint64_t type metadata accessor for ObjCResilientBox()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2E2FA90()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B2E2FAC8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

id sub_1B2E2FAF0(uint64_t a1)
{
  return sub_1B2E2A78C(a1, *(void *)(v1 + 16));
}

unint64_t sub_1B2E2FAF8()
{
  unint64_t result = qword_1E9C45320;
  if (!qword_1E9C45320)
  {
    sub_1B29C3CA0(255, &qword_1E9C38230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45320);
  }
  return result;
}

uint64_t sub_1B2E2FB58(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1B2E2FBB8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1B2E2FC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisualUnderstandingService.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2E2FC74(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = a1;
  for (uint64_t i = (void **)(a1 + 40); ; i += 2)
  {
    id v8 = *i;
    uint64_t v9 = (void *)*a3;
    id v10 = *(i - 1);
    id v11 = v8;
    sub_1B29DBA88();
    unint64_t v20 = v19;
    uint64_t v21 = v9[2];
    BOOL v22 = (v12 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    char v24 = v12;
    if (v9[3] >= v23)
    {
      if ((a2 & 1) == 0)
      {
        sub_1B29A3EB4(&qword_1E9C45330);
        sub_1B2E833A8();
      }
    }
    else
    {
      sub_1B2B074CC(v23, a2 & 1, v13, v14, v15, v16, v17, v18, v33, v34);
      sub_1B29DBA88();
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_18;
      }
      unint64_t v20 = v25;
    }
    uint64_t v27 = (void *)*a3;
    if (v24)
    {

      uint64_t v28 = v27[7];
      *(void *)(v28 + 8 * v20) = v11;
    }
    else
    {
      v27[(v20 >> 6) + 8] |= 1 << v20;
      *(void *)(v27[6] + 8 * v20) = v10;
      *(void *)(v27[7] + 8 * v20) = v11;
      uint64_t v29 = v27[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_17;
      }
      id v27[2] = v31;
    }
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  sub_1B29C3CA0(0, &qword_1E9C38230);
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2E2FE30()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

uint64_t sub_1B2E2FE74(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t sub_1B2E2FE98()
{
  return swift_beginAccess();
}

uint64_t sub_1B2E2FEBC()
{
  return v0;
}

uint64_t sub_1B2E2FED4()
{
  return v0;
}

uint64_t sub_1B2E2FF00(uint64_t a1, uint64_t a2)
{
  sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7048);
  uint64_t v5 = *(void *)(*v2 + 16);
  uint64_t result = sub_1B2E320AC(v5, (uint64_t (*)(BOOL))sub_1B29B7048);
  uint64_t v7 = *v2;
  *(void *)(v7 + 16) = v5 + 1;
  uint64_t v8 = v7 + 16 * v5;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  *uint64_t v2 = v7;
  return result;
}

void sub_1B2E2FF80(char a1)
{
  sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B71B0);
  sub_1B2E32684();
  sub_1B2E320AC(v2, (uint64_t (*)(BOOL))sub_1B29B71B0);
  sub_1B2E32710();
  *(unsigned char *)(v4 + v2 + 32) = a1;
  *uint64_t v1 = v4;
}

uint64_t sub_1B2E2FFF0(uint64_t a1)
{
  sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7DD8);
  sub_1B2E32684();
  sub_1B2E320AC(v2, (uint64_t (*)(BOOL))sub_1B29B7DD8);
  sub_1B2E32700();
  sub_1B2E80668();
  sub_1B2B714E0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 32))(v3+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v2, a1);
  *uint64_t v1 = v3;
  return result;
}

double sub_1B2E3009C(uint64_t a1)
{
  *(void *)&double result = sub_1B2E300F4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7D7C, (uint64_t (*)(BOOL))sub_1B29B7D7C).n128_u64[0];
  return result;
}

double sub_1B2E300C8(uint64_t a1)
{
  *(void *)&double result = sub_1B2E300F4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7D20, (uint64_t (*)(BOOL))sub_1B29B7D20).n128_u64[0];
  return result;
}

__n128 sub_1B2E300F4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a3)(BOOL))
{
  sub_1B2E31A3C(a2);
  uint64_t v6 = *(void *)(*v3 + 16);
  sub_1B2E320AC(v6, a3);
  uint64_t v7 = *v3;
  *(void *)(v7 + 16) = v6 + 1;
  uint64_t v8 = v7 + (v6 << 6);
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 48) = v9;
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(a1 + 32);
  __n128 result = *(__n128 *)(a1 + 41);
  *(__n128 *)(v8 + 73) = result;
  *uint64_t v3 = v7;
  return result;
}

double sub_1B2E30168(uint64_t a1)
{
  *(void *)&double result = sub_1B2E300F4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7CC4, (uint64_t (*)(BOOL))sub_1B29B7CC4).n128_u64[0];
  return result;
}

__n128 sub_1B2E30194(uint64_t a1)
{
  sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7C68);
  sub_1B2E32684();
  sub_1B2E320AC(v2, (uint64_t (*)(BOOL))sub_1B29B7C68);
  sub_1B2E32710();
  uint64_t v5 = v4 + 40 * v2;
  __n128 result = *(__n128 *)a1;
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 48) = v7;
  *(unsigned char *)(v5 + 64) = *(unsigned char *)(a1 + 32);
  *uint64_t v1 = v4;
  return result;
}

__n128 sub_1B2E30214(uint64_t a1)
{
  sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7B8C);
  sub_1B2E32684();
  sub_1B2E320AC(v2, (uint64_t (*)(BOOL))sub_1B29B7B8C);
  sub_1B2E32710();
  uint64_t v5 = v4 + 56 * v2;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 48) = v6;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v5 + 64) = result;
  *(void *)(v5 + 80) = *(void *)(a1 + 48);
  *uint64_t v1 = v4;
  return result;
}

void *sub_1B2E3029C(const void *a1)
{
  sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7B58);
  sub_1B2E32684();
  sub_1B2E320AC(v2, (uint64_t (*)(BOOL))sub_1B29B7B58);
  sub_1B2E32700();
  __n128 result = memcpy((void *)(v3 + 88 * v2 + 32), a1, 0x58uLL);
  *uint64_t v1 = v3;
  return result;
}

void *sub_1B2E3031C(const void *a1)
{
  sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7B24);
  sub_1B2E32684();
  sub_1B2E320AC(v2, (uint64_t (*)(BOOL))sub_1B29B7B24);
  sub_1B2E32700();
  __n128 result = memcpy((void *)(v3 + 112 * v2 + 32), a1, 0x70uLL);
  *uint64_t v1 = v3;
  return result;
}

uint64_t VOPBuilder.toString.getter()
{
  uint64_t v4 = *v1;
  switch(((unint64_t)*v1 >> 59) & 0x1E | (*v1 >> 2) & 1)
  {
    case 1uLL:
      uint64_t v22 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
      uint64_t v23 = *(void *)(v22 + 16);
      if (v23)
      {
        uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
        uint64_t v31 = 0;
        uint64_t v32 = MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v151 = *(void *)(v22 + 8 * v31 + 32);
          uint64_t v33 = VOPBuilder.toString.getter(isUniquelyReferenced_nonNull_native, v25, v26, v27, v28, v29, v30);
          uint64_t v35 = v34;
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1B299AF84();
            uint64_t v32 = isUniquelyReferenced_nonNull_native;
          }
          unint64_t v36 = *(void *)(v32 + 16);
          if (v36 >= *(void *)(v32 + 24) >> 1)
          {
            sub_1B299FD84();
            uint64_t v32 = isUniquelyReferenced_nonNull_native;
          }
          ++v31;
          *(void *)(v32 + 16) = v36 + 1;
          uint64_t v37 = v32 + 16 * v36;
          *(void *)(v37 + 32) = v33;
          *(void *)(v37 + 40) = v35;
        }
        while (v23 != v31);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v32 = MEMORY[0x1E4FBC860];
      }
      sub_1B2999EC4();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B299E260();
      sub_1B2CA1F54(v32);
      goto LABEL_90;
    case 2uLL:
      sub_1B2E32690();
      swift_retain();
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      sub_1B2E32748();
      uint64_t v151 = v38;
      VOPBuilder.toString.getter(v39, v40, v41, v42, v43, v44, v45);
      sub_1B2E82518();
      goto LABEL_24;
    case 3uLL:
      uint64_t v46 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v47 = swift_allocObject();
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = v46;
      *(void *)(v47 + 16) = v48 | 0x3000000000000004;
      uint64_t v49 = swift_bridgeObjectRetain();
      goto LABEL_93;
    case 4uLL:
      sub_1B2E32690();
      uint64_t v57 = *(void *)(v56 + 24);
      sub_1B2E32748();
      uint64_t v151 = v58;
      swift_retain();
      uint64_t v59 = swift_bridgeObjectRetain();
      VOPBuilder.toString.getter(v59, v60, v61, v62, v63, v64, v65);
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B299E260();
      uint64_t v66 = swift_allocObject();
      *(void *)(v66 + 16) = v57;
      VOPBuilder.toString.getter(v66, v67, v68, v69, v70, v71, v72);
      swift_release();
      sub_1B2E82518();
LABEL_24:
      swift_bridgeObjectRelease();
      sub_1B2C8BCB4();
      goto LABEL_87;
    case 5uLL:
    case 7uLL:
      uint64_t v151 = 677670497;
      if (!*(void *)(*(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 16)) {
        goto LABEL_34;
      }
      uint64_t v5 = swift_bridgeObjectRetain();
      uint64_t v12 = MEMORY[0x1E4FBC860];
      do
      {
        sub_1B299BE3C(v5, v6, v7, v8, v9, v10, v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B299AF84();
          uint64_t v12 = v14;
        }
        if (*(void *)(v12 + 16) >= *(void *)(v12 + 24) >> 1)
        {
          sub_1B299FD84();
          uint64_t v12 = v15;
        }
        sub_1B2E326A0();
      }
      while (!v13);
      goto LABEL_33;
    case 6uLL:
      uint64_t v151 = 2650735;
      if (!*(void *)(*(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 16)) {
        goto LABEL_34;
      }
      uint64_t v73 = swift_bridgeObjectRetain();
      uint64_t v80 = MEMORY[0x1E4FBC860];
      do
      {
        sub_1B299BE3C(v73, v74, v75, v76, v77, v78, v79);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B299AF84();
          uint64_t v80 = v81;
        }
        if (*(void *)(v80 + 16) >= *(void *)(v80 + 24) >> 1)
        {
          sub_1B299FD84();
          uint64_t v80 = v82;
        }
        sub_1B2E326A0();
      }
      while (!v13);
LABEL_33:
      swift_bridgeObjectRelease();
LABEL_34:
      sub_1B29A3EB4(&qword_1EB7E3B30);
      sub_1B2A20660();
      sub_1B2E822D8();
LABEL_90:
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      goto LABEL_128;
    case 8uLL:
      uint64_t v83 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v84 = *(void *)(v83 + 16);
      if (v84)
      {
        swift_bridgeObjectRetain();
        uint64_t v85 = (uint64_t *)(v83 + 40);
        uint64_t v86 = MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v88 = *(v85 - 1);
          uint64_t v87 = *v85;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B299AF84();
            uint64_t v86 = v91;
          }
          unint64_t v89 = *(void *)(v86 + 16);
          if (v89 >= *(void *)(v86 + 24) >> 1)
          {
            sub_1B299FD84();
            uint64_t v86 = v92;
          }
          v85 += 5;
          *(void *)(v86 + 16) = v89 + 1;
          uint64_t v90 = v86 + 16 * v89;
          *(void *)(v90 + 32) = v88;
          *(void *)(v90 + 40) = v87;
          --v84;
        }
        while (v84);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v86 = MEMORY[0x1E4FBC860];
      }
      uint64_t v130 = swift_allocObject();
      static EntityPredicate.isA.getter();
      uint64_t v131 = sub_1B2CA1F54(v86);
      uint64_t v133 = v132;
      uint64_t v49 = swift_bridgeObjectRelease();
      *(void *)(v130 + 56) = v131;
      *(void *)(v130 + 64) = v133;
      *(void *)(v130 + 72) = 0;
      *(void *)(v130 + 80) = 0;
      *(_DWORD *)(v130 + 87) = 0;
LABEL_93:
      uint64_t v94 = VOPBuilder.toString.getter(v49, v50, v51, v52, v53, v54, v55);
      swift_release();
      return v94;
    case 9uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
      sub_1B29A10D0(v4);
      sub_1B2E326E4();
      goto LABEL_65;
    case 0xAuLL:
      sub_1B2E3275C();
      swift_bridgeObjectRelease();
      sub_1B29A553C();
      uint64_t v152 = v93;
      static EntityPredicate.name.getter();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      sub_1B2C8BE08();
      sub_1B2C8BCB4();
      return v152;
    case 0xBuLL:
      sub_1B2E32720();
      sub_1B2E3275C();
      swift_bridgeObjectRelease();
      sub_1B29A553C();
      uint64_t v151 = v95;
      sub_1B2E31278(v0);
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B299E260();
      goto LABEL_65;
    case 0xCuLL:
      sub_1B2E32668();
      goto LABEL_47;
    case 0xDuLL:
      sub_1B2E32668();
      uint64_t v96 = v97 + 5;
LABEL_47:
      uint64_t v151 = v96;
      swift_bridgeObjectRetain();
      sub_1B2C8BE08();
      swift_bridgeObjectRelease();
      sub_1B299E260();
LABEL_65:
      sub_1B2E82518();
      goto LABEL_129;
    case 0xEuLL:
      sub_1B2E32720();
      uint64_t v98 = *(void *)(v2 + 16);
      if (v98)
      {
        swift_bridgeObjectRetain();
        uint64_t v99 = v2 + 40;
        uint64_t v100 = MEMORY[0x1E4FBC860];
        do
        {
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2C385FC();
            uint64_t v100 = v102;
          }
          sub_1B2E326F0();
          if (v101)
          {
            sub_1B2E326B8();
            uint64_t v100 = v103;
          }
          v99 += 40;
          sub_1B2E326D4();
          --v98;
        }
        while (v98);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v100 = MEMORY[0x1E4FBC860];
      }
      sub_1B2CA1F54(v100);
      swift_bridgeObjectRelease();
      sub_1B2E326E4();
      sub_1B2C8BE08();
      sub_1B299E260();
      goto LABEL_127;
    case 0xFuLL:
      uint64_t v104 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x48);
      uint64_t v151 = 0;
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      sub_1B2E326E4();
      sub_1B2E82518();
      sub_1B299E260();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B299E260();
      sub_1B2E31278(v104);
      sub_1B2E82518();
      goto LABEL_128;
    case 0x10uLL:
      uint64_t v151 = 0;
      uint64_t v105 = *(void *)(*(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x20) + 16);
      if (!v105) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v106 = 0;
      do
      {
        swift_bridgeObjectRetain();
        if (!v106)
        {
          sub_1B2E82518();
          sub_1B2E82518();
        }
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2C8BCB4();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        v106 += 16;
        --v105;
      }
      while (v105);
      swift_bridgeObjectRelease();
      return v151;
    case 0x11uLL:
      sub_1B29A10D0(v4);
      sub_1B2E326E4();
      sub_1B2E82518();
      sub_1B299E260();
      swift_bridgeObjectRetain();
      sub_1B2C8BE08();
      goto LABEL_128;
    case 0x15uLL:
      sub_1B2E32734();
      if (v3)
      {
        swift_bridgeObjectRetain();
        uint64_t v107 = v1 + 5;
        uint64_t v108 = MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v109 = *v107;
          if (*v107)
          {
            uint64_t v110 = *(v107 - 1);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B2C83BE4();
              uint64_t v108 = v113;
            }
            unint64_t v111 = *(void *)(v108 + 16);
            if (v111 >= *(void *)(v108 + 24) >> 1)
            {
              sub_1B299EBE8();
              uint64_t v108 = v114;
            }
            *(void *)(v108 + 16) = v111 + 1;
            uint64_t v112 = v108 + 16 * v111;
            *(void *)(v112 + 32) = v110;
            *(void *)(v112 + 40) = v109;
          }
          v107 += 5;
          --v3;
        }
        while (v3);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v108 = MEMORY[0x1E4FBC860];
      }
      sub_1B2CA1F54(v108);
      swift_bridgeObjectRelease();
      uint64_t v134 = *(void *)(v0 + 16);
      if (v134)
      {
        swift_bridgeObjectRetain();
        uint64_t v135 = (void *)(v0 + 40);
        uint64_t v136 = MEMORY[0x1E4FBC860];
        do
        {
          if (*v135)
          {
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B2C385FC();
              uint64_t v136 = v137;
            }
            sub_1B2E326F0();
            if (v101)
            {
              sub_1B2E326B8();
              uint64_t v136 = v138;
            }
            sub_1B2E326D4();
          }
          v135 += 5;
          --v134;
        }
        while (v134);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v136 = MEMORY[0x1E4FBC860];
      }
      sub_1B2CA1F54(v136);
      swift_bridgeObjectRelease();
      goto LABEL_123;
    case 0x16uLL:
      sub_1B2E32734();
      if (v3)
      {
        swift_bridgeObjectRetain();
        uint64_t v115 = v1 + 5;
        uint64_t v116 = MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v117 = *v115;
          if (*v115)
          {
            uint64_t v118 = *(v115 - 1);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B2C83BE4();
              uint64_t v116 = v121;
            }
            unint64_t v119 = *(void *)(v116 + 16);
            if (v119 >= *(void *)(v116 + 24) >> 1)
            {
              sub_1B299EBE8();
              uint64_t v116 = v122;
            }
            *(void *)(v116 + 16) = v119 + 1;
            uint64_t v120 = v116 + 16 * v119;
            *(void *)(v120 + 32) = v118;
            *(void *)(v120 + 40) = v117;
          }
          v115 += 5;
          --v3;
        }
        while (v3);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v116 = MEMORY[0x1E4FBC860];
      }
      sub_1B2CA1F54(v116);
      swift_bridgeObjectRelease();
      uint64_t v139 = *(void *)(v0 + 16);
      if (v139)
      {
        swift_bridgeObjectRetain();
        uint64_t v140 = (void *)(v0 + 40);
        uint64_t v141 = MEMORY[0x1E4FBC860];
        do
        {
          if (*v140)
          {
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B2C385FC();
              uint64_t v141 = v142;
            }
            sub_1B2E326F0();
            if (v101)
            {
              sub_1B2E326B8();
              uint64_t v141 = v143;
            }
            sub_1B2E326D4();
          }
          v140 += 5;
          --v139;
        }
        while (v139);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v141 = MEMORY[0x1E4FBC860];
      }
      sub_1B2CA1F54(v141);
      swift_bridgeObjectRelease();
      uint64_t v151 = 0;
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
LABEL_123:
      sub_1B2E326E4();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B299E260();
      goto LABEL_127;
    case 0x17uLL:
      sub_1B2E32690();
      uint64_t v123 = swift_retain();
      uint64_t v151 = VOPBuilder.toString.getter(v123, v124, v125, v126, v127, v128, v129);
      swift_bridgeObjectRetain();
      sub_1B2E83748();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E824C8();
      swift_bridgeObjectRelease();
      sub_1B2E3210C();
      sub_1B2E82528();
      swift_bridgeObjectRelease();
LABEL_87:
      swift_release();
      return v151;
    default:
      uint64_t v16 = *(unsigned __int8 *)(v4 + 90);
      sub_1B2999EC4();
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1B29A2490();
      sub_1B29C5A24(v17, v18, v19, v20, v21, v16);
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B299E260();
      switch(v16)
      {
        case 1:
          EntityIdentifier.stringValue.getter();
          break;
        case 2:
          swift_bridgeObjectRetain();
          uint64_t v144 = sub_1B29A2490();
          unsigned __int8 v149 = 2;
          goto LABEL_126;
        case 3:
          swift_bridgeObjectRetain();
          uint64_t v144 = sub_1B29A2490();
          unsigned __int8 v149 = 3;
LABEL_126:
          sub_1B29C5B68(v144, v145, v146, v147, v148, v149);
          break;
        default:
          break;
      }
LABEL_127:
      sub_1B2E82518();
LABEL_128:
      swift_bridgeObjectRelease();
LABEL_129:
      sub_1B2C8BCB4();
      return v151;
  }
}

uint64_t sub_1B2E31278(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v5 = *(v2 - 1);
      uint64_t v4 = *v2;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B7048();
        uint64_t v3 = v8;
      }
      unint64_t v6 = v3[2];
      if (v6 >= v3[3] >> 1)
      {
        sub_1B29B7048();
        uint64_t v3 = v9;
      }
      v2 += 5;
      _OWORD v3[2] = v6 + 1;
      uint64_t v7 = &v3[2 * v6];
      void v7[4] = v5;
      void v7[5] = v4;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = v3[2];
  if (v10 == 1)
  {
    uint64_t v11 = v3[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else if (v10)
  {
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2A20660();
    sub_1B2E822D8();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    return 10075;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v11;
}

uint64_t VOPBuilder.description.getter()
{
  return VOPBuilder.toString.getter();
}

uint64_t sub_1B2E31454()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7048);
}

uint64_t sub_1B2E3146C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7120);
}

uint64_t sub_1B2E31484()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B717C);
}

uint64_t sub_1B2E3149C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7148);
}

uint64_t sub_1B2E314B4()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B71B0);
}

uint64_t sub_1B2E314CC()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B744C);
}

uint64_t sub_1B2E314E4()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7480);
}

uint64_t sub_1B2E314FC()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B74B4);
}

uint64_t sub_1B2E31514()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7260);
}

uint64_t sub_1B2E3152C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B75A4);
}

uint64_t sub_1B2E31544()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7848);
}

uint64_t sub_1B2E3155C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B75D8);
}

uint64_t sub_1B2E31574()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7B58);
}

uint64_t sub_1B2E3158C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7C90);
}

uint64_t sub_1B2E315A4()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7CEC);
}

uint64_t sub_1B2E315BC()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7D20);
}

uint64_t sub_1B2E315D4()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7D48);
}

uint64_t sub_1B2E315EC()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7DA4);
}

uint64_t sub_1B2E31604()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7DD8);
}

uint64_t sub_1B2E3161C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B7E20);
}

uint64_t sub_1B2E31634()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B83A0);
}

uint64_t sub_1B2E3164C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B8994);
}

uint64_t sub_1B2E31664()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B8DF0);
}

uint64_t sub_1B2E3167C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B8F00);
}

uint64_t sub_1B2E31694()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B8F28);
}

uint64_t sub_1B2E316AC()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B8F5C);
}

uint64_t sub_1B2E316C4()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B905C);
}

uint64_t sub_1B2E316DC()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9090);
}

uint64_t sub_1B2E316F4()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B90B8);
}

uint64_t sub_1B2E3170C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B90E0);
}

uint64_t sub_1B2E31724()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9114);
}

uint64_t sub_1B2E3173C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B913C);
}

uint64_t sub_1B2E31754()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9170);
}

uint64_t sub_1B2E3176C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9214);
}

uint64_t sub_1B2E31784()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B923C);
}

uint64_t sub_1B2E3179C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9264);
}

uint64_t sub_1B2E317B4()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9298);
}

uint64_t sub_1B2E317CC()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B92C0);
}

uint64_t sub_1B2E317E4()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9300);
}

uint64_t sub_1B2E317FC()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B99F4);
}

uint64_t sub_1B2E31814()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9A30);
}

uint64_t sub_1B2E3182C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9A6C);
}

uint64_t sub_1B2E31844()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9A80);
}

uint64_t sub_1B2E3185C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9AB4);
}

uint64_t sub_1B2E31874()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9AE8);
}

uint64_t sub_1B2E3188C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9B1C);
}

uint64_t sub_1B2E318A4()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9B50);
}

uint64_t sub_1B2E318BC()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9B84);
}

uint64_t sub_1B2E318D4()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9BB8);
}

uint64_t sub_1B2E318EC()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9BCC);
}

uint64_t sub_1B2E31904()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9BE0);
}

uint64_t sub_1B2E3191C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9BF4);
}

uint64_t sub_1B2E31934()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9C08);
}

uint64_t sub_1B2E3194C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9C1C);
}

uint64_t sub_1B2E31964()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9C30);
}

uint64_t sub_1B2E3197C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9C44);
}

uint64_t sub_1B2E31994()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9C58);
}

uint64_t sub_1B2E319AC()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9C6C);
}

uint64_t sub_1B2E319C4()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9C80);
}

uint64_t sub_1B2E319DC()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9C94);
}

uint64_t sub_1B2E319F4()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9CA8);
}

uint64_t sub_1B2E31A0C()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9DF0);
}

uint64_t sub_1B2E31A24()
{
  return sub_1B2E31A3C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B29B9E04);
}

uint64_t sub_1B2E31A3C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_1B2E31A98(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7048);
}

uint64_t sub_1B2E31AB0(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7120);
}

uint64_t sub_1B2E31AC8(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7148);
}

uint64_t sub_1B2E31AE0(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B717C);
}

uint64_t sub_1B2E31AF8(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B71B0);
}

uint64_t sub_1B2E31B10(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7260);
}

uint64_t sub_1B2E31B28(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B744C);
}

uint64_t sub_1B2E31B40(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7480);
}

uint64_t sub_1B2E31B58(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B74B4);
}

uint64_t sub_1B2E31B70(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B75A4);
}

uint64_t sub_1B2E31B88(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B75D8);
}

uint64_t sub_1B2E31BA0(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7848);
}

uint64_t sub_1B2E31BB8(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7B58);
}

uint64_t sub_1B2E31BD0(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7C90);
}

uint64_t sub_1B2E31BE8(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7CEC);
}

uint64_t sub_1B2E31C00(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7D20);
}

uint64_t sub_1B2E31C18(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7D48);
}

uint64_t sub_1B2E31C30(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7DA4);
}

uint64_t sub_1B2E31C48(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7DD8);
}

uint64_t sub_1B2E31C60(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return sub_1B2E828A8();
  }
  return result;
}

uint64_t sub_1B2E31C8C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B7E20);
}

uint64_t sub_1B2E31CA4(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B83A0);
}

uint64_t sub_1B2E31CBC(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B8994);
}

uint64_t sub_1B2E31CD4(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B8DF0);
}

uint64_t sub_1B2E31CEC(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B8F00);
}

uint64_t sub_1B2E31D04(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B8F28);
}

uint64_t sub_1B2E31D1C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B8F5C);
}

uint64_t sub_1B2E31D34(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B905C);
}

uint64_t sub_1B2E31D4C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9090);
}

uint64_t sub_1B2E31D64(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B90B8);
}

uint64_t sub_1B2E31D7C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B90E0);
}

uint64_t sub_1B2E31D94(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9114);
}

uint64_t sub_1B2E31DAC(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B913C);
}

uint64_t sub_1B2E31DC4(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9170);
}

uint64_t sub_1B2E31DDC(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9214);
}

uint64_t sub_1B2E31DF4(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B923C);
}

uint64_t sub_1B2E31E0C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9264);
}

uint64_t sub_1B2E31E24(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9298);
}

uint64_t sub_1B2E31E3C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B92C0);
}

uint64_t sub_1B2E31E54(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9300);
}

uint64_t sub_1B2E31E6C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B99F4);
}

uint64_t sub_1B2E31E84(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9A30);
}

uint64_t sub_1B2E31E9C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9A6C);
}

uint64_t sub_1B2E31EB4(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9A80);
}

uint64_t sub_1B2E31ECC(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9AB4);
}

uint64_t sub_1B2E31EE4(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9AE8);
}

uint64_t sub_1B2E31EFC(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9B1C);
}

uint64_t sub_1B2E31F14(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9B50);
}

uint64_t sub_1B2E31F2C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9B84);
}

uint64_t sub_1B2E31F44(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9BB8);
}

uint64_t sub_1B2E31F5C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9BCC);
}

uint64_t sub_1B2E31F74(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9BE0);
}

uint64_t sub_1B2E31F8C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9BF4);
}

uint64_t sub_1B2E31FA4(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9C08);
}

uint64_t sub_1B2E31FBC(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9C1C);
}

uint64_t sub_1B2E31FD4(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9C30);
}

uint64_t sub_1B2E31FEC(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9C44);
}

uint64_t sub_1B2E32004(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9C58);
}

uint64_t sub_1B2E3201C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9C6C);
}

uint64_t sub_1B2E32034(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9C80);
}

uint64_t sub_1B2E3204C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9C94);
}

uint64_t sub_1B2E32064(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9CA8);
}

uint64_t sub_1B2E3207C(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9DF0);
}

uint64_t sub_1B2E32094(uint64_t a1)
{
  return sub_1B2E320AC(a1, (uint64_t (*)(BOOL))sub_1B29B9E04);
}

uint64_t sub_1B2E320AC(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

uint64_t sub_1B2E320F4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  return result;
}

unint64_t sub_1B2E3210C()
{
  unint64_t result = qword_1E9C45340;
  if (!qword_1E9C45340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C45340);
  }
  return result;
}

__n128 sub_1B2E3215C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = a1 + 1;
  uint64_t v4 = v3 + 40 * a1;
  __n128 result = *(__n128 *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 48) = v6;
  *(_WORD *)(v4 + 64) = *(_WORD *)(a2 + 32);
  return result;
}

__n128 sub_1B2E32184(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  __int16 v4 = *(_WORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *v2;
  *(void *)(v6 + 16) = a1 + 1;
  uint64_t v7 = v6 + 56 * a1;
  __n128 result = *(__n128 *)(a2 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)a2;
  *(__n128 *)(v7 + 48) = result;
  *(void *)(v7 + 64) = v3;
  *(_WORD *)(v7 + 72) = v4;
  *(void *)(v7 + 80) = v5;
  return result;
}

uint64_t sub_1B2E321BC(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *v5;
  *(void *)(v6 + 16) = result + 1;
  uint64_t v7 = v6 + 32 * result;
  *(unsigned char *)(v7 + 32) = a2;
  *(void *)(v7 + 40) = a3;
  *(void *)(v7 + 48) = a4;
  *(void *)(v7 + 56) = a5;
  return result;
}

uint64_t sub_1B2E321DC(uint64_t result, uint64_t a2, double a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(void *)(v5 + 32) = a2;
  *(double *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_1B2E321F8(uint64_t result, char a2, double a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(unsigned char *)(v5 + 32) = a2;
  *(double *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_1B2E32214(uint64_t a1, uint64_t a2)
{
  return sub_1B2E3222C(a1, a2, &qword_1E9C39BF8);
}

uint64_t sub_1B2E32220(uint64_t a1, uint64_t a2)
{
  return sub_1B2E3222C(a1, a2, &qword_1E9C39BE8);
}

uint64_t sub_1B2E3222C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = *v3;
  *(void *)(v7 + 16) = a1 + 1;
  uint64_t v8 = sub_1B29A3EB4(a3);
  sub_1B299D2A8(v8);
  return sub_1B2B70394(a2, v7+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v10 + 72) * a1, a3);
}

uint64_t sub_1B2E322AC(uint64_t a1, uint64_t a2)
{
  return sub_1B2E3222C(a1, a2, &qword_1E9C39BD8);
}

uint64_t sub_1B2E322B8(uint64_t a1, uint64_t a2)
{
  return sub_1B2E3222C(a1, a2, &qword_1E9C39BC8);
}

uint64_t sub_1B2E322C4(uint64_t a1, uint64_t a2)
{
  return sub_1B2E3222C(a1, a2, &qword_1E9C39BB8);
}

uint64_t sub_1B2E322D0(uint64_t a1, uint64_t a2)
{
  return sub_1B2E3222C(a1, a2, &qword_1E9C39BA8);
}

uint64_t sub_1B2E322DC(uint64_t a1, uint64_t a2)
{
  return sub_1B2E3222C(a1, a2, &qword_1E9C39B98);
}

uint64_t sub_1B2E322E8(uint64_t a1, uint64_t a2)
{
  return sub_1B2E3222C(a1, a2, &qword_1E9C39B88);
}

uint64_t sub_1B2E322F4(uint64_t a1, uint64_t a2)
{
  return sub_1B2E3222C(a1, a2, &qword_1E9C39B78);
}

uint64_t sub_1B2E32300(uint64_t a1, uint64_t a2)
{
  return sub_1B2E3222C(a1, a2, &qword_1E9C39B68);
}

uint64_t sub_1B2E3230C(uint64_t a1, uint64_t a2)
{
  return sub_1B2E3222C(a1, a2, &qword_1E9C39B58);
}

uint64_t sub_1B2E32318(uint64_t a1, uint64_t a2)
{
  return sub_1B2E3222C(a1, a2, &qword_1E9C39B48);
}

uint64_t sub_1B2E32324(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(unsigned char *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_1B2E32340(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  *(void *)(v5 + 16) = a1 + 1;
  uint64_t v6 = type metadata accessor for KGQ.Value();
  sub_1B299D2A8(v6);
  uint64_t v9 = v5
     + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
     + *(void *)(v8 + 72) * a1;

  return sub_1B2D6E2F8(a2, v9);
}

uint64_t sub_1B2E323C4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B2E323FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B29C5B68(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned __int16 *)(v0 + 88), *(unsigned char *)(v0 + 90));

  return MEMORY[0x1F4186498](v0, 91, 7);
}

uint64_t sub_1B2E32450()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void *initializeBufferWithCopyOfBuffer for VOPBuilder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for VOPBuilder()
{
  return swift_release();
}

void *assignWithCopy for VOPBuilder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for VOPBuilder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for VOPBuilder(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x69 && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 104;
    }
    else
    {
      unsigned int v2 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(void *)a1 & 3))) ^ 0x7F;
      if (v2 >= 0x68) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for VOPBuilder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x68)
  {
    *(void *)__n128 result = a2 - 105;
    if (a3 >= 0x69) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x69) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1B2E32604(void *a1)
{
  return (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
}

void *sub_1B2E32618(void *result)
{
  *result &= 0xFFFFFFFFFFFFFFBuLL;
  return result;
}

unint64_t *sub_1B2E3262C(unint64_t *result, uint64_t a2)
{
  *__n128 result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  return result;
}

ValueMetadata *type metadata accessor for VOPBuilder()
{
  return &type metadata for VOPBuilder;
}

void sub_1B2E326A0()
{
  *(void *)(v0 + 16) = v3;
  uint64_t v5 = v0 + 16 * v4;
  *(void *)(v5 + 32) = v1;
  *(void *)(v5 + 40) = v2;
}

void sub_1B2E326B8()
{
  sub_1B29B7048();
}

void sub_1B2E326D4()
{
  *(void *)(v0 + 16) = v2;
  uint64_t v5 = v0 + 16 * v4;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v1;
}

void sub_1B2E32700()
{
  *(void *)(*(void *)v0 + 16) = v1 + 1;
}

void sub_1B2E32710()
{
  *(void *)(*(void *)v0 + 16) = v1 + 1;
}

uint64_t sub_1B2E3275C()
{
  return sub_1B2E831F8();
}

void static WritableAssetRegistry.remoteOptions.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t WritableAssetRegistry.trialAssetManagerPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v5 = *(unsigned char *)(v2 + 72);
  *(unsigned char *)(a1 + 16) = v5;
  return sub_1B29DAB14(v3, v4, v5);
}

uint64_t WritableAssetRegistry.__allocating_init(trialAssetManagerPolicy:)(uint64_t a1)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  if (qword_1EB7E3C40 != -1) {
    swift_once();
  }
  uint64_t v5 = unk_1EB7E51C0;
  qword_1EB7E51B8(v10);
  if (v1)
  {
    sub_1B29E1918(v3, v2, v4);
  }
  else
  {
    sub_1B29C3B84((uint64_t)v10, (uint64_t)v9);
    v7[0] = v3;
    v7[1] = v2;
    char v8 = v4;
    uint64_t v5 = swift_allocObject();
    sub_1B2E32890(v9, (uint64_t)v7);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
  }
  return v5;
}

uint64_t sub_1B2E32890(long long *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v17 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v18 = type metadata accessor for AssetRegistry();
  uint64_t v6 = *((void *)a1 + 3);
  uint64_t v7 = *((void *)a1 + 4);
  char v8 = sub_1B29AEC7C(a1, v6);
  v21[3] = v6;
  uint64_t v9 = *(void *)(*(void *)(v7 + 8) + 8);
  v21[4] = v9;
  uint64_t v10 = sub_1B29D1C70(v21);
  uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v12 = v11(v10, v8, v6);
  v19[0] = v17;
  v19[1] = v4;
  char v20 = v5;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11((uint64_t *)v14, v10, v6);
  uint64_t v15 = sub_1B29E50B4((uint64_t)v14, v19, v18, v6, v9);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v21);
  *(void *)(v2 + 16) = v15;
  sub_1B29D1D20(a1, v2 + 24);
  return v2;
}

uint64_t WritableAssetRegistry.asset(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  uint64_t v6[4] = a3;
  v6[5] = a4;
  id v6[2] = a1;
  v6[3] = a2;
  return sub_1B299D7F8((uint64_t)sub_1B2E329F8);
}

uint64_t sub_1B2E329F8()
{
  sub_1B299B3BC();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B2E32A9C;
  return AssetRegistry.asset(for:in:)();
}

uint64_t sub_1B2E32A9C()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v1 = *v0;
  sub_1B299B0E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t WritableAssetRegistry.assets(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_1B299D7F8((uint64_t)sub_1B2E32B78);
}

uint64_t sub_1B2E32B78()
{
  sub_1B299B3BC();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B2E32C14;
  return AssetRegistry.assets(for:)();
}

uint64_t sub_1B2E32C14()
{
  sub_1B299B3BC();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v4 = *v1;
  sub_1B299B0E0();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

void WritableAssetRegistry.locallyAvailableAsset(for:in:)()
{
}

uint64_t WritableAssetRegistry.assetEntry(for:in:)()
{
  sub_1B2E33214();
  sub_1B29AEC7C((void *)(*(void *)(v0 + 16) + 16), *(void *)(*(void *)(v0 + 16) + 40));
  uint64_t v1 = sub_1B29A10E0();
  return v2(v1);
}

uint64_t WritableAssetRegistry.overrideAssetEntry(for:in:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = *a5;
  uint64_t v7 = a5[1];
  uint64_t v8 = a5[2];
  char v9 = *((unsigned char *)a5 + 26);
  __int16 v10 = *((_WORD *)a5 + 12);
  uint64_t v11 = v5[6];
  uint64_t v12 = v5[7];
  sub_1B29AEC7C(v5 + 3, v11);
  v27[0] = v6;
  v27[1] = v7;
  id v27[2] = v8;
  char v29 = v9;
  __int16 v28 = v10;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v14 = sub_1B29A5560();
  sub_1B29DABBC(v14, v15, v16, v17);
  v13(a1, a2, a3, a4, v27, v11, v12);
  uint64_t v18 = sub_1B29A5560();
  return sub_1B29DAB98(v18, v19, v20, v21);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> WritableAssetRegistry.clearAssetEntryOverride(for:in:)(Swift::String a1, Swift::String in)
{
  sub_1B2E33214();
  sub_1B29AEC7C((void *)(v2 + 24), *(void *)(v2 + 48));
  uint64_t v3 = sub_1B29A10E0();
  v4(v3);
}

uint64_t WritableAssetRegistry.deinit()
{
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 24);
  return v0;
}

uint64_t WritableAssetRegistry.__deallocating_deinit()
{
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t sub_1B2E32F44@<X0>(uint64_t a1@<X8>)
{
  return WritableAssetRegistry.trialAssetManagerPolicy.getter(a1);
}

uint64_t sub_1B2E32F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1B2E33034;
  return WritableAssetRegistry.asset(for:in:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1B2E33034()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v1 = *v0;
  sub_1B299B0E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1B2E330F8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1B2A86B60;
  return WritableAssetRegistry.assets(for:)(a1);
}

void sub_1B2E33190()
{
}

uint64_t sub_1B2E331B4()
{
  return WritableAssetRegistry.assetEntry(for:in:)();
}

uint64_t type metadata accessor for WritableAssetRegistry()
{
  return self;
}

uint64_t method lookup function for WritableAssetRegistry(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WritableAssetRegistry);
}

uint64_t sub_1B2E3322C(void *a1)
{
  sub_1B2E80498();
  sub_1B299E158();
  uint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  char v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v19 - v10;
  sub_1B2E336A8((uint64_t)v19 - v10);
  sub_1B2C58274();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v11, v1);
  id v12 = sub_1B2D50244((uint64_t)v9, a1);
  if (v2)
  {
    uint64_t v13 = sub_1B29A2B00();
    return v14(v13);
  }
  else
  {
    id v16 = v12;
    uint64_t v17 = sub_1B29A2B00();
    v18(v17);
    type metadata accessor for EntityRerankerModel();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v16;
  }
  return result;
}

void sub_1B2E333C0()
{
}

id sub_1B2E333CC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x63735F7475706E69 && a2 == 0xEC0000007365726FLL;
  if (v3 || (sub_1B2E837A8() & 1) != 0) {
    return objc_msgSend(self, sel_featureValueWithMultiArray_, *(void *)(v2 + 16));
  }
  else {
    return 0;
  }
}

uint64_t type metadata accessor for EntityRerankerModelInput()
{
  return self;
}

uint64_t sub_1B2E33510()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_featureNames);
  uint64_t v2 = sub_1B2E82B08();

  return v2;
}

id sub_1B2E33568()
{
  id v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_1B2E82348();
  id v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  return v3;
}

id sub_1B2E335D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = sub_1B2E82378();
  uint64_t v7 = v6;
  swift_retain();
  uint64_t v8 = (void *)a4(v5, v7);
  swift_release();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_1B2E3364C()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityRerankerModelOutput()
{
  return self;
}

uint64_t sub_1B2E336A8@<X0>(uint64_t a1@<X8>)
{
  sub_1B2E80498();
  sub_1B299E158();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B29A3EB4(&qword_1EB7E69E0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v12 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v13 = sub_1B2E344B4(0xD000000000000013, 0x80000001B2EF9850, 0x636C65646F6D6C6DLL, 0xE800000000000000, v12);
  if (v13)
  {
    uint64_t v14 = v13;
    sub_1B2E80448();

    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v15(v10, v7, v1);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v10, 0, 1, v1);
    uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v1);
    if (result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(a1, v10, v1);
    }
  }
  else
  {
    uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v10, 1, 1, v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2E33874(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E9E0]), sel_init);
  uint64_t v3 = sub_1B2E338E0(a1, (uint64_t)v2);

  return v3;
}

uint64_t sub_1B2E338E0(uint64_t a1, uint64_t a2)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  id v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  id v7 = v12[0];
  if (v6)
  {
    id v8 = v6;
    type metadata accessor for EntityRerankerModelOutput();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v8;
    id v9 = v7;
  }
  else
  {
    id v10 = v12[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1B2E339B8(void *a1)
{
  type metadata accessor for EntityRerankerModelInput();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  id v3 = a1;
  uint64_t v4 = sub_1B2E33874(v2);
  swift_release();
  return v4;
}

uint64_t type metadata accessor for EntityRerankerModel()
{
  return self;
}

void sub_1B2E33AB4()
{
}

id sub_1B2E33AC0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x307475706E69 && a2 == 0xE600000000000000;
  if (v3 || (sub_1B2E837A8() & 1) != 0)
  {
    id v6 = (void *)(v2 + 16);
    return objc_msgSend(self, sel_featureValueWithMultiArray_, *v6);
  }
  BOOL v7 = a1 == 0x317475706E69 && a2 == 0xE600000000000000;
  if (v7 || (sub_1B2E837A8() & 1) != 0)
  {
    id v6 = (void *)(v2 + 24);
    return objc_msgSend(self, sel_featureValueWithMultiArray_, *v6);
  }
  return 0;
}

uint64_t sub_1B2E33BB8()
{
  return v0;
}

uint64_t sub_1B2E33BE0()
{
  sub_1B2E33BB8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for locationEncoderInput()
{
  return self;
}

id sub_1B2E33CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = sub_1B2E82378();
  uint64_t v7 = v6;
  swift_retain();
  id v8 = (void *)a4(v5, v7);
  swift_release();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t type metadata accessor for locationEncoderOutput()
{
  return self;
}

uint64_t type metadata accessor for locationEncoder()
{
  return self;
}

uint64_t sub_1B2E33D80(void *a1)
{
  sub_1B2E80498();
  sub_1B299E158();
  uint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  id v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v19 - v10;
  sub_1B2E34114((uint64_t)v19 - v10);
  sub_1B2C58274();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v11, v1);
  id v12 = sub_1B2D50244((uint64_t)v9, a1);
  if (v2)
  {
    uint64_t v13 = sub_1B29A2B00();
    return v14(v13);
  }
  else
  {
    id v16 = v12;
    uint64_t v17 = sub_1B29A2B00();
    v18(v17);
    type metadata accessor for MentionGenerationModel();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v16;
  }
  return result;
}

void sub_1B2E33F14()
{
}

id sub_1B2E33F20(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x64695F6E656B6F74 && a2 == 0xE900000000000073;
  if (v3 || (sub_1B2E837A8() & 1) != 0) {
    return objc_msgSend(self, sel_featureValueWithMultiArray_, *(void *)(v2 + 16));
  }
  else {
    return 0;
  }
}

uint64_t type metadata accessor for MentionGenerationModelInput()
{
  return self;
}

id sub_1B2E34074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = sub_1B2E82378();
  uint64_t v7 = v6;
  swift_retain();
  uint64_t v8 = (void *)a4(v5, v7);
  swift_release();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t type metadata accessor for MentionGenerationModelOutput()
{
  return self;
}

uint64_t sub_1B2E34114@<X0>(uint64_t a1@<X8>)
{
  sub_1B2E80498();
  sub_1B299E158();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B29A3EB4(&qword_1EB7E69E0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v12 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v13 = sub_1B2E344B4(0xD000000000000016, 0x80000001B2EF9950, 0x636C65646F6D6C6DLL, 0xE800000000000000, v12);
  if (v13)
  {
    uint64_t v14 = v13;
    sub_1B2E80448();

    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v15(v10, v7, v1);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v10, 0, 1, v1);
    uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v1);
    if (result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(a1, v10, v1);
    }
  }
  else
  {
    uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v10, 1, 1, v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2E342E0(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E9E0]), sel_init);
  uint64_t v3 = sub_1B2E3434C(a1, (uint64_t)v2);

  return v3;
}

uint64_t sub_1B2E3434C(uint64_t a1, uint64_t a2)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  id v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  id v7 = v12[0];
  if (v6)
  {
    id v8 = v6;
    type metadata accessor for MentionGenerationModelOutput();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v8;
    id v9 = v7;
  }
  else
  {
    id v10 = v12[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1B2E34424(void *a1)
{
  type metadata accessor for MentionGenerationModelInput();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  id v3 = a1;
  uint64_t v4 = sub_1B2E342E0(v2);
  swift_release();
  return v4;
}

uint64_t type metadata accessor for MentionGenerationModel()
{
  return self;
}

id sub_1B2E344B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  id v7 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  return v8;
}

void sub_1B2E34BC4(uint64_t a1, void *a2)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = [GDSQLEntityIterator alloc];
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v7 = (id)objc_msgSend_initWithColumns_statement_(v4, v5, 511, (uint64_t)v3, v6);
  uint64_t v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v8, (uint64_t)&v26, (uint64_t)v31, 16);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v27;
    do
    {
      uint64_t v12 = 0;
      do
      {
        if (*(void *)v27 != v11) {
          objc_enumerationMutation(v7);
        }
        id v13 = *(void **)(*((void *)&v26 + 1) + 8 * v12);
        long long v22 = 0u;
        long long v23 = 0u;
        long long v24 = 0u;
        long long v25 = 0u;
        id v14 = v13;
        uint64_t v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v14, v15, (uint64_t)&v22, (uint64_t)v30, 16);
        if (v16)
        {
          uint64_t v17 = v16;
          uint64_t v18 = *(void *)v23;
          do
          {
            uint64_t v19 = 0;
            do
            {
              if (*(void *)v23 != v18) {
                objc_enumerationMutation(v14);
              }
              (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
              ++v19;
            }
            while (v17 != v19);
            uint64_t v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(v14, v20, (uint64_t)&v22, (uint64_t)v30, 16);
          }
          while (v17);
        }

        ++v12;
      }
      while (v12 != v10);
      uint64_t v10 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v21, (uint64_t)&v26, (uint64_t)v31, 16);
    }
    while (v10);
  }
}

uint64_t gdEntityClassFromOntologyClassIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4181798](_TtC20IntelligencePlatform19GDEntityClassHelper, sel_entityClassFrom_, a1, a4, a5);
}

uint64_t gdEntityPredicateFromOntologyPredicateIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4181798](_TtC20IntelligencePlatform23GDEntityPredicateHelper, sel_entityPredicateFrom_, a1, a4, a5);
}

void sub_1B2E4057C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E40594(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E405A4(uint64_t a1)
{
}

void sub_1B2E405AC(uint64_t a1, void *a2)
{
}

void sub_1B2E406FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B2E40714(uint64_t a1, void *a2)
{
}

void sub_1B2E40C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

void sub_1B2E40CF4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1B2E41308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

void sub_1B2E41360(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1B2E41880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_1B2E418C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1B2E41DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

void sub_1B2E41E34(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void *sub_1B2E42C90()
{
  return &unk_1F0B105F8;
}

void *sub_1B2E42CF4()
{
  return &unk_1F0B105D0;
}

void *sub_1B2E42D84()
{
  return &unk_1F0B105A8;
}

void sub_1B2E430E0(uint64_t a1, void *a2)
{
  tokenizer = a2;
  CFStringRef v3 = *(const __CFString **)(a1 + 40);
  v10.length = objc_msgSend_length(*(void **)(a1 + 32), v4, v5, v6, v7);
  v10.location = 0;
  CFStringTokenizerSetString(tokenizer, v3, v10);
  ITSTokenListPopulateFromString();
  v11.location = 0;
  v11.length = 1;
  CFStringTokenizerSetString(tokenizer, @"⌘", v11);
  CFRelease(tokenizer);
}

void sub_1B2E43180()
{
  uint64_t v0 = (void *)MEMORY[0x1B3EB26F0]();
  id v1 = objc_alloc(MEMORY[0x1E4F93B60]);
  uint64_t v5 = objc_msgSend_initWithBlock_idleTimeout_(v1, v2, (uint64_t)&unk_1F0ADA380, v3, v4, 1.0);
  uint64_t v6 = (void *)qword_1E9CAF5D0;
  qword_1E9CAF5D0 = v5;
}

id sub_1B2E431E4()
{
  v18.location = 0;
  v18.length = 0;
  CFStringTokenizerRef v4 = CFStringTokenizerCreate(0, 0, v18, 0x810000uLL, 0);
  if (!v4)
  {
    CFRange v11 = objc_msgSend_currentHandler(MEMORY[0x1E4F28B00], v0, v1, v2, v3);
    uint64_t v15 = objc_msgSend_stringWithUTF8String_(NSString, v12, (uint64_t)"ITSTokenListRef _createITSListForFTSQuery(NSString *__strong)_block_invoke_2", v13, v14);
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v11, v16, (uint64_t)v15, @"GDFTSTokenize.m", 35, @"Invalid parameter not satisfying: %@", @"tokenizer");
  }
  id v5 = objc_alloc(MEMORY[0x1E4F93B70]);
  uint64_t v9 = objc_msgSend_initWithGuardedData_(v5, v6, (uint64_t)v4, v7, v8);

  return v9;
}

void sub_1B2E434A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E434C4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E434D4(uint64_t a1)
{
}

void sub_1B2E434DC(uint64_t a1, void *a2, unsigned char *a3)
{
  id v16 = a2;
  id v6 = objc_alloc((Class)objc_opt_class());
  CFRange v11 = objc_msgSend_entityIdentifier(v16, v7, v8, v9, v10);
  uint64_t v15 = objc_msgSend_initByCastingFrom_(v6, v12, (uint64_t)v11, v13, v14);

  if (v15)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v15);
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a3 = 1;
  }
}

id sub_1B2E528A0(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = NSString;
  uint64_t v6 = objc_msgSend_namePrefix(a1, a2, a3, a4, a5);
  CFRange v11 = (void *)v6;
  if (v6) {
    id v12 = (__CFString *)v6;
  }
  else {
    id v12 = &stru_1F0AE2ED0;
  }
  uint64_t v49 = v12;
  uint64_t v13 = objc_msgSend_givenName(a1, v7, v8, v9, v10);
  CFRange v18 = (void *)v13;
  if (v13) {
    uint64_t v19 = (__CFString *)v13;
  }
  else {
    uint64_t v19 = &stru_1F0AE2ED0;
  }
  uint64_t v48 = v19;
  uint64_t v20 = objc_msgSend_middleName(a1, v14, v15, v16, v17);
  long long v25 = (void *)v20;
  if (v20) {
    long long v26 = (__CFString *)v20;
  }
  else {
    long long v26 = &stru_1F0AE2ED0;
  }
  uint64_t v27 = objc_msgSend_familyName(a1, v21, v22, v23, v24);
  uint64_t v32 = (void *)v27;
  if (v27) {
    uint64_t v33 = (__CFString *)v27;
  }
  else {
    uint64_t v33 = &stru_1F0AE2ED0;
  }
  uint64_t v34 = objc_msgSend_nameSuffix(a1, v28, v29, v30, v31);
  uint64_t v39 = (void *)v34;
  if (v34) {
    uint64_t v40 = (__CFString *)v34;
  }
  else {
    uint64_t v40 = &stru_1F0AE2ED0;
  }
  uint64_t v41 = objc_msgSend_nickname(a1, v35, v36, v37, v38);
  uint64_t v45 = (void *)v41;
  if (v41) {
    objc_msgSend_stringWithFormat_(v50, v42, @"%@ %@ %@ %@ %@ %@", v43, v44, v49, v48, v26, v33, v40, v41);
  }
  else {
  uint64_t v46 = objc_msgSend_stringWithFormat_(v50, v42, @"%@ %@ %@ %@ %@ %@", v43, v44, v49, v48, v26, v33, v40, &stru_1F0AE2ED0);
  }

  return v46;
}

uint64_t sub_1B2E52CB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1B2E5E4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E5E4EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E5E4FC(uint64_t a1)
{
}

void sub_1B2E5E504(uint64_t a1, void *a2, unsigned char *a3)
{
  id v16 = a2;
  id v6 = objc_alloc((Class)objc_opt_class());
  CFRange v11 = objc_msgSend_entityIdentifier(v16, v7, v8, v9, v10);
  uint64_t v15 = objc_msgSend_initByCastingFrom_(v6, v12, (uint64_t)v11, v13, v14);

  if (v15)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v15);
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a3 = 1;
  }
}

id GDDefaultLog()
{
  if (qword_1EB7F3150[0] != -1) {
    dispatch_once(qword_1EB7F3150, &unk_1F0AE1CD0);
  }
  uint64_t v0 = (void *)qword_1EB7F30C0;

  return v0;
}

uint64_t sub_1B2E5F694(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1EB7F30C0 = (uint64_t)os_log_create(v5, "default");

  return MEMORY[0x1F41817F8]();
}

id GDSignpostLog()
{
  if (qword_1EB7F3340 != -1) {
    dispatch_once(&qword_1EB7F3340, &unk_1F0ADA340);
  }
  uint64_t v0 = (void *)qword_1EB7F3330;

  return v0;
}

uint64_t sub_1B2E5F730(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1EB7F3330 = (uint64_t)os_log_create(v5, "signpost");

  return MEMORY[0x1F41817F8]();
}

id GDViewLog()
{
  if (qword_1EB7F3328 != -1) {
    dispatch_once(&qword_1EB7F3328, &unk_1F0ADA360);
  }
  uint64_t v0 = (void *)qword_1EB7F3320;

  return v0;
}

uint64_t sub_1B2E5F7CC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1EB7F3320 = (uint64_t)os_log_create(v5, "views");

  return MEMORY[0x1F41817F8]();
}

id GDConstructionLog()
{
  if (qword_1EB7F2888[0] != -1) {
    dispatch_once(qword_1EB7F2888, &unk_1F0ADA200);
  }
  uint64_t v0 = (void *)qword_1EB7F2880;

  return v0;
}

uint64_t sub_1B2E5F868(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1EB7F2880 = (uint64_t)os_log_create(v5, "construction");

  return MEMORY[0x1F41817F8]();
}

id GDOntologyLog()
{
  if (qword_1EB7F2B90 != -1) {
    dispatch_once(&qword_1EB7F2B90, &unk_1F0ADA220);
  }
  uint64_t v0 = (void *)qword_1EB7F2860;

  return v0;
}

uint64_t sub_1B2E5F904(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1EB7F2860 = (uint64_t)os_log_create(v5, "ontology");

  return MEMORY[0x1F41817F8]();
}

id GDXPCLog()
{
  if (qword_1EB7F3348 != -1) {
    dispatch_once(&qword_1EB7F3348, &unk_1F0ADA240);
  }
  uint64_t v0 = (void *)qword_1EB7F3338;

  return v0;
}

uint64_t sub_1B2E5F9A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1EB7F3338 = (uint64_t)os_log_create(v5, "XPC");

  return MEMORY[0x1F41817F8]();
}

id GDStorageLog()
{
  if (qword_1EB7F2BA0[0] != -1) {
    dispatch_once(qword_1EB7F2BA0, &unk_1F0ADA260);
  }
  uint64_t v0 = (void *)qword_1EB7F2868;

  return v0;
}

uint64_t sub_1B2E5FA3C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1EB7F2868 = (uint64_t)os_log_create(v5, "storage");

  return MEMORY[0x1F41817F8]();
}

id GDECRLog()
{
  if (qword_1EB7F2878 != -1) {
    dispatch_once(&qword_1EB7F2878, &unk_1F0ADA280);
  }
  uint64_t v0 = (void *)qword_1EB7F2870;

  return v0;
}

uint64_t sub_1B2E5FAD8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1EB7F2870 = (uint64_t)os_log_create(v5, "ECR");

  return MEMORY[0x1F41817F8]();
}

id GDKTSLog()
{
  if (qword_1E9CAF5E8 != -1) {
    dispatch_once(&qword_1E9CAF5E8, &unk_1F0ADA2A0);
  }
  uint64_t v0 = (void *)qword_1E9CAF5E0;

  return v0;
}

uint64_t sub_1B2E5FB74(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1E9CAF5E0 = (uint64_t)os_log_create(v5, "KTS");

  return MEMORY[0x1F41817F8]();
}

id GDBehaviorLog()
{
  if (qword_1EB7F2158[0] != -1) {
    dispatch_once(qword_1EB7F2158, &unk_1F0ADA2C0);
  }
  uint64_t v0 = (void *)qword_1EB7F2150;

  return v0;
}

uint64_t sub_1B2E5FC10(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1EB7F2150 = (uint64_t)os_log_create(v5, "behavior");

  return MEMORY[0x1F41817F8]();
}

id GDKnosisLog()
{
  if (qword_1EB7EF338[0] != -1) {
    dispatch_once(qword_1EB7EF338, &unk_1F0ADA2E0);
  }
  uint64_t v0 = (void *)qword_1EB7EF330;

  return v0;
}

uint64_t sub_1B2E5FCAC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1EB7EF330 = (uint64_t)os_log_create(v5, "knosis");

  return MEMORY[0x1F41817F8]();
}

id GDAppIntentLog()
{
  if (qword_1E9CAF5F8 != -1) {
    dispatch_once(&qword_1E9CAF5F8, &unk_1F0ADA300);
  }
  uint64_t v0 = (void *)qword_1E9CAF5F0;

  return v0;
}

uint64_t sub_1B2E5FD48(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1E9CAF5F0 = (uint64_t)os_log_create(v5, "appIntent");

  return MEMORY[0x1F41817F8]();
}

id GDK2TLog()
{
  if (qword_1E9CAF608 != -1) {
    dispatch_once(&qword_1E9CAF608, &unk_1F0ADA320);
  }
  uint64_t v0 = (void *)qword_1E9CAF600;

  return v0;
}

uint64_t sub_1B2E5FDE4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1E9CAF600 = (uint64_t)os_log_create(v5, "k2t");

  return MEMORY[0x1F41817F8]();
}

id GDLifeEventLog()
{
  if (qword_1EB7EF540[0] != -1) {
    dispatch_once(qword_1EB7EF540, &unk_1F0AC2308);
  }
  uint64_t v0 = (void *)qword_1EB7E8010;

  return v0;
}

uint64_t sub_1B2E5FE80(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1EB7E8010 = (uint64_t)os_log_create(v5, "lifeEvent");

  return MEMORY[0x1F41817F8]();
}

id GDLifeEventSummaryLog()
{
  if (qword_1E9CAF618 != -1) {
    dispatch_once(&qword_1E9CAF618, &unk_1F0AC2348);
  }
  uint64_t v0 = (void *)qword_1E9CAF610;

  return v0;
}

uint64_t sub_1B2E5FF1C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1E9CAF610 = (uint64_t)os_log_create(v5, "lifeEventSummary");

  return MEMORY[0x1F41817F8]();
}

id GDGlobalKnowledgeLog()
{
  if (qword_1EB7EF1A0[0] != -1) {
    dispatch_once(qword_1EB7EF1A0, &unk_1F0AC2368);
  }
  uint64_t v0 = (void *)qword_1E9C4CA70;

  return v0;
}

uint64_t sub_1B2E5FFB8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1E9C4CA70 = (uint64_t)os_log_create(v5, "globalKnowledge");

  return MEMORY[0x1F41817F8]();
}

id GDAutonamingLog()
{
  if (qword_1E9C492E8[0] != -1) {
    dispatch_once(qword_1E9C492E8, &unk_1F0AC2388);
  }
  uint64_t v0 = (void *)qword_1E9C492E0;

  return v0;
}

uint64_t sub_1B2E60054(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5 = (const char *)objc_msgSend_UTF8String(@"com.apple.intelligenceplatform", a2, a3, a4, a5);
  qword_1E9C492E0 = (uint64_t)os_log_create(v5, "autonaming");

  return MEMORY[0x1F41817F8]();
}

void sub_1B2E60348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E60360(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E60370(uint64_t a1)
{
}

uint64_t sub_1B2E60378(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v7 = objc_msgSend_getInt64AsNSNumberForColumnAlias_(v3, v4, (uint64_t)"MD_ID", v5, v6);
  CFRange v11 = objc_msgSend_getDoubleAsNSNumberForColumnAlias_(v3, v8, (uint64_t)"rank", v9, v10);

  if (v7 && v11) {
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v12, (uint64_t)v11, (uint64_t)v7, v13);
  }
  uint64_t v14 = (unsigned __int8 *)MEMORY[0x1E4F93C08];

  return *v14;
}

uint64_t sub_1B2E60404(uint64_t a1, void *a2)
{
  return *MEMORY[0x1E4F93C10];
}

void *sub_1B2E60438()
{
  return &unk_1F0B10620;
}

void *sub_1B2E62AF0()
{
  return &unk_1F0B10648;
}

void sub_1B2E63BE8()
{
  uint64_t v0 = (void *)MEMORY[0x1B3EB26F0]();
  uint64_t v5 = objc_msgSend_processInfo(MEMORY[0x1E4F28F80], v1, v2, v3, v4);
  uint64_t v10 = objc_msgSend_processName(v5, v6, v7, v8, v9);
  CFRange v11 = (void *)qword_1EB7F3270;
  qword_1EB7F3270 = v10;
}

void sub_1B2E63E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E63E48(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E63E58(uint64_t a1)
{
}

void sub_1B2E63E60(uint64_t *a1, void *a2)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v6 = objc_msgSend_accessInfoForKey_useCase_(v3, v4, a1[4], a1[5], v5);
  uint64_t v7 = *(void *)(a1[7] + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (!*(void *)(*(void *)(a1[7] + 8) + 40))
  {
    uint64_t v10 = a1[5];
    uint64_t v11 = *(void **)(a1[6] + 16);
    uint64_t v12 = a1[4];
    id v30 = 0;
    uint64_t v13 = objc_msgSend_accessInfoForViewName_useCase_error_(v11, v9, v12, v10, (uint64_t)&v30);
    id v14 = v30;
    id v15 = v30;
    uint64_t v16 = *(void *)(a1[7] + 8);
    uint64_t v17 = *(void **)(v16 + 40);
    *(void *)(v16 + 40) = v13;

    uint64_t v22 = *(void **)(*(void *)(a1[7] + 8) + 40);
    if (v22)
    {
      int v23 = objc_msgSend_alwaysAvailable(v22, v18, v19, v20, v21);
      uint64_t v25 = *(void *)(*(void *)(a1[7] + 8) + 40);
      uint64_t v26 = a1[4];
      uint64_t v27 = a1[5];
      if (v23) {
        objc_msgSend_setPersistentInfo_forKey_useCase_(v3, v24, v25, v26, v27);
      }
      else {
        objc_msgSend_setInfo_forKey_useCase_(v3, v24, v25, v26, v27);
      }
    }
    else
    {
      long long v28 = GDViewLog();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        uint64_t v29 = a1[4];
        *(_DWORD *)buf = 138412546;
        uint64_t v32 = v29;
        __int16 v33 = 2112;
        id v34 = v15;
        _os_log_error_impl(&dword_1B2996000, v28, OS_LOG_TYPE_ERROR, "Could not retrieve access info for view name %@ error: %@", buf, 0x16u);
      }

      objc_storeStrong((id *)(*(void *)(a1[8] + 8) + 40), v14);
    }
  }
}

void sub_1B2E641BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E641E0(uint64_t *a1, void *a2)
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v6 = objc_msgSend_objectForKey_useCase_(v3, v4, a1[4], a1[5], v5);
  uint64_t v7 = *(void *)(a1[7] + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (!*(void *)(*(void *)(a1[7] + 8) + 40))
  {
    uint64_t IsSandboxed = objc_msgSend_currentProcessIsSandboxed(GDRemoteViewAccessRequester, v9, v10, v11, v12);
    int isEqualToString = objc_msgSend_isEqualToString_((void *)a1[4], v14, @"standardFeatureView", v15, v16);
    uint64_t v19 = *(void **)(a1[6] + 16);
    if (isEqualToString)
    {
      uint64_t v20 = a1[5];
      uint64_t v50 = 0;
      uint64_t v21 = (id *)&v50;
      uint64_t v22 = objc_msgSend_accessTokenForFeaturesWithIsSandboxed_useCase_error_(v19, v17, IsSandboxed, v20, (uint64_t)&v50);
    }
    else
    {
      uint64_t v23 = a1[4];
      uint64_t v24 = a1[5];
      uint64_t v49 = 0;
      uint64_t v21 = (id *)&v49;
      uint64_t v22 = objc_msgSend_accessTokenForViewName_isSandboxed_useCase_error_(v19, v17, v23, IsSandboxed, v24, &v49);
    }
    uint64_t v25 = (void *)v22;
    id v26 = *v21;
    id v27 = *v21;
    if (v25)
    {
      long long v28 = [_GDViewAccessAssertion alloc];
      uint64_t v29 = a1[4];
      id v48 = v27;
      uint64_t v31 = objc_msgSend_initWithViewName_extensionToken_error_(v28, v30, v29, (uint64_t)v25, (uint64_t)&v48);
      id v32 = v48;
      id v33 = v48;

      uint64_t v34 = *(void *)(a1[7] + 8);
      uint64_t v35 = *(void **)(v34 + 40);
      *(void *)(v34 + 40) = v31;

      uint64_t v40 = *(void **)(*(void *)(a1[7] + 8) + 40);
      if (v40)
      {
        int v41 = objc_msgSend_alwaysAvailable(v40, v36, v37, v38, v39);
        uint64_t v43 = *(void *)(*(void *)(a1[7] + 8) + 40);
        uint64_t v44 = a1[4];
        uint64_t v45 = a1[5];
        if (v41) {
          objc_msgSend_setPersistentObject_forKey_useCase_(v3, v42, v43, v44, v45);
        }
        else {
          objc_msgSend_setObject_forKey_useCase_(v3, v42, v43, v44, v45);
        }
      }
      else
      {
        objc_storeStrong((id *)(*(void *)(a1[8] + 8) + 40), v32);
      }
      id v27 = v33;
    }
    else
    {
      uint64_t v46 = GDViewLog();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
      {
        uint64_t v47 = a1[4];
        *(_DWORD *)buf = 138412546;
        uint64_t v52 = v47;
        __int16 v53 = 2112;
        id v54 = v27;
        _os_log_error_impl(&dword_1B2996000, v46, OS_LOG_TYPE_ERROR, "Could not retrieve access token for view name %@ error: %@", buf, 0x16u);
      }

      objc_storeStrong((id *)(*(void *)(a1[8] + 8) + 40), v26);
    }
  }
}

uint64_t sub_1B2E64548()
{
  return mach_timebase_info((mach_timebase_info_t)&dword_1EB7F3278);
}

void sub_1B2E645A0()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1B3EB26F0]();
  getpid();
  int v1 = sandbox_check();
  if (v1 == -1)
  {
    uint64_t v2 = GDViewLog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
    {
      id v3 = __error();
      uint64_t v4 = strerror(*v3);
      int v5 = 136315138;
      uint64_t v6 = v4;
      _os_log_fault_impl(&dword_1B2996000, v2, OS_LOG_TYPE_FAULT, "Error checking sandbox policy: %s", (uint8_t *)&v5, 0xCu);
    }
  }
  dword_1EB7F3318 = v1 != 0;
}

void sub_1B2E64E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E64E48(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E64E58(uint64_t a1)
{
}

uint64_t sub_1B2E64E60(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v6 = objc_msgSend_getNSStringForColumnName_table_(v3, v4, (uint64_t)"viewName", (uint64_t)"kv", v5);
  uint64_t v9 = objc_msgSend_getNSStringForColumnName_table_(v3, v7, (uint64_t)"featureName", (uint64_t)"kv", v8);
  uint64_t v12 = objc_msgSend_getNSStringForColumnName_table_(v3, v10, (uint64_t)"subidentifierName", (uint64_t)"kv", v11);

  if (v6 && v9 && v12)
  {
    if (!objc_msgSend_length(v12, v13, v14, v15, v16))
    {

      uint64_t v12 = 0;
    }
    uint64_t v17 = *(void **)(a1 + 32);
    CFRange v18 = [GDFeatureKey alloc];
    uint64_t v20 = objc_msgSend_initWithViewName_featureName_subidentifierName_(v18, v19, (uint64_t)v6, (uint64_t)v9, (uint64_t)v12);
    objc_msgSend_addObject_(v17, v21, (uint64_t)v20, v22, v23);
  }
  uint64_t v24 = (unsigned __int8 *)MEMORY[0x1E4F93C08];

  return *v24;
}

uint64_t sub_1B2E64F60(uint64_t a1, void *a2)
{
  return *MEMORY[0x1E4F93C10];
}

void sub_1B2E651BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B2E651D4(uint64_t a1, void *a2)
{
  id v29 = a2;
  uint64_t v7 = objc_msgSend_viewName(*(void **)(a1 + 32), v3, v4, v5, v6);
  objc_msgSend_bindNamedParam_toNSString_(v29, v8, (uint64_t)":viewName", (uint64_t)v7, v9);

  uint64_t v14 = objc_msgSend_featureName(*(void **)(a1 + 32), v10, v11, v12, v13);
  objc_msgSend_bindNamedParam_toNSString_(v29, v15, (uint64_t)":featureName", (uint64_t)v14, v16);

  uint64_t v21 = objc_msgSend_subidentifierName(*(void **)(a1 + 32), v17, v18, v19, v20);

  if (v21)
  {
    id v26 = objc_msgSend_subidentifierName(*(void **)(a1 + 32), v22, v23, v24, v25);
    objc_msgSend_bindNamedParam_toNSString_(v29, v27, (uint64_t)":subidentifierName", (uint64_t)v26, v28);
  }
}

uint64_t sub_1B2E652A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = objc_msgSend_getNSDataForColumnName_table_(a2, (const char *)a2, (uint64_t)"value", (uint64_t)"kv", a5);
  if (v6)
  {
    uint64_t v7 = (void *)MEMORY[0x1E4F28DC0];
    uint64_t v8 = objc_opt_class();
    id v17 = 0;
    uint64_t v10 = objc_msgSend_unarchivedObjectOfClass_fromData_error_(v7, v9, v8, (uint64_t)v6, (uint64_t)&v17);
    id v14 = v17;
    if (v10) {
      objc_msgSend_addObject_(*(void **)(a1 + 32), v11, (uint64_t)v10, v12, v13);
    }
  }
  uint64_t v15 = (unsigned __int8 *)MEMORY[0x1E4F93C08];

  return *v15;
}

uint64_t sub_1B2E65364(uint64_t a1, void *a2)
{
  return *MEMORY[0x1E4F93C10];
}

uint64_t sub_1B2E654FC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_msgSend_objectForIdentifier_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4, a5);
  if (objc_claimAutoreleasedReturnValue()) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }

  return MEMORY[0x1F41817F8]();
}

void sub_1B2E65868(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v116 = *(id *)(a1 + 40);
  id v8 = a2;
  if (!v3) {
    goto LABEL_19;
  }
  uint64_t v9 = objc_msgSend_objectFTSTerm(v116, v4, v5, v6, v7);

  if (v9)
  {
    id v14 = objc_msgSend_objectFTSTerm(v116, v10, v11, v12, v13);
    objc_msgSend_bindNamedParam_toNSString_(v8, v15, (uint64_t)":match", (uint64_t)v14, v16);
  }
  else
  {
    id v17 = objc_msgSend_objects(v116, v10, v11, v12, v13);
    uint64_t v22 = objc_msgSend_count(v17, v18, v19, v20, v21);

    id v27 = objc_msgSend_objects(v116, v23, v24, v25, v26);
    id v14 = v27;
    if (v22 == 1)
    {
      id v32 = objc_msgSend_objectAtIndexedSubscript_(v27, v28, 0, v30, v31);
      objc_msgSend_bindNamedParam_toNSString_(v8, v33, (uint64_t)":object", (uint64_t)v32, v34);
    }
    else
    {
      uint64_t v35 = objc_msgSend_count(v27, v28, v29, v30, v31);

      uint64_t v40 = v116;
      if (!v35) {
        goto LABEL_9;
      }
      id v14 = objc_msgSend_objects(v116, v36, v37, v38, v39);
      objc_msgSend_bindNamedParam_toNSArray_(v8, v41, (uint64_t)":objects", (uint64_t)v14, v42);
    }
  }

  uint64_t v40 = v116;
LABEL_9:
  uint64_t v43 = objc_msgSend_predicates(v40, v36, v37, v38, v39);
  uint64_t v48 = objc_msgSend_count(v43, v44, v45, v46, v47);

  __int16 v53 = objc_msgSend_predicates(v116, v49, v50, v51, v52);
  uint64_t v58 = v53;
  if (v48 == 1)
  {
    uint64_t v59 = objc_msgSend_objectAtIndexedSubscript_(v53, v54, 0, v56, v57);
    objc_msgSend_bindNamedParam_toNSString_(v8, v60, (uint64_t)":predicate", (uint64_t)v59, v61);

LABEL_13:
    goto LABEL_14;
  }
  uint64_t v62 = objc_msgSend_count(v53, v54, v55, v56, v57);

  if (v62)
  {
    uint64_t v58 = objc_msgSend_predicates(v116, v63, v64, v65, v66);
    objc_msgSend_bindNamedParam_toNSArray_(v8, v67, (uint64_t)":predicates", (uint64_t)v58, v68);
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v69 = objc_msgSend_subjects(v116, v63, v64, v65, v66);
  uint64_t v74 = objc_msgSend_count(v69, v70, v71, v72, v73);

  if (v74 == 1)
  {
    uint64_t v79 = [GDEntityIdentifier alloc];
    uint64_t v84 = objc_msgSend_subjects(v116, v80, v81, v82, v83);
    uint64_t v88 = objc_msgSend_objectAtIndexedSubscript_(v84, v85, 0, v86, v87);
    uint64_t v92 = objc_msgSend_initWithString_(v79, v89, (uint64_t)v88, v90, v91);

    uint64_t v97 = objc_msgSend_intValue(v92, v93, v94, v95, v96);
    objc_msgSend_bindNamedParam_toInt64_(v8, v98, (uint64_t)":subject", v97, v99);
  }
  else
  {
    uint64_t v100 = objc_msgSend_subjects(v116, v75, v76, v77, v78);
    uint64_t v105 = objc_msgSend_count(v100, v101, v102, v103, v104);

    if (!v105) {
      goto LABEL_19;
    }
    uint64_t v92 = objc_msgSend_subjects(v116, v106, v107, v108, v109);
    uint64_t v113 = objc_msgSend__pas_mappedArrayWithTransform_(v92, v110, (uint64_t)&unk_1F0AE1DD0, v111, v112);
    objc_msgSend_bindNamedParam_toNSArray_(v8, v114, (uint64_t)":subjects", (uint64_t)v113, v115);
  }
LABEL_19:
}

uint64_t sub_1B2E65B24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v25 = 0;
  uint64_t Int64ForColumnName_table = objc_msgSend_getInt64ForColumnName_table_(a2, (const char *)a2, (uint64_t)"subject", 0, a5);
  uint64_t v7 = [GDEntityIdentifier alloc];
  uint64_t v11 = objc_msgSend_initWithValue_(v7, v8, Int64ForColumnName_table, v9, v10);
  uint64_t v16 = objc_msgSend_entityClass(v11, v12, v13, v14, v15);
  uint64_t v21 = (unsigned __int8 *)MEMORY[0x1E4F93C08];
  if (v16 == *(void *)(*(void *)(a1 + 32) + 32))
  {
    uint64_t v22 = *(void *)(a1 + 40);
    uint64_t v23 = objc_msgSend_stringValue(v11, v17, v18, v19, v20);
    (*(void (**)(uint64_t, void *, char *))(v22 + 16))(v22, v23, &v25);

    if (v25) {
      uint64_t v21 = (unsigned __int8 *)MEMORY[0x1E4F93C10];
    }
  }

  return *v21;
}

id sub_1B2E65BF0(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [GDEntityIdentifier alloc];
  uint64_t v7 = objc_msgSend_initWithString_(v3, v4, (uint64_t)v2, v5, v6);

  id v8 = NSNumber;
  uint64_t v13 = objc_msgSend_intValue(v7, v9, v10, v11, v12);
  id v17 = objc_msgSend_numberWithUnsignedLongLong_(v8, v14, v13, v15, v16);

  return v17;
}

id sub_1B2E65D74(uint64_t a1, int a2)
{
  v26[9] = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v4 = objc_opt_new();
    v25[0] = &unk_1F0B106E8;
    v25[1] = &unk_1F0B10700;
    v26[0] = @"subject";
    v26[1] = @"predicate";
    v25[2] = &unk_1F0B10718;
    v25[3] = &unk_1F0B10730;
    void v26[2] = @"relationshipId";
    v26[3] = @"relationshipPredicate";
    v25[4] = &unk_1F0B10748;
    v25[5] = &unk_1F0B10760;
    v26[4] = @"object";
    uint64_t v26[5] = @"sources";
    unsigned char v25[6] = &unk_1F0B10778;
    v25[7] = &unk_1F0B10790;
    void v26[6] = @"confidence";
    v26[7] = @"sourceDuplicates";
    v25[8] = &unk_1F0B107A8;
    v26[8] = @"timestamp";
    uint64_t v9 = objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E4F1C9E8], v5, (uint64_t)v26, (uint64_t)v25, 9);
    uint64_t v10 = 1;
    do
    {
      if ((v10 & a2) != 0)
      {
        uint64_t v11 = objc_msgSend_numberWithInt_(NSNumber, v6, v10, v7, v8);
        uint64_t v15 = objc_msgSend_objectForKeyedSubscript_(v9, v12, (uint64_t)v11, v13, v14);

        if (!v15)
        {
          uint64_t v21 = objc_msgSend_currentHandler(MEMORY[0x1E4F28B00], v16, v17, v18, v19);
          objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v21, v22, (uint64_t)sel_columnQueryStringForColumns_, a1, @"GDSQLGraphObjectRetriever.m", 66, @"Invalid parameter not satisfying: %@", @"columnName");
        }
        objc_msgSend_addObject_(v4, v16, (uint64_t)v15, v18, v19);
      }
      BOOL v20 = v10 >= 0x81;
      uint64_t v10 = (2 * v10);
    }
    while (!v20);
    uint64_t v23 = objc_msgSend__pas_componentsJoinedByString_(v4, v6, @",", v7, v8);
  }
  else
  {
    uint64_t v23 = 0;
  }

  return v23;
}

void sub_1B2E65FD0(void *a1, void *a2)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  objc_msgSend_bindNamedParam_toInt64_(v3, v4, (uint64_t)":entityClassIdentifier", *(void *)(a1[4] + 32), v5);
  uint64_t v10 = objc_msgSend_entityClassOffset(GDEntityIdentifier, v6, v7, v8, v9);
  objc_msgSend_bindNamedParam_toInt64_(v3, v11, (uint64_t)":classOffset", v10, v12);
  uint64_t v13 = [GDSQLEntityIterator alloc];
  uint64_t v16 = objc_msgSend_initWithColumns_statement_(v13, v14, a1[6], (uint64_t)v3, v15);
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v17 = v16;
  uint64_t v19 = objc_msgSend_countByEnumeratingWithState_objects_count_(v17, v18, (uint64_t)&v33, (uint64_t)v37, 16);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = *(void *)v34;
    while (2)
    {
      for (uint64_t i = 0; i != v20; ++i)
      {
        if (*(void *)v34 != v21) {
          objc_enumerationMutation(v17);
        }
        uint64_t v23 = *(void *)(*((void *)&v33 + 1) + 8 * i);
        uint64_t v24 = (void *)MEMORY[0x1B3EB26F0]();
        id v25 = objc_alloc((Class)objc_opt_class());
        uint64_t v29 = objc_msgSend_initWithTriplesIterator_(v25, v26, v23, v27, v28);
        if (v29)
        {
          char v32 = 0;
          uint64_t v30 = (void *)MEMORY[0x1B3EB26F0]();
          (*(void (**)(void))(a1[5] + 16))();
          if (v32)
          {

            goto LABEL_12;
          }
        }
      }
      uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v17, v31, (uint64_t)&v33, (uint64_t)v37, 16);
      if (v20) {
        continue;
      }
      break;
    }
  }
LABEL_12:
}

void sub_1B2E66350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E66374(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E66384(uint64_t a1)
{
}

void sub_1B2E6638C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v9 = objc_msgSend_intValue(v3, v5, v6, v7, v8);
  objc_msgSend_bindNamedParam_toInt64_(v4, v10, (uint64_t)":subject", v9, v11);
  uint64_t v12 = [GDSQLTripleRowIterator alloc];
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v18 = objc_msgSend_stringValue(*(void **)(a1 + 32), v14, v15, v16, v17);
  id v27 = (id)objc_msgSend_initWithColumns_statement_subjectOverride_(v12, v19, v13, (uint64_t)v4, (uint64_t)v18);

  id v20 = objc_alloc((Class)objc_opt_class());
  uint64_t v24 = objc_msgSend_initWithTriplesIterator_(v20, v21, (uint64_t)v27, v22, v23);
  uint64_t v25 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v26 = *(void **)(v25 + 40);
  *(void *)(v25 + 40) = v24;
}

uint64_t sub_1B2E66588(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_bindNamedParam_toNSString_(a2, (const char *)a2, (uint64_t)":entityClassIdentifierName", *(void *)(*(void *)(a1 + 32) + 24), a5);
}

uint64_t sub_1B2E665A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = objc_msgSend_getNSStringForColumnName_table_(a2, (const char *)a2, (uint64_t)"subject", 0, a5);
  if (v6) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  uint64_t v7 = (unsigned __int8 *)MEMORY[0x1E4F93C08];

  return *v7;
}

id *sub_1B2E66628(id *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  if (a1)
  {
    v17.receiver = a1;
    v17.super_class = (Class)GDSQLGraphObjectRetriever;
    uint64_t v15 = (id *)objc_msgSendSuper2(&v17, sel_init);
    a1 = v15;
    if (v15)
    {
      objc_storeStrong(v15 + 1, a2);
      objc_storeStrong(a1 + 2, a3);
      objc_storeStrong(a1 + 3, a4);
      a1[4] = a5;
      a1[5] = a6;
    }
  }

  return a1;
}

id sub_1B2E66874(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a1 || a2[a1 + 8] < 0)
  {
    id v8 = 0;
  }
  else
  {
    uint64_t v5 = objc_msgSend_getDoubleAsNSNumberForColumn_(*(void **)(a1 + 24), a2, a2[a1 + 8], a4, a5);
    uint64_t v6 = (void *)v5;
    uint64_t v7 = &unk_1F0B107D8;
    if (v5) {
      uint64_t v7 = (void *)v5;
    }
    id v8 = v7;
  }

  return v8;
}

__CFString *sub_1B2E669A8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a1 || a2[a1 + 8] < 0)
  {
    id v8 = 0;
  }
  else
  {
    uint64_t v5 = objc_msgSend_getNSStringForColumn_(*(void **)(a1 + 24), a2, a2[a1 + 8], a4, a5);
    uint64_t v6 = (void *)v5;
    uint64_t v7 = &stru_1F0AE2ED0;
    if (v5) {
      uint64_t v7 = (__CFString *)v5;
    }
    id v8 = v7;
  }

  return v8;
}

void sub_1B2E670B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v6 = *(void *)(a1 + 88);
    if (v6)
    {
      for (unsigned int i = 51; i > 1; --i)
      {
        id v8 = (sqlite3_stmt *)objc_msgSend_stmt(*(void **)(v6 + 24), a2, a3, a4, a5);
        int v9 = sqlite3_step(v8);
        if (v9 != 5)
        {
          if (v9 != 6) {
            break;
          }
          usleep(0x186A0u);
        }
      }
      if (v9 != 100)
      {
        if (v9 != 101)
        {
          uint64_t v10 = GDViewLog();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          {
            v11[0] = 67109120;
            v11[1] = v9;
            _os_log_error_impl(&dword_1B2996000, v10, OS_LOG_TYPE_ERROR, "SQLITE ERROR %d\n", (uint8_t *)v11, 8u);
          }
        }
        *(unsigned char *)(v6 + 32) = 1;
      }
    }
    sub_1B2E6720C(a1);
  }
}

void sub_1B2E6720C(uint64_t a1)
{
  if (a1)
  {
    objc_storeStrong((id *)(a1 + 16), *(id *)(a1 + 8));
    id v2 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = 0;

    id v3 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = 0;

    id v4 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = 0;

    uint64_t v5 = *(void **)(a1 + 48);
    *(void *)(a1 + 48) = 0;

    uint64_t v6 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = 0;

    uint64_t v7 = *(void **)(a1 + 64);
    *(void *)(a1 + 64) = 0;

    id v8 = *(void **)(a1 + 72);
    *(void *)(a1 + 72) = 0;

    int v9 = *(void **)(a1 + 80);
    *(void *)(a1 + 80) = 0;
  }
}

id *sub_1B2E67624(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)GDLazyGraphTripleRow;
    id v8 = (id *)objc_msgSendSuper2(&v10, sel_init);
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 1, a3);
      objc_storeStrong(a1 + 11, a2);
    }
  }

  return a1;
}

unsigned char *sub_1B2E67904(unsigned char *a1, int a2, void *a3)
{
  id v6 = a3;
  if (a1)
  {
    v11.receiver = a1;
    v11.super_class = (Class)GDLazyGraphTripleRowCursor;
    id v7 = objc_msgSendSuper2(&v11, sel_init);
    a1 = v7;
    if (v7)
    {
      uint64_t v8 = 0;
      int v9 = 0;
      *((void *)v7 + 1) = -1;
      *((unsigned char *)v7 + 16) = -1;
      do
      {
        if (((1 << v8) & a2) != 0) {
          *((unsigned char *)v7 + v8 + 8) = v9++;
        }
        ++v8;
      }
      while (v8 != 9);
      objc_storeStrong((id *)v7 + 3, a3);
      a1[32] = 0;
    }
  }

  return a1;
}

unsigned char *sub_1B2E679C0(unsigned char *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)GDSQLTripleRowIterator;
    id v5 = objc_msgSendSuper2(&v7, sel_init);
    a1 = v5;
    if (v5)
    {
      objc_storeStrong((id *)v5 + 1, a2);
      a1[16] = 0;
    }
  }

  return a1;
}

uint64_t sub_1B2E67FC4(uint64_t a1, void *a2)
{
  char v25 = 0;
  id v3 = a2;
  id v6 = objc_msgSend_getNSStringForColumnName_table_(v3, v4, (uint64_t)"topicId", 0, v5);
  objc_msgSend_getDoubleForColumnName_table_(v3, v7, (uint64_t)"score", 0, v8);
  double v10 = v9;
  id v13 = objc_msgSend_getNSStringForColumnName_table_(v3, v11, (uint64_t)"most_recent_documentId", 0, v12);

  if (!v6)
  {
    uint64_t v19 = GDViewLog();
    if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
LABEL_7:

      uint64_t v18 = *MEMORY[0x1E4F93C08];
      goto LABEL_8;
    }
    __int16 v24 = 0;
    id v20 = "Encountered nil topicId while enumerating topics -- skipping";
    uint64_t v21 = (uint8_t *)&v24;
LABEL_10:
    _os_log_error_impl(&dword_1B2996000, v19, OS_LOG_TYPE_ERROR, v20, v21, 2u);
    goto LABEL_7;
  }
  if (!v13)
  {
    uint64_t v19 = GDViewLog();
    if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      goto LABEL_7;
    }
    __int16 v23 = 0;
    id v20 = "Encountered nil mostRecentDocId while enumerating topics -- skipping";
    uint64_t v21 = (uint8_t *)&v23;
    goto LABEL_10;
  }
  id v14 = [GDTopicViewTopic alloc];
  objc_super v17 = objc_msgSend_initWithTopicIdentifier_topicScore_mostRecentDocumentId_(v14, v15, (uint64_t)v6, (uint64_t)v13, v16, v10);
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v18 = *MEMORY[0x1E4F93C08];

LABEL_8:
  return v18;
}

void sub_1B2E68E54()
{
  uint64_t v0 = (void *)MEMORY[0x1B3EB26F0]();
  int v1 = [GDViewService alloc];
  id v6 = objc_msgSend_clientService(GDSwiftViewService, v2, v3, v4, v5);
  uint64_t v10 = objc_msgSend_initWithSwiftViewService_(v1, v7, (uint64_t)v6, v8, v9);
  objc_super v11 = (void *)qword_1EB7F2F30;
  qword_1EB7F2F30 = v10;
}

uint64_t sub_1B2E69DD0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_addObject_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4, a5);
}

void *sub_1B2E69DDC()
{
  return &unk_1F0B106C0;
}

void sub_1B2E69EA8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v7 = a2;
  objc_msgSend_linkEntitiesForPerson_(v3, v4, (uint64_t)v7, v5, v6);
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void *sub_1B2E69F20()
{
  return &unk_1F0B10698;
}

void sub_1B2E6A114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E6A138(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E6A148(uint64_t a1)
{
}

void sub_1B2E6A150(uint64_t a1, void *a2, unsigned char *a3)
{
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  id v6 = a2;
  long long v49 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  objc_super v11 = objc_msgSend_visualIdentifierObjects(v6, v7, v8, v9, v10, 0);
  uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v12, (uint64_t)&v49, (uint64_t)v53, 16);
  if (v13)
  {
    uint64_t v18 = v13;
    uint64_t v19 = *(void *)v50;
    while (2)
    {
      uint64_t v20 = 0;
      do
      {
        if (*(void *)v50 != v19) {
          objc_enumerationMutation(v11);
        }
        uint64_t v21 = objc_msgSend_visualIdentifier(*(void **)(*((void *)&v49 + 1) + 8 * v20), v14, v15, v16, v17);
        char isEqual = objc_msgSend_isEqual_(v21, v22, *(void *)(a1 + 32), v23, v24);

        if (isEqual)
        {

          objc_msgSend_linkEntitiesForPerson_(*(void **)(a1 + 40), v41, (uint64_t)v6, v42, v43);
          goto LABEL_12;
        }
        ++v20;
      }
      while (v18 != v20);
      uint64_t v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v14, (uint64_t)&v49, (uint64_t)v53, 16);
      if (v18) {
        continue;
      }
      break;
    }
  }

  objc_msgSend_linkEntitiesForPerson_(*(void **)(a1 + 40), v26, (uint64_t)v6, v27, v28);
  long long v33 = objc_msgSend_contactIdentifiers(v6, v29, v30, v31, v32);
  if (objc_msgSend_containsObject_(v33, v34, *(void *)(a1 + 32), v35, v36))
  {
  }
  else
  {
    uint64_t v44 = objc_msgSend_conversationIdentifiers(v6, v37, v38, v39, v40);
    char v48 = objc_msgSend_containsObject_(v44, v45, *(void *)(a1 + 32), v46, v47);

    if ((v48 & 1) == 0) {
      goto LABEL_13;
    }
  }
LABEL_12:
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  *a3 = 1;
LABEL_13:
}

void *sub_1B2E6A308()
{
  return &unk_1F0B10670;
}

void sub_1B2E6B12C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E6B150(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E6B160(uint64_t a1)
{
}

void sub_1B2E6B168(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCAssetRegistryService: error during overrideAssetEntryForAssetId call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E6B234(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E6B510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E6B534(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCAssetRegistryService: error during assetEntryDataForAssetId call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E6B600(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E6B704(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E6B854(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E6B874(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCAssetRegistryServer invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    objc_sync_enter(v5);
    id v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E6B918()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCAssetRegistryServer interrupted.", v1, 2u);
  }
}

void sub_1B2E6BC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E6BC88(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E6BC98(uint64_t a1)
{
}

void sub_1B2E6BCA0(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCCoordinationService: error during migrateViewDatabases call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E6BD84(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E6C00C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1B2E6C03C(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCCoordinationService: error during streamsUpdated call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E6C120(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E6C3BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E6C3EC(uint64_t a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = objc_msgSend_numberWithBool_(NSNumber, v5, *(unsigned __int8 *)(a1 + 56), v6, v7);
    int v13 = 138412802;
    uint64_t v14 = v11;
    __int16 v15 = 2112;
    uint64_t v16 = v12;
    __int16 v17 = 2112;
    id v18 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCCoordinationService: error during streamUpdatedWithStreamName call: %@ %@: %@", (uint8_t *)&v13, 0x20u);
  }
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v3;
  id v10 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
}

void sub_1B2E6C50C(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E6C7A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E6C7D4(void *a1, void *a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v8 = a1[4];
    uint64_t v9 = a1[5];
    int v10 = 138412802;
    uint64_t v11 = v8;
    __int16 v12 = 2112;
    uint64_t v13 = v9;
    __int16 v14 = 2112;
    id v15 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCCoordinationService: error during sourceUpdated call: %@ %@: %@", (uint8_t *)&v10, 0x20u);
  }

  uint64_t v5 = *(void *)(a1[6] + 8);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(a1[7] + 8) + 24) = 0;
}

void sub_1B2E6C8D0(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E6CAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E6CB0C(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCCoordinationService: error during graphUpdated call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E6CBF0(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E6CC8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E6CDDC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E6CDFC(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "GDXPCCoordinationService: Connection invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v5 = WeakRetained;
    objc_sync_enter(v5);
    uint64_t v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E6CEA0()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "GDXPCCoordinationService: Connection interrupted.", v1, 2u);
  }
}

void sub_1B2E6D290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E6D2B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E6D2C4(uint64_t a1)
{
}

void sub_1B2E6D2CC(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCEntityResolutionService: error during runTest call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E6D398(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E6D6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E6D6C8(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCEntityResolutionService: error during runTest call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E6D794(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E6DAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E6DAC4(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCEntityResolutionService: error during runTest call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E6DB90(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E6DE58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E6DE7C(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCEntityResolutionService: error during runTest call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E6DF48(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E6DFE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E6E134(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E6E154(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCEntityResolutionService invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v5 = WeakRetained;
    objc_sync_enter(v5);
    id v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E6E1F8()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCEntityResolutionService interrupted.", v1, 2u);
  }
}

void sub_1B2E6E59C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E6E5B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E6E5C4(uint64_t a1)
{
}

void sub_1B2E6E5CC(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCEventLogService: error during logInstantWithId call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E6E698(uint64_t a1, int a2, id obj)
{
}

void sub_1B2E6E8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B2E6E8E8(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCEventLogService: error during logEndWithId call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E6E9B4(uint64_t a1, int a2, id obj)
{
}

void sub_1B2E6EBB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B2E6EBC8(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCEventLogService: error during logStartWithId call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E6EC94(uint64_t a1, int a2, id obj)
{
}

void sub_1B2E6ED24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E6EE74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E6EE94(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCEventLogServer invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v5 = WeakRetained;
    objc_sync_enter(v5);
    id v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E6EF38()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCEventLogServer interrupted.", v1, 2u);
  }
}

void sub_1B2E6F2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E6F2D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E6F2E4(uint64_t a1)
{
}

void sub_1B2E6F2EC(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCFeedbackService: error during logWithFeedbackData call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E6F3B8(uint64_t a1, int a2, id obj)
{
}

void sub_1B2E6F448(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E6F598(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E6F5B8(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCFeedbackServer invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v5 = WeakRetained;
    objc_sync_enter(v5);
    id v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E6F65C()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCFeedbackServer interrupted.", v1, 2u);
  }
}

void sub_1B2E6F9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E6F9F8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E6FA08(uint64_t a1)
{
}

void sub_1B2E6FA10(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCGraphSimulationService: error during mocking triples for entity tagging call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E6FAF4(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E6FB90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E6FCE0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E6FD00(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCGraphSimulationService invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v5 = WeakRetained;
    objc_sync_enter(v5);
    id v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E6FDA4()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCGraphSimulationService interrupted.", v1, 2u);
  }
}

void sub_1B2E70164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E70188(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E70198(uint64_t a1)
{
}

void sub_1B2E701A0(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInferenceSupportService: error during assetEntryDataForAssetId call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E7026C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E70370(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E704C0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E704E0(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCInferenceSupportServer invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    objc_sync_enter(v5);
    id v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E70584()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCInferenceSupportServer interrupted.", v1, 2u);
  }
}

void sub_1B2E708D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E708F4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E70904(uint64_t a1)
{
}

void sub_1B2E7090C(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewValidate call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E709D8(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E70BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E70BFC(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewDumpState call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E70CE0(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E70F44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E70F68(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewRunUpdate: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E71054(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E71328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E71354(void *a1, void *a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v8 = a1[4];
    int v9 = 138412546;
    uint64_t v10 = v8;
    __int16 v11 = 2112;
    id v12 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewSetEnabled [name=%@]: %@", (uint8_t *)&v9, 0x16u);
  }

  uint64_t v5 = *(void *)(a1[5] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 0;
}

void sub_1B2E71448(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E716C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E716EC(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewClearAllData call: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  int v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E717D8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E71A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E71A64(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewStop: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E71B48(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E71DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E71DDC(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewRunUpdate: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E71EC8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E71FCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E7211C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E7213C(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCInternalBiomeServer invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    objc_sync_enter(v5);
    id v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E721E0()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCInternalBiomeServer interrupted.", v1, 2u);
  }
}

void sub_1B2E72564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E72588(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E72598(uint64_t a1)
{
}

void sub_1B2E725A0(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during featureKeysWithError call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E7266C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E72974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1B2E729A0(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 138412546;
    uint64_t v9 = v7;
    __int16 v10 = 2112;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewSql [name=%@]: %@", (uint8_t *)&v8, 0x16u);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E72A7C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  int v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  __int16 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E72D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E72D68(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewInfo call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E72E34(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  __int16 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E7309C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E730C0(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during clearEntityTaggingInjectedTags call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E731A4(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E733D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E733FC(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during showEntityTaggingInjectedTags call: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E734E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E73784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E737A8(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during injectTagForPerson call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E7388C(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E73AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E73B00(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding mockEntityRelevanceContext: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E73BE4(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E73E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1B2E73E8C(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding dumpEntityTaggingFeatures: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E73F78(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E741E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E74204(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during triggerEntityTaggingDataCollection call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E742E8(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E74590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1B2E745BC(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during generateActivityCentricLifeEvents call: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E746A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E749A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E749CC(void *a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v10 = a1[4];
    int v11 = 138412546;
    uint64_t v12 = v10;
    __int16 v13 = 2112;
    id v14 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding sampleEntityTaggingFeatures [personID=%@]: %@", (uint8_t *)&v11, 0x16u);
  }

  uint64_t v5 = *(void *)(a1[5] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(a1[6] + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E74AC8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E74E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1B2E74E5C(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v10 = a1[4];
    uint64_t v11 = a1[5];
    uint64_t v12 = a1[6];
    int v13 = 138413058;
    uint64_t v14 = v10;
    __int16 v15 = 2112;
    uint64_t v16 = v11;
    __int16 v17 = 2112;
    uint64_t v18 = v12;
    __int16 v19 = 2112;
    id v20 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding evaluate [behaviorType=%@, queryName=%@, inferenceServiceInstanceId=%@]: %@", (uint8_t *)&v13, 0x2Au);
  }

  uint64_t v5 = *(void *)(a1[7] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(a1[8] + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E74F6C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E752D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1B2E75304(uint64_t a1, void *a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 40);
    uint64_t v12 = *(void *)(a1 + 64);
    int v13 = *(unsigned __int8 *)(a1 + 72);
    int v14 = 138413314;
    uint64_t v15 = v10;
    __int16 v16 = 2112;
    uint64_t v17 = v11;
    __int16 v18 = 2048;
    uint64_t v19 = v12;
    __int16 v20 = 1024;
    int v21 = v13;
    __int16 v22 = 2112;
    id v23 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during PhotosMetadataWithStartDate [startDate=%@, endDate=%@, maxEvents=%ld, newestFirst=%d]: %@", (uint8_t *)&v14, 0x30u);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E75428(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E75790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1B2E757BC(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v10 = a1[4];
    uint64_t v11 = a1[5];
    uint64_t v12 = a1[6];
    int v13 = 138413058;
    uint64_t v14 = v10;
    __int16 v15 = 2112;
    uint64_t v16 = v11;
    __int16 v17 = 2112;
    uint64_t v18 = v12;
    __int16 v19 = 2112;
    id v20 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during ContextData fetch [startDate=%@, endDate=%@, source=%@]: %@", (uint8_t *)&v13, 0x2Au);
  }

  uint64_t v5 = *(void *)(a1[7] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(a1[8] + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E758CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E75C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_1B2E75C30(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v10 = a1[4];
    uint64_t v11 = a1[5];
    int v12 = 138412802;
    uint64_t v13 = v10;
    __int16 v14 = 2112;
    uint64_t v15 = v11;
    __int16 v16 = 2112;
    id v17 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding featurizedBehaviors [featureName=%@, behaviorType=%@]: %@", (uint8_t *)&v12, 0x20u);
  }

  uint64_t v5 = *(void *)(a1[6] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(a1[7] + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E75D34(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E76080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_1B2E760AC(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v10 = a1[4];
    uint64_t v11 = a1[5];
    int v12 = 138412802;
    uint64_t v13 = v10;
    __int16 v14 = 2112;
    uint64_t v15 = v11;
    __int16 v16 = 2112;
    id v17 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding histograms [kind=%@, behaviorType=%@]: %@", (uint8_t *)&v12, 0x20u);
  }

  uint64_t v5 = *(void *)(a1[6] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(a1[7] + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E761B0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E76518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1B2E76544(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v10 = a1[4];
    uint64_t v11 = a1[5];
    uint64_t v12 = a1[6];
    int v13 = 138413058;
    uint64_t v14 = v10;
    __int16 v15 = 2112;
    uint64_t v16 = v11;
    __int16 v17 = 2112;
    uint64_t v18 = v12;
    __int16 v19 = 2112;
    id v20 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding featurizeBehavior [type=%@, identifier=%@, date=%@]: %@", (uint8_t *)&v13, 0x2Au);
  }

  uint64_t v5 = *(void *)(a1[7] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(a1[8] + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E76654(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E7694C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E76978(void *a1, void *a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v10 = a1[4];
    int v11 = 138412546;
    uint64_t v12 = v10;
    __int16 v13 = 2112;
    id v14 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding recentBehaviorsOfType [type=%@]: %@", (uint8_t *)&v11, 0x16u);
  }

  uint64_t v5 = *(void *)(a1[5] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(a1[6] + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E76A74(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E76CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E76D18(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding Digest call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E76DFC(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E77014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E77038(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding ClearAllData call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E7711C(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E77350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E77374(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding Status call: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E77460(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E777A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E777C8(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during runTest call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E77894(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E77B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E77B6C(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during vectorSearchBenchmark call: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E77C58(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E77EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E77F18(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during validateGraph call: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E78004(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E7826C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E78290(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during benchmark call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E78374(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E78574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E78598(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during runToMatchingPipeline call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E7867C(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E78894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E788B8(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during runDeltaUpdatePipeline call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E7899C(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E78B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E78BC0(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during stopPipeline call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E78CA4(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E78E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B2E78E54(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v12 = a3;
  objc_msgSend_addObject_(v5, v6, a2, v7, v8);
  objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v9, (uint64_t)v12, v10, v11);
}

void sub_1B2E78ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  id v3 = GDXPCLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    int v4 = 138412290;
    uint64_t v5 = a2;
    _os_log_error_impl(&dword_1B2996000, v3, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during triplesQuery call: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1B2E7918C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E791B0(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during stats call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E7927C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E794E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E79508(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during clearStatus call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E795EC(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E79820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E79844(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during status call: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E79930(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E79A34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E79B84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E79BA4(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCInternalServer invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    objc_sync_enter(v5);
    id v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E79C48()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCInternalServer interrupted.", v1, 2u);
  }
}

void sub_1B2E7A134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E7A158(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E7A168(uint64_t a1)
{
}

void sub_1B2E7A170(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCKnosisService: error during runTest call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E7A23C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E7A6E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 256), 8);
  _Block_object_dispose((const void *)(v39 - 208), 8);
  _Block_object_dispose((const void *)(v39 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7A744(void *a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCKnosisService: error during iteratingExecuteKGQ call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(a1[4] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 1;
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
}

void sub_1B2E7A838(void *a1, void *a2, void *a3)
{
  id v25 = a3;
  if (a2)
  {
    id v6 = a2;
    *(unsigned char *)(*(void *)(a1[8] + 8) + 24) = objc_msgSend_hasMoreAnswers(v6, v7, v8, v9, v10);
    uint64_t v15 = objc_msgSend_offset(v6, v11, v12, v13, v14);
    uint64_t v16 = *(void *)(a1[9] + 8);
    __int16 v17 = *(void **)(v16 + 40);
    *(void *)(v16 + 40) = v15;

    uint64_t v22 = objc_msgSend_limit(v6, v18, v19, v20, v21);
    uint64_t v23 = *(void *)(a1[10] + 8);
    uint64_t v24 = *(void **)(v23 + 40);
    *(void *)(v23 + 40) = v22;
  }
  else
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), a3);
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
    *(unsigned char *)(*(void *)(a1[7] + 8) + 24) = 1;
  }
  (*(void (**)(void))(a1[4] + 16))();
}

void sub_1B2E7AD48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 224), 8);
  _Block_object_dispose((const void *)(v37 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7ADB0(uint64_t a1, void *a2, unsigned char *a3)
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  uint64_t v10 = v5;
  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    if (v5) {
      goto LABEL_3;
    }
LABEL_6:
    *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 3;
    goto LABEL_19;
  }
  uint64_t v18 = objc_msgSend_kgq(v5, v6, v7, v8, v9);
  uint64_t v19 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v20 = *(void **)(v19 + 40);
  *(void *)(v19 + 40) = v18;

  uint64_t v25 = objc_msgSend_query(v10, v21, v22, v23, v24);
  uint64_t v26 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v27 = *(void **)(v26 + 40);
  *(void *)(v26 + 40) = v25;

  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = objc_msgSend_status(v10, v28, v29, v30, v31);
  uint64_t v36 = objc_msgSend_debug(v10, v32, v33, v34, v35);
  uint64_t v37 = *(void *)(*(void *)(a1 + 64) + 8);
  uint64_t v38 = *(void **)(v37 + 40);
  *(void *)(v37 + 40) = v36;

  if (!v10) {
    goto LABEL_6;
  }
LABEL_3:
  if (objc_msgSend_status(v10, v6, v7, v8, v9) == 3)
  {
    uint64_t v15 = objc_msgSend_errorMessage(v10, v11, v12, v13, v14);
    uint64_t v16 = *(void *)(*(void *)(a1 + 72) + 8);
    __int16 v17 = *(void **)(v16 + 40);
    *(void *)(v16 + 40) = v15;
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
    long long v52 = 0u;
    long long v53 = 0u;
    uint64_t v39 = objc_msgSend_answers(v10, v11, v12, v13, v14, 0);
    uint64_t v41 = objc_msgSend_countByEnumeratingWithState_objects_count_(v39, v40, (uint64_t)&v52, (uint64_t)v56, 16);
    if (v41)
    {
      uint64_t v45 = v41;
      uint64_t v46 = *(void *)v53;
      while (2)
      {
        for (uint64_t i = 0; i != v45; ++i)
        {
          if (*(void *)v53 != v46) {
            objc_enumerationMutation(v39);
          }
          objc_msgSend_addObject_(*(void **)(a1 + 32), v42, *(void *)(*((void *)&v52 + 1) + 8 * i), v43, v44);
          uint64_t v48 = *(void *)(*(void *)(a1 + 80) + 8);
          uint64_t v49 = *(void *)(v48 + 24);
          BOOL v50 = v49 < 1;
          uint64_t v51 = v49 - 1;
          if (!v50)
          {
            *(void *)(v48 + 24) = v51;
            if (!*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 24))
            {
              *a3 = 1;
              goto LABEL_18;
            }
          }
        }
        uint64_t v45 = objc_msgSend_countByEnumeratingWithState_objects_count_(v39, v42, (uint64_t)&v52, (uint64_t)v56, 16);
        if (v45) {
          continue;
        }
        break;
      }
    }
LABEL_18:
  }
LABEL_19:
}

void sub_1B2E7B044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E7B194(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E7B1B4(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCKnosisServer invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    objc_sync_enter(v5);
    id v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E7B258()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCKnosisServer interrupted.", v1, 2u);
  }
}

void sub_1B2E7B5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E7B5C8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E7B5D8(uint64_t a1)
{
}

void sub_1B2E7B5E0(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCKnowledgeConstructionService: error during checkIn call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E7B6C4(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E7B8C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7B8E8(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCKnowledgeConstructionService: error during stopPipeline call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E7B9CC(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E7BBDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7BC00(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCKnowledgeConstructionService: error during runFastpassPipeline call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E7BCE4(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E7BEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7BF18(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCKnowledgeConstructionService: error during runFullPipeline call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E7BFFC(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E7C098(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E7C1E8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E7C208(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCKnowledgeConstructionService invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v4 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v5 = WeakRetained;
    objc_sync_enter(v5);
    id v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E7C2AC()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCKnowledgeConstructionService interrupted.", v1, 2u);
  }
}

void sub_1B2E7C62C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E7C650(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E7C660(uint64_t a1)
{
}

void sub_1B2E7C668(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCLighthouseService: error during collectDBStatus call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E7C734(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  int v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_1B2E7C9C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7C9EC(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCLighthouseService: error during collectDBStats call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E7CAB8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a3);
  id v8 = a3;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  int v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_1B2E7CBB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E7CD04(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E7CD24(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCLighthouseServer invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    objc_sync_enter(v5);
    uint64_t v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E7CDC8()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCLighthouseServer interrupted.", v1, 2u);
  }
}

void sub_1B2E7D148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1B2E7D16C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E7D17C(uint64_t a1)
{
}

void sub_1B2E7D184(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCSysdiagnoseService: error during Views supplemental diagnostics call: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E7D270(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E7D50C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7D530(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCSysdiagnoseService: error during EntityResolution supplemental diagnostics call: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E7D61C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E7D8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7D8DC(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCSysdiagnoseService: error during EntityRelevanceRanking supplemental diagnostics call: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E7D9C8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E7DC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7DC88(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCSysdiagnoseService: error during EntityTagging supplemental diagnostics call: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E7DD74(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E7E010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7E034(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v10 = 138412290;
    id v11 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCSysdiagnoseService: error during diagnostics call: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0;
}

void sub_1B2E7E120(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E7E224(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E7E374(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E7E394(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "GDXPCSysdiagnoseService: Connection invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    objc_sync_enter(v5);
    id v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E7E438()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "GDXPCSysdiagnoseService: Connection interrupted.", v1, 2u);
  }
}

void sub_1B2E7E800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t sub_1B2E7E82C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1B2E7E83C(uint64_t a1)
{
}

void sub_1B2E7E844(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCViewService: error during reportSQLiteErrorForViewName call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E7E910(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E7EB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7EB98(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCViewService: error during reportUnknownErrorForViewName call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E7EC64(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E7EEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7EEE0(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCViewService: error during accessTokenForFeaturesWithIsSandboxed call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E7EFAC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E7F2B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1B2E7F2E0(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCViewService: error during accessInfoForViewName call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E7F3AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E7F6B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1B2E7F6E0(uint64_t a1, void *a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCViewService: error during accessTokenForViewName call: %@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
}

void sub_1B2E7F7AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1B2E7FA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B2E7FA74(uint64_t a1, void *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  int v4 = GDXPCLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138412290;
    id v9 = v3;
    _os_log_error_impl(&dword_1B2996000, v4, OS_LOG_TYPE_ERROR, "GDXPCViewService: error during runUpdateWithViewName call: %@", (uint8_t *)&v8, 0xCu);
  }

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;
  id v7 = v3;

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1B2E7FB58(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_1B2E7FC0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1B2E7FD5C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1B2E7FD7C(uint64_t a1)
{
  uint64_t v2 = GDXPCLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v7 = 0;
    _os_log_impl(&dword_1B2996000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCViewServer invalidated.", v7, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v4 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v5 = WeakRetained;
    objc_sync_enter(v5);
    id v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }
}

void sub_1B2E7FE20()
{
  uint64_t v0 = GDXPCLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)int v1 = 0;
    _os_log_error_impl(&dword_1B2996000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCViewServer interrupted.", v1, 2u);
  }
}

uint64_t sub_1B2E7FF48()
{
  return MEMORY[0x1F40E2D60]();
}

uint64_t sub_1B2E7FF58()
{
  return MEMORY[0x1F40E2DF0]();
}

uint64_t sub_1B2E7FF68()
{
  return MEMORY[0x1F40E2FE8]();
}

uint64_t sub_1B2E7FF78()
{
  return MEMORY[0x1F40E3038]();
}

uint64_t sub_1B2E7FF88()
{
  return MEMORY[0x1F40E3060]();
}

uint64_t sub_1B2E7FF98()
{
  return MEMORY[0x1F40E3070]();
}

uint64_t sub_1B2E7FFA8()
{
  return MEMORY[0x1F40E3080]();
}

uint64_t sub_1B2E7FFB8()
{
  return MEMORY[0x1F40E30A8]();
}

uint64_t sub_1B2E7FFC8()
{
  return MEMORY[0x1F40E30B8]();
}

uint64_t sub_1B2E7FFD8()
{
  return MEMORY[0x1F40E3128]();
}

uint64_t sub_1B2E7FFE8()
{
  return MEMORY[0x1F40E3150]();
}

uint64_t sub_1B2E7FFF8()
{
  return MEMORY[0x1F40E3160]();
}

uint64_t sub_1B2E80008()
{
  return MEMORY[0x1F40E3180]();
}

uint64_t sub_1B2E80018()
{
  return MEMORY[0x1F40E3188]();
}

uint64_t sub_1B2E80038()
{
  return MEMORY[0x1F40E3198]();
}

uint64_t sub_1B2E80048()
{
  return MEMORY[0x1F40E31B0]();
}

uint64_t sub_1B2E80058()
{
  return MEMORY[0x1F40E31C8]();
}

uint64_t sub_1B2E80068()
{
  return MEMORY[0x1F40E31D0]();
}

uint64_t sub_1B2E80078()
{
  return MEMORY[0x1F40E3240]();
}

uint64_t sub_1B2E80088()
{
  return MEMORY[0x1F40E3248]();
}

uint64_t sub_1B2E80098()
{
  return MEMORY[0x1F40E3250]();
}

uint64_t sub_1B2E800A8()
{
  return MEMORY[0x1F40E3280]();
}

uint64_t sub_1B2E800B8()
{
  return MEMORY[0x1F40E3298]();
}

uint64_t sub_1B2E800C8()
{
  return MEMORY[0x1F40E3358]();
}

uint64_t sub_1B2E800D8()
{
  return MEMORY[0x1F40E3368]();
}

uint64_t sub_1B2E800E8()
{
  return MEMORY[0x1F40E3420]();
}

uint64_t sub_1B2E800F8()
{
  return MEMORY[0x1F40E34C0]();
}

uint64_t sub_1B2E80108()
{
  return MEMORY[0x1F40E34D0]();
}

uint64_t sub_1B2E80118()
{
  return MEMORY[0x1F40E34F8]();
}

uint64_t sub_1B2E80128()
{
  return MEMORY[0x1F40E3530]();
}

uint64_t sub_1B2E80138()
{
  return MEMORY[0x1F40E3600]();
}

uint64_t sub_1B2E80148()
{
  return MEMORY[0x1F40E3618]();
}

uint64_t sub_1B2E80158()
{
  return MEMORY[0x1F40E3620]();
}

uint64_t sub_1B2E80168()
{
  return MEMORY[0x1F40E37C0]();
}

uint64_t sub_1B2E80178()
{
  return MEMORY[0x1F40E37D0]();
}

uint64_t sub_1B2E80188()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_1B2E80198()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_1B2E801A8()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_1B2E801B8()
{
  return MEMORY[0x1F40E3830]();
}

uint64_t sub_1B2E801C8()
{
  return MEMORY[0x1F40E38F8]();
}

uint64_t sub_1B2E801D8()
{
  return MEMORY[0x1F40E3938]();
}

uint64_t sub_1B2E801E8()
{
  return MEMORY[0x1F40E3970]();
}

uint64_t sub_1B2E801F8()
{
  return MEMORY[0x1F40E3988]();
}

uint64_t sub_1B2E80208()
{
  return MEMORY[0x1F40E3A10]();
}

uint64_t sub_1B2E80218()
{
  return MEMORY[0x1F40E3A58]();
}

uint64_t sub_1B2E80228()
{
  return MEMORY[0x1F40E3B70]();
}

uint64_t sub_1B2E80278()
{
  return MEMORY[0x1F40E4138]();
}

uint64_t sub_1B2E80288()
{
  return MEMORY[0x1F40E4210]();
}

uint64_t sub_1B2E80298()
{
  return MEMORY[0x1F40E4220]();
}

uint64_t sub_1B2E802A8()
{
  return MEMORY[0x1F40E4228]();
}

uint64_t sub_1B2E802B8()
{
  return MEMORY[0x1F40E4240]();
}

uint64_t sub_1B2E802C8()
{
  return MEMORY[0x1F40E4260]();
}

uint64_t sub_1B2E802D8()
{
  return MEMORY[0x1F40E4270]();
}

uint64_t sub_1B2E802E8()
{
  return MEMORY[0x1F40E42C8]();
}

uint64_t sub_1B2E802F8()
{
  return MEMORY[0x1F40E42F0]();
}

uint64_t sub_1B2E80308()
{
  return MEMORY[0x1F40E4310]();
}

uint64_t sub_1B2E80318()
{
  return MEMORY[0x1F40E4338]();
}

uint64_t sub_1B2E80328()
{
  return MEMORY[0x1F40E4350]();
}

uint64_t sub_1B2E80338()
{
  return MEMORY[0x1F40E4368]();
}

uint64_t sub_1B2E80348()
{
  return MEMORY[0x1F40E4388]();
}

uint64_t sub_1B2E80358()
{
  return MEMORY[0x1F40E43C0]();
}

uint64_t sub_1B2E80368()
{
  return MEMORY[0x1F40E43D0]();
}

uint64_t sub_1B2E80378()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1B2E80388()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1B2E80398()
{
  return MEMORY[0x1F40E46D0]();
}

uint64_t sub_1B2E803A8()
{
  return MEMORY[0x1F40E4898]();
}

uint64_t sub_1B2E803B8()
{
  return MEMORY[0x1F40E48A0]();
}

uint64_t sub_1B2E803C8()
{
  return MEMORY[0x1F40E48D8]();
}

uint64_t sub_1B2E803D8()
{
  return MEMORY[0x1F40E48F8]();
}

uint64_t sub_1B2E803E8()
{
  return MEMORY[0x1F40E4938]();
}

uint64_t sub_1B2E803F8()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_1B2E80408()
{
  return MEMORY[0x1F40E49B0]();
}

uint64_t sub_1B2E80418()
{
  return MEMORY[0x1F40E49E0]();
}

uint64_t sub_1B2E80428()
{
  return MEMORY[0x1F40E49E8]();
}

uint64_t sub_1B2E80438()
{
  return MEMORY[0x1F40E49F8]();
}

uint64_t sub_1B2E80448()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_1B2E80458()
{
  return MEMORY[0x1F40E4AA8]();
}

uint64_t sub_1B2E80468()
{
  return MEMORY[0x1F40E4AC0]();
}

uint64_t sub_1B2E80478()
{
  return MEMORY[0x1F40E4B30]();
}

uint64_t sub_1B2E80488()
{
  return MEMORY[0x1F40E4B58]();
}

uint64_t sub_1B2E80498()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1B2E804A8()
{
  return MEMORY[0x1F40E4BB0]();
}

uint64_t sub_1B2E804B8()
{
  return MEMORY[0x1F40E4BC8]();
}

uint64_t sub_1B2E804C8()
{
  return MEMORY[0x1F40E4BD8]();
}

uint64_t sub_1B2E804D8()
{
  return MEMORY[0x1F40E4BE0]();
}

uint64_t sub_1B2E804E8()
{
  return MEMORY[0x1F40E4C18]();
}

uint64_t sub_1B2E804F8()
{
  return MEMORY[0x1F411A4A0]();
}

uint64_t sub_1B2E80508()
{
  return MEMORY[0x1F40E4C80]();
}

uint64_t sub_1B2E80518()
{
  return MEMORY[0x1F40E4CA8]();
}

uint64_t sub_1B2E80528()
{
  return MEMORY[0x1F40E4CC8]();
}

uint64_t sub_1B2E80538()
{
  return MEMORY[0x1F40E4CD8]();
}

uint64_t sub_1B2E80548()
{
  return MEMORY[0x1F40E4D00]();
}

uint64_t sub_1B2E80558()
{
  return MEMORY[0x1F40E4D38]();
}

uint64_t sub_1B2E80568()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_1B2E80578()
{
  return MEMORY[0x1F40E4D80]();
}

uint64_t sub_1B2E80588()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_1B2E80598()
{
  return MEMORY[0x1F40E4DB8]();
}

uint64_t sub_1B2E805A8()
{
  return MEMORY[0x1F40E4E10]();
}

uint64_t sub_1B2E805B8()
{
  return MEMORY[0x1F40E4ED0]();
}

uint64_t sub_1B2E805C8()
{
  return MEMORY[0x1F40E4EE0]();
}

uint64_t sub_1B2E805D8()
{
  return MEMORY[0x1F40E5158]();
}

uint64_t sub_1B2E805E8()
{
  return MEMORY[0x1F40E5188]();
}

uint64_t sub_1B2E805F8()
{
  return MEMORY[0x1F40E5198]();
}

uint64_t sub_1B2E80608()
{
  return MEMORY[0x1F40E52C0]();
}

uint64_t sub_1B2E80618()
{
  return MEMORY[0x1F40E52E0]();
}

uint64_t sub_1B2E80628()
{
  return MEMORY[0x1F40E52F0]();
}

uint64_t sub_1B2E80638()
{
  return MEMORY[0x1F40E5338]();
}

uint64_t sub_1B2E80648()
{
  return MEMORY[0x1F40E5350]();
}

uint64_t sub_1B2E80658()
{
  return MEMORY[0x1F40E5378]();
}

uint64_t sub_1B2E80668()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1B2E80678()
{
  return MEMORY[0x1F40E53B0]();
}

uint64_t sub_1B2E80688()
{
  return MEMORY[0x1F40E53C8]();
}

uint64_t sub_1B2E80698()
{
  return MEMORY[0x1F40E53F8]();
}

uint64_t sub_1B2E806A8()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_1B2E806B8()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1B2E806C8()
{
  return MEMORY[0x1F40E5500]();
}

uint64_t sub_1B2E806D8()
{
  return MEMORY[0x1F40E5648]();
}

uint64_t sub_1B2E806E8()
{
  return MEMORY[0x1F40E5728]();
}

uint64_t sub_1B2E806F8()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_1B2E80708()
{
  return MEMORY[0x1F40E58D0]();
}

uint64_t sub_1B2E80718()
{
  return MEMORY[0x1F40E5960]();
}

uint64_t sub_1B2E80728()
{
  return MEMORY[0x1F40E5978]();
}

uint64_t sub_1B2E80738()
{
  return MEMORY[0x1F40E5A40]();
}

uint64_t sub_1B2E80748()
{
  return MEMORY[0x1F40E5A48]();
}

uint64_t sub_1B2E80758()
{
  return MEMORY[0x1F40E5A58]();
}

uint64_t sub_1B2E80768()
{
  return MEMORY[0x1F40E5AB8]();
}

uint64_t sub_1B2E80778()
{
  return MEMORY[0x1F40E5AF0]();
}

uint64_t sub_1B2E80788()
{
  return MEMORY[0x1F40E5B18]();
}

uint64_t sub_1B2E80798()
{
  return MEMORY[0x1F40E5D20]();
}

uint64_t sub_1B2E807A8()
{
  return MEMORY[0x1F40E5D28]();
}

uint64_t sub_1B2E807B8()
{
  return MEMORY[0x1F40E5D70]();
}

uint64_t sub_1B2E807C8()
{
  return MEMORY[0x1F410C958]();
}

uint64_t sub_1B2E807D8()
{
  return MEMORY[0x1F410C968]();
}

uint64_t sub_1B2E807E8()
{
  return MEMORY[0x1F410C970]();
}

uint64_t sub_1B2E807F8()
{
  return MEMORY[0x1F410C978]();
}

uint64_t sub_1B2E80808()
{
  return MEMORY[0x1F410C9A0]();
}

uint64_t sub_1B2E80818()
{
  return MEMORY[0x1F410C9A8]();
}

uint64_t sub_1B2E80828()
{
  return MEMORY[0x1F410C9D8]();
}

uint64_t sub_1B2E80838()
{
  return MEMORY[0x1F410C9E8]();
}

uint64_t sub_1B2E80848()
{
  return MEMORY[0x1F4119150]();
}

uint64_t sub_1B2E80858()
{
  return MEMORY[0x1F411A4B8]();
}

uint64_t sub_1B2E80868()
{
  return MEMORY[0x1F411A4C0]();
}

uint64_t sub_1B2E80878()
{
  return MEMORY[0x1F411A7F8]();
}

uint64_t sub_1B2E80888()
{
  return MEMORY[0x1F411A800]();
}

uint64_t sub_1B2E80898()
{
  return MEMORY[0x1F411A808]();
}

uint64_t sub_1B2E808A8()
{
  return MEMORY[0x1F411A838]();
}

uint64_t sub_1B2E808B8()
{
  return MEMORY[0x1F411A840]();
}

uint64_t sub_1B2E808C8()
{
  return MEMORY[0x1F411A848]();
}

uint64_t sub_1B2E808D8()
{
  return MEMORY[0x1F411A850]();
}

uint64_t sub_1B2E808E8()
{
  return MEMORY[0x1F411A858]();
}

uint64_t sub_1B2E808F8()
{
  return MEMORY[0x1F411A860]();
}

uint64_t sub_1B2E80908()
{
  return MEMORY[0x1F411A868]();
}

uint64_t sub_1B2E80918()
{
  return MEMORY[0x1F411A870]();
}

uint64_t sub_1B2E80928()
{
  return MEMORY[0x1F411A878]();
}

uint64_t sub_1B2E80938()
{
  return MEMORY[0x1F411A888]();
}

uint64_t sub_1B2E80948()
{
  return MEMORY[0x1F411A898]();
}

uint64_t sub_1B2E80958()
{
  return MEMORY[0x1F411A8A0]();
}

uint64_t sub_1B2E80968()
{
  return MEMORY[0x1F411A8A8]();
}

uint64_t sub_1B2E80978()
{
  return MEMORY[0x1F411A8B8]();
}

uint64_t sub_1B2E80988()
{
  return MEMORY[0x1F411A8C0]();
}

uint64_t sub_1B2E80998()
{
  return MEMORY[0x1F411A8C8]();
}

uint64_t sub_1B2E809A8()
{
  return MEMORY[0x1F411A8D0]();
}

uint64_t sub_1B2E809B8()
{
  return MEMORY[0x1F411A8D8]();
}

uint64_t sub_1B2E809C8()
{
  return MEMORY[0x1F411A8E8]();
}

uint64_t sub_1B2E809D8()
{
  return MEMORY[0x1F411A908]();
}

uint64_t sub_1B2E809E8()
{
  return MEMORY[0x1F411A9A0]();
}

uint64_t sub_1B2E809F8()
{
  return MEMORY[0x1F411A9A8]();
}

uint64_t sub_1B2E80A08()
{
  return MEMORY[0x1F411A9B0]();
}

uint64_t sub_1B2E80A18()
{
  return MEMORY[0x1F411A9B8]();
}

uint64_t sub_1B2E80A28()
{
  return MEMORY[0x1F411A9C8]();
}

uint64_t sub_1B2E80A38()
{
  return MEMORY[0x1F411A9D0]();
}

uint64_t sub_1B2E80A48()
{
  return MEMORY[0x1F411A9D8]();
}

uint64_t sub_1B2E80A58()
{
  return MEMORY[0x1F411A9E0]();
}

uint64_t sub_1B2E80A68()
{
  return MEMORY[0x1F411A9E8]();
}

uint64_t sub_1B2E80A78()
{
  return MEMORY[0x1F411AA00]();
}

uint64_t sub_1B2E80A88()
{
  return MEMORY[0x1F411AA08]();
}

uint64_t sub_1B2E80A98()
{
  return MEMORY[0x1F411AA10]();
}

uint64_t sub_1B2E80AA8()
{
  return MEMORY[0x1F411AA28]();
}

uint64_t sub_1B2E80AB8()
{
  return MEMORY[0x1F411AA38]();
}

uint64_t sub_1B2E80AC8()
{
  return MEMORY[0x1F411AA48]();
}

uint64_t sub_1B2E80AD8()
{
  return MEMORY[0x1F411AA60]();
}

uint64_t sub_1B2E80AE8()
{
  return MEMORY[0x1F411AA70]();
}

uint64_t sub_1B2E80AF8()
{
  return MEMORY[0x1F411AA78]();
}

uint64_t sub_1B2E80B08()
{
  return MEMORY[0x1F411AA80]();
}

uint64_t sub_1B2E80B18()
{
  return MEMORY[0x1F411AA88]();
}

uint64_t sub_1B2E80B28()
{
  return MEMORY[0x1F411AAA0]();
}

uint64_t sub_1B2E80B38()
{
  return MEMORY[0x1F411AAB0]();
}

uint64_t sub_1B2E80B48()
{
  return MEMORY[0x1F411AAC0]();
}

uint64_t sub_1B2E80B58()
{
  return MEMORY[0x1F411AAE8]();
}

uint64_t sub_1B2E80B68()
{
  return MEMORY[0x1F411AB08]();
}

uint64_t sub_1B2E80B78()
{
  return MEMORY[0x1F411AB18]();
}

uint64_t sub_1B2E80B88()
{
  return MEMORY[0x1F411AB20]();
}

uint64_t sub_1B2E80B98()
{
  return MEMORY[0x1F411AB40]();
}

uint64_t sub_1B2E80BA8()
{
  return MEMORY[0x1F411AB48]();
}

uint64_t sub_1B2E80BB8()
{
  return MEMORY[0x1F411AB50]();
}

uint64_t sub_1B2E80BC8()
{
  return MEMORY[0x1F411AB58]();
}

uint64_t sub_1B2E80BD8()
{
  return MEMORY[0x1F411AB60]();
}

uint64_t sub_1B2E80BE8()
{
  return MEMORY[0x1F411AB68]();
}

uint64_t sub_1B2E80BF8()
{
  return MEMORY[0x1F411AB70]();
}

uint64_t sub_1B2E80C08()
{
  return MEMORY[0x1F411AB78]();
}

uint64_t sub_1B2E80C18()
{
  return MEMORY[0x1F411AB80]();
}

uint64_t sub_1B2E80C28()
{
  return MEMORY[0x1F411AB88]();
}

uint64_t sub_1B2E80C38()
{
  return MEMORY[0x1F411ABB0]();
}

uint64_t sub_1B2E80C48()
{
  return MEMORY[0x1F411ABB8]();
}

uint64_t sub_1B2E80C58()
{
  return MEMORY[0x1F411ABC0]();
}

uint64_t sub_1B2E80C68()
{
  return MEMORY[0x1F411ABC8]();
}

uint64_t sub_1B2E80C78()
{
  return MEMORY[0x1F411ABD0]();
}

uint64_t sub_1B2E80C88()
{
  return MEMORY[0x1F411ABD8]();
}

uint64_t sub_1B2E80C98()
{
  return MEMORY[0x1F411ABE0]();
}

uint64_t sub_1B2E80CA8()
{
  return MEMORY[0x1F411ABE8]();
}

uint64_t sub_1B2E80CB8()
{
  return MEMORY[0x1F411ABF0]();
}

uint64_t sub_1B2E80CD8()
{
  return MEMORY[0x1F411AC08]();
}

uint64_t sub_1B2E80CE8()
{
  return MEMORY[0x1F411AC18]();
}

uint64_t sub_1B2E80CF8()
{
  return MEMORY[0x1F411AC20]();
}

uint64_t sub_1B2E80D08()
{
  return MEMORY[0x1F411AC28]();
}

uint64_t sub_1B2E80D18()
{
  return MEMORY[0x1F411AC30]();
}

uint64_t sub_1B2E80D28()
{
  return MEMORY[0x1F411AC38]();
}

uint64_t sub_1B2E80D38()
{
  return MEMORY[0x1F411AC50]();
}

uint64_t sub_1B2E80D58()
{
  return MEMORY[0x1F411AC68]();
}

uint64_t sub_1B2E80D68()
{
  return MEMORY[0x1F411AC70]();
}

uint64_t sub_1B2E80D78()
{
  return MEMORY[0x1F411AC78]();
}

uint64_t sub_1B2E80D88()
{
  return MEMORY[0x1F411AC88]();
}

uint64_t sub_1B2E80D98()
{
  return MEMORY[0x1F411AC90]();
}

uint64_t sub_1B2E80DA8()
{
  return MEMORY[0x1F411AC98]();
}

uint64_t sub_1B2E80DB8()
{
  return MEMORY[0x1F411ACA0]();
}

uint64_t sub_1B2E80DC8()
{
  return MEMORY[0x1F411ACA8]();
}

uint64_t sub_1B2E80DD8()
{
  return MEMORY[0x1F411ACB0]();
}

uint64_t sub_1B2E80DE8()
{
  return MEMORY[0x1F411ACB8]();
}

uint64_t sub_1B2E80DF8()
{
  return MEMORY[0x1F411ACC0]();
}

uint64_t sub_1B2E80E08()
{
  return MEMORY[0x1F411ACC8]();
}

uint64_t sub_1B2E80E18()
{
  return MEMORY[0x1F411ACD0]();
}

uint64_t sub_1B2E80E28()
{
  return MEMORY[0x1F411ACD8]();
}

uint64_t sub_1B2E80E38()
{
  return MEMORY[0x1F411ACE0]();
}

uint64_t sub_1B2E80E48()
{
  return MEMORY[0x1F411ACE8]();
}

uint64_t sub_1B2E80E58()
{
  return MEMORY[0x1F411ACF8]();
}

uint64_t sub_1B2E80E68()
{
  return MEMORY[0x1F411AD00]();
}

uint64_t sub_1B2E80E78()
{
  return MEMORY[0x1F411AD08]();
}

uint64_t sub_1B2E80E88()
{
  return MEMORY[0x1F411AD10]();
}

uint64_t sub_1B2E80E98()
{
  return MEMORY[0x1F411AD20]();
}

uint64_t sub_1B2E80EA8()
{
  return MEMORY[0x1F411AD28]();
}

uint64_t sub_1B2E80EC8()
{
  return MEMORY[0x1F411AD48]();
}

uint64_t sub_1B2E80EE8()
{
  return MEMORY[0x1F411AD58]();
}

uint64_t sub_1B2E80F08()
{
  return MEMORY[0x1F411AD78]();
}

uint64_t sub_1B2E80F18()
{
  return MEMORY[0x1F411AD88]();
}

uint64_t sub_1B2E80F28()
{
  return MEMORY[0x1F411AD90]();
}

uint64_t sub_1B2E80F38()
{
  return MEMORY[0x1F411AD98]();
}

uint64_t sub_1B2E80F48()
{
  return MEMORY[0x1F411ADA0]();
}

uint64_t sub_1B2E80F58()
{
  return MEMORY[0x1F411ADA8]();
}

uint64_t sub_1B2E80F68()
{
  return MEMORY[0x1F411ADB0]();
}

uint64_t sub_1B2E80F78()
{
  return MEMORY[0x1F411ADB8]();
}

uint64_t sub_1B2E80F88()
{
  return MEMORY[0x1F411ADC8]();
}

uint64_t sub_1B2E80F98()
{
  return MEMORY[0x1F411ADE0]();
}

uint64_t sub_1B2E80FA8()
{
  return MEMORY[0x1F411ADE8]();
}

uint64_t sub_1B2E80FB8()
{
  return MEMORY[0x1F411AE10]();
}

uint64_t sub_1B2E80FC8()
{
  return MEMORY[0x1F411AE18]();
}

uint64_t sub_1B2E80FD8()
{
  return MEMORY[0x1F411AE20]();
}

uint64_t sub_1B2E80FE8()
{
  return MEMORY[0x1F411AE38]();
}

uint64_t sub_1B2E80FF8()
{
  return MEMORY[0x1F411AE40]();
}

uint64_t sub_1B2E81008()
{
  return MEMORY[0x1F411AE50]();
}

uint64_t sub_1B2E81018()
{
  return MEMORY[0x1F411AE68]();
}

uint64_t sub_1B2E81028()
{
  return MEMORY[0x1F411AE70]();
}

uint64_t sub_1B2E81038()
{
  return MEMORY[0x1F411AE88]();
}

uint64_t sub_1B2E81048()
{
  return MEMORY[0x1F411AE98]();
}

uint64_t sub_1B2E81058()
{
  return MEMORY[0x1F411AEA0]();
}

uint64_t sub_1B2E81068()
{
  return MEMORY[0x1F411AEA8]();
}

uint64_t sub_1B2E81078()
{
  return MEMORY[0x1F411AEC0]();
}

uint64_t sub_1B2E81088()
{
  return MEMORY[0x1F411AEC8]();
}

uint64_t sub_1B2E81098()
{
  return MEMORY[0x1F411AED0]();
}

uint64_t sub_1B2E810A8()
{
  return MEMORY[0x1F411AED8]();
}

uint64_t sub_1B2E810C8()
{
  return MEMORY[0x1F411AEF8]();
}

uint64_t sub_1B2E810D8()
{
  return MEMORY[0x1F411AF00]();
}

uint64_t sub_1B2E810E8()
{
  return MEMORY[0x1F411AF10]();
}

uint64_t sub_1B2E810F8()
{
  return MEMORY[0x1F411AF18]();
}

uint64_t sub_1B2E81108()
{
  return MEMORY[0x1F411AF20]();
}

uint64_t sub_1B2E81118()
{
  return MEMORY[0x1F411AF40]();
}

uint64_t sub_1B2E81128()
{
  return MEMORY[0x1F411AF48]();
}

uint64_t sub_1B2E81158()
{
  return MEMORY[0x1F411AF60]();
}

uint64_t sub_1B2E81168()
{
  return MEMORY[0x1F411AF68]();
}

uint64_t sub_1B2E81178()
{
  return MEMORY[0x1F411AF70]();
}

uint64_t sub_1B2E81188()
{
  return MEMORY[0x1F411AF78]();
}

uint64_t sub_1B2E81198()
{
  return MEMORY[0x1F411AF80]();
}

uint64_t sub_1B2E811A8()
{
  return MEMORY[0x1F411AF88]();
}

uint64_t sub_1B2E811B8()
{
  return MEMORY[0x1F411AFB0]();
}

uint64_t sub_1B2E811C8()
{
  return MEMORY[0x1F411AFB8]();
}

uint64_t sub_1B2E811D8()
{
  return MEMORY[0x1F411AFC8]();
}

uint64_t sub_1B2E811F8()
{
  return MEMORY[0x1F411AFE8]();
}

uint64_t sub_1B2E81218()
{
  return MEMORY[0x1F411AFF8]();
}

uint64_t sub_1B2E81248()
{
  return MEMORY[0x1F411B048]();
}

uint64_t sub_1B2E81258()
{
  return MEMORY[0x1F411B050]();
}

uint64_t sub_1B2E81268()
{
  return MEMORY[0x1F411B058]();
}

uint64_t sub_1B2E81278()
{
  return MEMORY[0x1F411B060]();
}

uint64_t sub_1B2E81288()
{
  return MEMORY[0x1F411B068]();
}

uint64_t sub_1B2E81298()
{
  return MEMORY[0x1F411B070]();
}

uint64_t sub_1B2E812A8()
{
  return MEMORY[0x1F411B080]();
}

uint64_t sub_1B2E812B8()
{
  return MEMORY[0x1F411B088]();
}

uint64_t sub_1B2E812C8()
{
  return MEMORY[0x1F411B0A0]();
}

uint64_t sub_1B2E812D8()
{
  return MEMORY[0x1F411B0B0]();
}

uint64_t sub_1B2E812E8()
{
  return MEMORY[0x1F411B0C0]();
}

uint64_t sub_1B2E812F8()
{
  return MEMORY[0x1F411B0C8]();
}

uint64_t sub_1B2E81308()
{
  return MEMORY[0x1F411B0D0]();
}

uint64_t sub_1B2E81318()
{
  return MEMORY[0x1F411B0D8]();
}

uint64_t sub_1B2E81328()
{
  return MEMORY[0x1F411B0E8]();
}

uint64_t sub_1B2E81338()
{
  return MEMORY[0x1F411B0F8]();
}

uint64_t sub_1B2E81348()
{
  return MEMORY[0x1F411B100]();
}

uint64_t sub_1B2E81358()
{
  return MEMORY[0x1F411B120]();
}

uint64_t sub_1B2E81368()
{
  return MEMORY[0x1F411B128]();
}

uint64_t sub_1B2E81378()
{
  return MEMORY[0x1F411B130]();
}

uint64_t sub_1B2E81388()
{
  return MEMORY[0x1F411B138]();
}

uint64_t sub_1B2E81398()
{
  return MEMORY[0x1F411B140]();
}

uint64_t sub_1B2E813A8()
{
  return MEMORY[0x1F411B158]();
}

uint64_t sub_1B2E813B8()
{
  return MEMORY[0x1F411B160]();
}

uint64_t sub_1B2E813C8()
{
  return MEMORY[0x1F411B168]();
}

uint64_t sub_1B2E813D8()
{
  return MEMORY[0x1F411B170]();
}

uint64_t sub_1B2E813E8()
{
  return MEMORY[0x1F411B178]();
}

uint64_t sub_1B2E813F8()
{
  return MEMORY[0x1F411B180]();
}

uint64_t sub_1B2E81418()
{
  return MEMORY[0x1F411B190]();
}

uint64_t sub_1B2E81428()
{
  return MEMORY[0x1F411B1A0]();
}

uint64_t sub_1B2E81438()
{
  return MEMORY[0x1F411B1A8]();
}

uint64_t sub_1B2E81448()
{
  return MEMORY[0x1F411B1B0]();
}

uint64_t sub_1B2E81458()
{
  return MEMORY[0x1F411B1B8]();
}

uint64_t sub_1B2E81468()
{
  return MEMORY[0x1F411B1C0]();
}

uint64_t sub_1B2E81478()
{
  return MEMORY[0x1F411B1C8]();
}

uint64_t sub_1B2E81488()
{
  return MEMORY[0x1F411B1D0]();
}

uint64_t sub_1B2E81498()
{
  return MEMORY[0x1F411B1D8]();
}

uint64_t sub_1B2E814A8()
{
  return MEMORY[0x1F411B1E8]();
}

uint64_t sub_1B2E814B8()
{
  return MEMORY[0x1F411B1F8]();
}

uint64_t sub_1B2E814C8()
{
  return MEMORY[0x1F411B200]();
}

uint64_t sub_1B2E814D8()
{
  return MEMORY[0x1F411B208]();
}

uint64_t sub_1B2E814E8()
{
  return MEMORY[0x1F411B210]();
}

uint64_t sub_1B2E814F8()
{
  return MEMORY[0x1F411B218]();
}

uint64_t sub_1B2E81508()
{
  return MEMORY[0x1F411B230]();
}

uint64_t sub_1B2E81518()
{
  return MEMORY[0x1F411B238]();
}

uint64_t sub_1B2E81528()
{
  return MEMORY[0x1F411B240]();
}

uint64_t sub_1B2E81538()
{
  return MEMORY[0x1F411B248]();
}

uint64_t sub_1B2E81548()
{
  return MEMORY[0x1F411B260]();
}

uint64_t sub_1B2E81558()
{
  return MEMORY[0x1F411B268]();
}

uint64_t sub_1B2E81568()
{
  return MEMORY[0x1F411B278]();
}

uint64_t sub_1B2E81578()
{
  return MEMORY[0x1F411B290]();
}

uint64_t sub_1B2E81588()
{
  return MEMORY[0x1F411B298]();
}

uint64_t sub_1B2E81598()
{
  return MEMORY[0x1F411B2A0]();
}

uint64_t sub_1B2E815A8()
{
  return MEMORY[0x1F411B2A8]();
}

uint64_t sub_1B2E815B8()
{
  return MEMORY[0x1F411B2B0]();
}

uint64_t sub_1B2E815C8()
{
  return MEMORY[0x1F411B2C8]();
}

uint64_t sub_1B2E815D8()
{
  return MEMORY[0x1F411B2E8]();
}

uint64_t sub_1B2E815E8()
{
  return MEMORY[0x1F411B2F0]();
}

uint64_t sub_1B2E815F8()
{
  return MEMORY[0x1F411B318]();
}

uint64_t sub_1B2E81608()
{
  return MEMORY[0x1F411B330]();
}

uint64_t sub_1B2E81618()
{
  return MEMORY[0x1F411B340]();
}

uint64_t sub_1B2E81628()
{
  return MEMORY[0x1F411B348]();
}

uint64_t sub_1B2E81638()
{
  return MEMORY[0x1F411B350]();
}

uint64_t sub_1B2E81648()
{
  return MEMORY[0x1F411B368]();
}

uint64_t sub_1B2E81658()
{
  return MEMORY[0x1F411B370]();
}

uint64_t sub_1B2E81668()
{
  return MEMORY[0x1F411B380]();
}

uint64_t sub_1B2E81678()
{
  return MEMORY[0x1F411B388]();
}

uint64_t sub_1B2E81688()
{
  return MEMORY[0x1F411B398]();
}

uint64_t sub_1B2E81698()
{
  return MEMORY[0x1F411B3A8]();
}

uint64_t sub_1B2E816A8()
{
  return MEMORY[0x1F411B3B0]();
}

uint64_t sub_1B2E816B8()
{
  return MEMORY[0x1F411B3C8]();
}

uint64_t sub_1B2E816C8()
{
  return MEMORY[0x1F411B3D8]();
}

uint64_t sub_1B2E816D8()
{
  return MEMORY[0x1F411B3E8]();
}

uint64_t sub_1B2E816E8()
{
  return MEMORY[0x1F411B418]();
}

uint64_t sub_1B2E816F8()
{
  return MEMORY[0x1F411B428]();
}

uint64_t sub_1B2E81708()
{
  return MEMORY[0x1F411B430]();
}

uint64_t sub_1B2E81718()
{
  return MEMORY[0x1F4130438]();
}

uint64_t sub_1B2E81728()
{
  return MEMORY[0x1F4130440]();
}

uint64_t sub_1B2E81738()
{
  return MEMORY[0x1F4130448]();
}

uint64_t sub_1B2E81748()
{
  return MEMORY[0x1F4130450]();
}

uint64_t sub_1B2E81758()
{
  return MEMORY[0x1F4130458]();
}

uint64_t sub_1B2E81768()
{
  return MEMORY[0x1F4130460]();
}

uint64_t sub_1B2E81778()
{
  return MEMORY[0x1F4130470]();
}

uint64_t sub_1B2E81788()
{
  return MEMORY[0x1F4130478]();
}

uint64_t sub_1B2E81798()
{
  return MEMORY[0x1F4130480]();
}

uint64_t sub_1B2E817A8()
{
  return MEMORY[0x1F4167750]();
}

uint64_t sub_1B2E817B8()
{
  return MEMORY[0x1F4167758]();
}

uint64_t sub_1B2E817C8()
{
  return MEMORY[0x1F4167770]();
}

uint64_t sub_1B2E817D8()
{
  return MEMORY[0x1F4167778]();
}

uint64_t sub_1B2E817E8()
{
  return MEMORY[0x1F4167780]();
}

uint64_t sub_1B2E817F8()
{
  return MEMORY[0x1F4167790]();
}

uint64_t sub_1B2E81808()
{
  return MEMORY[0x1F41677A0]();
}

uint64_t sub_1B2E81818()
{
  return MEMORY[0x1F41677A8]();
}

uint64_t sub_1B2E81828()
{
  return MEMORY[0x1F41677B0]();
}

uint64_t sub_1B2E81838()
{
  return MEMORY[0x1F41677B8]();
}

uint64_t sub_1B2E81848()
{
  return MEMORY[0x1F41677C0]();
}

uint64_t sub_1B2E81858()
{
  return MEMORY[0x1F41677C8]();
}

uint64_t sub_1B2E81868()
{
  return MEMORY[0x1F41677D0]();
}

uint64_t sub_1B2E81878()
{
  return MEMORY[0x1F41677D8]();
}

uint64_t sub_1B2E81888()
{
  return MEMORY[0x1F41677E0]();
}

uint64_t sub_1B2E81898()
{
  return MEMORY[0x1F41677E8]();
}

uint64_t sub_1B2E818A8()
{
  return MEMORY[0x1F41677F0]();
}

uint64_t sub_1B2E818B8()
{
  return MEMORY[0x1F41677F8]();
}

uint64_t sub_1B2E818C8()
{
  return MEMORY[0x1F4167800]();
}

uint64_t sub_1B2E818D8()
{
  return MEMORY[0x1F4167808]();
}

uint64_t sub_1B2E818E8()
{
  return MEMORY[0x1F4167810]();
}

uint64_t sub_1B2E818F8()
{
  return MEMORY[0x1F4167818]();
}

uint64_t sub_1B2E81908()
{
  return MEMORY[0x1F4167828]();
}

uint64_t sub_1B2E81918()
{
  return MEMORY[0x1F4167830]();
}

uint64_t sub_1B2E81928()
{
  return MEMORY[0x1F41679F0]();
}

uint64_t sub_1B2E81938()
{
  return MEMORY[0x1F41679F8]();
}

uint64_t sub_1B2E81948()
{
  return MEMORY[0x1F4167A00]();
}

uint64_t sub_1B2E81958()
{
  return MEMORY[0x1F4167A08]();
}

uint64_t sub_1B2E81968()
{
  return MEMORY[0x1F4167A10]();
}

uint64_t sub_1B2E81978()
{
  return MEMORY[0x1F4167A18]();
}

uint64_t sub_1B2E81988()
{
  return MEMORY[0x1F4167A20]();
}

uint64_t sub_1B2E81998()
{
  return MEMORY[0x1F4167A28]();
}

uint64_t sub_1B2E819A8()
{
  return MEMORY[0x1F4167A30]();
}

uint64_t sub_1B2E819B8()
{
  return MEMORY[0x1F4167A38]();
}

uint64_t sub_1B2E819C8()
{
  return MEMORY[0x1F4167A40]();
}

uint64_t sub_1B2E819D8()
{
  return MEMORY[0x1F4167A48]();
}

uint64_t sub_1B2E819E8()
{
  return MEMORY[0x1F4167A50]();
}

uint64_t sub_1B2E819F8()
{
  return MEMORY[0x1F4167A58]();
}

uint64_t sub_1B2E81A08()
{
  return MEMORY[0x1F4167A60]();
}

uint64_t sub_1B2E81A18()
{
  return MEMORY[0x1F4167A68]();
}

uint64_t sub_1B2E81A28()
{
  return MEMORY[0x1F4167A70]();
}

uint64_t sub_1B2E81A38()
{
  return MEMORY[0x1F4167A78]();
}

uint64_t sub_1B2E81A48()
{
  return MEMORY[0x1F4167A80]();
}

uint64_t sub_1B2E81A58()
{
  return MEMORY[0x1F4167A88]();
}

uint64_t sub_1B2E81A68()
{
  return MEMORY[0x1F4167A90]();
}

uint64_t sub_1B2E81A78()
{
  return MEMORY[0x1F4167A98]();
}

uint64_t sub_1B2E81A88()
{
  return MEMORY[0x1F4167AA0]();
}

uint64_t sub_1B2E81A98()
{
  return MEMORY[0x1F4167AA8]();
}

uint64_t sub_1B2E81AA8()
{
  return MEMORY[0x1F4167AB0]();
}

uint64_t sub_1B2E81AB8()
{
  return MEMORY[0x1F4167AB8]();
}

uint64_t sub_1B2E81AC8()
{
  return MEMORY[0x1F4167AC0]();
}

uint64_t sub_1B2E81AD8()
{
  return MEMORY[0x1F4167AC8]();
}

uint64_t sub_1B2E81AE8()
{
  return MEMORY[0x1F4167AD0]();
}

uint64_t sub_1B2E81AF8()
{
  return MEMORY[0x1F4167AD8]();
}

uint64_t sub_1B2E81B08()
{
  return MEMORY[0x1F4167AE0]();
}

uint64_t sub_1B2E81B18()
{
  return MEMORY[0x1F4167AE8]();
}

uint64_t sub_1B2E81B28()
{
  return MEMORY[0x1F4167AF0]();
}

uint64_t sub_1B2E81B38()
{
  return MEMORY[0x1F4167AF8]();
}

uint64_t sub_1B2E81B48()
{
  return MEMORY[0x1F4167B00]();
}

uint64_t sub_1B2E81B58()
{
  return MEMORY[0x1F4167B08]();
}

uint64_t sub_1B2E81B68()
{
  return MEMORY[0x1F4167B10]();
}

uint64_t sub_1B2E81B78()
{
  return MEMORY[0x1F4167B18]();
}

uint64_t sub_1B2E81B88()
{
  return MEMORY[0x1F4167B20]();
}

uint64_t sub_1B2E81B98()
{
  return MEMORY[0x1F4167B28]();
}

uint64_t sub_1B2E81BA8()
{
  return MEMORY[0x1F4167B30]();
}

uint64_t sub_1B2E81BB8()
{
  return MEMORY[0x1F4167B38]();
}

uint64_t sub_1B2E81BC8()
{
  return MEMORY[0x1F4167B40]();
}

uint64_t sub_1B2E81BD8()
{
  return MEMORY[0x1F4167B48]();
}

uint64_t sub_1B2E81BE8()
{
  return MEMORY[0x1F4167B50]();
}

uint64_t sub_1B2E81BF8()
{
  return MEMORY[0x1F4167B58]();
}

uint64_t sub_1B2E81C08()
{
  return MEMORY[0x1F4167B60]();
}

uint64_t sub_1B2E81C18()
{
  return MEMORY[0x1F4167B68]();
}

uint64_t sub_1B2E81C28()
{
  return MEMORY[0x1F4167B70]();
}

uint64_t sub_1B2E81C38()
{
  return MEMORY[0x1F4167B78]();
}

uint64_t sub_1B2E81C48()
{
  return MEMORY[0x1F4167B80]();
}

uint64_t sub_1B2E81C58()
{
  return MEMORY[0x1F4167B88]();
}

uint64_t sub_1B2E81C68()
{
  return MEMORY[0x1F4167B90]();
}

uint64_t sub_1B2E81C78()
{
  return MEMORY[0x1F4167B98]();
}

uint64_t sub_1B2E81C88()
{
  return MEMORY[0x1F4167BA0]();
}

uint64_t sub_1B2E81C98()
{
  return MEMORY[0x1F4167BA8]();
}

uint64_t sub_1B2E81CA8()
{
  return MEMORY[0x1F4167BB0]();
}

uint64_t sub_1B2E81CB8()
{
  return MEMORY[0x1F4167BB8]();
}

uint64_t sub_1B2E81CC8()
{
  return MEMORY[0x1F4167BC0]();
}

uint64_t sub_1B2E81CD8()
{
  return MEMORY[0x1F4167BC8]();
}

uint64_t sub_1B2E81CE8()
{
  return MEMORY[0x1F4167BD0]();
}

uint64_t sub_1B2E81CF8()
{
  return MEMORY[0x1F4167BD8]();
}

uint64_t sub_1B2E81D08()
{
  return MEMORY[0x1F4167BE8]();
}

uint64_t sub_1B2E81D18()
{
  return MEMORY[0x1F4167BF0]();
}

uint64_t sub_1B2E81D28()
{
  return MEMORY[0x1F4167BF8]();
}

uint64_t sub_1B2E81D38()
{
  return MEMORY[0x1F4167C00]();
}

uint64_t sub_1B2E81D48()
{
  return MEMORY[0x1F4167C08]();
}

uint64_t sub_1B2E81D58()
{
  return MEMORY[0x1F4167C10]();
}

uint64_t sub_1B2E81D68()
{
  return MEMORY[0x1F4167C18]();
}

uint64_t sub_1B2E81D78()
{
  return MEMORY[0x1F4167C28]();
}

uint64_t sub_1B2E81D88()
{
  return MEMORY[0x1F4167C30]();
}

uint64_t sub_1B2E81D98()
{
  return MEMORY[0x1F4167C38]();
}

uint64_t sub_1B2E81DA8()
{
  return MEMORY[0x1F4167C40]();
}

uint64_t sub_1B2E81DB8()
{
  return MEMORY[0x1F4167C48]();
}

uint64_t sub_1B2E81DC8()
{
  return MEMORY[0x1F4167C50]();
}

uint64_t sub_1B2E81DD8()
{
  return MEMORY[0x1F4167C58]();
}

uint64_t sub_1B2E81DE8()
{
  return MEMORY[0x1F4167C60]();
}

uint64_t sub_1B2E81DF8()
{
  return MEMORY[0x1F4167C68]();
}

uint64_t sub_1B2E81E08()
{
  return MEMORY[0x1F4167C70]();
}

uint64_t sub_1B2E81E18()
{
  return MEMORY[0x1F4167C78]();
}

uint64_t sub_1B2E81E28()
{
  return MEMORY[0x1F4167CA0]();
}

uint64_t sub_1B2E81E38()
{
  return MEMORY[0x1F4167CA8]();
}

uint64_t sub_1B2E81E48()
{
  return MEMORY[0x1F4167CB0]();
}

uint64_t sub_1B2E81E58()
{
  return MEMORY[0x1F4167CB8]();
}

uint64_t sub_1B2E81E68()
{
  return MEMORY[0x1F4167CC0]();
}

uint64_t sub_1B2E81E78()
{
  return MEMORY[0x1F4167CC8]();
}

uint64_t sub_1B2E81E88()
{
  return MEMORY[0x1F4167CD0]();
}

uint64_t sub_1B2E81E98()
{
  return MEMORY[0x1F4167CD8]();
}

uint64_t sub_1B2E81EA8()
{
  return MEMORY[0x1F4167CE0]();
}

uint64_t sub_1B2E81EB8()
{
  return MEMORY[0x1F4126E18]();
}

uint64_t sub_1B2E81EC8()
{
  return MEMORY[0x1F4188518]();
}

uint64_t sub_1B2E81ED8()
{
  return MEMORY[0x1F4188568]();
}

uint64_t sub_1B2E81EE8()
{
  return MEMORY[0x1F4188570]();
}

uint64_t sub_1B2E81EF8()
{
  return MEMORY[0x1F4188578]();
}

uint64_t sub_1B2E81F08()
{
  return MEMORY[0x1F4188580]();
}

uint64_t sub_1B2E81F18()
{
  return MEMORY[0x1F4188590]();
}

uint64_t sub_1B2E81F28()
{
  return MEMORY[0x1F41885B0]();
}

uint64_t sub_1B2E81F38()
{
  return MEMORY[0x1F41885D0]();
}

uint64_t sub_1B2E81F48()
{
  return MEMORY[0x1F41885E0]();
}

uint64_t sub_1B2E81F58()
{
  return MEMORY[0x1F4188650]();
}

uint64_t sub_1B2E81F68()
{
  return MEMORY[0x1F4188658]();
}

uint64_t sub_1B2E81F78()
{
  return MEMORY[0x1F4188660]();
}

uint64_t sub_1B2E81F88()
{
  return MEMORY[0x1F4188668]();
}

uint64_t sub_1B2E81F98()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1B2E81FA8()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_1B2E81FB8()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1B2E81FC8()
{
  return MEMORY[0x1F41886B0]();
}

uint64_t sub_1B2E81FD8()
{
  return MEMORY[0x1F40DB6C0]();
}

uint64_t sub_1B2E81FE8()
{
  return MEMORY[0x1F40DB6D0]();
}

uint64_t sub_1B2E81FF8()
{
  return MEMORY[0x1F40DB718]();
}

uint64_t sub_1B2E82008()
{
  return MEMORY[0x1F40DB720]();
}

uint64_t sub_1B2E82018()
{
  return MEMORY[0x1F40DB728]();
}

uint64_t sub_1B2E82028()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_1B2E82038()
{
  return MEMORY[0x1F4186CC0]();
}

uint64_t sub_1B2E82048()
{
  return MEMORY[0x1F4186CE0]();
}

uint64_t sub_1B2E82058()
{
  return MEMORY[0x1F4186CE8]();
}

uint64_t sub_1B2E82068()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1B2E82078()
{
  return MEMORY[0x1F4186D48]();
}

uint64_t sub_1B2E82088()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1B2E82098()
{
  return MEMORY[0x1F40DFF60]();
}

uint64_t sub_1B2E820A8()
{
  return MEMORY[0x1F40DFF70]();
}

uint64_t sub_1B2E820B8()
{
  return MEMORY[0x1F4183270]();
}

uint64_t sub_1B2E820C8()
{
  return MEMORY[0x1F4183280]();
}

uint64_t sub_1B2E820D8()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1B2E820E8()
{
  return MEMORY[0x1F40E6018]();
}

uint64_t sub_1B2E820F8()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_1B2E82108()
{
  return MEMORY[0x1F4183318]();
}

uint64_t sub_1B2E82118()
{
  return MEMORY[0x1F4183320]();
}

uint64_t sub_1B2E82128()
{
  return MEMORY[0x1F4183328]();
}

uint64_t sub_1B2E82138()
{
  return MEMORY[0x1F4183348]();
}

uint64_t sub_1B2E82148()
{
  return MEMORY[0x1F4183358]();
}

uint64_t sub_1B2E82158()
{
  return MEMORY[0x1F4183360]();
}

uint64_t sub_1B2E82168()
{
  return MEMORY[0x1F4183370]();
}

uint64_t sub_1B2E82178()
{
  return MEMORY[0x1F41833D0]();
}

uint64_t sub_1B2E82188()
{
  return MEMORY[0x1F4183460]();
}

uint64_t sub_1B2E82198()
{
  return MEMORY[0x1F4183480]();
}

uint64_t sub_1B2E821A8()
{
  return MEMORY[0x1F4183498]();
}

uint64_t sub_1B2E821B8()
{
  return MEMORY[0x1F41834A0]();
}

uint64_t sub_1B2E821C8()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t sub_1B2E821E8()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t sub_1B2E821F8()
{
  return MEMORY[0x1F4183500]();
}

uint64_t sub_1B2E82208()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1B2E82218()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1B2E82228()
{
  return MEMORY[0x1F41835D0]();
}

uint64_t sub_1B2E82238()
{
  return MEMORY[0x1F4183630]();
}

uint64_t sub_1B2E82248()
{
  return MEMORY[0x1F4183638]();
}

uint64_t sub_1B2E82258()
{
  return MEMORY[0x1F4183640]();
}

uint64_t sub_1B2E82268()
{
  return MEMORY[0x1F4183650]();
}

uint64_t sub_1B2E82278()
{
  return MEMORY[0x1F4183658]();
}

uint64_t sub_1B2E82288()
{
  return MEMORY[0x1F4183660]();
}

uint64_t sub_1B2E82298()
{
  return MEMORY[0x1F4183680]();
}

uint64_t sub_1B2E822A8()
{
  return MEMORY[0x1F4183688]();
}

uint64_t sub_1B2E822B8()
{
  return MEMORY[0x1F4183690]();
}

uint64_t sub_1B2E822C8()
{
  return MEMORY[0x1F4188420]();
}

uint64_t sub_1B2E822D8()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1B2E822E8()
{
  return MEMORY[0x1F4183740]();
}

uint64_t sub_1B2E822F8()
{
  return MEMORY[0x1F4183750]();
}

uint64_t sub_1B2E82308()
{
  return MEMORY[0x1F4183798]();
}

uint64_t sub_1B2E82318()
{
  return MEMORY[0x1F41837B8]();
}

uint64_t sub_1B2E82328()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1B2E82338()
{
  return MEMORY[0x1F40E6060]();
}

uint64_t sub_1B2E82348()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1B2E82358()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_1B2E82368()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_1B2E82378()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1B2E82388()
{
  return MEMORY[0x1F40E61E8]();
}

uint64_t sub_1B2E82398()
{
  return MEMORY[0x1F40E61F8]();
}

uint64_t sub_1B2E823A8()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_1B2E823B8()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_1B2E823C8()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_1B2E823D8()
{
  return MEMORY[0x1F40E62E8]();
}

uint64_t sub_1B2E823E8()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1B2E823F8()
{
  return MEMORY[0x1F4183898]();
}

uint64_t sub_1B2E82408()
{
  return MEMORY[0x1F41838A0]();
}

uint64_t sub_1B2E82418()
{
  return MEMORY[0x1F411B450]();
}

uint64_t sub_1B2E82428()
{
  return MEMORY[0x1F411B458]();
}

uint64_t sub_1B2E82438()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_1B2E82448()
{
  return MEMORY[0x1F4183920]();
}

uint64_t sub_1B2E82458()
{
  return MEMORY[0x1F4183928]();
}

uint64_t sub_1B2E82468()
{
  return MEMORY[0x1F4183940]();
}

uint64_t sub_1B2E82478()
{
  return MEMORY[0x1F4183958]();
}

uint64_t sub_1B2E82488()
{
  return MEMORY[0x1F4183968]();
}

uint64_t sub_1B2E82498()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1B2E824A8()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1B2E824B8()
{
  return MEMORY[0x1F41839F8]();
}

uint64_t sub_1B2E824C8()
{
  return MEMORY[0x1F4183A00]();
}

uint64_t sub_1B2E824D8()
{
  return MEMORY[0x1F4183A08]();
}

uint64_t sub_1B2E824E8()
{
  return MEMORY[0x1F4183A10]();
}

uint64_t sub_1B2E824F8()
{
  return MEMORY[0x1F4183A28]();
}

uint64_t sub_1B2E82508()
{
  return MEMORY[0x1F4183A30]();
}

uint64_t sub_1B2E82518()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1B2E82528()
{
  return MEMORY[0x1F4183A48]();
}

uint64_t sub_1B2E82538()
{
  return MEMORY[0x1F4183A60]();
}

uint64_t sub_1B2E82548()
{
  return MEMORY[0x1F4183A78]();
}

uint64_t sub_1B2E82558()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1B2E82568()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t sub_1B2E82578()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_1B2E82598()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t sub_1B2E825A8()
{
  return MEMORY[0x1F4183AC8]();
}

uint64_t sub_1B2E825B8()
{
  return MEMORY[0x1F4183B00]();
}

uint64_t sub_1B2E825C8()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_1B2E825D8()
{
  return MEMORY[0x1F4183B30]();
}

uint64_t sub_1B2E825E8()
{
  return MEMORY[0x1F4183B48]();
}

uint64_t sub_1B2E825F8()
{
  return MEMORY[0x1F4183B58]();
}

uint64_t sub_1B2E82608()
{
  return MEMORY[0x1F4183B88]();
}

uint64_t sub_1B2E82618()
{
  return MEMORY[0x1F4183B90]();
}

uint64_t sub_1B2E82628()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_1B2E82638()
{
  return MEMORY[0x1F40E6320]();
}

uint64_t sub_1B2E82648()
{
  return MEMORY[0x1F411B460]();
}

uint64_t sub_1B2E82658()
{
  return MEMORY[0x1F411B468]();
}

uint64_t sub_1B2E82668()
{
  return MEMORY[0x1F4183BA8]();
}

uint64_t sub_1B2E82678()
{
  return MEMORY[0x1F4183BB8]();
}

uint64_t sub_1B2E82688()
{
  return MEMORY[0x1F4183BE8]();
}

uint64_t sub_1B2E82698()
{
  return MEMORY[0x1F4183BF8]();
}

uint64_t sub_1B2E826A8()
{
  return MEMORY[0x1F4183C08]();
}

uint64_t sub_1B2E826B8()
{
  return MEMORY[0x1F4183C10]();
}

uint64_t sub_1B2E826C8()
{
  return MEMORY[0x1F4183C18]();
}

uint64_t sub_1B2E826D8()
{
  return MEMORY[0x1F4183C38]();
}

uint64_t sub_1B2E826E8()
{
  return MEMORY[0x1F4183C40]();
}

uint64_t sub_1B2E826F8()
{
  return MEMORY[0x1F4183C48]();
}

uint64_t sub_1B2E82708()
{
  return MEMORY[0x1F4183C60]();
}

uint64_t sub_1B2E82718()
{
  return MEMORY[0x1F4183C68]();
}

uint64_t sub_1B2E82728()
{
  return MEMORY[0x1F4183C70]();
}

uint64_t sub_1B2E82738()
{
  return MEMORY[0x1F4183C80]();
}

uint64_t sub_1B2E82748()
{
  return MEMORY[0x1F4183C88]();
}

uint64_t sub_1B2E82758()
{
  return MEMORY[0x1F4183C90]();
}

uint64_t sub_1B2E82768()
{
  return MEMORY[0x1F4183CD0]();
}

uint64_t sub_1B2E82778()
{
  return MEMORY[0x1F4183D70]();
}

uint64_t sub_1B2E82788()
{
  return MEMORY[0x1F4183D80]();
}

uint64_t sub_1B2E82798()
{
  return MEMORY[0x1F4183D98]();
}

uint64_t sub_1B2E827A8()
{
  return MEMORY[0x1F4183DB0]();
}

uint64_t sub_1B2E827E8()
{
  return MEMORY[0x1F4183DF8]();
}

uint64_t sub_1B2E827F8()
{
  return MEMORY[0x1F4183E10]();
}

uint64_t sub_1B2E82808()
{
  return MEMORY[0x1F4183E28]();
}

uint64_t sub_1B2E82818()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_1B2E82828()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1B2E82838()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1B2E82848()
{
  return MEMORY[0x1F4183E88]();
}

uint64_t sub_1B2E82858()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_1B2E82868()
{
  return MEMORY[0x1F4167848]();
}

uint64_t sub_1B2E82878()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1B2E82888()
{
  return MEMORY[0x1F4183EA0]();
}

uint64_t sub_1B2E82898()
{
  return MEMORY[0x1F4183EA8]();
}

uint64_t sub_1B2E828A8()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_1B2E828B8()
{
  return MEMORY[0x1F4183EE8]();
}

uint64_t sub_1B2E828C8()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_1B2E828D8()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1B2E828E8()
{
  return MEMORY[0x1F4183F18]();
}

uint64_t sub_1B2E828F8()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_1B2E82908()
{
  return MEMORY[0x1F4183F40]();
}

uint64_t sub_1B2E82918()
{
  return MEMORY[0x1F4183F60]();
}

uint64_t sub_1B2E82928()
{
  return MEMORY[0x1F4183F70]();
}

uint64_t sub_1B2E82938()
{
  return MEMORY[0x1F4183F78]();
}

uint64_t sub_1B2E82948()
{
  return MEMORY[0x1F4183F88]();
}

uint64_t sub_1B2E82958()
{
  return MEMORY[0x1F4183F98]();
}

uint64_t sub_1B2E82968()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1B2E82978()
{
  return MEMORY[0x1F4183FC8]();
}

uint64_t sub_1B2E82988()
{
  return MEMORY[0x1F4183FD8]();
}

uint64_t sub_1B2E82998()
{
  return MEMORY[0x1F4183FF0]();
}

uint64_t sub_1B2E829A8()
{
  return MEMORY[0x1F411B478]();
}

uint64_t sub_1B2E829B8()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1B2E829C8()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t sub_1B2E829D8()
{
  return MEMORY[0x1F4187C08]();
}

uint64_t sub_1B2E829F8()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_1B2E82A08()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_1B2E82A28()
{
  return MEMORY[0x1F4187D98]();
}

uint64_t sub_1B2E82A38()
{
  return MEMORY[0x1F4187DD8]();
}

uint64_t sub_1B2E82A48()
{
  return MEMORY[0x1F4187E00]();
}

uint64_t sub_1B2E82A58()
{
  return MEMORY[0x1F40E63B8]();
}

uint64_t sub_1B2E82A68()
{
  return MEMORY[0x1F40E63C8]();
}

uint64_t sub_1B2E82A78()
{
  return MEMORY[0x1F40E63D8]();
}

uint64_t sub_1B2E82A88()
{
  return MEMORY[0x1F4184008]();
}

uint64_t sub_1B2E82A98()
{
  return MEMORY[0x1F411B488]();
}

uint64_t sub_1B2E82AA8()
{
  return MEMORY[0x1F411B490]();
}

uint64_t sub_1B2E82AB8()
{
  return MEMORY[0x1F4184048]();
}

uint64_t sub_1B2E82AC8()
{
  return MEMORY[0x1F4184080]();
}

uint64_t sub_1B2E82AD8()
{
  return MEMORY[0x1F40E63E8]();
}

uint64_t sub_1B2E82AE8()
{
  return MEMORY[0x1F41840C0]();
}

uint64_t sub_1B2E82AF8()
{
  return MEMORY[0x1F40E6430]();
}

uint64_t sub_1B2E82B08()
{
  return MEMORY[0x1F40E6458]();
}

uint64_t sub_1B2E82B18()
{
  return MEMORY[0x1F4184100]();
}

uint64_t sub_1B2E82B28()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1B2E82B38()
{
  return MEMORY[0x1F41841D0]();
}

uint64_t sub_1B2E82B48()
{
  return MEMORY[0x1F4184250]();
}

uint64_t sub_1B2E82B58()
{
  return MEMORY[0x1F40E6468]();
}

uint64_t sub_1B2E82B68()
{
  return MEMORY[0x1F40E6478]();
}

uint64_t sub_1B2E82B78()
{
  return MEMORY[0x1F40E6490]();
}

uint64_t sub_1B2E82B88()
{
  return MEMORY[0x1F40E64A0]();
}

uint64_t sub_1B2E82B98()
{
  return MEMORY[0x1F40E64A8]();
}

uint64_t sub_1B2E82BA8()
{
  return MEMORY[0x1F411B4A0]();
}

uint64_t sub_1B2E82BB8()
{
  return MEMORY[0x1F4167CE8]();
}

uint64_t sub_1B2E82BC8()
{
  return MEMORY[0x1F4184270]();
}

uint64_t sub_1B2E82BD8()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_1B2E82BE8()
{
  return MEMORY[0x1F4188450]();
}

uint64_t sub_1B2E82BF8()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_1B2E82C08()
{
  return MEMORY[0x1F4184330]();
}

uint64_t sub_1B2E82C18()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_1B2E82C28()
{
  return MEMORY[0x1F4184340]();
}

uint64_t sub_1B2E82C38()
{
  return MEMORY[0x1F4184348]();
}

uint64_t sub_1B2E82C58()
{
  return MEMORY[0x1F4184368]();
}

uint64_t sub_1B2E82C68()
{
  return MEMORY[0x1F4184370]();
}

uint64_t sub_1B2E82C78()
{
  return MEMORY[0x1F4184378]();
}

uint64_t sub_1B2E82C98()
{
  return MEMORY[0x1F4184390]();
}

uint64_t sub_1B2E82CA8()
{
  return MEMORY[0x1F4184398]();
}

uint64_t sub_1B2E82CB8()
{
  return MEMORY[0x1F41843A0]();
}

uint64_t sub_1B2E82CC8()
{
  return MEMORY[0x1F41843A8]();
}

uint64_t sub_1B2E82CD8()
{
  return MEMORY[0x1F41843D0]();
}

uint64_t sub_1B2E82CE8()
{
  return MEMORY[0x1F41843D8]();
}

uint64_t sub_1B2E82CF8()
{
  return MEMORY[0x1F41843E8]();
}

uint64_t sub_1B2E82D08()
{
  return MEMORY[0x1F4184410]();
}

uint64_t sub_1B2E82D18()
{
  return MEMORY[0x1F4184418]();
}

uint64_t sub_1B2E82D28()
{
  return MEMORY[0x1F4184430]();
}

uint64_t sub_1B2E82D38()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_1B2E82D48()
{
  return MEMORY[0x1F41844A0]();
}

uint64_t sub_1B2E82D58()
{
  return MEMORY[0x1F4184568]();
}

uint64_t sub_1B2E82D68()
{
  return MEMORY[0x1F4184578]();
}

uint64_t sub_1B2E82D78()
{
  return MEMORY[0x1F40DB778]();
}

uint64_t sub_1B2E82D88()
{
  return MEMORY[0x1F40DB790]();
}

uint64_t sub_1B2E82D98()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_1B2E82DA8()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_1B2E82DB8()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1B2E82DC8()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1B2E82DD8()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_1B2E82DE8()
{
  return MEMORY[0x1F40DB798]();
}

uint64_t sub_1B2E82DF8()
{
  return MEMORY[0x1F40DB7A0]();
}

uint64_t sub_1B2E82E08()
{
  return MEMORY[0x1F40E66C8]();
}

uint64_t sub_1B2E82E18()
{
  return MEMORY[0x1F4186FD8]();
}

uint64_t sub_1B2E82E28()
{
  return MEMORY[0x1F41870A0]();
}

uint64_t sub_1B2E82E38()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_1B2E82E48()
{
  return MEMORY[0x1F4187100]();
}

uint64_t sub_1B2E82E58()
{
  return MEMORY[0x1F4188708]();
}

uint64_t sub_1B2E82E68()
{
  return MEMORY[0x1F4188710]();
}

uint64_t sub_1B2E82E78()
{
  return MEMORY[0x1F4188718]();
}

uint64_t sub_1B2E82E88()
{
  return MEMORY[0x1F4187278]();
}

uint64_t sub_1B2E82E98()
{
  return MEMORY[0x1F4187288]();
}

uint64_t sub_1B2E82EA8()
{
  return MEMORY[0x1F40E67E8]();
}

uint64_t sub_1B2E82ED8()
{
  return MEMORY[0x1F40E68E8]();
}

uint64_t sub_1B2E82EE8()
{
  return MEMORY[0x1F40E6910]();
}

uint64_t sub_1B2E82EF8()
{
  return MEMORY[0x1F41874A8]();
}

uint64_t sub_1B2E82F08()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_1B2E82F18()
{
  return MEMORY[0x1F41874D0]();
}

uint64_t sub_1B2E82F28()
{
  return MEMORY[0x1F4188720]();
}

uint64_t sub_1B2E82F38()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1B2E82F48()
{
  return MEMORY[0x1F41846E8]();
}

uint64_t sub_1B2E82F58()
{
  return MEMORY[0x1F4184728]();
}

uint64_t sub_1B2E82F68()
{
  return MEMORY[0x1F4184730]();
}

uint64_t sub_1B2E82F78()
{
  return MEMORY[0x1F4184770]();
}

uint64_t sub_1B2E82F88()
{
  return MEMORY[0x1F4184780]();
}

uint64_t sub_1B2E82F98()
{
  return MEMORY[0x1F4184790]();
}

uint64_t sub_1B2E82FA8()
{
  return MEMORY[0x1F41847A0]();
}

uint64_t sub_1B2E82FB8()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1B2E82FC8()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1B2E82FD8()
{
  return MEMORY[0x1F40E6BA8]();
}

uint64_t sub_1B2E82FE8()
{
  return MEMORY[0x1F40E6BB0]();
}

uint64_t sub_1B2E82FF8()
{
  return MEMORY[0x1F40E6BF0]();
}

uint64_t sub_1B2E83008()
{
  return MEMORY[0x1F40E6C68]();
}

uint64_t sub_1B2E83018()
{
  return MEMORY[0x1F40E6C80]();
}

uint64_t sub_1B2E83028()
{
  return MEMORY[0x1F40E6D38]();
}

uint64_t sub_1B2E83038()
{
  return MEMORY[0x1F40E6D88]();
}

uint64_t sub_1B2E83048()
{
  return MEMORY[0x1F41876A8]();
}

uint64_t sub_1B2E83058()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_1B2E83068()
{
  return MEMORY[0x1F4184A40]();
}

uint64_t sub_1B2E83078()
{
  return MEMORY[0x1F4184A60]();
}

uint64_t sub_1B2E83088()
{
  return MEMORY[0x1F4184A78]();
}

uint64_t sub_1B2E83098()
{
  return MEMORY[0x1F4184A80]();
}

uint64_t sub_1B2E830A8()
{
  return MEMORY[0x1F4184AC8]();
}

uint64_t sub_1B2E830C8()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1B2E830D8()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1B2E830E8()
{
  return MEMORY[0x1F4184B28]();
}

uint64_t sub_1B2E830F8()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_1B2E83108()
{
  return MEMORY[0x1F4184B60]();
}

uint64_t sub_1B2E83118()
{
  return MEMORY[0x1F4184BC0]();
}

uint64_t sub_1B2E83128()
{
  return MEMORY[0x1F4184BE0]();
}

uint64_t sub_1B2E83138()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_1B2E83148()
{
  return MEMORY[0x1F4184C20]();
}

uint64_t sub_1B2E83158()
{
  return MEMORY[0x1F4184C38]();
}

uint64_t sub_1B2E83168()
{
  return MEMORY[0x1F4184C60]();
}

uint64_t sub_1B2E83178()
{
  return MEMORY[0x1F4184C68]();
}

uint64_t sub_1B2E83188()
{
  return MEMORY[0x1F4187F20]();
}

uint64_t sub_1B2E83198()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1B2E831A8()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1B2E831B8()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_1B2E831C8()
{
  return MEMORY[0x1F4184CC0]();
}

uint64_t sub_1B2E831E8()
{
  return MEMORY[0x1F4184CE0]();
}

uint64_t sub_1B2E831F8()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1B2E83208()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1B2E83218()
{
  return MEMORY[0x1F4184D18]();
}

uint64_t sub_1B2E83228()
{
  return MEMORY[0x1F4184D20]();
}

uint64_t sub_1B2E83238()
{
  return MEMORY[0x1F4184D70]();
}

uint64_t sub_1B2E83248()
{
  return MEMORY[0x1F4184D78]();
}

uint64_t sub_1B2E83258()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1B2E83268()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_1B2E83278()
{
  return MEMORY[0x1F4184DD0]();
}

uint64_t sub_1B2E83288()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t sub_1B2E83298()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1B2E832A8()
{
  return MEMORY[0x1F4184E70]();
}

uint64_t sub_1B2E832C8()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_1B2E832D8()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_1B2E832E8()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_1B2E832F8()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_1B2E83308()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_1B2E83318()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_1B2E83328()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_1B2E83338()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_1B2E83348()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_1B2E83358()
{
  return MEMORY[0x1F4184F98]();
}

uint64_t sub_1B2E83368()
{
  return MEMORY[0x1F4184FF8]();
}

uint64_t sub_1B2E83378()
{
  return MEMORY[0x1F4185048]();
}

uint64_t sub_1B2E83388()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1B2E83398()
{
  return MEMORY[0x1F41851A0]();
}

uint64_t sub_1B2E833A8()
{
  return MEMORY[0x1F41851B8]();
}

uint64_t sub_1B2E833B8()
{
  return MEMORY[0x1F41851C0]();
}

uint64_t sub_1B2E833C8()
{
  return MEMORY[0x1F41851F8]();
}

uint64_t sub_1B2E833D8()
{
  return MEMORY[0x1F4185238]();
}

uint64_t sub_1B2E833E8()
{
  return MEMORY[0x1F4185260]();
}

uint64_t sub_1B2E833F8()
{
  return MEMORY[0x1F4185270]();
}

uint64_t sub_1B2E83408()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1B2E83418()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1B2E83428()
{
  return MEMORY[0x1F41852A8]();
}

uint64_t sub_1B2E83438()
{
  return MEMORY[0x1F41852B0]();
}

uint64_t sub_1B2E83448()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1B2E83458()
{
  return MEMORY[0x1F4185358]();
}

uint64_t sub_1B2E83468()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1B2E83478()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1B2E83488()
{
  return MEMORY[0x1F4185378]();
}

uint64_t sub_1B2E83498()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1B2E834A8()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1B2E834B8()
{
  return MEMORY[0x1F41853A8]();
}

uint64_t sub_1B2E834C8()
{
  return MEMORY[0x1F4185450]();
}

uint64_t sub_1B2E834D8()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1B2E834E8()
{
  return MEMORY[0x1F41854D8]();
}

uint64_t sub_1B2E834F8()
{
  return MEMORY[0x1F41854E0]();
}

uint64_t sub_1B2E83508()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_1B2E83528()
{
  return MEMORY[0x1F4185508]();
}

uint64_t sub_1B2E83538()
{
  return MEMORY[0x1F4185518]();
}

uint64_t sub_1B2E83548()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_1B2E83558()
{
  return MEMORY[0x1F4185540]();
}

uint64_t sub_1B2E83568()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_1B2E83578()
{
  return MEMORY[0x1F4185570]();
}

uint64_t sub_1B2E83588()
{
  return MEMORY[0x1F4185578]();
}

uint64_t sub_1B2E83598()
{
  return MEMORY[0x1F4185580]();
}

uint64_t sub_1B2E835A8()
{
  return MEMORY[0x1F4185588]();
}

uint64_t sub_1B2E835B8()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_1B2E835C8()
{
  return MEMORY[0x1F41855B0]();
}

uint64_t sub_1B2E835D8()
{
  return MEMORY[0x1F41855B8]();
}

uint64_t sub_1B2E835E8()
{
  return MEMORY[0x1F41855D8]();
}

uint64_t sub_1B2E835F8()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t sub_1B2E83608()
{
  return MEMORY[0x1F41855F0]();
}

uint64_t sub_1B2E83618()
{
  return MEMORY[0x1F4185608]();
}

uint64_t sub_1B2E83628()
{
  return MEMORY[0x1F4185628]();
}

uint64_t sub_1B2E83648()
{
  return MEMORY[0x1F4185638]();
}

uint64_t sub_1B2E83658()
{
  return MEMORY[0x1F4185648]();
}

uint64_t sub_1B2E83668()
{
  return MEMORY[0x1F4185658]();
}

uint64_t sub_1B2E83678()
{
  return MEMORY[0x1F4185668]();
}

uint64_t sub_1B2E83688()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_1B2E83698()
{
  return MEMORY[0x1F4185698]();
}

uint64_t sub_1B2E836A8()
{
  return MEMORY[0x1F41856A0]();
}

uint64_t sub_1B2E836B8()
{
  return MEMORY[0x1F41856A8]();
}

uint64_t sub_1B2E836C8()
{
  return MEMORY[0x1F41856B0]();
}

uint64_t sub_1B2E836D8()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_1B2E836E8()
{
  return MEMORY[0x1F41856D8]();
}

uint64_t sub_1B2E836F8()
{
  return MEMORY[0x1F41856E0]();
}

uint64_t sub_1B2E83708()
{
  return MEMORY[0x1F4185700]();
}

uint64_t sub_1B2E83718()
{
  return MEMORY[0x1F4185710]();
}

uint64_t sub_1B2E83728()
{
  return MEMORY[0x1F4185730]();
}

uint64_t sub_1B2E83738()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1B2E83748()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1B2E83768()
{
  return MEMORY[0x1F41859A8]();
}

uint64_t sub_1B2E83778()
{
  return MEMORY[0x1F41859D8]();
}

uint64_t sub_1B2E83788()
{
  return MEMORY[0x1F41859F0]();
}

uint64_t sub_1B2E83798()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_1B2E837A8()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1B2E837C8()
{
  return MEMORY[0x1F4185B20]();
}

uint64_t sub_1B2E837D8()
{
  return MEMORY[0x1F4185B90]();
}

uint64_t sub_1B2E837E8()
{
  return MEMORY[0x1F4185B98]();
}

uint64_t sub_1B2E83808()
{
  return MEMORY[0x1F4185D10]();
}

uint64_t sub_1B2E83828()
{
  return MEMORY[0x1F4185D40]();
}

uint64_t sub_1B2E83838()
{
  return MEMORY[0x1F4185D68]();
}

uint64_t sub_1B2E83848()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1B2E83858()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1B2E83868()
{
  return MEMORY[0x1F4188170]();
}

uint64_t sub_1B2E838A8()
{
  return MEMORY[0x1F40E6E30]();
}

uint64_t sub_1B2E838B8()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1B2E838C8()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1B2E838D8()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1B2E838E8()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1B2E83908()
{
  return MEMORY[0x1F40E6E48]();
}

uint64_t sub_1B2E83918()
{
  return MEMORY[0x1F40E6E60]();
}

uint64_t sub_1B2E83928()
{
  return MEMORY[0x1F411B4B0]();
}

uint64_t sub_1B2E83938()
{
  return MEMORY[0x1F411B4B8]();
}

uint64_t sub_1B2E83948()
{
  return MEMORY[0x1F411B4C0]();
}

uint64_t sub_1B2E83958()
{
  return MEMORY[0x1F4185E90]();
}

uint64_t sub_1B2E83968()
{
  return MEMORY[0x1F4185E98]();
}

uint64_t sub_1B2E83978()
{
  return MEMORY[0x1F4185EA8]();
}

uint64_t sub_1B2E83988()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1B2E83998()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1B2E839A8()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_1B2E839B8()
{
  return MEMORY[0x1F4185EE0]();
}

uint64_t sub_1B2E839C8()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_1B2E839D8()
{
  return MEMORY[0x1F4185EF0]();
}

uint64_t sub_1B2E839E8()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1B2E839F8()
{
  return MEMORY[0x1F4185F00]();
}

uint64_t sub_1B2E83A08()
{
  return MEMORY[0x1F4185F68]();
}

uint64_t sub_1B2E83A18()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_1B2E83A28()
{
  return MEMORY[0x1F4185FE0]();
}

uint64_t sub_1B2E83A38()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_1B2E83A48()
{
  return MEMORY[0x1F4186070]();
}

uint64_t sub_1B2E83A58()
{
  return MEMORY[0x1F41860B8]();
}

uint64_t sub_1B2E83A68()
{
  return MEMORY[0x1F41860D8]();
}

uint64_t sub_1B2E83A78()
{
  return MEMORY[0x1F41860E8]();
}

uint64_t sub_1B2E83A88()
{
  return MEMORY[0x1F41860F0]();
}

uint64_t sub_1B2E83AB8()
{
  return MEMORY[0x1F4188198]();
}

uint64_t sub_1B2E83AC8()
{
  return MEMORY[0x1F41881A8]();
}

uint64_t sub_1B2E83AD8()
{
  return MEMORY[0x1F41881B0]();
}

uint64_t sub_1B2E83AF8()
{
  return MEMORY[0x1F4186318]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1F41138A0]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1F41138B8]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x1F410C8D0]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x1F40D70A8]();
  return result;
}

CFCharacterSetRef CFCharacterSetCreateWithCharactersInString(CFAllocatorRef alloc, CFStringRef theString)
{
  return (CFCharacterSetRef)MEMORY[0x1F40D7738](alloc, theString);
}

void CFRelease(CFTypeRef cf)
{
}

CFStringTokenizerRef CFStringTokenizerCreate(CFAllocatorRef alloc, CFStringRef string, CFRange range, CFOptionFlags options, CFLocaleRef locale)
{
  return (CFStringTokenizerRef)MEMORY[0x1F40D8698](alloc, string, range.location, range.length, options, locale);
}

void CFStringTokenizerSetString(CFStringTokenizerRef tokenizer, CFStringRef string, CFRange range)
{
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  MEMORY[0x1F40DB5A0](latitude, longitude);
  result.longitude = v3;
  result.latitude = v2;
  return result;
}

CFTimeInterval IOPSGetTimeRemainingEstimate(void)
{
  MEMORY[0x1F40E9128]();
  return result;
}

uint64_t ITSTokenListCopyEscapedTokenAtIndex()
{
  return MEMORY[0x1F41276B8]();
}

uint64_t ITSTokenListCreate()
{
  return MEMORY[0x1F41276C0]();
}

uint64_t ITSTokenListGetCount()
{
  return MEMORY[0x1F41276C8]();
}

uint64_t ITSTokenListPopulateFromString()
{
  return MEMORY[0x1F41276D0]();
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1F40E72B0](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1F40E72C8]();
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x1F40F7138](task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x1F40F7160](allocator);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _PASRemoveCharacterSet()
{
  return MEMORY[0x1F41462E0]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

int *__error(void)
{
  return (int *)MEMORY[0x1F40C9B88]();
}

void _exit(int a1)
{
}

{
  return MEMORY[0x1F41813D0]();
}

{
  return MEMORY[0x1F41813F0]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1F40C9FB0]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1F4186340]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x1F4186398]();
}

uint64_t _swift_stdlib_strtof_clocale()
{
  return MEMORY[0x1F41863A0]();
}

void bzero(void *a1, size_t a2)
{
}

uint64_t cblas_sdot_NEWLAPACK()
{
  return MEMORY[0x1F40D1600]();
}

uint64_t cblas_snrm2_NEWLAPACK()
{
  return MEMORY[0x1F40D1670]();
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1F40CBC40](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBC50](dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

long double exp(long double __x)
{
  MEMORY[0x1F40CBFE0](__x);
  return result;
}

float expf(float a1)
{
  MEMORY[0x1F40CBFF8](a1);
  return result;
}

void free(void *a1)
{
}

pid_t getpid(void)
{
  return MEMORY[0x1F40CC4A0]();
}

long double log(long double __x)
{
  MEMORY[0x1F40CC878](__x);
  return result;
}

long double log2(long double __x)
{
  MEMORY[0x1F40CC8A8](__x);
  return result;
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1F40CC910]();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x1F40CCA60](info);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)((uint64_t (*)(id, SEL))MEMORY[0x1F4181798])(a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1F40CD550](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1F40CD558](log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

BOOL os_unfair_lock_trylock(os_unfair_lock_t lock)
{
  return MEMORY[0x1F40CD5F0](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_unfair_recursive_lock_lock_with_options()
{
  return MEMORY[0x1F40CD610]();
}

uint64_t os_unfair_recursive_lock_trylock()
{
  return MEMORY[0x1F40CD618]();
}

qos_class_t qos_class_self(void)
{
  return MEMORY[0x1F40CDBD8]();
}

uint64_t sandbox_check()
{
  return MEMORY[0x1F40CDDD0]();
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1F40CDDF8]();
}

uint64_t sandbox_extension_release()
{
  return MEMORY[0x1F40CDE50]();
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x1F4182070](a1, *(void *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1F4182078](a1, *(void *)&iCol);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1F41820A8](a1, *(void *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1F41820D8](a1, *(void *)&iCol);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1F41821D8](pStmt);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x1F4182290](db, zSql, *(void *)&nByte, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x1F41823B0](a1);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1F40CE158](__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1F40CE188](*(void *)&__errnum);
}

unint64_t strtoull(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1F40CE2F0](__str, __endptr, *(void *)&__base);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x1F41881C8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1F4186478]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x1F41864A8]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1F4188218]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1F4188220]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1F41864C0]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1F41864D0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1F41864E8]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1F41864F0]();
}

uint64_t swift_dynamicCastObjCProtocolUnconditional()
{
  return MEMORY[0x1F41864F8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1F4186580]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1F41865F0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1F4186618]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1F41866A0]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1F41866C0]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x1F41866E8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x1F4186788]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1F41867B0]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_task_localValuePop()
{
  return MEMORY[0x1F4188280]();
}

uint64_t swift_task_localValuePush()
{
  return MEMORY[0x1F4188288]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1F41867D8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1F4186840]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unownedRelease()
{
  return MEMORY[0x1F4186880]();
}

uint64_t swift_unownedRetain()
{
  return MEMORY[0x1F4186888]();
}

uint64_t swift_unownedRetainStrong()
{
  return MEMORY[0x1F4186890]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1F41868A0]();
}

uint64_t swift_weakCopyAssign()
{
  return MEMORY[0x1F41868A8]();
}

uint64_t swift_weakCopyInit()
{
  return MEMORY[0x1F41868B0]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_weakTakeAssign()
{
  return MEMORY[0x1F41868D0]();
}

uint64_t swift_weakTakeInit()
{
  return MEMORY[0x1F41868D8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1F41868E8]();
}

int usleep(useconds_t a1)
{
  return MEMORY[0x1F40CE608](*(void *)&a1);
}

void vDSP_svesq(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Length __N)
{
}