uint64_t type metadata accessor for Analytics()
{
  return self;
}

uint64_t LogSignpost.signposter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LogSignpost() + 24);
  sub_1B2E81F38();
  sub_1B2999864();
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a1, v3, v4);
}

uint64_t type metadata accessor for LogSignpost()
{
  uint64_t result = qword_1EB7E65F0;
  if (!qword_1EB7E65F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LogSignpost.init(name:state:signposter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  uint64_t v7 = a6 + *(int *)(type metadata accessor for LogSignpost() + 24);
  sub_1B2E81F38();
  sub_1B2999864();
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);

  return v10(v7, a5, v8);
}

uint64_t sub_1B2999844()
{
  return 0x6850786966657270;
}

uint64_t sub_1B2999874()
{
  return v0;
}

uint64_t sub_1B2999880()
{
  return sub_1B2E80BE8();
}

char *sub_1B299989C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  return &a15;
}

uint64_t sub_1B29998E0()
{
  return sub_1B2E83A38();
}

uint64_t sub_1B29998FC()
{
  return v0;
}

void sub_1B2999908(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1B2999974()
{
  return v0;
}

uint64_t sub_1B299999C()
{
  return sub_1B2E82538();
}

uint64_t sub_1B29999B8()
{
  *(_OWORD *)(v1 + 2064) = *(_OWORD *)(v1 + 2016);
  *(_OWORD *)(v1 + 2080) = *(_OWORD *)(v1 + 2032);
  *(unsigned char *)(v1 + 2096) = *(unsigned char *)(v1 + 2048);
  return sub_1B29AB098(v0 + 6464, v0 + 80);
}

BOOL sub_1B29999F8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1B2999A34()
{
  return v0;
}

uint64_t sub_1B2999A4C()
{
  return v0;
}

uint64_t sub_1B2999A74()
{
  return sub_1B2E82388();
}

void sub_1B2999A94(__n128 a1)
{
  *(void *)(v1 + 16) = v2;
  os_log_type_t v6 = (__n128 *)(v1 + 32 * v3);
  v6[2].n128_u64[0] = v5;
  v6[2].n128_u8[8] = v4;
  v6[3] = a1;
}

uint64_t sub_1B2999AB8()
{
  return v0 + 8;
}

id sub_1B2999ADC(uint64_t a1)
{
  return objc_msgSend(v1, sel_featureValueForName_, a1);
}

uint64_t sub_1B2999B00()
{
  return sub_1B2E82348();
}

uint64_t sub_1B2999B1C()
{
  return 0x6E776F6E6B6E75;
}

uint64_t *sub_1B2999B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 144) = a1;
  *(void *)(v2 - 136) = a2;
  return sub_1B29D1C70((uint64_t *)(v2 - 168));
}

uint64_t sub_1B2999B4C()
{
  return sub_1B2E83318();
}

uint64_t sub_1B2999B64()
{
  return swift_bridgeObjectRetain();
}

void sub_1B2999BA8()
{
  *(void *)(v1 + 16) = v0;
}

uint64_t sub_1B2999BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_1B2999BE4()
{
  return 1701667182;
}

uint64_t sub_1B2999BF4()
{
  return v0;
}

void sub_1B2999C0C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1B2999C2C()
{
  return 0;
}

void sub_1B2999C38(uint64_t a1@<X8>)
{
  *(void *)(v1 - 224) = a1;
  *(unsigned char *)(v1 - 216) = 2;
}

void sub_1B2999C50(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1B2999C80()
{
  return sub_1B2E82FB8();
}

uint64_t sub_1B2999CA4()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B2999CBC()
{
  return sub_1B2E81F38();
}

uint64_t sub_1B2999CE4()
{
  return v0;
}

uint64_t sub_1B2999D00()
{
  return sub_1B2D19F14(v1, v2, v3, v0);
}

uint64_t sub_1B2999D20()
{
  return v0;
}

uint64_t sub_1B2999D68@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 48) = 0;
  return swift_willThrow();
}

void sub_1B2999D8C()
{
  sub_1B2A46C04();
}

uint64_t sub_1B2999DAC()
{
  return sub_1B2E83388();
}

uint64_t sub_1B2999DC4()
{
  return sub_1B2E805E8();
}

uint64_t sub_1B2999DFC()
{
  return 0x49747865746E6F63;
}

uint64_t sub_1B2999E38()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2999E64()
{
  return sub_1B2E81528();
}

uint64_t sub_1B2999E7C()
{
  return sub_1B2E83A18();
}

void sub_1B2999EA0()
{
  sub_1B29B7048();
}

uint64_t initializeWithCopy for LogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1B2E81F38();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t sub_1B2999F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9C3E618 + dword_1E9C3E618);
  v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  void *v10 = v5;
  v10[1] = sub_1B299ACAC;
  return v12(a1, a2, a4, a5);
}

uint64_t sub_1B299A058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = v17;
  v8[8] = v18;
  v8[5] = a7;
  v8[6] = a8;
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9C3E610 + dword_1E9C3E610);
  uint64_t v13 = (void *)swift_task_alloc();
  v8[9] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_1B299ABAC;
  return v15(a4, a5, a6, a8, v18);
}

id sub_1B299A13C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1B299A1C8();
    uint64_t v4 = (void *)sub_1B2E820D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

unint64_t sub_1B299A1C8()
{
  unint64_t result = qword_1EB7E62E8;
  if (!qword_1EB7E62E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB7E62E8);
  }
  return result;
}

uint64_t sub_1B299A208()
{
  sub_1B299A25C();

  return swift_deallocClassInstance();
}

uint64_t sub_1B299A25C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = sub_1B2E82F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v4 = sub_1B2E82F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_weakDestroy();
  swift_weakDestroy();
  return v0;
}

uint64_t destroy for LogSignpost(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1B2E81F38();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t static Paths.baseDirectoryURL.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB7E52E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1B2E80498();
  uint64_t v3 = sub_1B29A4B98(v2, (uint64_t)qword_1EB7E52C0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1B299A4A8()
{
  sub_1B299B708();
  uint64_t v3 = v2;
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v4[11];
  uint64_t v6 = v4[10];
  uint64_t v7 = v4[7];
  uint64_t v8 = *v1;
  sub_1B299B0E0();
  *uint64_t v9 = v8;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  v5(v6, v7);
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1B299AB48, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = *(uint64_t (**)(void))(v8 + 8);
    return v10();
  }
}

Swift::Void __swiftcall LRUCache.clear()()
{
}

uint64_t sub_1B299A738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(void *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B299AA10, 0, 0);
}

void static Analytics.sendEventForProductionLazy(eventName:eventPayloadBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)MEMORY[0x1B3EB2480]();
  sub_1B299A8A0(a1, a2, a3, a4);
}

void sub_1B299A8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B2E82378();
  sub_1B2E82518();
  sub_1B2E82518();
  uint64_t v6 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  v8[4] = a3;
  v8[5] = a4;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  v8[2] = sub_1B299A13C;
  v8[3] = &unk_1F0ADC118;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v7);
}

uint64_t sub_1B299AA10()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  sub_1B2E83868();
  swift_getAssociatedConformanceWitness();
  sub_1B2E83358();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[11] = v4;
  v0[12] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v4(v1, v2);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[13] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1B299A4A8;
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[3];
  uint64_t v9 = v0[4];
  return MEMORY[0x1F4188178](v6, v8, v9, v7);
}

uint64_t sub_1B299AB48()
{
  sub_1B299B3BC();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B299ABAC()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v2 = *v1;
  sub_1B299B0E0();
  *uint64_t v3 = v2;
  *(void *)(v4 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1B299AD7C();
    return v5();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1B2B4122C, 0, 0);
  }
}

uint64_t sub_1B299ACAC()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v1 = *v0;
  sub_1B299B0E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1B299AD7C();
  return v3();
}

uint64_t sub_1B299AD6C()
{
  return 0x786966657270;
}

uint64_t sub_1B299AD7C()
{
  return v0 + 8;
}

uint64_t sub_1B299AD88()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B299ADD8()
{
  v1[144] = v1[141];
  v1[145] = v1[142];
  *(unsigned char *)(v0 + 2656) = *(unsigned char *)(v0 + 2608);
  return sub_1B29AB098(v0 + 2624, v0 + 80);
}

uint64_t sub_1B299AE1C()
{
  return v0;
}

void sub_1B299AE34()
{
}

uint64_t sub_1B299AE98(int a1)
{
  *(_DWORD *)(v1 - 376) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B299AEBC()
{
  uint64_t v4 = v2[8];
  *(void *)(v0 + v2[7]) = *(void *)(v1 + v2[7]);
  *(void *)(v0 + v4) = *(void *)(v1 + v4);
  uint64_t v5 = v2[9];
  uint64_t v6 = v2[10];
  uint64_t v7 = v0 + v5;
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v8 + 8);
  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = v9;
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
  uint64_t v10 = v0 + v6;
  uint64_t v11 = v1 + v6;
  uint64_t v12 = *(void *)(v11 + 8);
  *(void *)uint64_t v10 = *(void *)v11;
  *(void *)(v10 + 8) = v12;
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
  uint64_t v13 = v2[11];
  uint64_t v14 = v2[12];
  uint64_t v15 = v0 + v13;
  uint64_t v16 = v1 + v13;
  uint64_t v17 = *(void *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  *(void *)(v15 + 8) = v17;
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  uint64_t v18 = v0 + v14;
  uint64_t v19 = v1 + v14;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = v2[13];
  uint64_t v21 = v0 + v20;
  uint64_t v22 = v1 + v20;
  uint64_t v23 = *(void *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = v23;
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B299AF64()
{
  return swift_getAssociatedTypeWitness();
}

void sub_1B299AF84()
{
  sub_1B29B7048();
}

uint64_t sub_1B299AFA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = a1 + *(void *)(v1 + 72) * v2;
  uint64_t v6 = *(void *)(v3 - 344);
  return sub_1B2C79920(v6, v5);
}

uint64_t sub_1B299AFC8()
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v3;
  *(void *)(v0 + 40) = v2 | 0x5000000000000000;
  *(void *)(*(void *)(v5 - 232) + 16) = v0;
  return v4;
}

uint64_t sub_1B299B020()
{
  return sub_1B2D01FE8();
}

uint64_t sub_1B299B040()
{
  sub_1B2D2BBF0(v0, v3, v1, v2);
  return sub_1B2CA72F4();
}

void *sub_1B299B08C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  result[6] = a26;
  result[7] = a25;
  result[8] = a24;
  result[9] = a23;
  result[10] = a22;
  result[11] = a21;
  return result;
}

uint64_t sub_1B299B0A8()
{
  return v0;
}

uint64_t sub_1B299B0F0(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_1B299B0FC(uint64_t a1, uint64_t a2)
{
  return a2 & ~(-1 << *(unsigned char *)(v2 + 32));
}

uint64_t sub_1B299B138()
{
  return sub_1B2E83688();
}

void sub_1B299B154()
{
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 96) = v3;
  *(unsigned char *)(v0 + 112) = *(unsigned char *)(v1 + 32);
  static EntityClass.entity.getter();
}

uint64_t sub_1B299B1BC()
{
  return type metadata accessor for LogSignpost();
}

id sub_1B299B1E4()
{
  return objc_allocWithZone(v0);
}

uint64_t sub_1B299B204(uint64_t result)
{
  *(void *)(v1 + 264) = result;
  return result;
}

double sub_1B299B220()
{
  *(void *)uint64_t v0 = v1;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  return result;
}

uint64_t sub_1B299B258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v11 = *(void *)(v9 - 224);
  uint64_t v12 = *(void *)(v9 - 216);
  uint64_t v13 = *(void *)(v9 - 208);
  uint64_t v14 = *(void *)(v9 - 200);
  uint64_t v15 = *(void *)(v9 - 192);
  uint64_t v16 = *(void *)(v9 - 184);
  uint64_t v17 = *(void *)(v9 - 176);
  uint64_t v18 = *(unsigned int *)(v9 - 168);
  return sub_1B2A5347C(v11, v12, v13, v14, v15, v16, v17, v18, a9);
}

uint64_t sub_1B299B27C()
{
  return *(void *)(v0 - 304);
}

uint64_t sub_1B299B288()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B299B2B4()
{
  return sub_1B2CA5124(v0, v1, 1u);
}

uint64_t sub_1B299B2D0()
{
  return sub_1B2E82688();
}

void sub_1B299B2F4(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v2 - 200) + v1) = a1;
}

uint64_t sub_1B299B330()
{
  return sub_1B2E82518();
}

uint64_t sub_1B299B34C()
{
  return sub_1B2E83548();
}

uint64_t sub_1B299B364()
{
  return sub_1B2E82648();
}

uint64_t sub_1B299B384()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_1B299B414()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B299B42C()
{
  *(_OWORD *)(v1 + 2784) = *(_OWORD *)(v1 + 2736);
  *(_OWORD *)(v1 + 2800) = *(_OWORD *)(v1 + 2752);
  *(unsigned char *)(v1 + 2816) = *(unsigned char *)(v1 + 2768);
  return sub_1B29AB098(v0 + 7184, v0 + 80);
}

uint64_t sub_1B299B460(uint64_t a1, uint64_t a2)
{
  sub_1B2A9DBC0(a1, a2, v2, v4, v3);
  return sub_1B2A22630(v7, v6, v2, v4, v3, v5);
}

uint64_t sub_1B299B4A8(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_1B299B4B4()
{
  return sub_1B2E81FB8();
}

void sub_1B299B4D4()
{
  sub_1B29C0730();
}

uint64_t sub_1B299B4F8()
{
  *(unsigned char *)(v2 + 476) = *(unsigned char *)(v1 + 32);
  *(void *)(v2 + 360) = v0;
  return swift_bridgeObjectRetain();
}

void sub_1B299B560()
{
  *(void *)(v2 - 240) = v1;
  *(void *)(v2 - 344) = v0;
}

void sub_1B299B5A0()
{
  uint64_t v1 = *(void *)(v0 - 144);
  uint64_t v2 = *(void *)(v0 - 136);
  uint64_t v3 = *(void *)(v0 - 128);
  __int16 v4 = *(_WORD *)(v0 - 120);
  *(void *)(v0 - 192) = *(void *)(v0 - 152);
  *(void *)(v0 - 184) = v1;
  *(void *)(v0 - 176) = v2;
  *(void *)(v0 - 168) = v3;
  *(_WORD *)(v0 - 160) = v4;
}

void sub_1B299B5C0()
{
  sub_1B29BFD80();
}

uint64_t sub_1B299B5E8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B299B600()
{
  return v0;
}

void sub_1B299B618()
{
  JUMPOUT(0x1B3EB1A20);
}

uint64_t sub_1B299B630()
{
  return v0;
}

uint64_t sub_1B299B66C()
{
  return swift_bridgeObjectRelease();
}

__n128 sub_1B299B688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,long long a23)
{
  return (__n128)a23;
}

uint64_t sub_1B299B6A4()
{
  return sub_1B2E82518();
}

uint64_t sub_1B299B6C4()
{
  return v0 - 128;
}

uint64_t sub_1B299B6E4()
{
  return 0x6F69746176656C65;
}

void sub_1B299B750()
{
  JUMPOUT(0x1B3EB30C0);
}

uint64_t sub_1B299B780()
{
  return 0;
}

unint64_t sub_1B299B7A4()
{
  return sub_1B29DAC38();
}

uint64_t sub_1B299B7C0()
{
  return v0;
}

uint64_t sub_1B299B7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return sub_1B2A23F1C(v23, a22, a23);
}

void sub_1B299B810()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_1B299B820()
{
  *(void *)(v2 + *(int *)(v0 + 20)) = *(void *)(v1 + *(int *)(v0 + 20));
  return v2;
}

uint64_t sub_1B299B834()
{
  return v0;
}

uint64_t sub_1B299B84C()
{
  return v0;
}

uint64_t sub_1B299B870()
{
  *(_OWORD *)(v1 + 1824) = *(_OWORD *)(v1 + 1776);
  *(_OWORD *)(v1 + 1840) = *(_OWORD *)(v1 + 1792);
  *(unsigned char *)(v1 + 1856) = *(unsigned char *)(v1 + 1808);
  return sub_1B29AB098(v0 + 6224, v0 + 80);
}

uint64_t sub_1B299B8A4()
{
  return v0;
}

uint64_t sub_1B299B8BC()
{
  return 0;
}

uint64_t sub_1B299B8CC()
{
  return swift_slowAlloc();
}

BOOL sub_1B299B8E4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_1B299B900(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1B299B920()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B299B940()
{
  return 0x797469746E65;
}

uint64_t sub_1B299B950(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  return sub_1B2AC7C0C(v6, v7, v3, v4, v5);
}

BOOL sub_1B299B984@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1B299B99C()
{
  return swift_slowAlloc();
}

id sub_1B299B9F0()
{
  return [v0 (SEL)(v1 + 1048)];
}

void sub_1B299BA08()
{
  *(void *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
  *(unsigned char *)(*(void *)(v0 + 48) + v1) = 18;
}

uint64_t sub_1B299BA38()
{
  return swift_task_alloc();
}

uint64_t sub_1B299BA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_1B29DB060(0x796C696D6166, 0xE600000000000000, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B299BA7C()
{
  return sub_1B2B2C2B8();
}

uint64_t sub_1B299BAB8()
{
  return v0;
}

uint64_t sub_1B299BAC8()
{
  return v0;
}

uint64_t sub_1B299BADC()
{
  uint64_t v6 = v1 + *(int *)(v3 + 24) + *(int *)(v0 + 28);
  return sub_1B2B6E21C(v6, v4, v2);
}

uint64_t sub_1B299BB04()
{
  return 0;
}

void sub_1B299BB24()
{
  uint64_t v6 = *(void *)(v4 - 216);
  *(void *)(v4 - 208) = v1;
  *(void *)(v4 - 200) = v6;
  *(void *)(v4 - 192) = v3;
  *(void *)(v4 - 184) = v2;
  *(unsigned char *)(v4 - 176) = v0;
  *(_DWORD *)(v4 - 372) = v0;
  EntityClass.ancestorClassesSet.getter();
}

__n128 sub_1B299BB50()
{
  *(void *)(v1 - 104) = v0->n128_u64[1];
  __n128 result = v0[1];
  *(__n128 *)(v1 - 96) = result;
  *(unsigned char *)(v1 - 65) = 1;
  return result;
}

void sub_1B299BB6C(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= 1 << v1;
}

uint64_t sub_1B299BB84()
{
  return swift_arrayDestroy();
}

uint64_t sub_1B299BBA0()
{
  return 255;
}

uint64_t sub_1B299BBC4()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B299BBE8()
{
  return v0;
}

uint64_t sub_1B299BC1C()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B299BC44()
{
  return v0;
}

double sub_1B299BC58@<D0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 208) = a1;
  *(void *)(v2 - 200) = (v1 - 32) | 0x8000000000000000;
  *(void *)(v2 - 192) = 0;
  *(void *)(v2 - 184) = 0;
  *(unsigned char *)(v2 - 176) = 0;
  return 0.0;
}

unint64_t sub_1B299BC98@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 96) = 0xD00000000000002DLL;
  *(void *)(v2 - 88) = (a1 - 32) | 0x8000000000000000;
  *(void *)(v2 - 72) = v1;
  return EntityIdentifier.description.getter();
}

uint64_t sub_1B299BCC4()
{
  return sub_1B2E7FF78();
}

uint64_t sub_1B299BCF4@<X0>(uint64_t a1@<X8>)
{
  *uint64_t v1 = a1;
  return sub_1B2E834F8();
}

uint64_t sub_1B299BD14()
{
  return sub_1B2E83A38();
}

uint64_t sub_1B299BD34()
{
  return v0;
}

uint64_t sub_1B299BD4C()
{
  return sub_1B2B47548(v1, v2, v0);
}

uint64_t sub_1B299BD94()
{
  return sub_1B2E83568();
}

uint64_t sub_1B299BDB4()
{
  return v0;
}

__n128 sub_1B299BDC4(__n128 *a1)
{
  return a1[1];
}

uint64_t sub_1B299BE08()
{
  return v0;
}

uint64_t sub_1B299BE20()
{
  return v0;
}

uint64_t sub_1B299BE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return VOPBuilder.toString.getter(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t Features.FeatureFlag.isEnabled.getter()
{
  int v1 = *v0;
  if (v1 == 3)
  {
    sub_1B299C02C();
    return static NSUserDefaults.isKTSEnabled.getter() & 1;
  }
  else
  {
    uint64_t v5 = &type metadata for Features.FeatureFlag;
    unint64_t v6 = sub_1B299BFE0();
    v4[0] = v1;
    char v3 = sub_1B2E80848();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v4);
    return v3 & 1;
  }
}

uint64_t _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_1B299BFE0()
{
  unint64_t result = qword_1EB7E5808;
  if (!qword_1EB7E5808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E5808);
  }
  return result;
}

unint64_t sub_1B299C02C()
{
  unint64_t result = qword_1EB7E61B0;
  if (!qword_1EB7E61B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB7E61B0);
  }
  return result;
}

uint64_t static NSUserDefaults.isKTSEnabled.getter()
{
  if (qword_1EB7E4C68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v0 = byte_1EB7E4C40;
  uint64_t v1 = qword_1EB7E4C48;
  uint64_t v2 = unk_1EB7E4C50;
  char v3 = (void *)qword_1EB7E4C58;
  swift_bridgeObjectRetain();
  id v4 = v3;
  uint64_t v5 = (void *)MEMORY[0x1B3EB2480]();
  char v6 = sub_1B299C144(v0, v1, v2, v4);

  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1B299C144(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  char v6 = (void *)sub_1B2E82348();
  id v7 = objc_msgSend(a4, sel_objectForKey_, v6);

  if (v7)
  {
    sub_1B2E83058();
    swift_unknownObjectRelease();
    sub_1B29E4FEC(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E6270);
  if (swift_dynamicCast() && v9 != 2) {
    a1 = v9 & 1;
  }
  return a1 & 1;
}

uint64_t sub_1B299D2A8(uint64_t a1)
{
  return a1 - 8;
}

void sub_1B299D2F0()
{
  *(void *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
}

uint64_t sub_1B299D334()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B299D354()
{
  return swift_allocObject();
}

uint64_t sub_1B299D36C(uint64_t a1, uint64_t a2)
{
  return sub_1B29A4B98(v2, a2);
}

uint64_t sub_1B299D3A0(char a1)
{
  return a1 & 1;
}

uint64_t sub_1B299D3C0()
{
  return sub_1B2E83418();
}

uint64_t sub_1B299D3E8()
{
  return swift_beginAccess();
}

void sub_1B299D418(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

uint64_t sub_1B299D44C()
{
  return sub_1B29F2ED0(v5, v4, v3, v2, v1, v0, 1);
}

uint64_t sub_1B299D478()
{
  return sub_1B29C34DC(v1, v0);
}

uint64_t sub_1B299D4A8()
{
  return sub_1B2E83418();
}

uint64_t sub_1B299D4C8()
{
  return sub_1B2E831B8();
}

uint64_t sub_1B299D4E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(unsigned char *)(a1 + 16) = 4;
  return swift_willThrow();
}

void sub_1B299D50C()
{
  sub_1B29C03F0();
}

uint64_t sub_1B299D59C()
{
  return 0x79676F6C6F746E6FLL;
}

uint64_t sub_1B299D5C0()
{
  return v0;
}

double sub_1B299D5D8()
{
  __int16 v1 = *(_WORD *)(v0 - 148);
  double result = *(double *)(v0 - 160);
  *(double *)(v0 - 136) = result;
  *(_DWORD *)(v0 - 128) = *(_DWORD *)(v0 - 152);
  *(_WORD *)(v0 - 124) = v1;
  return result;
}

id sub_1B299D60C@<X0>(uint64_t a1@<X8>)
{
  sub_1B29AEC7C((void *)(*(void *)(v1 + a1) + 16), *(void *)(*(void *)(v1 + a1) + 40));
  return v2;
}

uint64_t sub_1B299D64C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 33) = 0u;
  *(unsigned char *)(a1 + 49) = 2;
  return swift_willThrow();
}

uint64_t sub_1B299D67C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v4;
  *(void *)(v2 + 16) = result;
  *(void *)(v2 + 24) = a2;
  *(unsigned char *)(v2 + 32) = v5;
  return result;
}

uint64_t sub_1B299D68C()
{
  return v0;
}

uint64_t sub_1B299D6A4()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B299D6C0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v4;
  *(void *)(v2 + 16) = result;
  *(void *)(v2 + 24) = a2;
  *(_WORD *)(v2 + 32) = v5;
  return result;
}

uint64_t sub_1B299D6D0()
{
  return sub_1B29D1EF4(v1, v0);
}

void sub_1B299D6F4()
{
  sub_1B29B7048();
}

uint64_t sub_1B299D72C()
{
  return swift_beginAccess();
}

uint64_t sub_1B299D754()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B299D788@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_1B2E83588();
}

uint64_t sub_1B299D7AC()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B299D7C8()
{
  return sub_1B2E837A8();
}

uint64_t _s20IntelligencePlatform16FeedbackProtocolPAAE7variantSSSgvg_0()
{
  return 0;
}

uint64_t _s20IntelligencePlatform30EntityResolutionRankingServiceC04TextD7OptionsV10typeFilterShyAA0C5ClassVGSgvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B299D7F8(uint64_t a1)
{
  return MEMORY[0x1F4188298](a1, 0, 0);
}

uint64_t sub_1B299D804()
{
  return swift_beginAccess();
}

double sub_1B299D81C@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1);
}

uint64_t sub_1B299D824(uint64_t a1)
{
  return sub_1B29FBD30(v1, a1);
}

uint64_t sub_1B299D840()
{
  return sub_1B2E83038();
}

uint64_t sub_1B299D864()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B299D884(uint64_t a1, uint64_t *a2)
{
  return sub_1B2B2D274(a1, a2);
}

uint64_t sub_1B299D88C()
{
  return v0;
}

uint64_t sub_1B299D89C()
{
  return v0;
}

uint64_t sub_1B299D8AC()
{
  return v0;
}

void sub_1B299D8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,void *a50,void *a51)
{
  uint64_t v53 = *(void *)(v51 - 328);
  uint64_t v54 = *(void *)(v51 - 336);
  uint64_t v55 = *(void *)(v51 - 344);
  uint64_t v56 = *(void *)(v51 - 352);
  uint64_t v57 = *(void *)(v51 - 360);
  uint64_t v58 = *(void *)(v51 - 368);
  uint64_t v59 = *(void *)(v51 - 376);
  uint64_t v60 = *(void *)(v51 - 384);
  sub_1B2B6B7C0(v53, v54, v55, v56, v57, v58, v59, v60, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48,
    a49,
    a50,
    a51);
}

id sub_1B299D974@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(v1 + a1);
}

uint64_t sub_1B299D97C()
{
  return swift_getObjectType();
}

uint64_t sub_1B299D9A4()
{
  return swift_getObjectType();
}

void sub_1B299D9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  GraphObjectBareContextProtocol.graphObject<A>(for:)(v23 - 72, v20, v21, v22, a1, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t sub_1B299D9F8()
{
  return sub_1B2E837A8();
}

uint64_t _s20IntelligencePlatform11GraphObjectPAAE2idAA21TypedEntityIdentifierVyxGvg_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1B299DA28()
{
  return swift_getAssociatedTypeWitness();
}

void sub_1B299DA48(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, long long a14, uint64_t a15, unsigned __int8 a16)
{
  *(void *)uint64_t v16 = a11;
  *(__n128 *)(v16 + 8) = a1;
  *(_OWORD *)(v16 + 24) = a14;
  *(void *)(v16 + 40) = a15;
  *(_WORD *)(v16 + 48) = a16;
}

uint64_t _s20IntelligencePlatform23GraphObjectRelationshipPAAE2idAA19SubentityIdentifierVvg_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1B299DA84()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B299DAB0()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B299DACC()
{
  return swift_beginAccess();
}

void sub_1B299DAEC()
{
  *(void *)(v0 + 8 * (v4 >> 6) + 64) |= 1 << v4;
  __int16 v5 = (void *)(*(void *)(v0 + 48) + 16 * v4);
  *__int16 v5 = v3;
  v5[1] = v2;
  *(void *)(*(void *)(v0 + 56) + 8 * v4) = v1;
}

uint64_t sub_1B299DB28()
{
  sub_1B29C65EC(v2, v1, v0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B299DB5C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = result;
  return result;
}

uint64_t sub_1B299DB98()
{
  return swift_allocObject();
}

__n128 sub_1B299DBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __n128 a15, long long a16, long long a17, uint64_t a18)
{
  *(void *)(v18 + 16) = v19;
  uint64_t v22 = v18 + v21 * v20;
  __n128 result = a15;
  *(void *)(v22 + 80) = a18;
  *(_OWORD *)(v22 + 48) = a16;
  *(_OWORD *)(v22 + 64) = a17;
  *(__n128 *)(v22 + 32) = a15;
  return result;
}

uint64_t sub_1B299DBF0(uint64_t result)
{
  *v1 |= result;
  return result;
}

uint64_t sub_1B299DC00()
{
  uint64_t v2 = *(void *)(v0 - 168);
  *(void *)(v0 - 176) = *(void *)(v0 - 176);
  *(void *)(v0 - 168) = v2;
  return swift_bridgeObjectRetain();
}

void sub_1B299DC1C(void *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  *(void *)(v2 - 40) = *a1;
  sub_1B2C84B80((uint64_t *)(v2 - 40), 1, (uint64_t *)va);
}

uint64_t sub_1B299DC40()
{
  return v0;
}

uint64_t sub_1B299DC64()
{
  return 0;
}

uint64_t sub_1B299DCD8()
{
  return 0x7961646874726962;
}

uint64_t sub_1B299DCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(void *)(a1 + 16) = a16;
  uint64_t result = a17;
  *(void *)(a1 + 24) = a17;
  return result;
}

double sub_1B299DD14@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(a1 + 120);
}

uint64_t sub_1B299DD3C(uint64_t a1)
{
  return MEMORY[0x1F4184EA8](a1, v1, v2);
}

void sub_1B299DD5C()
{
  sub_1B29B9DC8();
}

uint64_t sub_1B299DD80(uint64_t a1)
{
  return sub_1B2D2BC44(a1, 0, 0, 0xE0u);
}

void sub_1B299DD9C()
{
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 112) = v0;
  *(void *)(v3 - 104) = 0;
  *(void *)(v3 - 152) = v1;
  uint64_t v4 = v1 + 64;
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v4 - 32)) + 63) >> 6;
  uint64_t v6 = *(void *)(v3 - 88);
  *(void *)(v3 - 96) = v6 + 16;
  *(void *)(v3 - 144) = v6 + 32;
  *(void *)(v3 - 136) = v6 + 8;
  *(void *)(v3 - 168) = v4;
  *(void *)(v3 - 160) = v5;
  *(void *)(v3 - 176) = v5 - 1;
}

uint64_t sub_1B299DDFC()
{
  return v0;
}

uint64_t sub_1B299DE14()
{
  return swift_retain();
}

uint64_t sub_1B299DE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v27 = v14[42];
  uint64_t v26 = v14[43];
  uint64_t v25 = v14[44];
  uint64_t v16 = v14[24];
  uint64_t v17 = v14[18];
  uint64_t v18 = v14[45];
  uint64_t v19 = v14[46];
  uint64_t v21 = v14[49];
  uint64_t v20 = v14[50];
  uint64_t v23 = v14[47];
  uint64_t v22 = v14[48];
  return sub_1B2A34A54(v16, v17, v18, v19, v20, v21, v22, v23, v25, v26, v27, a12, a13, a14);
}

uint64_t sub_1B299DE8C(uint64_t a1)
{
  *(void *)(v1 - 88) = a1;
  return v1 - 88;
}

__n128 *sub_1B299DEA0(__n128 *result, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, unint64_t a12)
{
  result[1] = a2;
  result[2].n128_u64[0] = v12;
  result[2].n128_u64[1] = v14;
  result[3].n128_u64[0] = v20;
  result[3].n128_u64[1] = v19;
  result[4].n128_u64[0] = v13;
  result[4].n128_u64[1] = a12;
  result[5].n128_u64[0] = a11;
  result[5].n128_u64[1] = v15;
  result[6].n128_u64[0] = v18;
  result[6].n128_u64[1] = v17;
  result[7].n128_u64[0] = v16;
  return result;
}

uint64_t sub_1B299DEC4()
{
  return swift_beginAccess();
}

void sub_1B299DEE4()
{
  sub_1B29B707C();
}

uint64_t sub_1B299DF04(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_1B299DF24()
{
  return sub_1B2E82538();
}

uint64_t sub_1B299DF40()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B299DF50()
{
  sub_1B2A2A2C8(v2, v1, v0);
  return swift_bridgeObjectRelease_n();
}

void *sub_1B299DF88()
{
  return sub_1B29AEC7C((void *)(v0 - 240), *(void *)(v0 - 216));
}

double sub_1B299DFB0()
{
  return 0.0;
}

uint64_t sub_1B299DFC0()
{
  return swift_allocObject();
}

uint64_t sub_1B299DFDC()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1B299E000()
{
  *(void *)(v0 + 208) = v1;
  return v2;
}

double sub_1B299E030()
{
  *(void *)(v0 + 80) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)uint64_t v0 = 0u;
  return result;
}

uint64_t sub_1B299E048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  return sub_1B2A34A54(a19, a20, a21, a22, a23, a38, a40, a44, a18, a17, a16, v45, v44, v46);
}

id sub_1B299E088(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v4, v3, v5 - 96);
}

void sub_1B299E0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16)
{
  *(void *)(v16 + 8 * (v17 >> 6) + 64) |= 1 << v17;
  uint64_t v24 = (void *)(*(void *)(v16 + 48) + 16 * v17);
  *uint64_t v24 = v18;
  v24[1] = v22;
  uint64_t v25 = *(void *)(v16 + 56) + v17 * v19;
  *(void *)uint64_t v25 = a14;
  *(void *)(v25 + 8) = v20;
  *(void *)(v25 + 16) = v21;
  *(void *)(v25 + 24) = v23;
  *(unsigned char *)(v25 + 32) = a16;
}

uint64_t sub_1B299E0FC(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x735F000000000000;
}

uint64_t sub_1B299E114()
{
  return swift_retain();
}

uint64_t sub_1B299E140()
{
  return v0;
}

uint64_t sub_1B299E178()
{
  return swift_beginAccess();
}

uint64_t sub_1B299E198()
{
  return swift_beginAccess();
}

uint64_t sub_1B299E1B8()
{
  return sub_1B2E83018();
}

uint64_t sub_1B299E1E0(uint64_t a1)
{
  return TripleEnumeratorProtocol<>.triples<A>(for:)(v4, v1, v3, a1, v2);
}

uint64_t sub_1B299E208()
{
  return v0;
}

uint64_t sub_1B299E234@<X0>(uint64_t (*a1)(uint64_t)@<X3>, uint64_t a2@<X8>)
{
  return a1(a2);
}

uint64_t sub_1B299E244()
{
  return swift_allocObject();
}

uint64_t sub_1B299E260()
{
  return sub_1B2E82518();
}

uint64_t sub_1B299E27C(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = sub_1B2E82F38();
  sub_1B299D2A8(v7);
  unint64_t v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v11 = (v9 + *(void *)(v10 + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v12 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = (uint64_t)v1 + v5;
  uint64_t v15 = (uint64_t)v1 + v9;
  uint64_t v16 = (uint64_t)v1 + v11;
  uint64_t v17 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v3 - 8) + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v18;
  *uint64_t v18 = v2;
  v18[1] = sub_1B299ACAC;
  return sub_1B299A058(a1, v12, v13, v14, v15, v16, v17, v3);
}

uint64_t sub_1B299E4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return sub_1B29D1EF4(v20, a20);
}

uint64_t sub_1B299E4D4()
{
  return swift_allocError();
}

uint64_t sub_1B299E508()
{
  return swift_task_alloc();
}

void *sub_1B299E524()
{
  return sub_1B29AEC7C(v0, v0[3]);
}

uint64_t sub_1B299E548()
{
  return sub_1B2E822C8();
}

void sub_1B299E56C(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(v3 - 104) = a3;
}

uint64_t sub_1B299E584()
{
  return sub_1B2E83A38();
}

uint64_t sub_1B299E5C4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B299E5E8()
{
  *(_OWORD *)(v1 + 1728) = *(_OWORD *)(v1 + 1680);
  *(_OWORD *)(v1 + 1744) = *(_OWORD *)(v1 + 1696);
  *(unsigned char *)(v1 + 1760) = *(unsigned char *)(v1 + 1712);
  return sub_1B29AB098(v0 + 6128, v0 + 80);
}

uint64_t sub_1B299E62C()
{
  return sub_1B2E82FE8();
}

uint64_t sub_1B299E670()
{
  return sub_1B2E83668();
}

uint64_t sub_1B299E698()
{
  return swift_allocObject();
}

uint64_t sub_1B299E6C4()
{
  return 0;
}

uint64_t sub_1B299E6E0()
{
  return v0;
}

void sub_1B299E6F0()
{
  sub_1B29B8848();
}

uint64_t sub_1B299E714()
{
  return sub_1B2E81FB8();
}

unint64_t sub_1B299E734()
{
  return 0xD000000000000010;
}

void *sub_1B299E748@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  return sub_1B29AEC7C((void *)(a3 + a1), *(void *)(a3 + a1 + 24));
}

void sub_1B299E788()
{
  ++*(void *)(v0 + 16);
}

uint64_t sub_1B299E7AC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B299E7C4()
{
  return v0;
}

uint64_t sub_1B299E7D8()
{
  return 0x726F62686769656ELL;
}

double sub_1B299E800()
{
  return 0.0;
}

void sub_1B299E820(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 448) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1B299E840()
{
  return v0;
}

uint64_t sub_1B299E84C()
{
  return v0;
}

uint64_t sub_1B299E86C()
{
  return 0;
}

uint64_t sub_1B299E878()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B299E890()
{
  return 0;
}

uint64_t *sub_1B299E8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  a19 = a1;
  return sub_1B29D1C70(&a15);
}

__n128 sub_1B299E8D0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 - 256) + (v1 << 6);
  __n128 result = *(__n128 *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  long long v6 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v2 - 167) = *(_OWORD *)(v3 + 41);
  *(_OWORD *)(v2 - 192) = v5;
  *(_OWORD *)(v2 - 176) = v6;
  *(__n128 *)(v2 - 208) = result;
  return result;
}

uint64_t sub_1B299E8F8()
{
  return v0;
}

uint64_t sub_1B299E90C()
{
  return sub_1B2E822D8();
}

uint64_t sub_1B299E934()
{
  return 0x7461447472617473;
}

uint64_t sub_1B299E948()
{
  return type metadata accessor for CustomKnosisResultContext();
}

uint64_t sub_1B299E97C(uint64_t a1)
{
  *(void *)(v1 - 256) = a1;
  return v1 - 256;
}

uint64_t sub_1B299E990()
{
  return type metadata accessor for CustomGraphPerson(0);
}

void sub_1B299E9B0()
{
  *(_DWORD *)(v0 - 264) = 0;
  *(_DWORD *)(v0 - 256) = 0;
  *(void *)(v0 - 368) = 1;
  *(_DWORD *)(v0 - 332) = 1;
  *(_DWORD *)(v0 - 328) = 1;
  *(_DWORD *)(v0 - 324) = 1;
  *(_DWORD *)(v0 - 320) = 1;
  *(_DWORD *)(v0 - 316) = 1;
  *(_DWORD *)(v0 - 312) = 1;
  *(_DWORD *)(v0 - 308) = 1;
  *(_DWORD *)(v0 - 304) = 1;
  *(_DWORD *)(v0 - 296) = 1;
  *(_DWORD *)(v0 - 288) = 1;
}

uint64_t sub_1B299EA40()
{
  return swift_retain();
}

void sub_1B299EA64()
{
  *(void *)(v1 - 128) = *v0;
}

double sub_1B299EA84()
{
  *(void *)(v0 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)uint64_t v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

uint64_t sub_1B299EA94()
{
  return 0x6D69547472617473;
}

void sub_1B299EABC(uint64_t a1@<X8>)
{
  *(void *)(v1 - 104) = a1;
}

uint64_t sub_1B299EAD0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B299EAF0()
{
  return sub_1B2E831F8();
}

uint64_t sub_1B299EB10()
{
  return sub_1B2D2E6E8(v0, v3, v1, v2);
}

uint64_t sub_1B299EB30()
{
  return v0;
}

void sub_1B299EB3C(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

uint64_t sub_1B299EB4C()
{
  return v0 - 120;
}

void *sub_1B299EB60()
{
  return sub_1B29AEC7C(v0, v0[3]);
}

uint64_t sub_1B299EB84()
{
  return swift_release();
}

void sub_1B299EB9C(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= 1 << v1;
}

unint64_t sub_1B299EBB4()
{
  *(void *)(v3 + 16) = v1;
  return v3
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(void *)(v2 + 72) * v0;
}

uint64_t sub_1B299EBDC@<X0>(uint64_t a1@<X8>)
{
  if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    return a1;
  }
  else {
    return 0;
  }
}

void sub_1B299EBE8()
{
  sub_1B29B7048();
}

uint64_t LRUCache.set(_:forKey:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 80);
  uint64_t v54 = sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v56 = v6;
  ((void (*)(void))MEMORY[0x1F4188790])();
  sub_1B2999940();
  uint64_t v57 = v7;
  ((void (*)(void))MEMORY[0x1F4188790])();
  uint64_t v53 = (char *)&v48 - v8;
  sub_1B299D31C();
  uint64_t v55 = v9;
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v48 - v13;
  uint64_t v15 = *(void *)(v4 + 88);
  sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v58 = v17;
  uint64_t v59 = v16;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v48 - v19;
  swift_beginAccess();
  uint64_t v21 = v3[3];
  uint64_t v22 = *(void *)(v4 + 96);
  uint64_t v23 = type metadata accessor for LRUCacheNode();
  MEMORY[0x1B3EB09B0](v62, v61, v21, v5, v23, v22);
  uint64_t v24 = v62[0];
  if (v62[0])
  {
    swift_endAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v20, v60, v15);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v20, 0, 1, v15);
    uint64_t v25 = v24 + *(void *)(*(void *)v24 + 112);
    sub_1B29A0E20();
    uint64_t v27 = v58;
    uint64_t v26 = v59;
    (*(void (**)(uint64_t, char *, uint64_t *))(v58 + 40))(v25, v20, v59);
    swift_endAccess();
    LRUCache.get(_:)(v61, (uint64_t)v20);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t *))(v27 + 8))(v20, v26);
  }
  uint64_t v29 = v56;
  uint64_t v50 = v15;
  uint64_t v51 = v23;
  uint64_t v58 = v22;
  uint64_t v59 = v3 + 3;
  v49 = v20;
  uint64_t v52 = v12;
  swift_endAccess();
  uint64_t v30 = sub_1B29A5574();
  uint64_t v31 = v60;
  uint64_t v32 = v55;
  if (v30 >= v3[2])
  {
    v48 = v3;
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong)
    {
LABEL_7:
      if (qword_1EB7E5AE0 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_1B2E81FB8();
      sub_1B29A4B98(v39, (uint64_t)qword_1EB7E5AC0);
      v40 = sub_1B2E81F98();
      os_log_type_t v41 = sub_1B2E82DC8();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_1B2996000, v40, v41, "LRUCache: Unable to get LRU node or key.", v42, 2u);
        MEMORY[0x1B3EB30C0](v42, -1, -1);
      }

      goto LABEL_13;
    }
    uint64_t v34 = Strong + *(void *)(*(void *)Strong + 104);
    swift_beginAccess();
    uint64_t v35 = v29;
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
    uint64_t v38 = (uint64_t)v53;
    uint64_t v37 = v54;
    v36(v53, v34, v54);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v38, 1, v5) == 1)
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v37);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v14, v38, v5);
    sub_1B29A3688();
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v52, v14, v5);
    v63 = 0;
    sub_1B29A0E20();
    sub_1B2E821C8();
    sub_1B2E821F8();
    swift_endAccess();
    swift_release();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v5);
  }
LABEL_13:
  v43 = *(void (**)(void))(v32 + 16);
  uint64_t v44 = v57;
  sub_1B299FB68();
  v43();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v44, 0, 1, v5);
  uint64_t v45 = (uint64_t)v49;
  uint64_t v46 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v49, v31, v50);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v45, 0, 1, v46);
  uint64_t v47 = sub_1B29A5630(v44, v45);
  sub_1B29A12C0();
  sub_1B299FB68();
  v43();
  v63 = v47;
  sub_1B29A0E20();
  sub_1B2E821C8();
  swift_retain();
  sub_1B2E821F8();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1B299F258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return a12;
}

uint64_t sub_1B299F268()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B299F2E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B299F318()
{
  return v0;
}

uint64_t sub_1B299F340()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B299F364()
{
  *(void *)(v1 - 96) = v0;
  return 255;
}

uint64_t sub_1B299F3CC()
{
  return sub_1B2E81378();
}

uint64_t sub_1B299F450()
{
  return v0;
}

uint64_t sub_1B299F464()
{
  return sub_1B2E83408();
}

uint64_t sub_1B299F488()
{
  return sub_1B2E82348();
}

uint64_t sub_1B299F4AC()
{
  return v0;
}

uint64_t sub_1B299F4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  return sub_1B2A52158((uint64_t *)va, v13, v14);
}

uint64_t sub_1B299F4E4()
{
  *(_OWORD *)(v1 + 1152) = *(_OWORD *)(v1 + 1104);
  *(_OWORD *)(v1 + 1168) = *(_OWORD *)(v1 + 1120);
  *(unsigned char *)(v1 + 1184) = *(unsigned char *)(v1 + 1136);
  return sub_1B29AB098(v0 + 5552, v0 + 80);
}

uint64_t sub_1B299F528()
{
  return v0;
}

void *sub_1B299F54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__dst)
{
  STACK[0x1B18] = 0;
  return memcpy(__dst, &STACK[0x16B8], 0x468uLL);
}

uint64_t sub_1B299F594()
{
  return sub_1B2E836D8();
}

void sub_1B299F5AC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void sub_1B299F5CC()
{
  sub_1B29B8848();
}

uint64_t sub_1B299F5FC()
{
  return 0;
}

uint64_t sub_1B299F610()
{
  return v0 + 32;
}

void sub_1B299F620(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

uint64_t sub_1B299F634@<X0>(uint64_t a1@<X8>)
{
  return v1 + *(int *)(a1 + 24);
}

uint64_t sub_1B299F648()
{
  return v0;
}

uint64_t sub_1B299F668()
{
  return swift_bridgeObjectRetain();
}

void sub_1B299F680(uint64_t a1@<X8>)
{
  v2[4] = a1;
  v2[5] = (v1 - 32) | 0x8000000000000000;
  v2[6] = 0x636E657265666E69;
  v2[7] = 0xEF656E69676E4565;
}

uint64_t sub_1B299F6B4()
{
  return *(void *)(v0 - 72);
}

void sub_1B299F6D0()
{
  *(void *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
}

uint64_t sub_1B299F6F8()
{
  return v0;
}

uint64_t sub_1B299F728()
{
  return sub_1B2E82518();
}

id sub_1B299F740(void *a1)
{
  return objc_msgSend(a1, (SEL)(v2 + 1560), v1);
}

uint64_t sub_1B299F758()
{
  sub_1B2B72AAC();
  return sub_1B2B319A0(v0);
}

uint64_t sub_1B299F78C()
{
  return sub_1B2B7C6BC(v0, v1);
}

void sub_1B299F7A8(__n128 a1)
{
  *(__n128 *)(v7 - 336) = a1;
  *(void *)(v7 - 304) = v2;
  *(void *)(v7 - 352) = v3;
  *(void *)(v7 - 360) = v4;
  *(void *)(v7 - 320) = v5;
  *(void *)(v7 - 368) = v6;
  *(void *)(v7 - 312) = v1;
}

uint64_t sub_1B299F7F0()
{
  return swift_release();
}

uint64_t sub_1B299F808()
{
  return swift_slowAlloc();
}

uint64_t sub_1B299F83C()
{
  return v0;
}

uint64_t sub_1B299F854(_OWORD *a1)
{
  long long v3 = a1[1];
  *(_OWORD *)(v1 - 112) = *a1;
  *(_OWORD *)(v1 - 96) = v3;
  *(_OWORD *)(v1 - 80) = a1[2];
  return swift_beginAccess();
}

uint64_t sub_1B299F898()
{
  return v0;
}

uint64_t sub_1B299F8B0()
{
  return swift_beginAccess();
}

uint64_t sub_1B299F8D0()
{
  return v0;
}

void sub_1B299F8EC()
{
  sub_1B29BFED4();
}

char *sub_1B299F91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  return &a37;
}

uint64_t sub_1B299F958()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_1B299F974()
{
  return 0x444E455F594144;
}

uint64_t sub_1B299F98C(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_1B299F9A0()
{
  return sub_1B2E83958();
}

id sub_1B299F9EC()
{
  return [v0 (SEL)(v1 + 92)];
}

uint64_t sub_1B299FA10()
{
  return type metadata accessor for LogSignpost();
}

uint64_t sub_1B299FA38@<X0>(uint64_t a1@<X8>)
{
  *(void *)uint64_t v3 = a1;
  *(void *)(v3 + 8) = v1;
  *(unsigned char *)(v3 + 16) = 2;
  *(void *)(v3 + 24) = v2;
  return v3 + *(int *)(*(void *)(v4 - 184) + 24);
}

uint64_t sub_1B299FA6C()
{
  return sub_1B2E82FB8();
}

uint64_t sub_1B299FAAC()
{
  return 0x6177686769487369;
}

uint64_t sub_1B299FAC0(uint64_t a1, uint64_t a2)
{
  sub_1B2D2BBF0(a1, a2, v2, 0);
  sub_1B2D2BBF0(v4, v5, v3, 0);
  return sub_1B2D2BC44(v4, v5, v3, 0);
}

uint64_t sub_1B299FB10()
{
  return v0;
}

uint64_t sub_1B299FB30()
{
  return v0;
}

uint64_t sub_1B299FB4C()
{
  return sub_1B2E83508();
}

uint64_t sub_1B299FB7C()
{
  return v0;
}

uint64_t sub_1B299FB94()
{
  return sub_1B2E837A8();
}

void sub_1B299FBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v23 - 224) = v22;
  *(void *)(v23 - 216) = a17;
  *(void *)(v23 - 208) = a16;
  *(void *)(v23 - 200) = a15;
  *(void *)(v23 - 192) = a20;
  *(void *)(v23 - 184) = a22;
}

uint64_t sub_1B299FC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unsigned __int8 a43)
{
  return sub_1B2A34A54(a32, v47, a33, a34, a35, a42, a36, a37, a41, v43, v46, v45, v44, a43);
}

uint64_t sub_1B299FC40()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B299FC74()
{
  return swift_release();
}

uint64_t sub_1B299FC90()
{
  return v0;
}

uint64_t sub_1B299FCA8()
{
  return v0;
}

uint64_t sub_1B299FCF4()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return sub_1B29BA018(0, v2, 1, v0);
}

uint64_t sub_1B299FD18()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B299FD3C()
{
  return v0;
}

uint64_t sub_1B299FD5C(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 1, 1, v1);
}

void sub_1B299FD84()
{
  sub_1B29B7048();
}

uint64_t LRUCache.createOrGet(_:initializer:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(uint64_t, uint64_t (*)(void), uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  v79 = a3;
  v80 = a2;
  uint64_t v81 = a4;
  uint64_t v83 = *(void *)(*(void *)v5 + 80);
  uint64_t v82 = *(void *)(v83 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  v76 = (uint8_t *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  v78 = (uint8_t *)&v69 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v69 - v11;
  uint64_t v14 = *(void *)(v13 + 88);
  sub_1B29A0E38();
  uint64_t v15 = sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v17 = v16;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v69 - v19;
  sub_1B299D31C();
  uint64_t v22 = v21;
  MEMORY[0x1F4188790](v23);
  sub_1B2999940();
  v77 = v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (uint64_t (*)(void))((char *)&v69 - v26);
  uint64_t v85 = a1;
  LRUCache.get(_:)(a1, (uint64_t)v20);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v20, 1, v14) == 1)
  {
    uint64_t v74 = v22;
    uint64_t v75 = v14;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1B2E81FB8();
    sub_1B29A4B98(v28, (uint64_t)qword_1EB7E5AC0);
    uint64_t v29 = v82;
    uint64_t v30 = v83;
    uint64_t v31 = *(void (**)(uint8_t *, uint64_t, uint64_t))(v82 + 16);
    uint64_t v32 = (uint64_t)v76;
    v31(v76, v85, v83);
    v33 = sub_1B2E81F98();
    os_log_type_t v34 = sub_1B2E82DA8();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t v86 = v73;
      v71 = v35;
      os_log_t v72 = v33;
      *(_DWORD *)uint64_t v35 = 136315138;
      v70 = v35 + 4;
      v31(v78, v32, v30);
      uint64_t v36 = sub_1B2E823E8();
      sub_1B29BF6BC(v36, v37, (uint64_t)&v86, v38, v39, v40, v41, v42, v69, (unint64_t)v70, (uint64_t)v71, (uint64_t)v72, v73, v74, v75, (uint64_t)v76, (uint64_t)v77, (uint64_t)v78, (uint64_t)v79,
        (uint64_t)v80);
      sub_1B299DE8C(v43);
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v30);
      os_log_t v44 = v72;
      _os_log_impl(&dword_1B2996000, v72, v34, "LRUCache Miss for %s", v71, 0xCu);
      swift_arrayDestroy();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v30);
    }
    v64 = v77;
    uint64_t v65 = v84;
    uint64_t result = v80();
    if (!v65)
    {
      LRUCache.set(_:forKey:)((uint64_t)v64, v85);
      return (*(uint64_t (**)(uint64_t, uint8_t *, uint64_t))(v74 + 32))(v81, v64, v75);
    }
  }
  else
  {
    uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t (*)(void), uint64_t))(v22 + 32);
    uint64_t v45 = v22 + 32;
    v79 = v46;
    v80 = v27;
    v46((uint64_t)v27, (uint64_t (*)(void))v20, v14);
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_1B2E81FB8();
    sub_1B29A4B98(v47, (uint64_t)qword_1EB7E5AC0);
    uint64_t v48 = v83;
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 16);
    v49(v12, v85, v83);
    uint64_t v50 = sub_1B2E81F98();
    os_log_type_t v51 = sub_1B2E82DA8();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v74 = v45;
      uint64_t v75 = v14;
      uint64_t v53 = (uint8_t *)v52;
      uint64_t v85 = swift_slowAlloc();
      uint64_t v86 = v85;
      v77 = v53;
      *(_DWORD *)uint64_t v53 = 136315138;
      v76 = v53 + 4;
      v49((char *)v78, (uint64_t)v12, v48);
      uint64_t v54 = sub_1B2E823E8();
      sub_1B29BF6BC(v54, v55, (uint64_t)&v86, v56, v57, v58, v59, v60, v69, (unint64_t)v70, (uint64_t)v71, (uint64_t)v72, v73, v74, v75, (uint64_t)v76, (uint64_t)v77, (uint64_t)v78, (uint64_t)v79,
        (uint64_t)v80);
      sub_1B299DE8C(v61);
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      uint64_t v62 = sub_1B29A533C();
      v63(v62);
      _os_log_impl(&dword_1B2996000, v50, v51, "LRUCache Hit for %s", v77, 0xCu);
      swift_arrayDestroy();
      sub_1B299B750();
      uint64_t v14 = v75;
      sub_1B299B750();
    }
    else
    {
      uint64_t v67 = sub_1B29A533C();
      v68(v67);
    }

    return v79(v81, v80, v14);
  }
  return result;
}

void _s20IntelligencePlatform20AppleMusicEventEntryV2idAA21TypedEntityIdentifierVyxGvg_0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1B29A03B0()
{
  return sub_1B2E83618();
}

size_t sub_1B29A03D0(void *a1)
{
  size_t result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t sub_1B29A03F8()
{
  return v0;
}

uint64_t sub_1B29A040C()
{
  uint64_t v5 = (void *)(*(void *)(v3 + 56) + 16 * v2);
  *uint64_t v5 = v0;
  v5[1] = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29A042C()
{
  return v0;
}

uint64_t sub_1B29A0438()
{
  return v0;
}

unint64_t sub_1B29A0450(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  uint64_t v5 = (void *)(*(void *)(a5 + 48) + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  return result;
}

uint64_t sub_1B29A04B0()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B29A04D0()
{
  return v0;
}

uint64_t sub_1B29A04F4()
{
  return v0 + 56;
}

uint64_t sub_1B29A051C(uint64_t a1, uint64_t a2)
{
  sub_1B2A14448(a1, a2);
  sub_1B2A14448(v2, v3);
  return sub_1B2A14460(v2, v3);
}

uint64_t sub_1B29A057C()
{
  return sub_1B29C34DC(v1, v0);
}

uint64_t sub_1B29A0594()
{
  return v0;
}

uint64_t sub_1B29A05AC()
{
  return 0x6465657073;
}

uint64_t sub_1B29A05C0()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1B29A05DC()
{
  return swift_release();
}

uint64_t sub_1B29A05F4(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t sub_1B29A0614()
{
  return sub_1B2E83988();
}

void sub_1B29A0634(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((a1 - 32) / v3);
}

uint64_t sub_1B29A0670()
{
  return v0;
}

id sub_1B29A0690(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return objc_msgSend(v9, a2, v10, &a9);
}

uint64_t sub_1B29A06AC()
{
  return sub_1B2E83618();
}

__n128 sub_1B29A06C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, __n128 a14, long long a15, uint64_t a16, uint64_t a17, char a18)
{
  __n128 result = a14;
  *(__n128 *)uint64_t v18 = a14;
  *(_OWORD *)(v18 + 16) = a15;
  *(void *)(v18 + 32) = a16;
  *(void *)(v18 + 40) = a17;
  *(unsigned char *)(v18 + 48) = a18;
  return result;
}

uint64_t sub_1B29A06E8()
{
  static EntityClass.transportationActivityType.getter(v0 + 3152);
  v1[180] = v1[177];
  v1[181] = v1[178];
  *(unsigned char *)(v0 + 3232) = *(unsigned char *)(v0 + 3184);
  return sub_1B29AB098(v0 + 3200, v0 + 80);
}

void sub_1B29A0730()
{
  EntityClass.ancestorClassesSet.getter();
}

uint64_t sub_1B29A0798(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4188298](a1, a2, 0);
}

double sub_1B29A07A0()
{
  return 0.0;
}

uint64_t sub_1B29A07B4()
{
  return sub_1B2E836D8();
}

void sub_1B29A07D4()
{
  uint64_t v3 = v0[2];
  unint64_t v4 = *v0;
  sub_1B2AADD98(0xFuLL, v3, v4, v1);
}

uint64_t sub_1B29A07F8()
{
  return v0;
}

uint64_t sub_1B29A0818(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, a1);
}

void sub_1B29A0838(uint64_t a1@<X8>)
{
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = 26;
  *(unsigned char *)(v2 + 16) = 2;
  *(void *)(v2 + 24) = v1;
}

uint64_t sub_1B29A0850()
{
  return v0;
}

uint64_t sub_1B29A0868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  return sub_1B2AD0BFC(a49);
}

uint64_t sub_1B29A0894()
{
  return v0;
}

uint64_t sub_1B29A08BC()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

id sub_1B29A08F0(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1B29A0908()
{
  return v0;
}

double sub_1B29A091C()
{
  *uint64_t v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_1B29A094C()
{
  return sub_1B2B2F3D0();
}

__n128 sub_1B29A0978()
{
  return v0[1];
}

uint64_t sub_1B29A0984()
{
  return v0;
}

uint64_t sub_1B29A09C8()
{
  return v0;
}

id sub_1B29A09DC()
{
  return sub_1B2B6D658(v0, v2, v1);
}

uint64_t sub_1B29A0A10()
{
  return swift_beginAccess();
}

uint64_t sub_1B29A0A4C()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B29A0A6C()
{
  return v0;
}

uint64_t sub_1B29A0A78()
{
  return v0;
}

uint64_t sub_1B29A0A90(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186498](a1, a2, 7);
}

void sub_1B29A0A98(uint64_t a1@<X8>)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1B29A0AA4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B29A0ABC()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B29A0ADC()
{
  return sub_1B2E80C28();
}

void sub_1B29A0AF8(uint64_t a1@<X8>)
{
  *(void *)(v1 - 544) = a1;
}

uint64_t sub_1B29A0B04()
{
  return *(void *)(v0 - 352);
}

uint64_t sub_1B29A0B34()
{
  return sub_1B2E83618();
}

void *sub_1B29A0B70()
{
  return sub_1B29AEC7C(v0, v0[3]);
}

uint64_t sub_1B29A0BB4()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29A0BD4()
{
  return sub_1B2E82538();
}

uint64_t sub_1B29A0BF0()
{
  return 0x69746E6565726373;
}

uint64_t sub_1B29A0C0C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1B29A0C24()
{
  return *(void *)(v0 + 40 * v1);
}

void sub_1B29A0C54()
{
  sub_1B29B7048();
}

uint64_t sub_1B29A0C78()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B29A0CAC(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F40E3190](a1, a2, v2, v2, v2);
}

void sub_1B29A0CD8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1B29A0CF4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 16) = 3;
  return swift_willThrow();
}

uint64_t sub_1B29A0D10@<X0>(uint64_t a1@<X8>)
{
  *(void *)uint64_t v1 = a1;
  *(void *)(v1 + 8) = 31;
  *(unsigned char *)(v1 + 16) = 2;
  *(void *)(v1 + 24) = v2;
  return v1 + *(int *)(*(void *)(v3 - 144) + 24);
}

uint64_t sub_1B29A0D48(uint64_t a1, long long a2, uint64_t a3, long long a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  *(_OWORD *)uint64_t v10 = a2;
  *(void *)(v10 + 16) = a3;
  *(_OWORD *)(v10 + 24) = a4;
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)va);
}

uint64_t sub_1B29A0D8C()
{
  return 0x656D6954646E65;
}

uint64_t sub_1B29A0DA4()
{
  return sub_1B29A3EB4(v0);
}

uint64_t sub_1B29A0DD0()
{
  return sub_1B2E836D8();
}

void sub_1B29A0DFC(uint64_t a1)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a1 + 24);
  os_unfair_lock_lock(v2);
}

uint64_t sub_1B29A0E20()
{
  return swift_beginAccess();
}

uint64_t sub_1B29A0E38()
{
  return 0;
}

uint64_t sub_1B29A0E44()
{
  return *(void *)(v1 + 16 * v0);
}

double sub_1B29A0EAC@<D0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 112) = a1;
  return sub_1B2D2BF74(v2 - 160);
}

uint64_t sub_1B29A0EC8()
{
  return swift_slowAlloc();
}

uint64_t sub_1B29A0EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  a20 = a14;
  a21 = a13;
  return sub_1B2D7C91C(v21, (uint64_t)&a20);
}

void sub_1B29A0F14(unint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27,unint64_t a28,unint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unint64_t a35)
{
  STACK[0x200] = a1;
  STACK[0x208] = a35;
  STACK[0x210] = a21;
  STACK[0x218] = a29;
  STACK[0x220] = a28;
  STACK[0x228] = a27;
}

__n128 sub_1B29A0F44()
{
  *(_OWORD *)(v2 - 200) = *(_OWORD *)(v2 - 224);
  *(_OWORD *)(v2 - 184) = *(_OWORD *)(v2 - 240);
  *(_OWORD *)(v2 - 168) = *(_OWORD *)(v2 - 256);
  *(_OWORD *)(v2 - 152) = *(_OWORD *)(v2 - 272);
  *(_OWORD *)(v2 - 136) = *(_OWORD *)(v2 - 288);
  __n128 result = *(__n128 *)(v2 - 304);
  *(__n128 *)(v2 - 120) = result;
  *(void *)(v2 - 104) = v1;
  *(unsigned char *)(v2 - 96) = v0;
  return result;
}

void sub_1B29A0FB0()
{
  *(void *)(v2 - 64) = v1;
  *(void *)(v2 - 56) = v0;
}

uint64_t sub_1B29A0FC0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return sub_1B2E83568();
}

uint64_t sub_1B29A0FE4()
{
  return sub_1B29B2540(0x6465727071, 0xE500000000000000);
}

uint64_t sub_1B29A1004()
{
  return sub_1B2E835B8();
}

char *sub_1B29A1030@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1B29A1064()
{
  return v0;
}

uint64_t sub_1B29A107C()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return sub_1B29BA018(0, v2, 1, v0);
}

uint64_t sub_1B29A10A0()
{
  return v0;
}

uint64_t sub_1B29A10B4()
{
  return sub_1B2E83528();
}

uint64_t sub_1B29A10D0@<X0>(uint64_t a1@<X8>)
{
  return *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
}

uint64_t sub_1B29A10E0()
{
  return v0;
}

uint64_t LRUCache.get(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = (void *)*v2;
  swift_beginAccess();
  uint64_t v6 = v2[3];
  uint64_t v7 = v5[10];
  uint64_t v8 = v5[11];
  uint64_t v9 = v5[12];
  uint64_t v10 = type metadata accessor for LRUCacheNode();
  MEMORY[0x1B3EB09B0](&v15, a1, v6, v7, v10, v9);
  uint64_t v11 = v15;
  if (v15)
  {
    swift_endAccess();
    sub_1B29A3688();
    sub_1B29A12C0();
    uint64_t v12 = v11 + *(void *)(*(void *)v11 + 112);
    swift_beginAccess();
    uint64_t v13 = sub_1B2E82F38();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a2, v12, v13);
    return swift_release();
  }
  else
  {
    swift_endAccess();
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a2, 1, 1, v8);
  }
}

uint64_t sub_1B29A1278()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for LRUCacheNode()
{
  return sub_1B29A1278();
}

uint64_t sub_1B29A12C0()
{
  uint64_t Strong = swift_weakLoadStrong();
  swift_weakAssign();
  if (Strong) {
    swift_weakAssign();
  }
  swift_weakAssign();
  swift_weakAssign();

  return swift_release();
}

uint64_t ExpirableLazyBox.wrappedValue.getter()
{
  return UnfairLockedBox.access<A>(_:)((void (*)(char *))sub_1B29A374C, v0, *(void *)(*(void *)v0 + 88));
}

uint64_t UnfairLockedBox.access<A>(_:)(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a3;
  uint64_t v5 = *(void *)(*(void *)v3 + 80);
  sub_1B299D490();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v13 - v8;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + *(void *)(v10 + 96)));
  uint64_t v11 = v3 + *(void *)(*(void *)v3 + 88);
  sub_1B299D804();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v5);
  a1(v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  return sub_1B29A3668(v3, v14, MEMORY[0x1E4F14A18]);
}

uint64_t sub_1B29A1564()
{
  return sub_1B2E83618();
}

uint64_t sub_1B29A1598()
{
  return sub_1B2E834A8();
}

void sub_1B29A15B0(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 32) = v1;
  uint64_t v6 = (void *)(*(void *)(v5 + 56) + 16 * v4);
  *uint64_t v6 = v2;
  v6[1] = v3;
}

__n128 sub_1B29A15DC()
{
  return v0[5];
}

uint64_t sub_1B29A1630()
{
  return 0x7865646E496F6ELL;
}

uint64_t sub_1B29A1670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 1, 1, a4);
  return swift_retain();
}

void sub_1B29A16A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B29BF6BC(0x7361696C61, 0xE500000000000000, v20 + 168, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t sub_1B29A16D4()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B29A16F4()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B29A1714()
{
  return 0x657372756F63;
}

double sub_1B29A173C()
{
  double result = v3 * v4;
  *(void *)(v0 + 16) = v1;
  *(double *)(v0 + 8 * v2 + 32) = v3 * v4;
  return result;
}

uint64_t sub_1B29A1758()
{
  return v0;
}

uint64_t sub_1B29A1770()
{
  return *(void *)(*(void *)(v0 + 48) + 16 * v1);
}

uint64_t sub_1B29A1788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F411AD68](a1, a2, v4, a4, 0);
}

uint64_t sub_1B29A17BC()
{
  return 255;
}

double sub_1B29A1800(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = 0;
  return result;
}

uint64_t sub_1B29A1824()
{
  return swift_allocObject();
}

void sub_1B29A185C()
{
  EntityClass.ancestorClassesSet.getter();
}

uint64_t sub_1B29A18B0()
{
  return v0 + 0x2000;
}

void sub_1B29A18BC(void *a1@<X8>)
{
  *a1 = 1;
}

double sub_1B29A18C8()
{
  return 0.0;
}

uint64_t sub_1B29A18DC(uint64_t a1, unsigned char *a2)
{
  *a2 = 6;
  return swift_willThrow();
}

void *sub_1B29A18FC()
{
  return sub_1B29AEC7C(v0, v0[3]);
}

id sub_1B29A1920()
{
  return sub_1B2A9D2B4(v0, v1, v3, v2);
}

uint64_t sub_1B29A1944@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return v1 - 65;
}

uint64_t sub_1B29A1950()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B29A1974()
{
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 472);
  return sub_1B2A289C4(v2, v3);
}

void sub_1B29A1994(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1B29A1A0C()
{
  return v0;
}

uint64_t sub_1B29A1A24()
{
  uint64_t v2 = *(void *)(v0 + 344);
  return sub_1B2AD0BFC(v2);
}

uint64_t sub_1B29A1A44@<X0>(uint64_t a1@<X8>)
{
  *(void *)uint64_t v4 = a1;
  *(void *)(v4 + 8) = v1;
  *(unsigned char *)(v4 + 16) = 2;
  *(void *)(v4 + 24) = v3;
  return v4 + *(int *)(v2 + 24);
}

uint64_t sub_1B29A1A74@<X0>(uint64_t a1@<X8>)
{
  *(void *)uint64_t v4 = a1;
  *(void *)(v4 + 8) = v1;
  *(unsigned char *)(v4 + 16) = 2;
  *(void *)(v4 + 24) = v3;
  return v4 + *(int *)(v2 + 24);
}

uint64_t sub_1B29A1A94()
{
  return sub_1B2E836D8();
}

void sub_1B29A1ABC()
{
  sub_1B2A1F188();
}

uint64_t sub_1B29A1AE0@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t destroy for TrialAssetManager.RefreshPolicy()
{
  return swift_release();
}

uint64_t sub_1B29A1AF0()
{
  return sub_1B2E82348();
}

uint64_t sub_1B29A1B08()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29A1B30()
{
  *uint64_t v0 = 0x8000000000000000;
  return v1;
}

__n128 sub_1B29A1B84()
{
  return v0[1];
}

uint64_t sub_1B29A1B90()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B29A1BBC()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B29A1BE4()
{
  return sub_1B2E81518();
}

uint64_t sub_1B29A1C0C()
{
  return *(void *)(v0 - 72);
}

uint64_t sub_1B29A1C24()
{
  return *(void *)(v0 - 112);
}

id sub_1B29A1C48@<X0>(uint64_t a1@<X8>)
{
  sub_1B29AEC7C((void *)(v1 + a1), *(void *)(v1 + a1 + 24));
  return v2;
}

double sub_1B29A1C88()
{
  *(void *)uint64_t v0 = v1;
  double result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(void *)(v0 + 40) = 0;
  return result;
}

uint64_t sub_1B29A1CA4()
{
  return v0;
}

void sub_1B29A1CB4()
{
  uint64_t v1 = *(void *)(v0 - 264);
  *(void *)(v0 - 136) = *(void *)(v0 - 256);
  *(void *)(v0 - 128) = v1;
  uint64_t v2 = *(void *)(v0 - 280);
  *(void *)(v0 - 120) = *(void *)(v0 - 272);
  *(void *)(v0 - 112) = v2;
  uint64_t v3 = *(void *)(v0 - 288);
  *(void *)(v0 - 104) = *(void *)(v0 - 296);
  *(void *)(v0 - 96) = v3;
}

BOOL sub_1B29A1CF0(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1B29A1D0C()
{
  return 0;
}

uint64_t sub_1B29A1D18()
{
  sub_1B2A2A2C8(v2, v1, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29A1D4C()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B29A1D6C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_1B29A1D90()
{
  return v0;
}

uint64_t sub_1B29A1DAC()
{
  return sub_1B2E83418();
}

uint64_t sub_1B29A1DEC()
{
  return *(void *)(v0 - 168);
}

uint64_t sub_1B29A1DFC()
{
  sub_1B2A53708(v0, v1, 0);
  return sub_1B2A53708(v0, v1, 0);
}

uint64_t sub_1B29A1E38()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29A1E9C()
{
  return 0x7473657265746E69;
}

uint64_t sub_1B29A1EB0()
{
  return v0;
}

void sub_1B29A1EC0()
{
  sub_1B29B93B0();
}

uint64_t sub_1B29A1EE4()
{
  return 0x49746361746E6F63;
}

uint64_t sub_1B29A1F1C()
{
  return sub_1B2E834A8();
}

uint64_t sub_1B29A1F40()
{
  return swift_beginAccess();
}

uint64_t sub_1B29A1F80()
{
  return swift_bridgeObjectRelease();
}

void *sub_1B29A1FA0(void *a1)
{
  return memcpy(a1, v1, 0xA9uLL);
}

uint64_t sub_1B29A1FB8()
{
  return 0x65636E6174736964;
}

uint64_t sub_1B29A1FF0(uint64_t a1)
{
  return v1 + *(int *)(a1 + 48);
}

uint64_t sub_1B29A2018()
{
  return sub_1B2E83588();
}

uint64_t sub_1B29A2030()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B29A2060()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B29A208C()
{
  return sub_1B2E83628();
}

uint64_t sub_1B29A20C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  return sub_1B2A34A94(a27, a28, a29, a30, a31, a32, a33, a34, a26, a25, a24, a23, a22, a21);
}

uint64_t sub_1B29A212C()
{
  return sub_1B2E82FA8();
}

uint64_t sub_1B29A214C()
{
  return sub_1B2E82518();
}

uint64_t sub_1B29A2180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  uint64_t v13 = a2 + 40 * a1;
  return sub_1B29C3B84(v13, (uint64_t)va);
}

uint64_t sub_1B29A219C()
{
  return v0;
}

uint64_t sub_1B29A21B4()
{
  return swift_bridgeObjectRetain();
}

__n128 sub_1B29A21D0()
{
  sub_1B2D2E6E8(v0, v4, v2, v3);
  unint64_t v6 = *(void *)(v5 - 144);
  unsigned __int8 v7 = *(unsigned char *)(v5 - 136);
  __n128 result = *(__n128 *)(v5 - 160);
  v1[5] = result;
  v1[6].n128_u64[0] = v6;
  v1[6].n128_u8[8] = v7;
  return result;
}

uint64_t sub_1B29A220C()
{
  return v0;
}

uint64_t sub_1B29A2224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v32 = *(void *)(v30 - 72);
  return sub_1B2A34B34(v29, v25, a19, a23, a24, v26, a25, v32, a22, a21, a16, a15, v28, v27);
}

uint64_t sub_1B29A226C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = v1[9];
  uint64_t v12 = v1[10];
  uint64_t v13 = v1[11];
  uint64_t v14 = v1[12];
  char v15 = *((unsigned char *)v1 + 104);
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = v13;
  *(void *)(a1 + 96) = v14;
  *(unsigned char *)(a1 + 104) = v15;
  return result;
}

uint64_t sub_1B29A22C0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B29A22E0()
{
  return sub_1B2E83748();
}

uint64_t sub_1B29A22FC()
{
  return v0;
}

uint64_t sub_1B29A2338()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B29A2368()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B29A2384()
{
  return v0;
}

uint64_t sub_1B29A239C()
{
  return sub_1B2E83618();
}

uint64_t sub_1B29A23BC()
{
  return v0;
}

uint64_t sub_1B29A23D8@<X0>(unint64_t a1@<X8>)
{
  return sub_1B29BA018(a1 > 1, v1, 1, v2);
}

uint64_t sub_1B29A23FC()
{
  return v0;
}

void *sub_1B29A2414()
{
  return sub_1B29AEC7C((void *)(v0 - 144), *(void *)(v0 - 120));
}

uint64_t sub_1B29A2440()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B29A2460()
{
  return v0;
}

uint64_t sub_1B29A2478()
{
  return v0;
}

uint64_t sub_1B29A2490()
{
  return v0;
}

void *sub_1B29A24A8@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

__n128 sub_1B29A24F0(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  __n128 result = a9;
  a1[1] = a9;
  a1[2].n128_u64[0] = v9;
  a1[2].n128_u64[1] = v10;
  return result;
}

uint64_t sub_1B29A2514()
{
  return v0;
}

uint64_t sub_1B29A252C()
{
  return sub_1B2E83618();
}

uint64_t sub_1B29A254C()
{
  return v0;
}

uint64_t sub_1B29A2564()
{
  return v0;
}

uint64_t _s20IntelligencePlatform5CachePAAEy5ValueQzSg3KeyQzcig_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1B29A25E4()
{
  return sub_1B2E80FF8();
}

uint64_t sub_1B29A260C()
{
  return v0;
}

uint64_t sub_1B29A262C()
{
  return v0;
}

uint64_t sub_1B29A2648()
{
  return 0x64757469676E6F6CLL;
}

void sub_1B29A2690()
{
  sub_1B29C03F0();
}

uint64_t sub_1B29A26B0()
{
  return v0;
}

uint64_t sub_1B29A26F8(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
}

uint64_t sub_1B29A2710()
{
  return v0;
}

uint64_t sub_1B29A2724()
{
  return v0;
}

uint64_t sub_1B29A2738()
{
  return sub_1B2A47690();
}

uint64_t sub_1B29A2764()
{
  return v0;
}

uint64_t sub_1B29A2780()
{
  return v0;
}

uint64_t sub_1B29A27EC()
{
  return sub_1B2E80C28();
}

void sub_1B29A2830()
{
  sub_1B29B7048();
}

void sub_1B29A2854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v12 + 8 * (v14 >> 6) + 64) |= 1 << v14;
  char v15 = (void *)(*(void *)(v12 + 48) + 16 * v14);
  *char v15 = v11;
  v15[1] = v13;
  *(void *)(*(void *)(v12 + 56) + 8 * v14) = a11;
}

uint64_t sub_1B29A2894()
{
  return swift_beginAccess();
}

uint64_t sub_1B29A28B4()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1B29A28CC()
{
  return sub_1B2E836A8();
}

uint64_t sub_1B29A28EC()
{
  return v0;
}

uint64_t sub_1B29A2904()
{
  return sub_1B2E836A8();
}

uint64_t sub_1B29A2920(unsigned int a1)
{
  return a1 | 0x6E6F697400000000;
}

void sub_1B29A292C()
{
  *(void *)(v0 + 912) = *(void *)(v0 + 368);
  *(unsigned char *)(v0 + 920) = *(_DWORD *)(v0 + 364);
  *(unsigned char *)(v0 + 921) = *(_DWORD *)(v0 + 360);
  *(unsigned char *)(v0 + 922) = *(_DWORD *)(v0 + 356);
}

uint64_t sub_1B29A2950()
{
  return swift_retain();
}

uint64_t sub_1B29A2978()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B29A29A4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_1B2AF3710(v2);
}

uint64_t sub_1B29A29CC()
{
  return v0;
}

double sub_1B29A29E8(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  uint64_t v22 = (double *)(*(void *)(v11 + 56) + v12 * v13);
  *(void *)uint64_t v22 = v14;
  *((void *)v22 + 1) = v21;
  *((void *)v22 + 2) = v20;
  *((void *)v22 + 3) = v19;
  *((void *)v22 + 4) = v18;
  *((void *)v22 + 5) = v17;
  *((void *)v22 + 6) = v16;
  *((void *)v22 + 7) = v15;
  double result = a11;
  v22[8] = a11;
  return result;
}

unint64_t sub_1B29A2A0C()
{
  return sub_1B29DB684();
}

uint64_t sub_1B29A2A2C()
{
  return swift_bridgeObjectRetain();
}

void sub_1B29A2A44()
{
  uint64_t v4 = *(void *)(v0 + 56) + 24 * v2;
  uint64_t v5 = *(void *)(v3 - 240);
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = v5;
  *(unsigned char *)(v4 + 16) = *(_DWORD *)(v3 - 228) & 1;
}

uint64_t sub_1B29A2A68()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29A2A80(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return a1 - 8;
}

uint64_t sub_1B29A2A9C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 96) = v2;
  *(void *)(v3 - 120) = a1;
  *(void *)(v3 - 112) = v1;
  return sub_1B2E80668();
}

uint64_t sub_1B29A2AC4()
{
  return sub_1B2E06D08();
}

uint64_t sub_1B29A2B00()
{
  return v0;
}

uint64_t sub_1B29A2B18()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B29A2B48()
{
  return v0;
}

uint64_t sub_1B29A2B74()
{
  return sub_1B2E81518();
}

uint64_t sub_1B29A2BA4()
{
  return sub_1B2E82518();
}

uint64_t sub_1B29A2BC4()
{
  return v0;
}

uint64_t sub_1B29A2BE4()
{
  return v0;
}

void sub_1B29A2BF4()
{
  uint64_t v3 = *(void *)(v2 - 440);
  *(void *)(v2 - 456) = v0;
  *(void *)(v2 - 288) = *(void *)(v3 + 72);
  *(void *)(v2 - 296) = v1;
}

id sub_1B29A2C3C()
{
  return sub_1B2CAD3A0();
}

uint64_t sub_1B29A2C60()
{
  return 0;
}

uint64_t sub_1B29A2C7C()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29A2CC4()
{
  return v0;
}

uint64_t sub_1B29A2CF0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1B29A2D00()
{
  return swift_allocObject();
}

void sub_1B29A2D28()
{
  uint64_t v2 = *(void *)(v1 - 240);
  *(void *)(v1 - 160) = v0;
  *(void *)(v1 - 152) = v2;
  uint64_t v3 = *(void *)(v1 - 344);
  *(void *)(v1 - 144) = *(void *)(v1 - 248);
  *(void *)(v1 - 136) = v3;
  uint64_t v4 = *(void *)(v1 - 264);
  *(void *)(v1 - 128) = *(void *)(v1 - 256);
  *(void *)(v1 - 120) = v4;
  uint64_t v5 = *(void *)(v1 - 280);
  *(void *)(v1 - 112) = *(void *)(v1 - 272);
  *(void *)(v1 - 104) = v5;
  *(void *)(v1 - 96) = *(void *)(v1 - 288);
}

uint64_t sub_1B29A2D74()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1B29A2D94()
{
  return v0;
}

uint64_t sub_1B29A2DAC()
{
  return v0;
}

uint64_t sub_1B29A2DC4()
{
  return v0;
}

uint64_t sub_1B29A2DDC()
{
  return *(void *)(v0 - 112);
}

uint64_t sub_1B29A2DF0()
{
  return 0;
}

uint64_t sub_1B29A2E08()
{
  return v0;
}

void sub_1B29A2E1C(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v2 + v1);
  uint64_t v4 = *v3;
  LOBYTE(v3) = *((unsigned char *)v3 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = (_BYTE)v3;
}

uint64_t sub_1B29A2E34()
{
  uint64_t v4 = *(void *)(v2 + 16);
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v0;
  return swift_retain();
}

void sub_1B29A2E54()
{
  *(void *)(v1 + 16) = v4;
  uint64_t v7 = v1 + 104 * v5;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 40) = v0;
  *(void *)(v7 + 48) = *(void *)(v6 - 448);
  *(void *)(v7 + 56) = v2;
  *(_WORD *)(v7 + 64) = *(_DWORD *)(v6 - 456);
  uint64_t v8 = *(void *)(v6 - 424);
  *(void *)(v7 + 72) = *(void *)(v6 - 432);
  *(void *)(v7 + 80) = v8;
  uint64_t v9 = *(void *)(v6 - 400);
  *(void *)(v7 + 88) = *(void *)(v6 - 408);
  *(void *)(v7 + 96) = v9;
  uint64_t v10 = *(void *)(v6 - 384);
  *(void *)(v7 + 104) = *(void *)(v6 - 392);
  *(void *)(v7 + 112) = v10;
  *(void *)(v7 + 120) = *(void *)(v6 - 376);
  *(unsigned char *)(v7 + 128) = *(_DWORD *)(v6 - 368);
  *(unsigned char *)(v7 + 129) = *(_DWORD *)(v6 - 440);
}

uint64_t sub_1B29A2EE0()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29A2F04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B29A2F20()
{
  return 0;
}

uint64_t sub_1B29A2FC8()
{
  uint64_t v2 = *(void *)(v0 - 120);
  *(void *)(v0 - 104) = *(void *)(v0 - 128);
  *(void *)(v0 - 96) = v2;
  return sub_1B2E82518();
}

uint64_t sub_1B29A3014()
{
  return 0x656D614E7473616CLL;
}

uint64_t sub_1B29A3034()
{
  return 0x464F5F5452415453;
}

uint64_t sub_1B29A3094@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 32) = v2;
  *(void *)(v1 - 24) = v4;
  *(void *)(v1 - 16) = v3;
  *(void *)(v1 - 8) = a1;
  return sub_1B2E82968();
}

void sub_1B29A30B4()
{
  sub_1B29B9DC8();
}

uint64_t sub_1B29A30D8()
{
  return 0x6F69746176656C65;
}

uint64_t sub_1B29A30FC()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29A313C()
{
  return sub_1B2E83508();
}

uint64_t sub_1B29A315C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v26 = v14[51];
  uint64_t v25 = v14[28];
  uint64_t v16 = v14[36];
  uint64_t v17 = v14[37];
  uint64_t v18 = v14[30];
  uint64_t v19 = v14[31];
  uint64_t v20 = v14[32];
  uint64_t v21 = v14[33];
  uint64_t v22 = v14[34];
  uint64_t v23 = v14[35];
  return sub_1B2A34A54(v16, v17, v18, v19, v20, v21, v22, v23, v25, v26, a11, a12, a13, a14);
}

void sub_1B29A318C(void *a1@<X8>)
{
  *a1 = v1;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  a1[2] = 0x636C65646F6D6C6DLL;
  a1[3] = 0xE800000000000000;
}

uint64_t sub_1B29A31B4()
{
  return v0;
}

uint64_t sub_1B29A31C8()
{
  return sub_1B2E83748();
}

uint64_t sub_1B29A31E4()
{
  return v0;
}

uint64_t sub_1B29A31FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return a29;
}

uint64_t sub_1B29A322C()
{
  return 0x6F6E2073656F6420;
}

__n128 sub_1B29A3250(uint64_t a1)
{
  sub_1B2D2E6E8(a1, 0, 0, 0xE0u);
  unint64_t v3 = *(void *)(v2 - 144);
  unsigned __int8 v4 = *(unsigned char *)(v2 - 136);
  __n128 result = *(__n128 *)(v2 - 160);
  v1[5] = result;
  v1[6].n128_u64[0] = v3;
  v1[6].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1B29A3294(uint64_t a1)
{
  *(void *)(v1 + 776) = a1;
  return sub_1B2E82FB8();
}

void sub_1B29A32BC()
{
  *(void *)(v0 + 200) = 0;
}

uint64_t sub_1B29A32E4()
{
  return sub_1B2E837A8();
}

void sub_1B29A3300(unsigned __int8 a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,__int16 a52,__int16 a53,unsigned __int8 a54)
{
  a54 = a1;
  a38 = a12;
  a39 = a13;
  a40 = a14;
  a41 = a15;
  a42 = a16;
  a43 = a31;
  a44 = a33;
  a45 = a37;
  a46 = a11;
  a47 = a10;
  a48 = a9;
  a49 = v55;
  a50 = v54;
  a51 = v56;
  sub_1B2D8379C(&a54, (uint64_t)&a38, (uint64_t)&STACK[0x248]);
}

void sub_1B29A33E8()
{
  sub_1B29B7048();
}

uint64_t sub_1B29A340C()
{
  return v0;
}

uint64_t sub_1B29A3420()
{
  return *(void *)(v0 - 96);
}

uint64_t sub_1B29A3454()
{
  return v0;
}

uint64_t sub_1B29A3468()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B29A3494()
{
  return 0x63537374726F7073;
}

uint64_t sub_1B29A34B8()
{
  return v0;
}

uint64_t sub_1B29A34D0()
{
  return sub_1B2E835B8();
}

void sub_1B29A3514()
{
  sub_1B29BFD80();
}

uint64_t sub_1B29A3534()
{
  return sub_1B2E82518();
}

uint64_t sub_1B29A3558()
{
  return sub_1B2E837A8();
}

unint64_t sub_1B29A3590()
{
  *(void *)(v2 + 16) = v0;
  return v2
       + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
       + *(void *)(v3 + 72) * v1;
}

uint64_t sub_1B29A35B8()
{
  uint64_t v1 = *(void *)(v0 - 120);
  sub_1B29AEC7C((void *)(v0 - 144), v1);
  return v1;
}

uint64_t sub_1B29A35F4()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B29A35FC()
{
  return sub_1B2E83418();
}

uint64_t sub_1B29A363C()
{
  return v0;
}

uint64_t sub_1B29A3660()
{
  return swift_release();
}

uint64_t sub_1B29A3668(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3(*(void *)(a1 + *(void *)(*(void *)a1 + 96)));
}

uint64_t sub_1B29A3688()
{
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v1 = swift_weakLoadStrong();
  if (Strong) {
    swift_weakAssign();
  }
  if (v1)
  {
    swift_weakAssign();
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1B29A374C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B29A3768(a1, v2, a2);
}

uint64_t sub_1B29A3768@<X0>(uint64_t a1@<X0>, void (**a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *((void *)*a2 + 11);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(void *)v7;
  if (*(void *)(*(void *)v7 + 24))
  {
    swift_retain();
    sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
    sub_1B2E82A28();
    swift_release();
  }
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11) {
    goto LABEL_9;
  }
  type metadata accessor for ExpirableLazyBox.Box();
  a2[2]();
  *(void *)(v10 + 16) = sub_1B2B40DE8((uint64_t)v9);
  swift_release();
  if (qword_1EB7E5AE0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1B2E81FB8();
  sub_1B29A4B98(v12, (uint64_t)qword_1EB7E5AC0);
  uint64_t v13 = sub_1B2E81F98();
  os_log_type_t v14 = sub_1B2E82DA8();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_1B2996000, v13, v14, "ExpirableLazyBox value initialized", v15, 2u);
    MEMORY[0x1B3EB30C0](v15, -1, -1);
  }

  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
LABEL_9:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a3, v11 + *(void *)(*(void *)v11 + 104), v5);
    swift_retain();
    sub_1B29A3A50(v10);
    return swift_release();
  }
  else
  {
    uint64_t result = sub_1B2E83418();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B29A3A50(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v42 = a1;
  uint64_t v3 = *(void **)v1;
  uint64_t v39 = *(void *)(*(void *)v1 + 80);
  uint64_t v44 = *(void *)(v39 - 8);
  uint64_t v40 = *(void *)(v44 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v46 = (char *)&v33 - v4;
  uint64_t v41 = v3[12];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = AssociatedTypeWitness;
  uint64_t v45 = sub_1B2E82F38();
  uint64_t v43 = *(void *)(v45 - 8);
  uint64_t v6 = *(void *)(v43 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v45);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v35 = (char *)&v33 - v8;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v34 = (char *)&v33 - v12;
  uint64_t v14 = sub_1B29A3EB4(&qword_1EB7E2778);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v16;
  uint64_t v17 = v1 + v3[16];
  uint64_t v18 = v1 + v3[17];
  uint64_t v33 = v2 + v3[15];
  uint64_t v19 = sub_1B2E82A08();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v16, 1, 1, v19);
  uint64_t v37 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = v13;
  uint64_t v21 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v20, v17, v36);
  uint64_t v22 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v9, v18, v45);
  uint64_t v23 = v44;
  uint64_t v24 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v46, v33, v39);
  unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v26 = (v11 + *(unsigned __int8 *)(v22 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v27 = (v6 + *(unsigned __int8 *)(v23 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v28 = (v40 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = 0;
  *((void *)v29 + 3) = 0;
  *((void *)v29 + 4) = v24;
  *((void *)v29 + 5) = v3[11];
  *((void *)v29 + 6) = v41;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v29[v25], v34, v21);
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v29[v26], v35, v45);
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(&v29[v27], v46, v24);
  uint64_t v30 = (uint64_t)v38;
  *(void *)&v29[v28] = v37;
  uint64_t v31 = sub_1B29A3F20(v30, (uint64_t)&unk_1E9C3E608, (uint64_t)v29);
  *(void *)(v42 + 24) = v31;
  return swift_release();
}

uint64_t sub_1B29A3EB4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1B29A3F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1B2E82A08();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v5) == 1)
  {
    sub_1B29A407C(a1);
  }
  else
  {
    sub_1B2E829F8();
    sub_1B299B3B0();
    sub_1B299B798();
    v6();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B29998FC();
    sub_1B2E829B8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1B29A407C(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7E2778);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B29A40DC()
{
  return v0;
}

uint64_t sub_1B29A40EC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29A412C()
{
  return v0;
}

uint64_t sub_1B29A4140(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_1B29A4150()
{
  return v0;
}

void sub_1B29A415C()
{
  uint64_t v2 = v0[1];
  *(void *)(v1 - 120) = *v0;
  *(void *)(v1 - 112) = v2;
}

uint64_t sub_1B29A4180()
{
  return v0;
}

uint64_t sub_1B29A4198()
{
  return swift_allocObject();
}

uint64_t sub_1B29A41B0()
{
  return 0;
}

void sub_1B29A41D0(uint64_t a1@<X8>)
{
  *(void *)(v3 + 8 * a1) = v2 | v1;
}

uint64_t sub_1B29A41EC()
{
  return 0;
}

uint64_t sub_1B29A4200()
{
  return v0;
}

uint64_t sub_1B29A4218()
{
  return sub_1B2E82518();
}

uint64_t sub_1B29A4274()
{
  *(_OWORD *)(v1 + 1200) = *(_OWORD *)(v1 + 1152);
  *(_OWORD *)(v1 + 1216) = *(_OWORD *)(v1 + 1168);
  *(unsigned char *)(v1 + 1232) = *(unsigned char *)(v1 + 1184);
  return sub_1B29AB098(v0 + 5600, v0 + 80);
}

__n128 sub_1B29A42A8()
{
  return *(__n128 *)v0;
}

unint64_t sub_1B29A42C0(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

void sub_1B29A42D8()
{
  static EntityClass.person.getter();
}

uint64_t sub_1B29A4304(void (*a1)(void))
{
  return sub_1B2A92AA8(a1);
}

uint64_t sub_1B29A4320@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_1B2E835C8();
}

uint64_t sub_1B29A4344@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 1224) = a1;
  return sub_1B2E83588();
}

uint64_t sub_1B29A43A0()
{
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 472);
  return sub_1B2A28DAC(v2, v3);
}

uint64_t sub_1B29A43CC()
{
  return v0 - 224;
}

uint64_t sub_1B29A43E0()
{
  return v0;
}

uint64_t sub_1B29A4400()
{
  return sub_1B2E81F68();
}

uint64_t sub_1B29A4434()
{
  return sub_1B2E83508();
}

uint64_t sub_1B29A446C()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B29A448C()
{
  return v0 + 8;
}

double sub_1B29A449C(uint64_t a1)
{
  return *(double *)(*(void *)(v1 + 56) + 8 * a1);
}

uint64_t sub_1B29A44E0()
{
  return sub_1B2B30EE8();
}

uint64_t sub_1B29A4508(uint64_t a1)
{
  return MEMORY[0x1F4188298](a1, 0, 0);
}

uint64_t *sub_1B29A4518@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 136) = a1;
  return sub_1B29D1C70((uint64_t *)(v1 - 168));
}

uint64_t sub_1B29A4530()
{
  long long v4 = *(_OWORD *)(v1 + v0);
  long long v5 = *(_OWORD *)(v1 + v0 + 16);
  long long v6 = *(_OWORD *)(v1 + v0 + 32);
  *(_OWORD *)(v2 - 135) = *(_OWORD *)(v1 + v0 + 41);
  *(_OWORD *)(v2 - 160) = v5;
  *(_OWORD *)(v2 - 144) = v6;
  *(_OWORD *)(v2 - 176) = v4;
  return sub_1B2B6E394(v2 - 176);
}

void sub_1B29A4560()
{
  *(void *)(v3 - 112) = v1;
  *(void *)(v3 - 104) = v0;
  *(void *)(v3 - 96) = v2;
}

uint64_t sub_1B29A457C(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

void sub_1B29A4598(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v2;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = *(void *)(v11 - 216);
  *(void *)(a2 + 56) = v10;
  *(void *)(a2 + 64) = v9;
  *(unsigned char *)(a2 + 72) = v3;
}

uint64_t sub_1B29A45D4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B29A45F4()
{
  return v0;
}

uint64_t sub_1B29A460C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29A4624()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29A463C()
{
  return swift_slowAlloc();
}

uint64_t sub_1B29A4678()
{
  return swift_beginAccess();
}

uint64_t sub_1B29A469C()
{
  return sub_1B2E82538();
}

uint64_t sub_1B29A46B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return a14;
}

uint64_t sub_1B29A46C8()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29A4708()
{
  return 0x6464416C69616D65;
}

uint64_t sub_1B29A4724()
{
  return 0x48544E4F4D5F31;
}

uint64_t sub_1B29A4760()
{
  return 0;
}

uint64_t sub_1B29A4774()
{
  return sub_1B2E7FFB8();
}

uint64_t sub_1B29A47B8()
{
  sub_1B29AEC7C(v0, v0[3]);
  return sub_1B2D0FAA0();
}

uint64_t sub_1B29A47EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(unsigned char *)(a1 + 16) = 6;
  return swift_willThrow();
}

uint64_t sub_1B29A4814()
{
  return 0x797469437369;
}

uint64_t sub_1B29A4828()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29A4848()
{
  return sub_1B2E83A18();
}

void sub_1B29A4878(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1B29A4898()
{
  return 1;
}

uint64_t sub_1B29A48B4()
{
  return sub_1B2E83278();
}

uint64_t sub_1B29A48DC()
{
  return v0;
}

void sub_1B29A48F0()
{
  v0[31] = 0;
  v0[32] = 0;
  v0[36] = 0;
  v0[37] = 0;
  v0[35] = 0;
  v0[33] = 0;
}

unint64_t sub_1B29A4924()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1B29A4938()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1B29A495C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29A4974()
{
  return v0;
}

uint64_t sub_1B29A4988()
{
  return 0x79676F6C6F746E6FLL;
}

uint64_t sub_1B29A49AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_1B29DB060(v26, v27, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B29A49C4()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return sub_1B29BA060(0, v2, 1, v0);
}

uint64_t sub_1B29A49E8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_1B2E81F08();
}

uint64_t sub_1B29A4A14()
{
  return v0;
}

uint64_t sub_1B29A4A28(uint64_t a1, uint64_t a2)
{
  return sub_1B2B7C590(a1, a2);
}

uint64_t sub_1B29A4A60()
{
  return sub_1B2E80E38();
}

uint64_t sub_1B29A4A80()
{
  return v0;
}

uint64_t sub_1B29A4A9C()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return sub_1B29BA018(0, v2, 1, v0);
}

uint64_t sub_1B29A4AC0()
{
  return type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
}

uint64_t sub_1B29A4AE8(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = result + 1;
  *(void *)(v3 + 8 * result + 32) = a2;
  return result;
}

uint64_t sub_1B29A4B00@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1B2E81FB8();
  uint64_t v6 = sub_1B29A4B98(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_1B29A4B98(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1B29A4BD0()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29A4BEC()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1B29A4C10()
{
  return v0;
}

uint64_t sub_1B29A4C28()
{
  return v0;
}

uint64_t sub_1B29A4C44()
{
  return swift_task_alloc();
}

uint64_t sub_1B29A4C5C()
{
  *(void *)(v5 - 128) = v3;
  *(void *)(v5 - 120) = v4;
  *(void *)(v5 - 112) = v2;
  *(void *)(v5 - 104) = v1;
  *(void *)(v5 - 96) = v0;
  return 255;
}

id sub_1B29A4C78(uint64_t a1, const char *a2)
{
  uint64_t v7 = *(void **)(v5 - 112);
  uint64_t v8 = *(void *)(v5 - 104);
  return objc_msgSend(v7, a2, v4, v3, 0, v8, v2, 0);
}

uint64_t sub_1B29A4CBC()
{
  return v0;
}

void sub_1B29A4CE8(__n128 a1, uint64_t a2, __n128 *a3)
{
  *a3 = a1;
  a3[1].n128_u8[0] = 4;
}

uint64_t sub_1B29A4CFC()
{
  return swift_allocObject();
}

uint64_t _s20IntelligencePlatform14ConfidenceNodeV9computing018shouldClampToValidC0ACSdyc_SbtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(unsigned char *)a4 = a3;
  *(void *)(a4 + 8) = result;
  *(void *)(a4 + 16) = a2;
  return result;
}

uint64_t sub_1B29A4D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return *(void *)(a19 + 16 * v19);
}

uint64_t sub_1B29A4D64()
{
  return 0;
}

uint64_t sub_1B29A4D80()
{
  return sub_1B2E80388();
}

double sub_1B29A4D98(uint64_t a1, uint64_t a2)
{
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_WORD *)(a2 + 48) = 512;
  return result;
}

uint64_t sub_1B29A4DB4()
{
  *(_OWORD *)(v1 + 1104) = *(_OWORD *)(v1 + 1056);
  *(_OWORD *)(v1 + 1120) = *(_OWORD *)(v1 + 1072);
  *(unsigned char *)(v1 + 1136) = *(unsigned char *)(v1 + 1088);
  return sub_1B29AB098(v0 + 5504, v0 + 80);
}

uint64_t sub_1B29A4DE8()
{
  return swift_allocObject();
}

void sub_1B29A4E00()
{
  sub_1B29FB9A8();
}

uint64_t sub_1B29A4E44(uint64_t a1)
{
  return sub_1B2A9DBC0(a1, v1, v2, v4, v3);
}

uint64_t sub_1B29A4E64()
{
  return sub_1B2E81F38();
}

uint64_t sub_1B29A4E8C()
{
  return swift_task_alloc();
}

uint64_t sub_1B29A4EB8()
{
  uint64_t v2 = *(void *)(v0 + 120);
  return sub_1B2AF2AE0(v2);
}

uint64_t sub_1B29A4EDC()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B29A4F00()
{
  return 0x44495F444DLL;
}

double _s20IntelligencePlatform20EntityTaggingServiceC15OperatingPointsV16precision0point9Sdvg_0()
{
  return *(double *)v0;
}

double sub_1B29A4F1C()
{
  return 9.22337204e18;
}

void sub_1B29A4F2C(uint64_t a1@<X8>)
{
  v2[10] = a1;
  v2[11] = (v1 - 32) | 0x8000000000000000;
  v2[12] = 0x636E657265666E69;
  v2[13] = 0xEF656E69676E4565;
}

uint64_t sub_1B29A4F60()
{
  return *(void *)(v0 - 368);
}

uint64_t sub_1B29A4F80()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

__n128 sub_1B29A4FA0(uint64_t a1)
{
  return *(__n128 *)a1;
}

uint64_t sub_1B29A4FC4()
{
  return sub_1B2E82498();
}

uint64_t sub_1B29A4FE0(uint64_t a1)
{
  *(void *)(v2 - 408) = a1;
  uint64_t result = *(void *)(v1 + 8);
  *(void *)(v2 - 416) = result;
  return result;
}

double sub_1B29A5018()
{
  double result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  *uint64_t v0 = 0u;
  return result;
}

uint64_t sub_1B29A502C()
{
  return sub_1B2E836D8();
}

void sub_1B29A5054(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t sub_1B29A5064(uint64_t a1)
{
  *(void *)(v1 - 320) = a1;
  return v1 - 320;
}

uint64_t sub_1B29A507C()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B29A50A0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 255;
}

uint64_t sub_1B29A50B8()
{
  return sub_1B2E82538();
}

uint64_t sub_1B29A50D4(_OWORD *a1)
{
  *(void *)(v1 - 248) = a1;
  long long v3 = *(_OWORD *)(v1 - 192);
  a1[1] = *(_OWORD *)(v1 - 208);
  a1[2] = v3;
  a1[3] = *(_OWORD *)(v1 - 176);
  *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)(v1 - 167);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B29A511C()
{
  return 1935763488;
}

uint64_t sub_1B29A5134()
{
  return swift_allocObject();
}

uint64_t sub_1B29A5150(uint64_t result, uint64_t a2)
{
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v3;
  *(void *)(v5 + 48) = result;
  *(void *)(v5 + 56) = a2;
  *(_WORD *)(v5 + 64) = v4;
  return result;
}

uint64_t sub_1B29A5160()
{
  return 0x49746361746E6F63;
}

uint64_t sub_1B29A517C()
{
  return 0x4E455F48544E4F4DLL;
}

uint64_t sub_1B29A5198()
{
  return sub_1B2E83748();
}

uint64_t sub_1B29A51B0()
{
  return v0;
}

uint64_t sub_1B29A51C4()
{
  return v0;
}

uint64_t sub_1B29A51EC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = 3;
  return swift_willThrow();
}

uint64_t sub_1B29A5210()
{
  return sub_1B2E7FF78();
}

void sub_1B29A523C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1B29A525C()
{
  return v0;
}

uint64_t sub_1B29A5280(uint64_t a1, uint64_t a2)
{
  sub_1B2D2BBF0(a1, a2, v2, 1u);
  sub_1B2D2BBF0(v4, v5, v3, 1u);
  return sub_1B2D2BC44(v4, v5, v3, 1u);
}

uint64_t sub_1B29A52D0()
{
  return v0;
}

void sub_1B29A531C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  v34[8] = v35;
  v34[9] = a34;
  v34[10] = a33;
  v34[11] = a32;
  v34[12] = v36;
}

uint64_t sub_1B29A533C()
{
  return v0;
}

uint64_t sub_1B29A5350@<X0>(uint64_t a1@<X8>)
{
  return *(void *)a1;
}

uint64_t sub_1B29A5370()
{
  return 0x49747865746E6F63;
}

uint64_t sub_1B29A5390()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B29A53B0()
{
  return 0x7265746C6966;
}

__n128 sub_1B29A53C4()
{
  uint64_t v2 = *(void *)(v1 - 96);
  char v3 = *(unsigned char *)(v1 - 88);
  __n128 result = *(__n128 *)(v1 - 192);
  long long v5 = *(_OWORD *)(v1 - 176);
  long long v6 = *(_OWORD *)(v1 - 160);
  long long v7 = *(_OWORD *)(v1 - 144);
  long long v8 = *(_OWORD *)(v1 - 128);
  long long v9 = *(_OWORD *)(v1 - 112);
  *(__n128 *)uint64_t v0 = result;
  *(_OWORD *)(v0 + 16) = v5;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_OWORD *)(v0 + 64) = v8;
  *(_OWORD *)(v0 + 80) = v9;
  *(void *)(v0 + 96) = v2;
  *(unsigned char *)(v0 + 104) = v3;
  return result;
}

uint64_t sub_1B29A53F0()
{
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v6 = *(unsigned int *)(v0 + 304);
  int v7 = *(_DWORD *)(v0 + 296);
  return sub_1B29C5B68(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1B29A5428()
{
  return sub_1B2B47548(1, v1 == 0, v0);
}

uint64_t sub_1B29A544C()
{
  return sub_1B2DE4310(v0);
}

uint64_t sub_1B29A5468()
{
  return v0;
}

unint64_t sub_1B29A5480()
{
  *(void *)(v3 + 16) = v0;
  return v3
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(void *)(v2 + 72) * v1;
}

unsigned __int8 *sub_1B29A54A8@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1B29A54D8()
{
  *(unsigned char *)(v0 - 72) = 0;
  return *(void *)(v0 - 112);
}

uint64_t sub_1B29A5504()
{
  return 0x65676175676E616CLL;
}

uint64_t sub_1B29A5524(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_1B29A5560()
{
  return v0;
}

uint64_t sub_1B29A5574()
{
  swift_beginAccess();
  sub_1B29A0E38();
  type metadata accessor for LRUCacheNode();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1B2E82178();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t *sub_1B29A5630(uint64_t a1, uint64_t a2)
{
  return sub_1B29A567C(a1, a2);
}

uint64_t *sub_1B29A567C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (uint64_t)v2 + *(void *)(*v2 + 104);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v6, 1, 1, *(void *)(*v2 + 80));
  uint64_t v7 = v5;
  uint64_t v8 = (uint64_t)v2 + *(void *)(*v2 + 112);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v8, 1, 1, *(void *)(v7 + 88));
  swift_weakInit();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v9 = sub_1B2E82F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v6, a1, v9);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v10 = sub_1B2E82F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, a2, v10);
  swift_endAccess();
  swift_weakAssign();
  swift_weakAssign();
  return v2;
}

const char *sub_1B29A5868()
{
  return Features.FeatureFlag.feature.getter();
}

const char *Features.FeatureFlag.feature.getter()
{
  __n128 result = "KTS";
  switch(*v0)
  {
    case 1:
      __n128 result = "LivableSources";
      break;
    case 2:
      __n128 result = "NERD";
      break;
    case 3:
      return result;
    case 4:
      __n128 result = "LifeEventSource";
      break;
    case 5:
      __n128 result = "GlobalKnowledgeService";
      break;
    case 6:
      __n128 result = "IntelligencePlatformLibrary";
      break;
    case 7:
      __n128 result = "EntityRelevanceBiomeSources";
      break;
    case 8:
      __n128 result = "ExperimentalECRViews";
      break;
    case 9:
      __n128 result = "ExperimentalK2TViews";
      break;
    case 0xA:
      __n128 result = "GlobalKnowledgePrototypes";
      break;
    case 0xB:
      __n128 result = "LifeEventAllDataSources";
      break;
    case 0xC:
      __n128 result = "ERExperimentalFeatures";
      break;
    case 0xD:
      __n128 result = "LongitudinalDataCollection";
      break;
    case 0xE:
      __n128 result = "IPCSMemoryTransaction";
      break;
    case 0xF:
      __n128 result = "IPCSMemoryReduction";
      break;
    case 0x10:
      __n128 result = "PowerLog";
      break;
    case 0x11:
      __n128 result = "ExperimentalViews";
      break;
    case 0x12:
      __n128 result = "EntityCandidateRetrievalAjax";
      break;
    case 0x13:
      __n128 result = "AutonamingMessages";
      break;
    case 0x14:
      __n128 result = "EuclidVDBAsrNotifications";
      break;
    case 0x15:
      __n128 result = "EntitySimilarity";
      break;
    case 0x16:
      __n128 result = "AddressContactResolution";
      break;
    case 0x17:
      __n128 result = "EntityGrounding";
      break;
    case 0x18:
      __n128 result = "DefaultResolverInteractionsView";
      break;
    case 0x19:
      __n128 result = "PersonalKnowledgeTool";
      break;
    case 0x1A:
      __n128 result = "AutonamingMessagesIngestion";
      break;
    case 0x1B:
      __n128 result = "OrionSQL";
      break;
    default:
      __n128 result = "AllSources";
      break;
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for ActivityEventType(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

const char *sub_1B29A5ABC()
{
  return "IntelligencePlatform";
}

ValueMetadata *type metadata accessor for Features.FeatureFlag()
{
  return &type metadata for Features.FeatureFlag;
}

uint64_t getEnumTagSinglePayload for Features.FeatureFlag(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE5)
  {
    if (a2 + 27 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 27) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 28;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1C;
  int v5 = v6 - 28;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_1B29A5B68(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t getEnumTagSinglePayload for LogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2DA36F8);
}

uint64_t storeEnumTagSinglePayload for LogSignpost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2DA3780);
}

void *static Features.FeatureFlag.allCases.getter()
{
  return &unk_1F0AC18B0;
}

uint64_t sub_1B29A5C04()
{
  return swift_release();
}

uint64_t sub_1B29A5C0C()
{
  return swift_release();
}

uint64_t sub_1B29A5C14()
{
  return swift_release();
}

uint64_t sub_1B29A5C1C()
{
  return swift_release();
}

uint64_t sub_1B29A5C24()
{
  return swift_release();
}

uint64_t sub_1B29A5C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1B29A5C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1B29A5C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1B29A5C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1B29A5C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t static GDLog.signpost.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29A4B00(&qword_1EB7E6618, (uint64_t)qword_1EB7E6600, a1);
}

uint64_t static GDLog.view.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29A4B00(&qword_1EB7E52B8, (uint64_t)qword_1EB7E52A0, a1);
}

uint64_t LogSignpost.state.getter()
{
  return swift_retain();
}

uint64_t LogSignpost.name.getter()
{
  return *(void *)v0;
}

const char *static LogSignpost.enableTelemetry.getter()
{
  return "enableTelemetry=YES";
}

uint64_t ActivityEventType.init(activityTypeEntityClass:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 24);
  unint64_t v6 = sub_1B2A6E480(0x5FuLL, (uint64_t)&v259);
  sub_1B299F258(v6, v7, v8, v9, v10, v11, v12, v13, v234, v259, v260, v261);
  BOOL v14 = v14 && v2 == v5;
  if (v14)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_8;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 0;
    goto LABEL_9;
  }
  static EntityClass.workingActivityType.getter();
  sub_1B299F258(v17, v18, v19, v20, v21, v22, v23, v24, v235, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_17;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 1;
    goto LABEL_9;
  }
  static EntityClass.meetingActivityType.getter();
  sub_1B299F258(v26, v27, v28, v29, v30, v31, v32, v33, v236, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    char v16 = 2;
    sub_1B299F268();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 2;
    goto LABEL_9;
  }
  static EntityClass.eatingActivityType.getter();
  sub_1B299F258(v35, v36, v37, v38, v39, v40, v41, v42, v237, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_32;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_32:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 3;
    goto LABEL_9;
  }
  static EntityClass.watchingMediaActivityType.getter();
  sub_1B299F258(v44, v45, v46, v47, v48, v49, v50, v51, v238, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_40;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_40:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 4;
    goto LABEL_9;
  }
  static EntityClass.communicatingActivityType.getter();
  sub_1B299F258(v53, v54, v55, v56, v57, v58, v59, v60, v239, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_48;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_48:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 5;
    goto LABEL_9;
  }
  static EntityClass.shoppingActivityType.getter();
  sub_1B299F258(v62, v63, v64, v65, v66, v67, v68, v69, v240, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_56;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_56:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 6;
    goto LABEL_9;
  }
  static EntityClass.mindfulActivityType.getter();
  sub_1B299F258(v71, v72, v73, v74, v75, v76, v77, v78, v241, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_64;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_64:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 7;
    goto LABEL_9;
  }
  static EntityClass.sleepActivityType.getter();
  sub_1B299F258(v80, v81, v82, v83, v84, v85, v86, v87, v242, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_72;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_72:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 8;
    goto LABEL_9;
  }
  static EntityClass.travelActivityType.getter();
  sub_1B299F258(v89, v90, v91, v92, v93, v94, v95, v96, v243, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_80;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_80:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 9;
    goto LABEL_9;
  }
  static EntityClass.readingActivityType.getter();
  sub_1B299F258(v98, v99, v100, v101, v102, v103, v104, v105, v244, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_88;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_88:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 10;
    goto LABEL_9;
  }
  static EntityClass.vacationActivityType.getter();
  sub_1B299F258(v107, v108, v109, v110, v111, v112, v113, v114, v245, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_96;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_96:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 11;
    goto LABEL_9;
  }
  static EntityClass.socialActivityType.getter();
  sub_1B299F258(v116, v117, v118, v119, v120, v121, v122, v123, v246, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_104;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_104:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 12;
    goto LABEL_9;
  }
  static EntityClass.wakingActivityType.getter();
  sub_1B299F258(v125, v126, v127, v128, v129, v130, v131, v132, v247, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_112;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_112:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 13;
    goto LABEL_9;
  }
  static EntityClass.goingToBedActivityType.getter();
  sub_1B299F258(v134, v135, v136, v137, v138, v139, v140, v141, v248, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_120;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_120:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 14;
    goto LABEL_9;
  }
  static EntityClass.typeOfPhysicalExercise.getter();
  sub_1B299F258(v143, v144, v145, v146, v147, v148, v149, v150, v249, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_128;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_128:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 15;
    goto LABEL_9;
  }
  static EntityClass.commuteActivityType.getter();
  sub_1B299F258(v152, v153, v154, v155, v156, v157, v158, v159, v250, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_136;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_136:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 16;
    goto LABEL_9;
  }
  static EntityClass.walkingActivityType.getter();
  sub_1B299F258(v161, v162, v163, v164, v165, v166, v167, v168, v251, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_144;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_144:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 17;
    goto LABEL_9;
  }
  static EntityClass.runningActivityType.getter();
  sub_1B299F258(v170, v171, v172, v173, v174, v175, v176, v177, v252, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_152;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_152:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 18;
    goto LABEL_9;
  }
  static EntityClass.bikingActivityType.getter();
  sub_1B299F258(v179, v180, v181, v182, v183, v184, v185, v186, v253, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_160;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_160:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 19;
    goto LABEL_9;
  }
  static EntityClass.hikingActivityType.getter();
  sub_1B299F258(v188, v189, v190, v191, v192, v193, v194, v195, v254, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_168;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_168:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 20;
    goto LABEL_9;
  }
  static EntityClass.phoneCallActivityType.getter();
  sub_1B299F258(v197, v198, v199, v200, v201, v202, v203, v204, v255, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_176;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_176:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 21;
    goto LABEL_9;
  }
  static EntityClass.facetimeActivityType.getter();
  sub_1B299F258(v206, v207, v208, v209, v210, v211, v212, v213, v256, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_184;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_184:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 22;
    goto LABEL_9;
  }
  static EntityClass.drivingActivityType.getter();
  sub_1B299F258(v215, v216, v217, v218, v219, v220, v221, v222, v257, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_192;
  }
  sub_1B29B19FC();
  sub_1B29A40EC();
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
LABEL_192:
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 23;
    goto LABEL_9;
  }
  static EntityClass.behaviorActivityType.getter();
  sub_1B299F258(v224, v225, v226, v227, v228, v229, v230, v231, v258, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    swift_bridgeObjectRelease();
    sub_1B299F268();
    uint64_t result = swift_bridgeObjectRelease();
    char v16 = 24;
  }
  else
  {
    char v233 = sub_1B29B19FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v233) {
      char v16 = 24;
    }
    else {
      char v16 = 25;
    }
  }
LABEL_9:
  *a2 = v16;
  return result;
}

void ActivityEventType.activityTypeEntityClass.getter(uint64_t a1@<X8>)
{
  switch(*v1)
  {
    case 1:
      static EntityClass.workingActivityType.getter();
      break;
    case 2:
      static EntityClass.meetingActivityType.getter();
      break;
    case 3:
      static EntityClass.eatingActivityType.getter();
      break;
    case 4:
      static EntityClass.watchingMediaActivityType.getter();
      break;
    case 5:
      static EntityClass.communicatingActivityType.getter();
      break;
    case 6:
      static EntityClass.shoppingActivityType.getter();
      break;
    case 7:
      static EntityClass.mindfulActivityType.getter();
      break;
    case 8:
      static EntityClass.sleepActivityType.getter();
      break;
    case 9:
      static EntityClass.travelActivityType.getter();
      break;
    case 0xA:
      static EntityClass.readingActivityType.getter();
      break;
    case 0xB:
      static EntityClass.vacationActivityType.getter();
      break;
    case 0xC:
      static EntityClass.socialActivityType.getter();
      break;
    case 0xD:
      static EntityClass.wakingActivityType.getter();
      break;
    case 0xE:
      static EntityClass.goingToBedActivityType.getter();
      break;
    case 0xF:
      static EntityClass.typeOfPhysicalExercise.getter();
      break;
    case 0x10:
      static EntityClass.commuteActivityType.getter();
      break;
    case 0x11:
      static EntityClass.walkingActivityType.getter();
      break;
    case 0x12:
      static EntityClass.runningActivityType.getter();
      break;
    case 0x13:
      static EntityClass.bikingActivityType.getter();
      break;
    case 0x14:
      static EntityClass.hikingActivityType.getter();
      break;
    case 0x15:
      static EntityClass.phoneCallActivityType.getter();
      break;
    case 0x16:
      static EntityClass.facetimeActivityType.getter();
      break;
    case 0x17:
      static EntityClass.drivingActivityType.getter();
      break;
    case 0x18:
      static EntityClass.behaviorActivityType.getter();
      break;
    default:
      sub_1B2A6E480(0x5FuLL, a1);
      break;
  }
}

uint64_t ActivityEventType.graphObjectType.getter()
{
  switch(*v0)
  {
    case 1:
      uint64_t v1 = type metadata accessor for CustomGraphWorkingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D90F8;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphWorkingActivityEvent;
      break;
    case 2:
      uint64_t v1 = type metadata accessor for CustomGraphMeetingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9060;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphMeetingActivityEvent;
      break;
    case 3:
      uint64_t v1 = type metadata accessor for CustomGraphEatingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D8FA8;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphEatingActivityEvent;
      break;
    case 4:
      uint64_t v1 = type metadata accessor for CustomGraphWatchingTVActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D92B0;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphWatchingTVActivityEvent;
      break;
    case 5:
      uint64_t v1 = type metadata accessor for CustomGraphCommunicatingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9348;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphCommunicatingActivityEvent;
      break;
    case 6:
      uint64_t v1 = type metadata accessor for CustomGraphShoppingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9160;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphShoppingActivityEvent;
      break;
    case 7:
      uint64_t v1 = type metadata accessor for CustomGraphMindfulnessActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D92D8;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphMindfulnessActivityEvent;
      break;
    case 8:
      uint64_t v1 = type metadata accessor for CustomGraphSleepingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9180;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphSleepingActivityEvent;
      break;
    case 9:
      uint64_t v1 = type metadata accessor for CustomGraphTravelingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D91F8;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphTravelingActivityEvent;
      break;
    case 0xA:
      uint64_t v1 = type metadata accessor for CustomGraphReadingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9090;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphReadingActivityEvent;
      break;
    case 0xB:
      uint64_t v1 = type metadata accessor for CustomGraphVacationingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9328;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphVacationingActivityEvent;
      break;
    case 0xC:
      uint64_t v1 = type metadata accessor for CustomGraphSocializingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9300;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphSocializingActivityEvent;
      break;
    case 0xD:
      uint64_t v1 = type metadata accessor for CustomGraphWakingUpActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D91A8;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphWakingUpActivityEvent;
      break;
    case 0xE:
      uint64_t v1 = type metadata accessor for CustomGraphGoingToBedActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9240;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphGoingToBedActivityEvent;
      break;
    case 0xF:
      uint64_t v1 = type metadata accessor for CustomGraphExercisingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9218;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphExercisingActivityEvent;
      break;
    case 0x10:
      uint64_t v1 = type metadata accessor for CustomGraphCommuteActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9010;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphCommuteActivityEvent;
      break;
    case 0x11:
      uint64_t v1 = type metadata accessor for CustomGraphWalkingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D90D8;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphWalkingActivityEvent;
      break;
    case 0x12:
      uint64_t v1 = type metadata accessor for CustomGraphRunningActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D90B0;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphRunningActivityEvent;
      break;
    case 0x13:
      uint64_t v1 = type metadata accessor for CustomGraphBicyclingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D91D8;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphBicyclingActivityEvent;
      break;
    case 0x14:
      uint64_t v1 = type metadata accessor for CustomGraphHikingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D8FF0;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphHikingActivityEvent;
      break;
    case 0x15:
      uint64_t v1 = type metadata accessor for CustomGraphOnThePhoneActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9268;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphOnThePhoneActivityEvent;
      break;
    case 0x16:
      uint64_t v1 = type metadata accessor for CustomGraphFacetimeActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9140;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphFacetimeActivityEvent;
      break;
    case 0x17:
      uint64_t v1 = type metadata accessor for CustomGraphDrivingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9038;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphDrivingActivityEvent;
      break;
    case 0x18:
      uint64_t v1 = type metadata accessor for CustomGraphBehaviorActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9120;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphBehaviorActivityEvent;
      break;
    default:
      uint64_t v1 = type metadata accessor for CustomGraphTransportationActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1EB7D9390;
      char v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphTransportationActivityEvent;
      break;
  }
  sub_1B29AEC34(v2, v3);
  return v1;
}

uint64_t ActivityEventType.hash(into:)()
{
  return sub_1B2E83998();
}

BOOL static ActivityEventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1B29A6D78(uint64_t a1)
{
  unint64_t v2 = sub_1B29AED0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A6DB4(uint64_t a1)
{
  unint64_t v2 = sub_1B29AED0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1B29A6DF0(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1B29A6E00()
{
  return sub_1B2E83998();
}

uint64_t sub_1B29A6E28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F70736E617274 && a2 == 0xEE006E6F69746174;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x676E696B726F77 && a2 == 0xE700000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x676E697465656DLL && a2 == 0xE700000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x676E69746165 && a2 == 0xE600000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x676E696863746177 && a2 == 0xED0000616964654DLL;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x63696E756D6D6F63 && a2 == 0xED0000676E697461;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x676E6970706F6873 && a2 == 0xE800000000000000;
              if (v11 || (sub_1B2E837A8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x6C7566646E696DLL && a2 == 0xE700000000000000;
                if (v12 || (sub_1B2E837A8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  BOOL v13 = a1 == 0x7065656C73 && a2 == 0xE500000000000000;
                  if (v13 || (sub_1B2E837A8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x6C6576617274 && a2 == 0xE600000000000000;
                    if (v14 || (sub_1B2E837A8() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x676E6964616572 && a2 == 0xE700000000000000;
                      if (v15 || (sub_1B2E837A8() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        BOOL v16 = a1 == 0x6E6F697461636176 && a2 == 0xE800000000000000;
                        if (v16 || (sub_1B2E837A8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          BOOL v17 = a1 == 0x6C6169636F73 && a2 == 0xE600000000000000;
                          if (v17 || (sub_1B2E837A8() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else
                          {
                            BOOL v18 = a1 == 0x676E696B6177 && a2 == 0xE600000000000000;
                            if (v18 || (sub_1B2E837A8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 13;
                            }
                            else
                            {
                              BOOL v19 = a1 == 0x426F54676E696F67 && a2 == 0xEA00000000006465;
                              if (v19 || (sub_1B2E837A8() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 14;
                              }
                              else if (a1 == 0xD000000000000016 && a2 == 0x80000001B2E96000 {
                                     || (sub_1B2E837A8() & 1) != 0)
                              }
                              {
                                swift_bridgeObjectRelease();
                                return 15;
                              }
                              else
                              {
                                BOOL v20 = a1 == 0x6574756D6D6F63 && a2 == 0xE700000000000000;
                                if (v20 || (sub_1B2E837A8() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 16;
                                }
                                else
                                {
                                  BOOL v21 = a1 == 0x676E696B6C6177 && a2 == 0xE700000000000000;
                                  if (v21 || (sub_1B2E837A8() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 17;
                                  }
                                  else
                                  {
                                    BOOL v22 = a1 == 0x676E696E6E7572 && a2 == 0xE700000000000000;
                                    if (v22 || (sub_1B2E837A8() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 18;
                                    }
                                    else
                                    {
                                      BOOL v23 = a1 == 0x676E696B6962 && a2 == 0xE600000000000000;
                                      if (v23 || (sub_1B2E837A8() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 19;
                                      }
                                      else
                                      {
                                        BOOL v24 = a1 == 0x676E696B6968 && a2 == 0xE600000000000000;
                                        if (v24 || (sub_1B2E837A8() & 1) != 0)
                                        {
                                          swift_bridgeObjectRelease();
                                          return 20;
                                        }
                                        else
                                        {
                                          BOOL v25 = a1 == 0x6C6143656E6F6870 && a2 == 0xE90000000000006CLL;
                                          if (v25 || (sub_1B2E837A8() & 1) != 0)
                                          {
                                            swift_bridgeObjectRelease();
                                            return 21;
                                          }
                                          else
                                          {
                                            BOOL v26 = a1 == 0x656D697465636166 && a2 == 0xE800000000000000;
                                            if (v26 || (sub_1B2E837A8() & 1) != 0)
                                            {
                                              swift_bridgeObjectRelease();
                                              return 22;
                                            }
                                            else
                                            {
                                              BOOL v27 = a1 == 0x676E6976697264 && a2 == 0xE700000000000000;
                                              if (v27 || (sub_1B2E837A8() & 1) != 0)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 23;
                                              }
                                              else if (a1 == 0x726F697661686562 && a2 == 0xE800000000000000)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 24;
                                              }
                                              else
                                              {
                                                char v29 = sub_1B2E837A8();
                                                swift_bridgeObjectRelease();
                                                if (v29) {
                                                  return 24;
                                                }
                                                else {
                                                  return 25;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B29A77DC()
{
  return 25;
}

uint64_t sub_1B29A77E4()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29A782C()
{
  return 0;
}

uint64_t sub_1B29A7838(char a1)
{
  uint64_t result = 0x726F70736E617274;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1802661751;
      goto LABEL_28;
    case 2:
      unsigned int v3 = 1952802157;
      goto LABEL_28;
    case 3:
      uint64_t v4 = 1769234789;
      return v4 & 0xFFFF0000FFFFFFFFLL | 0x676E00000000;
    case 4:
      uint64_t v5 = 0x696863746177;
      return v5 & 0xFFFFFFFFFFFFLL | 0x676E000000000000;
    case 5:
      return 0x63696E756D6D6F63;
    case 6:
      uint64_t v5 = 0x6970706F6873;
      return v5 & 0xFFFFFFFFFFFFLL | 0x676E000000000000;
    case 7:
      return 0x6C7566646E696DLL;
    case 8:
      return 0x7065656C73;
    case 9:
      return 0x6C6576617274;
    case 10:
      unsigned int v3 = 1684104562;
      goto LABEL_28;
    case 11:
      return 0x6E6F697461636176;
    case 12:
      return 0x6C6169636F73;
    case 13:
      uint64_t v4 = 1768644983;
      return v4 & 0xFFFF0000FFFFFFFFLL | 0x676E00000000;
    case 14:
      return 0x426F54676E696F67;
    case 15:
      return 0xD000000000000016;
    case 16:
      return 0x6574756D6D6F63;
    case 17:
      unsigned int v3 = 1802264951;
      goto LABEL_28;
    case 18:
      unsigned int v3 = 1852732786;
      goto LABEL_28;
    case 19:
      return 0x676E696B6962;
    case 20:
      return 0x676E696B6968;
    case 21:
      return 0x6C6143656E6F6870;
    case 22:
      return 0x656D697465636166;
    case 23:
      unsigned int v3 = 1986622052;
LABEL_28:
      uint64_t result = v3 | 0x676E6900000000;
      break;
    case 24:
      uint64_t result = 0x726F697661686562;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B29A7B00(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEE88();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A7B3C(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEE88();

  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1B29A7B78(char *a1, char *a2)
{
  return sub_1B29A6DF0(*a1, *a2);
}

uint64_t sub_1B29A7B84()
{
  return sub_1B29A77E4();
}

uint64_t sub_1B29A7B8C()
{
  return sub_1B29A6E00();
}

uint64_t sub_1B29A7B98()
{
  return 1;
}

uint64_t _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0()
{
  return 1;
}

uint64_t sub_1B29A7BC0()
{
  return 0;
}

uint64_t sub_1B29A7BCC()
{
  return sub_1B29A7838(*v0);
}

uint64_t sub_1B29A7BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29A6E28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29A7BFC()
{
  return sub_1B29A782C();
}

uint64_t sub_1B29A7C1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29A77DC();
  *a1 = result;
  return result;
}

uint64_t sub_1B29A7C44(uint64_t a1)
{
  unint64_t v2 = sub_1B29AECC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A7C80(uint64_t a1)
{
  unint64_t v2 = sub_1B29AECC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A7CBC(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF2B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A7CF8(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF2B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A7D34(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEF6C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A7D70(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEF6C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A7DAC(uint64_t a1)
{
  unint64_t v2 = sub_1B29AED58();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A7DE8(uint64_t a1)
{
  unint64_t v2 = sub_1B29AED58();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A7E24(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF348();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A7E60(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF348();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A7E9C(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEDA4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A7ED8(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEDA4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A7F14(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF004();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A7F50(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF004();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A7F8C(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEE3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A7FC8(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEE3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A8004(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF394();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A8040(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF394();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A807C(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF218();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A80B8(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF218();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A80F4(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEDF0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A8130(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEDF0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A816C(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF134();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A81A8(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF134();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A81E4(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEED4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A8220(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEED4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A825C(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF264();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A8298(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF264();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A82D4(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF1CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A8310(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF1CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A834C(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF09C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A8388(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF09C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A83C4(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF42C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A8400(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF42C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A843C(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF180();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A8478(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF180();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A84B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29A7B98();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B29A84E0()
{
  return sub_1B29A782C();
}

uint64_t sub_1B29A84FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B29A8528(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEFB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A8564(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEFB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A85A0(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF0E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A85DC(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF0E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A8618(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF050();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A8654(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF050();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A8690(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEF20();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A86CC(uint64_t a1)
{
  unint64_t v2 = sub_1B29AEF20();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A8708(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF2FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A8744(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF2FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29A8780(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF3E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29A87BC(uint64_t a1)
{
  unint64_t v2 = sub_1B29AF3E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ActivityEventType.encode(to:)(void *a1)
{
  unsigned int v3 = v1;
  sub_1B29A3EB4(&qword_1E9C38DC8);
  sub_1B299D278();
  uint64_t v112 = v6;
  uint64_t v113 = v5;
  MEMORY[0x1F4188790](v5);
  sub_1B29B1CCC(v7, v93[0]);
  sub_1B29A3EB4(&qword_1E9C38DD0);
  sub_1B299D278();
  uint64_t v109 = v9;
  uint64_t v110 = v8;
  MEMORY[0x1F4188790](v8);
  sub_1B29B1CB0(v10, v93[0]);
  sub_1B29A3EB4(&qword_1E9C38DD8);
  sub_1B299D278();
  uint64_t v106 = v12;
  uint64_t v107 = v11;
  MEMORY[0x1F4188790](v11);
  sub_1B29B1D04(v13, v93[0]);
  sub_1B29A3EB4(&qword_1E9C38DE0);
  sub_1B299D278();
  uint64_t v103 = v15;
  uint64_t v104 = v14;
  MEMORY[0x1F4188790](v14);
  sub_1B29B1D20(v16, v93[0]);
  sub_1B29A3EB4(&qword_1E9C38DE8);
  sub_1B299D278();
  uint64_t v100 = v18;
  uint64_t v101 = v17;
  MEMORY[0x1F4188790](v17);
  sub_1B29B1CE8(v19, v93[0]);
  sub_1B29A3EB4(&qword_1E9C38DF0);
  sub_1B299D278();
  uint64_t v97 = v21;
  uint64_t v98 = v20;
  MEMORY[0x1F4188790](v20);
  sub_1B29B1A48((uint64_t)v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v96[4] = sub_1B29A3EB4(&qword_1E9C38DF8);
  sub_1B299D278();
  v96[3] = v23;
  MEMORY[0x1F4188790](v24);
  sub_1B29B1A48((uint64_t)v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v96[1] = sub_1B29A3EB4(&qword_1E9C38E00);
  sub_1B299D278();
  v96[0] = v26;
  MEMORY[0x1F4188790](v27);
  sub_1B299B6D0();
  sub_1B29B1A48(v28);
  v95[1] = sub_1B29A3EB4(&qword_1E9C38E08);
  sub_1B299D278();
  v95[0] = v29;
  MEMORY[0x1F4188790](v30);
  sub_1B299B6D0();
  sub_1B29B1A48(v31);
  v94[4] = sub_1B29A3EB4(&qword_1E9C38E10);
  sub_1B299D278();
  v94[3] = v32;
  MEMORY[0x1F4188790](v33);
  sub_1B299B6D0();
  sub_1B29B1A48(v34);
  v94[1] = sub_1B29A3EB4(&qword_1E9C38E18);
  sub_1B299D278();
  v94[0] = v35;
  MEMORY[0x1F4188790](v36);
  sub_1B299B6D0();
  sub_1B29B1A48(v37);
  v93[37] = sub_1B29A3EB4(&qword_1E9C38E20);
  sub_1B299D278();
  v93[36] = v38;
  MEMORY[0x1F4188790](v39);
  sub_1B299B6D0();
  sub_1B29B1A48(v40);
  v93[34] = sub_1B29A3EB4(&qword_1E9C38E28);
  sub_1B299D278();
  v93[33] = v41;
  MEMORY[0x1F4188790](v42);
  sub_1B299B6D0();
  sub_1B29B1A48(v43);
  v93[31] = sub_1B29A3EB4(&qword_1E9C38E30);
  sub_1B299D278();
  v93[30] = v44;
  MEMORY[0x1F4188790](v45);
  sub_1B299B6D0();
  sub_1B29B1A48(v46);
  v93[28] = sub_1B29A3EB4(&qword_1E9C38E38);
  sub_1B299D278();
  v93[27] = v47;
  MEMORY[0x1F4188790](v48);
  sub_1B299B6D0();
  sub_1B29B1A48(v49);
  v93[25] = sub_1B29A3EB4(&qword_1E9C38E40);
  sub_1B299D278();
  v93[24] = v50;
  MEMORY[0x1F4188790](v51);
  sub_1B299B6D0();
  sub_1B29B1A48(v52);
  v93[22] = sub_1B29A3EB4(&qword_1E9C38E48);
  sub_1B299D278();
  v93[21] = v53;
  MEMORY[0x1F4188790](v54);
  sub_1B299B6D0();
  sub_1B29B1A48(v55);
  v93[19] = sub_1B29A3EB4(&qword_1E9C38E50);
  sub_1B299D278();
  v93[18] = v56;
  MEMORY[0x1F4188790](v57);
  sub_1B299B6D0();
  sub_1B29B1A48(v58);
  v93[16] = sub_1B29A3EB4(&qword_1E9C38E58);
  sub_1B299D278();
  v93[15] = v59;
  MEMORY[0x1F4188790](v60);
  sub_1B299B6D0();
  sub_1B29B1A48(v61);
  v93[13] = sub_1B29A3EB4(&qword_1E9C38E60);
  sub_1B299D278();
  v93[12] = v62;
  MEMORY[0x1F4188790](v63);
  sub_1B299B6D0();
  sub_1B29B1A48(v64);
  v93[10] = sub_1B29A3EB4(&qword_1E9C38E68);
  sub_1B299D278();
  v93[9] = v65;
  MEMORY[0x1F4188790](v66);
  sub_1B299B6D0();
  sub_1B29B1A48(v67);
  v93[7] = sub_1B29A3EB4(&qword_1E9C38E70);
  sub_1B299D278();
  v93[6] = v68;
  MEMORY[0x1F4188790](v69);
  sub_1B299B6D0();
  sub_1B29B1A48(v70);
  v93[4] = sub_1B29A3EB4(&qword_1E9C38E78);
  sub_1B299D278();
  v93[3] = v71;
  MEMORY[0x1F4188790](v72);
  sub_1B299B6D0();
  sub_1B29B1A48(v73);
  uint64_t v74 = sub_1B29A3EB4(&qword_1E9C38E80);
  sub_1B299D278();
  v93[1] = v75;
  MEMORY[0x1F4188790](v76);
  sub_1B299F280();
  uint64_t v77 = sub_1B29A3EB4(&qword_1E9C38E88);
  sub_1B299D278();
  v93[0] = v78;
  MEMORY[0x1F4188790](v79);
  sub_1B299B0C8();
  sub_1B29A3EB4(&qword_1E9C38E90);
  sub_1B299D278();
  uint64_t v115 = v80;
  uint64_t v116 = v81;
  MEMORY[0x1F4188790](v80);
  uint64_t v83 = (char *)v93 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = *v3;
  uint64_t v85 = a1[4];
  uint64_t v86 = sub_1B29AEC7C(a1, a1[3]);
  sub_1B29AECC0();
  uint64_t v114 = v83;
  sub_1B2E83A38();
  switch(v84)
  {
    case 1:
      char v118 = 1;
      sub_1B29AF3E0();
      uint64_t v86 = v114;
      uint64_t v85 = v115;
      sub_1B2E83618();
      uint64_t v87 = sub_1B29B1F50();
      uint64_t v89 = v74;
      goto LABEL_29;
    case 2:
      char v118 = 2;
      sub_1B29AF394();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29B1F14();
      goto LABEL_21;
    case 3:
      char v118 = 3;
      sub_1B29AF348();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29A40DC();
      uint64_t v90 = v94;
      goto LABEL_21;
    case 4:
      char v118 = 4;
      sub_1B29AF2FC();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29B1EFC();
      goto LABEL_21;
    case 5:
      char v118 = 5;
      sub_1B29AF2B0();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29A40DC();
      uint64_t v90 = v95;
      goto LABEL_21;
    case 6:
      char v118 = 6;
      sub_1B29AF264();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29A40DC();
      uint64_t v90 = v96;
      goto LABEL_21;
    case 7:
      char v118 = 7;
      sub_1B29AF218();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29B2018();
      goto LABEL_21;
    case 8:
      char v118 = 8;
      sub_1B29AF1CC();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29B1ECC();
      goto LABEL_21;
    case 9:
      char v118 = 9;
      sub_1B29AF180();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29A40DC();
      uint64_t v90 = &v100;
      goto LABEL_21;
    case 10:
      char v118 = 10;
      sub_1B29AF134();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29B1EB4();
      goto LABEL_21;
    case 11:
      char v118 = 11;
      sub_1B29AF0E8();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29A40DC();
      uint64_t v90 = &v106;
      goto LABEL_21;
    case 12:
      char v118 = 12;
      sub_1B29AF09C();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29B1E8C();
      goto LABEL_21;
    case 13:
      char v118 = 13;
      sub_1B29AF050();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29A40DC();
      uint64_t v90 = &v112;
      goto LABEL_21;
    case 14:
      char v118 = 14;
      sub_1B29AF004();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29B1E74();
      goto LABEL_21;
    case 15:
      char v118 = 15;
      sub_1B29AEFB8();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29A40DC();
      uint64_t v90 = (uint64_t *)&v117;
      goto LABEL_21;
    case 16:
      char v118 = 16;
      sub_1B29AEF6C();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29B1E5C();
      goto LABEL_21;
    case 17:
      char v118 = 17;
      sub_1B29AEF20();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29A40DC();
      uint64_t v90 = &v119;
      goto LABEL_21;
    case 18:
      char v118 = 18;
      sub_1B29AEED4();
      sub_1B29A1564();
      uint64_t v87 = sub_1B29A40DC();
      uint64_t v90 = &v120;
LABEL_21:
      uint64_t v89 = *(v90 - 32);
      goto LABEL_29;
    case 19:
      char v118 = 19;
      sub_1B29AEE88();
      sub_1B29A1564();
      uint64_t v91 = v97;
      uint64_t v89 = v98;
      goto LABEL_28;
    case 20:
      char v118 = 20;
      sub_1B29AEE3C();
      uint64_t v84 = v99;
      sub_1B29A03B0();
      uint64_t v91 = v100;
      uint64_t v89 = v101;
      goto LABEL_28;
    case 21:
      char v118 = 21;
      sub_1B29AEDF0();
      uint64_t v84 = v102;
      sub_1B29A03B0();
      uint64_t v91 = v103;
      uint64_t v89 = v104;
      goto LABEL_28;
    case 22:
      char v118 = 22;
      sub_1B29AEDA4();
      uint64_t v84 = v105;
      sub_1B29A03B0();
      uint64_t v91 = v106;
      uint64_t v89 = v107;
      goto LABEL_28;
    case 23:
      char v118 = 23;
      sub_1B29AED58();
      uint64_t v84 = v108;
      sub_1B29A03B0();
      uint64_t v91 = v109;
      uint64_t v89 = v110;
      goto LABEL_28;
    case 24:
      char v118 = 24;
      sub_1B29AED0C();
      uint64_t v84 = v111;
      sub_1B29A03B0();
      uint64_t v91 = v112;
      uint64_t v89 = v113;
LABEL_28:
      v88 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
      uint64_t v87 = v84;
LABEL_29:
      v88(v87, v89);
      break;
    default:
      char v118 = 0;
      sub_1B29AF42C();
      uint64_t v86 = v114;
      uint64_t v85 = v115;
      sub_1B2E83618();
      (*(void (**)(uint64_t, uint64_t))(v93[0] + 8))(v2, v77);
      break;
  }
  return (*(uint64_t (**)(void *, uint64_t))(v116 + 8))(v86, v85);
}

uint64_t ActivityEventType.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t ActivityEventType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v123 = a2;
  v114[1] = sub_1B29A3EB4(&qword_1E9C38F68);
  sub_1B299D278();
  v114[0] = v5;
  MEMORY[0x1F4188790](v6);
  sub_1B29B1CCC(v7, v107[0]);
  v107[5] = sub_1B29A3EB4(&qword_1E9C38F70);
  sub_1B299D278();
  v107[4] = v8;
  MEMORY[0x1F4188790](v9);
  sub_1B299B6D0();
  v121[3] = v10;
  v113[1] = sub_1B29A3EB4(&qword_1E9C38F78);
  sub_1B299D278();
  v113[0] = v11;
  MEMORY[0x1F4188790](v12);
  sub_1B299B6D0();
  v121[2] = v13;
  v112[1] = sub_1B29A3EB4(&qword_1E9C38F80);
  sub_1B299D278();
  v112[0] = v14;
  MEMORY[0x1F4188790](v15);
  sub_1B29B1CB0(v16, v107[0]);
  v111[2] = sub_1B29A3EB4(&qword_1E9C38F88);
  sub_1B299D278();
  v111[1] = v17;
  MEMORY[0x1F4188790](v18);
  sub_1B299B6D0();
  v121[0] = v19;
  v111[0] = sub_1B29A3EB4(&qword_1E9C38F90);
  sub_1B299D278();
  v110[1] = v20;
  MEMORY[0x1F4188790](v21);
  sub_1B299B6D0();
  v120[1] = v22;
  v110[0] = sub_1B29A3EB4(&qword_1E9C38F98);
  sub_1B299D278();
  v109[4] = v23;
  MEMORY[0x1F4188790](v24);
  sub_1B29B1D04(v25, v107[0]);
  v109[3] = sub_1B29A3EB4(&qword_1E9C38FA0);
  sub_1B299D278();
  v109[2] = v26;
  MEMORY[0x1F4188790](v27);
  sub_1B299B6D0();
  v119[3] = v28;
  v109[1] = sub_1B29A3EB4(&qword_1E9C38FA8);
  sub_1B299D278();
  v109[0] = v29;
  MEMORY[0x1F4188790](v30);
  sub_1B299B6D0();
  v119[2] = v31;
  v108[3] = sub_1B29A3EB4(&qword_1E9C38FB0);
  sub_1B299D278();
  v108[2] = v32;
  MEMORY[0x1F4188790](v33);
  sub_1B29B1D20(v34, v107[0]);
  v108[1] = sub_1B29A3EB4(&qword_1E9C38FB8);
  sub_1B299D278();
  v108[0] = v35;
  MEMORY[0x1F4188790](v36);
  sub_1B299B6D0();
  v119[0] = v37;
  v107[32] = sub_1B29A3EB4(&qword_1E9C38FC0);
  sub_1B299D278();
  v107[31] = v38;
  MEMORY[0x1F4188790](v39);
  sub_1B299B6D0();
  v118[1] = v40;
  v107[30] = sub_1B29A3EB4(&qword_1E9C38FC8);
  sub_1B299D278();
  v107[29] = v41;
  MEMORY[0x1F4188790](v42);
  sub_1B29B1CE8(v43, v107[0]);
  v107[28] = sub_1B29A3EB4(&qword_1E9C38FD0);
  sub_1B299D278();
  v107[27] = v44;
  MEMORY[0x1F4188790](v45);
  sub_1B299B6D0();
  uint64_t v117 = v46;
  v107[26] = sub_1B29A3EB4(&qword_1E9C38FD8);
  sub_1B299D278();
  v107[25] = v47;
  MEMORY[0x1F4188790](v48);
  sub_1B299B6D0();
  uint64_t v116 = v49;
  v107[23] = sub_1B29A3EB4(&qword_1E9C38FE0);
  sub_1B299D278();
  v107[24] = v50;
  MEMORY[0x1F4188790](v51);
  sub_1B299B6D0();
  sub_1B29B1A48(v52);
  v107[21] = sub_1B29A3EB4(&qword_1E9C38FE8);
  sub_1B299D278();
  v107[22] = v53;
  MEMORY[0x1F4188790](v54);
  sub_1B299B6D0();
  v124[2] = v55;
  v107[19] = sub_1B29A3EB4(&qword_1E9C38FF0);
  sub_1B299D278();
  v107[20] = v56;
  MEMORY[0x1F4188790](v57);
  sub_1B29B1A48((uint64_t)v107 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v107[15] = sub_1B29A3EB4(&qword_1E9C38FF8);
  sub_1B299D278();
  v107[18] = v59;
  MEMORY[0x1F4188790](v60);
  sub_1B299B6D0();
  sub_1B29B1A48(v61);
  v107[17] = sub_1B29A3EB4(&qword_1E9C39000);
  sub_1B299D278();
  v107[16] = v62;
  MEMORY[0x1F4188790](v63);
  sub_1B299B6D0();
  v124[1] = v64;
  v107[14] = sub_1B29A3EB4(&qword_1E9C39008);
  sub_1B299D278();
  v107[13] = v65;
  MEMORY[0x1F4188790](v66);
  sub_1B299B6D0();
  v124[0] = v67;
  v107[12] = sub_1B29A3EB4(&qword_1E9C39010);
  sub_1B299D278();
  v107[11] = v68;
  MEMORY[0x1F4188790](v69);
  sub_1B29B1A48((uint64_t)v107 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0));
  v107[10] = sub_1B29A3EB4(&qword_1E9C39018);
  sub_1B299D278();
  v107[9] = v71;
  MEMORY[0x1F4188790](v72);
  sub_1B299B6D0();
  sub_1B29B1A48(v73);
  v107[8] = sub_1B29A3EB4(&qword_1E9C39020);
  sub_1B299D278();
  v107[7] = v74;
  MEMORY[0x1F4188790](v75);
  sub_1B299B0C8();
  uint64_t v76 = sub_1B29A3EB4(&qword_1E9C39028);
  sub_1B299D278();
  v107[6] = v77;
  MEMORY[0x1F4188790](v78);
  sub_1B299F280();
  uint64_t v79 = sub_1B29A3EB4(&qword_1E9C39030);
  sub_1B299D278();
  uint64_t v81 = v80;
  MEMORY[0x1F4188790](v82);
  uint64_t v84 = (char *)v107 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = a1[3];
  uint64_t v125 = a1;
  sub_1B29AEC7C(a1, v85);
  sub_1B29AECC0();
  uint64_t v86 = v126;
  sub_1B2E83A18();
  if (v86) {
    goto LABEL_56;
  }
  v107[2] = v2;
  v107[1] = v76;
  v107[3] = v3;
  uint64_t v126 = v81;
  uint64_t v87 = v84;
  uint64_t v88 = sub_1B2E835F8();
  uint64_t v89 = *(void *)(v88 + 16);
  if (!v89
    || (v107[0] = 0,
        uint64_t v90 = *(unsigned __int8 *)(v88 + 32),
        sub_1B29B1430(1, v89, v88, v88 + 32, 0, (2 * v89) | 1),
        uint64_t v92 = v91,
        unint64_t v94 = v93,
        swift_bridgeObjectRelease(),
        v92 != v94 >> 1))
  {
    uint64_t v100 = v79;
    uint64_t v101 = v126;
    uint64_t v102 = sub_1B2E83288();
    swift_allocError();
    uint64_t v104 = v103;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v104 = &type metadata for ActivityEventType;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v102 - 8) + 104))(v104, *MEMORY[0x1E4FBBA70], v102);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v87, v100);
LABEL_56:
    uint64_t v105 = (uint64_t)v125;
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v105);
  }
  uint64_t v95 = v107[0];
  uint64_t v96 = v126;
  switch(v90)
  {
    case 1:
      char v128 = 1;
      sub_1B29AF3E0();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29B1F14();
      goto LABEL_59;
    case 2:
      char v128 = 2;
      sub_1B29AF394();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = v110;
      goto LABEL_59;
    case 3:
      char v128 = 3;
      sub_1B29AF348();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = v111;
      goto LABEL_59;
    case 4:
      char v128 = 4;
      sub_1B29AF2FC();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29B1EFC();
      goto LABEL_59;
    case 5:
      char v128 = 5;
      sub_1B29AF2B0();
      sub_1B2E834E8();
      if (v95) {
        goto LABEL_55;
      }
      uint64_t v97 = sub_1B29B1F50();
      uint64_t v99 = v113;
      goto LABEL_59;
    case 6:
      char v128 = 6;
      sub_1B29AF264();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = v112;
      goto LABEL_59;
    case 7:
      char v128 = 7;
      sub_1B29AF218();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = v114;
      goto LABEL_59;
    case 8:
      char v128 = 8;
      sub_1B29AF1CC();
      sub_1B2E834E8();
      if (v95)
      {
LABEL_55:
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v96 + 8))(v87, v79);
        goto LABEL_56;
      }
      uint64_t v97 = sub_1B29B1F50();
      uint64_t v99 = (uint64_t *)&v115;
LABEL_59:
      v98(v97, *(v99 - 32));
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v87, v79);
      uint64_t v105 = (uint64_t)v125;
      *uint64_t v123 = v90;
      break;
    case 9:
      char v128 = 9;
      sub_1B29AF180();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29B2018();
      goto LABEL_59;
    case 10:
      char v128 = 10;
      sub_1B29AF134();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29B1ECC();
      goto LABEL_59;
    case 11:
      char v128 = 11;
      sub_1B29AF0E8();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = v118;
      goto LABEL_59;
    case 12:
      char v128 = 12;
      sub_1B29AF09C();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = v119;
      goto LABEL_59;
    case 13:
      char v128 = 13;
      sub_1B29AF050();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29B1EB4();
      goto LABEL_59;
    case 14:
      char v128 = 14;
      sub_1B29AF004();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = v120;
      goto LABEL_59;
    case 15:
      char v128 = 15;
      sub_1B29AEFB8();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = v121;
      goto LABEL_59;
    case 16:
      char v128 = 16;
      sub_1B29AEF6C();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29B1E8C();
      goto LABEL_59;
    case 17:
      char v128 = 17;
      sub_1B29AEF20();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = &v122;
      goto LABEL_59;
    case 18:
      char v128 = 18;
      sub_1B29AEED4();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = v124;
      goto LABEL_59;
    case 19:
      char v128 = 19;
      sub_1B29AEE88();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29B1E74();
      goto LABEL_59;
    case 20:
      char v128 = 20;
      sub_1B29AEE3C();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = &v126;
      goto LABEL_59;
    case 21:
      char v128 = 21;
      sub_1B29AEDF0();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = &v127;
      goto LABEL_59;
    case 22:
      char v128 = 22;
      sub_1B29AEDA4();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29B1E5C();
      goto LABEL_59;
    case 23:
      char v128 = 23;
      sub_1B29AED58();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = v109;
      goto LABEL_59;
    case 24:
      char v128 = 24;
      sub_1B29AED0C();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = &v129;
      goto LABEL_59;
    default:
      char v128 = 0;
      sub_1B29AF42C();
      sub_1B29B1A1C();
      uint64_t v97 = sub_1B29A40DC();
      uint64_t v99 = v108;
      goto LABEL_59;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v105);
}

uint64_t sub_1B29AA78C()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AA7D4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ActivityEventType.init(from:)(a1, a2);
}

uint64_t sub_1B29AA7EC(void *a1)
{
  return ActivityEventType.encode(to:)(a1);
}

uint64_t ActivityEventType.lifeEventAllowedGraphObjectType.getter()
{
  switch(*v0)
  {
    case 1:
      uint64_t v1 = type metadata accessor for CustomGraphWorkingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C390F8;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphWorkingActivityEvent;
      break;
    case 2:
      uint64_t v1 = type metadata accessor for CustomGraphMeetingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C390F0;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphMeetingActivityEvent;
      break;
    case 3:
      uint64_t v1 = type metadata accessor for CustomGraphEatingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C390E8;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphEatingActivityEvent;
      break;
    case 4:
      uint64_t v1 = type metadata accessor for CustomGraphWatchingTVActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C390E0;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphWatchingTVActivityEvent;
      break;
    case 5:
      uint64_t v1 = type metadata accessor for CustomGraphCommunicatingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C390D8;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphCommunicatingActivityEvent;
      break;
    case 6:
      uint64_t v1 = type metadata accessor for CustomGraphShoppingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C390D0;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphShoppingActivityEvent;
      break;
    case 7:
      uint64_t v1 = type metadata accessor for CustomGraphMindfulnessActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C390C8;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphMindfulnessActivityEvent;
      break;
    case 8:
      uint64_t v1 = type metadata accessor for CustomGraphSleepingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C390C0;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphSleepingActivityEvent;
      break;
    case 9:
      uint64_t v1 = type metadata accessor for CustomGraphTravelingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C390B8;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphTravelingActivityEvent;
      break;
    case 0xA:
      uint64_t v1 = type metadata accessor for CustomGraphReadingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C390B0;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphReadingActivityEvent;
      break;
    case 0xB:
      uint64_t v1 = type metadata accessor for CustomGraphVacationingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C390A8;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphVacationingActivityEvent;
      break;
    case 0xC:
      uint64_t v1 = type metadata accessor for CustomGraphSocializingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C390A0;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphSocializingActivityEvent;
      break;
    case 0xD:
      uint64_t v1 = type metadata accessor for CustomGraphWakingUpActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39098;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphWakingUpActivityEvent;
      break;
    case 0xE:
      uint64_t v1 = type metadata accessor for CustomGraphGoingToBedActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39090;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphGoingToBedActivityEvent;
      break;
    case 0xF:
      uint64_t v1 = type metadata accessor for CustomGraphExercisingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39088;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphExercisingActivityEvent;
      break;
    case 0x10:
      uint64_t v1 = type metadata accessor for CustomGraphCommuteActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39080;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphCommuteActivityEvent;
      break;
    case 0x11:
      uint64_t v1 = type metadata accessor for CustomGraphWalkingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39078;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphWalkingActivityEvent;
      break;
    case 0x12:
      uint64_t v1 = type metadata accessor for CustomGraphRunningActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39070;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphRunningActivityEvent;
      break;
    case 0x13:
      uint64_t v1 = type metadata accessor for CustomGraphBicyclingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39068;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphBicyclingActivityEvent;
      break;
    case 0x14:
      uint64_t v1 = type metadata accessor for CustomGraphHikingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39060;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphHikingActivityEvent;
      break;
    case 0x15:
      uint64_t v1 = type metadata accessor for CustomGraphOnThePhoneActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39058;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphOnThePhoneActivityEvent;
      break;
    case 0x16:
      uint64_t v1 = type metadata accessor for CustomGraphFacetimeActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39050;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphFacetimeActivityEvent;
      break;
    case 0x17:
      uint64_t v1 = type metadata accessor for CustomGraphDrivingActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39048;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphDrivingActivityEvent;
      break;
    case 0x18:
      uint64_t v1 = type metadata accessor for CustomGraphBehaviorActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39040;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphBehaviorActivityEvent;
      break;
    default:
      uint64_t v1 = type metadata accessor for CustomGraphTransportationActivityEvent(0);
      uint64_t v2 = (unint64_t *)&unk_1E9C39100;
      uint64_t v3 = (void (*)(uint64_t))type metadata accessor for CustomGraphTransportationActivityEvent;
      break;
  }
  sub_1B29AEC34(v2, v3);
  return v1;
}

uint64_t sub_1B29AAE90()
{
  return qword_1B2EBF498[*v0];
}

uint64_t sub_1B29AAEA4(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  }
  else {
    return sub_1B29B1A70();
  }
}

uint64_t sub_1B29AAECC()
{
  sub_1B29B1FD0();
  int v4 = v1;
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v5 = 0x7461636964657270;
    }
    else {
      uint64_t v5 = 0x7463656A626FLL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE900000000000065;
    }
    else {
      unint64_t v6 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE700000000000000;
    uint64_t v5 = 0x7463656A627573;
  }
  if (v2)
  {
    if (v2 == 1) {
      uint64_t v3 = 0x7461636964657270;
    }
    else {
      uint64_t v3 = 0x7463656A626FLL;
    }
    if (v2 == 1) {
      unint64_t v7 = 0xE900000000000065;
    }
    else {
      unint64_t v7 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE700000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v0 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1B29AAFBC(char a1, char a2)
{
  unint64_t v3 = 0x73736572646461;
  if (a1)
  {
    sub_1B29B1AE8();
    if (v5 == 1) {
      unint64_t v8 = v6;
    }
    else {
      unint64_t v8 = 0xD000000000000013;
    }
    if (v5 == 1) {
      unint64_t v9 = v7;
    }
    else {
      unint64_t v9 = (v4 - 32) | 0x8000000000000000;
    }
  }
  else
  {
    unint64_t v9 = 0xE700000000000000;
    unint64_t v8 = 0x73736572646461;
  }
  if (a2)
  {
    sub_1B29B1AE8();
    unint64_t v14 = (v13 - 32) | 0x8000000000000000;
    if (v10 == 1) {
      unint64_t v3 = v11;
    }
    else {
      unint64_t v3 = 0xD000000000000013;
    }
    if (v10 == 1) {
      unint64_t v15 = v12;
    }
    else {
      unint64_t v15 = v14;
    }
  }
  else
  {
    unint64_t v15 = 0xE700000000000000;
  }
  if (v8 == v3 && v9 == v15) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AB098(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  }
  else {
    return sub_1B29B1A70();
  }
}

uint64_t sub_1B29AB0C0(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 1701736302;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = "liveGlobalKnowledgeIndex";
  unint64_t v7 = 1701736302;
  unint64_t v8 = "staticGlobalKnowledgeIndex";
  unint64_t v9 = "stableGraphIndex";
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0x80000001B2E8EB10;
      unint64_t v7 = sub_1B29B1E20();
      break;
    case 2:
      unint64_t v4 = 0xE700000000000000;
      unint64_t v7 = 0x7865646E496F6ELL;
      break;
    case 3:
      uint64_t v10 = 0x47746E657665;
      goto LABEL_8;
    case 4:
      unint64_t v7 = 0x79676F6C6F746E6FLL;
      unint64_t v4 = 0xED00007865646E49;
      break;
    case 5:
      unint64_t v7 = 0x49747865746E6F63;
      unint64_t v4 = 0xEC0000007865646ELL;
      break;
    case 6:
      uint64_t v10 = 0x476C61636F6CLL;
LABEL_8:
      unint64_t v7 = v10 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
      unint64_t v4 = 0xEF7865646E496870;
      break;
    case 7:
      unint64_t v7 = 0xD00000000000001ALL;
      unint64_t v11 = "dex";
      goto LABEL_11;
    case 8:
      unint64_t v7 = 0xD000000000000018;
      unint64_t v11 = "staticGlobalKnowledgeIndex";
LABEL_11:
      unint64_t v4 = (unint64_t)v11 | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v12 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v12 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      sub_1B29B1DE4();
      break;
    case 2:
      unint64_t v12 = 0xE700000000000000;
      uint64_t v3 = 0x7865646E496F6ELL;
      break;
    case 3:
      uint64_t v13 = 0x47746E657665;
      goto LABEL_19;
    case 4:
      uint64_t v3 = 0x79676F6C6F746E6FLL;
      unint64_t v12 = 0xED00007865646E49;
      break;
    case 5:
      uint64_t v3 = 0x49747865746E6F63;
      unint64_t v12 = 0xEC0000007865646ELL;
      break;
    case 6:
      uint64_t v13 = 0x476C61636F6CLL;
LABEL_19:
      uint64_t v3 = v13 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
      unint64_t v12 = 0xEF7865646E496870;
      break;
    case 7:
      uint64_t v3 = 0xD00000000000001ALL;
      unint64_t v14 = v8 - 32;
      goto LABEL_22;
    case 8:
      uint64_t v3 = 0xD000000000000018;
      unint64_t v14 = v6 - 32;
LABEL_22:
      unint64_t v12 = (unint64_t)v14 | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v7 == v3 && v4 == v12) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AB36C()
{
  sub_1B2E82378();
  sub_1B29B1F60();
  if (v1 == sub_1B2E82378() && v0 == v2) {
    sub_1B29B1A3C();
  }
  else {
    LOBYTE(v1) = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1B29AB3E0(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x656475746974616CLL;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = "verticalAccuracy";
  unint64_t v7 = 0x656475746974616CLL;
  unint64_t v8 = "horizontalAccuracy";
  switch(v5)
  {
    case 1:
      sub_1B29B1D9C();
      break;
    case 2:
      unint64_t v7 = 0x6564757469746C61;
      break;
    case 3:
      unint64_t v7 = 0xD000000000000012;
      unint64_t v4 = 0x80000001B2E8EDF0;
      break;
    case 4:
      unint64_t v4 = 0x80000001B2E8EE10;
      unint64_t v7 = sub_1B29B1E20();
      break;
    case 5:
      unint64_t v4 = 0xE500000000000000;
      unint64_t v7 = 0x6465657073;
      break;
    case 6:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v7 = 0x657372756F63;
      break;
    case 7:
      unint64_t v7 = 0x6D617473656D6974;
      unint64_t v4 = 0xE900000000000070;
      break;
    default:
      break;
  }
  unint64_t v9 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      sub_1B29B1D90();
      break;
    case 2:
      v3 += 2805;
      break;
    case 3:
      unint64_t v3 = 0xD000000000000012;
      unint64_t v9 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    case 4:
      unint64_t v9 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      sub_1B29B1DE4();
      break;
    case 5:
      unint64_t v9 = 0xE500000000000000;
      unint64_t v3 = 0x6465657073;
      break;
    case 6:
      unint64_t v9 = 0xE600000000000000;
      unint64_t v3 = 0x657372756F63;
      break;
    case 7:
      unint64_t v3 = 0x6D617473656D6974;
      unint64_t v9 = 0xE900000000000070;
      break;
    default:
      break;
  }
  if (v7 == v3 && v4 == v9) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_1B29AB60C(int a1, int a2)
{
  return a1 == a2;
}

uint64_t sub_1B29AB618(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6472617774756FLL;
  }
  else {
    uint64_t v4 = 0x647261776E69;
  }
  if (v3) {
    unint64_t v5 = 0xE600000000000000;
  }
  else {
    unint64_t v5 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x6472617774756FLL;
  }
  else {
    uint64_t v6 = 0x647261776E69;
  }
  if (a2) {
    unint64_t v7 = 0xE700000000000000;
  }
  else {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AB6A8()
{
  Features.FeatureFlag.feature.getter();
  sub_1B2E83228();
  sub_1B29B1F60();
  Features.FeatureFlag.feature.getter();
  if (v1 == sub_1B2E83228() && v0 == v2) {
    sub_1B29B1A3C();
  }
  else {
    LOBYTE(v1) = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1B29AB738(uint64_t a1, uint64_t a2)
{
  return sub_1B29AD0EC(a1, a2, (void (*)(void))KGQ.Keyword.rawValue.getter);
}

uint64_t sub_1B29AB750(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 1954047348;
  }
  else {
    uint64_t v4 = 0x65676E6172;
  }
  if (v3) {
    unint64_t v5 = 0xE500000000000000;
  }
  else {
    unint64_t v5 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v6 = 1954047348;
  }
  else {
    uint64_t v6 = 0x65676E6172;
  }
  if (a2) {
    unint64_t v7 = 0xE400000000000000;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AB7D8(uint64_t a1, uint64_t a2)
{
  return sub_1B29AD0EC(a1, a2, (void (*)(void))PersonalKnowledgeToolResultAttributeSemanticType.rawValue.getter);
}

uint64_t sub_1B29AB7F0(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x676E69727473;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x676E69727473;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x72656765746E69;
      break;
    case 2:
      uint64_t v6 = 0x656C62756F64;
      break;
    case 3:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = sub_1B29B1AA4();
      break;
    case 4:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1702125924;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x72656765746E69;
      break;
    case 2:
      uint64_t v3 = 0x656C62756F64;
      break;
    case 3:
      unint64_t v7 = 0xE800000000000000;
      sub_1B29B1A90();
      break;
    case 4:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1702125924;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AB954(uint64_t a1, uint64_t a2)
{
  return sub_1B29ADF1C(a1, a2, (void (*)(void))sub_1B2CA6C38);
}

uint64_t sub_1B29AB96C(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x6E6F73726570;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x6E6F73726570;
  switch(v5)
  {
    case 1:
      uint64_t v6 = sub_1B299B384();
      unint64_t v4 = 0xEC00000000000000;
      break;
    case 2:
      uint64_t v6 = 0x49746361746E6F63;
      unint64_t v4 = 0xEB000000006F666ELL;
      break;
    case 3:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x746E657665;
      break;
    case 4:
      uint64_t v6 = 0x69746E6565726373;
      unint64_t v4 = 0xEA0000000000656DLL;
      break;
    case 5:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = sub_1B29A4BEC();
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      sub_1B29B1D3C();
      unint64_t v7 = 0xEC00000000000000;
      break;
    case 2:
      uint64_t v3 = 0x49746361746E6F63;
      unint64_t v7 = 0xEB000000006F666ELL;
      break;
    case 3:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v3 = 0x746E657665;
      break;
    case 4:
      uint64_t v3 = 0x69746E6565726373;
      unint64_t v7 = 0xEA0000000000656DLL;
      break;
    case 5:
      unint64_t v7 = 0xE800000000000000;
      sub_1B29B1F80();
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29ABB20(char a1)
{
  uint64_t v2 = sub_1B29B1FBC(a1, 0xD000000000000014);
  unint64_t v7 = v6 | 0x8000000000000000;
  unint64_t v9 = v8 | 0x8000000000000000;
  if (v13) {
    unint64_t v10 = v9;
  }
  else {
    unint64_t v10 = v7;
  }
  if (v3) {
    uint64_t v11 = v5;
  }
  else {
    uint64_t v11 = v4;
  }
  if (v3) {
    unint64_t v12 = v7;
  }
  else {
    unint64_t v12 = v9;
  }
  BOOL v13 = v2 == v11 && v10 == v12;
  if (v13) {
    sub_1B29B1A3C();
  }
  else {
    char v1 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1B29ABBAC(uint64_t a1, uint64_t a2)
{
  return sub_1B29ADF1C(a1, a2, (void (*)(void))sub_1B2CDFE84);
}

uint64_t sub_1B29ABBC4()
{
  sub_1B29B1BAC();
  uint64_t v4 = 0x6E6574614C776F6CLL;
  switch(v5)
  {
    case 1:
      uint64_t v4 = sub_1B29B1F2C();
      break;
    case 2:
      uint64_t v4 = sub_1B29B1B8C();
      break;
    case 3:
      sub_1B299AD6C();
      sub_1B29B1E10();
      break;
    default:
      break;
  }
  switch(v2)
  {
    case 1:
      sub_1B29B1DCC();
      break;
    case 2:
      sub_1B29B1B6C();
      break;
    case 3:
      sub_1B29B1E00();
      sub_1B29B1DF0();
      break;
    default:
      break;
  }
  if (v4 == v3 && v0 == 0xEA00000000007963) {
    sub_1B29B1AB8();
  }
  else {
    char v1 = sub_1B29B1A54();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1B29ABCD0(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x656E69736F63;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x616564696C637565;
    }
    else {
      uint64_t v5 = 7630692;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE90000000000006ELL;
    }
    else {
      unint64_t v6 = 0xE300000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE600000000000000;
    uint64_t v5 = 0x656E69736F63;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x616564696C637565;
    }
    else {
      uint64_t v3 = 7630692;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE90000000000006ELL;
    }
    else {
      unint64_t v7 = 0xE300000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29ABDBC()
{
  sub_1B29B1C94();
  uint64_t v4 = 0x6E656B6F54796E61;
  switch(v5)
  {
    case 1:
      unint64_t v0 = 0xE600000000000000;
      uint64_t v4 = sub_1B299AD6C();
      break;
    case 2:
      uint64_t v4 = sub_1B29B1FA8();
      unint64_t v0 = 0xE900000000000073;
      break;
    case 3:
      uint64_t v4 = sub_1B29B1B2C();
      break;
    case 4:
      uint64_t v4 = sub_1B29B202C();
      break;
    case 5:
      uint64_t v4 = sub_1B2999844();
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(v2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      sub_1B29B1E00();
      break;
    case 2:
      sub_1B29B1F94();
      unint64_t v6 = 0xE900000000000073;
      break;
    case 3:
      sub_1B29B1B0C();
      break;
    case 4:
      sub_1B29B1FE4();
      break;
    case 5:
      sub_1B29B1B4C();
      break;
    default:
      break;
  }
  if (v4 == v3 && v0 == v6) {
    sub_1B29B1A3C();
  }
  else {
    char v1 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1B29ABEFC(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x80000001B2E95CB0;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000010;
    }
    else {
      unint64_t v5 = 0x6C65646F6DLL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001B2E95CD0;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
  }
  else
  {
    unint64_t v5 = 0xD000000000000012;
    unint64_t v6 = 0x80000001B2E95CB0;
  }
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v7 = 0xD000000000000010;
    }
    else {
      unint64_t v7 = 0x6C65646F6DLL;
    }
    if (a2 == 1) {
      unint64_t v3 = 0x80000001B2E95CD0;
    }
    else {
      unint64_t v3 = 0xE500000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xD000000000000012;
  }
  if (v5 == v7 && v6 == v3) {
    sub_1B29B1AB8();
  }
  else {
    char v2 = sub_1B29B1A54();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_1B29ABFDC(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_1B29ABFE8(char a1)
{
  uint64_t v2 = sub_1B29B1FBC(a1, 0xD000000000000017);
  unint64_t v7 = v6 | 0x8000000000000000;
  unint64_t v9 = v8 | 0x8000000000000000;
  if (v13) {
    unint64_t v10 = v9;
  }
  else {
    unint64_t v10 = v7;
  }
  if (v3) {
    uint64_t v11 = v5;
  }
  else {
    uint64_t v11 = v4;
  }
  if (v3) {
    unint64_t v12 = v7;
  }
  else {
    unint64_t v12 = v9;
  }
  BOOL v13 = v2 == v11 && v10 == v12;
  if (v13) {
    sub_1B29B1A3C();
  }
  else {
    char v1 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1B29AC078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  }
  else {
    return sub_1B29B1A70();
  }
}

uint64_t sub_1B29AC08C()
{
  sub_1B29B1BAC();
  uint64_t v4 = "structuredSearch";
  unint64_t v5 = 0x6E6574614C776F6CLL;
  unint64_t v6 = 0xEA00000000007963;
  switch(v7)
  {
    case 1:
      unint64_t v5 = sub_1B29B1F2C();
      break;
    case 2:
      unint64_t v5 = sub_1B29B1B8C();
      break;
    case 3:
      sub_1B299AD6C();
      goto LABEL_7;
    case 4:
      unint64_t v5 = sub_1B29B1F6C();
      break;
    case 5:
      unint64_t v6 = 0x80000001B2E8EFA0;
      unint64_t v5 = sub_1B29B1E20();
      break;
    case 6:
LABEL_7:
      sub_1B29B1E10();
      break;
    default:
      break;
  }
  switch(v2)
  {
    case 1:
      sub_1B29B1DCC();
      break;
    case 2:
      sub_1B29B1B6C();
      break;
    case 3:
      sub_1B29B1E00();
      goto LABEL_14;
    case 4:
      sub_1B29B2004();
      break;
    case 5:
      unint64_t v0 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      sub_1B29B1DE4();
      break;
    case 6:
LABEL_14:
      sub_1B29B1DF0();
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v0) {
    sub_1B29B1AB8();
  }
  else {
    char v1 = sub_1B29B1A54();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1B29AC218()
{
  sub_1B29B2040();
  switch(v3)
  {
    case 1:
      sub_1B29B1D9C();
      break;
    case 2:
      unint64_t v0 = 0xEF6C65646F4D6C61;
      break;
    case 3:
      unint64_t v0 = 0x80000001B2E8EF10;
      break;
    case 4:
      sub_1B29B1DF0();
      break;
    case 5:
      unint64_t v0 = 0x80000001B2E8EF30;
      break;
    default:
      break;
  }
  sub_1B29B1FF8();
  switch(v8)
  {
    case 1:
      sub_1B29B1D90();
      break;
    case 2:
      unint64_t v5 = 0x75747865746E6F63;
      unint64_t v1 = 0xEF6C65646F4D6C61;
      break;
    case 3:
      unint64_t v1 = (v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 4:
      sub_1B29B1E10();
      break;
    case 5:
      unint64_t v5 = 0xD000000000000015;
      unint64_t v1 = (v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AC404(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 1953718636;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 1954047342;
    }
    else {
      uint64_t v5 = 0x7473726966;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE400000000000000;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
    uint64_t v5 = 1953718636;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 1954047342;
    }
    else {
      uint64_t v3 = 0x7473726966;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE400000000000000;
    }
    else {
      unint64_t v7 = 0xE500000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AC4D8()
{
  unint64_t v1 = 0xEC0000006449746ELL;
  sub_1B29B1EE4();
  uint64_t v4 = 0x656D67655373746BLL;
  unint64_t v5 = 0xEC0000006449746ELL;
  switch(v6)
  {
    case 1:
      uint64_t v4 = 0x696669746E656469;
      unint64_t v5 = 0xEA00000000007265;
      break;
    case 2:
      sub_1B29B1C58();
      sub_1B29B1D90();
      break;
    case 3:
      unint64_t v5 = 0xE700000000000000;
      uint64_t v4 = sub_1B29B1C44();
      break;
    case 4:
      unint64_t v5 = 0xE800000000000000;
      uint64_t v4 = sub_1B29B1C30();
      break;
    case 5:
      uint64_t v4 = sub_1B299B6E4();
      break;
    case 6:
      unint64_t v5 = 0xE500000000000000;
      uint64_t v4 = sub_1B29B1E4C();
      break;
    case 7:
      unint64_t v5 = 0xE800000000000000;
      uint64_t v4 = sub_1B29B1AA4();
      break;
    case 8:
      unint64_t v5 = 0xE600000000000000;
      uint64_t v4 = sub_1B29B1EA4();
      break;
    case 9:
      uint64_t v4 = sub_1B29B1D74();
      unint64_t v5 = v7 + 20;
      break;
    case 10:
      uint64_t v4 = sub_1B29B1BF4();
      unint64_t v5 = 0xEA00000000007478;
      break;
    case 11:
      unint64_t v5 = 0xE700000000000000;
      uint64_t v4 = sub_1B29B1C08();
      break;
    default:
      break;
  }
  switch(v2)
  {
    case 1:
      uint64_t v3 = 0x696669746E656469;
      unint64_t v1 = 0xEA00000000007265;
      break;
    case 2:
      sub_1B29B1C1C();
      sub_1B29B1D9C();
      break;
    case 3:
      unint64_t v1 = 0xE700000000000000;
      sub_1B29B1BE0();
      break;
    case 4:
      unint64_t v1 = 0xE800000000000000;
      sub_1B29B1BCC();
      break;
    case 5:
      sub_1B299E47C();
      break;
    case 6:
      unint64_t v1 = 0xE500000000000000;
      sub_1B29B1E2C();
      break;
    case 7:
      unint64_t v1 = 0xE800000000000000;
      sub_1B29B1A90();
      break;
    case 8:
      unint64_t v1 = 0xE600000000000000;
      sub_1B29B1E3C();
      break;
    case 9:
      sub_1B29B1D58();
      unint64_t v1 = v8 + 20;
      break;
    case 10:
      sub_1B29B1C6C();
      unint64_t v1 = 0xEA00000000007478;
      break;
    case 11:
      unint64_t v1 = 0xE700000000000000;
      sub_1B29B1C80();
      break;
    default:
      break;
  }
  if (v4 == v3 && v5 == v1) {
    sub_1B29B1AB8();
  }
  else {
    char v0 = sub_1B29B1A54();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1B29AC724()
{
  sub_1B29B2040();
  switch(v3)
  {
    case 2:
      unint64_t v0 = 0xED00007265626D75;
      break;
    case 3:
      unint64_t v0 = 0xE800000000000000;
      break;
    default:
      break;
  }
  sub_1B29B1FF8();
  switch(v6)
  {
    case 1:
      uint64_t v5 = 0x6C61697274;
      break;
    case 2:
      uint64_t v5 = 0x4E74656863746172;
      unint64_t v1 = 0xED00007265626D75;
      break;
    case 3:
      unint64_t v1 = 0xE800000000000000;
      uint64_t v5 = 0x6F666E4972657375;
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AC888(char a1, char a2)
{
  if (a1) {
    unint64_t v3 = 0x80000001B2E8ED90;
  }
  else {
    unint64_t v3 = 0x80000001B2E8ED70;
  }
  if (a2) {
    unint64_t v4 = 0x80000001B2E8ED90;
  }
  else {
    unint64_t v4 = 0x80000001B2E8ED70;
  }
  if (v3 == v4)
  {
    sub_1B29B1A3C();
  }
  else
  {
    sub_1B29B1E20();
    sub_1B29B1DE4();
    char v2 = sub_1B2E837A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AC920(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x7241746E65746E69;
  }
  else {
    uint64_t v4 = 0x79676F6C6F746E6FLL;
  }
  if (v3) {
    unint64_t v5 = 0xE800000000000000;
  }
  else {
    unint64_t v5 = 0xE900000000000067;
  }
  if (a2) {
    uint64_t v6 = 0x7241746E65746E69;
  }
  else {
    uint64_t v6 = 0x79676F6C6F746E6FLL;
  }
  if (a2) {
    unint64_t v7 = 0xE900000000000067;
  }
  else {
    unint64_t v7 = 0xE800000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AC9B8(uint64_t a1, uint64_t a2)
{
  return sub_1B29AD0EC(a1, a2, (void (*)(void))PersonEntityTagType.rawValue.getter);
}

uint64_t sub_1B29AC9D0(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xE900000000000077;
  unint64_t v4 = 0x6B5A7374726F7073;
  int v5 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v6 = 0xD000000000000013;
    }
    else {
      unint64_t v6 = 0x6C6F6F747069;
    }
    if (v5 == 1) {
      unint64_t v7 = 0x80000001B2E95C90;
    }
    else {
      unint64_t v7 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0x6B5A7374726F7073;
    unint64_t v7 = 0xE900000000000077;
  }
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v4 = 0xD000000000000013;
    }
    else {
      unint64_t v4 = 0x6C6F6F747069;
    }
    if (a2 == 1) {
      unint64_t v3 = 0x80000001B2E95C90;
    }
    else {
      unint64_t v3 = 0xE600000000000000;
    }
  }
  if (v6 == v4 && v7 == v3) {
    sub_1B29B1AB8();
  }
  else {
    char v2 = sub_1B29B1A54();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29ACAC8()
{
  sub_1B29B2040();
  switch(v3)
  {
    case 1:
      unint64_t v0 = 0xEB0000000044495FLL;
      break;
    case 2:
      unint64_t v0 = 0xE700000000000000;
      break;
    case 3:
      unint64_t v0 = 0xE600000000000000;
      break;
    case 4:
      unint64_t v0 = 0xE800000000000000;
      break;
    default:
      break;
  }
  sub_1B29B1FF8();
  switch(v6)
  {
    case 1:
      uint64_t v5 = 0x61746164696B6957;
      unint64_t v1 = 0xEB0000000044495FLL;
      break;
    case 2:
      unint64_t v1 = 0xE700000000000000;
      uint64_t v5 = 0x44495F6D616441;
      break;
    case 3:
      unint64_t v1 = 0xE600000000000000;
      uint64_t v5 = 0x44495F434D55;
      break;
    case 4:
      unint64_t v1 = 0xE800000000000000;
      uint64_t v5 = 0x44495F7374617453;
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29ACC64(uint64_t a1, uint64_t a2)
{
  return sub_1B29ADF1C(a1, a2, (void (*)(void))sub_1B2ADFFBC);
}

uint64_t sub_1B29ACC7C(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xEE007372657A696CLL;
  unint64_t v4 = 0x616D726F4E6C6C61;
  uint64_t v5 = a1;
  uint64_t v6 = "condenseWhitespace";
  unint64_t v7 = 0x616D726F4E6C6C61;
  unint64_t v8 = 0xEE007372657A696CLL;
  switch(v5)
  {
    case 1:
      sub_1B29B1D90();
      break;
    case 2:
      unint64_t v7 = 0x6F72706572506F6ELL;
      unint64_t v8 = 0xEF676E6973736563;
      break;
    case 3:
      unint64_t v7 = sub_1B29B1F6C();
      break;
    case 4:
      unint64_t v7 = 0x696C617469706163;
      unint64_t v8 = 0xEA0000000000657ALL;
      break;
    case 5:
      unint64_t v8 = 0xE700000000000000;
      unint64_t v7 = 0x74786554646170;
      break;
    case 6:
      unint64_t v8 = 0x80000001B2E91A10;
      unint64_t v7 = 0xD000000000000012;
      break;
    case 7:
      unint64_t v8 = 0xE700000000000000;
      unint64_t v7 = 0x6E756870726F6DLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      sub_1B29B1D9C();
      break;
    case 2:
      unint64_t v4 = 0x6F72706572506F6ELL;
      unint64_t v3 = 0xEF676E6973736563;
      break;
    case 3:
      sub_1B29B2004();
      break;
    case 4:
      unint64_t v4 = 0x696C617469706163;
      unint64_t v3 = 0xEA0000000000657ALL;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v4 = 0x74786554646170;
      break;
    case 6:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v4 = 0xD000000000000012;
      break;
    case 7:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v4 = 0x6E756870726F6DLL;
      break;
    default:
      break;
  }
  if (v7 == v4 && v8 == v3) {
    sub_1B29B1AB8();
  }
  else {
    char v2 = sub_1B29B1A54();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29ACEF0(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xD000000000000011;
  unint64_t v4 = 0x80000001B2E95DB0;
  uint64_t v5 = a1;
  unint64_t v6 = 0xD000000000000011;
  switch(v5)
  {
    case 1:
      unint64_t v7 = "includesOpenRange";
      goto LABEL_7;
    case 2:
      unint64_t v7 = "includesClosedRange";
      goto LABEL_7;
    case 3:
      unint64_t v6 = 0xD000000000000015;
      unint64_t v8 = "includedInOpenRange";
      goto LABEL_9;
    case 4:
      unint64_t v6 = 0xD000000000000010;
      unint64_t v8 = "includedInClosedRange";
      goto LABEL_9;
    case 5:
      unint64_t v7 = "partialRangeFrom";
LABEL_7:
      unint64_t v4 = (unint64_t)v7 | 0x8000000000000000;
      unint64_t v6 = 0xD000000000000013;
      break;
    case 6:
      unint64_t v6 = 0xD000000000000010;
      unint64_t v8 = "partialRangeThrough";
LABEL_9:
      unint64_t v4 = (unint64_t)v8 | 0x8000000000000000;
      break;
    case 7:
      unint64_t v4 = 0x80000001B2E95E90;
      unint64_t v6 = 0xD000000000000011;
      break;
    default:
      break;
  }
  unint64_t v9 = 0x80000001B2E95DB0;
  switch(a2)
  {
    case 1:
      unint64_t v10 = "includesOpenRange";
      goto LABEL_17;
    case 2:
      unint64_t v10 = "includesClosedRange";
      goto LABEL_17;
    case 3:
      unint64_t v3 = 0xD000000000000015;
      uint64_t v11 = "includedInOpenRange";
      goto LABEL_20;
    case 4:
      unint64_t v3 = 0xD000000000000010;
      uint64_t v11 = "includedInClosedRange";
      goto LABEL_20;
    case 5:
      unint64_t v10 = "partialRangeFrom";
LABEL_17:
      unint64_t v9 = (unint64_t)v10 | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000013;
      break;
    case 6:
      unint64_t v3 = 0xD000000000000010;
      uint64_t v11 = "partialRangeThrough";
      goto LABEL_20;
    case 7:
      uint64_t v11 = "partialRangeUpTo";
LABEL_20:
      unint64_t v9 = (unint64_t)v11 | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v9) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AD0D4(uint64_t a1, uint64_t a2)
{
  return sub_1B29AD0EC(a1, a2, (void (*)(void))UserInterestsType.rawValue.getter);
}

uint64_t sub_1B29AD0EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_1B29B1F60();
  if (v4 == ((uint64_t (*)(void))a3)() && v3 == v6) {
    sub_1B29B1A3C();
  }
  else {
    LOBYTE(v4) = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1B29AD17C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v4 = 0x6974657263736964;
  }
  else {
    unint64_t v4 = 0xD000000000000010;
  }
  if (v3) {
    unint64_t v5 = 0x80000001B2E95D90;
  }
  else {
    unint64_t v5 = 0xED00007972616E6FLL;
  }
  if (a2) {
    unint64_t v6 = 0x6974657263736964;
  }
  else {
    unint64_t v6 = 0xD000000000000010;
  }
  if (a2) {
    unint64_t v7 = 0xED00007972616E6FLL;
  }
  else {
    unint64_t v7 = 0x80000001B2E95D90;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AD220(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x726F746365726964;
  }
  else {
    uint64_t v4 = 1701603686;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE900000000000079;
  }
  if (a2) {
    uint64_t v6 = 0x726F746365726964;
  }
  else {
    uint64_t v6 = 1701603686;
  }
  if (a2) {
    unint64_t v7 = 0xE900000000000079;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AD2B0(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xEB00000000657079;
  uint64_t v4 = 0x745F6C616E676973;
  uint64_t v5 = a1;
  uint64_t v6 = 0x745F6C616E676973;
  unint64_t v7 = 0xEB00000000657079;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x745F797469746E65;
      break;
    case 2:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v6 = 0x7361696C61;
      break;
    case 3:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v6 = 0x44495F444DLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v4 = 0x745F797469746E65;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x7361696C61;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x44495F444DLL;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    sub_1B29B1AB8();
  }
  else {
    char v2 = sub_1B29B1A54();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AD414()
{
  sub_1B29B2040();
  switch(v3)
  {
    case 1:
      sub_1B29B1C58();
      sub_1B29B1D9C();
      break;
    case 2:
      unint64_t v0 = 0xE700000000000000;
      sub_1B29B1C44();
      break;
    case 3:
      unint64_t v0 = 0xE800000000000000;
      sub_1B29B1C30();
      break;
    case 4:
      unint64_t v0 = 0xED00006E6961476ELL;
      break;
    case 5:
      sub_1B29B1E4C();
      break;
    case 6:
      unint64_t v0 = 0xE800000000000000;
      sub_1B29B1AA4();
      break;
    case 7:
      unint64_t v0 = 0xE600000000000000;
      sub_1B29B1EA4();
      break;
    case 8:
      sub_1B29B1D74();
      unint64_t v0 = v4 + 20;
      break;
    case 9:
      sub_1B29B1BF4();
      unint64_t v0 = 0xEA00000000007478;
      break;
    case 10:
      unint64_t v0 = 0xE700000000000000;
      sub_1B29B1C08();
      break;
    default:
      break;
  }
  sub_1B29B1FF8();
  switch(v7)
  {
    case 1:
      sub_1B29B1C1C();
      sub_1B29B1D90();
      break;
    case 2:
      unint64_t v1 = 0xE700000000000000;
      sub_1B29B1BE0();
      break;
    case 3:
      unint64_t v1 = 0xE800000000000000;
      sub_1B29B1BCC();
      break;
    case 4:
      uint64_t v6 = 0x6F69746176656C65;
      unint64_t v1 = 0xED00006E6961476ELL;
      break;
    case 5:
      sub_1B29B1E2C();
      break;
    case 6:
      unint64_t v1 = 0xE800000000000000;
      sub_1B29B1A90();
      break;
    case 7:
      unint64_t v1 = 0xE600000000000000;
      sub_1B29B1E3C();
      break;
    case 8:
      sub_1B29B1D58();
      unint64_t v1 = v8 + 20;
      break;
    case 9:
      sub_1B29B1C6C();
      unint64_t v1 = 0xEA00000000007478;
      break;
    case 10:
      unint64_t v1 = 0xE700000000000000;
      sub_1B29B1C80();
      break;
    default:
      break;
  }
  if (v5 == v6 && v0 == v1) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AD638(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x656C706F6570;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x656C706F6570;
  switch(v5)
  {
    case 1:
      uint64_t v6 = sub_1B29A4BEC();
      unint64_t v4 = 0xE900000000000073;
      break;
    case 2:
      uint64_t v6 = 0x73746E657665;
      break;
    case 3:
      uint64_t v6 = 0x616C6C656373696DLL;
      unint64_t v4 = 0xED000073756F656ELL;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      sub_1B29B1F80();
      unint64_t v7 = 0xE900000000000073;
      break;
    case 2:
      uint64_t v3 = 0x73746E657665;
      break;
    case 3:
      uint64_t v3 = 0x616C6C656373696DLL;
      unint64_t v7 = 0xED000073756F656ELL;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AD794(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x7361696C61;
  }
  else {
    uint64_t v2 = 0x44495F444DLL;
  }
  if (a2) {
    uint64_t v3 = 0x7361696C61;
  }
  else {
    uint64_t v3 = 0x44495F444DLL;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1B2E837A8();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1B29AD80C(char a1, char a2)
{
  unint64_t v4 = 0xD000000000000022;
  unint64_t v5 = 0x80000001B2E8EBD0;
  switch(a1)
  {
    case 1:
      uint64_t v6 = "STANDING_MULTITASK";
      goto LABEL_10;
    case 2:
      unint64_t v4 = 0xD000000000000028;
      unint64_t v7 = "BEHAVIORAL_UNDERSTANDING_ANCHOR";
      goto LABEL_8;
    case 3:
      unint64_t v4 = 0xD000000000000020;
      unint64_t v7 = "STANDING_EXPERIMENTATION";
      goto LABEL_8;
    case 4:
      unint64_t v4 = 0xD00000000000001CLL;
      unint64_t v7 = "TFORM_LIGHTHOUSE";
      goto LABEL_8;
    case 5:
      unint64_t v4 = 0xD00000000000002ELL;
      unint64_t v7 = "INTELLIGENCE_PLATFORM_CONFIG";
      goto LABEL_8;
    case 6:
      unint64_t v4 = 0xD00000000000001DLL;
      unint64_t v7 = "TFORM_GLOBAL_KNOWLEDGE_SERVICE";
LABEL_8:
      unint64_t v5 = (unint64_t)v7 | 0x8000000000000000;
      break;
    case 7:
      uint64_t v6 = "KNOWLEDGE_CONSTRUCTION_PERSON";
LABEL_10:
      unint64_t v5 = (unint64_t)v6 | 0x8000000000000000;
      unint64_t v4 = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t v4 = 0x4E4F435F4452454ELL;
      unint64_t v5 = 0xEB00000000474946;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xD000000000000022;
  unint64_t v9 = 0x80000001B2E8EBD0;
  switch(a2)
  {
    case 1:
      unint64_t v10 = "STANDING_MULTITASK";
      goto LABEL_21;
    case 2:
      unint64_t v8 = 0xD000000000000028;
      uint64_t v11 = "BEHAVIORAL_UNDERSTANDING_ANCHOR";
      goto LABEL_19;
    case 3:
      unint64_t v8 = 0xD000000000000020;
      uint64_t v11 = "STANDING_EXPERIMENTATION";
      goto LABEL_19;
    case 4:
      unint64_t v8 = 0xD00000000000001CLL;
      uint64_t v11 = "TFORM_LIGHTHOUSE";
      goto LABEL_19;
    case 5:
      unint64_t v8 = 0xD00000000000002ELL;
      uint64_t v11 = "INTELLIGENCE_PLATFORM_CONFIG";
      goto LABEL_19;
    case 6:
      unint64_t v8 = 0xD00000000000001DLL;
      uint64_t v11 = "TFORM_GLOBAL_KNOWLEDGE_SERVICE";
LABEL_19:
      unint64_t v9 = (unint64_t)v11 | 0x8000000000000000;
      break;
    case 7:
      unint64_t v10 = "KNOWLEDGE_CONSTRUCTION_PERSON";
LABEL_21:
      unint64_t v9 = (unint64_t)v10 | 0x8000000000000000;
      unint64_t v8 = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t v8 = 0x4E4F435F4452454ELL;
      unint64_t v9 = 0xEB00000000474946;
      break;
    default:
      break;
  }
  if (v4 == v8 && v5 == v9) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29ADA40()
{
  sub_1B29B1FD0();
  unint64_t v3 = 0xE700000000000000;
  uint64_t v5 = v4;
  uint64_t v6 = "relationshipPredicate";
  uint64_t v7 = 0x7463656A627573;
  switch(v5)
  {
    case 1:
      sub_1B29B1D9C();
      break;
    case 2:
      uint64_t v7 = sub_1B299B384();
      unint64_t v3 = 0xEE00644900000000;
      break;
    case 3:
      unint64_t v3 = 0x80000001B2E95640;
      uint64_t v7 = 0xD000000000000015;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v7 = 0x7463656A626FLL;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE700000000000000;
  switch(v1)
  {
    case 1:
      sub_1B29B1D90();
      break;
    case 2:
      sub_1B29B1D3C();
      unint64_t v8 = 0xEE00644900000000;
      break;
    case 3:
      unint64_t v8 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000015;
      break;
    case 4:
      unint64_t v8 = 0xE600000000000000;
      unint64_t v2 = 0x7463656A626FLL;
      break;
    default:
      break;
  }
  if (v7 == v2 && v3 == v8) {
    sub_1B29B1A3C();
  }
  else {
    char v0 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1B29ADBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 == a5 && a2 == a6) {
    return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  }
  else {
    return sub_1B29B1A70();
  }
}

uint64_t sub_1B29ADBDC(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xE900000000000064;
  uint64_t v4 = 0x4974736575716572;
  unint64_t v5 = 0xE900000000000064;
  uint64_t v6 = a1;
  uint64_t v7 = 0x4974736575716572;
  switch(v6)
  {
    case 1:
      uint64_t v7 = sub_1B29B1C58();
      unint64_t v5 = 0xE900000000000065;
      break;
    case 2:
      unint64_t v5 = 0xE700000000000000;
      uint64_t v7 = sub_1B29B1C44();
      break;
    case 3:
      unint64_t v5 = 0xE800000000000000;
      uint64_t v7 = sub_1B29B1C30();
      break;
    case 4:
      uint64_t v7 = sub_1B299B6E4();
      break;
    case 5:
      unint64_t v5 = 0xE500000000000000;
      uint64_t v7 = sub_1B29B1E4C();
      break;
    case 6:
      unint64_t v5 = 0xE800000000000000;
      uint64_t v7 = sub_1B29B1AA4();
      break;
    case 7:
      unint64_t v5 = 0xE600000000000000;
      uint64_t v7 = sub_1B29B1EA4();
      break;
    case 8:
      uint64_t v7 = 0x6177686769487369;
      unint64_t v5 = 0xE900000000000079;
      break;
    case 9:
      uint64_t v7 = sub_1B29B1BF4();
      unint64_t v5 = 0xEA00000000007478;
      break;
    case 10:
      unint64_t v5 = 0xE700000000000000;
      uint64_t v7 = sub_1B29B1C08();
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      sub_1B29B1C1C();
      unint64_t v3 = 0xE900000000000065;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      sub_1B29B1BE0();
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      sub_1B29B1BCC();
      break;
    case 4:
      sub_1B299E47C();
      break;
    case 5:
      unint64_t v3 = 0xE500000000000000;
      sub_1B29B1E2C();
      break;
    case 6:
      unint64_t v3 = 0xE800000000000000;
      sub_1B29B1A90();
      break;
    case 7:
      unint64_t v3 = 0xE600000000000000;
      sub_1B29B1E3C();
      break;
    case 8:
      uint64_t v4 = 0x6177686769487369;
      unint64_t v3 = 0xE900000000000079;
      break;
    case 9:
      sub_1B29B1C6C();
      unint64_t v3 = 0xEA00000000007478;
      break;
    case 10:
      unint64_t v3 = 0xE700000000000000;
      sub_1B29B1C80();
      break;
    default:
      break;
  }
  if (v7 == v4 && v5 == v3) {
    sub_1B29B1AB8();
  }
  else {
    char v2 = sub_1B29B1A54();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29ADE00(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x796C6B656577;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x796C68746E6F6DLL;
    }
    else {
      uint64_t v5 = 0x6C61756E6E61;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE700000000000000;
    }
    else {
      unint64_t v6 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE600000000000000;
    uint64_t v5 = 0x796C6B656577;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x796C68746E6F6DLL;
    }
    else {
      uint64_t v3 = 0x6C61756E6E61;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE700000000000000;
    }
    else {
      unint64_t v7 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29ADEEC(uint64_t a1, uint64_t a2)
{
  return sub_1B29ADF1C(a1, a2, (void (*)(void))sub_1B2A9DD78);
}

uint64_t sub_1B29ADF04(uint64_t a1, uint64_t a2)
{
  return sub_1B29ADF1C(a1, a2, (void (*)(void))sub_1B2A9DC90);
}

uint64_t sub_1B29ADF1C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_1B29B1F60();
  if (v4 == ((uint64_t (*)(uint64_t))a3)(a2) && v3 == v7) {
    sub_1B29B1A3C();
  }
  else {
    LOBYTE(v4) = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1B29ADF9C(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000014;
  unint64_t v4 = 0x80000001B2E95BC0;
  if (a1)
  {
    sub_1B29B1AC4();
    if (v7 == 1) {
      unint64_t v10 = v8;
    }
    else {
      unint64_t v10 = v5;
    }
    if (v7 == 1) {
      unint64_t v11 = v9;
    }
    else {
      unint64_t v11 = (v6 - 32) | 0x8000000000000000;
    }
  }
  else
  {
    unint64_t v10 = 0xD000000000000014;
    unint64_t v11 = 0x80000001B2E95BC0;
  }
  if (a2)
  {
    sub_1B29B1AC4();
    unint64_t v17 = (v16 - 32) | 0x8000000000000000;
    if (v13 == 1) {
      unint64_t v3 = v14;
    }
    else {
      unint64_t v3 = v12;
    }
    if (v13 == 1) {
      unint64_t v4 = v15;
    }
    else {
      unint64_t v4 = v17;
    }
  }
  if (v10 == v3 && v11 == v4) {
    sub_1B29B1AB8();
  }
  else {
    char v2 = sub_1B29B1A54();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B29AE060()
{
  sub_1B29B1C94();
  uint64_t v4 = 0x6E656B6F54796E61;
  switch(v5)
  {
    case 1:
      uint64_t v4 = sub_1B29B1FA8();
      unint64_t v0 = 0xE900000000000073;
      break;
    case 2:
      uint64_t v4 = sub_1B29B1B2C();
      break;
    case 3:
      uint64_t v4 = sub_1B29B202C();
      break;
    case 4:
      uint64_t v4 = sub_1B2999844();
      break;
    case 5:
      uint64_t v4 = 0x6E69727473627573;
      unint64_t v0 = 0xE900000000000067;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(v2)
  {
    case 1:
      sub_1B29B1F94();
      unint64_t v6 = 0xE900000000000073;
      break;
    case 2:
      sub_1B29B1B0C();
      break;
    case 3:
      sub_1B29B1FE4();
      break;
    case 4:
      sub_1B29B1B4C();
      break;
    case 5:
      uint64_t v3 = 0x6E69727473627573;
      unint64_t v6 = 0xE900000000000067;
      break;
    default:
      break;
  }
  if (v4 == v3 && v0 == v6) {
    sub_1B29B1A3C();
  }
  else {
    char v1 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1B29AE1C8(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x73736563637573;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x73736563637573;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = 0x746C757365526F6ELL;
      break;
    case 2:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x726F727265;
      break;
    case 3:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = 0x746E65746E496F6ELL;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v3 = 0x746C757365526F6ELL;
      break;
    case 2:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v3 = 0x726F727265;
      break;
    case 3:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v3 = 0x746E65746E496F6ELL;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_1B29B1A3C();
  }
  else {
    char v2 = sub_1B29A4BD0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_1B29AE32C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1B29AE33C()
{
  unint64_t v1 = 0xEF656C626154746ELL;
  sub_1B29B1EE4();
  uint64_t v5 = "ktsCadenceAnnual";
  unint64_t v6 = 0x656D67655373746BLL;
  unint64_t v7 = 0xEF656C626154746ELL;
  unint64_t v8 = "ktsCadenceMonthly";
  unint64_t v9 = "ktsCadenceWeekly";
  switch(v10)
  {
    case 1:
      unint64_t v11 = "veScore";
      goto LABEL_5;
    case 2:
      unint64_t v6 = v4 + 1;
      unint64_t v7 = 0x80000001B2E95B80;
      break;
    case 3:
      unint64_t v11 = "ktsCadenceMonthly";
LABEL_5:
      unint64_t v7 = (unint64_t)v11 | 0x8000000000000000;
      unint64_t v6 = sub_1B29B1E20();
      break;
    default:
      break;
  }
  switch(v2)
  {
    case 1:
      unint64_t v12 = v9 - 32;
      goto LABEL_10;
    case 2:
      uint64_t v3 = v4 + 1;
      unint64_t v1 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    case 3:
      unint64_t v12 = v5 - 32;
LABEL_10:
      unint64_t v1 = (unint64_t)v12 | 0x8000000000000000;
      sub_1B29B1DE4();
      break;
    default:
      break;
  }
  if (v6 == v3 && v7 == v1) {
    sub_1B29B1AB8();
  }
  else {
    char v0 = sub_1B29B1A54();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1B29AE490(unsigned __int8 a1)
{
  return sub_1B29AEB4C(a1, MEMORY[0x1E4FBC3C0]);
}

uint64_t sub_1B29AE4A8()
{
  return sub_1B29F8C34();
}

uint64_t sub_1B29AE4B4()
{
  return sub_1B29F8EDC();
}

uint64_t sub_1B29AE4C0()
{
  return sub_1B29F92F4();
}

uint64_t sub_1B29AE4CC(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA5530);
}

uint64_t sub_1B29AE4E4(unsigned __int8 a1)
{
  return sub_1B29AEB4C(a1, MEMORY[0x1E4FBC3B8]);
}

uint64_t sub_1B29AE500()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AE554(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA6720);
}

uint64_t sub_1B29AE570(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA665C);
}

uint64_t sub_1B29AE588(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA65A4);
}

uint64_t sub_1B29AE5A0(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA649C);
}

uint64_t sub_1B29AE5B8()
{
  return sub_1B29F998C();
}

uint64_t sub_1B29AE5C4(uint64_t a1)
{
  return sub_1B29AEA18(a1, (void (*)(uint64_t))sub_1B2A23E44);
}

uint64_t sub_1B29AE5DC(uint64_t a1)
{
  return sub_1B29AEA18(a1, (void (*)(uint64_t))sub_1B2A9DC90);
}

uint64_t sub_1B29AE5F4(uint64_t a1)
{
  return sub_1B29AEA18(a1, (void (*)(uint64_t))sub_1B2A9DD78);
}

uint64_t sub_1B29AE60C()
{
  return sub_1B29F9874();
}

uint64_t sub_1B29AE618(uint64_t a1)
{
  return sub_1B29AEA18(a1, (void (*)(uint64_t))sub_1B2D26CF4);
}

uint64_t sub_1B29AE630()
{
  return sub_1B29F97CC();
}

uint64_t sub_1B29AE640(uint64_t a1)
{
  return sub_1B29AEA18(a1, (void (*)(uint64_t))sub_1B2D712B8);
}

uint64_t sub_1B29AE658(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA5F70);
}

uint64_t sub_1B29AE670()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AE6C4()
{
  return sub_1B29F9738();
}

uint64_t sub_1B29AE6D0(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA49C0);
}

uint64_t sub_1B29AE6E8(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA5E58);
}

uint64_t sub_1B29AE700(uint64_t a1)
{
  return sub_1B29AEA18(a1, (void (*)(uint64_t))sub_1B2D260A8);
}

uint64_t sub_1B29AE718()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AE770(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA5C88);
}

uint64_t sub_1B29AE788(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA5B3C);
}

uint64_t sub_1B29AE7A0()
{
  return sub_1B29F9668();
}

uint64_t sub_1B29AE7AC(uint64_t a1)
{
  return sub_1B29AEA18(a1, (void (*)(uint64_t))sub_1B2A897E8);
}

uint64_t sub_1B29AE7C4()
{
  return sub_1B29F95E4();
}

uint64_t sub_1B29AE7D0()
{
  return sub_1B29F9564();
}

uint64_t sub_1B29AE7DC()
{
  return sub_1B29F9500();
}

uint64_t sub_1B29AE7E8(uint64_t a1)
{
  return sub_1B29AEA18(a1, (void (*)(uint64_t))sub_1B2ADFFBC);
}

uint64_t sub_1B29AE800(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA4BC0);
}

uint64_t sub_1B29AE818()
{
  return sub_1B29F943C();
}

uint64_t sub_1B29AE824()
{
  return sub_1B29F9424();
}

uint64_t sub_1B29AE830()
{
  return sub_1B29F93B0();
}

uint64_t sub_1B29AE83C(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA5684);
}

uint64_t sub_1B29AE854(uint64_t a1)
{
  return sub_1B29AEA18(a1, (void (*)(uint64_t))sub_1B2B42E98);
}

uint64_t sub_1B29AE86C(uint64_t a1)
{
  return sub_1B29AEA18(a1, (void (*)(uint64_t))sub_1B2D28EBC);
}

uint64_t sub_1B29AE884()
{
  return sub_1B29F9248();
}

uint64_t sub_1B29AE890()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AE8D4()
{
  return sub_1B29F913C();
}

uint64_t sub_1B29AE8E0()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AE938()
{
  return sub_1B29F9050();
}

uint64_t sub_1B29AE944()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AE984()
{
  return sub_1B29F8F84();
}

uint64_t sub_1B29AE990()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AE9D0(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA5100);
}

uint64_t sub_1B29AE9E8(uint64_t a1)
{
  return sub_1B29AEA18(a1, (void (*)(uint64_t))sub_1B2CDFE84);
}

uint64_t sub_1B29AEA00(uint64_t a1)
{
  return sub_1B29AEA18(a1, (void (*)(uint64_t))sub_1B2CA6C38);
}

uint64_t sub_1B29AEA18(uint64_t a1, void (*a2)(uint64_t))
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AEA68(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA4F60);
}

uint64_t sub_1B29AEA80()
{
  return sub_1B29F8E94();
}

uint64_t sub_1B29AEA8C(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA4E88);
}

uint64_t sub_1B29AEAA4()
{
  return sub_1B29F8E64();
}

uint64_t sub_1B29AEAB0()
{
  return sub_1B29F8E00();
}

uint64_t sub_1B29AEABC()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AEB0C()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AEB4C(unsigned __int8 a1, void (*a2)(void))
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AEB94(uint64_t a1)
{
  return sub_1B29AEBAC(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA4CA0);
}

uint64_t sub_1B29AEBAC(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_1B29B1A78();
  a2(v5, a1);
  return sub_1B2E839E8();
}

uint64_t sub_1B29AEBF4()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29AEC34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1B29AEC7C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1B29AECC0()
{
  unint64_t result = qword_1E9C38E98;
  if (!qword_1E9C38E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38E98);
  }
  return result;
}

unint64_t sub_1B29AED0C()
{
  unint64_t result = qword_1E9C38EA0;
  if (!qword_1E9C38EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38EA0);
  }
  return result;
}

unint64_t sub_1B29AED58()
{
  unint64_t result = qword_1E9C38EA8;
  if (!qword_1E9C38EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38EA8);
  }
  return result;
}

unint64_t sub_1B29AEDA4()
{
  unint64_t result = qword_1E9C38EB0;
  if (!qword_1E9C38EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38EB0);
  }
  return result;
}

unint64_t sub_1B29AEDF0()
{
  unint64_t result = qword_1E9C38EB8;
  if (!qword_1E9C38EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38EB8);
  }
  return result;
}

unint64_t sub_1B29AEE3C()
{
  unint64_t result = qword_1E9C38EC0;
  if (!qword_1E9C38EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38EC0);
  }
  return result;
}

unint64_t sub_1B29AEE88()
{
  unint64_t result = qword_1E9C38EC8;
  if (!qword_1E9C38EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38EC8);
  }
  return result;
}

unint64_t sub_1B29AEED4()
{
  unint64_t result = qword_1E9C38ED0;
  if (!qword_1E9C38ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38ED0);
  }
  return result;
}

unint64_t sub_1B29AEF20()
{
  unint64_t result = qword_1E9C38ED8;
  if (!qword_1E9C38ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38ED8);
  }
  return result;
}

unint64_t sub_1B29AEF6C()
{
  unint64_t result = qword_1E9C38EE0;
  if (!qword_1E9C38EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38EE0);
  }
  return result;
}

unint64_t sub_1B29AEFB8()
{
  unint64_t result = qword_1E9C38EE8;
  if (!qword_1E9C38EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38EE8);
  }
  return result;
}

unint64_t sub_1B29AF004()
{
  unint64_t result = qword_1E9C38EF0;
  if (!qword_1E9C38EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38EF0);
  }
  return result;
}

unint64_t sub_1B29AF050()
{
  unint64_t result = qword_1E9C38EF8;
  if (!qword_1E9C38EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38EF8);
  }
  return result;
}

unint64_t sub_1B29AF09C()
{
  unint64_t result = qword_1E9C38F00;
  if (!qword_1E9C38F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F00);
  }
  return result;
}

unint64_t sub_1B29AF0E8()
{
  unint64_t result = qword_1E9C38F08;
  if (!qword_1E9C38F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F08);
  }
  return result;
}

unint64_t sub_1B29AF134()
{
  unint64_t result = qword_1E9C38F10;
  if (!qword_1E9C38F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F10);
  }
  return result;
}

unint64_t sub_1B29AF180()
{
  unint64_t result = qword_1E9C38F18;
  if (!qword_1E9C38F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F18);
  }
  return result;
}

unint64_t sub_1B29AF1CC()
{
  unint64_t result = qword_1E9C38F20;
  if (!qword_1E9C38F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F20);
  }
  return result;
}

unint64_t sub_1B29AF218()
{
  unint64_t result = qword_1E9C38F28;
  if (!qword_1E9C38F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F28);
  }
  return result;
}

unint64_t sub_1B29AF264()
{
  unint64_t result = qword_1E9C38F30;
  if (!qword_1E9C38F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F30);
  }
  return result;
}

unint64_t sub_1B29AF2B0()
{
  unint64_t result = qword_1E9C38F38;
  if (!qword_1E9C38F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F38);
  }
  return result;
}

unint64_t sub_1B29AF2FC()
{
  unint64_t result = qword_1E9C38F40;
  if (!qword_1E9C38F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F40);
  }
  return result;
}

unint64_t sub_1B29AF348()
{
  unint64_t result = qword_1E9C38F48;
  if (!qword_1E9C38F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F48);
  }
  return result;
}

unint64_t sub_1B29AF394()
{
  unint64_t result = qword_1E9C38F50;
  if (!qword_1E9C38F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F50);
  }
  return result;
}

unint64_t sub_1B29AF3E0()
{
  unint64_t result = qword_1E9C38F58;
  if (!qword_1E9C38F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F58);
  }
  return result;
}

unint64_t sub_1B29AF42C()
{
  unint64_t result = qword_1E9C38F60;
  if (!qword_1E9C38F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38F60);
  }
  return result;
}

uint64_t sub_1B29AF478()
{
  return sub_1B29AF480(*v0);
}

uint64_t sub_1B29AF488(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x1B3EB1340](a1, &v6);
  uint64_t v4 = v6;
  char v5 = v7;
  if (v7) {
    uint64_t v4 = 0;
  }
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1B29AF4E0(uint64_t a1, uint64_t a2)
{
  char v3 = sub_1B2E82B88();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_1B29AF538@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B29AF560();
  *a1 = result;
  return result;
}

uint64_t sub_1B29AF564()
{
  return sub_1B29AF598(*v0, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1B29AF598(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_1B2E82378();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B29AF5D8()
{
  return sub_1B29AF608();
}

uint64_t sub_1B29AF5E0()
{
  return sub_1B2E83998();
}

uint64_t sub_1B29AF608()
{
  sub_1B2E82378();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29AF65C()
{
  return sub_1B29B1534();
}

uint64_t sub_1B29AF664()
{
  return sub_1B29AF598(*v0, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1B29AF694(uint64_t a1, id *a2)
{
  return sub_1B29B1668(a1, a2);
}

uint64_t sub_1B29AF6AC(uint64_t a1, id *a2)
{
  return sub_1B29B15A8(a1, a2) & 1;
}

uint64_t sub_1B29AF6C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B29B16E0();
  *a1 = result;
  return result;
}

uint64_t sub_1B29AF6F0()
{
  return sub_1B29AEBF4();
}

uint64_t sub_1B29AF70C()
{
  return sub_1B29AF5E0();
}

uint64_t sub_1B29AF714(uint64_t a1)
{
  return sub_1B29F8D3C(a1, *v1);
}

void sub_1B29AF71C(uint64_t a1@<X8>)
{
  sub_1B29AF750();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
}

uint64_t sub_1B29AF758()
{
  uint64_t v1 = sub_1B29B1F44();
  uint64_t result = nullsub_1(v1);
  *char v0 = result;
  return result;
}

uint64_t sub_1B29AF780()
{
  return sub_1B29B1628(*v0, MEMORY[0x1E4F27EB8]);
}

BOOL sub_1B29AF7B0(int *a1, int *a2)
{
  return sub_1B29AB60C(*a1, *a2);
}

uint64_t sub_1B29AF7BC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1B29AF7E8@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B29AF81C(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1B29AF81C(uint64_t result)
{
  return result;
}

uint64_t sub_1B29AF83C()
{
  return sub_1B29B1628(*v0, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1B29AF870()
{
  sub_1B29B1F44();
  uint64_t result = sub_1B2D8D444();
  *char v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1B29AF898()
{
  return sub_1B29AB36C();
}

BOOL sub_1B29AF8A4(uint64_t *a1, uint64_t *a2)
{
  return sub_1B29ABFDC(*a1, *a2);
}

uint64_t sub_1B29AF8B0()
{
  return sub_1B29B14AC();
}

void *sub_1B29AF8BC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1B29AF8CC()
{
  return sub_1B2E834C8();
}

uint64_t sub_1B29AF988@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1B2E82348();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1B29AF9D0()
{
  sub_1B29B1F44();
  uint64_t result = sub_1B29DAE6C();
  *char v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1B29AF9F8()
{
  sub_1B29AEC34((unint64_t *)&qword_1EB7E24E8, type metadata accessor for MLModelMetadataKey);
  sub_1B29AEC34((unint64_t *)&unk_1E9C39750, type metadata accessor for MLModelMetadataKey);

  return sub_1B2E834C8();
}

uint64_t sub_1B29AFAB4()
{
  sub_1B29AEC34(&qword_1E9C396B0, type metadata accessor for BMUseCaseIdentifier);
  sub_1B29AEC34(&qword_1E9C396B8, type metadata accessor for BMUseCaseIdentifier);

  return sub_1B2E834C8();
}

uint64_t sub_1B29AFB70()
{
  return sub_1B29AF594(*v0);
}

uint64_t sub_1B29AFB78(uint64_t a1)
{
  return sub_1B29DAE68(a1, *v1);
}

unint64_t sub_1B29AFB84()
{
  unint64_t result = qword_1E9C39108;
  if (!qword_1E9C39108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39108);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventType()
{
  return &type metadata for ActivityEventType;
}

void type metadata accessor for BMUseCaseIdentifier(uint64_t a1)
{
}

void *sub_1B29AFBFC(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for EntityConstructionError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EntityConstructionError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

void type metadata accessor for os_unfair_recursive_lock_s(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for AppleMusicEventEntryRecord(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for EntitySimilarityEngine(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1B29AFCAC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B29AFCCC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for NSFastEnumerationState(uint64_t a1)
{
}

void type metadata accessor for GDEntityResolutionMode(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

void type metadata accessor for BPSDemand(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for GDVUVersion(uint64_t a1)
{
}

void type metadata accessor for BMSiriRemembersInteractionUserDonatorType(uint64_t a1)
{
}

void type metadata accessor for BMDeviceMetadataDevicePlatform(uint64_t a1)
{
}

void type metadata accessor for BMSiriRemembersInteractionInteractionStatus(uint64_t a1)
{
}

void type metadata accessor for BMSiriRemembersInteractionInteractionDirection(uint64_t a1)
{
}

void type metadata accessor for BMSiriRemembersInteractionInteractionSource(uint64_t a1)
{
}

__n128 initializeWithTake for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void type metadata accessor for _GDEntityPredicateRawRecord(uint64_t a1)
{
}

void type metadata accessor for CFError(uint64_t a1)
{
}

uint64_t _s31DefaultResolverInteractionsViewV16TupleInteractionVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s31DefaultResolverInteractionsViewV16TupleInteractionVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for _GDEntityClassRawRecord(uint64_t a1)
{
}

uint64_t _s20IntelligencePlatform17ActivityEventTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE8)
  {
    if (a2 + 24 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 24) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 25;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x19;
  int v5 = v6 - 25;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s20IntelligencePlatform17ActivityEventTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *__n128 result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29AFFD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 24;
        break;
    }
  }
  return result;
}

unsigned char *sub_1B29AFFFC(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventType.CodingKeys()
{
  return &type metadata for ActivityEventType.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.TransportationCodingKeys()
{
  return &type metadata for ActivityEventType.TransportationCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.WorkingCodingKeys()
{
  return &type metadata for ActivityEventType.WorkingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.MeetingCodingKeys()
{
  return &type metadata for ActivityEventType.MeetingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.EatingCodingKeys()
{
  return &type metadata for ActivityEventType.EatingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.WatchingMediaCodingKeys()
{
  return &type metadata for ActivityEventType.WatchingMediaCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.CommunicatingCodingKeys()
{
  return &type metadata for ActivityEventType.CommunicatingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.ShoppingCodingKeys()
{
  return &type metadata for ActivityEventType.ShoppingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.MindfulCodingKeys()
{
  return &type metadata for ActivityEventType.MindfulCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.SleepCodingKeys()
{
  return &type metadata for ActivityEventType.SleepCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.TravelCodingKeys()
{
  return &type metadata for ActivityEventType.TravelCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.ReadingCodingKeys()
{
  return &type metadata for ActivityEventType.ReadingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.VacationCodingKeys()
{
  return &type metadata for ActivityEventType.VacationCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.SocialCodingKeys()
{
  return &type metadata for ActivityEventType.SocialCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.WakingCodingKeys()
{
  return &type metadata for ActivityEventType.WakingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.GoingToBedCodingKeys()
{
  return &type metadata for ActivityEventType.GoingToBedCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.TypeOfPhysicalExerciseCodingKeys()
{
  return &type metadata for ActivityEventType.TypeOfPhysicalExerciseCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.CommuteCodingKeys()
{
  return &type metadata for ActivityEventType.CommuteCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.WalkingCodingKeys()
{
  return &type metadata for ActivityEventType.WalkingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.RunningCodingKeys()
{
  return &type metadata for ActivityEventType.RunningCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.BikingCodingKeys()
{
  return &type metadata for ActivityEventType.BikingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.HikingCodingKeys()
{
  return &type metadata for ActivityEventType.HikingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.PhoneCallCodingKeys()
{
  return &type metadata for ActivityEventType.PhoneCallCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.FacetimeCodingKeys()
{
  return &type metadata for ActivityEventType.FacetimeCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.DrivingCodingKeys()
{
  return &type metadata for ActivityEventType.DrivingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.BehaviorCodingKeys()
{
  return &type metadata for ActivityEventType.BehaviorCodingKeys;
}

unint64_t sub_1B29B01A8()
{
  unint64_t result = qword_1E9C394D0;
  if (!qword_1E9C394D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C394D0);
  }
  return result;
}

uint64_t sub_1B29B01F4()
{
  return sub_1B29AEC34(&qword_1E9C394D8, type metadata accessor for BPSDemand);
}

uint64_t sub_1B29B023C()
{
  return sub_1B29AEC34(&qword_1E9C394E0, type metadata accessor for BPSDemand);
}

uint64_t sub_1B29B0284()
{
  return sub_1B29AEC34(&qword_1E9C394E8, type metadata accessor for BPSDemand);
}

uint64_t sub_1B29B02CC()
{
  return sub_1B29AEC34(&qword_1E9C394F0, type metadata accessor for GDEntityResolutionMode);
}

uint64_t sub_1B29B0314()
{
  return sub_1B29AEC34(&qword_1E9C394F8, type metadata accessor for BMUseCaseIdentifier);
}

uint64_t sub_1B29B035C()
{
  return sub_1B29AEC34(&qword_1E9C39500, type metadata accessor for BMUseCaseIdentifier);
}

uint64_t sub_1B29B03A4()
{
  return sub_1B29AEC34(&qword_1E9C39508, type metadata accessor for BMUseCaseIdentifier);
}

unint64_t sub_1B29B03F0()
{
  unint64_t result = qword_1E9C39510;
  if (!qword_1E9C39510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39510);
  }
  return result;
}

unint64_t sub_1B29B0440()
{
  unint64_t result = qword_1E9C39518;
  if (!qword_1E9C39518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39518);
  }
  return result;
}

unint64_t sub_1B29B0490()
{
  unint64_t result = qword_1E9C39520;
  if (!qword_1E9C39520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39520);
  }
  return result;
}

unint64_t sub_1B29B04E0()
{
  unint64_t result = qword_1E9C39528;
  if (!qword_1E9C39528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39528);
  }
  return result;
}

unint64_t sub_1B29B0530()
{
  unint64_t result = qword_1E9C39530;
  if (!qword_1E9C39530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39530);
  }
  return result;
}

unint64_t sub_1B29B0580()
{
  unint64_t result = qword_1E9C39538;
  if (!qword_1E9C39538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39538);
  }
  return result;
}

unint64_t sub_1B29B05D0()
{
  unint64_t result = qword_1E9C39540;
  if (!qword_1E9C39540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39540);
  }
  return result;
}

unint64_t sub_1B29B0620()
{
  unint64_t result = qword_1E9C39548;
  if (!qword_1E9C39548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39548);
  }
  return result;
}

unint64_t sub_1B29B0670()
{
  unint64_t result = qword_1E9C39550;
  if (!qword_1E9C39550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39550);
  }
  return result;
}

unint64_t sub_1B29B06C0()
{
  unint64_t result = qword_1E9C39558;
  if (!qword_1E9C39558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39558);
  }
  return result;
}

unint64_t sub_1B29B0710()
{
  unint64_t result = qword_1E9C39560;
  if (!qword_1E9C39560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39560);
  }
  return result;
}

unint64_t sub_1B29B0760()
{
  unint64_t result = qword_1E9C39568;
  if (!qword_1E9C39568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39568);
  }
  return result;
}

unint64_t sub_1B29B07B0()
{
  unint64_t result = qword_1E9C39570;
  if (!qword_1E9C39570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39570);
  }
  return result;
}

unint64_t sub_1B29B0800()
{
  unint64_t result = qword_1E9C39578;
  if (!qword_1E9C39578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39578);
  }
  return result;
}

unint64_t sub_1B29B0850()
{
  unint64_t result = qword_1E9C39580;
  if (!qword_1E9C39580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39580);
  }
  return result;
}

unint64_t sub_1B29B08A0()
{
  unint64_t result = qword_1E9C39588;
  if (!qword_1E9C39588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39588);
  }
  return result;
}

unint64_t sub_1B29B08F0()
{
  unint64_t result = qword_1E9C39590;
  if (!qword_1E9C39590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39590);
  }
  return result;
}

unint64_t sub_1B29B0940()
{
  unint64_t result = qword_1E9C39598;
  if (!qword_1E9C39598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39598);
  }
  return result;
}

unint64_t sub_1B29B0990()
{
  unint64_t result = qword_1E9C395A0;
  if (!qword_1E9C395A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C395A0);
  }
  return result;
}

unint64_t sub_1B29B09E0()
{
  unint64_t result = qword_1E9C395A8;
  if (!qword_1E9C395A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C395A8);
  }
  return result;
}

unint64_t sub_1B29B0A30()
{
  unint64_t result = qword_1E9C395B0;
  if (!qword_1E9C395B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C395B0);
  }
  return result;
}

unint64_t sub_1B29B0A80()
{
  unint64_t result = qword_1E9C395B8;
  if (!qword_1E9C395B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C395B8);
  }
  return result;
}

unint64_t sub_1B29B0AD0()
{
  unint64_t result = qword_1E9C395C0;
  if (!qword_1E9C395C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C395C0);
  }
  return result;
}

unint64_t sub_1B29B0B20()
{
  unint64_t result = qword_1E9C395C8;
  if (!qword_1E9C395C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C395C8);
  }
  return result;
}

unint64_t sub_1B29B0B70()
{
  unint64_t result = qword_1E9C395D0;
  if (!qword_1E9C395D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C395D0);
  }
  return result;
}

unint64_t sub_1B29B0BC0()
{
  unint64_t result = qword_1E9C395D8;
  if (!qword_1E9C395D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C395D8);
  }
  return result;
}

unint64_t sub_1B29B0C10()
{
  unint64_t result = qword_1E9C395E0;
  if (!qword_1E9C395E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C395E0);
  }
  return result;
}

unint64_t sub_1B29B0C60()
{
  unint64_t result = qword_1E9C395E8;
  if (!qword_1E9C395E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C395E8);
  }
  return result;
}

unint64_t sub_1B29B0CB0()
{
  unint64_t result = qword_1E9C395F0;
  if (!qword_1E9C395F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C395F0);
  }
  return result;
}

unint64_t sub_1B29B0D00()
{
  unint64_t result = qword_1E9C395F8;
  if (!qword_1E9C395F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C395F8);
  }
  return result;
}

unint64_t sub_1B29B0D50()
{
  unint64_t result = qword_1E9C39600;
  if (!qword_1E9C39600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39600);
  }
  return result;
}

unint64_t sub_1B29B0DA0()
{
  unint64_t result = qword_1E9C39608;
  if (!qword_1E9C39608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39608);
  }
  return result;
}

unint64_t sub_1B29B0DF0()
{
  unint64_t result = qword_1E9C39610;
  if (!qword_1E9C39610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39610);
  }
  return result;
}

unint64_t sub_1B29B0E40()
{
  unint64_t result = qword_1E9C39618;
  if (!qword_1E9C39618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39618);
  }
  return result;
}

unint64_t sub_1B29B0E90()
{
  unint64_t result = qword_1E9C39620;
  if (!qword_1E9C39620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39620);
  }
  return result;
}

unint64_t sub_1B29B0EE0()
{
  unint64_t result = qword_1E9C39628;
  if (!qword_1E9C39628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39628);
  }
  return result;
}

unint64_t sub_1B29B0F30()
{
  unint64_t result = qword_1E9C39630;
  if (!qword_1E9C39630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39630);
  }
  return result;
}

unint64_t sub_1B29B0F80()
{
  unint64_t result = qword_1E9C39638;
  if (!qword_1E9C39638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39638);
  }
  return result;
}

unint64_t sub_1B29B0FD0()
{
  unint64_t result = qword_1E9C39640;
  if (!qword_1E9C39640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39640);
  }
  return result;
}

unint64_t sub_1B29B1020()
{
  unint64_t result = qword_1E9C39648;
  if (!qword_1E9C39648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39648);
  }
  return result;
}

unint64_t sub_1B29B1070()
{
  unint64_t result = qword_1E9C39650;
  if (!qword_1E9C39650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39650);
  }
  return result;
}

unint64_t sub_1B29B10C0()
{
  unint64_t result = qword_1E9C39658;
  if (!qword_1E9C39658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39658);
  }
  return result;
}

unint64_t sub_1B29B1110()
{
  unint64_t result = qword_1E9C39660;
  if (!qword_1E9C39660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39660);
  }
  return result;
}

unint64_t sub_1B29B1160()
{
  unint64_t result = qword_1E9C39668;
  if (!qword_1E9C39668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39668);
  }
  return result;
}

unint64_t sub_1B29B11B0()
{
  unint64_t result = qword_1E9C39670;
  if (!qword_1E9C39670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39670);
  }
  return result;
}

unint64_t sub_1B29B1200()
{
  unint64_t result = qword_1E9C39678;
  if (!qword_1E9C39678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39678);
  }
  return result;
}

unint64_t sub_1B29B1250()
{
  unint64_t result = qword_1E9C39680;
  if (!qword_1E9C39680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39680);
  }
  return result;
}

unint64_t sub_1B29B12A0()
{
  unint64_t result = qword_1E9C39688;
  if (!qword_1E9C39688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39688);
  }
  return result;
}

unint64_t sub_1B29B12F0()
{
  unint64_t result = qword_1E9C39690;
  if (!qword_1E9C39690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39690);
  }
  return result;
}

unint64_t sub_1B29B1340()
{
  unint64_t result = qword_1E9C39698;
  if (!qword_1E9C39698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39698);
  }
  return result;
}

unint64_t sub_1B29B1390()
{
  unint64_t result = qword_1E9C396A0;
  if (!qword_1E9C396A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C396A0);
  }
  return result;
}

unint64_t sub_1B29B13E0()
{
  unint64_t result = qword_1E9C396A8;
  if (!qword_1E9C396A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C396A8);
  }
  return result;
}

uint64_t sub_1B29B1430(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1B29B14AC()
{
  uint64_t v0 = sub_1B2E82378();
  uint64_t v2 = v1;
  if (v0 == sub_1B2E82378() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1B2E837A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1B29B1534()
{
  sub_1B2E82378();
  sub_1B2E83988();
  sub_1B2E82498();
  uint64_t v0 = sub_1B2E839E8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B29B15A8(uint64_t a1, id *a2)
{
  char v3 = sub_1B2E82368();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1B29B1628(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_1B2E82378();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B29B1668(uint64_t a1, id *a2)
{
  uint64_t result = sub_1B2E82358();
  *a2 = 0;
  return result;
}

uint64_t sub_1B29B16E0()
{
  sub_1B2E82378();
  uint64_t v0 = sub_1B2E82348();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1B29B1718()
{
  unint64_t result = qword_1E9C396D0;
  if (!qword_1E9C396D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C396D0);
  }
  return result;
}

void type metadata accessor for GDCandidateConstraint(uint64_t a1)
{
}

void type metadata accessor for GDKTSDataRequestCadence(uint64_t a1)
{
}

void type metadata accessor for GDInclusionType(uint64_t a1)
{
}

void type metadata accessor for GDDistanceBucket(uint64_t a1)
{
}

void type metadata accessor for GDTrafficBucket(uint64_t a1)
{
}

void type metadata accessor for GDSpeedBucket(uint64_t a1)
{
}

void type metadata accessor for GDRelativeFlowSpeedBucket(uint64_t a1)
{
}

void type metadata accessor for GDWeatherType(uint64_t a1)
{
}

void type metadata accessor for GDTerrainType(uint64_t a1)
{
}

void type metadata accessor for GDRoadType(uint64_t a1)
{
}

void type metadata accessor for GDPersonEntityTagType(uint64_t a1)
{
}

void type metadata accessor for MLModelMetadataKey(uint64_t a1)
{
}

void sub_1B29B1854(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1B29B189C()
{
  return sub_1B29AEC34(&qword_1E9C39738, type metadata accessor for MLModelMetadataKey);
}

uint64_t sub_1B29B18E4()
{
  return sub_1B29AEC34(&qword_1E9C39740, type metadata accessor for MLModelMetadataKey);
}

uint64_t sub_1B29B192C()
{
  return sub_1B29AEC34(&qword_1E9C39748, type metadata accessor for GDKTSDataRequestCadence);
}

uint64_t sub_1B29B1974()
{
  return sub_1B29AEC34((unint64_t *)&unk_1EB7E24F0, type metadata accessor for MLModelMetadataKey);
}

uint64_t sub_1B29B19FC()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29B1A1C()
{
  return sub_1B2E834E8();
}

void sub_1B29B1A48(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_1B29B1A54()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29B1A70()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29B1A78()
{
  return sub_1B2E83988();
}

uint64_t sub_1B29B1AA4()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1B29B1B2C()
{
  return 0x69666572506C6C61;
}

uint64_t sub_1B29B1B8C()
{
  return 0x6C61755168676968;
}

uint64_t sub_1B29B1BF4()
{
  return 0x65746E6F4373746BLL;
}

uint64_t sub_1B29B1C08()
{
  return 0x6174614473746BLL;
}

uint64_t sub_1B29B1C30()
{
  return 0x65636E6174736964;
}

uint64_t sub_1B29B1C44()
{
  return 0x656D6954646E65;
}

uint64_t sub_1B29B1C58()
{
  return 0x6D69547472617473;
}

void sub_1B29B1CB0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1B29B1CCC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1B29B1CE8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1B29B1D04(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1B29B1D20(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1B29B1D74()
{
  return 0x6177686769487369;
}

uint64_t sub_1B29B1DA8()
{
  return sub_1B2E82498();
}

unint64_t sub_1B29B1E20()
{
  return 0xD000000000000010;
}

uint64_t sub_1B29B1E4C()
{
  return 0x65726F6373;
}

uint64_t sub_1B29B1E5C()
{
  return v0;
}

uint64_t sub_1B29B1E74()
{
  return v0;
}

uint64_t sub_1B29B1E8C()
{
  return v0;
}

uint64_t sub_1B29B1EA4()
{
  return 0x797469437369;
}

uint64_t sub_1B29B1EB4()
{
  return v0;
}

uint64_t sub_1B29B1ECC()
{
  return v0;
}

uint64_t sub_1B29B1EFC()
{
  return v0;
}

uint64_t sub_1B29B1F14()
{
  return v0;
}

uint64_t sub_1B29B1F2C()
{
  return 0x6465636E616C6162;
}

uint64_t sub_1B29B1F44()
{
  return *(void *)v0;
}

uint64_t sub_1B29B1F50()
{
  return v0;
}

unint64_t sub_1B29B1F6C()
{
  return v0 & 0xFFFFFFFFFFFBLL | 0xD000000000000004;
}

uint64_t sub_1B29B1FA8()
{
  return 0x6E656B6F546C6C61;
}

uint64_t sub_1B29B1FBC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  if (a1) {
    return v2;
  }
  else {
    return a2;
  }
}

uint64_t sub_1B29B2018()
{
  return v0;
}

uint64_t sub_1B29B202C()
{
  return 0x657361726870;
}

uint64_t sub_1B29B204C()
{
  return 6579297;
}

unint64_t sub_1B29B205C()
{
  return 0xD00000000000001DLL;
}

double sub_1B29B2078(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0.0;
  }
  uint64_t v2 = (double *)(a1 + 32);
  double result = 0.0;
  do
  {
    double v4 = *v2++;
    double result = result + v4;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1B29B20A4()
{
  sub_1B29B2124(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Add()
{
  return self;
}

uint64_t sub_1B29B2124(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B29B21C4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  swift_weakInit();
  sub_1B29A3EB4(&qword_1EB7D9CA8);
  *(void *)(v2 + 40) = sub_1B2E82148();
  *(_DWORD *)(v2 + 48) = 0;
  *(unsigned char *)(v2 + 52) = 1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  swift_bridgeObjectRelease();
  swift_weakAssign();
  swift_release();
  *(_DWORD *)(v2 + 48) = 0;
  *(unsigned char *)(v2 + 52) = 1;
  return v2;
}

#error "1B29B22CC: call analysis failed (funcsize=59)"

uint64_t sub_1B29B2368(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1B29DAE70(), (v2 & 1) != 0)) {
    sub_1B29C43F4();
  }
  else {
    sub_1B29C4700();
  }
  return sub_1B2999874();
}

uint64_t sub_1B29B23A8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1B29DAEC8(), (v2 & 1) != 0)) {
    return sub_1B29C472C();
  }
  else {
    return 0;
  }
}

uint64_t sub_1B29B23E4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1B29DAEC8(), (v2 & 1) != 0)) {
    sub_1B29C43F4();
  }
  else {
    sub_1B29C4700();
  }
  return sub_1B2999874();
}

double sub_1B29B2424()
{
  sub_1B29C46D4();
  if (v2 && (uint64_t v3 = sub_1B29DB08C(v1), (v4 & 1) != 0))
  {
    sub_1B29C470C(v3);
  }
  else
  {
    *(void *)(v0 + 32) = 0;
    return sub_1B29C45C8();
  }
  return result;
}

void sub_1B29B2464()
{
  *(double *)&long long v1 = sub_1B29C45E0();
  if (v2)
  {
    sub_1B29DAFFC();
    if (v3)
    {
      sub_1B29C4608();
      uint64_t v5 = *((void *)v4 + 2);
      long long v8 = *(long long *)((char *)v4 + 24);
      long long v9 = *v4;
      uint64_t v6 = *((void *)v4 + 5);
      swift_retain();
      swift_retain();
      long long v7 = v8;
      long long v1 = v9;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      long long v7 = 0uLL;
      long long v1 = 0uLL;
    }
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    long long v7 = 0uLL;
  }
  *(_OWORD *)uint64_t v0 = v1;
  *(void *)(v0 + 16) = v5;
  *(_OWORD *)(v0 + 24) = v7;
  *(void *)(v0 + 40) = v6;
}

#error "1B29B2520: call analysis failed (funcsize=15)"

#error "1B29B2560: call analysis failed (funcsize=16)"

double sub_1B29B2584()
{
  return sub_1B29B2978();
}

uint64_t sub_1B29B259C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1B29DB2EC(a1), (v2 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

#error "1B29B25FC: call analysis failed (funcsize=16)"

#error "1B29B2644: call analysis failed (funcsize=37)"

void sub_1B29B26B4()
{
  sub_1B29C45E0();
  if (v6)
  {
    uint64_t v1 = v5;
    sub_1B29DAFFC();
    if (v7)
    {
      sub_1B29C4608();
      uint64_t v3 = *v8;
      uint64_t v1 = v8[1];
      long long v10 = *((_OWORD *)v8 + 1);
      uint64_t v4 = v8[4];
      uint64_t v2 = v8[5];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      long long v9 = v10;
    }
    else
    {
      sub_1B29C467C();
      long long v9 = 0uLL;
    }
  }
  else
  {
    sub_1B29C467C();
  }
  *(void *)uint64_t v0 = v3;
  *(void *)(v0 + 8) = v1;
  *(_OWORD *)(v0 + 16) = v9;
  *(void *)(v0 + 32) = v4;
  *(void *)(v0 + 40) = v2;
}

#error "1B29B276C: call analysis failed (funcsize=23)"

void sub_1B29B27AC()
{
  *(double *)&long long v2 = sub_1B29C45E0();
  if (v3)
  {
    uint64_t v4 = v1;
    unint64_t v5 = sub_1B29DB3FC();
    if (v6)
    {
      uint64_t v7 = *(void *)(v4 + 56) + 40 * v5;
      uint64_t v8 = *(void *)v7;
      long long v11 = *(_OWORD *)(v7 + 8);
      uint64_t v10 = *(void *)(v7 + 24);
      uint64_t v9 = *(void *)(v7 + 32);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      long long v2 = v11;
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v10 = 0;
      uint64_t v9 = 0;
      long long v2 = 0uLL;
    }
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    uint64_t v9 = 0;
  }
  *(void *)uint64_t v0 = v8;
  *(_OWORD *)(v0 + 8) = v2;
  *(void *)(v0 + 24) = v10;
  *(void *)(v0 + 32) = v9;
}

uint64_t sub_1B29B2858()
{
  sub_1B29C46D4();
  if (v2 && (uint64_t v3 = v1, v4 = sub_1B29DAE70(), (v5 & 1) != 0))
  {
    unint64_t v6 = v4;
    uint64_t v7 = *(void *)(v3 + 56);
    uint64_t v8 = sub_1B29A3EB4(&qword_1E9C3A148);
    sub_1B2999864();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v0, v7 + *(void *)(v9 + 72) * v6, v8);
    uint64_t v10 = v0;
    uint64_t v11 = 0;
    uint64_t v12 = 1;
    uint64_t v13 = v8;
  }
  else
  {
    sub_1B29A3EB4(&qword_1E9C3A148);
    uint64_t v10 = sub_1B29A03F8();
  }

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v10, v11, v12, v13);
}

uint64_t sub_1B29B2910(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (uint64_t v3 = sub_1B29E5378(), (v4 & 1) != 0)) {
    return *(void *)(*(void *)(a2 + 56) + 16 * v3);
  }
  else {
    return 0;
  }
}

double sub_1B29B2960()
{
  return sub_1B29B2978();
}

double sub_1B29B2978()
{
  sub_1B29C46D4();
  if (!v3) {
    return sub_1B29C45C8();
  }
  uint64_t v4 = v1;
  uint64_t v5 = v2();
  if ((v6 & 1) == 0) {
    return sub_1B29C45C8();
  }
  uint64_t v7 = *(void *)(v4 + 56) + 32 * v5;

  sub_1B29C3B28(v7, v0);
  return result;
}

void *sub_1B29B29D8(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_1B29DB578(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v3);
  id v6 = v5;
  return v5;
}

unint64_t sub_1B29B2A20(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    goto LABEL_5;
  }
  unint64_t v4 = sub_1B29DB5BC(a1);
  if ((v5 & 1) == 0)
  {
    uint64_t v2 = 0;
LABEL_5:
    unsigned __int8 v6 = 1;
    return v2 | ((unint64_t)v6 << 32);
  }
  unsigned __int8 v6 = 0;
  uint64_t v2 = *(unsigned int *)(*(void *)(a2 + 56) + 4 * v4);
  return v2 | ((unint64_t)v6 << 32);
}

#error "1B29B2A98: call analysis failed (funcsize=21)"

#error "1B29B2AEC: call analysis failed (funcsize=17)"

uint64_t sub_1B29B2B14(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1B29DAE70(), (v2 & 1) != 0)) {
    return sub_1B29C472C();
  }
  else {
    return 0;
  }
}

uint64_t sub_1B29B2B50(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (unint64_t v3 = sub_1B29DB684(), (v4 & 1) != 0)) {
    return *(void *)(*(void *)(a2 + 56) + 8 * v3);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B29B2B98(uint64_t a1, double a2)
{
  if (*(void *)(a1 + 16) && (sub_1B29DB700(a2), (v2 & 1) != 0)) {
    sub_1B29C43F4();
  }
  else {
    sub_1B29C4700();
  }
  return sub_1B2999874();
}

#error "1B29B2BF4: call analysis failed (funcsize=18)"

uint64_t sub_1B29B2C20(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1B29DB684(), (v2 & 1) != 0)) {
    return sub_1B29C472C();
  }
  else {
    return 0;
  }
}

#error "1B29B2C78: call analysis failed (funcsize=18)"

#error "1B29B2CC4: call analysis failed (funcsize=16)"

void sub_1B29B2CE8()
{
  sub_1B29C46D4();
  if (v3 && (uint64_t v4 = v2, v5 = sub_1B29DB63C(v1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(v4 + 56) + 48 * v5;
    sub_1B29C3BE8(v7, v0);
  }
  else
  {
    *(void *)(v0 + 32) = 0;
    sub_1B29C45C8();
    *(unsigned char *)(v0 + 40) = -1;
  }
}

uint64_t sub_1B29B2D54@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (double result = sub_1B29DB4E8(result, a2), (v6 & 1) != 0))
  {
    double result = sub_1B29C3C44(*(void *)(a3 + 56) + 8 * result, a4);
    char v7 = 0;
  }
  else
  {
    *(void *)a4 = 0;
    char v7 = 1;
  }
  *(unsigned char *)(a4 + 8) = v7;
  return result;
}

#error "1B29B2DCC: call analysis failed (funcsize=43)"

unint64_t sub_1B29B2E58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    goto LABEL_5;
  }
  uint64_t v4 = sub_1B29E5378();
  if ((v5 & 1) == 0)
  {
    uint64_t v2 = 0;
LABEL_5:
    unsigned __int8 v6 = 1;
    return v2 | ((unint64_t)v6 << 32);
  }
  unsigned __int8 v6 = 0;
  uint64_t v2 = *(unsigned int *)(*(void *)(a2 + 56) + 4 * v4);
  return v2 | ((unint64_t)v6 << 32);
}

void *sub_1B29B2EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a4 + 16)) {
    return 0;
  }
  unint64_t v5 = sub_1B29DBA18();
  if ((v6 & 1) == 0) {
    return 0;
  }
  char v7 = *(void **)(*(void *)(a4 + 56) + 8 * v5);
  id v8 = v7;
  return v7;
}

uint64_t sub_1B29B2EFC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  sub_1B2E82F38();
  sub_1B2999864();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B29B2FB4()
{
  sub_1B29B2EFC();
  sub_1B299D2DC();

  return swift_deallocClassInstance();
}

uint64_t sub_1B29B2FEC()
{
  sub_1B29A3EB4(&qword_1EB7D9CA8);
  swift_allocObject();
  sub_1B299F2A4();
  *(void *)(v0 + 16) = sub_1B29B21C4(v1, v2);
  return v0;
}

uint64_t sub_1B29B303C()
{
  sub_1B299B720();
  uint64_t v1 = v0 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(v0 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(v0 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  for (v4 &= v4 - 1; ; uint64_t v4 = (v9 - 1) & v9)
  {
    swift_bridgeObjectRetain();
    sub_1B29B32D8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    if (v8 >= v5) {
      goto LABEL_21;
    }
    uint64_t v9 = *(void *)(v1 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v5) {
        goto LABEL_21;
      }
      uint64_t v9 = *(void *)(v1 + 8 * v7);
      if (!v9)
      {
        int64_t v7 = v8 + 2;
        if (v8 + 2 >= v5) {
          goto LABEL_21;
        }
        uint64_t v9 = *(void *)(v1 + 8 * v7);
        if (!v9) {
          break;
        }
      }
    }
LABEL_18:
    ;
  }
  int64_t v10 = v8 + 3;
  if (v10 < v5)
  {
    uint64_t v9 = *(void *)(v1 + 8 * v10);
    if (!v9)
    {
      while (1)
      {
        int64_t v7 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_25;
        }
        if (v7 >= v5) {
          goto LABEL_21;
        }
        uint64_t v9 = *(void *)(v1 + 8 * v7);
        ++v10;
        if (v9) {
          goto LABEL_18;
        }
      }
    }
    int64_t v7 = v10;
    goto LABEL_18;
  }
LABEL_21:
  sub_1B299B738();
  return swift_release();
}

#error "1B29B323C: call analysis failed (funcsize=77)"

void sub_1B29B32D8()
{
  sub_1B29C46C0();
  if (v4)
  {
    int v5 = v3;
    uint64_t v6 = v2;
    uint64_t v7 = *(void *)(v0 + 16);
    uint64_t v35 = v7;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B29C368C();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      swift_beginAccess();
      unint64_t v11 = 0;
      uint64_t v12 = v9 + 40;
      while (1)
      {
        if (v11 >= *(void *)(v9 + 16))
        {
          __break(1u);
          return;
        }
        sub_1B29C45A4();
        uint64_t v19 = *(void *)(v7 + 40);
        if (*(void *)(v19 + 16))
        {
          sub_1B29DB204(v1, v6, v13, v14, v15, v16, v17, v18, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,
            v39,
            v40,
            v41,
            v42,
            v43,
            v44,
            v45);
          if (v20) {
            break;
          }
        }
        uint64_t v28 = 0;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1B29B2278(v1, v6);
        swift_release();
        uint64_t v19 = *(void *)(v7 + 40);
        if (!*(void *)(v19 + 16)
          || (sub_1B29DB204(v1, v6, v21, v22, v23, v24, v25, v26, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,
                v39,
                v40,
                v41,
                v42,
                v43,
                v44,
                v45),
              (v27 & 1) == 0))
        {
          uint64_t v19 = sub_1B29B3484(&v28, v1, v6);
          swift_bridgeObjectRelease();
          uint64_t v6 = v28;
          swift_release();
          goto LABEL_12;
        }
        sub_1B29C4618();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_13:
        uint64_t v35 = v19;
        uint64_t v7 = v19;
        ++v11;
        v12 += 16;
        if (v10 == v11)
        {
          *(_DWORD *)(v19 + 48) = v5;
          *(unsigned char *)(v19 + 52) = 0;
          goto LABEL_15;
        }
      }
      sub_1B29C4618();
LABEL_12:
      swift_release();
      goto LABEL_13;
    }
LABEL_15:
    swift_release();
    swift_release();
  }
}

uint64_t sub_1B29B3484(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  if (v4)
  {
    uint64_t v5 = v4;
  }
  else
  {
    swift_beginAccess();
    sub_1B29A3EB4(&qword_1EB7D9CA8);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v5 = sub_1B29B21C4(a2, a3);
    swift_beginAccess();
    *a1 = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t DictionaryTrie.deinit()
{
  swift_release();
  return v0;
}

uint64_t DictionaryTrie.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

Swift::OpaquePointer_optional __swiftcall readJsonStringToIntMap(fileName:)(Swift::String fileName)
{
  sub_1B299B720();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v83 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1B29A3EB4(&qword_1EB7E69E0);
  MEMORY[0x1F4188790](v5 - 8);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_1B2E80498();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v70 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v70 - v17;
  if (qword_1EB7E6280 != -1) {
    swift_once();
  }
  id v19 = sub_1B29C340C(v4, v2, 1852797802, 0xE400000000000000, (void *)qword_1EB7E6340);
  if (v19)
  {
    char v20 = v19;
    sub_1B2E80448();

    uint64_t v21 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    v21(v8, v16, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v8, 0, 1, v9);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v8, 1, v9) != 1)
    {
      v21((uint64_t)v18, (char *)v8, v9);
      uint64_t v59 = sub_1B2E804D8();
      unint64_t v61 = v60;
      uint64_t v62 = (void *)MEMORY[0x1B3EB2480]();
      uint64_t v63 = self;
      uint64_t v64 = (void *)sub_1B2E80568();
      id v78 = 0;
      id v65 = objc_msgSend(v63, sel_JSONObjectWithData_options_error_, v64, 0, &v78);

      if (v65)
      {
        id v66 = v78;
        sub_1B2E83058();
        swift_unknownObjectRelease();
        sub_1B29A3EB4(&qword_1EB7D9CB0);
        if ((swift_dynamicCast() & 1) == 0) {
          uint64_t v82 = 0;
        }
        sub_1B299B3A0();
        v67();
        sub_1B29C34DC(v59, v61);
      }
      else
      {
        id v68 = v78;
        uint64_t v69 = (void *)sub_1B2E80388();

        swift_willThrow();
        sub_1B29C34DC(v59, v61);
        if (qword_1EB7D9BE8 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_1B2E81FB8();
        sub_1B29A4B98(v22, (uint64_t)qword_1EB7D8910);
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v18, v9);
        id v23 = v69;
        id v24 = v69;
        uint64_t v25 = sub_1B2E81F98();
        os_log_type_t v26 = sub_1B2E82DB8();
        int v27 = v26;
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v28 = swift_slowAlloc();
          uint64_t v72 = (void *)swift_slowAlloc();
          id v78 = v72;
          *(_DWORD *)uint64_t v28 = 136315394;
          sub_1B29C348C();
          HIDWORD(v71) = v27;
          uint64_t v29 = sub_1B2E83748();
          sub_1B29BF6BC(v29, v30, (uint64_t)&v78, v31, v32, v33, v34, v35, v70, v71, (uint64_t)v72, v73, v74, v75, v76, v77, (uint64_t)v78, v79, v80,
            v81);
          uint64_t v82 = v36;
          sub_1B2E82FB8();
          swift_bridgeObjectRelease();
          uint64_t v37 = *(void (**)(void))(v10 + 8);
          sub_1B299B3A0();
          v37();
          *(_WORD *)(v28 + 12) = 2080;
          swift_getErrorValue();
          uint64_t v38 = sub_1B2E838A8();
          sub_1B29BF6BC(v38, v39, (uint64_t)&v78, v40, v41, v42, v43, v44, v70, v71, (uint64_t)v72, v73, v74, v75, v76, v77, (uint64_t)v78, v79, v80,
            v81);
          uint64_t v82 = v45;
          sub_1B2E82FB8();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1B2996000, v25, BYTE4(v71), "Error: Unable to decode file %s with error %s", (uint8_t *)v28, 0x16u);
          swift_arrayDestroy();
          sub_1B299B750();
          sub_1B299B750();

          sub_1B299B3A0();
          v37();
        }
        else
        {

          uint64_t v56 = *(void (**)(void))(v10 + 8);
          sub_1B299B3A0();
          v56();

          ((void (*)(char *, uint64_t))v56)(v18, v9);
        }
      }
      goto LABEL_17;
    }
  }
  else
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v8, 1, 1, v9);
  }
  sub_1B29C4148(v8, &qword_1EB7E69E0);
  if (qword_1EB7D9BE8 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_1B2E81FB8();
  sub_1B29A4B98(v46, (uint64_t)qword_1EB7D8910);
  swift_bridgeObjectRetain_n();
  uint64_t v47 = sub_1B2E81F98();
  os_log_type_t v48 = sub_1B2E82DB8();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    id v78 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 136315138;
    swift_bridgeObjectRetain();
    sub_1B29BF6BC(v4, v2, (uint64_t)&v78, v50, v51, v52, v53, v54, v70, v71, (uint64_t)v72, v73, v74, v75, v76, v77, (uint64_t)v78, v79, v80,
      v81);
    uint64_t v82 = v55;
    sub_1B2E82FB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B2996000, v47, v48, "Error: Unable to read file %s", v49, 0xCu);
    swift_arrayDestroy();
    sub_1B299B750();
    sub_1B299B750();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_17:
  sub_1B299B738();
  result.value._rawValue = v57;
  result.is_nil = v58;
  return result;
}

uint64_t AddressEmbedder.__allocating_init(modelName:dictionaryPaths:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  AddressEmbedder.init(modelName:dictionaryPaths:)(a1, a2, a3);
  return v6;
}

void *AddressEmbedder.init(modelName:dictionaryPaths:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  sub_1B299D2DC();
  type metadata accessor for InferenceClient();
  swift_allocObject();
  uint64_t v9 = InferenceClient.init()();
  if (v4)
  {
    swift_bridgeObjectRelease();
LABEL_3:
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t v12 = sub_1B29A3EB4(qword_1EB7D9C18);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = 0xD000000000000017;
  v13[5] = 0x80000001B2E96060;
  v13[6] = 0x636E657265666E69;
  v13[7] = 0xEF656E69676E4565;
  v13[11] = type metadata accessor for InferenceServer();
  v13[12] = &off_1F0AC85E0;
  v13[8] = v11;
  sub_1B29A3EB4(&qword_1EB7D9C00);
  uint64_t v14 = (void *)swift_allocObject();
  v14[5] = v12;
  v14[6] = sub_1B29C3534();
  v14[2] = v13;
  v5[2] = v14;
  swift_retain();
  uint64_t v15 = sub_1B29B2544(0x636F765F72616863, 0xEA00000000006261, a3);
  if (v16)
  {
    unint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    unint64_t v17 = 0xE000000000000000;
  }
  unint64_t v18 = v17;
  unint64_t v19 = (unint64_t)readJsonStringToIntMap(fileName:)(*(Swift::String *)&v15);
  swift_bridgeObjectRelease();
  if (v19)
  {
    v5[3] = v19;
    uint64_t v20 = sub_1B29B2544(0x61636F765F657062, 0xE900000000000062, a3);
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    if (v22) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 0;
    }
    if (v22) {
      unint64_t v24 = v22;
    }
    else {
      unint64_t v24 = 0xE000000000000000;
    }
    unint64_t v25 = v24;
    unint64_t v26 = (unint64_t)readJsonStringToIntMap(fileName:)(*(Swift::String *)&v23);
    swift_bridgeObjectRelease();
    if (v26)
    {
      type metadata accessor for DictionaryTrie();
      uint64_t v27 = swift_allocObject();
      sub_1B29B2FEC();
      v5[4] = v27;
      swift_retain();
      sub_1B29B303C();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return v5;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1B29C35D0();
  swift_allocError();
  *uint64_t v28 = 1;
  swift_willThrow();
  swift_release();
  swift_release();
  if (v19) {
    goto LABEL_3;
  }
LABEL_4:
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t sub_1B29B3FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for LocationEmbedderInferenceInterface.Output();
  MEMORY[0x1F4188790](v7 - 8);
  sub_1B299E4A0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_1B29A3EB4(&qword_1E9C3A228);
  MEMORY[0x1F4188790](v11 - 8);
  sub_1B299E4A0();
  uint64_t v14 = v13 - v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29B4148(a1, a2, 0, 1, v14);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_1B29C3D38(v14, v10);
    sub_1B29A3EB4(&qword_1E9C3A230);
    sub_1B2999864();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(a3, v10);
  }
  return result;
}

void sub_1B29B4148(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v6 = v5;
  int v30 = a4;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v26 = a5;
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C3A238);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B29A3EB4((uint64_t *)&unk_1E9C3A240);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v31 = (uint64_t)&v26 - v14;
  uint64_t v15 = sub_1B29A3EB4(&qword_1EB7E2778);
  MEMORY[0x1F4188790](v15 - 8);
  unint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_semaphore_t v18 = dispatch_semaphore_create(0);
  sub_1B29A3EB4(&qword_1E9C3A250);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v19 + *(void *)(*(void *)v19 + 96);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v20, 1, 1, v10);
  uint64_t v21 = sub_1B2E82A08();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v17, 1, 1, v21);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  *(void *)(v22 + 32) = v18;
  *(void *)(v22 + 40) = v6;
  uint64_t v23 = v28;
  *(void *)(v22 + 48) = v27;
  *(void *)(v22 + 56) = v23;
  *(void *)(v22 + 64) = v29;
  *(unsigned char *)(v22 + 72) = v30 & 1;
  *(void *)(v22 + 80) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v24 = v18;
  swift_retain();
  swift_retain();
  sub_1B2C718CC((uint64_t)v17, (uint64_t)&unk_1E9C3A260, v22);
  swift_release();
  sub_1B2E82E88();
  swift_beginAccess();
  sub_1B29C3FC4(v20, (uint64_t)v9, &qword_1E9C3A238);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_1B29C4148((uint64_t)v9, &qword_1E9C3A238);
    sub_1B2E83418();
    __break(1u);
  }
  else
  {
    uint64_t v25 = v31;
    sub_1B29C4020((uint64_t)v9, v31, (uint64_t *)&unk_1E9C3A240);
    sub_1B29C3FC4(v25, (uint64_t)v13, (uint64_t *)&unk_1E9C3A240);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = *v13;
      sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
      swift_willThrowTypedImpl();
      sub_1B29C4148(v25, (uint64_t *)&unk_1E9C3A240);
      swift_release();
    }
    else
    {
      sub_1B29C4020((uint64_t)v13, v26, &qword_1E9C3A228);
      sub_1B29C4148(v25, (uint64_t *)&unk_1E9C3A240);
      swift_release();
    }
  }
}

uint64_t AddressEmbedder.getEmbedding(address:)@<X0>(uint64_t a1@<X8>)
{
  String.wordCharTokens(max_words:max_chars:vocab:)(10, 10, *(void *)(v1 + 24));
  uint64_t v4 = v3;
  String.bpeTokens(max_words:max_tokens:vocab:)(10, 5);
  sub_1B29B3FF4(v4, v5, a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void String.wordCharTokens(max_words:max_chars:vocab:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B29C3640();
  uint64_t v6 = sub_1B2E82FE8();
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = v6;
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1B29C4634();
    sub_1B29B4B98(v8, v9, v10, v7, a2, a3);
  }
}

void String.bpeTokens(max_words:max_tokens:vocab:)(int64_t a1, uint64_t a2)
{
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t v5 = (void *)MEMORY[0x1B3EB2480](v4);
  v46[0] = 12147;
  v46[1] = 0xE200000000000000;
  v45[0] = 32;
  v45[1] = 0xE100000000000000;
  sub_1B29C3640();
  uint64_t v6 = sub_1B2E82FE8();
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v40 = v5;
    int64_t v42 = a1;
    v46[0] = MEMORY[0x1E4FBC860];
    sub_1B29BFD80();
    uint64_t v9 = v46[0];
    uint64_t v10 = v6 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B29B58E0();
      uint64_t v12 = v11;
      uint64_t v14 = v13;
      swift_bridgeObjectRelease();
      v46[0] = v9;
      unint64_t v15 = *(void *)(v9 + 16);
      if (v15 >= *(void *)(v9 + 24) >> 1)
      {
        sub_1B29BFD80();
        uint64_t v9 = v46[0];
      }
      v10 += 16;
      *(void *)(v9 + 16) = v15 + 1;
      uint64_t v16 = v9 + 16 * v15;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = v14;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v17 = v9;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    a1 = v42;
    uint64_t v5 = v40;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  v46[0] = v17;
  swift_bridgeObjectRelease();
  v45[0] = v8;
  if (__OFSUB__(a1, 1))
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (*(void *)(v17 + 16) - 1 >= a1 - 1) {
    uint64_t v18 = a1 - 1;
  }
  else {
    uint64_t v18 = *(void *)(v17 + 16) - 1;
  }
  swift_retain();
  sub_1B29B4E98(0, v18, 1, (uint64_t)v46, (uint64_t)v45, a1, a2);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 + 16);
  BOOL v22 = __OFSUB__(a1, v21);
  uint64_t v23 = a1 - v21;
  uint64_t v41 = v23;
  if ((v23 < 0) ^ v22 | (v23 == 0)) {
    goto LABEL_45;
  }
  if (v23 < 0) {
    goto LABEL_48;
  }
  uint64_t v24 = a2 - 1;
  if (!__OFSUB__(a2, 1))
  {
    uint64_t v25 = 0;
LABEL_16:
    uint64_t v26 = 0;
    char v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = v25 + 1;
    while (1)
    {
      if (v28 >= v24)
      {
        if ((v28 != v24) | v27 & 1)
        {
          uint64_t v43 = v29;
          uint64_t v44 = v20;
          swift_retain();
          sub_1B29C0178();
          uint64_t v30 = v8;
          char v31 = 0;
          uint64_t v32 = 0;
          if (!v26) {
            goto LABEL_37;
          }
          while (1)
          {
            if (v32 >= v24)
            {
              if (v31 & 1 | (v32 != v24))
              {
                __break(1u);
                goto LABEL_47;
              }
              char v31 = 1;
              uint64_t v32 = v24;
            }
            else
            {
              ++v32;
            }
            int v33 = sub_1B29C450C();
            unint64_t v34 = *(void *)(v30 + 16);
            if (v34 >= *(void *)(v30 + 24) >> 1) {
              sub_1B29C0178();
            }
            *(void *)(v30 + 16) = v34 + 1;
            *(_DWORD *)(v30 + 4 * v34 + 32) = v33;
            if (!--v26)
            {
              while (1)
              {
LABEL_37:
                if (v32 >= v24)
                {
                  if ((v32 != v24) | v31 & 1)
                  {
                    swift_release();
                    uint64_t v20 = v44;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      sub_1B29B7938();
                      uint64_t v20 = v38;
                    }
                    uint64_t v8 = MEMORY[0x1E4FBC860];
                    unint64_t v37 = *(void *)(v20 + 16);
                    if (v37 >= *(void *)(v20 + 24) >> 1)
                    {
                      sub_1B29B7938();
                      uint64_t v20 = v39;
                    }
                    *(void *)(v20 + 16) = v37 + 1;
                    *(void *)(v20 + 8 * v37 + 32) = v30;
                    uint64_t v25 = v43;
                    if (v43 == v41)
                    {
LABEL_45:
                      swift_bridgeObjectRelease();
                      return;
                    }
                    goto LABEL_16;
                  }
                  char v31 = 1;
                  uint64_t v32 = v24;
                }
                else
                {
                  ++v32;
                }
                int v35 = sub_1B29C450C();
                unint64_t v36 = *(void *)(v30 + 16);
                if (v36 >= *(void *)(v30 + 24) >> 1) {
                  sub_1B29C0178();
                }
                *(void *)(v30 + 16) = v36 + 1;
                *(_DWORD *)(v30 + 4 * v36 + 32) = v35;
              }
            }
          }
        }
        char v27 = 1;
        uint64_t v28 = v24;
      }
      else
      {
        ++v28;
      }
      BOOL v22 = __OFADD__(v26++, 1);
      if (v22)
      {
        __break(1u);
        goto LABEL_45;
      }
    }
  }
LABEL_49:
  __break(1u);
}

uint64_t AddressEmbedder.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t AddressEmbedder.__deallocating_deinit()
{
  AddressEmbedder.deinit();

  return swift_deallocClassInstance();
}

void String.charTokens(max_chars:vocab:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B29C4634();
    sub_1B29B5194(v7, v8, v9, a3, a4, a2);
  }
}

void sub_1B29B4B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  int64_t v10 = a1;
  uint64_t v11 = sub_1B29C3930(a1, a2, a3);
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_1B29C0128();
  if (v11 < 0) {
    goto LABEL_50;
  }
  uint64_t v12 = v35;
  if (!v11)
  {
    char v27 = 0;
    unint64_t v26 = 0;
    BOOL v31 = 0;
    goto LABEL_24;
  }
  char v27 = 0;
  unint64_t v26 = 0;
  BOOL v31 = 0;
  while (1)
  {
    BOOL v13 = v10 <= a2;
    if (a3 > 0) {
      BOOL v13 = v10 >= a2;
    }
    if (v13) {
      break;
    }
    BOOL v15 = !__OFADD__(v10, a3);
    BOOL v31 = v15;
    unint64_t v16 = 0x8000000000000000;
    if (!__OFADD__(v10, a3)) {
      unint64_t v16 = 0;
    }
    unint64_t v26 = v16;
    int64_t v14 = v10;
    if (__OFADD__(v10, a3)) {
      int64_t v10 = ((v10 + a3) >> 63) ^ 0x8000000000000000;
    }
    else {
      v10 += a3;
    }
LABEL_18:
    int64_t v32 = v14;
    char v33 = 0;
    sub_1B29B56F0(&v34, &v32, a4, a5, a6);
    if (v7)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    uint64_t v7 = 0;
    uint64_t v17 = v34;
    uint64_t v35 = v12;
    unint64_t v18 = *(void *)(v12 + 16);
    if (v18 >= *(void *)(v12 + 24) >> 1)
    {
      sub_1B29C0128();
      uint64_t v12 = v35;
    }
    *(void *)(v12 + 16) = v18 + 1;
    *(void *)(v12 + 8 * v18 + 32) = v17;
    if (!--v11)
    {
      while (1)
      {
LABEL_24:
        BOOL v19 = v10 <= a2;
        if (a3 > 0) {
          BOOL v19 = v10 >= a2;
        }
        if (!v19) {
          break;
        }
        if ((v10 != a2) | v27 & 1) {
          goto LABEL_47;
        }
        if (v31)
        {
          BOOL v20 = 1;
          char v27 = 1;
          uint64_t v21 = a2;
LABEL_39:
          BOOL v31 = v20;
          goto LABEL_42;
        }
        if (v26 == 0x8000000000000000)
        {
LABEL_47:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        BOOL v31 = 0;
        char v27 = 1;
        uint64_t v21 = a2;
LABEL_42:
        int64_t v32 = v10;
        sub_1B29B56F0(&v34, &v32, a4, a5, a6);
        if (v7) {
          goto LABEL_46;
        }
        uint64_t v7 = 0;
        uint64_t v24 = v34;
        uint64_t v35 = v12;
        unint64_t v25 = *(void *)(v12 + 16);
        if (v25 >= *(void *)(v12 + 24) >> 1)
        {
          sub_1B29C0128();
          uint64_t v12 = v35;
        }
        *(void *)(v12 + 16) = v25 + 1;
        *(void *)(v12 + 8 * v25 + 32) = v24;
        int64_t v10 = v21;
      }
      BOOL v22 = __OFADD__(v10, a3);
      if (v22) {
        uint64_t v21 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        uint64_t v21 = v10 + a3;
      }
      unint64_t v23 = 0x8000000000000000;
      if (!v22) {
        unint64_t v23 = 0;
      }
      unint64_t v26 = v23;
      BOOL v20 = !v22;
      goto LABEL_39;
    }
  }
  if (!(v27 & 1 | (v10 != a2)))
  {
    if (!v31 && v26 == 0x8000000000000000) {
      goto LABEL_49;
    }
    char v27 = 1;
    int64_t v14 = a2;
    int64_t v10 = a2;
    goto LABEL_18;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

void sub_1B29B4E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  int64_t v11 = a1;
  uint64_t v12 = sub_1B29C3930(a1, a2, a3);
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1B29C0128();
  if (v12 < 0) {
    goto LABEL_50;
  }
  uint64_t v13 = v37;
  if (!v12)
  {
    char v28 = 0;
    unint64_t v27 = 0;
    BOOL v33 = 0;
    goto LABEL_24;
  }
  char v28 = 0;
  unint64_t v27 = 0;
  BOOL v33 = 0;
  while (1)
  {
    BOOL v14 = v11 <= a2;
    if (a3 > 0) {
      BOOL v14 = v11 >= a2;
    }
    if (v14) {
      break;
    }
    BOOL v16 = !__OFADD__(v11, a3);
    BOOL v33 = v16;
    unint64_t v17 = 0x8000000000000000;
    if (!__OFADD__(v11, a3)) {
      unint64_t v17 = 0;
    }
    unint64_t v27 = v17;
    unint64_t v15 = v11;
    if (__OFADD__(v11, a3)) {
      int64_t v11 = ((v11 + a3) >> 63) ^ 0x8000000000000000;
    }
    else {
      v11 += a3;
    }
LABEL_18:
    unint64_t v34 = v15;
    char v35 = 0;
    sub_1B29B5A0C(&v34, a4, a5, a6, a7, &v36);
    if (v8)
    {
LABEL_46:
      swift_release();
      swift_release();
      return;
    }
    uint64_t v8 = 0;
    uint64_t v18 = v36;
    uint64_t v37 = v13;
    unint64_t v19 = *(void *)(v13 + 16);
    if (v19 >= *(void *)(v13 + 24) >> 1)
    {
      sub_1B29C0128();
      uint64_t v13 = v37;
    }
    *(void *)(v13 + 16) = v19 + 1;
    *(void *)(v13 + 8 * v19 + 32) = v18;
    if (!--v12)
    {
      while (1)
      {
LABEL_24:
        BOOL v20 = v11 <= a2;
        if (a3 > 0) {
          BOOL v20 = v11 >= a2;
        }
        if (!v20) {
          break;
        }
        if ((v11 != a2) | v28 & 1) {
          goto LABEL_47;
        }
        if (v33)
        {
          BOOL v21 = 1;
          char v28 = 1;
          uint64_t v22 = a2;
LABEL_39:
          BOOL v33 = v21;
          goto LABEL_42;
        }
        if (v27 == 0x8000000000000000)
        {
LABEL_47:
          swift_release();
          return;
        }
        BOOL v33 = 0;
        char v28 = 1;
        uint64_t v22 = a2;
LABEL_42:
        unint64_t v34 = v11;
        sub_1B29B5A0C(&v34, a4, a5, a6, a7, &v36);
        if (v8) {
          goto LABEL_46;
        }
        uint64_t v8 = 0;
        uint64_t v25 = v36;
        uint64_t v37 = v13;
        unint64_t v26 = *(void *)(v13 + 16);
        if (v26 >= *(void *)(v13 + 24) >> 1)
        {
          sub_1B29C0128();
          uint64_t v13 = v37;
        }
        *(void *)(v13 + 16) = v26 + 1;
        *(void *)(v13 + 8 * v26 + 32) = v25;
        int64_t v11 = v22;
      }
      BOOL v23 = __OFADD__(v11, a3);
      if (v23) {
        uint64_t v22 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        uint64_t v22 = v11 + a3;
      }
      unint64_t v24 = 0x8000000000000000;
      if (!v23) {
        unint64_t v24 = 0;
      }
      unint64_t v27 = v24;
      BOOL v21 = !v23;
      goto LABEL_39;
    }
  }
  if (!(v28 & 1 | (v11 != a2)))
  {
    if (!v33 && v27 == 0x8000000000000000) {
      goto LABEL_49;
    }
    char v28 = 1;
    unint64_t v15 = a2;
    int64_t v11 = a2;
    goto LABEL_18;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

void sub_1B29B5194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = a3;
  uint64_t v10 = a1;
  uint64_t v99 = a2;
  uint64_t v11 = sub_1B29C3930(a1, a2, a3);
  uint64_t v102 = MEMORY[0x1E4FBC860];
  sub_1B29C0178();
  if (v11 < 0) {
    goto LABEL_83;
  }
  uint64_t v12 = v102;
  uint64_t v96 = v9;
  uint64_t v97 = a4;
  uint64_t v91 = v6;
  uint64_t v92 = v9 >> 63;
  if (v11)
  {
    HIDWORD(v98) = 0;
    BYTE4(v100) = 0;
    uint64_t v93 = (v9 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v95 = 0;
    uint64_t v13 = v10;
    uint64_t v14 = v99;
    while (1)
    {
      BOOL v15 = v13 <= v14;
      if (v9 > 0) {
        BOOL v15 = v13 >= v14;
      }
      if (v15)
      {
        if (BYTE4(v98) & 1 | (v13 != v14)) {
          goto LABEL_80;
        }
        if ((v100 & 0x100000000) != 0)
        {
          HIDWORD(v98) = 1;
          uint64_t v10 = v14;
          BOOL v16 = 1;
        }
        else
        {
          if (v95 == 0x8000000000000000) {
            goto LABEL_82;
          }
          BOOL v16 = 0;
          HIDWORD(v98) = 1;
          uint64_t v10 = v14;
        }
      }
      else
      {
        BOOL v17 = __OFADD__(v13, v9);
        if (v17) {
          uint64_t v10 = v93;
        }
        else {
          uint64_t v10 = v13 + v9;
        }
        unint64_t v18 = 0x8000000000000000;
        if (!v17) {
          unint64_t v18 = 0;
        }
        uint64_t v95 = v18;
        BOOL v16 = !v17;
      }
      HIDWORD(v100) = v16;
      if (v13 >= sub_1B2E824A8()) {
        break;
      }
      unint64_t v25 = sub_1B2E824E8();
      if ((unint64_t)sub_1B2E824E8() >> 14 < v25 >> 14) {
        goto LABEL_81;
      }
      uint64_t v26 = sub_1B2E82628();
      uint64_t v27 = MEMORY[0x1B3EB0C00](v26);
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();
      if (!*(void *)(a6 + 16)
        || (swift_bridgeObjectRetain(),
            sub_1B29DB060(v27, v29, v30, v31, v32, v33, v34, v35, v90, v91, v92, v93, v95, v96, v97, v98, v99, v100, v101,
              v102,
              v103,
              v104,
              v105,
              v106,
              v107,
              v108),
            char v37 = v36,
            swift_bridgeObjectRelease(),
            (v37 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        if (!*(void *)(a6 + 16)) {
          goto LABEL_35;
        }
        uint64_t v47 = 0x6E776F6E6B6E753CLL;
        uint64_t v48 = 0xE90000000000003ELL;
        goto LABEL_32;
      }
      if (!*(void *)(a6 + 16)
        || (uint64_t v44 = sub_1B29DB060(v27, v29, v38, v39, v40, v41, v42, v43, v90, v91, v92, v93, v95, v96, v97, v98, v99, v100, v101,
                    v102,
                    v103,
                    v104,
                    v105,
                    v106,
                    v107,
                    v108),
            (v45 & 1) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_35:
        int v46 = -1;
        goto LABEL_36;
      }
      int v46 = *(_DWORD *)(*(void *)(a6 + 56) + 4 * v44);
      swift_bridgeObjectRelease();
LABEL_36:
      uint64_t v102 = v12;
      unint64_t v51 = *(void *)(v12 + 16);
      if (v51 >= *(void *)(v12 + 24) >> 1) {
        sub_1B29C0178();
      }
      *(void *)(v12 + 16) = v51 + 1;
      *(_DWORD *)(v12 + 4 * v51 + 32) = v46;
      uint64_t v13 = v10;
      --v11;
      uint64_t v9 = v96;
      uint64_t v14 = v99;
      if (!v11) {
        goto LABEL_41;
      }
    }
    if (!*(void *)(a6 + 16)) {
      goto LABEL_35;
    }
    uint64_t v47 = 0x3E6461703CLL;
    uint64_t v48 = 0xE500000000000000;
LABEL_32:
    uint64_t v49 = sub_1B29DB060(v47, v48, v19, v20, v21, v22, v23, v24, v90, v91, v92, v93, v95, v96, v97, v98, v99, v100, v101,
            v102,
            v103,
            v104,
            v105,
            v106,
            v107,
            v108);
    if ((v50 & 1) == 0) {
      goto LABEL_35;
    }
    int v46 = *(_DWORD *)(*(void *)(a6 + 56) + 4 * v49);
    goto LABEL_36;
  }
  HIDWORD(v98) = 0;
  uint64_t v95 = 0;
  BYTE4(v100) = 0;
  uint64_t v14 = v99;
LABEL_41:
  uint64_t v94 = v92 ^ 0x7FFFFFFFFFFFFFFFLL;
  while (1)
  {
    BOOL v52 = v10 <= v14;
    if (v9 > 0) {
      BOOL v52 = v10 >= v14;
    }
    if (!v52)
    {
      BOOL v55 = __OFADD__(v10, v9);
      if (v55) {
        uint64_t v54 = v94;
      }
      else {
        uint64_t v54 = v10 + v9;
      }
      unint64_t v56 = 0x8000000000000000;
      if (!v55) {
        unint64_t v56 = 0;
      }
      uint64_t v95 = v56;
      BOOL v53 = !v55;
      goto LABEL_57;
    }
    if ((v10 != v14) | BYTE4(v98) & 1) {
      goto LABEL_78;
    }
    if ((v100 & 0x100000000) != 0)
    {
      BOOL v53 = 1;
      HIDWORD(v98) = 1;
      uint64_t v54 = v14;
LABEL_57:
      HIDWORD(v100) = v53;
      goto LABEL_60;
    }
    if (v95 == 0x8000000000000000)
    {
LABEL_78:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    HIDWORD(v100) = 0;
    HIDWORD(v98) = 1;
    uint64_t v54 = v14;
LABEL_60:
    if (v10 >= sub_1B2E824A8())
    {
      if (!*(void *)(a6 + 16)) {
        goto LABEL_74;
      }
      uint64_t v85 = 0x3E6461703CLL;
      uint64_t v86 = 0xE500000000000000;
      goto LABEL_71;
    }
    unint64_t v63 = sub_1B2E824E8();
    if ((unint64_t)sub_1B2E824E8() >> 14 < v63 >> 14) {
      break;
    }
    uint64_t v64 = sub_1B2E82628();
    uint64_t v65 = MEMORY[0x1B3EB0C00](v64);
    uint64_t v67 = v66;
    swift_bridgeObjectRelease();
    if (*(void *)(a6 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1B29DB060(v65, v67, v68, v69, v70, v71, v72, v73, v90, v91, v92, v94, v95, v96, v97, v98, v99, v100, v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108);
      char v75 = v74;
      swift_bridgeObjectRelease();
      if (v75)
      {
        if (*(void *)(a6 + 16))
        {
          uint64_t v82 = sub_1B29DB060(v65, v67, v76, v77, v78, v79, v80, v81, v90, v91, v92, v94, v95, v96, v97, v98, v99, v100, v101,
                  v102,
                  v103,
                  v104,
                  v105,
                  v106,
                  v107,
                  v108);
          if (v83)
          {
            int v84 = *(_DWORD *)(*(void *)(a6 + 56) + 4 * v82);
            swift_bridgeObjectRelease();
            goto LABEL_75;
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_74;
      }
    }
    swift_bridgeObjectRelease();
    if (*(void *)(a6 + 16))
    {
      uint64_t v85 = 0x6E776F6E6B6E753CLL;
      uint64_t v86 = 0xE90000000000003ELL;
LABEL_71:
      uint64_t v87 = sub_1B29DB060(v85, v86, v57, v58, v59, v60, v61, v62, v90, v91, v92, v94, v95, v96, v97, v98, v99, v100, v101,
              v102,
              v103,
              v104,
              v105,
              v106,
              v107,
              v108);
      if (v88)
      {
        int v84 = *(_DWORD *)(*(void *)(a6 + 56) + 4 * v87);
        goto LABEL_75;
      }
    }
LABEL_74:
    int v84 = -1;
LABEL_75:
    uint64_t v102 = v12;
    unint64_t v89 = *(void *)(v12 + 16);
    if (v89 >= *(void *)(v12 + 24) >> 1) {
      sub_1B29C0178();
    }
    *(void *)(v12 + 16) = v89 + 1;
    *(_DWORD *)(v12 + 4 * v89 + 32) = v84;
    uint64_t v10 = v54;
    uint64_t v9 = v96;
    uint64_t v14 = v99;
  }
  __break(1u);
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
}

#error "1B29B57D0: call analysis failed (funcsize=116)"

void sub_1B29B58E0()
{
  if (sub_1B29C43A8() & 1) != 0 && (sub_1B29C43A8())
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    if (sub_1B29C43A8())
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      if ((sub_1B29C43A8() & 1) == 0)
      {
        sub_1B29C4648();
        sub_1B2E82518();
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      sub_1B29C4648();
    }
    sub_1B2E82518();
  }
LABEL_10:
  sub_1B29C447C();
}

void sub_1B29B5A0C(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  unint64_t v6 = *a1;
  if ((*a1 & 0x8000000000000000) != 0)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v6 >= *(void *)(*(void *)a2 + 16))
  {
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  uint64_t v8 = *(void *)a2 + 16 * v6;
  uint64_t v9 = *(void *)(v8 + 32);
  unint64_t v10 = *(void *)(v8 + 40);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_1B2E824A8();
  swift_bridgeObjectRelease();
  uint64_t v12 = v11 - 1;
  if (__OFSUB__(v11, 1)) {
    goto LABEL_61;
  }
  if ((v12 & 0x8000000000000000) == 0 && *(void *)(*(void *)a3 + 16) < a4)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    if (a5 < 1)
    {
LABEL_53:
      swift_bridgeObjectRelease();
      *a6 = v13;
      return;
    }
    uint64_t v58 = a5;
    while (1)
    {
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_1B2E824E8();
      if ((unint64_t)sub_1B2E824E8() >> 14 < v14 >> 14) {
        break;
      }
      swift_bridgeObjectRetain();
      sub_1B2E824B8();
      uint64_t v15 = sub_1B2E82628();
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      uint64_t v22 = MEMORY[0x1B3EB0C00](v15, v17, v19, v21);
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v25 = sub_1B29B31A4(v22, v24, 0xFFFFFFFFLL);
      swift_bridgeObjectRelease();
      if (v25 == -1)
      {
        a5 = v58;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29B86B4();
          uint64_t v13 = v41;
        }
        unint64_t v26 = *(void *)(v13 + 16);
        if (v26 >= *(void *)(v13 + 24) >> 1)
        {
          sub_1B29B86B4();
          uint64_t v13 = v42;
        }
        *(void *)(v13 + 16) = v26 + 1;
        *(_DWORD *)(v13 + 4 * v26 + 32) = v25;
        BOOL v27 = __OFADD__(v12, 1);
        uint64_t v28 = v12 + 1;
        if (v27) {
          goto LABEL_58;
        }
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1B2E824A8();
        swift_bridgeObjectRelease();
        if (v28 >= v29)
        {
          swift_bridgeObjectRelease();
          uint64_t v9 = 0;
          unint64_t v10 = 0xE000000000000000;
          a5 = v58;
        }
        else
        {
          unint64_t v30 = sub_1B2E824E8();
          uint64_t v31 = HIBYTE(v10) & 0xF;
          if ((v10 & 0x2000000000000000) == 0) {
            uint64_t v31 = v9 & 0xFFFFFFFFFFFFLL;
          }
          a5 = v58;
          if (4 * v31 < v30 >> 14) {
            goto LABEL_62;
          }
          swift_bridgeObjectRetain();
          uint64_t v32 = sub_1B2E82628();
          uint64_t v34 = v33;
          uint64_t v36 = v35;
          uint64_t v38 = v37;
          swift_bridgeObjectRelease();
          uint64_t v9 = MEMORY[0x1B3EB0C00](v32, v34, v36, v38);
          unint64_t v40 = v39;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v10 = v40;
        }
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_1B2E824A8();
        swift_bridgeObjectRelease();
      }
      BOOL v27 = __OFSUB__(v12--, 1);
      if (v27) {
        goto LABEL_57;
      }
      if (v12 < 0 || *(void *)(*(void *)a3 + 16) >= (unint64_t)a4) {
        goto LABEL_29;
      }
      if (*(void *)(v13 + 16) >= (unint64_t)a5) {
        goto LABEL_53;
      }
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_29:
  uint64_t v43 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v43 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (v43)
  {
    sub_1B2E82548();
    if (v44)
    {
      char v45 = a6;
      do
      {
        swift_bridgeObjectRelease();
        if (*(void *)(*(void *)a3 + 16) >= a4) {
          break;
        }
        if (*(void *)(v13 + 16) >= a5)
        {
          swift_bridgeObjectRelease();
          goto LABEL_55;
        }
        int v46 = sub_1B29B31A4(4935253, 0xE300000000000000, 0xFFFFFFFFLL);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29B86B4();
          uint64_t v13 = v49;
        }
        unint64_t v47 = *(void *)(v13 + 16);
        if (v47 >= *(void *)(v13 + 24) >> 1)
        {
          sub_1B29B86B4();
          uint64_t v13 = v50;
        }
        *(void *)(v13 + 16) = v47 + 1;
        *(_DWORD *)(v13 + 4 * v47 + 32) = v46;
        sub_1B2E82548();
      }
      while (v48);
    }
    else
    {
      char v45 = a6;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v45 = a6;
  }
  uint64_t v51 = *(void *)(v13 + 16);
  uint64_t v52 = a5 - v51;
  if (a5 <= v51)
  {
LABEL_55:
    *char v45 = v13;
    return;
  }
  if (a5 - v51 >= 0)
  {
    do
    {
      int v53 = sub_1B29B31A4(0x3E6461703CLL, 0xE500000000000000, 0xFFFFFFFFLL);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B86B4();
        uint64_t v13 = v55;
      }
      unint64_t v54 = *(void *)(v13 + 16);
      if (v54 >= *(void *)(v13 + 24) >> 1)
      {
        sub_1B29B86B4();
        uint64_t v13 = v56;
      }
      *(void *)(v13 + 16) = v54 + 1;
      *(_DWORD *)(v13 + 4 * v54 + 32) = v53;
      --v52;
    }
    while (v52);
    goto LABEL_55;
  }
LABEL_63:
  __break(1u);
}

void sub_1B29B609C(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1B29B60A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 88) = a4;
  *(void *)(v6 + 96) = v5;
  *(unsigned char *)(v6 + 57) = a5;
  *(void *)(v6 + 72) = a2;
  *(void *)(v6 + 80) = a3;
  *(void *)(v6 + 64) = a1;
  *(void *)(v6 + 104) = sub_1B29A3EB4(&qword_1E9C3A280);
  *(void *)(v6 + 112) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B29B6148, 0, 0);
}

uint64_t sub_1B29B6148()
{
  char v1 = *(unsigned char *)(v0 + 57);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v2 = *(void **)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v6 = v2[5];
  uint64_t v7 = v2[6];
  sub_1B29AEC7C(v2 + 2, v6);
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = 0xD000000000000019;
  *(void *)(v0 + 40) = 0x80000001B2E96330;
  *(void *)(v0 + 48) = v3;
  *(unsigned char *)(v0 + 56) = v1 & 1;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, uint64_t, uint64_t))(*(void *)(v7 + 32)
                                                                                    + **(int **)(v7 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1B29B62C4;
  uint64_t v9 = *(void *)(v0 + 112);
  return v11(v9, v0 + 16, &type metadata for LocationEmbedderInferenceInterface, v6, v7);
}

uint64_t sub_1B29B62C4()
{
  sub_1B299B708();
  uint64_t v2 = *v1;
  sub_1B299B0E0();
  *uint64_t v3 = v2;
  *(void *)(v4 + 128) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1B29B63FC()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[8];
  sub_1B29C40E4(v1, v3);
  uint64_t v4 = *(void *)(v1 + *(int *)(v2 + 28));
  sub_1B29C4148(v1, &qword_1E9C3A280);
  *(void *)(v3 + *(int *)(sub_1B29A3EB4(&qword_1E9C3A228) + 28)) = v4;
  swift_task_dealloc();
  sub_1B299AD7C();
  return v5();
}

uint64_t sub_1B29B64A4()
{
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B29B6504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a4;
  v8[9] = v18;
  sub_1B29A3EB4(&qword_1E9C3A238);
  v8[10] = swift_task_alloc();
  v8[11] = swift_task_alloc();
  sub_1B29A3EB4(&qword_1E9C3A228);
  uint64_t v12 = swift_task_alloc();
  v8[12] = v12;
  uint64_t v15 = (char *)&dword_1E9C3A278 + dword_1E9C3A278;
  uint64_t v13 = (void *)swift_task_alloc();
  v8[13] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_1B29B666C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))v15)(v12, a6, a7, a8, v17 & 1);
}

uint64_t sub_1B29B666C()
{
  sub_1B299B708();
  uint64_t v2 = *v1;
  sub_1B299B0E0();
  *uint64_t v3 = v2;
  *(void *)(v4 + 112) = v0;
  swift_task_dealloc();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1B29B6750()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[10];
  sub_1B29C4020(v0[12], v1, &qword_1E9C3A228);
  sub_1B29A3EB4((uint64_t *)&unk_1E9C3A240);
  swift_storeEnumTagMultiPayload();
  sub_1B29C46E0();
  sub_1B29C4020(v1, v2, &qword_1E9C3A238);
  sub_1B29C4550();
  sub_1B29C407C(v2, v1);
  swift_endAccess();
  sub_1B2E82E98();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v3();
}

uint64_t sub_1B29B685C()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = (void *)v0[11];
  *uint64_t v1 = v0[14];
  sub_1B29A3EB4((uint64_t *)&unk_1E9C3A240);
  swift_storeEnumTagMultiPayload();
  sub_1B29C46E0();
  sub_1B29C4020((uint64_t)v1, v2, &qword_1E9C3A238);
  sub_1B29C4550();
  sub_1B29C407C(v2, (uint64_t)v1);
  swift_endAccess();
  sub_1B2E82E98();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v3();
}

uint64_t sub_1B29B6960()
{
  return swift_slowAlloc();
}

void sub_1B29B6968()
{
}

uint64_t sub_1B29B6974(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B6980(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B698C(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B6998(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C398A0);
}

uint64_t sub_1B29B69A4(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B69B0(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C3A1A8);
}

uint64_t sub_1B29B69BC(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B69C8(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B69D4(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C38920);
}

uint64_t sub_1B29B69E0(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B69EC(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B69F8(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B6A04(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C3A1F0);
}

uint64_t sub_1B29B6A10(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B6A1C(uint64_t a1)
{
  return sub_1B29B6A4C(a1, (void (*)(void))type metadata accessor for Node);
}

uint64_t sub_1B29B6A34(uint64_t a1)
{
  return sub_1B29B6A4C(a1, (void (*)(void))type metadata accessor for EntityResolutionRankingService.RankedEntities.ScoredEntity);
}

uint64_t sub_1B29B6A4C(uint64_t a1, void (*a2)(void))
{
  if (a1 < 0)
  {
    sub_1B299D294();
    uint64_t result = sub_1B29C4308();
    __break(1u);
  }
  else if (a1)
  {
    a2(0);
    uint64_t result = sub_1B2E828D8();
    *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B29B6AD8(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C3A168);
}

uint64_t sub_1B29B6AE4(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39A28);
}

uint64_t sub_1B29B6AF0(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C3A1D0);
}

uint64_t sub_1B29B6AFC(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B6B08(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B6B14(uint64_t a1)
{
  return sub_1B29B6A4C(a1, (void (*)(void))type metadata accessor for EntityWithAlias);
}

uint64_t sub_1B29B6B2C(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B6B38(uint64_t a1)
{
  return sub_1B29B6A4C(a1, (void (*)(void))type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag);
}

uint64_t sub_1B29B6B50(uint64_t a1)
{
  return sub_1B29B6A4C(a1, (void (*)(void))type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson);
}

uint64_t sub_1B29B6B68(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B6B74(uint64_t a1)
{
  return sub_1B29B6B80(a1);
}

uint64_t sub_1B29B6B80(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_1B299D294();
    uint64_t result = sub_1B29C4308();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_1B2E828D8();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B29B6BF4(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39DB8);
}

uint64_t sub_1B29B6C00(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C39F08);
}

uint64_t sub_1B29B6C0C(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C39F10);
}

uint64_t sub_1B29B6C18(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39DB0);
}

uint64_t sub_1B29B6C24(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39DA0);
}

uint64_t sub_1B29B6C30(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39D90);
}

uint64_t sub_1B29B6C3C(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C3D710);
}

uint64_t sub_1B29B6C48(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C39D80);
}

uint64_t sub_1B29B6C54(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C3D720);
}

uint64_t sub_1B29B6C60(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C39D70);
}

uint64_t sub_1B29B6C6C(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C3D730);
}

uint64_t sub_1B29B6C78(uint64_t a1)
{
  return sub_1B29B6E64(a1, (uint64_t *)&unk_1E9C39D60);
}

uint64_t sub_1B29B6C84(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C3D740);
}

uint64_t sub_1B29B6C90(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C39D50);
}

uint64_t sub_1B29B6C9C(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C3D750);
}

uint64_t sub_1B29B6CA8(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C39D40);
}

uint64_t sub_1B29B6CB4(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C3D760);
}

uint64_t sub_1B29B6CC0(uint64_t a1)
{
  return sub_1B29B6FC8(a1, (uint64_t *)&unk_1E9C39D30);
}

uint64_t sub_1B29B6CCC(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C3D770);
}

uint64_t sub_1B29B6CD8(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39F18);
}

uint64_t sub_1B29B6CE4(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39D18);
}

uint64_t sub_1B29B6CF0(uint64_t a1)
{
  return sub_1B29B6E64(a1, (uint64_t *)&unk_1E9C39D20);
}

uint64_t sub_1B29B6CFC(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C38970);
}

uint64_t sub_1B29B6D08(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39EF8);
}

uint64_t sub_1B29B6D14(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39F00);
}

uint64_t sub_1B29B6D20(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39EF0);
}

uint64_t sub_1B29B6D2C(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39EE8);
}

uint64_t sub_1B29B6D38(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39EE0);
}

uint64_t sub_1B29B6D44(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39ED8);
}

uint64_t sub_1B29B6D50(uint64_t a1)
{
  return sub_1B29B6D64(a1, &qword_1E9C39AE0);
}

uint64_t sub_1B29B6D64(uint64_t a1, unint64_t *a2)
{
  if (a1 < 0)
  {
    sub_1B299D294();
    uint64_t result = sub_1B29C4308();
    __break(1u);
  }
  else if (a1)
  {
    sub_1B29C3CA0(0, a2);
    uint64_t result = sub_1B2E828D8();
    *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B29B6DEC(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C39BF8);
}

uint64_t sub_1B29B6DF8(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C39BC8);
}

uint64_t sub_1B29B6E04(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C39BE8);
}

uint64_t sub_1B29B6E10(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C39BB8);
}

uint64_t sub_1B29B6E1C(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C39BD8);
}

uint64_t sub_1B29B6E28(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C39BA8);
}

uint64_t sub_1B29B6E34(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C39B98);
}

uint64_t sub_1B29B6E40(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C39B88);
}

uint64_t sub_1B29B6E4C(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C39B78);
}

uint64_t sub_1B29B6E58(uint64_t a1)
{
  return sub_1B29B6E64(a1, &qword_1E9C39B68);
}

uint64_t sub_1B29B6E64(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    sub_1B299D294();
    uint64_t result = sub_1B29C4308();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_1B29A3EB4(a2);
      uint64_t v4 = sub_1B2E828D8();
      *(void *)(v4 + 16) = a1;
    }
    else
    {
      uint64_t v4 = MEMORY[0x1E4FBC860];
    }
    uint64_t v5 = sub_1B29A3EB4(a2);
    sub_1B29C42E4(v5);
    return v4;
  }
  return result;
}

uint64_t sub_1B29B6F10(uint64_t a1)
{
  return sub_1B29B6D64(a1, &qword_1E9C38230);
}

uint64_t sub_1B29B6F24(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39B28);
}

uint64_t sub_1B29B6F30(uint64_t a1)
{
  return sub_1B29B6D64(a1, &qword_1E9C39AE8);
}

uint64_t sub_1B29B6F44(uint64_t a1)
{
  return sub_1B29B6D64(a1, &qword_1E9C39B10);
}

uint64_t sub_1B29B6F58(uint64_t a1)
{
  return sub_1B29B6D64(a1, &qword_1E9C39B08);
}

uint64_t sub_1B29B6F6C(uint64_t a1)
{
  return sub_1B29B6D64(a1, &qword_1E9C39B00);
}

uint64_t sub_1B29B6F80(uint64_t a1)
{
  return sub_1B29B6D64(a1, &qword_1E9C39AF8);
}

uint64_t sub_1B29B6F94(uint64_t a1)
{
  return sub_1B29B6D64(a1, &qword_1E9C39AF0);
}

uint64_t sub_1B29B6FA8(uint64_t a1)
{
  return sub_1B29B6D64(a1, &qword_1E9C39AD8);
}

uint64_t sub_1B29B6FBC(uint64_t a1)
{
  return sub_1B29B6FC8(a1, &qword_1E9C39A18);
}

uint64_t sub_1B29B6FC8(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    sub_1B299D294();
    uint64_t result = sub_1B29C4308();
    __break(1u);
  }
  else if (a1)
  {
    sub_1B29A3EB4(a2);
    uint64_t result = sub_1B2E828D8();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void sub_1B29B7048()
{
}

void sub_1B29B707C()
{
  sub_1B29C432C();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v1)
  {
    sub_1B29A3EB4(&qword_1E9C39FA0);
    uint64_t v5 = (void *)sub_1B29C429C();
    sub_1B29C41E8(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)sub_1B29C4338();
    sub_1B29BDF8C(v6, v7, v8);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v9 = sub_1B29C428C();
    sub_1B29BA2D8(v9, v10, v11, v12);
  }
}

void sub_1B29B7120()
{
}

void sub_1B29B7148()
{
}

void sub_1B29B717C()
{
}

void sub_1B29B71B0()
{
  sub_1B29C432C();
  if (v3)
  {
    sub_1B29C41C4();
    if (v4 != v5)
    {
      sub_1B299F298();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v2)
  {
    sub_1B29A3EB4(&qword_1E9C398D0);
    uint64_t v6 = (void *)swift_allocObject();
    size_t v7 = j__malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if (v0)
  {
    uint64_t v8 = (char *)sub_1B29C4338();
    sub_1B29BE090(v8, v9, v10);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v11 = sub_1B29C428C();
    sub_1B29BA4DC(v11, v12, v13, v14);
  }
}

void sub_1B29B7260()
{
}

void sub_1B29B7288()
{
}

void sub_1B29B72B0()
{
  sub_1B29A4104();
  if (v3)
  {
    sub_1B29C41C4();
    if (v4 != v5)
    {
      sub_1B299F298();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v2)
  {
    sub_1B29A3EB4(v6);
    size_t v7 = (const void *)swift_allocObject();
    size_t v8 = j__malloc_size(v7);
    sub_1B29C4244((uint64_t)(v8 - 32) / 64);
  }
  if (v1)
  {
    size_t v9 = (char *)sub_1B29C4250();
    sub_1B29BEE34(v9, v10, v11);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v12 = sub_1B29C465C();
    v0(v12);
  }
}

void sub_1B29B7370()
{
}

void sub_1B29B73A4()
{
  sub_1B29C42D0();
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    size_t v8 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v8);
  }
  if (v2)
  {
    uint64_t v9 = sub_1B29C4250();
    v1(v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C427C();
    v0(v10);
  }
  sub_1B29A4118();
}

void sub_1B29B744C()
{
}

void sub_1B29B7480()
{
}

void sub_1B29B74B4()
{
}

void sub_1B29B74E8()
{
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    size_t v8 = (const void *)sub_1B29C42B8();
    size_t v9 = j__malloc_size(v8);
    sub_1B29C4244((uint64_t)(v9 - 32) / 16);
  }
  if (v2)
  {
    uint64_t v10 = sub_1B29C4250();
    v1(v10);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v11 = sub_1B29C427C();
    v0(v11);
  }
}

void sub_1B29B75A4()
{
}

void sub_1B29B75D8()
{
}

void sub_1B29B760C()
{
  sub_1B29C42D0();
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    size_t v8 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v8);
  }
  if (v2)
  {
    uint64_t v9 = sub_1B29C4250();
    v1(v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C427C();
    v0(v10);
  }
  sub_1B29A4118();
}

void sub_1B29B76B4()
{
}

void sub_1B29B76C8()
{
  sub_1B29C42F8();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C4344();
  if (v1)
  {
    sub_1B29A3EB4(v5);
    char v6 = (void *)sub_1B29C4460();
    sub_1B29C4360(v6);
  }
  if (v0)
  {
    size_t v7 = (char *)sub_1B29C4414();
    sub_1B29BE454(v7, v8, v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C43CC();
    sub_1B29BACB0(v10, v11, v12, v13);
  }
}

void sub_1B29B7768()
{
}

void sub_1B29B7790()
{
  sub_1B29C42D0();
  sub_1B29A4104();
  if (v3)
  {
    sub_1B29C41C4();
    if (v4 != v5)
    {
      sub_1B299F298();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v2)
  {
    sub_1B29A3EB4(v6);
    size_t v7 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v7);
  }
  if (v1)
  {
    uint64_t v8 = (char *)sub_1B29C4250();
    sub_1B29BEE90(v8, v9, v10);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v11 = sub_1B29C465C();
    v0(v11);
  }
  sub_1B29A4118();
}

void sub_1B29B7834()
{
}

void sub_1B29B7848()
{
}

void sub_1B29B787C()
{
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    uint64_t v8 = (const void *)sub_1B29C42B8();
    size_t v9 = j__malloc_size(v8);
    sub_1B29C4244((uint64_t)(v9 - 32) / 8);
  }
  if (v2)
  {
    uint64_t v10 = sub_1B29C4250();
    v1(v10);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v11 = sub_1B29C427C();
    v0(v11);
  }
}

void sub_1B29B7938()
{
  sub_1B29C42F8();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C4344();
  if (v1)
  {
    sub_1B29A3EB4(v5);
    char v6 = (const void *)sub_1B29C42B8();
    size_t v7 = j__malloc_size(v6);
    sub_1B29C4420((uint64_t)(v7 - 32) / 8);
  }
  if (v0)
  {
    uint64_t v8 = (char *)sub_1B29C4414();
    sub_1B29BECA0(v8, v9, v10);
    sub_1B29C4210();
  }
  else
  {
    sub_1B29C43CC();
    sub_1B29BDE00();
  }
}

void sub_1B29B79EC()
{
}

uint64_t sub_1B29B7A20()
{
  return sub_1B29B7EBC();
}

void sub_1B29B7A34()
{
}

void sub_1B29B7A68()
{
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    uint64_t v8 = (const void *)sub_1B29C42B8();
    size_t v9 = j__malloc_size(v8);
    sub_1B29C4244((uint64_t)(v9 - 32) / 8);
  }
  if (v2)
  {
    uint64_t v10 = sub_1B29C4250();
    v1(v10);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v11 = sub_1B29C427C();
    v0(v11);
  }
}

void sub_1B29B7B24()
{
}

void sub_1B29B7B58()
{
}

void sub_1B29B7B8C()
{
}

void sub_1B29B7BC0()
{
  sub_1B29C42D0();
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    uint64_t v8 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v8);
  }
  if (v2)
  {
    uint64_t v9 = sub_1B29C4250();
    v1(v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C427C();
    v0(v10);
  }
  sub_1B29A4118();
}

void sub_1B29B7C68()
{
}

void sub_1B29B7C90()
{
}

void sub_1B29B7CC4()
{
}

void sub_1B29B7CEC()
{
}

void sub_1B29B7D20()
{
}

void sub_1B29B7D48()
{
}

void sub_1B29B7D7C()
{
}

void sub_1B29B7DA4()
{
}

uint64_t sub_1B29B7DD8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1B29B8194(a1, a2, a3, a4, (uint64_t *)&unk_1E9C37B58, MEMORY[0x1E4F27928], MEMORY[0x1E4F27928]);
}

void sub_1B29B7E20()
{
}

void sub_1B29B7E54()
{
}

void sub_1B29B7E74()
{
}

uint64_t sub_1B29B7EA8()
{
  return sub_1B29B7EBC();
}

uint64_t sub_1B29B7EBC()
{
  sub_1B29C42F8();
  if (v5)
  {
    sub_1B29C41C4();
    if (v7 != v8)
    {
      sub_1B299F298();
      if (v7)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_1B29A1588();
    }
  }
  else
  {
    uint64_t v6 = v3;
  }
  uint64_t v9 = *(void *)(v0 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (!v10)
  {
    uint64_t v14 = (const void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  sub_1B29A3EB4(v4);
  uint64_t v11 = sub_1B29A3EB4(v1);
  sub_1B299D2A8(v11);
  uint64_t v13 = *(void *)(v12 + 72);
  uint64_t v14 = (const void *)swift_allocObject();
  j__malloc_size(v14);
  if (!v13 || ((sub_1B29C4670(), v16) ? (BOOL v16 = v13 == -1) : (BOOL v16 = 0), v16))
  {
LABEL_23:
    sub_1B299D294();
    uint64_t result = sub_1B2E83408();
    __break(1u);
    return result;
  }
  sub_1B29C4420(v15 / v13);
LABEL_18:
  uint64_t v17 = sub_1B29A3EB4(v1);
  sub_1B29C42E4(v17);
  if (v2)
  {
    sub_1B29BF3EC(v0 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v19 = sub_1B29C43CC();
    sub_1B29BD664(v19, v20, v21, v22, v23);
  }
  return (uint64_t)v14;
}

void sub_1B29B805C()
{
}

void sub_1B29B8090()
{
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    char v8 = (const void *)sub_1B29C42B8();
    size_t v9 = j__malloc_size(v8);
    sub_1B29C4244((uint64_t)(v9 - 32) / 16);
  }
  if (v2)
  {
    uint64_t v10 = sub_1B29C4250();
    v1(v10);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v11 = sub_1B29C427C();
    v0(v11);
  }
}

uint64_t sub_1B29B814C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1B29B8194(a1, a2, a3, a4, &qword_1E9C3A1B8, (uint64_t (*)(void))type metadata accessor for ViewService.DefaultResolverInteractionsView.Interaction, (void (*)(void))type metadata accessor for ViewService.DefaultResolverInteractionsView.Interaction);
}

uint64_t sub_1B29B8194(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), void (*a7)(void))
{
  if (a3)
  {
    sub_1B29C41C4();
    if (v12 != v13)
    {
      sub_1B299F298();
      if (v12)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_1B29A1588();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  sub_1B29A3EB4(a5);
  uint64_t v16 = a6(0);
  sub_1B299D2A8(v16);
  uint64_t v18 = *(void *)(v17 + 72);
  uint64_t v19 = (void *)sub_1B29C44AC();
  j__malloc_size(v19);
  if (!v18 || ((sub_1B29C4670(), v21) ? (BOOL v21 = v18 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_23:
    sub_1B299D294();
    uint64_t result = sub_1B2E83408();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * (v20 / v18);
LABEL_18:
  uint64_t v22 = *(void *)(a6(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  if (a1)
  {
    sub_1B29BF530(a4 + v23, v14);
    sub_1B29C4210();
  }
  else
  {
    sub_1B29BDAEC(0, v14, (unint64_t)v19 + v23, a4, a7);
  }
  return (uint64_t)v19;
}

void sub_1B29B836C()
{
}

void sub_1B29B83A0()
{
}

void sub_1B29B83C0()
{
  sub_1B29C42F8();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C4344();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    size_t v9 = (void *)sub_1B29C4460();
    sub_1B29C4360(v9);
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  if (v2)
  {
    uint64_t v10 = (char *)sub_1B29C4414();
    sub_1B29BE710(v10, v11, v12);
    sub_1B29C4210();
  }
  else
  {
    v1(0, v3, v4 + 32, v0);
  }
}

void sub_1B29B846C()
{
}

void sub_1B29B84A0()
{
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    char v8 = (const void *)sub_1B29C42B8();
    size_t v9 = j__malloc_size(v8);
    sub_1B29C4244((uint64_t)(v9 - 32) / 32);
  }
  if (v2)
  {
    uint64_t v10 = sub_1B29C4250();
    v1(v10);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v11 = sub_1B29C427C();
    v0(v11);
  }
}

void sub_1B29B855C()
{
}

void sub_1B29B8590()
{
}

void sub_1B29B85C4()
{
  sub_1B29C432C();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v1)
  {
    sub_1B29A3EB4(&qword_1EB7E56F0);
    char v5 = (const void *)sub_1B29C42B8();
    sub_1B29C4690(v5);
    sub_1B29C4354(v6 / 8);
  }
  if (v0)
  {
    char v7 = (char *)sub_1B29C4338();
    sub_1B29BECA0(v7, v8, v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C428C();
    sub_1B29BAD74(v10, v11, v12, v13);
  }
}

void sub_1B29B866C()
{
}

void sub_1B29B8680()
{
}

void sub_1B29B86B4()
{
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    uint64_t v8 = (const void *)sub_1B29C42B8();
    size_t v9 = j__malloc_size(v8);
    sub_1B29C4244((uint64_t)(v9 - 32) / 4);
  }
  if (v2)
  {
    uint64_t v10 = sub_1B29C4250();
    v1(v10);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v11 = sub_1B29C427C();
    v0(v11);
  }
}

void sub_1B29B8770()
{
  sub_1B29C432C();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v1)
  {
    sub_1B29A3EB4(&qword_1EB7D98D8);
    char v5 = (void *)sub_1B29C429C();
    sub_1B29C41E8(v5);
  }
  if (v0)
  {
    char v6 = (char *)sub_1B29C4338();
    sub_1B29BEA0C(v6, v7, v8);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v9 = sub_1B29C428C();
    sub_1B29BBAD4(v9, v10, v11, v12);
  }
}

void sub_1B29B8814()
{
}

void sub_1B29B8848()
{
}

void sub_1B29B8884()
{
  sub_1B29C42D0();
  char v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10;
  if (v12)
  {
    sub_1B29C41C4();
    if (v14 != v15)
    {
      sub_1B299F298();
      if (v14)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  else
  {
    uint64_t v13 = v0;
  }
  uint64_t v16 = *(void *)(v9 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(v9 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (v17)
  {
    sub_1B29A3EB4(v1);
    uint64_t v18 = (void *)sub_1B29C42B8();
    j__malloc_size(v18);
    sub_1B29C46AC();
    v18[2] = v16;
    v18[3] = v19;
  }
  else
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v20 = v18 + 4;
  if (v11)
  {
    v3(v9 + 32, v16, v20);
    sub_1B29C4210();
  }
  else
  {
    v5(0, v16, v20, v9, v7);
  }
  sub_1B29A4118();
}

void sub_1B29B8960()
{
}

void sub_1B29B8994()
{
  sub_1B29C432C();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v1)
  {
    sub_1B29A3EB4((uint64_t *)&unk_1EB7D9920);
    char v5 = (void *)sub_1B29C429C();
    sub_1B29C41E8(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)sub_1B29C4338();
    sub_1B29BEA70(v6, v7, v8);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v9 = sub_1B29C428C();
    sub_1B29BBDC8(v9, v10, v11, v12);
  }
}

void sub_1B29B8A38()
{
  sub_1B29C432C();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v1)
  {
    sub_1B29A3EB4(&qword_1EB7D98F8);
    char v5 = (void *)sub_1B29C429C();
    sub_1B29C41E8(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)sub_1B29C4338();
    sub_1B29BE7D8(v6, v7, v8);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v9 = sub_1B29C428C();
    sub_1B29BBEC8(v9, v10, v11, v12);
  }
}

void sub_1B29B8ADC()
{
  sub_1B29C432C();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v1)
  {
    sub_1B29A3EB4(&qword_1EB7D98D0);
    char v5 = (void *)sub_1B29C429C();
    sub_1B29C41E8(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)sub_1B29C4338();
    sub_1B29BEAD0(v6, v7, v8);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v9 = sub_1B29C428C();
    sub_1B29BBFC8(v9, v10, v11, v12);
  }
}

void sub_1B29B8B80()
{
}

void sub_1B29B8BB4()
{
  sub_1B29C42D0();
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    uint64_t v8 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v8);
  }
  if (v2)
  {
    uint64_t v9 = sub_1B29C4250();
    v1(v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C427C();
    v0(v10);
  }
  sub_1B29A4118();
}

void sub_1B29B8C5C()
{
}

void sub_1B29B8C90()
{
}

void sub_1B29B8CC4()
{
  sub_1B29C42D0();
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    uint64_t v8 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v8);
  }
  if (v2)
  {
    uint64_t v9 = sub_1B29C4250();
    v1(v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C427C();
    v0(v10);
  }
  sub_1B29A4118();
}

void sub_1B29B8D6C()
{
}

void sub_1B29B8DA0()
{
}

uint64_t sub_1B29B8DDC()
{
  return sub_1B29B7EBC();
}

void sub_1B29B8DF0()
{
}

void sub_1B29B8E24()
{
}

void sub_1B29B8E58()
{
  sub_1B29C42D0();
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    uint64_t v8 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v8);
  }
  if (v2)
  {
    uint64_t v9 = sub_1B29C4250();
    v1(v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C427C();
    v0(v10);
  }
  sub_1B29A4118();
}

void sub_1B29B8F00()
{
}

void sub_1B29B8F28()
{
}

uint64_t sub_1B29B8F5C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1B29B8194(a1, a2, a3, a4, &qword_1E9C37B68, type metadata accessor for CustomGraphDateRelationship, (void (*)(void))type metadata accessor for CustomGraphDateRelationship);
}

void sub_1B29B8FA4()
{
}

void sub_1B29B8FB0()
{
  sub_1B29C432C();
  if (v3)
  {
    sub_1B29C41C4();
    if (v4 != v5)
    {
      sub_1B299F298();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v2)
  {
    sub_1B29A3EB4(v6);
    uint64_t v7 = (void *)swift_allocObject();
    size_t v8 = j__malloc_size(v7);
    v7[2] = v1;
    v7[3] = 2 * v8 - 64;
  }
  if (v0)
  {
    uint64_t v9 = (char *)sub_1B29C4338();
    sub_1B29BE090(v9, v10, v11);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v12 = sub_1B29C428C();
    sub_1B29BD85C(v12, v13, v14, v15);
  }
}

void sub_1B29B905C()
{
}

void sub_1B29B9090()
{
}

void sub_1B29B90B8()
{
}

void sub_1B29B90E0()
{
}

void sub_1B29B9114()
{
}

void sub_1B29B913C()
{
}

void sub_1B29B9170()
{
  sub_1B29C432C();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v1)
  {
    sub_1B29A3EB4(&qword_1E9C3A028);
    char v5 = (void *)sub_1B29C429C();
    sub_1B29C41E8(v5);
  }
  if (v0)
  {
    char v6 = (char *)sub_1B29C4338();
    sub_1B29BED98(v6, v7, v8);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v9 = sub_1B29C428C();
    sub_1B29BC790(v9, v10, v11, v12);
  }
}

void sub_1B29B9214()
{
}

void sub_1B29B923C()
{
}

void sub_1B29B9264()
{
}

void sub_1B29B9298()
{
}

void sub_1B29B92C0()
{
}

void sub_1B29B92F4()
{
}

void sub_1B29B9300()
{
}

void sub_1B29B9334()
{
}

uint64_t sub_1B29B9368(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1B29B8194(a1, a2, a3, a4, &qword_1E9C398C0, (uint64_t (*)(void))type metadata accessor for K2TTextualization, (void (*)(void))type metadata accessor for K2TTextualization);
}

void sub_1B29B93B0()
{
}

void sub_1B29B93E4()
{
}

void sub_1B29B93F0()
{
  sub_1B29C432C();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v1)
  {
    sub_1B29A3EB4(&qword_1E9C39A60);
    char v5 = (const void *)sub_1B29C42B8();
    sub_1B29C4690(v5);
    sub_1B29C4354(v6 / 2);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_1B29C4338();
    sub_1B29BEF58(v7, v8, v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C428C();
    sub_1B29BCD80(v10, v11, v12, v13);
  }
}

void sub_1B29B9498()
{
}

void sub_1B29B94CC()
{
  sub_1B29C42D0();
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    uint64_t v8 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v8);
  }
  if (v2)
  {
    uint64_t v9 = sub_1B29C4250();
    v1(v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C427C();
    v0(v10);
  }
  sub_1B29A4118();
}

void sub_1B29B9574()
{
}

void sub_1B29B9588()
{
  sub_1B29C42F8();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C4344();
  if (v1)
  {
    sub_1B29A3EB4(v5);
    char v6 = (const void *)sub_1B29C42B8();
    size_t v7 = j__malloc_size(v6);
    sub_1B29C4420((uint64_t)(v7 - 32) / 32);
  }
  if (v0)
  {
    uint64_t v8 = (char *)sub_1B29C4414();
    sub_1B29BEFF0(v8, v9, v10);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v11 = sub_1B29C43CC();
    sub_1B29BD914(v11, v12, v13, v14);
  }
}

void sub_1B29B963C()
{
}

void sub_1B29B9670()
{
}

void sub_1B29B96A4()
{
  sub_1B29C432C();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v1)
  {
    sub_1B29A3EB4(&qword_1E9C39F68);
    char v5 = (const void *)swift_allocObject();
    sub_1B29C4690(v5);
    sub_1B29C4354(v6 / 64);
  }
  if (v0)
  {
    size_t v7 = (char *)sub_1B29C4338();
    sub_1B29BF04C(v7, v8, v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C428C();
    sub_1B29BD184(v10, v11, v12, v13);
  }
}

void sub_1B29B9754()
{
}

uint64_t sub_1B29B9760(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1B29B8194(a1, a2, a3, a4, &qword_1E9C39F40, type metadata accessor for CustomGraphPerson, (void (*)(void))type metadata accessor for CustomGraphPerson);
}

void sub_1B29B97A8()
{
  sub_1B29C432C();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v1)
  {
    sub_1B29A3EB4(&qword_1E9C39F38);
    char v5 = (void *)sub_1B29C429C();
    sub_1B29C41E8(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)sub_1B29C4338();
    sub_1B29BF0E0(v6, v7, v8);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v9 = sub_1B29C428C();
    sub_1B29BD29C(v9, v10, v11, v12);
  }
}

uint64_t sub_1B29B984C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1B29B8194(a1, a2, a3, a4, &qword_1E9C39C00, type metadata accessor for CustomGraphActivityEvent, (void (*)(void))type metadata accessor for CustomGraphActivityEvent);
}

uint64_t sub_1B29B9894(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1B29B8194(a1, a2, a3, a4, &qword_1E9C39F48, type metadata accessor for CustomGraphBehaviorActivityEvent, (void (*)(void))type metadata accessor for CustomGraphBehaviorActivityEvent);
}

void sub_1B29B98DC()
{
}

void sub_1B29B98F0()
{
}

void sub_1B29B9904()
{
}

void sub_1B29B9940()
{
}

void sub_1B29B997C()
{
}

void sub_1B29B99B8()
{
}

void sub_1B29B99F4()
{
}

void sub_1B29B9A30()
{
}

void sub_1B29B9A6C()
{
}

void sub_1B29B9A80()
{
}

void sub_1B29B9AB4()
{
}

void sub_1B29B9AE8()
{
}

void sub_1B29B9B1C()
{
}

void sub_1B29B9B50()
{
}

void sub_1B29B9B84()
{
}

uint64_t sub_1B29B9BB8()
{
  return sub_1B29B7EBC();
}

uint64_t sub_1B29B9BCC()
{
  return sub_1B29B7EBC();
}

uint64_t sub_1B29B9BE0()
{
  return sub_1B29B7EBC();
}

uint64_t sub_1B29B9BF4()
{
  return sub_1B29B7EBC();
}

uint64_t sub_1B29B9C08()
{
  return sub_1B29B7EBC();
}

uint64_t sub_1B29B9C1C()
{
  return sub_1B29B7EBC();
}

uint64_t sub_1B29B9C30()
{
  return sub_1B29B7EBC();
}

uint64_t sub_1B29B9C44()
{
  return sub_1B29B7EBC();
}

uint64_t sub_1B29B9C58()
{
  return sub_1B29B7EBC();
}

uint64_t sub_1B29B9C6C()
{
  return sub_1B29B7EBC();
}

uint64_t sub_1B29B9C80()
{
  return sub_1B29B7EBC();
}

uint64_t sub_1B29B9C94()
{
  return sub_1B29B7EBC();
}

void sub_1B29B9CA8()
{
}

void sub_1B29B9CDC()
{
  sub_1B29C432C();
  if (v2)
  {
    sub_1B29C41C4();
    if (v3 != v4)
    {
      sub_1B299F298();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v1)
  {
    sub_1B29A3EB4(&qword_1E9C39CF8);
    char v5 = (void *)sub_1B29C429C();
    sub_1B29C41E8(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)sub_1B29C4338();
    sub_1B29BE770(v6, v7, v8);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v9 = sub_1B29C428C();
    sub_1B29BD444(v9, v10, v11, v12);
  }
}

void sub_1B29B9D80()
{
}

void sub_1B29B9D94()
{
}

void sub_1B29B9DC8()
{
}

uint64_t sub_1B29B9DDC()
{
  return sub_1B29B7EBC();
}

void sub_1B29B9DF0()
{
}

uint64_t sub_1B29B9E04(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1B29B8194(a1, a2, a3, a4, &qword_1E9C39A90, (uint64_t (*)(void))type metadata accessor for KGQ.Value, (void (*)(void))type metadata accessor for KGQ.Value);
}

void sub_1B29B9E4C()
{
}

void sub_1B29B9E80()
{
}

void sub_1B29B9E8C()
{
}

void sub_1B29B9EC0()
{
}

void sub_1B29B9ED4()
{
}

void sub_1B29B9F08()
{
  sub_1B29C42D0();
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    uint64_t v8 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v8);
  }
  if (v2)
  {
    uint64_t v9 = sub_1B29C4250();
    v1(v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C427C();
    v0(v10);
  }
  sub_1B29A4118();
}

void sub_1B29B9FB0()
{
}

void sub_1B29B9FE4()
{
}

uint64_t sub_1B29BA018(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1B29B8194(a1, a2, a3, a4, &qword_1EB7E3A80, MEMORY[0x1E4F62D08], MEMORY[0x1E4F62D08]);
}

uint64_t sub_1B29BA060(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1B29B8194(a1, a2, a3, a4, (uint64_t *)&unk_1E9C39A08, MEMORY[0x1E4FB3B00], MEMORY[0x1E4FB3B00]);
}

void sub_1B29BA0A8()
{
}

void sub_1B29BA0DC()
{
  sub_1B29C42D0();
  sub_1B29C41D4();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    uint64_t v8 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v8);
  }
  if (v2)
  {
    uint64_t v9 = sub_1B29C4250();
    v1(v9);
    sub_1B29C4210();
  }
  else
  {
    uint64_t v10 = sub_1B29C427C();
    v0(v10);
  }
  sub_1B29A4118();
}

void sub_1B29BA184()
{
}

void sub_1B29BA198()
{
}

void sub_1B29BA1CC()
{
}

uint64_t sub_1B29BA1E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BA2D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 144 * a1 + 32;
    unint64_t v6 = a3 + 144 * v4;
    if (v5 >= v6 || v5 + 144 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BA3D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 112 * a1 + 32;
    unint64_t v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

char *sub_1B29BA4DC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BA5CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 112 * a1 + 32;
    unint64_t v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BA6D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 120 * a1 + 32;
    unint64_t v6 = a3 + 120 * v4;
    if (v5 >= v6 || v5 + 120 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BA7D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BA8D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BA9CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_1B29A3EB4(&qword_1E9C3A1F0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BAAF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BABF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + 40 * a1 + 32;
  unint64_t v6 = a3 + 40 * v4;
  if (v5 >= v6 || v5 + 40 * v4 <= a3)
  {
    sub_1B29C4490();
    swift_bridgeObjectRelease();
    return v6;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  uint64_t result = sub_1B29A1598();
  __break(1u);
  return result;
}

uint64_t sub_1B29BACB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + 112 * a1 + 32;
  unint64_t v6 = a3 + 112 * v4;
  if (v5 >= v6 || v5 + 112 * v4 <= a3)
  {
    sub_1B29C4490();
    swift_bridgeObjectRelease();
    return v6;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  uint64_t result = sub_1B29A1598();
  __break(1u);
  return result;
}

char *sub_1B29BAD74(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    unint64_t v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1B2E834A8();
  __break(1u);
  return result;
}

char *sub_1B29BAE68(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    unint64_t v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BAF5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 112 * a1 + 32;
    unint64_t v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BB060(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BB160(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BB264(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BB35C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BB45C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BB55C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BB65C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      sub_1B29A3EB4(&qword_1E9C38920);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BB77C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1B29A3EB4(&qword_1E9C3A1A0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BB894(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1B29A3EB4(&qword_1E9C3A190);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BB9B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1B29A3EB4(&qword_1E9C3A168);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BBAD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 1128 * a1 + 32;
    unint64_t v6 = a3 + 1128 * v4;
    if (v5 >= v6 || v5 + 1128 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BBBD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

char *sub_1B29BBCD4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    unint64_t v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BBDC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BBEC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 296 * a1 + 32;
    unint64_t v6 = a3 + 296 * v4;
    if (v5 >= v6 || v5 + 296 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BBFC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BC0C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BC1C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 184 * a1 + 32;
    unint64_t v6 = a3 + 184 * v4;
    if (v5 >= v6 || v5 + 184 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

char *sub_1B29BC2C8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    uint64_t v6 = 3 * v4;
    uint64_t v7 = &__dst[8 * v6];
    if (v5 >= v7 || &v5[8 * v6] <= __dst)
    {
      memcpy(__dst, v5, 8 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  uint64_t result = (char *)sub_1B2E834A8();
  __break(1u);
  return result;
}

char *sub_1B29BC3C4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    uint64_t v6 = &__dst[32 * v4];
    if (v5 >= v6 || &v5[32 * v4] <= __dst)
    {
      memcpy(__dst, v5, 32 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1B2E834A8();
  __break(1u);
  return result;
}

void sub_1B29BC4B8()
{
  sub_1B29C442C();
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v1 - v0 < 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  sub_1B29C4440();
  if (v5) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v4 > v2;
  }
  if (!v6)
  {
    sub_1B29A3EB4(v3);
    sub_1B29C4388();
    swift_bridgeObjectRelease();
    sub_1B29C447C();
    return;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  sub_1B29A1598();
  __break(1u);
}

uint64_t sub_1B29BC56C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 120 * a1 + 32;
    unint64_t v6 = a3 + 120 * v4;
    if (v5 >= v6 || v5 + 120 * v4 <= a3)
    {
      sub_1B29A3EB4(&qword_1E9C3A0A8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BC690(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BC790(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 232 * a1 + 32;
    unint64_t v6 = a3 + 232 * v4;
    if (v5 >= v6 || v5 + 232 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BC890(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + (a1 << 6) + 32;
  unint64_t v6 = a3 + (v4 << 6);
  if (v5 >= v6 || v5 + (v4 << 6) <= a3)
  {
    sub_1B29C4490();
    swift_bridgeObjectRelease();
    return v6;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  uint64_t result = sub_1B29A1598();
  __break(1u);
  return result;
}

void sub_1B29BC948()
{
  sub_1B29C442C();
  uint64_t v5 = v4 - v0;
  if (__OFSUB__(v4, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  unint64_t v6 = v2 + (v0 << 6) + 32;
  if (v6 >= v1 + (v5 << 6) || v6 + (v5 << 6) <= v1)
  {
    sub_1B29A3EB4(v3);
    sub_1B29C4388();
    swift_bridgeObjectRelease();
    sub_1B29C447C();
    return;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  sub_1B29A1598();
  __break(1u);
}

void sub_1B29BCA14()
{
  sub_1B29C442C();
  uint64_t v5 = v4 - v0;
  if (__OFSUB__(v4, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  unint64_t v6 = v2 + 40 * v0 + 32;
  if (v6 >= v1 + 40 * v5 || v6 + 40 * v5 <= v1)
  {
    sub_1B29A3EB4(v3);
    sub_1B29C4388();
    swift_bridgeObjectRelease();
    sub_1B29C447C();
    return;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  sub_1B29A1598();
  __break(1u);
}

uint64_t sub_1B29BCAE8(uint64_t a1, uint64_t a2)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  sub_1B29C44D4();
  if (v7) {
    BOOL v8 = 0;
  }
  else {
    BOOL v8 = v6 > (unint64_t)v4;
  }
  if (!v8)
  {
    sub_1B29C45F0(v4, v3, 8 * v5);
    swift_bridgeObjectRelease();
    return v2;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  uint64_t result = sub_1B29A1598();
  __break(1u);
  return result;
}

uint64_t sub_1B29BCB90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BCC88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

char *sub_1B29BCD80(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 2 * a1 + 32);
    unint64_t v6 = &__dst[2 * v4];
    if (v5 >= v6 || &v5[2 * v4] <= __dst)
    {
      memcpy(__dst, v5, 2 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BCE74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1B29A3EB4(&qword_1E9C39A70);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BCF94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BD08C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BD184(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_1B29A3EB4(&qword_1E9C39F70);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BD29C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 400 * a1 + 32;
    unint64_t v6 = a3 + 400 * v4;
    if (v5 >= v6 || v5 + 400 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BD39C(uint64_t a1, uint64_t a2)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  sub_1B29C44F0();
  if (v7) {
    BOOL v8 = 0;
  }
  else {
    BOOL v8 = v6 > (unint64_t)v4;
  }
  if (!v8)
  {
    sub_1B29C45F0(v4, v3, 16 * v5);
    swift_bridgeObjectRelease();
    return v2;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  uint64_t result = sub_1B29A1598();
  __break(1u);
  return result;
}

uint64_t sub_1B29BD444(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1B29A3EB4(&qword_1E9C39D00);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BD564(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BD664(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  sub_1B29A3EB4(a5);
  sub_1B299D2C0();
  sub_1B29C458C();
  if (v8) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v7 > a3;
  }
  if (!v9)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return a1;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  uint64_t result = sub_1B29A1598();
  __break(1u);
  return result;
}

uint64_t sub_1B29BD75C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BD85C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  unint64_t v5 = (char *)(a4 + a1 + 32);
  unint64_t v6 = &a3[v4];
  if (v5 >= &a3[v4] || &v5[v4] <= a3)
  {
    sub_1B29C45F0(a3, v5, v4);
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  uint64_t result = sub_1B29A1598();
  __break(1u);
  return result;
}

uint64_t sub_1B29BD914(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + 32 * a1 + 32;
  unint64_t v6 = a3 + 32 * v4;
  if (v5 >= v6 || v5 + 32 * v4 <= a3)
  {
    sub_1B29C4490();
    swift_bridgeObjectRelease();
    return v6;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  uint64_t result = sub_1B29A1598();
  __break(1u);
  return result;
}

uint64_t sub_1B29BD9CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 184 * a1 + 32;
    unint64_t v6 = a3 + 184 * v4;
    if (v5 >= v6 || v5 + 184 * v4 <= a3)
    {
      sub_1B29A3EB4(&qword_1E9C39A38);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BDAEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void))
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  a5(0);
  sub_1B299D2C0();
  sub_1B29C458C();
  if (v8) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v7 > a3;
  }
  if (!v9)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return a1;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  uint64_t result = sub_1B29A1598();
  __break(1u);
  return result;
}

uint64_t sub_1B29BDBE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B29BDCE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1B29A3EB4(&qword_1E9C39958);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

void sub_1B29BDE00()
{
  sub_1B29C442C();
  uint64_t v5 = v4 - v0;
  if (__OFSUB__(v4, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1B299D294();
    sub_1B29C426C();
    goto LABEL_11;
  }
  unint64_t v6 = v2 + 8 * v0 + 32;
  if (v6 >= v1 + 8 * v5 || v6 + 8 * v5 <= v1)
  {
    sub_1B29A3EB4(v3);
    sub_1B29C4388();
    swift_bridgeObjectRelease();
    sub_1B29C447C();
    return;
  }
  sub_1B299D294();
  sub_1B29A24C4();
LABEL_11:
  sub_1B29A1598();
  __break(1u);
}

char *sub_1B29BDECC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BDF28(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BDF8C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[144 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 144 * a2);
  }
  return __src;
}

char *sub_1B29BE028(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[112 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BE090(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_1B29BE124(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[112 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 112 * a2);
  }
  return __src;
}

char *sub_1B29BE1C0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_1B29BE254(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[120 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BE2B8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[88 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BE31C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[56 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 56 * a2);
  }
  return __src;
}

char *sub_1B29BE3B8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_1B29BE454(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[112 * a2] <= a3)
  {
    return (char *)sub_1B29C4534(a3, 112 * a2);
  }
  return result;
}

char *sub_1B29BE4B4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_1B29BE548(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[4 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 4 * a2);
  }
  return __src;
}

char *sub_1B29BE5DC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[88 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 88 * a2);
  }
  return __src;
}

char *sub_1B29BE678(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

char *sub_1B29BE710(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[104 * a2] <= a3)
  {
    return (char *)sub_1B29C4534(a3, 104 * a2);
  }
  return result;
}

char *sub_1B29BE770(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BE7D8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[296 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 296 * a2);
  }
  return __src;
}

char *sub_1B29BE870(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BE8D4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_1B29BE970(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[80 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 80 * a2);
  }
  return __src;
}

char *sub_1B29BEA0C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[1128 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BEA70(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[80 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BEAD0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[104 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 104 * a2);
  }
  return __src;
}

char *sub_1B29BEB6C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

char *sub_1B29BEC08(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[184 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 184 * a2);
  }
  return __src;
}

char *sub_1B29BECA0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BECFC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[120 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 120 * a2);
  }
  return __src;
}

char *sub_1B29BED98(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[232 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 232 * a2);
  }
  return __src;
}

char *sub_1B29BEE34(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[64 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BEE90(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BEEF0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[56 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BEF58(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[2 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 2 * a2);
  }
  return __src;
}

char *sub_1B29BEFF0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

char *sub_1B29BF04C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[64 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, a2 << 6);
  }
  return __src;
}

char *sub_1B29BF0E0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[400 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 400 * a2);
  }
  return __src;
}

char *sub_1B29BF17C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[96 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 96 * a2);
  }
  return __src;
}

char *sub_1B29BF218(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[192 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 192 * a2);
  }
  return __src;
}

char *sub_1B29BF2B4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[224 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 224 * a2);
  }
  return __src;
}

char *sub_1B29BF350(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B2E834A8();
    __break(1u);
  }
  else if (__dst != __src || &__src[184 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 184 * a2);
  }
  return __src;
}

void sub_1B29BF3EC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C41A0();
    __break(1u);
  }
  else
  {
    sub_1B29C4574();
    if (v6 && (sub_1B29A3EB4(v5), sub_1B2999864(), v3 + *(void *)(v7 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        sub_1B29C43E0();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      sub_1B29A3EB4(v5);
      sub_1B29C43E0();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

char *sub_1B29BF4D0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    uint64_t result = (char *)sub_1B29C41A0();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)sub_1B29A24A8(a3, result);
  }
  return result;
}

void sub_1B29BF530(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1B299D294();
    sub_1B29C41A0();
    __break(1u);
  }
  else
  {
    sub_1B29C4574();
    if (v6 && (v5(0), sub_1B2999864(), v3 + *(void *)(v7 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        sub_1B29C43E0();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      v5(0);
      sub_1B29C43E0();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

uint64_t sub_1B29BF61C(uint64_t (*a1)(void))
{
  return a1();
}

#error "1B29BF678: call analysis failed (funcsize=30)"

void sub_1B29BF6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t ObjectType, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B29C442C();
  a19 = v20;
  a20 = v21;
  unint64_t v23 = v22;
  unint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_1B299F2A4();
  uint64_t v31 = sub_1B29BF784(v28, v29, v30, 1, v27, v25);
  if (v31)
  {
    uint64_t v32 = v31;
    ObjectType = swift_getObjectType();
    a9 = v32;
    uint64_t v33 = *v23;
    if (*v23)
    {
      sub_1B29C3B28((uint64_t)&a9, *v23);
      *unint64_t v23 = v33 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E4FBB9B0];
    a9 = v27;
    a10 = v25;
    uint64_t v34 = *v23;
    if (*v23)
    {
      sub_1B29C3B28((uint64_t)&a9, *v23);
      *unint64_t v23 = v34 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&a9);
  sub_1B29C447C();
}

uint64_t sub_1B29BF784(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1B29BF8DC((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_1B2E82FC8();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_1B29BF9B4(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_1B2E83298();
    if (!v8)
    {
      uint64_t result = sub_1B2E83408();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_1B29BF8DC(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_1B2E834A8();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_1B29BF9B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1B29BFA4C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_1B29BFBC0(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_1B29BFBC0((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1B29BFA4C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_1B2E82558();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x1E4FBC860];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_6:
  unint64_t v3 = sub_1B2A71078(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_1B2E83208();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_1B2E834A8();
  __break(1u);
LABEL_14:
  uint64_t result = sub_1B2E83408();
  __break(1u);
  return result;
}

char *sub_1B29BFBC0(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1B29A3EB4(qword_1EB7D9948);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1B29BE090(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B29BFC98(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1B29BFC98(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_1B2E834A8();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

unsigned char **sub_1B29BFD70(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void sub_1B29BFD80()
{
  sub_1B29C1BD0();
  *uint64_t v0 = v1;
}

void sub_1B29BFDD0()
{
  sub_1B29C2C8C();
  *uint64_t v0 = v1;
}

void sub_1B29BFE34()
{
  sub_1B29C2840();
  *uint64_t v0 = v1;
}

void sub_1B29BFE84()
{
  sub_1B29C1C90();
  *uint64_t v0 = v1;
}

void sub_1B29BFED4()
{
  sub_1B29C2308();
  *uint64_t v0 = v1;
}

void sub_1B29BFF10()
{
  sub_1B29C1B0C();
  *uint64_t v0 = v1;
}

void sub_1B29BFF4C()
{
  sub_1B29C1B0C();
  *uint64_t v0 = v1;
}

void sub_1B29BFF88()
{
  sub_1B29C1BD0();
  *uint64_t v0 = v1;
}

void sub_1B29BFFD8()
{
  sub_1B29C1C90();
  *uint64_t v0 = v1;
}

void sub_1B29C0028()
{
  sub_1B29C1D3C();
  *uint64_t v0 = v1;
}

uint64_t sub_1B29C0078(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B29C1DFC(a1, a2, a3, *v3);
  *BOOL v3 = result;
  return result;
}

uint64_t sub_1B29C0098(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B29C1F1C(a1, a2, a3, *v3);
  *BOOL v3 = result;
  return result;
}

void sub_1B29C00B8()
{
  sub_1B29C20E0();
  *uint64_t v0 = v1;
}

uint64_t sub_1B29C0108(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B29C2008(a1, a2, a3, *v3);
  *BOOL v3 = result;
  return result;
}

void sub_1B29C0128()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0178()
{
  sub_1B29C26D8();
  *uint64_t v0 = v1;
}

void sub_1B29C01C8()
{
  sub_1B29C20E0();
  *uint64_t v0 = v1;
}

void sub_1B29C0218()
{
  sub_1B29C218C();
  *uint64_t v0 = v1;
}

void sub_1B29C0254()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C02A4()
{
  sub_1B29C2308();
  *uint64_t v0 = v1;
}

void sub_1B29C02E0()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0330()
{
  sub_1B29C1D3C();
  *uint64_t v0 = v1;
}

uint64_t sub_1B29C0380(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B29C24C4(a1, a2, a3, *v3);
  *BOOL v3 = result;
  return result;
}

void sub_1B29C03A0()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C03F0()
{
  sub_1B29C25B0();
  *uint64_t v0 = v1;
}

void sub_1B29C0440()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0490()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C04E0()
{
  sub_1B29C32B8();
  *uint64_t v0 = v1;
}

void sub_1B29C0530()
{
  sub_1B29C26D8();
  *uint64_t v0 = v1;
}

void sub_1B29C0580()
{
  sub_1B29C2840();
  *uint64_t v0 = v1;
}

void sub_1B29C05D0()
{
  sub_1B29C1BD0();
  *uint64_t v0 = v1;
}

void sub_1B29C0620()
{
  sub_1B29C28EC();
  *uint64_t v0 = v1;
}

void sub_1B29C0670()
{
  sub_1B29C28EC();
  *uint64_t v0 = v1;
}

void sub_1B29C06C0()
{
  sub_1B29C32B8();
  *uint64_t v0 = v1;
}

void sub_1B29C0710()
{
  sub_1B29C2798();
  *uint64_t v0 = v1;
}

void sub_1B29C0730()
{
  sub_1B29C28EC();
  *uint64_t v0 = v1;
}

void sub_1B29C0780()
{
  sub_1B29C218C();
  *uint64_t v0 = v1;
}

void sub_1B29C07BC()
{
  sub_1B29C29AC();
  *uint64_t v0 = v1;
}

void sub_1B29C080C()
{
  sub_1B29C218C();
  *uint64_t v0 = v1;
}

void sub_1B29C0848()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0898()
{
  sub_1B29C29AC();
  *uint64_t v0 = v1;
}

void sub_1B29C08E8()
{
  sub_1B29C1D3C();
  *uint64_t v0 = v1;
}

void sub_1B29C0938()
{
  sub_1B29C29AC();
  *uint64_t v0 = v1;
}

void sub_1B29C0988()
{
  sub_1B29C2A58();
  *uint64_t v0 = v1;
}

void sub_1B29C09C4()
{
  sub_1B29C2A58();
  *uint64_t v0 = v1;
}

void sub_1B29C0A00()
{
  sub_1B29C2C8C();
  *uint64_t v0 = v1;
}

void sub_1B29C0A64()
{
  sub_1B29C2DE4();
  *uint64_t v0 = v1;
}

void sub_1B29C0AA8()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0AF8()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0B48()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0B98()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0BE8()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0C38()
{
  sub_1B29C2DE4();
  *uint64_t v0 = v1;
}

void sub_1B29C0C7C()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0CCC()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0D1C()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0D6C()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0DBC()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0E0C()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0E5C()
{
  sub_1B29C2DE4();
  *uint64_t v0 = v1;
}

void sub_1B29C0EA0()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0EF0()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0F40()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0F90()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C0FE0()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C1030()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C1080()
{
  sub_1B29C2DE4();
  *uint64_t v0 = v1;
}

void sub_1B29C10C4()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C1114()
{
  sub_1B29C2DE4();
  *uint64_t v0 = v1;
}

void sub_1B29C1158()
{
  sub_1B29C1BD0();
  *uint64_t v0 = v1;
}

void sub_1B29C11A8()
{
  sub_1B29C1D3C();
  *uint64_t v0 = v1;
}

void sub_1B29C11F8()
{
  sub_1B29C2C8C();
  *uint64_t v0 = v1;
}

void sub_1B29C125C()
{
  sub_1B29C2F18();
  *uint64_t v0 = v1;
}

void sub_1B29C12AC()
{
  sub_1B29C1C90();
  *uint64_t v0 = v1;
}

void sub_1B29C12FC()
{
  sub_1B29C2840();
  *uint64_t v0 = v1;
}

uint64_t sub_1B29C134C(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B29C2FC4(a1, a2, a3, *v3);
  *BOOL v3 = result;
  return result;
}

void sub_1B29C136C()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

uint64_t sub_1B29C13BC(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B29C30B0(a1, a2, a3, *v3);
  *BOOL v3 = result;
  return result;
}

uint64_t sub_1B29C13DC(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B29C3198(a1, a2, a3, *v3);
  *BOOL v3 = result;
  return result;
}

void sub_1B29C13FC()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C144C()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C149C()
{
  sub_1B29C23E4();
  *uint64_t v0 = v1;
}

void sub_1B29C14EC()
{
  sub_1B29C29AC();
  *uint64_t v0 = v1;
}

void sub_1B29C153C()
{
  sub_1B29C25B0();
  *uint64_t v0 = v1;
}

void sub_1B29C158C()
{
  sub_1B29C2248();
  *uint64_t v0 = v1;
}

void sub_1B29C15DC()
{
  sub_1B29C2B34();
  *uint64_t v0 = v1;
}

void sub_1B29C162C()
{
  sub_1B29C2C8C();
  *uint64_t v0 = v1;
}

void sub_1B29C1690()
{
  sub_1B29C2840();
  *uint64_t v0 = v1;
}

void sub_1B29C16E0()
{
  sub_1B29C32B8();
  *uint64_t v0 = v1;
}

void sub_1B29C1730()
{
  sub_1B29C2C8C();
  *uint64_t v0 = v1;
}

void sub_1B29C1794()
{
  sub_1B29C1D3C();
  *uint64_t v0 = v1;
}

void sub_1B29C17E4()
{
  sub_1B29C1D3C();
  *uint64_t v0 = v1;
}

void sub_1B29C1834()
{
  sub_1B29C2DE4();
  *uint64_t v0 = v1;
}

void sub_1B29C1878()
{
  sub_1B29C2C8C();
  *uint64_t v0 = v1;
}

void sub_1B29C18DC()
{
  sub_1B29C1D3C();
  *uint64_t v0 = v1;
}

void sub_1B29C192C()
{
  sub_1B29C2B34();
  *uint64_t v0 = v1;
}

void sub_1B29C197C()
{
  sub_1B29C1D3C();
  *uint64_t v0 = v1;
}

void sub_1B29C19CC()
{
  sub_1B29C2C8C();
  *uint64_t v0 = v1;
}

void sub_1B29C1A30()
{
}

void sub_1B29C1A64()
{
}

void sub_1B29C1A98()
{
}

void sub_1B29C1ACC()
{
}

void sub_1B29C1AEC()
{
}

void sub_1B29C1B0C()
{
  sub_1B29C42F8();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C4344();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    int64_t v8 = (const void *)swift_allocObject();
    size_t v9 = j__malloc_size(v8);
    sub_1B29C4420((uint64_t)(v9 - 32) / 64);
  }
  uint64_t v10 = (char *)sub_1B29C4414();
  if (v2)
  {
    sub_1B29BEE34(v10, v11, v12);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v10);
  }
  swift_release();
}

void sub_1B29C1BD0()
{
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    size_t v9 = (const void *)sub_1B29C42B8();
    size_t v10 = j__malloc_size(v9);
    sub_1B29C4244((uint64_t)(v10 - 32) / 16);
  }
  uint64_t v11 = sub_1B29C4250();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

void sub_1B29C1C90()
{
  sub_1B29C42D0();
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    size_t v9 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v9);
  }
  uint64_t v10 = sub_1B29C4250();
  if (v3)
  {
    v2(v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v10);
  }
  swift_release();
  sub_1B29A4118();
}

void sub_1B29C1D3C()
{
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    size_t v9 = (const void *)sub_1B29C42B8();
    size_t v10 = j__malloc_size(v9);
    sub_1B29C4244((uint64_t)(v10 - 32) / 16);
  }
  uint64_t v11 = sub_1B29C4250();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

uint64_t sub_1B29C1DFC(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1B29A3EB4(&qword_1E9C39FA0);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 144);
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    sub_1B29BDF8C((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B2AEED98();
  }
  swift_release();
  return v10;
}

void sub_1B29C1EE8()
{
}

uint64_t sub_1B29C1F1C(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1B29A3EB4((uint64_t *)&unk_1EB7D9AE0);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 112);
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    sub_1B29BE454((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B2AEF5D4();
  }
  swift_release();
  return v10;
}

uint64_t sub_1B29C2008(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1B29A3EB4(&qword_1E9C398B0);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    sub_1B29BE090((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B2AEF680();
  }
  swift_release();
  return v10;
}

void sub_1B29C20E0()
{
  sub_1B29C42D0();
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    int64_t v9 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v9);
  }
  uint64_t v10 = sub_1B29C4250();
  if (v3)
  {
    v2(v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v10);
  }
  swift_release();
  sub_1B29A4118();
}

void sub_1B29C218C()
{
  sub_1B29C42F8();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C4344();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    int64_t v9 = (void *)swift_allocObject();
    size_t v10 = j__malloc_size(v9);
    v9[2] = v3;
    v9[3] = 2 * v10 - 64;
  }
  size_t v11 = (char *)sub_1B29C4414();
  if (v2)
  {
    sub_1B29BE090(v11, v12, v13);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

void sub_1B29C2248()
{
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    int64_t v9 = (const void *)sub_1B29C42B8();
    size_t v10 = j__malloc_size(v9);
    sub_1B29C4244((uint64_t)(v10 - 32) / 8);
  }
  uint64_t v11 = sub_1B29C4250();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

void sub_1B29C2308()
{
  sub_1B29C42F8();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C4344();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    int64_t v8 = (void *)sub_1B29C4460();
    sub_1B29C4360(v8);
  }
  int64_t v9 = (char *)sub_1B29C4414();
  if (v2)
  {
    sub_1B29BE710(v9, v10, v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v9);
  }
  swift_release();
}

void sub_1B29C23B0()
{
}

void sub_1B29C23E4()
{
  sub_1B29C42D0();
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    int64_t v9 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v9);
  }
  uint64_t v10 = sub_1B29C4250();
  if (v3)
  {
    v2(v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v10);
  }
  swift_release();
  sub_1B29A4118();
}

void sub_1B29C2490()
{
}

uint64_t sub_1B29C24C4(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1B29A3EB4(&qword_1EB7D98F8);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 296);
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    sub_1B29BE7D8((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B2AEF9FC();
  }
  swift_release();
  return v10;
}

void sub_1B29C25B0()
{
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    uint64_t v9 = (const void *)sub_1B29C42B8();
    size_t v10 = j__malloc_size(v9);
    sub_1B29C4244((uint64_t)(v10 - 32) / 8);
  }
  uint64_t v11 = sub_1B29C4250();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

void sub_1B29C2670()
{
}

void sub_1B29C26A4()
{
}

void sub_1B29C26D8()
{
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    uint64_t v9 = (const void *)sub_1B29C42B8();
    size_t v10 = j__malloc_size(v9);
    sub_1B29C4244((uint64_t)(v10 - 32) / 4);
  }
  uint64_t v11 = sub_1B29C4250();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

void sub_1B29C2798()
{
  sub_1B29C432C();
  if (v3)
  {
    sub_1B29C41C4();
    if (v4 != v5)
    {
      sub_1B299F298();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v2)
  {
    sub_1B29A3EB4(&qword_1EB7D98D8);
    char v6 = (void *)sub_1B29C429C();
    sub_1B29C41E8(v6);
  }
  char v7 = (char *)sub_1B29C4338();
  if (v1)
  {
    sub_1B29BEA0C(v7, v8, v9);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_1B2AEFCC0();
  }
  swift_release();
}

void sub_1B29C2840()
{
  sub_1B29C42D0();
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    uint64_t v9 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v9);
  }
  uint64_t v10 = sub_1B29C4250();
  if (v3)
  {
    v2(v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v10);
  }
  swift_release();
  sub_1B29A4118();
}

void sub_1B29C28EC()
{
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    uint64_t v9 = (const void *)sub_1B29C42B8();
    size_t v10 = j__malloc_size(v9);
    sub_1B29C4244((uint64_t)(v10 - 32) / 32);
  }
  uint64_t v11 = sub_1B29C4250();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

void sub_1B29C29AC()
{
  sub_1B29C42D0();
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    uint64_t v9 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v9);
  }
  uint64_t v10 = sub_1B29C4250();
  if (v3)
  {
    v2(v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v10);
  }
  swift_release();
  sub_1B29A4118();
}

void sub_1B29C2A58()
{
  sub_1B29C42F8();
  if (v4)
  {
    sub_1B29C41C4();
    if (v5 != v6)
    {
      sub_1B299F298();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C4344();
  if (v3)
  {
    sub_1B29A3EB4(v7);
    uint64_t v8 = (void *)sub_1B29C4460();
    sub_1B29C4360(v8);
  }
  uint64_t v9 = (char *)sub_1B29C4414();
  if (v2)
  {
    sub_1B29BEEF0(v9, v10, v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v9);
  }
  swift_release();
}

void sub_1B29C2B00()
{
}

void sub_1B29C2B34()
{
  sub_1B29C42D0();
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    uint64_t v9 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v9);
  }
  uint64_t v10 = sub_1B29C4250();
  if (v3)
  {
    v2(v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v10);
  }
  swift_release();
  sub_1B29A4118();
}

void sub_1B29C2BE0()
{
  sub_1B29C432C();
  if (v3)
  {
    sub_1B29C41C4();
    if (v4 != v5)
    {
      sub_1B299F298();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v2)
  {
    sub_1B29A3EB4(&qword_1E9C39A78);
    char v6 = (const void *)sub_1B29C42B8();
    sub_1B29C4690(v6);
    sub_1B29C4354(v7 / 32);
  }
  uint64_t v8 = (char *)sub_1B29C4338();
  if (v1)
  {
    sub_1B29BEFF0(v8, v9, v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_1B2AF0594();
  }
  swift_release();
}

void sub_1B29C2C8C()
{
  sub_1B299B720();
  char v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8;
  if (v10)
  {
    sub_1B29C41C4();
    if (v12 != v13)
    {
      sub_1B299F298();
      if (v12)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  else
  {
    uint64_t v11 = v0;
  }
  uint64_t v14 = *(void *)(v7 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(v7 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  sub_1B29A3EB4(v1);
  uint64_t v16 = v5(0);
  sub_1B299D2A8(v16);
  uint64_t v18 = *(void *)(v17 + 72);
  uint64_t v19 = (void *)sub_1B29C44AC();
  j__malloc_size(v19);
  if (!v18)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1B29C4670();
  BOOL v21 = v21 && v18 == -1;
  if (v21) {
    goto LABEL_23;
  }
  v19[2] = v14;
  v19[3] = 2 * (v20 / v18);
LABEL_18:
  uint64_t v22 = *(void *)(v5(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = v7 + v23;
  if (v9)
  {
    sub_1B29BF530(v24, v14);
    *(void *)(v7 + 16) = 0;
  }
  else
  {
    v3(v24, v14, (char *)v19 + v23);
  }
  swift_release();
  sub_1B299B738();
}

void sub_1B29C2DE4()
{
  sub_1B299B720();
  sub_1B29A4104();
  if (v6)
  {
    sub_1B29C41C4();
    if (v8 != v9)
    {
      sub_1B299F298();
      if (v8)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (!v11)
  {
    uint64_t v15 = (char *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  sub_1B29A3EB4(v5);
  uint64_t v12 = sub_1B29A3EB4(v2);
  sub_1B299D2A8(v12);
  uint64_t v14 = *(void *)(v13 + 72);
  uint64_t v15 = (char *)swift_allocObject();
  j__malloc_size(v15);
  if (!v14)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1B29C4670();
  BOOL v17 = v17 && v14 == -1;
  if (v17) {
    goto LABEL_23;
  }
  sub_1B29C4244(v16 / v14);
LABEL_18:
  uint64_t v18 = sub_1B29A3EB4(v2);
  sub_1B29C42E4(v18);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = v0 + v20;
  if (v3)
  {
    sub_1B29BF3EC(v21, v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v21, v10, &v15[v20]);
  }
  swift_release();
  sub_1B299B738();
}

void sub_1B29C2F18()
{
  sub_1B29C42D0();
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    char v9 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v9);
  }
  uint64_t v10 = sub_1B29C4250();
  if (v3)
  {
    v2(v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v10);
  }
  swift_release();
  sub_1B29A4118();
}

uint64_t sub_1B29C2FC4(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1B29A3EB4(&qword_1E9C39C48);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    sub_1B29BF17C((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B2AF0910();
  }
  swift_release();
  return v10;
}

uint64_t sub_1B29C30B0(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1B29A3EB4(&qword_1E9C39C58);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 192);
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    sub_1B29BF218((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B2AF09D8();
  }
  swift_release();
  return v10;
}

uint64_t sub_1B29C3198(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1B29A3EB4(&qword_1E9C39C28);
    uint64_t v10 = swift_allocObject();
    size_t v11 = j__malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 224);
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    sub_1B29BF2B4((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B2AF0A88();
  }
  swift_release();
  return v10;
}

void sub_1B29C3284()
{
}

void sub_1B29C32B8()
{
  sub_1B29C42D0();
  sub_1B29A4104();
  if (v5)
  {
    sub_1B29C41C4();
    if (v6 != v7)
    {
      sub_1B299F298();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29A4C00();
  if (v4)
  {
    sub_1B29A3EB4(v8);
    uint64_t v9 = (void *)sub_1B29C4228();
    sub_1B29A03D0(v9);
  }
  uint64_t v10 = sub_1B29C4250();
  if (v3)
  {
    v2(v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v10);
  }
  swift_release();
  sub_1B29A4118();
}

void sub_1B29C3364()
{
  sub_1B29C432C();
  if (v3)
  {
    sub_1B29C41C4();
    if (v4 != v5)
    {
      sub_1B299F298();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1B29A1588();
    }
  }
  sub_1B29C425C();
  if (v2)
  {
    sub_1B29A3EB4(&qword_1E9C39910);
    char v6 = (void *)sub_1B29C429C();
    sub_1B29C41E8(v6);
  }
  char v7 = (char *)sub_1B29C4338();
  if (v1)
  {
    sub_1B29BE254(v7, v8, v9);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_1B2AEF284();
  }
  swift_release();
}

id sub_1B29C340C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v6 = (void *)sub_1B2E82348();
  char v7 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  return v8;
}

unint64_t sub_1B29C348C()
{
  unint64_t result = qword_1E9C39888;
  if (!qword_1E9C39888)
  {
    sub_1B2E80498();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39888);
  }
  return result;
}

uint64_t sub_1B29C34DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unint64_t sub_1B29C3534()
{
  unint64_t result = qword_1EB7D9C08;
  if (!qword_1EB7D9C08)
  {
    sub_1B29C3588(qword_1EB7D9C18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9C08);
  }
  return result;
}

uint64_t sub_1B29C3588(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1B29C35D0()
{
  unint64_t result = qword_1E9C39890;
  if (!qword_1E9C39890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C39890);
  }
  return result;
}

uint64_t type metadata accessor for DictionaryTrie()
{
  return self;
}

unint64_t sub_1B29C3640()
{
  unint64_t result = qword_1EB7E6260;
  if (!qword_1EB7E6260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E6260);
  }
  return result;
}

void sub_1B29C368C()
{
  sub_1B29C442C();
  uint64_t v0 = sub_1B2E824A8();
  if (v0)
  {
    uint64_t v1 = v0;
    sub_1B29C37D4(v0, 0);
    swift_bridgeObjectRetain();
    sub_1B29C3720();
    uint64_t v3 = v2;
    swift_bridgeObjectRelease();
    if (v3 != v1) {
      __break(1u);
    }
  }
  sub_1B29C447C();
}

void sub_1B29C3720()
{
  sub_1B29C442C();
  char v5 = v4;
  uint64_t v6 = HIBYTE(v3) & 0xF;
  uint64_t v12 = v2;
  unint64_t v13 = v3;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v6 = v2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v14 = v6;
  if (!v0 || (uint64_t v7 = v1) == 0)
  {
LABEL_14:
    *char v5 = v2;
    v5[1] = v3;
    v5[2] = 0;
    v5[3] = v6;
    sub_1B29C447C();
    return;
  }
  if ((v1 & 0x8000000000000000) == 0)
  {
    id v8 = v0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = sub_1B2E82548();
      if (!v11) {
        break;
      }
      ++v9;
      *id v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        uint64_t v2 = v12;
        unint64_t v3 = v13;
        goto LABEL_13;
      }
    }
    uint64_t v2 = v12;
    unint64_t v3 = v13;
LABEL_13:
    uint64_t v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
}

void *sub_1B29C37D4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B29A3EB4(&qword_1EB7E4AC0);
  char v4 = (void *)sub_1B29C42B8();
  j__malloc_size(v4);
  sub_1B29C46AC();
  v4[2] = a1;
  v4[3] = v5;
  return v4;
}

uint64_t sub_1B29C3834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v13 = *a6;
  uint64_t v14 = a6[1];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_1B29C419C;
  return sub_1B29B6504(a1, a2, a3, a4, a5, v13, v14, a7);
}

uint64_t sub_1B29C3930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = 0;
  char v5 = 0;
  unint64_t v6 = 0;
  char v7 = 0;
  do
  {
    BOOL v8 = a1 <= a2;
    if (a3 > 0) {
      BOOL v8 = a1 >= a2;
    }
    if (v8)
    {
      if ((a1 != a2) | v5 & 1) {
        return result;
      }
      if (v7)
      {
        char v5 = 1;
        a1 = a2;
        char v7 = 1;
      }
      else
      {
        if (v6 == 0x8000000000000000) {
          return result;
        }
        char v7 = 0;
        char v5 = 1;
        a1 = a2;
      }
    }
    else
    {
      BOOL v9 = __OFADD__(a1, a3);
      a1 += a3;
      char v10 = v9;
      BOOL v11 = (v10 & 1) == 0;
      if (v10)
      {
        a1 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
        unint64_t v6 = 0x8000000000000000;
      }
      else
      {
        unint64_t v6 = 0;
      }
      char v7 = v11;
    }
    BOOL v9 = __OFADD__(result++, 1);
  }
  while (!v9);
  __break(1u);
  return result;
}

uint64_t sub_1B29C39DC()
{
  uint64_t result = sub_1B2E82F38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TrieNode()
{
  return sub_1B29A1278();
}

uint64_t method lookup function for DictionaryTrie(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DictionaryTrie);
}

uint64_t type metadata accessor for AddressEmbedder()
{
  return self;
}

uint64_t method lookup function for AddressEmbedder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AddressEmbedder);
}

uint64_t dispatch thunk of AddressEmbedder.__allocating_init(modelName:dictionaryPaths:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1B29C3B28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1B29C3B84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1B29C3BE8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B29C3C44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B29C3CA0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1B29C3CDC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B29C3D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationEmbedderInferenceInterface.Output();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B29C3D9C()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 88, 7);
}

void sub_1B29C3DFC()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1B29C3F00;
  uint64_t v2 = (char *)&dword_1E9C3A258 + dword_1E9C3A258;
  __asm { BR              X9; sub_1B29C3834 }
}

uint64_t sub_1B29C3F00()
{
  sub_1B299B708();
  uint64_t v1 = *v0;
  sub_1B299B0E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1B299AD7C();
  return v3();
}

uint64_t sub_1B29C3FC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B29A3EB4(a3);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1B29C4020(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B29A3EB4(a3);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1B29C407C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B29C40E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationEmbedderInferenceInterface.Output();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B29C4148(uint64_t a1, uint64_t *a2)
{
  sub_1B29A3EB4(a2);
  sub_1B2999864();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1B29C41A0()
{
  return sub_1B2E834A8();
}

size_t sub_1B29C41E8(void *a1)
{
  size_t result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t sub_1B29C4210()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29C4228()
{
  return swift_allocObject();
}

void sub_1B29C4244(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

uint64_t sub_1B29C4250()
{
  return v0 + 32;
}

uint64_t sub_1B29C427C()
{
  return 0;
}

uint64_t sub_1B29C428C()
{
  return 0;
}

uint64_t sub_1B29C429C()
{
  return swift_allocObject();
}

uint64_t sub_1B29C42B8()
{
  return swift_allocObject();
}

uint64_t sub_1B29C42E4(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_1B29C4308()
{
  return sub_1B2E83408();
}

uint64_t sub_1B29C4338()
{
  return v0 + 32;
}

void sub_1B29C4354(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

size_t sub_1B29C4360(void *a1)
{
  size_t result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t sub_1B29C4388()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_1B29C43A8()
{
  return sub_1B2E83038();
}

uint64_t sub_1B29C43CC()
{
  return 0;
}

uint64_t sub_1B29C43E0()
{
  return v0;
}

uint64_t sub_1B29C43F4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B29C4414()
{
  return v0 + 32;
}

void sub_1B29C4420(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

uint64_t sub_1B29C4460()
{
  return swift_allocObject();
}

uint64_t sub_1B29C4490()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_1B29C44AC()
{
  return swift_allocObject();
}

uint64_t sub_1B29C450C()
{
  return sub_1B29B31A4(0x3E6461703CLL, 0xE500000000000000, 0xFFFFFFFFLL);
}

void *sub_1B29C4534@<X0>(void *__dst@<X2>, size_t a2@<X8>)
{
  return memmove(__dst, v2, a2);
}

uint64_t sub_1B29C4550()
{
  return swift_beginAccess();
}

uint64_t sub_1B29C45A4()
{
  return swift_beginAccess();
}

double sub_1B29C45C8()
{
  double result = 0.0;
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return result;
}

double sub_1B29C45E0()
{
  return 0.0;
}

void *sub_1B29C45F0@<X0>(void *__dst@<X2>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memcpy(__dst, a2, a3);
}

uint64_t sub_1B29C4618()
{
  return swift_retain();
}

uint64_t sub_1B29C4634()
{
  return 0;
}

uint64_t sub_1B29C4648()
{
  return v0;
}

uint64_t sub_1B29C465C()
{
  return 0;
}

size_t sub_1B29C4690(const void *a1)
{
  return j__malloc_size(a1);
}

uint64_t sub_1B29C46E0()
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 0, 1, v1);
}

uint64_t sub_1B29C470C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v2 + 56) + 40 * a1;
  return sub_1B29C3B84(v4, v1);
}

uint64_t sub_1B29C472C()
{
  return swift_bridgeObjectRetain();
}

void sub_1B29C4744()
{
  sub_1B29A3EB4(&qword_1E9C3A298);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B2EBF660;
  *(void *)(v0 + 32) = swift_getKeyPath();
  static EntityPredicate.thoroughfare.getter();
  *(void *)(v0 + 80) = swift_getKeyPath();
  static EntityPredicate.locality.getter();
  *(void *)(v0 + 128) = swift_getKeyPath();
  static EntityPredicate.subLocality.getter();
  *(void *)(v0 + 176) = swift_getKeyPath();
  static EntityPredicate.administrativeArea.getter();
  *(void *)(v0 + 224) = swift_getKeyPath();
  static EntityPredicate.subAdministrativeArea.getter();
  *(void *)(v0 + 272) = swift_getKeyPath();
  static EntityPredicate.postalCode.getter();
  *(void *)(v0 + 320) = swift_getKeyPath();
  static EntityPredicate.country.getter();
  *(void *)(v0 + 368) = swift_getKeyPath();
  static EntityPredicate.isoCountryCode.getter();
  qword_1E9CAF7F8 = v0;
}

void sub_1B29C4870(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  uint64_t v5 = sub_1B2E82378();
  uint64_t v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

void sub_1B29C48C4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  id v7 = (id)sub_1B2E82348();
  objc_msgSend(v6, *a5, v7);
}

void sub_1B29C4928(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(unsigned __int16 *)(a1 + 32);
  uint64_t v58 = v5;
  uint64_t v59 = v6;
  uint64_t v7 = *(unsigned __int8 *)(a1 + 34);
  uint64_t v56 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v63 = *(void *)(a1 + 80);
  uint64_t v51 = *(void *)(a1 + 56);
  uint64_t v52 = *(void *)(a1 + 88);
  HIDWORD(v50) = *(unsigned __int8 *)(a1 + 96);
  uint64_t v10 = *(void *)(a1 + 104);
  swift_bridgeObjectRetain();
  sub_1B29C5A24(v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1B2CAF754(v9);
  swift_bridgeObjectRelease();
  uint64_t v57 = v3;
  uint64_t v61 = v4;
  sub_1B29C5B68(v2, v3, v4, v58, v6, v7);
  uint64_t v62 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v60 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = sub_1B29C4F98(v11);
  swift_bridgeObjectRelease();
  if (!_Records_GDEntityPredicate_records) {
    goto LABEL_21;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 4) >= 2674)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 5) >= 3558)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __int16 v12 = _Records_GDEntityPredicate_records[12];
  sub_1B29C5A24(v2, v3, v4, v58, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1B2E82538();
  if (_Records_GDEntityPredicate_labels)
  {
    uint64_t v15 = v6 | (v7 << 16);
    v66[0] = v13;
    v66[1] = v14;
    v66[2] = sub_1B2E82538();
    v66[3] = v16;
    __int16 v67 = v12;
    uint64_t v17 = sub_1B29B23E4((uint64_t)v66, v55);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = v8;
    }
    else
    {
      uint64_t v21 = sub_1B29C4DB4(v55);
      uint64_t v20 = v8;
      if (!v22)
      {
        static EntityPredicate.latitude.getter();
        sub_1B29B23E4((uint64_t)v65, v55);
        uint64_t v17 = v30;
        sub_1B29C5E2C((uint64_t)v65);
        uint64_t v24 = v58;
        if (v17)
        {
          static EntityPredicate.longitude.getter();
          uint64_t v49 = sub_1B29B23E4((uint64_t)v64, v55);
          unint64_t v19 = v31;
          swift_bridgeObjectRelease();
          sub_1B29C5E2C((uint64_t)v64);
          if (v19)
          {
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2E82518();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2E82518();
            uint64_t v23 = v57;
            uint64_t v17 = 40;
            unint64_t v19 = 0xE100000000000000;
            swift_bridgeObjectRelease();
            goto LABEL_11;
          }
          uint64_t v40 = swift_bridgeObjectRelease();
          sub_1B29C5E64(v40, v41, v42, v43, v44, v45, v46, v47, v49, v50, v51, v52, v2, a2, v55, v56, v57, v58, v59,
            v9,
            v61);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B29A24D4();
          uint64_t v17 = 0;
        }
        else
        {
          uint64_t v32 = swift_bridgeObjectRelease();
          sub_1B29C5E64(v32, v33, v34, v35, v36, v37, v38, v39, v48, v50, v51, v52, v2, a2, v55, v56, v57, v58, v59,
            v9,
            v61);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B29A24D4();
          unint64_t v19 = 0;
        }
        uint64_t v15 = 0;
        uint64_t v24 = 0;
        uint64_t v61 = 0;
        uint64_t v62 = 0;
        uint64_t v23 = 0;
        uint64_t v27 = 0;
        uint64_t v28 = v54;
        goto LABEL_12;
      }
      uint64_t v17 = v21;
      unint64_t v19 = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v57;
    uint64_t v24 = v58;
LABEL_11:
    uint64_t v26 = v51;
    uint64_t v25 = v52;
    uint64_t v27 = v2;
    uint64_t v28 = (void *)a2;
    unsigned int v29 = HIDWORD(v50);
LABEL_12:
    *uint64_t v28 = v27;
    v28[1] = v23;
    v28[2] = v61;
    v28[3] = v24;
    v28[4] = v15;
    v28[5] = v17;
    v28[6] = v19;
    v28[7] = v26;
    v28[8] = v20;
    v28[9] = v60;
    v28[10] = v63;
    v28[11] = v25;
    v28[12] = v29;
    v28[13] = v62;
    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1B29C4DB4(uint64_t a1)
{
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BA58]), sel_init);
  if (qword_1E9C38AE0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E9CAF7F8;
  uint64_t v3 = *(void *)(qword_1E9CAF7F8 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 72;
    do
    {
      uint64_t v5 = *(void *)(a1 + 16);
      swift_retain();
      if (v5)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B29DAEC8();
        if (v6) {
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v4 += 48;
      swift_setAtWritableKeyPath();
      swift_release();
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  id v7 = objc_msgSend(self, sel_singleLineStringFromPostalAddress_addCountryName_, v14, 0);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_1B2E82378();
    unint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v11 = 0xE000000000000000;
  }

  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

uint64_t sub_1B29C4F98(uint64_t a1)
{
  sub_1B29C58F8();
  uint64_t v2 = sub_1B2E82148();
  uint64_t v63 = *(void *)(a1 + 16);
  if (v63)
  {
    uint64_t v64 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    while (1)
    {
      memcpy(__dst, (const void *)(v64 + 144 * v3), sizeof(__dst));
      uint64_t v4 = __dst[12];
      uint64_t v5 = __dst[13];
      uint64_t v6 = __dst[14];
      uint64_t v7 = __dst[15];
      uint64_t v8 = LOWORD(__dst[16]);
      uint64_t v9 = __dst[7];
      uint64_t v10 = __dst[8];
      long long v75 = *(_OWORD *)&__dst[7];
      long long v76 = *(_OWORD *)&__dst[9];
      __int16 v77 = __dst[11];
      uint64_t v65 = v3 + 1;
      switch(BYTE2(__dst[16]))
      {
        case 1:
          uint64_t v11 = 3826797;
          if ((__dst[12] & 0x80000000000000) == 0) {
            uint64_t v11 = 3828069;
          }
          v69[0] = v11;
          v69[1] = 0xE300000000000000;
          sub_1B29C5944((uint64_t)__dst);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2E83748();
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          break;
        case 2:
        case 3:
          sub_1B29C5944((uint64_t)__dst);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 4:
          sub_1B29C5944((uint64_t)__dst);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        default:
          sub_1B29C5944((uint64_t)__dst);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B29C5A24(v4, v5, v6, v7, v8, 0);
          break;
      }
      swift_isUniquelyReferenced_nonNull_native();
      v69[0] = v2;
      sub_1B29DAEC8();
      if (__OFADD__(*(void *)(v2 + 16), (v12 & 1) == 0)) {
        goto LABEL_93;
      }
      char v13 = v12;
      sub_1B29A3EB4(&qword_1E9C3A290);
      if (sub_1B2E83398())
      {
        sub_1B29DAEC8();
        if ((v13 & 1) != (v14 & 1)) {
          goto LABEL_101;
        }
      }
      uint64_t v2 = v69[0];
      if (v13)
      {
        sub_1B29A040C();
      }
      else
      {
        sub_1B299D2F0();
        long long v15 = v76;
        *uint64_t v16 = v75;
        v16[1] = v15;
        sub_1B29A15B0((uint64_t)v16);
        if (v18) {
          goto LABEL_96;
        }
        *(void *)(v2 + 16) = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_97;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 211) >= 2674) {
        goto LABEL_94;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 212) >= 3558)
      {
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        sub_1B2E834A8();
        __break(1u);
LABEL_101:
        sub_1B2E83858();
        __break(1u);
        JUMPOUT(0x1B29C5878);
      }
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_98;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_99;
      }
      uint64_t v21 = v19;
      uint64_t v22 = v20;
      sub_1B2E82538();
      if (v9 == v21 && v10 == v22)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v24 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
        {
          sub_1B29C5A88((uint64_t)__dst);
          goto LABEL_83;
        }
      }
      sub_1B2B1D124(v71, __dst[17]);
      uint64_t v25 = v71[0];
      uint64_t v67 = v71[1];
      int64_t v26 = v71[3];
      unint64_t v27 = v71[4];
      int64_t v28 = (unint64_t)(v71[2] + 64) >> 6;
      swift_bridgeObjectRetain_n();
      uint64_t v29 = MEMORY[0x1E4FBC860];
      if (v27)
      {
LABEL_30:
        unint64_t v30 = __clz(__rbit64(v27));
        v27 &= v27 - 1;
        unint64_t v31 = v30 | (v26 << 6);
        goto LABEL_49;
      }
      while (1)
      {
        int64_t v32 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_90;
        }
        if (v32 >= v28) {
          goto LABEL_66;
        }
        unint64_t v33 = *(void *)(v67 + 8 * v32);
        int64_t v34 = v26 + 1;
        if (!v33)
        {
          if (v26 + 2 >= v28) {
            goto LABEL_66;
          }
          sub_1B29C5E8C();
          if (!v33)
          {
            if (v35 + 2 >= v28) {
              goto LABEL_66;
            }
            sub_1B29C5E8C();
            if (!v33)
            {
              if (v36 + 3 >= v28) {
                goto LABEL_66;
              }
              sub_1B29C5E8C();
              if (!v33)
              {
                if (v37 + 4 >= v28) {
                  goto LABEL_66;
                }
                sub_1B29C5E8C();
                if (!v33) {
                  break;
                }
              }
            }
          }
        }
LABEL_48:
        unint64_t v27 = (v33 - 1) & v33;
        unint64_t v31 = __clz(__rbit64(v33)) + (v34 << 6);
        int64_t v26 = v34;
LABEL_49:
        uint64_t v40 = *(void *)(*(void *)(v25 + 56) + 8 * v31);
        uint64_t v41 = *(void *)(v40 + 16);
        uint64_t v42 = *(void *)(v29 + 16);
        if (__OFADD__(v42, v41))
        {
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          __break(1u);
LABEL_89:
          __break(1u);
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
          __break(1u);
LABEL_94:
          __break(1u);
          goto LABEL_95;
        }
        swift_bridgeObjectRetain();
        if (!swift_isUniquelyReferenced_nonNull_native() || v42 + v41 > *(void *)(v29 + 24) >> 1)
        {
          sub_1B29B707C();
          uint64_t v29 = v43;
        }
        if (*(void *)(v40 + 16))
        {
          uint64_t v44 = *(void *)(v29 + 16);
          if ((*(void *)(v29 + 24) >> 1) - v44 < v41) {
            goto LABEL_88;
          }
          unint64_t v45 = v29 + 144 * v44 + 32;
          if (v40 + 32 < v45 + 144 * v41 && v45 < v40 + 32 + 144 * v41) {
            goto LABEL_100;
          }
          swift_arrayInitWithCopy();
          if (v41)
          {
            uint64_t v47 = *(void *)(v29 + 16);
            BOOL v18 = __OFADD__(v47, v41);
            uint64_t v48 = v47 + v41;
            if (v18) {
              goto LABEL_89;
            }
            *(void *)(v29 + 16) = v48;
          }
        }
        else if (v41)
        {
          goto LABEL_87;
        }
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_30;
        }
      }
      int64_t v34 = v38 + 5;
      if (v38 + 5 < v28) {
        break;
      }
LABEL_66:
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B29C5A88((uint64_t)__dst);
      uint64_t v49 = *(void *)(v29 + 16);
      if (v49)
      {
        uint64_t v68 = v49 - 1;
        for (uint64_t i = 32; ; uint64_t i = v66 + 144)
        {
          uint64_t v66 = i;
          memcpy(v69, (const void *)(v29 + i), sizeof(v69));
          uint64_t v51 = v69[12];
          uint64_t v52 = v69[13];
          uint64_t v53 = v69[14];
          uint64_t v54 = v69[15];
          uint64_t v55 = LOWORD(v69[16]);
          long long v72 = *(_OWORD *)&v69[7];
          long long v73 = *(_OWORD *)&v69[9];
          __int16 v74 = v69[11];
          switch(BYTE2(v69[16]))
          {
            case 1:
              sub_1B29C5944((uint64_t)v69);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1B2E83748();
              sub_1B2E82518();
              swift_bridgeObjectRelease();
              break;
            case 2:
            case 3:
              sub_1B29C5944((uint64_t)v69);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              break;
            case 4:
              sub_1B29C5944((uint64_t)v69);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              break;
            default:
              sub_1B29C5944((uint64_t)v69);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1B29C5A24(v51, v52, v53, v54, v55, 0);
              break;
          }
          swift_isUniquelyReferenced_nonNull_native();
          sub_1B29DAEC8();
          char v57 = v56;
          if (__OFADD__(*(void *)(v2 + 16), (v56 & 1) == 0)) {
            break;
          }
          if (sub_1B2E83398())
          {
            sub_1B29DAEC8();
            if ((v57 & 1) != (v58 & 1)) {
              goto LABEL_101;
            }
          }
          if (v57)
          {
            sub_1B29A040C();
          }
          else
          {
            sub_1B299D2F0();
            long long v59 = v73;
            *uint64_t v60 = v72;
            v60[1] = v59;
            sub_1B29A15B0((uint64_t)v60);
            if (v18) {
              goto LABEL_92;
            }
            *(void *)(v2 + 16) = v61;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B29C5A88((uint64_t)v69);
          if (!v68) {
            goto LABEL_82;
          }
          --v68;
        }
        goto LABEL_91;
      }
LABEL_82:
      swift_bridgeObjectRelease();
LABEL_83:
      uint64_t v3 = v65;
      if (v65 == v63)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
    unint64_t v33 = *(void *)(v67 + 8 * v34);
    if (!v33)
    {
      int64_t v39 = v26 + 7;
      do
      {
        if (v39 >= v28) {
          goto LABEL_66;
        }
        unint64_t v33 = *(void *)(v67 + 8 * v39++);
      }
      while (!v33);
      int64_t v34 = v39 - 1;
    }
    goto LABEL_48;
  }
  return v2;
}

uint64_t sub_1B29C58A0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AddressRenderer()
{
  return self;
}

void sub_1B29C58D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_1B29C58F8()
{
  unint64_t result = qword_1E9C3A288;
  if (!qword_1E9C3A288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A288);
  }
  return result;
}

uint64_t sub_1B29C5944(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v11 = *(void *)(a1 + 120);
  uint64_t v12 = *(void *)(a1 + 112);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 50);
  uint64_t v7 = *(unsigned __int16 *)(a1 + 48);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 130);
  uint64_t v8 = *(unsigned __int16 *)(a1 + 128);
  swift_bridgeObjectRetain();
  sub_1B29C5A24(v2, v3, v4, v5, v7, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29C5A24(v14, v13, v12, v11, v8, v10);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B29C5A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result = a2;
  if (a6 - 2 < 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if (!a6)
  {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B29C5A88(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 112);
  uint64_t v11 = *(void *)(a1 + 120);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 50);
  uint64_t v7 = *(unsigned __int16 *)(a1 + 48);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 130);
  uint64_t v9 = *(unsigned __int16 *)(a1 + 128);
  swift_bridgeObjectRelease();
  sub_1B29C5B68(v2, v3, v4, v5, v7, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B29C5B68(v14, v13, v12, v11, v9, v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B29C5B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result = a2;
  if (a6 - 2 < 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (!a6)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1B29C5BCC()
{
  return sel_street;
}

void sub_1B29C5BD8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1B29C5BF8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *sub_1B29C5C18()
{
  return sel_city;
}

void sub_1B29C5C24(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1B29C5C44(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *sub_1B29C5C64()
{
  return sel_subLocality;
}

void sub_1B29C5C70(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1B29C5C90(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *sub_1B29C5CB0()
{
  return sel_state;
}

void sub_1B29C5CBC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1B29C5CDC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *sub_1B29C5CFC()
{
  return sel_subAdministrativeArea;
}

void sub_1B29C5D08(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1B29C5D28(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *sub_1B29C5D48()
{
  return sel_postalCode;
}

void sub_1B29C5D54(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1B29C5D74(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *sub_1B29C5D94()
{
  return sel_country;
}

void sub_1B29C5DA0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1B29C5DC0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *sub_1B29C5DE0()
{
  return sel_ISOCountryCode;
}

void sub_1B29C5DEC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1B29C5E0C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B29C5E2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B29C5E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1B29C5B68(a13, a17, a21, v23, v22, v21);
}

IntelligencePlatform::AgeDifferenceCategory __swiftcall AgeDifferenceCategory.init(age:userAge:)(Swift::Int64 age, Swift::Int64 userAge)
{
  Swift::Int64 v3 = age - userAge;
  if (__OFSUB__(age, userAge))
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = v3 + 1;
    if (v3 >= -1) {
      char v5 = 0;
    }
    else {
      char v5 = 3;
    }
    if (v3 >= -5) {
      char v6 = v5;
    }
    else {
      char v6 = 2;
    }
    if (v3 >= -15) {
      char v7 = v6;
    }
    else {
      char v7 = 1;
    }
    if (v3 <= 1) {
      char v8 = v7;
    }
    else {
      char v8 = 5;
    }
    if (v3 <= 5) {
      char v9 = v8;
    }
    else {
      char v9 = 6;
    }
    if (v3 <= 15) {
      char v10 = v9;
    }
    else {
      char v10 = 7;
    }
    if (v4 < 3) {
      char v10 = 4;
    }
    *uint64_t v2 = v10;
  }
  return (char)age;
}

IntelligencePlatform::AgeDifferenceCategory_optional __swiftcall AgeDifferenceCategory.init(rawValue:)(Swift::Int64 rawValue)
{
  char v2 = 8;
  if ((unint64_t)rawValue < 8) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (IntelligencePlatform::AgeDifferenceCategory_optional)rawValue;
}

uint64_t AgeDifferenceCategory.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1B29C5F24()
{
  unint64_t result = qword_1E9C3A2A0;
  if (!qword_1E9C3A2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A2A0);
  }
  return result;
}

uint64_t sub_1B29C5F70()
{
  return sub_1B29AE490(*v0);
}

uint64_t sub_1B29C5F78()
{
  return sub_1B2AA5658();
}

uint64_t sub_1B29C5F80(uint64_t a1)
{
  return sub_1B29F9368(a1, *v1);
}

IntelligencePlatform::AgeDifferenceCategory_optional sub_1B29C5F88(Swift::Int64 *a1)
{
  return AgeDifferenceCategory.init(rawValue:)(*a1);
}

uint64_t sub_1B29C5F90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AgeDifferenceCategory.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AgeDifferenceCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AgeDifferenceCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29C610CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AgeDifferenceCategory()
{
  return &type metadata for AgeDifferenceCategory;
}

uint64_t sub_1B29C6144()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EBF930;
  *(void *)(v0 + 32) = &unk_1F0ABFC28;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EBF950;
  *(void *)(v0 + 72) = 0x80000001B2E965C0;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29B2124(0, 0);
  return v0;
}

uint64_t sub_1B29C61E0(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if (sub_1B2D971EC() || sub_1B2D971EC()) {
      return sub_1B2D97734();
    }
    else {
      return sub_1B2D97224(a2);
    }
  }
  return result;
}

double sub_1B29C6240@<D0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = *a1;
  long long v7 = a1[1];
  long long v8 = a1[2];
  long long v9 = a1[3];
  long long v10 = a1[4];
  uint64_t v11 = *((void *)a1 + 10);
  long long v12 = *(long long *)((char *)a1 + 88);
  char v13 = *((unsigned char *)a1 + 104);
  uint64_t v14 = *(void *)a2;
  uint64_t v15 = *(void *)(a2 + 8);
  uint64_t v16 = *(void *)(a2 + 16);
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v19 = *(void *)(a2 + 40);
  uint64_t v20 = *(void *)(a2 + 48);
  uint64_t v21 = *(void *)(a2 + 56);
  uint64_t v22 = *(void *)(a2 + 64);
  uint64_t v23 = *(void *)(a2 + 72);
  uint64_t v24 = *(void *)(a2 + 80);
  uint64_t v25 = *(void *)(a2 + 88);
  uint64_t v26 = *(void *)(a2 + 96);
  unsigned __int8 v27 = *(unsigned char *)(a2 + 104);
  if ((unint64_t)v12 >> 1 != 0xFFFFFFFF || (v13 & 0x1E) != 0)
  {
    long long v39 = v6;
    long long v40 = v7;
    long long v41 = v8;
    long long v42 = v9;
    long long v43 = v10;
    uint64_t v44 = v11;
    long long v45 = v12;
    char v46 = v13;
    unsigned __int8 v38 = 1;
    v36[0] = v14;
    v36[1] = v15;
    v36[2] = v16;
    v36[3] = v17;
    v36[4] = v18;
    v36[5] = v19;
    v36[6] = v20;
    v36[7] = v21;
    v36[8] = v22;
    v36[9] = v23;
    v36[10] = v24;
    v36[11] = v25;
    v36[12] = v26;
    unsigned __int8 v37 = v27;
    sub_1B2D8379C(&v38, (uint64_t)v36, (uint64_t)v47);
    if (!v3)
    {
      uint64_t v29 = v48;
      char v30 = v49;
      double result = *(double *)v47;
      long long v31 = v47[1];
      long long v32 = v47[2];
      long long v33 = v47[3];
      long long v34 = v47[4];
      long long v35 = v47[5];
      *(_OWORD *)a3 = v47[0];
      *(_OWORD *)(a3 + 16) = v31;
      *(_OWORD *)(a3 + 32) = v32;
      *(_OWORD *)(a3 + 48) = v33;
      *(_OWORD *)(a3 + 64) = v34;
      *(_OWORD *)(a3 + 80) = v35;
      *(void *)(a3 + 96) = v29;
      *(unsigned char *)(a3 + 104) = v30;
    }
  }
  else
  {
    *(void *)a3 = v14;
    *(void *)(a3 + 8) = v15;
    *(void *)(a3 + 16) = v16;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 32) = v18;
    *(void *)(a3 + 40) = v19;
    *(void *)(a3 + 48) = v20;
    *(void *)(a3 + 56) = v21;
    *(void *)(a3 + 64) = v22;
    *(void *)(a3 + 72) = v23;
    *(void *)(a3 + 80) = v24;
    *(void *)(a3 + 88) = v25;
    *(void *)(a3 + 96) = v26;
    *(unsigned char *)(a3 + 104) = v27;
    sub_1B29C6430(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  }
  return result;
}

BOOL sub_1B29C6388(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 88);
  char v3 = *(unsigned char *)(a2 + 104);
  if (a1 && !sub_1B2D971EC()) {
    return 1;
  }
  return (v3 & 0x1E) != 0 || v2 >> 1 != 0xFFFFFFFF;
}

BOOL sub_1B29C63E0()
{
  return !sub_1B2D971EC();
}

uint64_t type metadata accessor for All()
{
  return self;
}

uint64_t sub_1B29C6430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  unsigned __int8 v14 = a4;
  if ((a14 & 0x10) != 0)
  {
    swift_bridgeObjectRetain();
    return sub_1B29C65EC(a2, a3, v14);
  }
  else
  {
    return sub_1B29C64D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  }
}

uint64_t sub_1B29C64D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  switch(a14 >> 5)
  {
    case 0:
    case 3:
    case 5:
      goto LABEL_5;
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 2:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_4:
      swift_bridgeObjectRetain();
LABEL_5:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B29C65EC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t dispatch thunk of AllTripleEnumeratorProtocol.enumerateTriples(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AllTripleProviderProtocol.triples()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

void static Analytics.sendEventForProduction(eventName:prefix:eventPayload:)(int a1, int a2, uint64_t a3, void *a4, void *a5)
{
  long long v10 = (void *)MEMORY[0x1B3EB2480]();
  v12.value._countAndFlagsBits = a3;
  v12.value._object = a4;
  sub_1B29C66D4(a1, a2, v12, a5);
}

void sub_1B29C66D4(int a1, int a2, Swift::String_optional prefix, void *a4)
{
  String.fullEventName(prefix:)(prefix);
  uint64_t v5 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  if (a4)
  {
    sub_1B299A1C8();
    a4 = (void *)sub_1B2E820D8();
  }
  AnalyticsSendEvent();
}

Swift::String __swiftcall String.fullEventName(prefix:)(Swift::String_optional prefix)
{
  if (prefix.value._object)
  {
    Swift::String_optional v5 = prefix;
    sub_1B2E82378();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5.value._uint64_t countAndFlagsBits = sub_1B2E82378();
    v5.value._object = v1;
  }
  sub_1B2E82518();
  sub_1B2E82518();
  uint64_t countAndFlagsBits = v5.value._countAndFlagsBits;
  object = v5.value._object;
  result._object = object;
  result._uint64_t countAndFlagsBits = countAndFlagsBits;
  return result;
}

uint64_t sub_1B29C699C(uint64_t a1)
{
  id v1 = (id)(*(uint64_t (**)(void))(a1 + 16))();
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  sub_1B299A1C8();
  uint64_t v3 = sub_1B2E820F8();

  return v3;
}

id Analytics.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id Analytics.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id Analytics.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B29C6AD4()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B29C6B0C()
{
  return sub_1B29C699C(*(void *)(v0 + 16));
}

uint64_t sub_1B29C6B14()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EBFA10;
  *(void *)(v0 + 32) = &unk_1F0ABFC58;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EBFA20;
  *(void *)(v0 + 72) = 0x80000001B2E96690;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29B2124(0, 0);
  return v0;
}

uint64_t sub_1B29C6BB0(uint64_t result, uint64_t a2)
{
  if (result) {
    return sub_1B2D977BC(a2);
  }
  return result;
}

uint64_t type metadata accessor for And()
{
  return self;
}

uint64_t sub_1B29C6C04()
{
  return j__swift_bridgeObjectRetain();
}

uint64_t sub_1B29C6C20()
{
  sub_1B29A3EB4(&qword_1E9C3A2A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EBFA40;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t v1 = type metadata accessor for AddressRenderer();
  uint64_t v2 = swift_allocObject();
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 72) = &off_1F0AC7EA8;
  *(void *)(inited + 40) = v2;
  *(unsigned char *)(inited + 80) = 2;
  uint64_t v3 = type metadata accessor for MusicEntityRenderer();
  uint64_t v4 = swift_allocObject();
  *(void *)(inited + 112) = v3;
  *(void *)(inited + 120) = &off_1F0ACC0C8;
  *(void *)(inited + 88) = v4;
  sub_1B29A3EB4(&qword_1E9C3A2B0);
  sub_1B29C6E2C();
  uint64_t result = sub_1B2E82148();
  qword_1E9CAF800 = result;
  return result;
}

uint64_t sub_1B29C6CF8()
{
  unint64_t v0 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B29C6D44(char a1)
{
  if (!a1) {
    return 0x73736572646461;
  }
  if (a1 == 1) {
    return 0x7463614670696B73;
  }
  return 0xD000000000000013;
}

uint64_t sub_1B29C6DAC(char *a1, char *a2)
{
  return sub_1B29AAFBC(*a1, *a2);
}

uint64_t sub_1B29C6DB8()
{
  return sub_1B29AE4A8();
}

uint64_t sub_1B29C6DC0()
{
  return sub_1B2AA48CC();
}

uint64_t sub_1B29C6DC8()
{
  return sub_1B29F8C34();
}

uint64_t sub_1B29C6DD0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29C6CF8();
  *a1 = result;
  return result;
}

uint64_t sub_1B29C6E00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B29C6D44(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B29C6E2C()
{
  unint64_t result = qword_1E9C3A2B8;
  if (!qword_1E9C3A2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A2B8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RouteFlag(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for RouteFlag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29C6FCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RouteFlag()
{
  return &type metadata for RouteFlag;
}

unint64_t sub_1B29C7008()
{
  unint64_t result = qword_1E9C3A2C0;
  if (!qword_1E9C3A2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A2C0);
  }
  return result;
}

uint64_t sub_1B29C7054()
{
  return swift_retain();
}

uint64_t CustomAppleMusicEventContext.__allocating_init(context:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 80);
  sub_1B299D31C();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  long long v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A042C();
  v10(v9);
  type metadata accessor for ViewService();
  uint64_t v11 = (void *)static ViewService.clientService.getter();
  uint64_t v12 = CustomAppleMusicEventContext.__allocating_init(context:viewService:)((uint64_t)v8, v11);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  return v12;
}

uint64_t CustomAppleMusicEventContext.__allocating_init(context:viewService:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1B299D354();
  CustomAppleMusicEventContext.init(context:viewService:)(a1, a2);
  return v4;
}

uint64_t CustomAppleMusicEventContext.init(context:viewService:)(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  sub_1B299D31C();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1B29A042C();
  v10(v9);
  type metadata accessor for AppleMusicEventView();
  sub_1B299D354();
  AppleMusicEventView.init(viewService:)(a2);
  if (v3)
  {
    uint64_t v11 = *(void (**)(void))(v7 + 8);
    sub_1B299F2B0();
    v11();
    sub_1B299F2B0();
    v11();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1B29C8868(&qword_1E9C3A2C8, (void (*)(uint64_t))type metadata accessor for AppleMusicEventView);
    type metadata accessor for EventBaseContext();
    sub_1B299F2B0();
    v16(v12, v13, v14, v15);
    *(void *)(v4 + 16) = sub_1B2B2AE48();
  }
  return v4;
}

uint64_t CustomAppleMusicEventContext.__allocating_init<>()()
{
  type metadata accessor for ViewService();
  unint64_t v0 = (void *)static ViewService.clientService.getter();
  uint64_t v1 = sub_1B299D354();
  CustomAppleMusicEventContext.init<>(viewService:)(v0);
  return v1;
}

uint64_t CustomAppleMusicEventContext.__allocating_init<>(viewService:)(void *a1)
{
  uint64_t v2 = sub_1B299D354();
  CustomAppleMusicEventContext.init<>(viewService:)(a1);
  return v2;
}

uint64_t CustomAppleMusicEventContext.init<>(viewService:)(void *a1)
{
  uint64_t v3 = v1;
  type metadata accessor for AppleMusicEventView();
  sub_1B299D354();
  id v5 = a1;
  uint64_t v6 = AppleMusicEventView.init(viewService:)(v5);
  if (v2)
  {

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v6;
    ViewService.subgraphView(name:tableName:batchSize:)(0xD000000000000017, 0x80000001B2E966C0, 0xD000000000000018, 0x80000001B2E966E0, 10);
    sub_1B29A3EB4(&qword_1EB7E2560);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    uint64_t v10 = sub_1B29C83CC(v9);
    swift_release();

    sub_1B29A3EB4(&qword_1E9C3A2D0);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v7;
    *(void *)(v11 + 24) = v10;
    *(void *)(v3 + 16) = v11;
  }
  return v3;
}

uint64_t CustomAppleMusicEventContext.entryView.getter()
{
  return swift_retain();
}

void CustomAppleMusicEventContext.songEvents(order:)()
{
}

uint64_t CustomAppleMusicEventContext.songEvents(whose:in:order:)(char *a1, uint64_t a2, char a3)
{
  return sub_1B29C768C(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2AFC8);
}

{
  return sub_1B29C768C(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2AFF4);
}

{
  return sub_1B29C768C(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B020);
}

{
  return sub_1B29C768C(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B04C);
}

{
  return sub_1B29C768C(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B078);
}

uint64_t sub_1B29C768C(char *a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = a3 & 1;
  char v7 = *a1;
  uint64_t v8 = sub_1B29C89EC();
  char v11 = v7;
  uint64_t v9 = sub_1B29C8868(qword_1E9C3A2D8, (void (*)(uint64_t))type metadata accessor for CustomGraphSongEvent);
  return a4(v8, &v11, a2, v6, v8, v9);
}

uint64_t CustomAppleMusicEventContext.songEvents(overlapping:order:)(uint64_t a1, char a2)
{
  return sub_1B29C7824(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B1BC);
}

{
  return sub_1B29C7824(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B1E8);
}

{
  return sub_1B29C7824(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B214);
}

{
  return sub_1B29C7824(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B240);
}

{
  return sub_1B29C7824(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B26C);
}

uint64_t sub_1B29C7824(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = a2 & 1;
  uint64_t v6 = sub_1B29C89EC();
  uint64_t v7 = sub_1B29C8868(qword_1E9C3A2D8, (void (*)(uint64_t))type metadata accessor for CustomGraphSongEvent);
  return a3(v6, a1, v5, v6, v7);
}

uint64_t CustomAppleMusicEventContext.deinit()
{
  swift_release();
  return v0;
}

uint64_t CustomAppleMusicEventContext.__deallocating_deinit()
{
  CustomAppleMusicEventContext.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1B29C79A4()
{
  return sub_1B29C7054();
}

void CustomAppleMusicEventContext.enumerateSongEvents<>(order:using:)()
{
}

void CustomAppleMusicEventContext.enumerateSongEvents<>(order:block:)()
{
}

uint64_t CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:using:)(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B29C7B48(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B8C0);
}

{
  return sub_1B29C7B48(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B8F8);
}

{
  return sub_1B29C7B48(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B930);
}

{
  return sub_1B29C7B48(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B968);
}

{
  return sub_1B29C7B48(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B9A0);
}

uint64_t CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:block:)(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B29C7DA8(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1B29C89D0, (uint64_t (*)(char *, uint64_t, void, uint64_t, void *))CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:using:));
}

{
  return sub_1B29C7DA8(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1B29C89D0, (uint64_t (*)(char *, uint64_t, void, uint64_t, void *))CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:using:));
}

{
  return sub_1B29C7DA8(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1B29C89D0, (uint64_t (*)(char *, uint64_t, void, uint64_t, void *))CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:using:));
}

{
  return sub_1B29C7DA8(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1B29C89D0, (uint64_t (*)(char *, uint64_t, void, uint64_t, void *))CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:using:));
}

{
  return sub_1B29C7DA8(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1B29C89D0, (uint64_t (*)(char *, uint64_t, void, uint64_t, void *))CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:using:));
}

uint64_t sub_1B29C7B48(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v11 = *a1;
  uint64_t v12 = a3 & 1;
  uint64_t v13 = type metadata accessor for CustomGraphSongEvent(0);
  char v17 = v11;
  uint64_t v14 = sub_1B29C8868(qword_1E9C3A2D8, (void (*)(uint64_t))type metadata accessor for CustomGraphSongEvent);
  return a7(v13, &v17, a2, v12, a4, a5, v13, v14, a6);
}

uint64_t sub_1B29C7DA8(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(char *, uint64_t, void, uint64_t, void *))
{
  char v10 = *a1;
  v9[2] = a4;
  v9[3] = a5;
  return a8(&v10, a2, a3 & 1, a7, v9);
}

uint64_t CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:using:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B29C7E80(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2BAF4);
}

{
  return sub_1B29C7E80(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2BB28);
}

{
  return sub_1B29C7E80(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2BB5C);
}

{
  return sub_1B29C7E80(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2BB90);
}

{
  return sub_1B29C7E80(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2BBC4);
}

uint64_t CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:block:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B29C80CC(a1, a2, a3, a4, a5, (uint64_t)sub_1B29C89D0, (uint64_t (*)(uint64_t, void, uint64_t, void *))CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:using:));
}

{
  return sub_1B29C80CC(a1, a2, a3, a4, a5, (uint64_t)sub_1B29C841C, (uint64_t (*)(uint64_t, void, uint64_t, void *))CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:using:));
}

{
  return sub_1B29C80CC(a1, a2, a3, a4, a5, (uint64_t)sub_1B29C89D0, (uint64_t (*)(uint64_t, void, uint64_t, void *))CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:using:));
}

{
  return sub_1B29C80CC(a1, a2, a3, a4, a5, (uint64_t)sub_1B29C89D0, (uint64_t (*)(uint64_t, void, uint64_t, void *))CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:using:));
}

{
  return sub_1B29C80CC(a1, a2, a3, a4, a5, (uint64_t)sub_1B29C89D0, (uint64_t (*)(uint64_t, void, uint64_t, void *))CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:using:));
}

uint64_t sub_1B29C7E80(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = a2 & 1;
  uint64_t v12 = type metadata accessor for CustomGraphSongEvent(0);
  uint64_t v13 = sub_1B29C8868(qword_1E9C3A2D8, (void (*)(uint64_t))type metadata accessor for CustomGraphSongEvent);
  return a6(v12, a1, v11, a3, a4, v12, v13, a5);
}

uint64_t sub_1B29C80CC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, void, uint64_t, void *))
{
  v8[2] = a3;
  v8[3] = a4;
  return a7(a1, a2 & 1, a6, v8);
}

uint64_t sub_1B29C8100(uint64_t a1, BOOL *a2, uint64_t (*a3)(char *))
{
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C3A368);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29C890C(a1, (uint64_t)v9);
  swift_storeEnumTagMultiPayload();
  char v10 = a3(v9);
  uint64_t result = sub_1B29C8970((uint64_t)v9);
  if (!v3) {
    *a2 = (v10 & 1) == 0;
  }
  return result;
}

uint64_t CustomAppleMusicEventContext.latestSongEvent()()
{
  return sub_1B29C8244((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B2B2BD64);
}

uint64_t CustomAppleMusicEventContext.earliestSongEvent()()
{
  return sub_1B29C8244((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B2B2BD90);
}

uint64_t sub_1B29C8244(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = sub_1B29C89EC();
  uint64_t v3 = sub_1B29C8868(qword_1E9C3A2D8, (void (*)(uint64_t))type metadata accessor for CustomGraphSongEvent);
  return a1(v2, v2, v3);
}

uint64_t sub_1B29C82D4(uint64_t a1)
{
  type metadata accessor for InitializationResourcesManager();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1B2E82148();
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v4;
  *(void *)(v1 + 48) = *(void *)(a1 + 32);
  *(void *)(v1 + 56) = v3;
  return v1;
}

uint64_t sub_1B29C8354(uint64_t a1)
{
  type metadata accessor for InitializationResourcesManager();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1B2E82148();
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = v3;
  return v1;
}

uint64_t sub_1B29C83CC(uint64_t a1)
{
  swift_retain();
  ObjectSynthesisDictionaryMapping.init()(&v4);
  *(void *)(v1 + 32) = v4;
  swift_release();
  return sub_1B29C8354(a1);
}

uint64_t sub_1B29C841C(uint64_t a1, BOOL *a2)
{
  return sub_1B29C8100(a1, a2, *(uint64_t (**)(char *))(v2 + 16));
}

uint64_t sub_1B29C8438(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_1B29C8440()
{
  return sub_1B29C8868(&qword_1E9C3A2C8, (void (*)(uint64_t))type metadata accessor for AppleMusicEventView);
}

uint64_t sub_1B29C8488()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B29C84A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 8);
}

uint64_t sub_1B29C84AC(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1B29C8528()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B29C854C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B29C8588()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CustomAppleMusicEventContext()
{
  return sub_1B29A1278();
}

uint64_t method lookup function for CustomAppleMusicEventContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CustomAppleMusicEventContext);
}

uint64_t dispatch thunk of CustomAppleMusicEventContext.__allocating_init(context:viewService:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of CustomAppleMusicEventContext.__allocating_init<>(viewService:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1B29C8650()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B29C8868(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B29C88B0(uint64_t a1)
{
  swift_retain();
  ObjectSynthesisDictionaryMapping.init()(&v4);
  *(void *)(v1 + 64) = v4;
  swift_release();

  return sub_1B29C82D4(a1);
}

uint64_t sub_1B29C890C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CustomGraphSongEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B29C8970(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C3A368);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B29C89D0(uint64_t a1, BOOL *a2)
{
  return sub_1B29C841C(a1, a2);
}

uint64_t sub_1B29C89EC()
{
  return type metadata accessor for CustomGraphSongEvent(0);
}

uint64_t AppleMusicEventEntry.startDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  sub_1B2E80668();
  sub_1B2999864();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);

  return v7(a2, v4, v5);
}

uint64_t AppleMusicEventEntry.endDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B29C8A80(v2 + *(int *)(a1 + 40), a2);
}

uint64_t sub_1B29C8A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7D87C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void AppleMusicEventEntry.entityClass.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  EntityClass.init(intValue:)(*(unsigned char *)(v2 + 7), (uint64_t)&v13);
  uint64_t v5 = v14;
  if (v14)
  {
    char v6 = v17;
    uint64_t v8 = v15;
    uint64_t v7 = v16;
    *(void *)a2 = v13;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v8;
    *(void *)(a2 + 24) = v7;
    *(unsigned char *)(a2 + 32) = v6;
  }
  else
  {
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1B2E81FB8();
    sub_1B29A4B98(v9, (uint64_t)qword_1EB7E5AC0);
    char v10 = sub_1B2E81F98();
    os_log_type_t v11 = sub_1B2E82DC8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1B2996000, v10, v11, "AppleMusicEventEntry: entityClass: id.untyped.entityClass is nil.", v12, 2u);
      MEMORY[0x1B3EB30C0](v12, -1, -1);
    }

    static GraphObjectBase.entityClass.getter(*(void *)(a1 + 16), *(void *)(*(void *)(a1 + 24) + 8));
  }
}

uint64_t AppleMusicEventEntry.cast<A>(as:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = sub_1B29A3EB4(&qword_1EB7D87C0);
  MEMORY[0x1F4188790](v8 - 8);
  sub_1B299E4A0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  sub_1B299E4A0();
  uint64_t v18 = v17 - v16;
  uint64_t v22 = *(void *)v4;
  type metadata accessor for TypedEntityIdentifier();
  uint64_t result = TypedEntityIdentifier.cast<A>(as:)(a2, a3, &v23);
  if (!v21)
  {
    uint64_t v22 = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v18, &v4[*(int *)(a1 + 36)], v12);
    sub_1B29C8A80((uint64_t)&v4[*(int *)(a1 + 40)], v11);
    return sub_1B29C8D94(&v22, v18, v11, a4);
  }
  return result;
}

uint64_t sub_1B29C8D94@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = *a1;
  uint64_t v7 = type metadata accessor for AppleMusicEventEntry();
  uint64_t v8 = (char *)a4 + *(int *)(v7 + 36);
  sub_1B2E80668();
  sub_1B2999864();
  (*(void (**)(char *, uint64_t))(v9 + 32))(v8, a2);
  uint64_t v10 = (uint64_t)a4 + *(int *)(v7 + 40);

  return sub_1B29CA4E0(a3, v10);
}

uint64_t sub_1B29C8E40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B29C8F84()
{
  return 3;
}

uint64_t sub_1B29C8F8C(char a1)
{
  if (!a1) {
    return 25705;
  }
  if (a1 == 1) {
    return 0x7461447472617473;
  }
  return 0x65746144646E65;
}

BOOL sub_1B29C8FDC(char *a1, char *a2)
{
  return sub_1B29A6DF0(*a1, *a2);
}

uint64_t sub_1B29C8FF0()
{
  return sub_1B29A77E4();
}

uint64_t sub_1B29C8FFC()
{
  return sub_1B29A6E00();
}

uint64_t sub_1B29C9008()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29C9050()
{
  return sub_1B29C8F8C(*v0);
}

uint64_t sub_1B29C905C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29C8E40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29C908C()
{
  return sub_1B29A782C();
}

uint64_t sub_1B29C90B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29C8F84();
  *a1 = result;
  return result;
}

uint64_t sub_1B29C90E0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B29C9134(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

BOOL static AppleMusicEventEntry.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  sub_1B2E80668();
  sub_1B299D278();
  uint64_t v40 = v5;
  uint64_t v41 = v4;
  MEMORY[0x1F4188790](v4);
  sub_1B299B6D0();
  uint64_t v39 = v6;
  uint64_t v7 = sub_1B29A3EB4(&qword_1EB7D8770);
  sub_1B2999864();
  MEMORY[0x1F4188790](v8);
  sub_1B299E4A0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v36 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v36 - v19;
  uint64_t v21 = *a1;
  uint64_t v42 = *a2;
  uint64_t v43 = v21;
  if (!static TypedEntityIdentifier.== infix(_:_:)(&v43, &v42)) {
    return 0;
  }
  unsigned __int8 v37 = v18;
  unsigned __int8 v38 = v20;
  uint64_t v36 = v15;
  uint64_t v22 = v41;
  uint64_t v23 = type metadata accessor for AppleMusicEventEntry();
  if ((sub_1B2E80608() & 1) == 0) {
    return 0;
  }
  uint64_t v24 = (uint64_t)v38;
  sub_1B29C8A80((uint64_t)a1 + *(int *)(v23 + 40), (uint64_t)v38);
  uint64_t v25 = (uint64_t)v37;
  sub_1B29C8A80((uint64_t)a2 + *(int *)(v23 + 40), (uint64_t)v37);
  uint64_t v26 = v11;
  uint64_t v27 = v11 + *(int *)(v7 + 48);
  sub_1B29C8A80(v24, v11);
  sub_1B29C8A80(v25, v27);
  uint64_t v28 = v11;
  uint64_t v29 = v22;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v28, 1, v22) == 1)
  {
    sub_1B29C4148(v25, &qword_1EB7D87C0);
    sub_1B29C4148(v24, &qword_1EB7D87C0);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v27, 1, v22) == 1)
    {
      sub_1B29C4148(v26, &qword_1EB7D87C0);
      return 1;
    }
    goto LABEL_8;
  }
  uint64_t v30 = (uint64_t)v36;
  sub_1B29C8A80(v26, (uint64_t)v36);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v27, 1, v22) == 1)
  {
    sub_1B29C4148(v25, &qword_1EB7D87C0);
    sub_1B29C4148(v24, &qword_1EB7D87C0);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v30, v22);
LABEL_8:
    sub_1B29C4148(v26, &qword_1EB7D8770);
    return 0;
  }
  uint64_t v31 = v39;
  uint64_t v32 = v40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v39, v27, v29);
  sub_1B29CA49C(&qword_1E9C37288);
  char v33 = sub_1B2E82328();
  long long v34 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v34(v31, v29);
  sub_1B29C4148(v25, &qword_1EB7D87C0);
  sub_1B29C4148(v24, &qword_1EB7D87C0);
  v34(v30, v29);
  sub_1B29C4148(v26, &qword_1EB7D87C0);
  return (v33 & 1) != 0;
}

uint64_t AppleMusicEventEntry.encode(to:)(void *a1)
{
  type metadata accessor for AppleMusicEventEntry.CodingKeys();
  swift_getWitnessTable();
  sub_1B2E83718();
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2E83A38();
  type metadata accessor for TypedEntityIdentifier();
  swift_getWitnessTable();
  sub_1B2E836D8();
  if (!v6)
  {
    sub_1B2E80668();
    sub_1B29CA49C((unint64_t *)&qword_1EB7D87B0);
    sub_1B299F2C0();
    sub_1B2E836D8();
    sub_1B299F2C0();
    sub_1B2E83668();
  }
  uint64_t v3 = sub_1B29A0438();
  return v4(v3);
}

uint64_t AppleMusicEventEntry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v7 = sub_1B29A3EB4(&qword_1EB7D87C0);
  MEMORY[0x1F4188790](v7 - 8);
  sub_1B299B6D0();
  uint64_t v37 = v8;
  uint64_t v40 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v36 = v9;
  MEMORY[0x1F4188790](v10);
  sub_1B299B6D0();
  uint64_t v39 = v11;
  type metadata accessor for AppleMusicEventEntry.CodingKeys();
  swift_getWitnessTable();
  uint64_t v43 = sub_1B2E83608();
  sub_1B299D278();
  uint64_t v38 = v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v16 = type metadata accessor for AppleMusicEventEntry();
  sub_1B299D278();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v33 - v20;
  sub_1B29AEC7C(a1, a1[3]);
  uint64_t v44 = v15;
  uint64_t v22 = (uint64_t)v45;
  sub_1B2E83A18();
  if (v22) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  uint64_t v33 = v18;
  uint64_t v34 = v16;
  uint64_t v23 = v39;
  uint64_t v24 = v40;
  long long v45 = a1;
  type metadata accessor for TypedEntityIdentifier();
  char v48 = 0;
  swift_getWitnessTable();
  sub_1B2E835B8();
  *(void *)uint64_t v21 = v49;
  char v47 = 1;
  sub_1B29CA49C((unint64_t *)&unk_1EB7E3BC0);
  sub_1B2E835B8();
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(&v21[*(int *)(v34 + 36)], v23, v24);
  char v46 = 2;
  uint64_t v25 = v37;
  sub_1B2E83548();
  uint64_t v26 = v21;
  uint64_t v27 = sub_1B29A4C10();
  v28(v27);
  uint64_t v29 = v34;
  sub_1B29CA4E0(v25, (uint64_t)&v26[*(int *)(v34 + 40)]);
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v35, v26, v29);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v45);
  uint64_t v30 = sub_1B29A0438();
  return v31(v30);
}

uint64_t sub_1B29C9B38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = *a1;
  return sub_1B29C8D94(&v5, a2, a3, a4);
}

uint64_t sub_1B29C9B6C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return AppleMusicEventEntry.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1B29C9B8C(void *a1)
{
  return AppleMusicEventEntry.encode(to:)(a1);
}

BOOL sub_1B29C9BA4(uint64_t *a1, uint64_t *a2)
{
  return static AppleMusicEventEntry.== infix(_:_:)(a1, a2);
}

uint64_t sub_1B29C9BB0()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1B2E839C8();
  sub_1B2E839C8();
  if (v1 == 1) {
    return sub_1B2E839A8();
  }
  sub_1B2E839A8();
  return sub_1B2E839C8();
}

uint64_t sub_1B29C9C20(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  char v3 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1B29C9C70(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D69747472617473 && a2 == 0xE900000000000065;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x656D6974646E65 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B29C9DCC(char a1)
{
  if (!a1) {
    return 0x7463656A627573;
  }
  if (a1 == 1) {
    return 0x6D69747472617473;
  }
  return 0x656D6974646E65;
}

uint64_t sub_1B29C9E28(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3A4C8);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B29CB394();
  sub_1B2E83A38();
  sub_1B29CB42C();
  sub_1B2E836D8();
  if (!v1)
  {
    sub_1B2E836A8();
    sub_1B2E83648();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1B29C9FC4()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1B2E83988();
  sub_1B2E839C8();
  sub_1B2E839C8();
  sub_1B2E839A8();
  if (v1 != 1) {
    sub_1B2E839C8();
  }
  return sub_1B2E839E8();
}

uint64_t sub_1B29CA064@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C3A4B8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B29CB394();
  sub_1B2E83A18();
  if (!v2)
  {
    sub_1B29CB3E0();
    sub_1B2E835B8();
    sub_1B2E83588();
    uint64_t v7 = v6;
    uint64_t v9 = sub_1B2E83528();
    char v11 = v10;
    uint64_t v12 = sub_1B29A412C();
    v13(v12);
    *(void *)a2 = v14;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 24) = v11 & 1;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
}

uint64_t sub_1B29CA218()
{
  return sub_1B29C9DCC(*v0);
}

uint64_t sub_1B29CA220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29C9C70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29CA248@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29C8F84();
  *a1 = result;
  return result;
}

uint64_t sub_1B29CA270(uint64_t a1)
{
  unint64_t v2 = sub_1B29CB394();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29CA2AC(uint64_t a1)
{
  unint64_t v2 = sub_1B29CB394();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29CA2E8()
{
  return *(void *)(v0 + 16);
}

double sub_1B29CA2F8()
{
  return *(double *)(v0 + 8);
}

uint64_t sub_1B29CA300@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B29CA064(a1, a2);
}

uint64_t sub_1B29CA318(void *a1)
{
  return sub_1B29C9E28(a1);
}

uint64_t sub_1B29CA330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B29CB250();

  return MEMORY[0x1F411AC60](a1, a2, a3, v6);
}

unint64_t sub_1B29CA3A4()
{
  return 0xD000000000000013;
}

uint64_t sub_1B29CA3CC()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1B2E83988();
  sub_1B2E839C8();
  sub_1B2E839C8();
  sub_1B2E839A8();
  if (v1 != 1) {
    sub_1B2E839C8();
  }
  return sub_1B2E839E8();
}

uint64_t type metadata accessor for AppleMusicEventEntry()
{
  return sub_1B29A1278();
}

uint64_t type metadata accessor for AppleMusicEventEntry.CodingKeys()
{
  return sub_1B29A1278();
}

uint64_t sub_1B29CA49C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B2E80668();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B29CA4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7D87C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B29CA54C()
{
  unint64_t result = qword_1E9C3A370;
  if (!qword_1E9C3A370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A370);
  }
  return result;
}

uint64_t sub_1B29CA598(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B29CA5D8()
{
  unint64_t result = qword_1E9C3A378;
  if (!qword_1E9C3A378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A378);
  }
  return result;
}

uint64_t sub_1B29CA624(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_1B29CA62C(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_1B29CA6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

void sub_1B29CA6B4()
{
  sub_1B2E80668();
  if (v0 <= 0x3F)
  {
    sub_1B29CB028();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1B29CA78C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1B2E80668();
    char v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(a3 + 40);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, v10))
    {
      uint64_t v15 = sub_1B29A3EB4(&qword_1EB7D87C0);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      v11(v13, v14, v10);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 0, 1, v10);
    }
  }
  return v4;
}

uint64_t sub_1B29CA8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1B2E80668();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v8(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v6, 1, v5);
  if (!result)
  {
    return v8(v6, v5);
  }
  return result;
}

void *sub_1B29CA9C0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E80668();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v9))
  {
    uint64_t v14 = sub_1B29A3EB4(&qword_1EB7D87C0);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

void *sub_1B29CAAD4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E80668();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  LODWORD(v7) = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1 + v12, 1, v9);
  int v15 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, v9);
  if (!v7)
  {
    if (!v15)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_1B29A3EB4(&qword_1EB7D87C0);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 0, 1, v9);
  return a1;
}

void *sub_1B29CAC5C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E80668();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v9))
  {
    uint64_t v14 = sub_1B29A3EB4(&qword_1EB7D87C0);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

void *sub_1B29CAD70(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E80668();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  LODWORD(v7) = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1 + v12, 1, v9);
  int v15 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, v9);
  if (!v7)
  {
    if (!v15)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_1B29A3EB4(&qword_1EB7D87C0);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 0, 1, v9);
  return a1;
}

uint64_t sub_1B29CAEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B29CAF0C);
}

uint64_t sub_1B29CAF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B2E80668();
  sub_1B299B768();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(int *)(a3 + 36);
  }
  else
  {
    uint64_t v8 = sub_1B29A3EB4(&qword_1EB7D87C0);
    uint64_t v9 = *(int *)(a3 + 40);
  }

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1 + v9, a2, v8);
}

uint64_t sub_1B29CAF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B29CAFA0);
}

uint64_t sub_1B29CAFA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1B2E80668();
  sub_1B299B768();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(int *)(a4 + 36);
  }
  else
  {
    uint64_t v10 = sub_1B29A3EB4(&qword_1EB7D87C0);
    uint64_t v11 = *(int *)(a4 + 40);
  }

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1 + v11, a2, a2, v10);
}

void sub_1B29CB028()
{
  if (!qword_1E9C3A400[0])
  {
    sub_1B2E80668();
    unint64_t v0 = sub_1B2E82F38();
    if (!v1) {
      atomic_store(v0, qword_1E9C3A400);
    }
  }
}

__n128 initializeWithCopy for AppleMusicEventEntryRecord(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AppleMusicEventEntryRecord(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AppleMusicEventEntryRecord(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AppleMusicEventEntryRecord()
{
  return &type metadata for AppleMusicEventEntryRecord;
}

uint64_t sub_1B29CB0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1B29CB104()
{
  return swift_getWitnessTable();
}

unint64_t sub_1B29CB124()
{
  unint64_t result = qword_1E9C3A488;
  if (!qword_1E9C3A488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A488);
  }
  return result;
}

unint64_t sub_1B29CB170(void *a1)
{
  a1[1] = sub_1B29CB1B8();
  a1[2] = sub_1B29CB204();
  a1[3] = sub_1B29CB250();
  a1[4] = sub_1B29CB29C();
  unint64_t result = sub_1B29CB2E8();
  a1[5] = result;
  return result;
}

unint64_t sub_1B29CB1B8()
{
  unint64_t result = qword_1E9C3A490;
  if (!qword_1E9C3A490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A490);
  }
  return result;
}

unint64_t sub_1B29CB204()
{
  unint64_t result = qword_1E9C3A498;
  if (!qword_1E9C3A498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A498);
  }
  return result;
}

unint64_t sub_1B29CB250()
{
  unint64_t result = qword_1E9C3A4A0;
  if (!qword_1E9C3A4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A4A0);
  }
  return result;
}

unint64_t sub_1B29CB29C()
{
  unint64_t result = qword_1E9C3A4A8;
  if (!qword_1E9C3A4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A4A8);
  }
  return result;
}

unint64_t sub_1B29CB2E8()
{
  unint64_t result = qword_1E9C3A4B0;
  if (!qword_1E9C3A4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A4B0);
  }
  return result;
}

unint64_t sub_1B29CB334(uint64_t a1)
{
  unint64_t result = sub_1B29CA5D8();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B29CB35C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B29CB378()
{
  return swift_getWitnessTable();
}

unint64_t sub_1B29CB394()
{
  unint64_t result = qword_1E9C3A4C0;
  if (!qword_1E9C3A4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A4C0);
  }
  return result;
}

unint64_t sub_1B29CB3E0()
{
  unint64_t result = qword_1E9C372D0;
  if (!qword_1E9C372D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C372D0);
  }
  return result;
}

unint64_t sub_1B29CB42C()
{
  unint64_t result = qword_1E9C3A4D0;
  if (!qword_1E9C3A4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A4D0);
  }
  return result;
}

unsigned char *_s20IntelligencePlatform26AppleMusicEventEntryRecordV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29CB544);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleMusicEventEntryRecord.CodingKeys()
{
  return &type metadata for AppleMusicEventEntryRecord.CodingKeys;
}

unint64_t sub_1B29CB580()
{
  unint64_t result = qword_1E9C3A4D8;
  if (!qword_1E9C3A4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A4D8);
  }
  return result;
}

unint64_t sub_1B29CB5D0()
{
  unint64_t result = qword_1E9C3A4E0;
  if (!qword_1E9C3A4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A4E0);
  }
  return result;
}

unint64_t sub_1B29CB620()
{
  unint64_t result = qword_1E9C3A4E8;
  if (!qword_1E9C3A4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A4E8);
  }
  return result;
}

uint64_t ViewService.appleMusicEventEntryView()()
{
  type metadata accessor for AppleMusicEventEntryView();
  uint64_t v1 = swift_allocObject();
  AppleMusicEventEntryView.init(viewService:)(v0);
  return v1;
}

uint64_t AppleMusicEventEntryView.__allocating_init(viewService:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  AppleMusicEventEntryView.init(viewService:)(a1);
  return v2;
}

uint64_t type metadata accessor for AppleMusicEventEntryView()
{
  return self;
}

uint64_t AppleMusicEventEntryView.init(viewService:)(void *a1)
{
  sub_1B299D2DC();
  unsigned int v4 = sub_1B29CB86C(0xD000000000000012, 0x80000001B2E96720, &qword_1E9C3A568);

  if (v2) {
    swift_deallocPartialClassInstance();
  }
  else {
    *(void *)(v1 + 16) = v4;
  }
  return sub_1B29A4C28();
}

void *sub_1B29CB7C4(uint64_t a1, uint64_t a2)
{
  return sub_1B29CB86C(a1, a2, qword_1E9C37D68);
}

void *sub_1B29CB818(uint64_t a1, uint64_t a2)
{
  return sub_1B29CB86C(a1, a2, &qword_1E9C38568);
}

void *sub_1B29CB86C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  v21[1] = *(id *)MEMORY[0x1E4F143B8];
  unsigned int v6 = *(void **)(v3 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  uint64_t v7 = (void *)sub_1B2E82348();
  v21[0] = 0;
  id v8 = objc_msgSend(v6, sel_requestAssertionForViewName_error_, v7, v21);

  id v9 = v21[0];
  if (v8)
  {
    uint64_t v10 = *(void **)(v3 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    uint64_t v11 = v10[5];
    uint64_t v12 = v10[6];
    sub_1B29AEC7C(v10 + 2, v11);
    uint64_t v13 = *(uint64_t (**)(id, uint64_t, uint64_t))(v12 + 8);
    id v14 = v9;
    uint64_t v15 = v13(v8, v11, v12);
    if (v4)
    {
      return (void *)swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v19 = v15;
      uint64_t v20 = v16;
      sub_1B29A3EB4(a3);
      unint64_t result = (void *)swift_allocObject();
      result[2] = v8;
      result[3] = v19;
      result[4] = v20;
    }
  }
  else
  {
    id v18 = v21[0];
    sub_1B2E80388();

    return (void *)swift_willThrow();
  }
  return result;
}

uint64_t AppleMusicEventEntryView.songEventEntries(order:)(char a1)
{
  char v1 = sub_1B299D3A0(a1);
  return sub_1B29CBA00(v1);
}

uint64_t sub_1B29CBA00(char a1)
{
  uint64_t v5 = 0;
  memset(v4, 0, sizeof(v4));
  sub_1B29CE4A4((uint64_t)v4, a1 & 1);
  uint64_t v2 = v1;
  sub_1B29D2368((uint64_t)v4, &qword_1E9C37D50);
  return v2;
}

uint64_t sub_1B29CBA5C()
{
  return sub_1B29CBAFC();
}

uint64_t sub_1B29CBAAC()
{
  return sub_1B29CBAFC();
}

uint64_t sub_1B29CBAFC()
{
  sub_1B29D2424();
  sub_1B29CEB2C(v0, v1, v2, v3, v4, v5);
  sub_1B299F2D8();
  sub_1B29D2368((uint64_t)&v7, &qword_1E9C37D50);
  return sub_1B29A4C28();
}

uint64_t AppleMusicEventEntryView.songEventEntries(whose:in:order:)(unsigned __int8 *a1)
{
  return sub_1B29CBC00(a1);
}

{
  return sub_1B29CBC00(a1);
}

uint64_t sub_1B29CBB88()
{
  return sub_1B29CBDEC();
}

uint64_t sub_1B29CBC00(unsigned __int8 *a1)
{
  return sub_1B29CBC24();
}

uint64_t sub_1B29CBC24()
{
  sub_1B29D246C();
  double v5 = v4;
  sub_1B29A3EB4(v2);
  sub_1B29D2650();
  if (v5 > v6)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v31 = *(void *)&v5;
  uint64_t v32 = *(void *)&v6;
  uint64_t v29 = sub_1B2E81508();
  uint64_t v30 = MEMORY[0x1E4F62E90];
  uint64_t v7 = (uint64_t)sub_1B29D1C70(v28);
  if ((v3 & 1) == 0)
  {
    if (qword_1EB7D9AD0 == -1)
    {
LABEL_4:
      id v8 = qword_1E9CAF628;
      goto LABEL_8;
    }
LABEL_10:
    uint64_t v7 = swift_once();
    goto LABEL_4;
  }
  if (qword_1E9C38C08 != -1) {
    uint64_t v7 = swift_once();
  }
  id v8 = qword_1E9CAF898;
LABEL_8:
  sub_1B299D36C(v7, (uint64_t)v8);
  sub_1B29A15CC();
  v9();
  v33[3] = sub_1B2E80BE8();
  v33[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v33);
  uint64_t v10 = sub_1B29A3EB4(v1);
  uint64_t v16 = sub_1B29D267C(v10, v10, MEMORY[0x1E4F62F98], v11, v12, v13, v14, v15, v28[0]);
  v0(v16);
  uint64_t v17 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v28);
  uint64_t v25 = sub_1B29D263C(v17, v18, v19, v20, v21, v22, v23, v24, v28[0], v28[1], v28[2], v29, v30, v31, v32, v33[0]);
  sub_1B29CE4A4((uint64_t)v25, v26);
  sub_1B299F2D8();
  sub_1B29D2368((uint64_t)v33, &qword_1E9C37D50);
  return sub_1B29A4C28();
}

uint64_t sub_1B29CBDB0()
{
  return sub_1B29CBDEC();
}

uint64_t sub_1B29CBDEC()
{
  sub_1B29D246C();
  double v5 = v4;
  sub_1B29A3EB4(v2);
  sub_1B29D2650();
  if (v5 > v6)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v31 = *(void *)&v5;
  uint64_t v32 = *(void *)&v6;
  uint64_t v29 = sub_1B2E81508();
  uint64_t v30 = MEMORY[0x1E4F62E90];
  uint64_t v7 = (uint64_t)sub_1B29D1C70(v28);
  if ((v3 & 1) == 0)
  {
    if (qword_1EB7D9AD0 == -1)
    {
LABEL_4:
      id v8 = qword_1E9CAF628;
      goto LABEL_8;
    }
LABEL_10:
    uint64_t v7 = swift_once();
    goto LABEL_4;
  }
  if (qword_1E9C38C08 != -1) {
    uint64_t v7 = swift_once();
  }
  id v8 = qword_1E9CAF898;
LABEL_8:
  sub_1B299D36C(v7, (uint64_t)v8);
  sub_1B29A15CC();
  v9();
  v33[3] = sub_1B2E80BE8();
  v33[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v33);
  uint64_t v10 = sub_1B29A3EB4(v1);
  uint64_t v16 = sub_1B29D267C(v10, v10, MEMORY[0x1E4F62F98], v11, v12, v13, v14, v15, v28[0]);
  v0(v16);
  uint64_t v17 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v28);
  uint64_t v21 = sub_1B29D263C(v17, v18, (uint64_t)&qword_1E9C39AC8, (uint64_t)&unk_1E9C3A518, (uint64_t)sub_1B29D1F38, (uint64_t)sub_1B29B9DDC, v19, v20, v28[0], v28[1], v28[2], v29, v30, v31, v32, v33[0]);
  sub_1B29CEB2C((uint64_t)v21, v22, v23, v24, v25, v26);
  sub_1B299F2D8();
  sub_1B29D2368((uint64_t)v33, &qword_1E9C37D50);
  return sub_1B29A4C28();
}

uint64_t AppleMusicEventEntryView.songEventEntries(whose:in:order:)()
{
  return sub_1B29CBFDC();
}

{
  return sub_1B29CBFDC();
}

{
  return sub_1B29CBFDC();
}

uint64_t sub_1B29CBFDC()
{
  return sub_1B29CC0B8();
}

uint64_t sub_1B29CC008()
{
  return sub_1B29CC24C();
}

uint64_t sub_1B29CC060()
{
  return sub_1B29CC24C();
}

uint64_t sub_1B29CC0B8()
{
  sub_1B29D24BC();
  uint64_t v2 = sub_1B2E81508();
  uint64_t v3 = (uint64_t)sub_1B29D25F0(v2, MEMORY[0x1E4F62E90], v27, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40);
  if (v1)
  {
    if (qword_1E9C38C08 != -1) {
      uint64_t v3 = swift_once();
    }
    double v4 = qword_1E9CAF898;
  }
  else
  {
    if (qword_1EB7D9AD0 != -1) {
      uint64_t v3 = swift_once();
    }
    double v4 = qword_1E9CAF628;
  }
  sub_1B299D36C(v3, (uint64_t)v4);
  sub_1B29A15CC();
  v5();
  uint64_t v6 = sub_1B2999880();
  uint64_t v7 = sub_1B29D25D8(v6, MEMORY[0x1E4F62D00], v28, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41[0], v41[1], v41[2], v41[3], v41[4]);
  uint64_t v15 = sub_1B299989C((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, v29, v31, v32, v33, v34, v35, v36);
  v0(v15);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v31);
  uint64_t v16 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v36);
  uint64_t v24 = sub_1B29D25C4(v16, v17, v18, v19, v20, v21, v22, v23, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
          v41[0]);
  sub_1B29CE4A4((uint64_t)v24, v25);
  sub_1B299F2D8();
  sub_1B29D2368((uint64_t)v41, &qword_1E9C37D50);
  return sub_1B29A4C28();
}

uint64_t sub_1B29CC220()
{
  return sub_1B29CC24C();
}

uint64_t sub_1B29CC24C()
{
  sub_1B29D24BC();
  uint64_t v2 = sub_1B2E81508();
  uint64_t v3 = (uint64_t)sub_1B29D25F0(v2, MEMORY[0x1E4F62E90], v27, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40);
  if (v1)
  {
    if (qword_1E9C38C08 != -1) {
      uint64_t v3 = swift_once();
    }
    double v4 = qword_1E9CAF898;
  }
  else
  {
    if (qword_1EB7D9AD0 != -1) {
      uint64_t v3 = swift_once();
    }
    double v4 = qword_1E9CAF628;
  }
  sub_1B299D36C(v3, (uint64_t)v4);
  sub_1B29A15CC();
  v5();
  uint64_t v6 = sub_1B2999880();
  uint64_t v7 = sub_1B29D25D8(v6, MEMORY[0x1E4F62D00], v28, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41[0], v41[1], v41[2], v41[3], v41[4]);
  uint64_t v15 = sub_1B299989C((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, v29, v31, v32, v33, v34, v35, v36);
  v0(v15);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v31);
  uint64_t v16 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v36);
  uint64_t v20 = sub_1B29D25C4(v16, v17, (uint64_t)&qword_1E9C39AC8, (uint64_t)&unk_1E9C3A518, (uint64_t)sub_1B29D1F38, (uint64_t)sub_1B29B9DDC, v18, v19, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
          v41[0]);
  sub_1B29CEB2C((uint64_t)v20, v21, v22, v23, v24, v25);
  sub_1B299F2D8();
  sub_1B29D2368((uint64_t)v41, &qword_1E9C37D50);
  return sub_1B29A4C28();
}

uint64_t AppleMusicEventEntryView.songEventEntries(overlapping:order:)()
{
  return sub_1B29CC5B4();
}

{
  sub_1B299D394();
  return sub_1B29CC5B4();
}

{
  sub_1B299D394();
  return sub_1B29CC5B4();
}

{
  sub_1B299D394();
  return sub_1B29CC5B4();
}

{
  sub_1B299D394();
  return sub_1B29CC5B4();
}

uint64_t sub_1B29CC424()
{
  return sub_1B29CC634();
}

uint64_t sub_1B29CC488()
{
  return sub_1B29CC634();
}

uint64_t sub_1B29CC4EC()
{
  return sub_1B29CC634();
}

uint64_t sub_1B29CC550()
{
  return sub_1B29CC634();
}

uint64_t sub_1B29CC5B4()
{
  sub_1B29D250C();
  uint64_t v1 = v0();
  uint64_t v9 = sub_1B29D25B0(v1, v2, v3, v4, v5, v6, v7, v8, v12, v13[0]);
  sub_1B29CE4A4((uint64_t)v9, v10);
  sub_1B299F2D8();
  sub_1B29D2368((uint64_t)v13, &qword_1E9C37D50);
  return sub_1B29A4C28();
}

uint64_t sub_1B29CC608()
{
  return sub_1B29CC634();
}

uint64_t sub_1B29CC634()
{
  sub_1B29D250C();
  uint64_t v1 = v0();
  uint64_t v5 = sub_1B29D25B0(v1, v2, (uint64_t)&qword_1E9C39AC8, (uint64_t)&unk_1E9C3A518, (uint64_t)sub_1B29D1F38, (uint64_t)sub_1B29B9DDC, v3, v4, v12, v13[0]);
  sub_1B29CEB2C((uint64_t)v5, v6, v7, v8, v9, v10);
  sub_1B299F2D8();
  sub_1B29D2368((uint64_t)v13, &qword_1E9C37D50);
  return sub_1B29A4C28();
}

uint64_t AppleMusicEventEntryView.enumerateSongEventEntries(order:using:)(char a1)
{
  return sub_1B29CC750();
}

uint64_t sub_1B29CC6F8()
{
  return sub_1B29CC750();
}

uint64_t sub_1B29CC724()
{
  return sub_1B29CC750();
}

uint64_t sub_1B29CC750()
{
  sub_1B29D2424();
  sub_1B29D1118();
  return sub_1B29D2368((uint64_t)&v1, &qword_1E9C37D50);
}

uint64_t sub_1B29CC79C()
{
  return sub_1B29CC750();
}

uint64_t AppleMusicEventEntryView.enumerateSongEventEntries(whose:in:order:using:)(unsigned __int8 *a1)
{
  return sub_1B29CCA68(a1);
}

{
  return sub_1B29CCA68(a1);
}

{
  return sub_1B29CCE04(a1);
}

{
  return sub_1B29CCE04(a1);
}

{
  return sub_1B29CCE04(a1);
}

uint64_t sub_1B29CC804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B29CC85C(a1, a2, a3, a4, a5, (uint64_t *)&unk_1EB7D74F0, (uint64_t *)&unk_1E9C3E390, MEMORY[0x1E4F62FC8]);
}

uint64_t sub_1B29CC85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, void (*a8)(uint64_t *, uint64_t, void))
{
  sub_1B29D2628();
  char v11 = v10;
  sub_1B2E805C8();
  double v13 = v12;
  sub_1B29A3EB4(a6);
  sub_1B29D2650();
  if (v13 > v14)
  {
    __break(1u);
    goto LABEL_10;
  }
  *(double *)&v21[5] = v13;
  *(double *)&v21[6] = v14;
  v21[3] = sub_1B2E81508();
  v21[4] = MEMORY[0x1E4F62E90];
  uint64_t v15 = (uint64_t)sub_1B29D1C70(v21);
  if ((v11 & 1) == 0)
  {
    if (qword_1EB7D9AD0 == -1)
    {
LABEL_4:
      uint64_t v16 = qword_1E9CAF628;
      goto LABEL_8;
    }
LABEL_10:
    uint64_t v15 = swift_once();
    goto LABEL_4;
  }
  if (qword_1E9C38C08 != -1) {
    uint64_t v15 = swift_once();
  }
  uint64_t v16 = qword_1E9CAF898;
LABEL_8:
  sub_1B299D36C(v15, (uint64_t)v16);
  sub_1B29A15CC();
  v17();
  v22[3] = sub_1B2E80BE8();
  v22[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v22);
  uint64_t v18 = sub_1B29A3EB4(a7);
  a8(v21, v18, MEMORY[0x1E4F62F98]);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v21);
  sub_1B29D2608();
  sub_1B29D1118();
  return sub_1B29D2368((uint64_t)v22, &qword_1E9C37D50);
}

uint64_t sub_1B29CCA68(unsigned __int8 *a1)
{
  uint64_t v1 = sub_1B29A4140(a1);
  return sub_1B29CC85C(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1B29CCAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B29CC85C(a1, a2, a3, a4, a5, &qword_1E9C38938, &qword_1E9C38940, MEMORY[0x1E4F62F60]);
}

uint64_t sub_1B29CCB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B29CC85C(a1, a2, a3, a4, a5, &qword_1E9C38938, &qword_1E9C38940, MEMORY[0x1E4F62F60]);
}

uint64_t sub_1B29CCB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B29CCBC4(a1, a2, a3, a4, a5, MEMORY[0x1E4F62E28]);
}

uint64_t sub_1B29CCBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1B29D2628();
  char v8 = v7;
  sub_1B2E805C8();
  uint64_t v9 = sub_1B2E81508();
  uint64_t v10 = (uint64_t)sub_1B29D25F0(v9, MEMORY[0x1E4F62E90], a6, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  if (v8)
  {
    if (qword_1E9C38C08 != -1) {
      uint64_t v10 = swift_once();
    }
    char v11 = qword_1E9CAF898;
  }
  else
  {
    if (qword_1EB7D9AD0 != -1) {
      uint64_t v10 = swift_once();
    }
    char v11 = qword_1E9CAF628;
  }
  sub_1B299D36C(v10, (uint64_t)v11);
  sub_1B29A15CC();
  v12();
  uint64_t v13 = sub_1B2999880();
  sub_1B29D25D8(v13, MEMORY[0x1E4F62D00], v15, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27[0], v27[1], v27[2], v27[3], v27[4]);
  v16(&v22, &v17);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v17);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v22);
  sub_1B29D2608();
  sub_1B29D1118();
  return sub_1B29D2368((uint64_t)v27, &qword_1E9C37D50);
}

uint64_t sub_1B29CCD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B29CCBC4(a1, a2, a3, a4, a5, MEMORY[0x1E4F62E38]);
}

uint64_t sub_1B29CCE04(unsigned __int8 *a1)
{
  uint64_t v1 = sub_1B29A4140(a1);
  return sub_1B29CCBC4(v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1B29CCE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B29CCBC4(a1, a2, a3, a4, a5, MEMORY[0x1E4F62D78]);
}

uint64_t AppleMusicEventEntryView.enumerateSongEventEntries(overlapping:order:using:)()
{
  return sub_1B29CCF08();
}

{
  sub_1B299D394();
  return sub_1B29CCF08();
}

{
  sub_1B299D394();
  return sub_1B29CCF08();
}

{
  sub_1B299D394();
  return sub_1B29CCF08();
}

{
  sub_1B299D394();
  return sub_1B29CCF08();
}

uint64_t sub_1B29CCEC8()
{
  return sub_1B29CCF08();
}

uint64_t sub_1B29CCF08()
{
  void (*v0)(void *__return_ptr);
  void v2[5];

  sub_1B29D261C();
  v0(v2);
  sub_1B29D1118();
  return sub_1B29D2368((uint64_t)v2, &qword_1E9C37D50);
}

uint64_t sub_1B29CCFEC()
{
  return sub_1B29CCF08();
}

uint64_t sub_1B29CD02C()
{
  return sub_1B29CCF08();
}

uint64_t sub_1B29CD0B8()
{
  return sub_1B29CCF08();
}

uint64_t sub_1B29CD144()
{
  return sub_1B29CCF08();
}

uint64_t sub_1B29CD1D0()
{
  return sub_1B29CCF08();
}

uint64_t AppleMusicEventEntryView.latestSongEventEntry()@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D063C(&qword_1E9C3A210, &qword_1E9C3A550, a1);
}

uint64_t AppleMusicEventEntryView.earliestSongEventEntry()@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D063C(&qword_1E9C3A210, &qword_1E9C3A550, a1);
}

uint64_t AppleMusicEventEntryView.songEventIds(order:)(char a1)
{
  sub_1B299D3A0(a1);
  uint64_t result = sub_1B29D0F38();
  if (!v1)
  {
    sub_1B29D1358(result);
    sub_1B299AD88();
    return v2;
  }
  return result;
}

uint64_t AppleMusicEventEntryView.songEventIds(whose:in:order:)(unsigned __int8 *a1)
{
  return sub_1B29CD3A4(a1);
}

{
  return sub_1B29CD3A4(a1);
}

uint64_t sub_1B29CD3A4(unsigned __int8 *a1)
{
  uint64_t v3 = sub_1B29A4140(a1);
  uint64_t result = sub_1B29D0764(v3, v4, v5, v6, v7, v8);
  if (!v1)
  {
    sub_1B29D1358(result);
    sub_1B299AD88();
    return v2;
  }
  return result;
}

uint64_t AppleMusicEventEntryView.songEventIds(whose:in:order:)(unsigned __int8 *a1, uint64_t a2, char a3)
{
  return sub_1B29CD484(a1, a2, a3, MEMORY[0x1E4F62E28]);
}

{
  return sub_1B29CD484(a1, a2, a3, MEMORY[0x1E4F62E38]);
}

{
  return sub_1B29CD484(a1, a2, a3, MEMORY[0x1E4F62D78]);
}

uint64_t sub_1B29CD484(unsigned __int8 *a1, uint64_t a2, char a3, void (*a4)(uint64_t *, uint64_t *))
{
  uint64_t result = sub_1B29D0AC8(*a1, a2, a3 & 1, a4);
  if (!v4)
  {
    sub_1B29D1358(result);
    sub_1B299AD88();
    return v5;
  }
  return result;
}

uint64_t AppleMusicEventEntryView.songEventIds(overlapping:order:)()
{
  return sub_1B29CD5C4();
}

{
  return sub_1B29CD5C4();
}

{
  return sub_1B29CD5C4();
}

{
  return sub_1B29CD5C4();
}

{
  return sub_1B29CD5C4();
}

uint64_t sub_1B29CD5C4()
{
  sub_1B299D394();
  uint64_t result = sub_1B29D0D18();
  if (!v0)
  {
    sub_1B29D1358(result);
    sub_1B299AD88();
    return v1;
  }
  return result;
}

uint64_t AppleMusicEventEntryView.enumerateSongEventIds(order:using:)(char a1)
{
  return sub_1B29CD6EC();
}

uint64_t sub_1B29CD66C()
{
  return sub_1B29CD6EC();
}

uint64_t sub_1B29CD6AC()
{
  return sub_1B29CD6EC();
}

uint64_t sub_1B29CD6EC()
{
  return sub_1B29CC750();
}

uint64_t AppleMusicEventEntryView.enumerateSongEventIds(whose:in:order:using:)(unsigned __int8 *a1)
{
  return sub_1B29CD850(a1);
}

{
  return sub_1B29CD850(a1);
}

{
  return sub_1B29CD978(a1);
}

{
  return sub_1B29CD978(a1);
}

{
  return sub_1B29CD978(a1);
}

uint64_t sub_1B29CD768()
{
  return sub_1B29CD7A8();
}

uint64_t sub_1B29CD7A8()
{
  sub_1B299D2DC();
  uint64_t v9 = v2;
  uint64_t v10 = v3;
  uint64_t v11 = v4;
  return sub_1B29CC85C(v0 & 1, v5, v1 & 1, v6, (uint64_t)v8, (uint64_t *)&unk_1EB7D74F0, (uint64_t *)&unk_1E9C3E390, MEMORY[0x1E4F62FC8]);
}

uint64_t sub_1B29CD850(unsigned __int8 *a1)
{
  uint64_t v1 = sub_1B29A4140(a1);
  return v2(v1);
}

uint64_t sub_1B29CD890()
{
  sub_1B299D2DC();
  uint64_t v9 = v2;
  uint64_t v10 = v3;
  uint64_t v11 = v4;
  return sub_1B29CC85C(v0 & 1, v5, v1 & 1, v6, (uint64_t)v8, &qword_1E9C38938, &qword_1E9C38940, MEMORY[0x1E4F62F60]);
}

uint64_t sub_1B29CD8F8()
{
  return sub_1B29CD890();
}

uint64_t sub_1B29CD978(unsigned __int8 *a1)
{
  return sub_1B29CDB2C();
}

uint64_t sub_1B29CD9B0()
{
  return sub_1B29CDB2C();
}

uint64_t sub_1B29CDA44()
{
  return sub_1B29CDB2C();
}

uint64_t sub_1B29CDAD8()
{
  return sub_1B29CDB2C();
}

uint64_t sub_1B29CDB2C()
{
  sub_1B299D2DC();
  v9[2] = v2;
  v9[3] = v3;
  v9[4] = v4;
  return sub_1B29CCBC4(v0 & 1, v5, v1 & 1, v6, (uint64_t)v9, v7);
}

uint64_t AppleMusicEventEntryView.enumerateSongEventIds(overlapping:order:using:)()
{
  return sub_1B29CDEF4();
}

{
  sub_1B299D394();
  return sub_1B29CDEF4();
}

{
  sub_1B299D394();
  return sub_1B29CDEF4();
}

{
  sub_1B299D394();
  return sub_1B29CDEF4();
}

{
  sub_1B299D394();
  return sub_1B29CDEF4();
}

uint64_t sub_1B29CDBD0()
{
  return sub_1B29CDEF4();
}

uint64_t sub_1B29CDC84()
{
  return sub_1B29CDEF4();
}

uint64_t sub_1B29CDD38()
{
  return sub_1B29CDEF4();
}

uint64_t sub_1B29CDDEC()
{
  return sub_1B29CDEF4();
}

uint64_t sub_1B29CDEA0()
{
  return sub_1B29CDEF4();
}

uint64_t sub_1B29CDEF4()
{
  return sub_1B29CCF08();
}

uint64_t AppleMusicEventEntryView.latestSongEventId()@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D1978(a1);
}

uint64_t AppleMusicEventEntryView.earliestSongEventId()@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D1978(a1);
}

uint64_t AppleMusicEventEntryView.deinit()
{
  swift_release();
  return v0;
}

uint64_t AppleMusicEventEntryView.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B29CE02C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(uint64_t)@<X3>, unint64_t *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v7 = sub_1B29A3EB4(a3);
  sub_1B299D278();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1B299E4A0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_1B2E81508();
  sub_1B299D278();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  sub_1B299E4A0();
  uint64_t v20 = v19 - v18;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E2ED0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1B2EC00A0;
  uint64_t v22 = sub_1B2E80918();
  uint64_t v23 = MEMORY[0x1E4F62C30];
  *(void *)(v21 + 56) = v22;
  *(void *)(v21 + 64) = v23;
  sub_1B29D1C70((uint64_t *)(v21 + 32));
  if (qword_1EB7D9AD0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1B29A4B98(v14, (uint64_t)qword_1E9CAF628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v20, v24, v14);
  if (a1) {
    sub_1B2E81168();
  }
  else {
    sub_1B2E81158();
  }
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v20, v14);
  a4(v25);
  sub_1B2E80968();
  swift_bridgeObjectRelease();
  sub_1B29D2210(a2, (uint64_t)&v32, &qword_1E9C37D50);
  if (!v33) {
    return sub_1B29D2368((uint64_t)&v32, &qword_1E9C37D50);
  }
  sub_1B29D1D20(&v32, (uint64_t)v34);
  sub_1B29D22C4(a5, a3);
  sub_1B2E80D68();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v34);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a6, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(a6, v13, v7);
}

uint64_t sub_1B29CE2E8(char a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t), uint64_t a5, unint64_t *a6)
{
  char v10 = a1 & 1;
  uint64_t v11 = sub_1B29A3EB4(a3);
  sub_1B299D278();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  sub_1B299E4A0();
  uint64_t v17 = v16 - v15;
  sub_1B29CE02C(v10, a2, a3, a4, a6, v16 - v15);
  sub_1B29A3EB4(&qword_1EB7D98C0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B2EC00A0;
  if (qword_1E9C385A8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1B2E81508();
  sub_1B29A4B98(v19, (uint64_t)qword_1E9CAF880);
  uint64_t v20 = MEMORY[0x1E4F62E78];
  *(void *)(v18 + 56) = v19;
  *(void *)(v18 + 64) = v20;
  sub_1B29D1C70((uint64_t *)(v18 + 32));
  sub_1B299B3B0();
  (*(void (**)(void))(v21 + 16))();
  sub_1B2E810F8();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
}

void sub_1B29CE4A4(uint64_t a1, char a2)
{
  uint64_t v64 = a1;
  uint64_t v63 = *v2;
  LODWORD(v62) = a2 & 1;
  uint64_t v3 = sub_1B29A3EB4(&qword_1EB7D87C0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3A210);
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v47 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v47 - v13;
  swift_getObjectType();
  char v66 = v62;
  uint64_t v67 = v64;
  uint64_t v68 = v63;
  sub_1B29A3EB4(&qword_1E9C3A560);
  uint64_t v15 = v65;
  sub_1B2E80C18();
  if (v15) {
    return;
  }
  uint64_t v50 = 0;
  uint64_t v51 = v14;
  uint64_t v52 = v12;
  uint64_t v53 = v9;
  uint64_t v54 = v6;
  uint64_t v16 = v74;
  uint64_t v17 = *(void *)(v74 + 16);
  if (!v17)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v58 = 162;
  uint64_t v57 = 1336;
  uint64_t v56 = 2889;
  swift_bridgeObjectRetain();
  uint64_t v47 = v16;
  uint64_t v18 = (unsigned char *)(v16 + 56);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  long long v49 = xmmword_1B2EC00B0;
  uint64_t v55 = v5;
  while (1)
  {
    uint64_t v20 = *((void *)v18 - 3);
    if (*v18)
    {
      uint64_t v21 = 1;
    }
    else
    {
      sub_1B2E805B8();
      uint64_t v21 = 0;
    }
    uint64_t v22 = sub_1B2E80668();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, v21, 1, v22);
    EntityClass.init(intValue:)(SHIBYTE(v20), (uint64_t)&v69);
    if (!v70)
    {
      sub_1B29D1EA8();
      uint64_t v42 = (void *)swift_allocError();
      *uint64_t v43 = v49;
      v43[1] = 0u;
      v43[2] = 0u;
      v43[3] = 0u;
      *(long long *)((char *)v43 + 57) = 0u;
      goto LABEL_26;
    }
    if (v58 < 38) {
      break;
    }
    if (!_Records_GDEntityClass_records) {
      goto LABEL_35;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x380) >= v57) {
      goto LABEL_33;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x388) >= v56) {
      goto LABEL_34;
    }
    if (!_Records_GDEntityClass_classIds[0]) {
      goto LABEL_36;
    }
    uint64_t v65 = v70;
    uint64_t v60 = v20;
    uint64_t v61 = v17;
    uint64_t v62 = v19;
    uint64_t v63 = v69;
    uint64_t v24 = v71;
    uint64_t v23 = v72;
    LODWORD(v64) = v73;
    uint64_t v25 = *(unsigned __int8 *)(_Records_GDEntityClass_records + 0x378);
    uint64_t v26 = sub_1B2E82538();
    if (!_Records_GDEntityClass_labels) {
      goto LABEL_37;
    }
    uint64_t v28 = v26;
    uint64_t v29 = v27;
    uint64_t v30 = sub_1B2E82538();
    uint64_t v32 = v31;
    uint64_t v75 = v28;
    uint64_t v76 = v29;
    uint64_t v77 = v30;
    uint64_t v78 = v31;
    char v79 = v25;
    if (v30 == v24 && v23 == v31) {
      goto LABEL_20;
    }
    uint64_t v34 = v30;
    if (sub_1B2E837A8()) {
      goto LABEL_20;
    }
    uint64_t v69 = v63;
    uint64_t v70 = v65;
    uint64_t v71 = v24;
    uint64_t v72 = v23;
    unsigned __int8 v73 = v64;
    EntityClass.ancestorClassesSet.getter();
    sub_1B29FB9A8();
    int v48 = v35;
    swift_bridgeObjectRelease();
    if (v48)
    {
LABEL_20:
      sub_1B29D1EF4(v63, v65);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v36 = v54;
      uint64_t v37 = v52;
      sub_1B2E805B8();
      uint64_t v5 = v55;
      sub_1B29D2308((uint64_t)v55, (uint64_t)v37 + *(int *)(v36 + 40), &qword_1EB7D87C0);
      *uint64_t v37 = v60;
      uint64_t v38 = (uint64_t)v51;
      sub_1B29D2308((uint64_t)v37, (uint64_t)v51, &qword_1E9C3A210);
      uint64_t v39 = (uint64_t)v53;
      sub_1B29D2308(v38, (uint64_t)v53, &qword_1E9C3A210);
      uint64_t v19 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_1B29B7A20();
      }
      uint64_t v17 = v61;
      unint64_t v40 = *(void *)(v19 + 16);
      uint64_t v41 = v59;
      if (v40 >= *(void *)(v19 + 24) >> 1)
      {
        uint64_t v46 = sub_1B29B7A20();
        uint64_t v41 = v59;
        uint64_t v19 = v46;
      }
      *(void *)(v19 + 16) = v40 + 1;
      sub_1B29D2308(v39, v19+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v40, &qword_1E9C3A210);
      goto LABEL_27;
    }
    sub_1B29D1EA8();
    uint64_t v42 = (void *)swift_allocError();
    *(void *)uint64_t v44 = v28;
    *(void *)(v44 + 8) = v29;
    *(void *)(v44 + 16) = v34;
    *(void *)(v44 + 24) = v32;
    uint64_t v45 = v63;
    *(void *)(v44 + 32) = v25;
    *(void *)(v44 + 40) = v45;
    *(void *)(v44 + 48) = v65;
    *(void *)(v44 + 56) = v24;
    *(void *)(v44 + 64) = v23;
    *(unsigned char *)(v44 + 72) = v64;
    uint64_t v5 = v55;
    uint64_t v19 = v62;
    uint64_t v17 = v61;
LABEL_26:
    swift_willThrow();
    sub_1B29D2368((uint64_t)v5, &qword_1EB7D87C0);

    uint64_t v50 = 0;
LABEL_27:
    v18 += 32;
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1B29CEB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t (*a6)(BOOL, unint64_t, uint64_t, uint64_t *))
{
  uint64_t v69 = a6;
  uint64_t v77 = a5;
  uint64_t v74 = a1;
  uint64_t v75 = a4;
  sub_1B299D2DC();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v71 = v10;
  uint64_t v70 = sub_1B29A3EB4(v10);
  sub_1B299D278();
  uint64_t v72 = v11;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v58 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v58 - v19;
  swift_getObjectType();
  char v78 = v9;
  uint64_t v79 = v74;
  uint64_t v80 = v7;
  sub_1B29A3EB4(v75);
  uint64_t v21 = v76;
  sub_1B2E80C18();
  if (v21) {
    return;
  }
  uint64_t v63 = v20;
  uint64_t v64 = v18;
  uint64_t v65 = v15;
  uint64_t v22 = v91;
  uint64_t v23 = *(void *)(v91 + 16);
  uint64_t v62 = 0;
  if (!v23)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v68 = 162;
  uint64_t v67 = 1336;
  uint64_t v66 = 2889;
  swift_bridgeObjectRetain();
  uint64_t v24 = (uint64_t *)MEMORY[0x1E4FBC860];
  uint64_t v58 = v22;
  uint64_t v25 = v22 + 48;
  __n128 v61 = (__n128)xmmword_1B2EC00B0;
  while (1)
  {
    uint64_t v26 = *(void *)(v25 - 16);
    EntityClass.init(intValue:)(SHIBYTE(v26), (uint64_t)&v81);
    if (!v82)
    {
      sub_1B29D1EA8();
      uint64_t v50 = (void *)swift_allocError();
      sub_1B29D24A8(v52, v61, (uint64_t)v50, v51);
      goto LABEL_23;
    }
    if (v68 < 55) {
      break;
    }
    if (!_Records_GDEntityClass_records) {
      goto LABEL_33;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x518) >= v67) {
      goto LABEL_31;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x520) >= v66) {
      goto LABEL_32;
    }
    if (!_Records_GDEntityClass_classIds[0]) {
      goto LABEL_34;
    }
    uint64_t v77 = v82;
    uint64_t v73 = v26;
    uint64_t v74 = v23;
    uint64_t v75 = v24;
    uint64_t v76 = v81;
    uint64_t v28 = v83;
    uint64_t v27 = v84;
    int v29 = v85;
    uint64_t v30 = *(unsigned __int8 *)(_Records_GDEntityClass_records + 0x510);
    uint64_t v31 = sub_1B2E82538();
    if (!_Records_GDEntityClass_labels) {
      goto LABEL_35;
    }
    uint64_t v33 = v31;
    uint64_t v34 = v32;
    uint64_t v35 = sub_1B2E82538();
    uint64_t v37 = v36;
    uint64_t v86 = v33;
    uint64_t v87 = v34;
    uint64_t v88 = v35;
    uint64_t v89 = v36;
    char v90 = v30;
    if (v35 == v28 && v27 == v36) {
      goto LABEL_17;
    }
    uint64_t v39 = v35;
    if (sub_1B2E837A8()) {
      goto LABEL_17;
    }
    uint64_t v81 = v76;
    uint64_t v82 = v77;
    uint64_t v83 = v28;
    uint64_t v84 = v27;
    unsigned __int8 v85 = v29;
    int v60 = v29;
    EntityClass.ancestorClassesSet.getter();
    sub_1B29FB9A8();
    int v59 = v40;
    char v41 = v60;
    swift_bridgeObjectRelease();
    if (v59)
    {
LABEL_17:
      sub_1B29D1EF4(v76, v77);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v42 = v64;
      sub_1B2E805B8();
      sub_1B2E805B8();
      void *v42 = v73;
      uint64_t v43 = (uint64_t)v63;
      uint64_t v44 = v71;
      sub_1B29D2308((uint64_t)v42, (uint64_t)v63, v71);
      uint64_t v45 = (uint64_t)v65;
      sub_1B29D2308(v43, (uint64_t)v65, v44);
      uint64_t v24 = v75;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v46 = v69;
      }
      else
      {
        uint64_t v46 = v69;
        uint64_t v24 = (uint64_t *)v69(0, v24[2] + 1, 1, v24);
      }
      uint64_t v23 = v74;
      unint64_t v48 = v24[2];
      unint64_t v47 = v24[3];
      uint64_t v49 = v72;
      if (v48 >= v47 >> 1)
      {
        uint64_t v57 = v46(v47 > 1, v48 + 1, 1, v24);
        uint64_t v49 = v72;
        uint64_t v24 = (uint64_t *)v57;
      }
      v24[2] = v48 + 1;
      sub_1B29D2308(v45, (uint64_t)v24+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v48, v44);
      goto LABEL_24;
    }
    sub_1B29D1EA8();
    uint64_t v53 = swift_allocError();
    char v54 = v41;
    uint64_t v50 = (void *)v53;
    *(void *)uint64_t v55 = v33;
    *(void *)(v55 + 8) = v34;
    *(void *)(v55 + 16) = v39;
    *(void *)(v55 + 24) = v37;
    uint64_t v24 = v75;
    uint64_t v56 = v76;
    *(void *)(v55 + 32) = v30;
    *(void *)(v55 + 40) = v56;
    *(void *)(v55 + 48) = v77;
    *(void *)(v55 + 56) = v28;
    *(void *)(v55 + 64) = v27;
    *(unsigned char *)(v55 + 72) = v54;
    uint64_t v23 = v74;
LABEL_23:
    swift_willThrow();

    uint64_t v62 = 0;
LABEL_24:
    v25 += 24;
    if (!--v23)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

uint64_t sub_1B29CF098(uint64_t a1, char a2, uint64_t a3)
{
  char v4 = a2 & 1;
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C3A540);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29CE02C(v4, a3, &qword_1E9C3A540, (void (*)(uint64_t))sub_1B29CB204, &qword_1E9C3A548, (uint64_t)v8);
  sub_1B29D22C4(&qword_1E9C3A558, &qword_1E9C3A540);
  sub_1B29CB1B8();
  uint64_t v9 = sub_1B2E809F8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t sub_1B29CF208(uint64_t a1, char a2, uint64_t a3)
{
  char v4 = a2 & 1;
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C37D48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29CE02C(v4, a3, &qword_1E9C37D48, (void (*)(uint64_t))sub_1B29D1FE0, &qword_1E9C3A528, (uint64_t)v8);
  sub_1B29D22C4(&qword_1E9C37D40, &qword_1E9C37D48);
  sub_1B29D20A0();
  uint64_t v9 = sub_1B2E809F8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t sub_1B29CF378(uint64_t a1, char a2, uint64_t a3)
{
  char v4 = a2 & 1;
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C3A4F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29CE02C(v4, a3, &qword_1E9C3A4F0, (void (*)(uint64_t))sub_1B29D1CD4, &qword_1E9C3A500, (uint64_t)v8);
  sub_1B29D22C4(&qword_1E9C3A508, &qword_1E9C3A4F0);
  sub_1B29D1E5C();
  uint64_t v9 = sub_1B2E809F8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

void sub_1B29CF4E8(uint64_t a1, char a2, uint64_t a3, void (*a4)(uint64_t, uint64_t *), uint64_t a5)
{
  uint64_t v73 = a4;
  uint64_t v74 = a5;
  char v6 = a2 & 1;
  uint64_t v7 = sub_1B29A3EB4(&qword_1EB7D87C0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v77 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1B29A3EB4(&qword_1E9C3A210);
  uint64_t v9 = MEMORY[0x1F4188790](v72);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v62 - v12;
  uint64_t v14 = sub_1B29A3EB4(&qword_1E9C3A540);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29CE02C(v6, a3, &qword_1E9C3A540, (void (*)(uint64_t))sub_1B29CB204, &qword_1E9C3A548, (uint64_t)v17);
  sub_1B29D22C4(&qword_1E9C3A558, &qword_1E9C3A540);
  sub_1B29CB1B8();
  uint64_t v18 = v76;
  uint64_t v19 = sub_1B2E809E8();
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (v18) {
    return;
  }
  uint64_t v69 = v13;
  uint64_t v70 = (uint64_t *)v11;
  sub_1B2DD059C(v20, v21, v22, v23, v24, v25, v26, v27, v62, v63, v64, SBYTE8(v64), SBYTE9(v64));
  uint64_t v68 = 162;
  uint64_t v67 = 1336;
  uint64_t v66 = 2889;
  long long v64 = xmmword_1B2EC00B0;
  uint64_t v28 = v77;
  uint64_t v65 = v19;
  while (1)
  {
    if ((v81 & 0x100) != 0)
    {
LABEL_3:
      swift_release();
      return;
    }
    uint64_t v29 = v78;
    if (v81)
    {
      uint64_t v30 = 1;
    }
    else
    {
      sub_1B2E805B8();
      uint64_t v30 = 0;
    }
    uint64_t v31 = sub_1B2E80668();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v28, v30, 1, v31);
    EntityClass.init(intValue:)(SHIBYTE(v29), (uint64_t)&v78);
    if (!v79)
    {
      sub_1B29D1EA8();
      uint64_t v58 = (void *)swift_allocError();
      *int v59 = v64;
      v59[1] = 0u;
      v59[2] = 0u;
      v59[3] = 0u;
      *(long long *)((char *)v59 + 57) = 0u;
LABEL_25:
      swift_willThrow();
      sub_1B29D2368(v28, &qword_1EB7D87C0);

      goto LABEL_26;
    }
    if (v68 < 38) {
      break;
    }
    if (!_Records_GDEntityClass_records) {
      goto LABEL_31;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x380) >= v67) {
      goto LABEL_29;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x388) >= v66) {
      goto LABEL_30;
    }
    uint64_t v76 = v79;
    uint64_t v71 = v29;
    if (!_Records_GDEntityClass_classIds[0]) {
      goto LABEL_32;
    }
    uint64_t v75 = v78;
    uint64_t v33 = v80;
    uint64_t v32 = v81;
    int v34 = v82;
    uint64_t v35 = *(unsigned __int8 *)(_Records_GDEntityClass_records + 0x378);
    uint64_t v36 = sub_1B2E82538();
    if (!_Records_GDEntityClass_labels) {
      goto LABEL_33;
    }
    uint64_t v38 = v36;
    uint64_t v39 = v37;
    uint64_t v40 = sub_1B2E82538();
    uint64_t v42 = v41;
    uint64_t v83 = v38;
    uint64_t v84 = v39;
    uint64_t v85 = v40;
    uint64_t v86 = v41;
    char v87 = v35;
    if (v40 != v33 || v32 != v41)
    {
      uint64_t v44 = v40;
      if ((sub_1B2E837A8() & 1) == 0)
      {
        uint64_t v78 = v75;
        uint64_t v79 = v76;
        uint64_t v80 = v33;
        uint64_t v81 = v32;
        unsigned __int8 v82 = v34;
        HIDWORD(v63) = v34;
        EntityClass.ancestorClassesSet.getter();
        sub_1B29FB9A8();
        LODWORD(v63) = v45;
        char v46 = BYTE4(v63);
        swift_bridgeObjectRelease();
        if ((v63 & 1) == 0)
        {
          sub_1B29D1EA8();
          uint64_t v58 = (void *)swift_allocError();
          *(void *)uint64_t v60 = v38;
          *(void *)(v60 + 8) = v39;
          *(void *)(v60 + 16) = v44;
          *(void *)(v60 + 24) = v42;
          uint64_t v61 = v75;
          *(void *)(v60 + 32) = v35;
          *(void *)(v60 + 40) = v61;
          uint64_t v28 = v77;
          *(void *)(v60 + 48) = v76;
          *(void *)(v60 + 56) = v33;
          *(void *)(v60 + 64) = v32;
          *(unsigned char *)(v60 + 72) = v46;
          goto LABEL_25;
        }
      }
    }
    sub_1B29D1EF4(v75, v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v47 = v72;
    unint64_t v48 = v70;
    sub_1B2E805B8();
    uint64_t v28 = v77;
    sub_1B29D2308(v77, (uint64_t)v48 + *(int *)(v47 + 40), &qword_1EB7D87C0);
    uint64_t *v48 = v71;
    uint64_t v49 = (uint64_t)v69;
    sub_1B29D2308((uint64_t)v48, (uint64_t)v69, &qword_1E9C3A210);
    LOBYTE(v78) = 0;
    v73(v49, &v78);
    uint64_t v50 = sub_1B29D2368(v49, &qword_1E9C3A210);
    if (v78) {
      goto LABEL_3;
    }
LABEL_26:
    sub_1B2DD059C(v50, v51, v52, v53, v54, v55, v56, v57, v62, v63, v64, SBYTE8(v64), SBYTE9(v64));
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

void sub_1B29CFAC4(uint64_t a1, char a2, uint64_t a3, void (*a4)(uint64_t, uint64_t *), uint64_t a5)
{
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  char v7 = a2 & 1;
  uint64_t v65 = sub_1B29A3EB4(&qword_1E9C37DF8);
  uint64_t v8 = MEMORY[0x1F4188790](v65);
  long long v64 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v55 - v10;
  uint64_t v12 = sub_1B29A3EB4(&qword_1E9C37D48);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29CE02C(v7, a3, &qword_1E9C37D48, (void (*)(uint64_t))sub_1B29D1FE0, &qword_1E9C3A528, (uint64_t)v15);
  sub_1B29D22C4(&qword_1E9C37D40, &qword_1E9C37D48);
  sub_1B29D20A0();
  uint64_t v16 = sub_1B2E809E8();
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v5) {
    return;
  }
  uint64_t v62 = v11;
  sub_1B2DD08E0(v17, v18, v19, v20, v21, v22, v23, v24, v55, v56, v57, SBYTE8(v57));
  uint64_t v60 = 1336;
  uint64_t v61 = 162;
  uint64_t v59 = 2889;
  long long v57 = xmmword_1B2EC00B0;
  uint64_t v58 = v16;
  while (1)
  {
    if (v72)
    {
LABEL_3:
      swift_release();
      return;
    }
    uint64_t v25 = v69;
    EntityClass.init(intValue:)(SHIBYTE(v69), (uint64_t)&v69);
    if (!v70)
    {
      sub_1B29D1EA8();
      uint64_t v51 = (void *)swift_allocError();
      *uint64_t v52 = v57;
      v52[1] = 0u;
      v52[2] = 0u;
      v52[3] = 0u;
      *(long long *)((char *)v52 + 57) = 0u;
LABEL_22:
      swift_willThrow();

      goto LABEL_23;
    }
    if (v61 < 55) {
      break;
    }
    if (!_Records_GDEntityClass_records) {
      goto LABEL_28;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x518) >= v60) {
      goto LABEL_26;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x520) >= v59) {
      goto LABEL_27;
    }
    if (!_Records_GDEntityClass_classIds[0]) {
      goto LABEL_29;
    }
    uint64_t v79 = v70;
    uint64_t v63 = v25;
    uint64_t v68 = v69;
    uint64_t v27 = v71;
    uint64_t v26 = v72;
    int v28 = v73;
    uint64_t v29 = *(unsigned __int8 *)(_Records_GDEntityClass_records + 0x510);
    uint64_t v30 = sub_1B2E82538();
    if (!_Records_GDEntityClass_labels) {
      goto LABEL_30;
    }
    uint64_t v32 = v30;
    uint64_t v33 = v31;
    uint64_t v34 = sub_1B2E82538();
    uint64_t v36 = v35;
    uint64_t v74 = v32;
    uint64_t v75 = v33;
    uint64_t v76 = v34;
    uint64_t v77 = v35;
    char v78 = v29;
    if (v34 != v27 || v26 != v35)
    {
      uint64_t v38 = v34;
      if ((sub_1B2E837A8() & 1) == 0)
      {
        uint64_t v69 = v68;
        uint64_t v70 = v79;
        uint64_t v71 = v27;
        uint64_t v72 = v26;
        unsigned __int8 v73 = v28;
        HIDWORD(v56) = v28;
        EntityClass.ancestorClassesSet.getter();
        sub_1B29FB9A8();
        LODWORD(v56) = v39;
        char v40 = BYTE4(v56);
        swift_bridgeObjectRelease();
        if ((v56 & 1) == 0)
        {
          sub_1B29D1EA8();
          uint64_t v51 = (void *)swift_allocError();
          *(void *)uint64_t v53 = v32;
          *(void *)(v53 + 8) = v33;
          *(void *)(v53 + 16) = v38;
          *(void *)(v53 + 24) = v36;
          uint64_t v54 = v68;
          *(void *)(v53 + 32) = v29;
          *(void *)(v53 + 40) = v54;
          *(void *)(v53 + 48) = v79;
          *(void *)(v53 + 56) = v27;
          *(void *)(v53 + 64) = v26;
          *(unsigned char *)(v53 + 72) = v40;
          goto LABEL_22;
        }
      }
    }
    sub_1B29D1EF4(v68, v79);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = (uint64_t *)v64;
    sub_1B2E805B8();
    sub_1B2E805B8();
    uint64_t v42 = (uint64_t)v62;
    *uint64_t v41 = v63;
    sub_1B29D2308((uint64_t)v41, v42, &qword_1E9C37DF8);
    LOBYTE(v69) = 0;
    v66(v42, &v69);
    uint64_t v43 = sub_1B29D2368(v42, &qword_1E9C37DF8);
    if (v69) {
      goto LABEL_3;
    }
LABEL_23:
    sub_1B2DD08E0(v43, v44, v45, v46, v47, v48, v49, v50, v55, v56, v57, SBYTE8(v57));
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_1B29D0008(uint64_t a1, char a2, uint64_t a3, void (*a4)(uint64_t, uint64_t *), uint64_t a5)
{
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  char v7 = a2 & 1;
  uint64_t v65 = sub_1B29A3EB4(&qword_1E9C39AC8);
  uint64_t v8 = MEMORY[0x1F4188790](v65);
  long long v64 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v55 - v10;
  uint64_t v12 = sub_1B29A3EB4(&qword_1E9C3A4F0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29CE02C(v7, a3, &qword_1E9C3A4F0, (void (*)(uint64_t))sub_1B29D1CD4, &qword_1E9C3A500, (uint64_t)v15);
  sub_1B29D22C4(&qword_1E9C3A508, &qword_1E9C3A4F0);
  sub_1B29D1E5C();
  uint64_t v16 = sub_1B2E809E8();
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v5) {
    return;
  }
  uint64_t v62 = v11;
  sub_1B2DD0BFC(v17, v18, v19, v20, v21, v22, v23, v24, v55, v56, v57, SBYTE8(v57));
  uint64_t v60 = 1336;
  uint64_t v61 = 162;
  uint64_t v59 = 2889;
  long long v57 = xmmword_1B2EC00B0;
  uint64_t v58 = v16;
  while (1)
  {
    if (v72)
    {
LABEL_3:
      swift_release();
      return;
    }
    uint64_t v25 = v69;
    EntityClass.init(intValue:)(SHIBYTE(v69), (uint64_t)&v69);
    if (!v70)
    {
      sub_1B29D1EA8();
      uint64_t v51 = (void *)swift_allocError();
      *uint64_t v52 = v57;
      v52[1] = 0u;
      v52[2] = 0u;
      v52[3] = 0u;
      *(long long *)((char *)v52 + 57) = 0u;
LABEL_22:
      swift_willThrow();

      goto LABEL_23;
    }
    if (v61 < 55) {
      break;
    }
    if (!_Records_GDEntityClass_records) {
      goto LABEL_28;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x518) >= v60) {
      goto LABEL_26;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x520) >= v59) {
      goto LABEL_27;
    }
    if (!_Records_GDEntityClass_classIds[0]) {
      goto LABEL_29;
    }
    uint64_t v79 = v70;
    uint64_t v63 = v25;
    uint64_t v68 = v69;
    uint64_t v27 = v71;
    uint64_t v26 = v72;
    int v28 = v73;
    uint64_t v29 = *(unsigned __int8 *)(_Records_GDEntityClass_records + 0x510);
    uint64_t v30 = sub_1B2E82538();
    if (!_Records_GDEntityClass_labels) {
      goto LABEL_30;
    }
    uint64_t v32 = v30;
    uint64_t v33 = v31;
    uint64_t v34 = sub_1B2E82538();
    uint64_t v36 = v35;
    uint64_t v74 = v32;
    uint64_t v75 = v33;
    uint64_t v76 = v34;
    uint64_t v77 = v35;
    char v78 = v29;
    if (v34 != v27 || v26 != v35)
    {
      uint64_t v38 = v34;
      if ((sub_1B2E837A8() & 1) == 0)
      {
        uint64_t v69 = v68;
        uint64_t v70 = v79;
        uint64_t v71 = v27;
        uint64_t v72 = v26;
        unsigned __int8 v73 = v28;
        HIDWORD(v56) = v28;
        EntityClass.ancestorClassesSet.getter();
        sub_1B29FB9A8();
        LODWORD(v56) = v39;
        char v40 = BYTE4(v56);
        swift_bridgeObjectRelease();
        if ((v56 & 1) == 0)
        {
          sub_1B29D1EA8();
          uint64_t v51 = (void *)swift_allocError();
          *(void *)uint64_t v53 = v32;
          *(void *)(v53 + 8) = v33;
          *(void *)(v53 + 16) = v38;
          *(void *)(v53 + 24) = v36;
          uint64_t v54 = v68;
          *(void *)(v53 + 32) = v29;
          *(void *)(v53 + 40) = v54;
          *(void *)(v53 + 48) = v79;
          *(void *)(v53 + 56) = v27;
          *(void *)(v53 + 64) = v26;
          *(unsigned char *)(v53 + 72) = v40;
          goto LABEL_22;
        }
      }
    }
    sub_1B29D1EF4(v68, v79);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = (uint64_t *)v64;
    sub_1B2E805B8();
    sub_1B2E805B8();
    uint64_t v42 = (uint64_t)v62;
    *uint64_t v41 = v63;
    sub_1B29D2308((uint64_t)v41, v42, &qword_1E9C39AC8);
    LOBYTE(v69) = 0;
    v66(v42, &v69);
    uint64_t v43 = sub_1B29D2368(v42, &qword_1E9C39AC8);
    if (v69) {
      goto LABEL_3;
    }
LABEL_23:
    sub_1B2DD0BFC(v43, v44, v45, v46, v47, v48, v49, v50, v55, v56, v57, SBYTE8(v57));
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_1B29D054C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D063C(&qword_1E9C3A210, &qword_1E9C3A550, a1);
}

uint64_t sub_1B29D059C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D063C(&qword_1E9C37DF8, &qword_1E9C3A530, a1);
}

uint64_t sub_1B29D05EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D063C(&qword_1E9C39AC8, &qword_1E9C3A520, a1);
}

uint64_t sub_1B29D063C@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1B29A3EB4(a1);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a3, 1, 1, v6);
  uint64_t result = sub_1B29CC750();
  if (v3) {
    return sub_1B29D2368(a3, a2);
  }
  return result;
}

uint64_t sub_1B29D06E0(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  sub_1B29D2368(a3, a4);
  sub_1B29D2210(a1, a3, a5);
  uint64_t v9 = sub_1B29A3EB4(a5);
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a3, 0, 1, v9);
  *a2 = 1;
  return result;
}

uint64_t sub_1B29D0764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, void (*a6)(uint64_t *, uint64_t, void))
{
  sub_1B29D261C();
  char v10 = v9;
  sub_1B2E805C8();
  double v12 = v11;
  sub_1B29A3EB4(a4);
  sub_1B29D2650();
  if (v12 > v13)
  {
    __break(1u);
    goto LABEL_10;
  }
  *(double *)&v19[5] = v12;
  *(double *)&v19[6] = v13;
  v19[3] = sub_1B2E81508();
  v19[4] = MEMORY[0x1E4F62E90];
  uint64_t v14 = (uint64_t)sub_1B29D1C70(v19);
  if ((v10 & 1) == 0)
  {
    if (qword_1EB7D9AD0 == -1)
    {
LABEL_4:
      uint64_t v15 = qword_1E9CAF628;
      goto LABEL_8;
    }
LABEL_10:
    uint64_t v14 = swift_once();
    goto LABEL_4;
  }
  if (qword_1E9C38C08 != -1) {
    uint64_t v14 = swift_once();
  }
  uint64_t v15 = qword_1E9CAF898;
LABEL_8:
  sub_1B299D36C(v14, (uint64_t)v15);
  sub_1B29A15CC();
  v16();
  v20[3] = sub_1B2E80BE8();
  v20[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v20);
  uint64_t v17 = sub_1B29A3EB4(a5);
  a6(v19, v17, MEMORY[0x1E4F62F98]);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v19);
  sub_1B29D2528();
  sub_1B299F2D8();
  sub_1B29D2368((uint64_t)v20, &qword_1E9C37D50);
  return sub_1B29A4C28();
}

uint64_t sub_1B29D0928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29D0764(a1, a2, a3, (uint64_t *)&unk_1EB7D74F0, (uint64_t *)&unk_1E9C3E390, MEMORY[0x1E4F62FC8]);
}

uint64_t sub_1B29D0978()
{
  sub_1B299D2DC();
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1E9C38970);
  uint64_t result = sub_1B2E80C18();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B29D0A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29D0764(a1, a2, a3, &qword_1E9C38938, &qword_1E9C38940, MEMORY[0x1E4F62F60]);
}

uint64_t sub_1B29D0A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29D0764(a1, a2, a3, &qword_1E9C38938, &qword_1E9C38940, MEMORY[0x1E4F62F60]);
}

uint64_t sub_1B29D0AC8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t *))
{
  sub_1B29D261C();
  char v6 = v5;
  sub_1B2E805C8();
  uint64_t v7 = sub_1B2E81508();
  uint64_t v8 = (uint64_t)sub_1B29D25F0(v7, MEMORY[0x1E4F62E90], v13, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  if (v6)
  {
    if (qword_1E9C38C08 != -1) {
      uint64_t v8 = swift_once();
    }
    char v9 = qword_1E9CAF898;
  }
  else
  {
    if (qword_1EB7D9AD0 != -1) {
      uint64_t v8 = swift_once();
    }
    char v9 = qword_1E9CAF628;
  }
  sub_1B299D36C(v8, (uint64_t)v9);
  sub_1B29A15CC();
  v10();
  uint64_t v11 = sub_1B2999880();
  sub_1B29D25D8(v11, MEMORY[0x1E4F62D00], v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25[0], v25[1], v25[2], v25[3], v25[4]);
  a4(&v20, &v15);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v15);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v20);
  sub_1B29D2528();
  sub_1B299F2D8();
  sub_1B29D2368((uint64_t)v25, &qword_1E9C37D50);
  return sub_1B29A4C28();
}

uint64_t sub_1B29D0C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29D0AC8(a1, a2, a3, MEMORY[0x1E4F62E28]);
}

uint64_t sub_1B29D0C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29D0AC8(a1, a2, a3, MEMORY[0x1E4F62E38]);
}

uint64_t sub_1B29D0CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29D0AC8(a1, a2, a3, MEMORY[0x1E4F62D78]);
}

uint64_t sub_1B29D0D18()
{
  void (*v0)(void *__return_ptr);
  void v2[5];

  sub_1B29D261C();
  v0(v2);
  sub_1B29D2528();
  sub_1B299F2D8();
  sub_1B29D2368((uint64_t)v2, &qword_1E9C37D50);
  return sub_1B29A4C28();
}

uint64_t sub_1B29D0D8C()
{
  return sub_1B29D0D18();
}

uint64_t sub_1B29D0DCC()
{
  return sub_1B29D0D18();
}

uint64_t sub_1B29D0E0C()
{
  return sub_1B29D0D18();
}

uint64_t sub_1B29D0E4C()
{
  return sub_1B29D0D18();
}

uint64_t sub_1B29D0E8C()
{
  return sub_1B29D0D18();
}

uint64_t sub_1B29D0ECC()
{
  return sub_1B29D0D18();
}

uint64_t sub_1B29D0F0C()
{
  return sub_1B29D0F38();
}

uint64_t sub_1B29D0F38()
{
  sub_1B29D2424();
  sub_1B29D0978();
  sub_1B299F2D8();
  sub_1B29D2368((uint64_t)&v1, &qword_1E9C37D50);
  return sub_1B29A4C28();
}

uint64_t sub_1B29D0F7C()
{
  return sub_1B29D0F38();
}

uint64_t sub_1B29D0FA8()
{
  return sub_1B29D0F38();
}

uint64_t sub_1B29D0FD4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t), uint64_t a7, unint64_t *a8)
{
  char v12 = a2 & 1;
  uint64_t v13 = sub_1B29A3EB4((uint64_t *)&unk_1E9C3E380);
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v19 = v18 - v17;
  sub_1B29CE2E8(v12, a3, a5, a6, a7, a8);
  sub_1B29D22C4((unint64_t *)&qword_1E9C44410, (uint64_t *)&unk_1E9C3E380);
  sub_1B29D1C24();
  uint64_t v20 = sub_1B2E80A38();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
  return v20;
}

uint64_t sub_1B29D1118()
{
  return sub_1B2E80C18();
}

uint64_t sub_1B29D11B8(uint64_t a1, char a2, uint64_t a3, void (*a4)(uint64_t *, char *), uint64_t a5, uint64_t a6, uint64_t *a7, void (*a8)(uint64_t), uint64_t a9, unint64_t *a10)
{
  char v12 = a2 & 1;
  uint64_t v13 = sub_1B29A3EB4((uint64_t *)&unk_1E9C3E380);
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v19 = v18 - v17;
  sub_1B29CE2E8(v12, a3, a7, a8, a9, a10);
  sub_1B29D22C4((unint64_t *)&qword_1E9C44410, (uint64_t *)&unk_1E9C3E380);
  sub_1B29D1C24();
  sub_1B2E80A28();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
  if (!v23)
  {
    do
    {
      sub_1B2DD06DC((uint64_t)&v24);
      if (v25) {
        break;
      }
      char v26 = 0;
      a4(&v24, &v26);
    }
    while ((v26 & 1) == 0);
    return swift_release();
  }
  return result;
}

void sub_1B29D1358(uint64_t a1)
{
  uint64_t v49 = *(void *)(a1 + 16);
  if (!v49) {
    return;
  }
  uint64_t v48 = 162;
  uint64_t v47 = 1336;
  uint64_t v46 = 2889;
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  __n128 v44 = (__n128)xmmword_1B2EC00B0;
  uint64_t v45 = v3;
  while (1)
  {
    sub_1B29D2690(v3, v4, v5, v6, v7, v8, v9, v10, v42, v43, v44.n128_i64[0], v44.n128_i64[1], v45);
    if (!v53)
    {
      sub_1B29D1EA8();
      uint64_t v1 = sub_1B299E4D4();
      sub_1B29D24A8(v32, v44, v1, v31);
      goto LABEL_22;
    }
    if (v48 < 38) {
      break;
    }
    if (!_Records_GDEntityClass_records) {
      goto LABEL_30;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x380) >= v47) {
      goto LABEL_28;
    }
    uint64_t v13 = *(void *)(_Records_GDEntityClass_records + 0x388);
    if (v13 >= v46) {
      goto LABEL_29;
    }
    uint64_t v51 = v12;
    uint64_t v50 = v1;
    if (!_Records_GDEntityClass_classIds[0]) {
      goto LABEL_31;
    }
    sub_1B29D2668();
    uint64_t v15 = *(unsigned __int8 *)(v14 + 888);
    uint64_t v16 = sub_1B2E82538();
    if (!_Records_GDEntityClass_labels) {
      goto LABEL_32;
    }
    uint64_t v12 = v16;
    uint64_t v17 = sub_1B2E82538();
    uint64_t v19 = sub_1B29D2598(v17, v18);
    BOOL v27 = v27 && v2 == v20;
    if (v27
      || (uint64_t v19 = sub_1B29D2574(), (v19 & 1) != 0)
      || (sub_1B29D24E4(),
          sub_1B29FB9A8(),
          LODWORD(v43) = v28,
          uint64_t v1 = HIDWORD(v43),
          uint64_t v19 = swift_bridgeObjectRelease(),
          (v43 & 1) != 0))
    {
      sub_1B299E4B0(v19, v20, v21, v22, v23, v24, v25, v26, v42, v43, v44.n128_i64[0], v44.n128_i64[1], v45, v46, v47, v48, v49, v50, v51,
        v53);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B299B780();
        sub_1B29B7A34();
        uint64_t v12 = v41;
      }
      sub_1B29D255C();
      if (v30)
      {
        sub_1B29D2544(v29);
        sub_1B29B7A34();
        uint64_t v12 = v3;
      }
      *(void *)(v12 + 16) = v13;
      *(void *)(v12 + 8 * v1 + 32) = v15;
      goto LABEL_23;
    }
    sub_1B29D1EA8();
    uint64_t v33 = sub_1B299E4D4();
    sub_1B29D2440(v33, v34, v35, v36, v37, v38, v39, v40, v42, v43, v44.n128_i64[0], v44.n128_i64[1], v45, v46, v47, v48, v49, v50, v51,
      v53);
LABEL_22:
    swift_willThrow();

LABEL_23:
    if (v49 == ++v11)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

void sub_1B29D15B4(uint64_t a1)
{
  uint64_t v49 = *(void *)(a1 + 16);
  if (!v49) {
    return;
  }
  uint64_t v48 = 162;
  uint64_t v47 = 1336;
  uint64_t v46 = 2889;
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  __n128 v44 = (__n128)xmmword_1B2EC00B0;
  uint64_t v45 = v3;
  while (1)
  {
    sub_1B29D2690(v3, v4, v5, v6, v7, v8, v9, v10, v42, v43, v44.n128_i64[0], v44.n128_i64[1], v45);
    if (!v53)
    {
      sub_1B29D1EA8();
      uint64_t v1 = sub_1B299E4D4();
      sub_1B29D24A8(v32, v44, v1, v31);
      goto LABEL_22;
    }
    if (v48 < 55) {
      break;
    }
    if (!_Records_GDEntityClass_records) {
      goto LABEL_30;
    }
    if (*(void *)(_Records_GDEntityClass_records + 0x518) >= v47) {
      goto LABEL_28;
    }
    uint64_t v13 = *(void *)(_Records_GDEntityClass_records + 0x520);
    if (v13 >= v46) {
      goto LABEL_29;
    }
    uint64_t v51 = v12;
    uint64_t v50 = v1;
    if (!_Records_GDEntityClass_classIds[0]) {
      goto LABEL_31;
    }
    sub_1B29D2668();
    uint64_t v15 = *(unsigned __int8 *)(v14 + 1296);
    uint64_t v16 = sub_1B2E82538();
    if (!_Records_GDEntityClass_labels) {
      goto LABEL_32;
    }
    uint64_t v12 = v16;
    uint64_t v17 = sub_1B2E82538();
    uint64_t v19 = sub_1B29D2598(v17, v18);
    BOOL v27 = v27 && v2 == v20;
    if (v27
      || (uint64_t v19 = sub_1B29D2574(), (v19 & 1) != 0)
      || (sub_1B29D24E4(),
          sub_1B29FB9A8(),
          LODWORD(v43) = v28,
          uint64_t v1 = HIDWORD(v43),
          uint64_t v19 = swift_bridgeObjectRelease(),
          (v43 & 1) != 0))
    {
      sub_1B299E4B0(v19, v20, v21, v22, v23, v24, v25, v26, v42, v43, v44.n128_i64[0], v44.n128_i64[1], v45, v46, v47, v48, v49, v50, v51,
        v53);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B299B780();
        sub_1B29B8DF0();
        uint64_t v12 = v41;
      }
      sub_1B29D255C();
      if (v30)
      {
        sub_1B29D2544(v29);
        sub_1B29B8DF0();
        uint64_t v12 = v3;
      }
      *(void *)(v12 + 16) = v13;
      *(void *)(v12 + 8 * v1 + 32) = v15;
      goto LABEL_23;
    }
    sub_1B29D1EA8();
    uint64_t v33 = sub_1B299E4D4();
    sub_1B29D2440(v33, v34, v35, v36, v37, v38, v39, v40, v42, v43, v44.n128_i64[0], v44.n128_i64[1], v45, v46, v47, v48, v49, v50, v51,
      v53);
LABEL_22:
    swift_willThrow();

LABEL_23:
    if (v49 == ++v11)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

void sub_1B29D1810(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t), uint64_t a4, uint64_t a5, void (*a6)(uint64_t *__return_ptr))
{
  a6(&v9);
  if (v6) {

  }
  else {
    a3(&v9, a2);
  }
}

uint64_t sub_1B29D1878@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D1978(a1);
}

uint64_t method lookup function for AppleMusicEventEntryView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppleMusicEventEntryView);
}

uint64_t dispatch thunk of AppleMusicEventEntryView.__allocating_init(viewService:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1B29D18F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D1978(a1);
}

uint64_t sub_1B29D1938@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D1978(a1);
}

uint64_t sub_1B29D1978@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1B29CC750();
  if (!v1)
  {
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 8) = 1;
  }
  return result;
}

void sub_1B29D19D8(uint64_t a1, unsigned char *a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  if (v4)
  {
  }
  else
  {
    *(void *)a3 = v7;
    *(unsigned char *)(a3 + 8) = 0;
    *a2 = 1;
  }
}

uint64_t sub_1B29D1A38@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1B29CF098(a1, a2 & 1, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_1B29D1A68@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1B29D0FD4(a1, a2 & 1, a3, a4, &qword_1E9C3A540, (void (*)(uint64_t))sub_1B29CB204, (uint64_t)&type metadata for AppleMusicEventEntryRecord, &qword_1E9C3A548);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

void sub_1B29D1AC4(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t), uint64_t a4, uint64_t a5)
{
  sub_1B29D1810(*a1, a2, a3, a4, a5, (void (*)(uint64_t *__return_ptr))sub_1B2B550FC);
}

void sub_1B29D1AF4(uint64_t *a1, unsigned char *a2, uint64_t a3)
{
  sub_1B29D19D8(*a1, a2, a3, (void (*)(uint64_t *__return_ptr))sub_1B2B550FC);
}

uint64_t sub_1B29D1B24@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1B29CF208(a1, a2 & 1, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_1B29D1B54@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1B29D0FD4(a1, a2 & 1, a3, a4, &qword_1E9C37D48, (void (*)(uint64_t))sub_1B29D1FE0, (uint64_t)&type metadata for FutureLifeEventEntryRecord, &qword_1E9C3A528);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

void sub_1B29D1BB0(uint64_t *a1, unsigned char *a2, uint64_t a3)
{
  sub_1B29D19D8(*a1, a2, a3, (void (*)(uint64_t *__return_ptr))sub_1B2B551D8);
}

uint64_t sub_1B29D1BE0(uint64_t a1)
{
  return sub_1B29D2168(a1, &qword_1E9C3A4F0, (void (*)(uint64_t))sub_1B29D1CD4, (uint64_t)&type metadata for LifeEventEntryRecord, &qword_1E9C3A500);
}

unint64_t sub_1B29D1C24()
{
  unint64_t result = qword_1EB7E39E0;
  if (!qword_1EB7E39E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E39E0);
  }
  return result;
}

uint64_t *sub_1B29D1C70(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_1B29D1CD4()
{
  unint64_t result = qword_1E9C3A4F8;
  if (!qword_1E9C3A4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A4F8);
  }
  return result;
}

uint64_t sub_1B29D1D20(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1B29D1D38@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1B29D0FD4(a1, a2 & 1, a3, a4, &qword_1E9C3A4F0, (void (*)(uint64_t))sub_1B29D1CD4, (uint64_t)&type metadata for LifeEventEntryRecord, &qword_1E9C3A500);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

uint64_t sub_1B29D1D94@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1B29CF378(a1, a2 & 1, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

void sub_1B29D1DC4(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t), uint64_t a4, uint64_t a5)
{
  sub_1B29D1810(*a1, a2, a3, a4, a5, (void (*)(uint64_t *__return_ptr))sub_1B2B551D8);
}

void sub_1B29D1DF4(uint64_t *a1, uint64_t a2)
{
  sub_1B29D1DC4(a1, a2, *(void (**)(uint64_t *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1B29D1E14()
{
  sub_1B29D249C();
  return sub_1B29D1D38(v0, v1, v2, v3, v4);
}

uint64_t sub_1B29D1E30()
{
  return sub_1B29D229C();
}

unint64_t sub_1B29D1E5C()
{
  unint64_t result = qword_1E9C3A510;
  if (!qword_1E9C3A510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A510);
  }
  return result;
}

unint64_t sub_1B29D1EA8()
{
  unint64_t result = qword_1E9C38598;
  if (!qword_1E9C38598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38598);
  }
  return result;
}

uint64_t sub_1B29D1EF4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B29D1F38()
{
  sub_1B29D249C();
  return sub_1B29D1D94(v0, v1, v2, v3);
}

uint64_t sub_1B29D1F54(uint64_t a1, unsigned char *a2)
{
  return sub_1B29D06E0(a1, a2, *(void *)(v2 + 16), &qword_1E9C3A520, &qword_1E9C39AC8);
}

void sub_1B29D1F80(uint64_t *a1, unsigned char *a2)
{
  sub_1B29D1BB0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1B29D1F9C(uint64_t a1)
{
  return sub_1B29D2168(a1, &qword_1E9C37D48, (void (*)(uint64_t))sub_1B29D1FE0, (uint64_t)&type metadata for FutureLifeEventEntryRecord, &qword_1E9C3A528);
}

unint64_t sub_1B29D1FE0()
{
  unint64_t result = qword_1E9C37E00;
  if (!qword_1E9C37E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37E00);
  }
  return result;
}

uint64_t sub_1B29D202C()
{
  sub_1B29D249C();
  return sub_1B29D1B54(v0, v1, v2, v3, v4);
}

uint64_t sub_1B29D2048(uint64_t a1, unsigned char *a2)
{
  return sub_1B29D06E0(a1, a2, *(void *)(v2 + 16), &qword_1E9C3A530, &qword_1E9C37DF8);
}

uint64_t sub_1B29D2074()
{
  return sub_1B29D229C();
}

unint64_t sub_1B29D20A0()
{
  unint64_t result = qword_1E9C37E08;
  if (!qword_1E9C37E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37E08);
  }
  return result;
}

uint64_t sub_1B29D20EC()
{
  sub_1B29D249C();
  return sub_1B29D1B24(v0, v1, v2, v3);
}

void sub_1B29D2108(uint64_t *a1, unsigned char *a2)
{
  sub_1B29D1AF4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1B29D2124(uint64_t a1)
{
  return sub_1B29D2168(a1, &qword_1E9C3A540, (void (*)(uint64_t))sub_1B29CB204, (uint64_t)&type metadata for AppleMusicEventEntryRecord, &qword_1E9C3A548);
}

uint64_t sub_1B29D2168(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t), uint64_t a4, unint64_t *a5)
{
  return sub_1B29D11B8(a1, *(unsigned char *)(v5 + 16), *(void *)(v5 + 24), *(void (**)(uint64_t *, char *))(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), a2, a3, a4, a5);
}

void sub_1B29D21A8(uint64_t *a1, uint64_t a2)
{
  sub_1B29D1AC4(a1, a2, *(void (**)(uint64_t *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1B29D21C8()
{
  sub_1B29D249C();
  return sub_1B29D1A68(v0, v1, v2, v3, v4);
}

uint64_t sub_1B29D21E4(uint64_t a1, unsigned char *a2)
{
  return sub_1B29D06E0(a1, a2, *(void *)(v2 + 16), &qword_1E9C3A550, &qword_1E9C3A210);
}

uint64_t sub_1B29D2210(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B29A3EB4(a3);
  sub_1B299B3B0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1B29D2270()
{
  return sub_1B29D229C();
}

uint64_t sub_1B29D229C()
{
  sub_1B29D249C();
  return v0();
}

uint64_t sub_1B29D22C4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B29D2308(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B29A3EB4(a3);
  sub_1B299B3B0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1B29D2368(uint64_t a1, uint64_t *a2)
{
  sub_1B29A3EB4(a2);
  sub_1B299B3B0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1B29D23C0()
{
  sub_1B29D249C();
  return sub_1B29D1A38(v0, v1, v2, v3);
}

void sub_1B29D23DC(uint64_t *a1, uint64_t a2)
{
}

void sub_1B29D23F4(uint64_t *a1, uint64_t a2)
{
}

void sub_1B29D240C(uint64_t *a1, unsigned char *a2)
{
}

double sub_1B29D2424()
{
  return 0.0;
}

void sub_1B29D2440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = v28;
  *(void *)(a2 + 16) = v23;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v22;
  *(void *)(a2 + 40) = v27;
  *(void *)(a2 + 48) = a20;
  *(void *)(a2 + 56) = v26;
  *(void *)(a2 + 64) = v25;
  *(unsigned char *)(a2 + 72) = v21;
}

uint64_t sub_1B29D246C()
{
  return sub_1B2E805C8();
}

double sub_1B29D24A8(double a1, __n128 a2, uint64_t a3, uint64_t a4)
{
  double result = 0.0;
  *(__n128 *)a4 = a2;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 57) = 0u;
  return result;
}

uint64_t sub_1B29D24BC()
{
  return sub_1B2E805C8();
}

void sub_1B29D24E4()
{
  EntityClass.ancestorClassesSet.getter();
}

uint64_t sub_1B29D2528()
{
  return sub_1B29D0978();
}

BOOL sub_1B29D2544@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1B29D2574()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B29D2598(uint64_t result, uint64_t a2)
{
  *(void *)(v5 - 128) = v3;
  *(void *)(v5 - 120) = v4;
  *(void *)(v5 - 112) = result;
  *(void *)(v5 - 104) = a2;
  *(unsigned char *)(v5 - 96) = v2;
  return result;
}

char *sub_1B29D25B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

char *sub_1B29D25C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  return &a20;
}

uint64_t *sub_1B29D25D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  a17 = a1;
  a18 = a2;
  return sub_1B29D1C70(&a14);
}

uint64_t *sub_1B29D25F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  a12 = a1;
  a13 = a2;
  return sub_1B29D1C70(&a9);
}

char *sub_1B29D263C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  return &a16;
}

uint64_t sub_1B29D2650()
{
  return sub_1B2E805C8();
}

uint64_t sub_1B29D2668()
{
  return v1 + v0;
}

uint64_t *sub_1B29D267C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

void sub_1B29D2690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  uint64_t v16 = HIBYTE(*(void *)(v13 + 8 * v14 + 32));
  EntityClass.init(intValue:)(v16, (uint64_t)va);
}

uint64_t ViewService.appleMusicEventView()()
{
  type metadata accessor for AppleMusicEventView();
  uint64_t v1 = sub_1B299D354();
  AppleMusicEventView.init(viewService:)(v0);
  return v1;
}

uint64_t AppleMusicEventView.entryView.getter()
{
  return swift_retain();
}

uint64_t AppleMusicEventView.__allocating_init(viewService:)(void *a1)
{
  uint64_t v2 = sub_1B299D354();
  AppleMusicEventView.init(viewService:)(a1);
  return v2;
}

uint64_t type metadata accessor for AppleMusicEventView()
{
  return self;
}

uint64_t AppleMusicEventView.init(viewService:)(void *a1)
{
  uint64_t v3 = v1;
  type metadata accessor for AppleMusicEventEntryView();
  sub_1B299D354();
  uint64_t v5 = AppleMusicEventEntryView.init(viewService:)(a1);
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v6 = v5;
    sub_1B29A3EB4(&qword_1E9C3A570);
    uint64_t v7 = sub_1B299D354();
    *(void *)(v7 + 16) = v6;
    *(void *)(v3 + 16) = v7;
  }
  return v3;
}

uint64_t AppleMusicEventView.songEvents<A>(from:order:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7 = a2 & 1;
  uint64_t v8 = type metadata accessor for CustomGraphSongEvent(0);
  uint64_t v9 = sub_1B29D32B8(qword_1E9C3A2D8, (void (*)(uint64_t))type metadata accessor for CustomGraphSongEvent);
  return sub_1B2B31EF4(v8, a1, v7, v8, a3, v9, a4);
}

uint64_t AppleMusicEventView.songEvents<A>(whose:in:from:order:)(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_1B29D293C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B31FBC);
}

{
  return sub_1B29D293C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B31FF4);
}

{
  return sub_1B29D293C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B3202C);
}

{
  return sub_1B29D293C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32064);
}

{
  return sub_1B29D293C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B3209C);
}

uint64_t sub_1B29D293C(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v11 = *a1;
  uint64_t v12 = a4 & 1;
  uint64_t v13 = type metadata accessor for CustomGraphSongEvent(0);
  char v17 = v11;
  uint64_t v14 = sub_1B29D32B8(qword_1E9C3A2D8, (void (*)(uint64_t))type metadata accessor for CustomGraphSongEvent);
  return a7(v13, &v17, a2, a3, v12, v13, a5, v14, a6);
}

uint64_t AppleMusicEventView.songEvents<A>(overlapping:from:order:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_1B29D2AF8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B321AC);
}

{
  return sub_1B29D2AF8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B321E0);
}

{
  return sub_1B29D2AF8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32214);
}

{
  return sub_1B29D2AF8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32248);
}

{
  return sub_1B29D2AF8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B3227C);
}

uint64_t sub_1B29D2AF8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = a3 & 1;
  uint64_t v11 = type metadata accessor for CustomGraphSongEvent(0);
  uint64_t v12 = sub_1B29D32B8(qword_1E9C3A2D8, (void (*)(uint64_t))type metadata accessor for CustomGraphSongEvent);
  return a6(v11, a1, a2, v10, v11, a4, v12, a5);
}

uint64_t AppleMusicEventView.enumerateSongEvents<A>(from:order:using:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v13 = a2 & 1;
  uint64_t v14 = type metadata accessor for CustomGraphSongEvent(0);
  uint64_t v15 = sub_1B29D32B8(qword_1E9C3A2D8, (void (*)(uint64_t))type metadata accessor for CustomGraphSongEvent);
  return sub_1B2B32380(v14, a1, v13, a3, a4, v14, a5, v15, a6, a7);
}

uint64_t AppleMusicEventView.enumerateSongEvents<A>(whose:in:from:order:using:)(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1B29D2D90(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B3245C);
}

{
  return sub_1B29D2D90(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32494);
}

{
  return sub_1B29D2D90(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B324CC);
}

{
  return sub_1B29D2D90(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32504);
}

{
  return sub_1B29D2D90(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B3253C);
}

uint64_t sub_1B29D2D90(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v14 = *a1;
  uint64_t v15 = a4 & 1;
  uint64_t v16 = type metadata accessor for CustomGraphSongEvent(0);
  char v21 = v14;
  uint64_t v17 = sub_1B29D32B8(qword_1E9C3A2D8, (void (*)(uint64_t))type metadata accessor for CustomGraphSongEvent);
  return a10(v16, &v21, a2, a3, v15, a5, a6, v16, a7, v17, a8, a9);
}

uint64_t AppleMusicEventView.enumerateSongEvents<A>(overlapping:from:order:using:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B29D2F88(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32660);
}

{
  return sub_1B29D2F88(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B3269C);
}

{
  return sub_1B29D2F88(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B326D8);
}

{
  return sub_1B29D2F88(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32714);
}

{
  return sub_1B29D2F88(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32750);
}

uint64_t sub_1B29D2F88(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15 = a3 & 1;
  uint64_t v16 = type metadata accessor for CustomGraphSongEvent(0);
  uint64_t v17 = sub_1B29D32B8(qword_1E9C3A2D8, (void (*)(uint64_t))type metadata accessor for CustomGraphSongEvent);
  return a9(v16, a1, a2, v15, a4, a5, v16, a6, v17, a7, a8);
}

uint64_t AppleMusicEventView.latestSongEvent<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29D3160(a1, a2, a3, sub_1B2B32864);
}

uint64_t AppleMusicEventView.earliestSongEvent<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29D3160(a1, a2, a3, sub_1B2B32890);
}

uint64_t sub_1B29D3160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = type metadata accessor for CustomGraphSongEvent(0);
  uint64_t v9 = sub_1B29D32B8(qword_1E9C3A2D8, (void (*)(uint64_t))type metadata accessor for CustomGraphSongEvent);
  return a4(v8, a1, v8, a2, v9, a3);
}

uint64_t AppleMusicEventView.deinit()
{
  swift_release();
  return v0;
}

uint64_t AppleMusicEventView.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B29D3270()
{
  return sub_1B29D32B8(&qword_1E9C3A360, (void (*)(uint64_t))type metadata accessor for AppleMusicEventEntryView);
}

uint64_t sub_1B29D32B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for AppleMusicEventView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppleMusicEventView);
}

uint64_t dispatch thunk of AppleMusicEventView.__allocating_init(viewService:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1B29D3340()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B29D3564(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t Param = type metadata accessor for KnosisQueryParam();
  uint64_t v2 = sub_1B2E82148();
  uint64_t v120 = v1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 56);
  int64_t v121 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  long long v117 = xmmword_1B2EC00A0;
  uint64_t v119 = v1;
  while (v5)
  {
    unint64_t v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    uint64_t v122 = v6;
    unint64_t v8 = v7 | (v6 << 6);
LABEL_20:
    char v13 = (uint64_t *)(*(void *)(v1 + 48) + 32 * v8);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    uint64_t v16 = v13[2];
    uint64_t v17 = v13[3];
    uint64_t v124 = *v13;
    uint64_t v125 = v14;
    uint64_t v127 = 95;
    uint64_t v128 = 0xE100000000000000;
    sub_1B29C3640();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = (uint64_t)&v124;
    uint64_t v19 = (void *)sub_1B2E82FE8();
    uint64_t v20 = v19;
    if (v19[2] < 2uLL)
    {
      swift_bridgeObjectRelease();
      sub_1B29A3EB4(&qword_1EB7E5B00);
      uint64_t v46 = (__n128 *)swift_allocObject();
      sub_1B29A24F0(v46, v47, v48, v49, v50, v51, v52, v53, v54);
      swift_allocObject();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1B2DC60E4((uint64_t)&v124);
      swift_isUniquelyReferenced_nonNull_native();
      sub_1B29DB060(v15, v14, v56, v57, v58, v59, v60, v61, v117, *((uint64_t *)&v117 + 1), Param, v119, v120, v121, v122, v2, v125, v126, v127,
        v128,
        v129,
        v130,
        v131,
        v132,
        v133,
        v134);
      sub_1B299D3AC();
      if (v64) {
        goto LABEL_56;
      }
      unint64_t v65 = v62;
      char v66 = v63;
      sub_1B29A3EB4(&qword_1EB7D9868);
      uint64_t v1 = v119;
      if (sub_1B2E83398())
      {
        uint64_t v73 = sub_1B29DB060(v15, v14, v67, v68, v69, v70, v71, v72, v117, *((uint64_t *)&v117 + 1), Param, v119, v120, v121, v122, v124, v125, v126, v127,
                v128,
                v129,
                v130,
                v131,
                v132,
                v133,
                v134);
        if ((v66 & 1) != (v74 & 1)) {
          goto LABEL_59;
        }
        unint64_t v65 = v73;
      }
      uint64_t v2 = v124;
      if (v66)
      {
        uint64_t v75 = *(void *)(v124 + 56);
        swift_release();
        *(void *)(v75 + 8 * v65) = v55;
      }
      else
      {
        sub_1B29D3BA8(v124 + 8 * (v65 >> 6));
        uint64_t v111 = (uint64_t *)(v110 + 16 * v65);
        *uint64_t v111 = v15;
        v111[1] = v14;
        *(void *)(*(void *)(v2 + 56) + 8 * v65) = v55;
        uint64_t v112 = *(void *)(v2 + 16);
        BOOL v64 = __OFADD__(v112, 1);
        uint64_t v113 = v112 + 1;
        if (v64) {
          goto LABEL_58;
        }
        *(void *)(v2 + 16) = v113;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_32:
      swift_bridgeObjectRelease();
      uint64_t v6 = v122;
    }
    else
    {
      uint64_t v21 = v19[5];
      if (*(void *)(v2 + 16))
      {
        uint64_t v22 = v19[4];
        swift_bridgeObjectRetain();
        sub_1B29DB060(v22, v21, v23, v24, v25, v26, v27, v28, v117, *((uint64_t *)&v117 + 1), Param, v119, v120, v121, v122, v124, v125, v126, v127,
          v128,
          v129,
          v130,
          v131,
          v132,
          v133,
          v134);
        uint64_t v18 = v29;
        swift_bridgeObjectRelease();
        if (v18)
        {
          uint64_t v30 = v20[4];
          uint64_t v31 = v20[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (*(void *)(v2 + 16)
            && (uint64_t v38 = sub_1B29DB060(v30, v31, v32, v33, v34, v35, v36, v37, v117, *((uint64_t *)&v117 + 1), Param, v119, v120, v121, v122, v124, v125, v126, v127,
                        v128,
                        v129,
                        v130,
                        v131,
                        v132,
                        v133,
                        v134),
                (v39 & 1) != 0))
          {
            uint64_t v40 = *(void *)(*(void *)(v2 + 56) + 8 * v38);
            swift_retain();
            swift_bridgeObjectRelease();
            uint64_t v41 = (void *)(v40 + 16);
            swift_beginAccess();
            uint64_t v42 = *(void *)(v40 + 16);
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v40 + 16) = v42;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1B29B7048();
              uint64_t v42 = v114;
              *uint64_t v41 = v114;
            }
            unint64_t v44 = *(void *)(v42 + 16);
            if (v44 >= *(void *)(v42 + 24) >> 1)
            {
              sub_1B29B7048();
              uint64_t v42 = v115;
              *uint64_t v41 = v115;
            }
            uint64_t v1 = v119;
            *(void *)(v42 + 16) = v44 + 1;
            uint64_t v45 = v42 + 16 * v44;
            *(void *)(v45 + 32) = v16;
            *(void *)(v45 + 40) = v17;
            swift_endAccess();
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
        uint64_t v21 = v20[5];
      }
      uint64_t v76 = v20[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1B29A3EB4(&qword_1EB7E5B00);
      uint64_t v77 = (__n128 *)swift_allocObject();
      sub_1B29A24F0(v77, v78, v79, v80, v81, v82, v83, v84, v85);
      swift_bridgeObjectRelease();
      swift_allocObject();
      uint64_t v86 = sub_1B2DC60E4(v18);
      swift_isUniquelyReferenced_nonNull_native();
      sub_1B29DB060(v76, v21, v87, v88, v89, v90, v91, v92, v117, *((uint64_t *)&v117 + 1), Param, v119, v120, v121, v122, v2, v125, v126, v127,
        v128,
        v129,
        v130,
        v131,
        v132,
        v133,
        v134);
      sub_1B299D3AC();
      if (v64) {
        goto LABEL_55;
      }
      unint64_t v95 = v93;
      char v96 = v94;
      sub_1B29A3EB4(&qword_1EB7D9868);
      if (sub_1B2E83398())
      {
        uint64_t v103 = sub_1B29DB060(v76, v21, v97, v98, v99, v100, v101, v102, v117, *((uint64_t *)&v117 + 1), Param, v119, v120, v121, v123, v124, v125, v126, v127,
                 v128,
                 v129,
                 v130,
                 v131,
                 v132,
                 v133,
                 v134);
        if ((v96 & 1) != (v104 & 1)) {
          goto LABEL_59;
        }
        unint64_t v95 = v103;
      }
      uint64_t v2 = v124;
      if (v96)
      {
        uint64_t v105 = *(void *)(v124 + 56);
        swift_release();
        *(void *)(v105 + 8 * v95) = v86;
      }
      else
      {
        sub_1B29D3BA8(v124 + 8 * (v95 >> 6));
        uint64_t v107 = (uint64_t *)(v106 + 16 * v95);
        *uint64_t v107 = v76;
        v107[1] = v21;
        *(void *)(*(void *)(v2 + 56) + 8 * v95) = v86;
        uint64_t v108 = *(void *)(v2 + 16);
        BOOL v64 = __OFADD__(v108, 1);
        uint64_t v109 = v108 + 1;
        if (v64) {
          goto LABEL_57;
        }
        *(void *)(v2 + 16) = v109;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v1 = v119;
      uint64_t v6 = v123;
    }
  }
  int64_t v9 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_54;
  }
  if (v9 >= v121) {
    goto LABEL_52;
  }
  unint64_t v10 = *(void *)(v120 + 8 * v9);
  int64_t v11 = v6 + 1;
  if (v10) {
    goto LABEL_19;
  }
  int64_t v11 = v6 + 2;
  if (v6 + 2 >= v121) {
    goto LABEL_52;
  }
  unint64_t v10 = *(void *)(v120 + 8 * v11);
  if (v10) {
    goto LABEL_19;
  }
  int64_t v11 = v6 + 3;
  if (v6 + 3 >= v121) {
    goto LABEL_52;
  }
  unint64_t v10 = *(void *)(v120 + 8 * v11);
  if (v10)
  {
LABEL_19:
    unint64_t v5 = (v10 - 1) & v10;
    uint64_t v122 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    goto LABEL_20;
  }
  uint64_t v12 = v6 + 4;
  if (v6 + 4 >= v121)
  {
LABEL_52:
    swift_release();
    return v2;
  }
  unint64_t v10 = *(void *)(v120 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v6 + 4;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v121) {
      goto LABEL_52;
    }
    unint64_t v10 = *(void *)(v120 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_19;
    }
  }
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for NamedArgGenerator()
{
  return &type metadata for NamedArgGenerator;
}

void sub_1B29D3BA8(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

void sub_1B29D3BBC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1B29D3BC8(uint64_t a1)
{
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 88) = xmmword_1B2EC01D0;
  *(unsigned char *)(a1 + 104) = 0;
  return 0;
}

uint64_t sub_1B29D3BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v138 = MEMORY[0x1E4FBC860];
  uint64_t v139 = MEMORY[0x1E4FBC860];
  swift_beginAccess();
  if (*(void *)(a2 + 32))
  {
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = sub_1B2A4393C(v5);
    swift_bridgeObjectRelease();
    uint64_t v138 = v6;
  }
  sub_1B29D4A88(&v138);
  uint64_t v7 = v138;
  unint64_t v8 = *(void *)(v138 + 16);
  uint64_t v118 = v2;
  uint64_t v121 = v3;
  if (v8 < 2)
  {
    uint64_t isUniquelyReferenced_nonNull_native = sub_1B2DC1414(12403, 0xE200000000000000);
    uint64_t v49 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
    if (!v49)
    {
LABEL_82:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2AD3608();
      goto LABEL_84;
    }
    uint64_t v50 = (uint64_t *)(isUniquelyReferenced_nonNull_native + 40);
    uint64_t v51 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v52 = *(v50 - 1);
      uint64_t v53 = *v50;
      uint64_t v137 = 0;
      MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
      if ((v53 & 0x1000000000000000) != 0 || !(v53 & 0x2000000000000000 | v52 & 0x1000000000000000))
      {
        swift_bridgeObjectRetain();
        sub_1B2E831C8();
      }
      else
      {
        if ((v53 & 0x2000000000000000) != 0)
        {
          uint64_t v125 = v52;
          uint64_t v126 = v53 & 0xFFFFFFFFFFFFFFLL;
          switch((char)v52)
          {
            case 0:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
              goto LABEL_59;
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
              goto LABEL_74;
            default:
              if (v52 == 32)
              {
LABEL_59:
                swift_bridgeObjectRetain();
LABEL_60:
                char v56 = 0;
                goto LABEL_61;
              }
LABEL_74:
              swift_bridgeObjectRetain();
              if (!_swift_stdlib_strtod_clocale()) {
                goto LABEL_60;
              }
              sub_1B29A2504();
LABEL_61:
              char v136 = v56;
              uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
              break;
          }
          goto LABEL_62;
        }
        if ((v52 & 0x1000000000000000) != 0) {
          __n128 v54 = (unsigned char *)((v53 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          __n128 v54 = (unsigned char *)sub_1B2E83298();
        }
        switch(*v54)
        {
          case 0:
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
          case 0xD:
            goto LABEL_54;
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
            goto LABEL_71;
          default:
            if (*v54 == 32)
            {
LABEL_54:
              swift_bridgeObjectRetain();
LABEL_55:
              char v55 = 0;
              goto LABEL_56;
            }
LABEL_71:
            swift_bridgeObjectRetain();
            if (!_swift_stdlib_strtod_clocale()) {
              goto LABEL_55;
            }
            sub_1B29A2504();
LABEL_56:
            char v136 = v55;
            break;
        }
      }
      uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
LABEL_62:
      if (v136)
      {
        uint64_t v57 = v137;
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1B29B7848();
          uint64_t v51 = isUniquelyReferenced_nonNull_native;
        }
        unint64_t v59 = *(void *)(v51 + 16);
        unint64_t v58 = *(void *)(v51 + 24);
        if (v59 >= v58 >> 1)
        {
          sub_1B29D5450(v58);
          sub_1B29B7848();
          uint64_t v51 = isUniquelyReferenced_nonNull_native;
        }
        *(void *)(v51 + 16) = v59 + 1;
        *(void *)(v51 + 8 * v59 + 32) = v57;
      }
      v50 += 2;
      if (!--v49) {
        goto LABEL_82;
      }
    }
  }
  swift_bridgeObjectRetain_n();
  int64_t v9 = (uint64_t *)(v7 + 40);
  do
  {
    uint64_t v10 = *(v9 - 1);
    uint64_t v11 = *v9;
    swift_bridgeObjectRetain();
    unint64_t v12 = *(void *)(sub_1B2DC1414(v10, v11) + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC840];
    if (v12 > 1)
    {
      swift_bridgeObjectRelease_n();
      if (qword_1EB7E30F0 != -1) {
        swift_once();
      }
      uint64_t v60 = sub_1B2E81FB8();
      sub_1B29A4B98(v60, (uint64_t)qword_1EB7E30D8);
      uint64_t v61 = v2;
      swift_retain_n();
      swift_retain_n();
      unint64_t v62 = sub_1B2E81F98();
      os_log_type_t v63 = sub_1B2E82DB8();
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = swift_slowAlloc();
        uint64_t v122 = swift_slowAlloc();
        uint64_t v125 = v122;
        *(_DWORD *)uint64_t v64 = 136315394;
        uint64_t v65 = (*(uint64_t (**)(void))(*(void *)v2 + 224))();
        sub_1B29BF6BC(v65, v66, (uint64_t)&v125, v67, v68, v69, v70, v71, v100, v104, v108, v112, v114, v2, v122, v125, v126, v127, v128,
          v129);
        uint64_t v137 = v72;
        sub_1B2E82FB8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v64 + 12) = 2080;
        uint64_t v73 = sub_1B2DC14E4();
        sub_1B29BF6BC(v73, v74, (uint64_t)&v125, v75, v76, v77, v78, v79, v102, v106, v110, v113, v116, v119, v123, v125, v126, v127, v128,
          v129);
        uint64_t v137 = v80;
        sub_1B2E82FB8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B2996000, v62, v63, "multiple array arguments are provided to %s: %s.", (uint8_t *)v64, 0x16u);
        uint64_t v61 = v124;
        swift_arrayDestroy();
        sub_1B299B750();
        sub_1B299B750();
      }
      else
      {

        swift_release_n();
        swift_release_n();
      }
      sub_1B29D53EC();
      swift_allocError();
      *(void *)uint64_t v97 = 0xD00000000000003DLL;
      *(void *)(v97 + 8) = 0x80000001B2E96840;
      *(unsigned char *)(v97 + 16) = 4;
      swift_willThrow();
      return v61;
    }
    v9 += 2;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease_n();
  uint64_t v15 = v7;
  uint64_t v16 = *(void *)(v7 + 16);
  if (v16)
  {
    uint64_t v101 = v15;
    uint64_t v17 = (uint64_t *)(v15 + 40);
    *(void *)&long long v14 = 136315138;
    long long v109 = v14;
    unint64_t v105 = v13 + 8;
    uint64_t v115 = a2;
    while (1)
    {
      uint64_t v18 = *(v17 - 1);
      uint64_t v19 = *v17;
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1B2DC1414(v18, v19);
      uint64_t v21 = swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(v20 + 16);
      if (v22) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_36:
      v17 += 2;
      if (!--v16) {
        goto LABEL_83;
      }
    }
    uint64_t v23 = v20 + 16 * v22;
    uint64_t v25 = *(void *)(v23 + 16);
    uint64_t v24 = *(void *)(v23 + 24);
    uint64_t v26 = (uint64_t *)(v23 + 16);
    uint64_t v137 = 0;
    MEMORY[0x1F4188790](v21);
    if ((v24 & 0x1000000000000000) == 0 && v24 & 0x2000000000000000 | v25 & 0x1000000000000000)
    {
      if ((v24 & 0x2000000000000000) != 0)
      {
        uint64_t v125 = v25;
        uint64_t v126 = v24 & 0xFFFFFFFFFFFFFFLL;
        switch((char)v25)
        {
          case 0:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
            goto LABEL_22;
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
            goto LABEL_42;
          default:
            if (v25 == 32)
            {
LABEL_22:
              swift_bridgeObjectRetain();
LABEL_23:
              char v29 = 0;
              goto LABEL_24;
            }
LABEL_42:
            swift_bridgeObjectRetain();
            if (!_swift_stdlib_strtod_clocale()) {
              goto LABEL_23;
            }
            sub_1B29A2504();
LABEL_24:
            char v136 = v29;
            swift_bridgeObjectRelease();
            break;
        }
      }
      else
      {
        if ((v25 & 0x1000000000000000) != 0) {
          uint64_t v27 = (unsigned char *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          uint64_t v27 = (unsigned char *)sub_1B2E83298();
        }
        switch(*v27)
        {
          case 0:
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
          case 0xD:
            goto LABEL_16;
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
            goto LABEL_39;
          default:
            if (*v27 == 32)
            {
LABEL_16:
              swift_bridgeObjectRetain();
LABEL_17:
              char v28 = 0;
              goto LABEL_18;
            }
LABEL_39:
            swift_bridgeObjectRetain();
            if (!_swift_stdlib_strtod_clocale()) {
              goto LABEL_17;
            }
            sub_1B29A2504();
LABEL_18:
            char v136 = v28;
            break;
        }
LABEL_19:
        swift_bridgeObjectRelease();
      }
      if (v136)
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = v137;
        uint64_t v31 = v139;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29B7848();
          uint64_t v31 = v46;
        }
        unint64_t v33 = *(void *)(v31 + 16);
        unint64_t v32 = *(void *)(v31 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_1B29D5450(v32);
          sub_1B29B7848();
          uint64_t v31 = v47;
        }
        *(void *)(v31 + 16) = v33 + 1;
        *(void *)(v31 + 8 * v33 + 32) = v30;
        uint64_t v139 = v31;
      }
      else
      {
        if (qword_1EB7E30F0 != -1) {
          swift_once();
        }
        uint64_t v34 = sub_1B2E81FB8();
        sub_1B29A4B98(v34, (uint64_t)qword_1EB7E30D8);
        swift_bridgeObjectRetain();
        uint64_t v35 = sub_1B2E81F98();
        os_log_type_t v36 = sub_1B2E82DB8();
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v37 = swift_slowAlloc();
          uint64_t v125 = swift_slowAlloc();
          *(_DWORD *)uint64_t v37 = v109;
          uint64_t v38 = *v26;
          uint64_t v39 = v26[1];
          swift_bridgeObjectRetain();
          sub_1B29BF6BC(v38, v39, (uint64_t)&v125, v40, v41, v42, v43, v44, v101, v105, v109, *((uint64_t *)&v109 + 1), v115, v118, v121, v125, v126, v127, v128,
            v129);
          *(void *)(v37 + 4) = v45;
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1B2996000, v35, v36, "can't convert %s to Double during usage of arithmetic operator", (uint8_t *)v37, 0xCu);
          swift_arrayDestroy();
          sub_1B299B750();
          sub_1B299B750();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      goto LABEL_36;
    }
    swift_bridgeObjectRetain();
    sub_1B2E831C8();
    goto LABEL_19;
  }
LABEL_83:
  swift_bridgeObjectRelease();
LABEL_84:
  uint64_t v61 = MEMORY[0x1E4FBC860];
  type metadata accessor for ResultGraph();
  uint64_t v81 = swift_allocObject();
  *(void *)(v81 + 16) = sub_1B2E82148();
  *(void *)(v81 + 24) = v61;
  if (*(void *)(v139 + 16))
  {
    (*(void (**)(uint64_t))(*(void *)v118 + 240))(v139);
    swift_bridgeObjectRelease();
    uint64_t v82 = sub_1B2E82A88();
    uint64_t v84 = v83;
    uint64_t v85 = sub_1B2E82A88();
    KnosisInternalFact.init(sid:pid:oid:)(v82, v84, 0, 0xE000000000000000, v85, v86, &v125);
    uint64_t v87 = v126;
    uint64_t v88 = v127;
    uint64_t v89 = v128;
    uint64_t v90 = v129;
    uint64_t v91 = v130;
    uint64_t v92 = v131;
    uint64_t v117 = v132;
    uint64_t v120 = v125;
    uint64_t v111 = v133;
    uint64_t v107 = v134;
    uint64_t v103 = v135;
    sub_1B29B7480();
    uint64_t v61 = v93;
    unint64_t v94 = *(void *)(v93 + 16);
    if (v94 >= *(void *)(v93 + 24) >> 1)
    {
      sub_1B29B7480();
      uint64_t v61 = v99;
    }
    *(void *)(v61 + 16) = v94 + 1;
    unint64_t v95 = (void *)(v61 + 88 * v94);
    v95[4] = v120;
    v95[5] = v87;
    v95[6] = v88;
    v95[7] = v89;
    v95[8] = v90;
    v95[9] = v91;
    v95[10] = v92;
    v95[11] = v117;
    v95[12] = v111;
    v95[13] = v107;
    v95[14] = v103;
    LOBYTE(v125) = 0;
    uint64_t v96 = swift_bridgeObjectRetain();
    sub_1B2D97CC8(v96, &v125);
  }
  swift_bridgeObjectRelease();
  return v61;
}

void sub_1B29D4858()
{
}

void sub_1B29D489C()
{
}

void sub_1B29D48E0()
{
}

uint64_t sub_1B29D4924()
{
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 224))();
  uint64_t v3 = v2;
  (*(void (**)(void))(*(void *)v0 + 232))();
  sub_1B29A15DC();
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v3;
  *(void *)(v0 + 32) = &unk_1F0AB9198;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EC01E0;
  *(void *)(v0 + 56) = 1;
  *(void *)(v0 + 64) = v4;
  *(void *)(v0 + 72) = v5;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  sub_1B29B2124(v6, v7);
  return v0;
}

uint64_t sub_1B29D4A14()
{
  sub_1B29A15DC();
  sub_1B29B2124(v0, v1);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArithmeticOperator()
{
  return self;
}

uint64_t sub_1B29D4A88(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2CC3374();
    uint64_t v2 = v5;
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v3;
  uint64_t result = sub_1B29D4AF8(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1B29D4AF8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1B29D5160(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1B29B6980(v3 / 2);
  uint64_t v95 = result;
  uint64_t v96 = v3;
  uint64_t v97 = v6;
  uint64_t v93 = a1;
  if (v3 <= 0)
  {
    uint64_t v98 = MEMORY[0x1E4FBC860];
    unint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_110:
    if (v31 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v95 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v85 = *v93;
    while (1)
    {
      unint64_t v86 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v85) {
        goto LABEL_153;
      }
      uint64_t v87 = v98;
      uint64_t v88 = *(void *)(v98 + 32 + 16 * v86);
      uint64_t v89 = *(void *)(v98 + 32 + 16 * (v31 - 1) + 8);
      uint64_t result = sub_1B29D5228((char *)(v85 + 16 * v88), (char *)(v85 + 16 * *(void *)(v98 + 32 + 16 * (v31 - 1))), v85 + 16 * v89, v97);
      if (v1) {
        goto LABEL_106;
      }
      if (v89 < v88) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B2DCA54C();
        uint64_t v87 = result;
      }
      if (v86 >= *(void *)(v87 + 16)) {
        goto LABEL_140;
      }
      uint64_t v90 = (void *)(v87 + 32 + 16 * v86);
      *uint64_t v90 = v88;
      v90[1] = v89;
      unint64_t v91 = *(void *)(v87 + 16);
      if (v31 > v91) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove((void *)(v87 + 32 + 16 * (v31 - 1)), (const void *)(v87 + 32 + 16 * v31), 16 * (v91 - v31));
      uint64_t v98 = v87;
      *(void *)(v87 + 16) = v91 - 1;
      unint64_t v31 = v91 - 1;
      uint64_t v3 = v96;
      if (v91 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v94 = v5;
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v92 = *a1 + 8;
  uint64_t v98 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    uint64_t v10 = (uint64_t *)(v8 + 16 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    unint64_t v12 = (void *)(v8 + 16 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      int v14 = 0;
LABEL_13:
      uint64_t v16 = (void *)(v92 + 16 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        uint64_t v17 = (void *)(v8 + 16 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = sub_1B2E837A8();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 2;
        uint64_t v19 = v15 + 1;
        uint64_t v7 = v15;
        uint64_t v15 = v19;
      }
      while (v19 < v3);
      uint64_t v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = sub_1B2E837A8();
    int v14 = result;
    uint64_t v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    uint64_t v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      uint64_t v20 = 16 * v15;
      uint64_t v21 = 16 * v9;
      uint64_t v22 = v15;
      uint64_t v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          uint64_t v24 = v8 + v20;
          uint64_t v25 = *(void *)(v8 + v21);
          uint64_t v26 = *(void *)(v8 + v21 + 8);
          *(_OWORD *)(v8 + v21) = *(_OWORD *)(v8 + v20 - 16);
          *(void *)(v24 - 16) = v25;
          *(void *)(v24 - 8) = v26;
        }
        ++v23;
        v20 -= 16;
        v21 += 16;
      }
      while (v23 < v22);
    }
LABEL_31:
    uint64_t v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v94) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v94)) {
      goto LABEL_146;
    }
    if (v9 + v94 >= v3) {
      uint64_t v27 = v3;
    }
    else {
      uint64_t v27 = v9 + v94;
    }
    if (v27 < v9) {
      goto LABEL_147;
    }
    if (v7 == v27)
    {
LABEL_41:
      uint64_t v28 = v98;
    }
    else
    {
      uint64_t v79 = (uint64_t *)(v8 + 16 * v7);
      uint64_t v28 = v98;
      do
      {
        uint64_t v80 = (uint64_t *)(v8 + 16 * v7);
        uint64_t result = *v80;
        uint64_t v81 = v80[1];
        uint64_t v82 = v9;
        uint64_t v83 = v79;
        do
        {
          if (result == *(v83 - 2) && v81 == *(v83 - 1)) {
            break;
          }
          uint64_t result = sub_1B2E837A8();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          uint64_t result = *v83;
          uint64_t v81 = v83[1];
          *(_OWORD *)uint64_t v83 = *((_OWORD *)v83 - 1);
          *(v83 - 1) = v81;
          *(v83 - 2) = result;
          v83 -= 2;
          ++v82;
        }
        while (v7 != v82);
        ++v7;
        v79 += 2;
      }
      while (v7 != v27);
      uint64_t v7 = v27;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454(0, *(void *)(v28 + 16) + 1, 1, (char *)v28);
      uint64_t v28 = result;
    }
    unint64_t v30 = *(void *)(v28 + 16);
    unint64_t v29 = *(void *)(v28 + 24);
    unint64_t v31 = v30 + 1;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454((char *)(v29 > 1), v30 + 1, 1, (char *)v28);
      uint64_t v28 = result;
    }
    *(void *)(v28 + 16) = v31;
    uint64_t v32 = v28 + 32;
    unint64_t v33 = (uint64_t *)(v28 + 32 + 16 * v30);
    uint64_t *v33 = v9;
    v33[1] = v7;
    uint64_t v98 = v28;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_90:
    uint64_t v3 = v96;
    if (v7 >= v96) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      unint64_t v39 = v32 + 16 * v31;
      uint64_t v40 = *(void *)(v39 - 64);
      uint64_t v41 = *(void *)(v39 - 56);
      BOOL v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_127;
      }
      uint64_t v44 = *(void *)(v39 - 48);
      uint64_t v43 = *(void *)(v39 - 40);
      BOOL v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      char v38 = v45;
      if (v45) {
        goto LABEL_128;
      }
      unint64_t v46 = v31 - 2;
      uint64_t v47 = (uint64_t *)(v32 + 16 * (v31 - 2));
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      BOOL v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_129;
      }
      BOOL v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_131;
      }
      if (v51 >= v42)
      {
        uint64_t v69 = (uint64_t *)(v32 + 16 * v34);
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        BOOL v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_137;
        }
        BOOL v62 = v37 < v72;
        goto LABEL_79;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *(void *)(v28 + 32);
        uint64_t v64 = *(void *)(v28 + 40);
        BOOL v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        char v57 = v45;
        goto LABEL_73;
      }
      uint64_t v36 = *(void *)(v28 + 32);
      uint64_t v35 = *(void *)(v28 + 40);
      BOOL v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      char v38 = v45;
    }
    if (v38) {
      goto LABEL_130;
    }
    unint64_t v46 = v31 - 2;
    uint64_t v52 = (uint64_t *)(v32 + 16 * (v31 - 2));
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    BOOL v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    char v57 = v55;
    if (v55) {
      goto LABEL_132;
    }
    unint64_t v58 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    BOOL v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_134;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_136;
    }
    if (v56 + v61 >= v37)
    {
      BOOL v62 = v37 < v61;
LABEL_79:
      if (v62) {
        unint64_t v34 = v46;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v57) {
      goto LABEL_133;
    }
    uint64_t v65 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    BOOL v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_135;
    }
    if (v68 < v56) {
      goto LABEL_90;
    }
LABEL_81:
    unint64_t v73 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    uint64_t v74 = (uint64_t *)(v32 + 16 * v73);
    uint64_t v75 = *v74;
    uint64_t v76 = (void *)(v32 + 16 * v34);
    uint64_t v77 = v76[1];
    uint64_t result = sub_1B29D5228((char *)(v8 + 16 * *v74), (char *)(v8 + 16 * *v76), v8 + 16 * v77, v97);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_124;
    }
    if (v34 > *(void *)(v98 + 16)) {
      goto LABEL_125;
    }
    *uint64_t v74 = v75;
    *(void *)(v32 + 16 * v73 + 8) = v77;
    unint64_t v78 = *(void *)(v98 + 16);
    if (v34 >= v78) {
      goto LABEL_126;
    }
    uint64_t v28 = v98;
    unint64_t v31 = v78 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v32 + 16 * v34), v76 + 2, 16 * (v78 - 1 - v34));
    *(void *)(v98 + 16) = v78 - 1;
    if (v78 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v96 < -1) {
    goto LABEL_145;
  }
  *(void *)(v95 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29D5160(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
    while (2)
    {
      uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      unint64_t v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1)) {
          break;
        }
        uint64_t result = sub_1B2E837A8();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t result = *v12;
        uint64_t v10 = v12[1];
        *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1B29D5228(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    sub_1B29BDECC(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    unint64_t v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_47;
    }
    uint64_t v18 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v19 = v18 + 16;
      uint64_t v20 = (char *)(v12 - 16);
      BOOL v21 = *(void *)(v12 - 16) == *((void *)v6 - 2) && *(void *)(v12 - 8) == *((void *)v6 - 1);
      if (v21 || (sub_1B2E837A8() & 1) == 0)
      {
        BOOL v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23) {
          goto LABEL_43;
        }
      }
      else
      {
        BOOL v22 = v19 != v6 || v18 >= v6;
        uint64_t v20 = v6 - 16;
        v6 -= 16;
        if (!v22) {
          goto LABEL_43;
        }
      }
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_47;
      }
    }
  }
  sub_1B29BDECC(a1, (a2 - a1) / 16, a4);
  unint64_t v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v14 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v14 && (sub_1B2E837A8() & 1) != 0) {
        break;
      }
      uint64_t v15 = v4;
      BOOL v14 = v7 == v4;
      v4 += 16;
      if (!v14) {
        goto LABEL_15;
      }
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_21;
      }
    }
    uint64_t v15 = v6;
    BOOL v14 = v7 == v6;
    v6 += 16;
    if (v14) {
      goto LABEL_16;
    }
LABEL_15:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  uint64_t v6 = v7;
LABEL_47:
  sub_1B29BDECC(v4, (uint64_t)(v12 - (void)v4) / 16, v6);
  return 1;
}

void sub_1B29D53D0(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
}

unint64_t sub_1B29D53EC()
{
  unint64_t result = qword_1E9C3A578;
  if (!qword_1E9C3A578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A578);
  }
  return result;
}

void sub_1B29D5438(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
}

BOOL sub_1B29D5450@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1B29D5464()
{
  void (*v2)(char *__return_ptr);

  if (qword_1EB7E51D8 != -1) {
    swift_once();
  }
  uint64_t v0 = off_1EB7E51C8;
  uint64_t v1 = (os_unfair_lock_s *)*((void *)off_1EB7E51C8 + 3);
  os_unfair_lock_lock(v1);
  sub_1B299D3E8();
  uint64_t v2 = *(void (**)(char *__return_ptr))(v0[2] + 16);
  swift_retain();
  os_unfair_lock_unlock(v1);
  v2(&byte_1EB7E5198);
  return swift_release();
}

uint64_t static AssetRegistry.createCreateBackend.getter()
{
  if (qword_1EB7E51D8 != -1) {
    swift_once();
  }
  uint64_t v0 = off_1EB7E51C8;
  uint64_t v1 = (os_unfair_lock_s *)*((void *)off_1EB7E51C8 + 3);
  os_unfair_lock_lock(v1);
  sub_1B299D3E8();
  uint64_t v2 = *(void *)(v0[2] + 16);
  swift_retain();
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t static AssetRegistry.createBackend.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB7E3C40 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB7E51A0;
  uint64_t v2 = unk_1EB7E51A8;
  char v4 = byte_1EB7E51B0;
  uint64_t v5 = qword_1EB7E51B8;
  uint64_t v6 = unk_1EB7E51C0;
  *(unsigned char *)a1 = byte_1EB7E5198;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v2;
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_retain();

  return swift_retain();
}

uint64_t sub_1B29D5634()
{
  swift_release();

  return swift_deallocClassInstance();
}

void *sub_1B29D566C()
{
  _s20_CreateCreateBackendCMa();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1B29D56E0;
  *(void *)(v0 + 24) = 0;
  sub_1B29A3EB4(&qword_1EB7E51E0);
  swift_allocObject();
  unint64_t result = (void *)sub_1B29E5380(v0);
  off_1EB7E51C8 = result;
  return result;
}

void sub_1B29D56E0(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = sub_1B29DA1BC;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(void *)(a1 + 32) = sub_1B29DA250;
  *(void *)(a1 + 40) = 0;
}

uint64_t static AssetRegistry.createCreateBackend.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB7E51D8 != -1) {
    swift_once();
  }
  char v4 = off_1EB7E51C8;
  uint64_t v5 = (os_unfair_lock_s *)*((void *)off_1EB7E51C8 + 3);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1B299D3E8();
  uint64_t v6 = v4[2];
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_retain();
  swift_release();
  os_unfair_lock_unlock(v5);
  return swift_release_n();
}

void (*static AssetRegistry.createCreateBackend.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  if (qword_1EB7E51D8 != -1) {
    swift_once();
  }
  char v4 = off_1EB7E51C8;
  uint64_t v5 = (os_unfair_lock_s *)*((void *)off_1EB7E51C8 + 3);
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  uint64_t v6 = v4[2];
  uint64_t v8 = *(void *)(v6 + 16);
  uint64_t v7 = *(void *)(v6 + 24);
  swift_retain();
  os_unfair_lock_unlock(v5);
  v3[3] = v8;
  v3[4] = v7;
  return sub_1B29D58A8;
}

void sub_1B29D58A8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  if (a2)
  {
    swift_retain();
    static AssetRegistry.createCreateBackend.setter(v3, v4);
    swift_release();
  }
  else
  {
    static AssetRegistry.createCreateBackend.setter(*(void *)(*(void *)a1 + 24), v4);
  }

  free(v2);
}

void AssetRegistry.CreateBackend.remoteBackendType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void AssetRegistry.CreateBackend.remoteWritableBackendType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

void *AssetRegistry.CreateBackend.init<A, B>(createRemoteBackend:createRemoteWritableBackend:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(a7 + 16))((char *)&v22 + 1, a5, a7);
  char v16 = BYTE1(v22);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a5;
  v17[3] = a6;
  v17[4] = a7;
  v17[5] = a8;
  v17[6] = a1;
  v17[7] = a2;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(a8 + 8) + 16))(&v22, a6);
  char v18 = v22;
  unint64_t result = (void *)swift_allocObject();
  result[2] = a5;
  result[3] = a6;
  result[4] = a7;
  result[5] = a8;
  result[6] = a3;
  result[7] = a4;
  *(unsigned char *)a9 = v16;
  *(void *)(a9 + 8) = sub_1B29D5C8C;
  *(void *)(a9 + 16) = v17;
  *(unsigned char *)(a9 + 24) = v18;
  *(void *)(a9 + 32) = sub_1B29D5CB0;
  *(void *)(a9 + 40) = result;
  return result;
}

uint64_t sub_1B29D5A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X6>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v12(v9);
  if (!v4)
  {
    a4[3] = a2;
    a4[4] = a3;
    BOOL v14 = sub_1B29D1C70(a4);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v8 + 32))(v14, v11, a2);
  }
  return result;
}

uint64_t sub_1B29D5B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v9 = (uint64_t (*)(void))MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v9();
  if (!v4)
  {
    a4[3] = a2;
    a4[4] = a3;
    uint64_t v13 = sub_1B29D1C70(a4);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v8 + 32))(v13, v11, a2);
  }
  return result;
}

unsigned char *AssetRegistry.CreateBackend.init(remoteBackendType:createRemoteBackend:remoteWritableBackendType:createRemoteWritableBackend:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7 = *a4;
  *(unsigned char *)a7 = *result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(unsigned char *)(a7 + 24) = v7;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  return result;
}

uint64_t sub_1B29D5C54()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1B29D5C8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B29D5A68(a1, *(void *)(v2 + 16), *(void *)(v2 + 32), a2);
}

uint64_t sub_1B29D5CB0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B29D5B50(v1[6], v1[3], v1[5], a1);
}

uint64_t _s20_CreateCreateBackendCMa()
{
  return self;
}

uint64_t _s13CreateBackendVwxx()
{
  swift_release();

  return swift_release();
}

uint64_t _s13CreateBackendVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s13CreateBackendVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 _s13CreateBackendVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s13CreateBackendVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t _s13CreateBackendVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13CreateBackendVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistry.CreateBackend()
{
  return &type metadata for AssetRegistry.CreateBackend;
}

uint64_t sub_1B29D5F00()
{
  type metadata accessor for TrialAssetManager();
  uint64_t v1 = 0;
  return TrialAssetManager.__allocating_init(refreshPolicy:)(&v1);
}

uint64_t AssetRegistry.TrialAssetManagerPolicy.PersistentInfo.refreshPolicy.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

void *sub_1B29D5F50(void *a1, uint64_t a2, uint64_t a3)
{
  v3[2] = *a1;
  v3[3] = a2;
  v3[4] = a3;
  v3[5] = 0;
  return v3;
}

uint64_t sub_1B29D5F64()
{
  if (v0[5])
  {
    uint64_t v1 = v0[5];
  }
  else
  {
    unint64_t v2 = (uint64_t (*)(uint64_t *))v0[3];
    uint64_t v4 = v0[2];
    swift_retain();
    uint64_t v1 = v2(&v4);
    swift_release();
    v0[5] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1B29D5FF4()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B29D6024()
{
  sub_1B29D5FF4();

  return swift_deallocClassInstance();
}

uint64_t sub_1B29D6054(uint64_t *a1)
{
  type metadata accessor for TrialAssetManager();
  uint64_t v3 = *a1;
  swift_retain();
  return TrialAssetManager.__allocating_init(refreshPolicy:)(&v3);
}

uint64_t AssetRegistry.TrialAssetManagerPolicy.PersistentInfo.init(refreshPolicy:createTrialAssetManager:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a1;
  type metadata accessor for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo.PersistentContent();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = a2;
  void v8[4] = a3;
  v8[5] = 0;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3C78);
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_1B29DAE30((uint64_t)v8);
  *a4 = v7;
  a4[1] = result;
  return result;
}

uint64_t type metadata accessor for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo.PersistentContent()
{
  return self;
}

uint64_t AssetRegistry.TrialAssetManagerPolicy.PersistentInfo.trialAssetManager.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 8) + 24);
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  uint64_t v2 = sub_1B29D5F64();
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t AssetRegistry.trialAssetManagerPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 72);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1B29DAB14(v2, v3, v4);
}

uint64_t (*sub_1B29D61C0())(uint64_t)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  if (*(unsigned char *)(v0 + 72))
  {
    if (*(unsigned char *)(v0 + 72) != 1)
    {
      swift_retain();
      return v1;
    }
    uint64_t v3 = *(os_unfair_lock_s **)(v2 + 24);
    sub_1B29DAB14(*(void *)(v0 + 56), *(void *)(v0 + 64), 1);
    os_unfair_lock_lock(v3);
    swift_beginAccess();
    uint64_t v4 = sub_1B29D5F64();
    os_unfair_lock_unlock(v3);
    uint64_t v5 = (uint64_t)v1;
    uint64_t v6 = v2;
    char v7 = 1;
  }
  else
  {
    uint64_t v8 = swift_retain();
    uint64_t v4 = v1(v8);
    uint64_t v5 = (uint64_t)v1;
    uint64_t v6 = v2;
    char v7 = 0;
  }
  sub_1B29E1918(v5, v6, v7);
  return (uint64_t (*)(uint64_t))v4;
}

uint64_t AssetRegistry.__allocating_init(parameters:trialAssetManagerPolicy:)(__int16 *a1, long long *a2)
{
  long long v3 = *a2;
  char v4 = *((unsigned char *)a2 + 16);
  __int16 v9 = *a1;
  if (qword_1EB7E3C40 != -1)
  {
    long long v6 = v3;
    swift_once();
    long long v3 = v6;
  }
  long long v7 = v3;
  char v8 = v4;
  return sub_1B29D6340(&v9, (void (*)(long long *__return_ptr, uint64_t *, uint64_t *))qword_1EB7E51A0, unk_1EB7E51A8, (uint64_t)&v7, v2);
}

uint64_t sub_1B29D6340(__int16 *a1, void (*a2)(long long *__return_ptr, uint64_t *, uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v7 = *a1;
  uint64_t v9 = *(void *)a4;
  uint64_t v8 = *(void *)(a4 + 8);
  char v10 = *(unsigned char *)(a4 + 16);
  if (v7 < 0)
  {
    LOBYTE(v26[0]) = v7 & 1;
    LOBYTE(v24[0]) = BYTE1(v7) & 1;
    uint64_t v13 = a3;
    a2(&v27, v26, v24);
    if (!v5)
    {
      uint64_t v16 = v28;
      uint64_t v17 = v29;
      BOOL v23 = sub_1B29AEC7C(&v27, v28);
      v26[3] = v16;
      unint64_t v30 = v17[1];
      v26[4] = (uint64_t)v30;
      char v18 = sub_1B29D1C70(v26);
      uint64_t v19 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16);
      uint64_t v20 = v19(v18, v23, v16);
      BOOL v23 = (uint64_t *)&v23;
      v24[0] = v9;
      v24[1] = v8;
      char v25 = v10;
      MEMORY[0x1F4188790](v20);
      uint64_t v22 = (char *)&v24[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      v19((uint64_t *)v22, v18, v16);
      uint64_t v13 = sub_1B29E50B4((uint64_t)v22, v24, a5, v16, (uint64_t)v30);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v26);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v27);
      return v13;
    }
    goto LABEL_5;
  }
  uint64_t v11 = type metadata accessor for AssetRegistryLocalBackendBasic();
  sub_1B2E7FF98();
  swift_allocObject();
  uint64_t v12 = sub_1B2E7FF88();
  uint64_t v13 = v11;
  uint64_t v14 = sub_1B29F2C38(v12, v12);
  if (v5)
  {
LABEL_5:
    sub_1B29E1918(v9, v8, v10);
    return v13;
  }
  uint64_t v28 = v11;
  unint64_t v29 = &off_1F0AD3350;
  *(void *)&long long v27 = v14;
  uint64_t v13 = swift_allocObject();
  sub_1B29D1D20(&v27, v13 + 16);
  *(void *)(v13 + 56) = v9;
  *(void *)(v13 + 64) = v8;
  *(unsigned char *)(v13 + 72) = v10;
  return v13;
}

void AssetRegistry.assetEntry(for:in:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[6];
  sub_1B29AEC7C(v0 + 2, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v8, v6, v4, v2, v9, v10);
  sub_1B29998C8();
}

uint64_t AssetRegistry.asset(for:in:)()
{
  sub_1B299B3BC();
  v1[10] = v2;
  v1[11] = v0;
  v1[8] = v3;
  v1[9] = v4;
  v1[6] = v5;
  v1[7] = v6;
  uint64_t v7 = type metadata accessor for TrialAssetManager.Asset(0);
  v1[12] = v7;
  sub_1B299B0F0(v7);
  v1[13] = sub_1B299E508();
  v1[14] = swift_task_alloc();
  uint64_t v8 = sub_1B2E803C8();
  v1[15] = v8;
  sub_1B299D2A8(v8);
  v1[16] = v9;
  v1[17] = sub_1B29A4C44();
  uint64_t v10 = sub_1B29A3EB4(&qword_1EB7E69E0);
  sub_1B299B0F0(v10);
  v1[18] = sub_1B29A4C44();
  uint64_t v11 = sub_1B2E80498();
  v1[19] = v11;
  sub_1B299D2A8(v11);
  v1[20] = v12;
  v1[21] = sub_1B29A4C44();
  uint64_t v13 = type metadata accessor for AssetRegistryAsset(0);
  v1[22] = v13;
  sub_1B299B0F0(v13);
  v1[23] = sub_1B29A4C44();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v14, v15, v16);
}

uint64_t sub_1B29D671C()
{
  sub_1B29AEC7C((void *)(*(void *)(v0 + 88) + 16), *(void *)(*(void *)(v0 + 88) + 40));
  sub_1B29E543C();
  sub_1B29E5888();
  v1();
  *(void *)(v0 + 192) = v15;
  *(void *)(v0 + 200) = v16;
  unsigned int v2 = v18 | (v19 << 16);
  *(unsigned char *)(v0 + 258) = v19;
  *(_WORD *)(v0 + 256) = v18;
  uint64_t v3 = v20;
  *(void *)(v0 + 208) = v17;
  *(void *)(v0 + 216) = v20;
  *(void *)(v0 + 224) = v21;
  if ((v18 & 0x80) == 0)
  {
    if (v18)
    {
      sub_1B29E5854();
      swift_bridgeObjectRetain();
      AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.localURL.getter();
    }
    else
    {
      *(void *)(v0 + 16) = v15;
      *(void *)(v0 + 24) = v16;
      *(void *)(v0 + 32) = 47;
      *(void *)(v0 + 40) = 0xE100000000000000;
      sub_1B29E5854();
      sub_1B29DAC38();
      sub_1B29DAC84();
      swift_bridgeObjectRetain();
      if ((sub_1B2E822C8() & 1) == 0)
      {
        sub_1B29DACD0();
        swift_allocError();
        *uint64_t v14 = 0;
        swift_willThrow();
        sub_1B29E54A0();
        sub_1B29E54A0();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_1B299AD7C();
        goto LABEL_12;
      }
      uint64_t v4 = *(void *)(v0 + 128);
      uint64_t v5 = *(void *)(v0 + 136);
      uint64_t v6 = *(void *)(v0 + 120);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(*(void *)(v0 + 144), 1, 1, *(void *)(v0 + 152));
      (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v5, *MEMORY[0x1E4F276C0], v6);
      swift_bridgeObjectRetain();
      sub_1B2E80478();
      uint64_t v3 = v20;
    }
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 48);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 160) + 32))(v7, *(void *)(v0 + 168), *(void *)(v0 + 152));
    uint64_t v10 = v7 + *(int *)(v8 + 20);
    *(void *)uint64_t v10 = v15;
    *(void *)(v10 + 8) = v16;
    *(void *)(v10 + 16) = v17;
    *(unsigned char *)(v10 + 26) = BYTE2(v2);
    *(_WORD *)(v10 + 24) = v18;
    *(void *)(v10 + 32) = v3;
    *(void *)(v10 + 40) = v21;
    sub_1B29E57E8((_OWORD *)(v7 + *(int *)(v8 + 24)));
    sub_1B29DABE0(v7, v9);
    sub_1B29E54A0();
    sub_1B29E5630();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
LABEL_12:
    return v11();
  }
  swift_bridgeObjectRetain();
  *(void *)(v0 + 232) = sub_1B29D61C0();
  *(unsigned char *)(v0 + 262) = v15;
  *(unsigned char *)(v0 + 263) = v18 & 1;
  *(_WORD *)(v0 + 260) = v2 >> 8;
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1B29D6B30;
  return TrialAssetManager.asset(for:in:assetType:downloadOptions:)();
}

uint64_t sub_1B29D6B30()
{
  sub_1B299B708();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1B299B0E0();
  *uint64_t v5 = v4;
  *(void *)(v3 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1B29DAB98(*(void *)(v3 + 192), *(void *)(v3 + 200), *(void *)(v3 + 208), *(_WORD *)(v3 + 256));
  }
  else
  {
    sub_1B29E5958();
    sub_1B29E5958();
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1B29D6C50()
{
  uint64_t v16 = *(void *)(v0 + 224);
  __int16 v15 = *(_WORD *)(v0 + 256);
  char v1 = *(unsigned char *)(v0 + 258);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v14 = *(void *)(v0 + 216);
  long long v13 = *(_OWORD *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 48);
  swift_release();
  sub_1B29DABE0(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v9, v7, v4);
  uint64_t v10 = v9 + *(int *)(v3 + 20);
  *(_OWORD *)uint64_t v10 = v13;
  *(void *)(v10 + 16) = v2;
  *(unsigned char *)(v10 + 26) = v1;
  *(_WORD *)(v10 + 24) = v15;
  *(void *)(v10 + 32) = v14;
  *(void *)(v10 + 40) = v16;
  sub_1B29E573C(*(void *)(v7 + *(int *)(v8 + 20)));
  sub_1B29E5630();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B29D6DB8()
{
  swift_release();
  sub_1B29E5814();
  sub_1B29E5814();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

void AssetRegistry.locallyAvailableAsset(for:in:)()
{
  sub_1B299F300();
  uint64_t v78 = v2;
  uint64_t v79 = v3;
  uint64_t v76 = v5;
  uint64_t v77 = v4;
  uint64_t v6 = sub_1B29E5808();
  uint64_t v70 = type metadata accessor for TrialAssetManager.Asset(v6);
  sub_1B2999864();
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  uint64_t v68 = v8;
  uint64_t v9 = type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo(0);
  uint64_t v10 = sub_1B299B0F0(v9);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v69 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v74 = (uint64_t)&v67 - v13;
  uint64_t v73 = sub_1B2E803C8();
  sub_1B299D278();
  uint64_t v71 = v14;
  MEMORY[0x1F4188790](v15);
  sub_1B299B6D0();
  uint64_t v72 = v16;
  uint64_t v17 = sub_1B29A3EB4(&qword_1EB7E69E0);
  uint64_t v18 = sub_1B299B0F0(v17);
  MEMORY[0x1F4188790](v18);
  sub_1B299E4A0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = sub_1B2E80498();
  sub_1B299D278();
  uint64_t v75 = v23;
  MEMORY[0x1F4188790](v24);
  sub_1B299E4A0();
  uint64_t v25 = type metadata accessor for AssetRegistryAsset(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v26);
  sub_1B299E4A0();
  uint64_t v29 = v28 - v27;
  sub_1B29AEC7C((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_1B29E5888();
  v30();
  if (!v1)
  {
    uint64_t v77 = v29;
    uint64_t v79 = v22;
    uint64_t v32 = v81[0];
    uint64_t v31 = v81[1];
    uint64_t v33 = v81[2];
    char v34 = v82;
    uint64_t v35 = v84;
    uint64_t v78 = v83;
    if (v82 < 0)
    {
      swift_bridgeObjectRetain();
      sub_1B29D61C0();
      LOBYTE(v81[0]) = v32;
      LOBYTE(v80[0]) = v34 & 1;
      swift_bridgeObjectRetain();
      uint64_t v36 = v74;
      TrialAssetManager.locallyAvailableAsset(for:in:assetType:)(v31, v33, (uint64_t)v81, (uint64_t)v80, v37, v38, v39, v40, v67, v68, SWORD2(v68), SBYTE6(v68), HIBYTE(v68), v69, v70, v71, v72, v73, v74,
        v75,
        v76,
        v77,
        v78);
      swift_release();
      sub_1B29E541C();
      sub_1B29E541C();
      uint64_t v53 = v36;
      uint64_t v54 = v69;
      sub_1B29DABE0(v53, v69);
      int v55 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v54, 1, v70);
      uint64_t v56 = v33;
      uint64_t v50 = v76;
      uint64_t v44 = v25;
      if (v55 == 1)
      {
        sub_1B29DAB98(v32, v31, v56, v34);
        swift_bridgeObjectRelease();
        uint64_t v51 = 1;
      }
      else
      {
        uint64_t v74 = v56;
        uint64_t v57 = v68;
        sub_1B29DABE0(v54, v68);
        sub_1B29A15F0();
        v58();
        uint64_t v59 = (uint64_t *)(v50 + *(int *)(v44 + 20));
        *uint64_t v59 = v32;
        v59[1] = v31;
        v59[2] = v74;
        sub_1B29E5930((uint64_t)v59);
        *(void *)(v60 + 32) = v61;
        *(void *)(v60 + 40) = v35;
        uint64_t v62 = *(int *)(v70 + 20);
        uint64_t v63 = v57 + *(int *)(v70 + 24);
        uint64_t v64 = v50 + *(int *)(v44 + 24);
        long long v65 = *(_OWORD *)(v63 + 16);
        *(_OWORD *)(v64 + 8) = *(_OWORD *)v63;
        uint64_t v66 = *(void *)(v63 + 32);
        *(void *)uint64_t v64 = *(void *)(v57 + v62);
        *(_OWORD *)(v64 + 24) = v65;
        *(void *)(v64 + 40) = v66;
      }
      goto LABEL_10;
    }
    if (v82)
    {
      LOBYTE(v81[0]) &= 1u;
      sub_1B29E5834();
      swift_bridgeObjectRetain();
      AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.localURL.getter();
      uint64_t v70 = v35;
      goto LABEL_9;
    }
    v80[0] = 47;
    v80[1] = 0xE100000000000000;
    sub_1B29E5834();
    sub_1B29DAC38();
    uint64_t v74 = v33;
    sub_1B29DAC84();
    swift_bridgeObjectRetain();
    if (sub_1B2E822C8())
    {
      uint64_t v70 = v35;
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v21, 1, 1, v79);
      (*(void (**)(uint64_t, void, uint64_t))(v71 + 104))(v72, *MEMORY[0x1E4F276C0], v73);
      swift_bridgeObjectRetain();
      sub_1B2E80478();
      uint64_t v33 = v74;
LABEL_9:
      uint64_t v42 = v77;
      sub_1B29A15F0();
      v43();
      uint64_t v44 = v25;
      BOOL v45 = (uint64_t *)(v42 + *(int *)(v25 + 20));
      *BOOL v45 = v32;
      v45[1] = v31;
      void v45[2] = v33;
      sub_1B29E5930((uint64_t)v45);
      uint64_t v46 = v70;
      *(void *)(v47 + 32) = v48;
      *(void *)(v47 + 40) = v46;
      sub_1B29E57E8((_OWORD *)(v42 + *(int *)(v25 + 24)));
      uint64_t v49 = v33;
      uint64_t v50 = v76;
      sub_1B29DABE0(v42, v76);
      sub_1B29DAB98(v32, v31, v49, v34);
      swift_bridgeObjectRelease();
      uint64_t v51 = 0;
LABEL_10:
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v50, v51, 1, v44);
      uint64_t v52 = type metadata accessor for AssetRegistryAssetLocalAvailabilityInfo(0);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v50, 0, 1, v52);
      goto LABEL_11;
    }
    sub_1B29DACD0();
    swift_allocError();
    *uint64_t v41 = 0;
    swift_willThrow();
    sub_1B29DAB98(v32, v31, v74, v34);
    swift_bridgeObjectRelease();
    sub_1B29E541C();
    swift_bridgeObjectRelease();
  }
LABEL_11:
  sub_1B29998C8();
}

uint64_t AssetRegistry.assets(for:)()
{
  sub_1B299B3BC();
  v1[29] = v2;
  v1[30] = v0;
  uint64_t v3 = type metadata accessor for TrialAssetManager.Asset(0);
  v1[31] = v3;
  sub_1B299B0F0(v3);
  v1[32] = sub_1B299E508();
  v1[33] = swift_task_alloc();
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A598);
  v1[34] = v4;
  sub_1B299D2A8(v4);
  v1[35] = v5;
  v1[36] = sub_1B299E508();
  v1[37] = swift_task_alloc();
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3A5A0);
  sub_1B299B0F0(v6);
  v1[38] = sub_1B299E508();
  v1[39] = swift_task_alloc();
  uint64_t v7 = sub_1B2E803C8();
  v1[40] = v7;
  sub_1B299D2A8(v7);
  v1[41] = v8;
  v1[42] = sub_1B29A4C44();
  uint64_t v9 = sub_1B29A3EB4(&qword_1EB7E69E0);
  sub_1B299B0F0(v9);
  v1[43] = sub_1B29A4C44();
  uint64_t v10 = sub_1B2E80498();
  v1[44] = v10;
  sub_1B299D2A8(v10);
  v1[45] = v11;
  v1[46] = sub_1B29A4C44();
  uint64_t v12 = type metadata accessor for AssetRegistryAsset(0);
  v1[47] = v12;
  sub_1B299B0F0(v12);
  v1[48] = sub_1B29A4C44();
  uint64_t v13 = sub_1B29A3EB4(&qword_1E9C3A5A8);
  v1[49] = v13;
  sub_1B299D2A8(v13);
  v1[50] = v14;
  v1[51] = sub_1B299E508();
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  v1[54] = swift_task_alloc();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v15, v16, v17);
}

void *sub_1B29D76C4()
{
  void (*v45)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  unint64_t v47;
  uint64_t (*v48)();
  void (*v49)(void);
  uint64_t *v50;
  uint64_t v51;
  __int16 v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  char v64;
  void *v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  char v74;
  void (*v75)(void **);
  uint64_t *v76;
  void (*v77)(void);
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  BOOL v83;
  char v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(void);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char v102;
  char v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(void **);
  void (*v120)(void **);
  void (*v121)(void **);
  void *v122;
  uint64_t *v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  char v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int16 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  void (*v151)(void);
  void (*v152)(void);
  int64_t v153;
  unsigned char *v154;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  int64_t v168;
  unint64_t v169;
  void *v170;
  int64_t v171;
  uint64_t v172;
  int64_t v173;
  uint64_t v174;
  char v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v184;
  char v185;
  uint64_t v186;
  void *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void (**v198)(uint64_t, void, uint64_t);
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t (*v209)();
  void (*v210)(void);
  void *v211;
  uint64_t v212;
  int64_t v213;
  void *v214;
  void *v215;
  void *v216;
  void *v217;
  uint64_t v218;
  uint64_t *v219;
  __int16 v220;
  __int16 v221;
  uint64_t v222;
  unint64_t v223;
  unsigned int v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  void (*v229)(void **);
  int64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  void (*v236)(void **);
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  unsigned __int16 v240;
  unsigned __int8 v241;
  uint64_t v242;
  unint64_t v243;
  void *v244;

  uint64_t v244 = v0;
  uint64_t v1 = v0;
  uint64_t v202 = v0[50];
  uint64_t v204 = v0[47];
  uint64_t v2 = v0[45];
  uint64_t v3 = v1[41];
  unint64_t v5 = v1[29];
  uint64_t v4 = v1[30];
  sub_1B29A3EB4(&qword_1E9C3A5B0);
  v1[26] = sub_1B2E82148();
  uint64_t v206 = (uint64_t)(v1 + 26);
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3A5B8);
  sub_1B29A3EB4(&qword_1E9C3A5C0);
  sub_1B29DAD70();
  uint64_t v190 = v6;
  v1[27] = sub_1B2E82148();
  uint64_t v211 = v1 + 2;
  uint64_t v216 = v1 + 10;
  unint64_t v7 = (unint64_t)(v1 + 14);
  v205 = v1 + 18;
  uint64_t v201 = (uint64_t)(v1 + 22);
  uint64_t v193 = v5 + 64;
  uint64_t v229 = (void (*)(void **))(v1 + 27);
  uint64_t v200 = (uint64_t)(v1 + 24);
  sub_1B29E5690();
  unint64_t v10 = v9 & v8;
  uint64_t v217 = (void *)(v4 + 16);
  uint64_t v218 = v4;
  uint64_t v194 = (unint64_t)(63 - v11) >> 6;
  HIDWORD(v199) = *MEMORY[0x1E4F276C0];
  uint64_t v198 = (void (**)(uint64_t, void, uint64_t))(v3 + 104);
  uint64_t v203 = v2 + 32;
  uint64_t v195 = v5;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  v214 = v1;
  uint64_t v215 = v1 + 14;
  if (!v10) {
    goto LABEL_4;
  }
  do
  {
    uint64_t v191 = (v10 - 1) & v10;
    uint64_t v192 = v14;
    unint64_t v15 = __clz(__rbit64(v10)) | (v14 << 6);
LABEL_14:
    uint64_t v22 = (uint64_t *)(*(void *)(v195 + 48) + 16 * v15);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v25 = *(void *)(*(void *)(v195 + 56) + 8 * v15);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1B2E82148();
    uint64_t v27 = v1[26];
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v237 = v27;
    uint64_t v227 = v24;
    sub_1B29DE9E0(v26, v24, v23, isUniquelyReferenced_nonNull_native);
    v1[26] = v237;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v29 = 0;
    uint64_t v212 = v25 + 56;
    uint64_t v222 = v25;
    sub_1B29E5690();
    unint64_t v5 = v31 & v30;
    uint64_t v213 = (unint64_t)(63 - v32) >> 6;
    uint64_t v226 = v23;
    if ((v31 & v30) != 0)
    {
LABEL_15:
      unint64_t v33 = v5;
      char v34 = v1;
      uint64_t v234 = (v33 - 1) & v33;
      unint64_t v35 = __clz(__rbit64(v33)) | (v29 << 6);
      goto LABEL_30;
    }
    while (1)
    {
      int64_t v36 = v29 + 1;
      if (__OFADD__(v29, 1))
      {
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
        goto LABEL_143;
      }
      if (v36 >= v213) {
        goto LABEL_3;
      }
      ++v29;
      if (!*(void *)(v212 + 8 * v36))
      {
        int64_t v29 = v36 + 1;
        if (v36 + 1 >= v213) {
          goto LABEL_3;
        }
        if (!*(void *)(v212 + 8 * v29))
        {
          int64_t v29 = v36 + 2;
          if (v36 + 2 >= v213) {
            goto LABEL_3;
          }
          if (!*(void *)(v212 + 8 * v29)) {
            break;
          }
        }
      }
LABEL_29:
      char v34 = v1;
      sub_1B29E5874();
      uint64_t v234 = v38;
      unint64_t v35 = v39 + (v29 << 6);
LABEL_30:
      uint64_t v40 = (uint64_t *)(*(void *)(v222 + 48) + 16 * v35);
      uint64_t v42 = *v40;
      uint64_t v41 = v40[1];
      uint64_t v44 = *(void *)(v218 + 40);
      uint64_t v43 = *(void *)(v218 + 48);
      sub_1B29AEC7C(v217, v44);
      BOOL v45 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8);
      swift_bridgeObjectRetain();
      uint64_t v228 = v42;
      uint64_t v231 = v41;
      v45(&v237, v42, v41, v227, v23, v44, v43);
      uint64_t v230 = v29;
      uint64_t v46 = v237;
      uint64_t v47 = v239;
      LODWORD(v29) = v240 | (v241 << 16);
      unint64_t v7 = v243;
      uint64_t v225 = v242;
      uint64_t v224 = WORD1(v29);
      v232 = v237;
      char v233 = v238;
      uint64_t v1 = v34;
      if ((v240 & 0x80) != 0)
      {
        uint64_t v56 = *(void *)v229;
        uint64_t v57 = *(void *)(*(void *)v229 + 16);
        swift_bridgeObjectRetain();
        LODWORD(v58) = v29 >> 8;
        if (v57 && (sub_1B29DB390(v29 >> 8), (v59 & 1) != 0))
        {
          unint64_t v5 = v234;
        }
        else
        {
          LOWORD(v5) = v47;
          uint64_t v220 = v29;
          uint64_t v1 = (void *)v234;
          int64_t v29 = v7;
          sub_1B29A3EB4(&qword_1E9C3A5D8);
          sub_1B29DEB58();
          uint64_t v60 = sub_1B2E82148();
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v237 = v56;
          sub_1B29DB390(v58);
          sub_1B29E58E8();
          if (v16) {
            goto LABEL_140;
          }
          uint64_t v62 = (unint64_t)result;
          uint64_t v63 = v61;
          sub_1B29A3EB4(&qword_1E9C3A5E0);
          uint64_t v64 = sub_1B2E83398();
          uint64_t v56 = v237;
          uint64_t v46 = v232;
          if (v64)
          {
            sub_1B29DB390(v58);
            sub_1B29A4C34();
            if (!v66) {
              goto LABEL_100;
            }
            uint64_t v62 = (unint64_t)v65;
          }
          if (v63)
          {
            uint64_t v67 = *(void *)(v56 + 56);
            swift_bridgeObjectRelease();
            *(void *)(v67 + 8 * v62) = v60;
          }
          else
          {
            sub_1B299D418(v56 + 8 * (v62 >> 6));
            *(_WORD *)(v69 + 2 * v62) = v58;
            *(void *)(*(void *)(v56 + 56) + 8 * v62) = v60;
            sub_1B29E5760();
            if (v16) {
              goto LABEL_145;
            }
            *(void *)(v56 + 16) = v70;
          }
          *(void *)uint64_t v229 = v56;
          swift_bridgeObjectRelease();
          unint64_t v7 = v29;
          unint64_t v5 = v234;
          uint64_t v1 = v214;
          LOWORD(v29) = v220;
        }
        if (!*(void *)(v56 + 16)
          || (uint64_t v71 = sub_1B29DB390(v58), (v72 & 1) == 0)
          || !*(void *)(*(void *)(*(void *)(v56 + 56) + 8 * v71) + 16)
          || (swift_bridgeObjectRetain(),
              sub_1B29DB318(v46, (void (*)(unsigned char *, uint64_t))sub_1B2AA5F70, (uint64_t (*)(uint64_t, uint64_t))sub_1B29DC824), uint64_t v74 = v73, swift_bridgeObjectRelease(), (v74 & 1) == 0))
        {
          uint64_t v75 = sub_1B29D9DAC(v216, v58);
          uint64_t v77 = (void (*)(void))v75;
          if (*v76)
          {
            uint64_t v78 = v76;
            uint64_t v210 = (void (*)(void))v75;
            uint64_t v221 = v58;
            unint64_t v58 = v47;
            uint64_t v235 = v5;
            unint64_t v5 = v7;
            sub_1B29A3EB4(&qword_1E9C3A5E8);
            uint64_t v79 = sub_1B2E82148();
            swift_isUniquelyReferenced_nonNull_native();
            uint64_t v237 = *v78;
            uint64_t v80 = v237;
            uint8_t *v78 = 0x8000000000000000;
            uint64_t result = (void *)sub_1B29DB318(v46, (void (*)(unsigned char *, uint64_t))sub_1B2AA5F70, (uint64_t (*)(uint64_t, uint64_t))sub_1B29DC824);
            uint64_t v81 = *(void *)(v80 + 16);
            uint64_t v83 = (v82 & 1) == 0;
            uint64_t v1 = (void *)(v81 + v83);
            if (__OFADD__(v81, v83)) {
              goto LABEL_142;
            }
            sub_1B29E5754();
            sub_1B29A3EB4(&qword_1E9C3A5F0);
            uint64_t v84 = sub_1B2E83398();
            uint64_t v85 = v237;
            uint64_t v1 = v214;
            uint64_t v46 = v232;
            if (v84)
            {
              sub_1B29DB318(v232, (void (*)(unsigned char *, uint64_t))sub_1B2AA5F70, (uint64_t (*)(uint64_t, uint64_t))sub_1B29DC824);
              sub_1B29A4C34();
              if (!v66) {
                goto LABEL_100;
              }
              uint64_t v47 = v86;
            }
            if (v7)
            {
              uint64_t v87 = *(void *)(v85 + 56);
              swift_bridgeObjectRelease();
              *(void *)(v87 + 8 * v47) = v79;
            }
            else
            {
              sub_1B299D418(v85 + 8 * (v47 >> 6));
              *(unsigned char *)(v117 + v47) = v232;
              *(void *)(*(void *)(v85 + 56) + 8 * v47) = v79;
              sub_1B29E5760();
              if (v16) {
                goto LABEL_147;
              }
              *(void *)(v85 + 16) = v118;
            }
            uint8_t *v78 = v85;
            swift_bridgeObjectRelease();
            unint64_t v7 = v5;
            unint64_t v5 = v235;
            uint64_t v47 = v58;
            LOWORD(v58) = v221;
            uint64_t v77 = v210;
          }
          v77();
        }
        uint64_t v119 = v229;
        uint64_t v120 = sub_1B29D9DAC(v211, v58);
        uint64_t v121 = v120;
        if (*v122)
        {
          uint64_t v236 = v120;
          uint64_t v119 = sub_1B29D9E10(v205, v46);
          if (*v123)
          {
            uint64_t v124 = v123;
            swift_bridgeObjectRetain();
            sub_1B29DABBC(v46, v233, v47, v29);
            sub_1B29E5480();
            swift_bridgeObjectRetain();
            swift_isUniquelyReferenced_nonNull_native();
            uint64_t v237 = *v124;
            *uint64_t v124 = 0x8000000000000000;
            uint64_t v125 = v47;
            sub_1B29DB230(v233, v47, MEMORY[0x1E4FBB120], (uint64_t)sub_1B29DBF9C, v126, v127, v128, v129, v189, v190, v191, v192, v193, v194, v195, v196, v197, (uint64_t)v198, v199,
              v200,
              v201,
              v202,
              v203,
              v204,
              (uint64_t)v205,
              v206);
            sub_1B29E58E8();
            if (v16)
            {
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
              goto LABEL_148;
            }
            uint64_t v132 = v130;
            uint64_t v133 = v131;
            sub_1B29A3EB4(&qword_1E9C3A5F8);
            uint64_t v134 = sub_1B2E83398();
            uint64_t v139 = v237;
            if (v134)
            {
              sub_1B29DB230(v233, v125, MEMORY[0x1E4FBB120], (uint64_t)sub_1B29DBF9C, v135, v136, v137, v138, v189, v190, v191, v192, v193, v194, v195, v196, v197, (uint64_t)v198, v199,
                v200,
                v201,
                v202,
                v203,
                v204,
                (uint64_t)v205,
                v206);
              sub_1B29E5500();
              if (!v66) {
                goto LABEL_100;
              }
              uint64_t v132 = v140;
            }
            if (v133)
            {
              uint64_t v141 = *(void *)(v139 + 56) + 88 * v132;
              uint64_t v208 = *(void *)(v141 + 40);
              v142 = *(void *)(v141 + 56);
              uint64_t v143 = *(_WORD *)(v141 + 64);
              v196 = *(void *)(v141 + 80);
              uint64_t v197 = *(void *)(v141 + 48);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B29DAB98(v208, v197, v142, v143);
              swift_bridgeObjectRelease();
              *(void *)uint64_t v141 = v227;
              *(void *)(v141 + 8) = v226;
              *(void *)(v141 + 16) = v228;
              *(void *)(v141 + 24) = v231;
              *(unsigned char *)(v141 + 32) = v29 & 1;
              *(void *)(v141 + 40) = v232;
              *(void *)(v141 + 48) = v233;
              *(void *)(v141 + 56) = v125;
              *(unsigned char *)(v141 + 66) = v224;
              *(_WORD *)(v141 + 64) = v29;
              *(void *)(v141 + 72) = v225;
              *(void *)(v141 + 80) = v7;
            }
            else
            {
              sub_1B29E54D8();
              *uint64_t v147 = v233;
              v147[1] = v125;
              uint64_t v148 = *(void *)(v139 + 56) + 88 * v132;
              *(void *)uint64_t v148 = v227;
              *(void *)(v148 + 8) = v226;
              *(void *)(v148 + 16) = v228;
              *(void *)(v148 + 24) = v231;
              *(unsigned char *)(v148 + 32) = v149;
              *(void *)(v148 + 40) = v232;
              *(void *)(v148 + 48) = v233;
              *(void *)(v148 + 56) = v125;
              *(unsigned char *)(v148 + 66) = v224;
              *(_WORD *)(v148 + 64) = v29;
              *(void *)(v148 + 72) = v225;
              *(void *)(v148 + 80) = v7;
              sub_1B29E5760();
              if (v16)
              {
                __break(1u);
                goto LABEL_151;
              }
              *(void *)(v139 + 16) = v150;
              swift_bridgeObjectRetain();
            }
            *uint64_t v124 = v139;
            swift_bridgeObjectRelease();
            sub_1B29E5610();
            sub_1B29E56AC();
            v151();
            sub_1B29E56AC();
            v152();
            sub_1B29E5610();
            sub_1B29E5610();
            uint64_t v1 = v214;
            goto LABEL_89;
          }
          swift_bridgeObjectRelease();
          uint64_t v145 = sub_1B29E53C4();
          v119((void **)v145);
          uint64_t v146 = sub_1B29E56E0();
          v236((void **)v146);
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v144 = sub_1B29E56E0();
          v121((void **)v144);
        }
        sub_1B29DAB98(v46, (uint64_t)v119, v47, v29);
LABEL_89:
        uint64_t v23 = v226;
        goto LABEL_90;
      }
      uint64_t v23 = v226;
      swift_bridgeObjectRetain();
      sub_1B29E5480();
      uint64_t v48 = sub_1B29D9CE4(v215, v227, v226);
      uint64_t v49 = (void (*)(void))v48;
      uint64_t v219 = v50;
      if (*v50)
      {
        v223 = v7;
        uint64_t v209 = v48;
        if (v29)
        {
          LOBYTE(v237) = v46 & 1;
          uint64_t v238 = v233;
          uint64_t v239 = v47;
          sub_1B29E598C();
          sub_1B29E598C();
          swift_bridgeObjectRetain();
          AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.localURL.getter();
          sub_1B29E59AC();
          sub_1B29E59AC();
          LOWORD(v5) = v29;
          uint64_t v53 = v1;
          uint64_t v46 = v232;
          uint64_t v51 = v233;
        }
        else
        {
          v1[22] = v46;
          uint64_t v51 = v233;
          v1[23] = v233;
          v1[24] = 47;
          v1[25] = 0xE100000000000000;
          sub_1B29E5480();
          sub_1B29E5480();
          sub_1B29DAC38();
          sub_1B29DAC84();
          swift_bridgeObjectRetain();
          if ((sub_1B2E822C8() & 1) == 0)
          {
            sub_1B29DACD0();
            swift_allocError();
            *uint64_t v154 = 0;
            swift_willThrow();
            sub_1B29E55F4(v46);
            sub_1B29E55F4(v46);
            sub_1B29DAB98(v46, v233, v47, v29);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B29E56AC();
            v49();
            sub_1B29DAB98(v46, v233, v47, v29);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            sub_1B299AD7C();
            sub_1B29E5560();
            __asm { BRAA            X1, X16 }
          }
          uint64_t v52 = v29;
          uint64_t v53 = v1;
          uint64_t v54 = v1[42];
          int v55 = v1[40];
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1[43], 1, 1, v1[44]);
          (*v198)(v54, HIDWORD(v199), v55);
          sub_1B2E80478();
          LOWORD(v5) = v52;
          sub_1B29DAB98(v46, v233, v47, v52);
        }
        uint64_t v88 = v53[54];
        uint64_t v207 = v53[53];
        uint64_t v89 = v53[48];
        uint64_t v90 = v53[47];
        uint64_t v1 = v53;
        sub_1B29A15F0();
        v91();
        uint64_t v92 = v89 + *(int *)(v204 + 20);
        *(void *)uint64_t v92 = v46;
        *(void *)(v92 + 8) = v51;
        *(void *)(v92 + 16) = v47;
        *(unsigned char *)(v92 + 26) = v224;
        *(_WORD *)(v92 + 24) = v5;
        *(void *)(v92 + 32) = v225;
        *(void *)(v92 + 40) = v223;
        sub_1B29E57E8((_OWORD *)(v89 + *(int *)(v204 + 24)));
        sub_1B29DABE0(v89, v88);
        uint64_t v93 = sub_1B29E57F8();
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v93, v94, v95, v90);
        swift_storeEnumTagMultiPayload();
        sub_1B29E1860(v88, v207, &qword_1E9C3A5A8);
        unint64_t v7 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v237 = *v219;
        uint64_t v96 = v237;
        *uint64_t v219 = 0x8000000000000000;
        uint64_t result = (void *)sub_1B29DB230(v228, v231, MEMORY[0x1E4FBB120], (uint64_t)sub_1B29DBF9C, v97, v98, v99, v100, v189, v190, v191, v192, v193, v194, v195, v196, v197, (uint64_t)v198, v199,
                             v200,
                             v201,
                             v202,
                             v203,
                             v204,
                             (uint64_t)v205,
                             v206);
        if (__OFADD__(*(void *)(v96 + 16), (v101 & 1) == 0)) {
          goto LABEL_141;
        }
        uint64_t v102 = v101;
        uint64_t v103 = v5;
        sub_1B29A3EB4(&qword_1E9C3A600);
        unint64_t v104 = sub_1B2E83398();
        unint64_t v5 = v234;
        long long v109 = v237;
        unint64_t v7 = v223;
        if (v104)
        {
          sub_1B29DB230(v228, v231, MEMORY[0x1E4FBB120], (uint64_t)sub_1B29DBF9C, v105, v106, v107, v108, v189, v190, v191, v192, v193, v194, v195, v196, v197, (uint64_t)v198, v199,
            v200,
            v201,
            v202,
            v203,
            v204,
            (uint64_t)v205,
            v206);
          if ((v102 & 1) != (v110 & 1))
          {
LABEL_100:
            sub_1B29E5560();
            return (void *)sub_1B2E83858();
          }
        }
        if (v102)
        {
          sub_1B29E58C8();
          sub_1B29E0250(v111, v112);
        }
        else
        {
          sub_1B29E54D8();
          *uint64_t v113 = v228;
          v113[1] = v231;
          sub_1B29E58C8();
          sub_1B29E1860(v114, v115, &qword_1E9C3A5A8);
          sub_1B29E5760();
          if (v16) {
            goto LABEL_146;
          }
          *(void *)(v109 + 16) = v116;
          swift_bridgeObjectRetain();
        }
        *uint64_t v219 = v109;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ((void (*)(void *, void))v209)(v215, 0);
        sub_1B29DAB98(v232, v233, v47, v103);
        uint64_t v23 = v226;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1B29E55F4(v46);
        uint64_t v68 = sub_1B29E53C4();
        ((void (*)(uint64_t))v49)(v68);
        sub_1B29E55F4(v46);
        swift_bridgeObjectRelease();
        unint64_t v5 = v234;
      }
LABEL_90:
      uint64_t result = (void *)swift_bridgeObjectRelease();
      int64_t v29 = v230;
      if (v5) {
        goto LABEL_15;
      }
    }
    int64_t v37 = v36 + 3;
    if (v37 < v213)
    {
      if (!*(void *)(v212 + 8 * v37))
      {
        while (1)
        {
          int64_t v29 = v37 + 1;
          if (__OFADD__(v37, 1)) {
            break;
          }
          if (v29 >= v213) {
            goto LABEL_3;
          }
          ++v37;
          if (*(void *)(v212 + 8 * v29)) {
            goto LABEL_29;
          }
        }
LABEL_148:
        __break(1u);
LABEL_151:
        swift_release();
        swift_release();
LABEL_152:
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_1B29E58FC();
        sub_1B29E5560();
        __asm { BRAA            X2, X16 }
      }
      int64_t v29 = v37;
      goto LABEL_29;
    }
LABEL_3:
    swift_release();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    unint64_t v10 = v191;
    uint64_t v14 = v192;
  }
  while (v191);
LABEL_4:
  BOOL v16 = __OFADD__(v14, 1);
  int64_t v17 = v14 + 1;
  if (v16)
  {
    __break(1u);
LABEL_157:
    v160 = 3;
LABEL_159:
    uint64_t v182 = (v13 - 1) & v13;
    uint64_t v181 = __clz(__rbit64(v13)) + (v160 << 6);
    goto LABEL_160;
  }
  if (v17 >= v194) {
    goto LABEL_103;
  }
  if (*(void *)(v193 + 8 * v17)) {
    goto LABEL_13;
  }
  if (v17 + 1 >= v194) {
    goto LABEL_103;
  }
  if (*(void *)(v193 + 8 * (v17 + 1))) {
    goto LABEL_13;
  }
  if (v17 + 2 >= v194) {
    goto LABEL_103;
  }
  if (*(void *)(v193 + 8 * (v17 + 2))) {
    goto LABEL_13;
  }
  int64_t v18 = v17 + 3;
  if (v17 + 3 >= v194)
  {
LABEL_103:
    swift_release();
    uint64_t v158 = v1[27];
    v1[55] = v158;
    if (!*(void *)(v158 + 16)) {
      goto LABEL_152;
    }
    v1[56] = sub_1B29D61C0();
    uint64_t v159 = *(unsigned char *)(v158 + 32);
    *((unsigned char *)v1 + 541) = v159;
    v160 = 1;
    uint64_t v161 = 1 << v159;
    if (v161 < 64) {
      uint64_t v162 = ~(-1 << v161);
    }
    else {
      uint64_t v162 = -1;
    }
    uint64_t v163 = v162 & *(void *)(v158 + 64);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    uint64_t v164 = 0;
    if (!v163) {
      goto LABEL_110;
    }
LABEL_108:
    uint64_t v165 = (v163 - 1) & v163;
    uint64_t v166 = __clz(__rbit64(v163)) | (v164 << 6);
    uint64_t v167 = v1[55];
    while (1)
    {
      v1[57] = v164;
      v1[58] = v165;
      LOWORD(v5) = *(_WORD *)(*(void *)(v167 + 48) + 2 * v166);
      *((_WORD *)v1 + 269) = v5;
      uint64_t v174 = *(void *)(*(void *)(v167 + 56) + 8 * v166);
      v1[59] = v174;
      uint64_t v175 = *(unsigned char *)(v174 + 32);
      *((unsigned char *)v1 + 542) = v175;
      uint64_t v176 = -1 << v175;
      uint64_t v177 = -(-1 << v175) < 64 ? ~(-1 << -(char)v176) : -1;
      unint64_t v7 = v177 & *(void *)(v174 + 64);
      uint64_t result = (void *)swift_bridgeObjectRetain();
      if (v7) {
        break;
      }
      v178 = 63 - v176;
      if ((unint64_t)(63 - v176) > 0x7F)
      {
        unint64_t v13 = result[9];
        if (v13) {
          goto LABEL_159;
        }
        if (v178 >= 0xC0)
        {
          unint64_t v13 = result[10];
          if (v13)
          {
            v160 = 2;
            goto LABEL_159;
          }
          if (v178 >= 0x100)
          {
            unint64_t v13 = result[11];
            if (v13) {
              goto LABEL_157;
            }
            if (v178 >= 0x140)
            {
              unint64_t v13 = result[12];
              if (v13)
              {
                v160 = 4;
              }
              else
              {
                uint64_t v179 = v178 >> 6;
                uint64_t v180 = 13;
                do
                {
                  if (v180 - 8 >= v179) {
                    goto LABEL_109;
                  }
                  unint64_t v13 = result[v180++];
                }
                while (!v13);
                v160 = v180 - 9;
              }
              goto LABEL_159;
            }
          }
        }
      }
LABEL_109:
      uint64_t result = (void *)swift_release();
      uint64_t v164 = v1[57];
      uint64_t v163 = v1[58];
      if (v163) {
        goto LABEL_108;
      }
LABEL_110:
      uint64_t v168 = v164 + 1;
      if (__OFADD__(v164, 1)) {
        goto LABEL_164;
      }
      v169 = (1 << *((unsigned char *)v1 + 541)) + 63;
      if (v168 >= (uint64_t)(v169 >> 6)) {
        goto LABEL_151;
      }
      uint64_t result = (void *)v1[55];
      uint64_t v170 = result + 8;
      if (!result[v168 + 8])
      {
        uint64_t v171 = v169 >> 6;
        if (v164 + 2 >= v171) {
          goto LABEL_151;
        }
        if (!v170[v164 + 2])
        {
          if (v164 + 3 >= v171) {
            goto LABEL_151;
          }
          if (!v170[v164 + 3])
          {
            uint64_t v172 = v164 + 4;
            if (v164 + 4 >= v171) {
              goto LABEL_151;
            }
            if (!v170[v172])
            {
              do
              {
                uint64_t v173 = v172 + 1;
                if (__OFADD__(v172, 1)) {
                  goto LABEL_165;
                }
                if (v173 >= v171) {
                  goto LABEL_151;
                }
                ++v172;
              }
              while (!v170[v173]);
            }
          }
        }
      }
      sub_1B29E5724();
    }
LABEL_143:
    v160 = 0;
    uint64_t v181 = __clz(__rbit64(v7));
    uint64_t v182 = (v7 - 1) & v7;
LABEL_160:
    v1[60] = v160;
    v1[61] = v182;
    uint64_t v185 = *(unsigned char *)(result[6] + v181);
    uint64_t v186 = *(void *)(result[7] + 8 * v181);
    v1[62] = v186;
    v1[63] = sub_1B29E1640(v186);
    *((unsigned char *)v1 + 540) = v185;
    *((_WORD *)v1 + 268) = v5;
    swift_bridgeObjectRetain();
    v187 = (void *)swift_task_alloc();
    v1[64] = v187;
    *v187 = v1;
    v187[1] = sub_1B29D8C20;
    sub_1B29E5560();
    return (void *)TrialAssetManager.assets(for:in:downloadOptions:)();
  }
  if (*(void *)(v193 + 8 * v18))
  {
LABEL_13:
    sub_1B29E5874();
    uint64_t v191 = v19;
    uint64_t v192 = v20;
    unint64_t v15 = v21 + (v20 << 6);
    goto LABEL_14;
  }
  while (1)
  {
    uint64_t v153 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v153 >= v194) {
      goto LABEL_103;
    }
    ++v18;
    if (*(void *)(v193 + 8 * v153)) {
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
  return result;
}

uint64_t sub_1B29D8C20()
{
  sub_1B299B708();
  *(void *)(v2 + 520) = v1;
  *(void *)(v2 + 528) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

void sub_1B29D8D3C()
{
  int64_t v1 = 0;
  uint64_t v158 = v0 + 208;
  uint64_t v159 = (void *)(v0 + 48);
  uint64_t v157 = v0 + 224;
  uint64_t v2 = *(void *)(v0 + 520);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v163 = v2 + 64;
  uint64_t v4 = *(void *)(v0 + 496);
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & v3;
  int64_t v167 = (unint64_t)(63 - v6) >> 6;
  uint64_t v148 = v167 - 1;
  uint64_t v152 = v2 + 104;
  uint64_t v165 = *(void *)(v0 + 520);
  uint64_t v166 = *(void *)(v0 + 496);
  if ((v5 & v3) == 0) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v169 = (v7 - 1) & v7;
  unint64_t v8 = __clz(__rbit64(v7)) | (v1 << 6);
LABEL_5:
  uint64_t v9 = *(void **)(v0 + 304);
  uint64_t v10 = *(void *)(v0 + 280);
  uint64_t v11 = (void *)(*(void *)(v2 + 48) + 16 * v8);
  uint64_t v12 = v11[1];
  *uint64_t v9 = *v11;
  v9[1] = v12;
  uint64_t v13 = *(void *)(v2 + 56) + *(void *)(v10 + 72) * v8;
  uint64_t v14 = sub_1B29A3EB4(&qword_1E9C3A608);
  sub_1B29E17F8(v13, (uint64_t)v9 + *(int *)(v14 + 48));
  uint64_t v15 = sub_1B29E57F8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v15, v16, v17, v14);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v23 = *(void *)(v0 + 312);
    sub_1B29E1860(*(void *)(v0 + 304), v23, &qword_1E9C3A5A0);
    uint64_t v24 = sub_1B29A3EB4(&qword_1E9C3A608);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v23, 1, v24) == 1) {
      break;
    }
    int64_t v168 = v1;
    uint64_t v25 = *(uint64_t **)(v0 + 312);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    sub_1B29E1860((uint64_t)v25 + *(int *)(v24 + 48), *(void *)(v0 + 296), &qword_1E9C3A598);
    if (!*(void *)(v4 + 16))
    {
      int64_t v1 = v168;
      goto LABEL_33;
    }
    swift_bridgeObjectRetain();
    sub_1B29DB230(v27, v26, MEMORY[0x1E4FBB120], (uint64_t)sub_1B29DBF9C, v28, v29, v30, v31, v146, v147, v148, v149, v151, v152, v153, v154, v155, v156, v157,
      v158,
      (uint64_t)v159,
      v160,
      v161,
      v162,
      v163,
      (uint64_t)v164);
    if ((v32 & 1) == 0) {
      goto LABEL_32;
    }
    sub_1B29E576C();
    uint64_t v34 = *(void *)(v33 + 8);
    uint64_t v164 = *(void **)v33;
    uint64_t v35 = *(void *)(v33 + 40);
    uint64_t v36 = *(void *)(v33 + 48);
    uint64_t v37 = *(void *)(v33 + 56);
    __int16 v38 = *(_WORD *)(v33 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B29DABBC(v35, v36, v37, v38);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = v37;
    uint64_t v4 = v166;
    sub_1B29DAB98(v35, v36, v39, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*(void *)(v166 + 16))
    {
      uint64_t v2 = v165;
      goto LABEL_32;
    }
    swift_bridgeObjectRetain();
    sub_1B29DB230(v27, v26, MEMORY[0x1E4FBB120], (uint64_t)sub_1B29DBF9C, v40, v41, v42, v43, v146, v147, v148, v149, v151, v152, v153, v154, v155, v156, v157,
      v158,
      (uint64_t)v159,
      v160,
      v161,
      v162,
      v163,
      (uint64_t)v164);
    if ((v44 & 1) == 0)
    {
      uint64_t v2 = v165;
LABEL_31:
      swift_bridgeObjectRelease();
LABEL_32:
      int64_t v1 = v168;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      if (qword_1EB7E5AE0 != -1) {
        swift_once();
      }
      uint64_t v69 = sub_1B2E81FB8();
      sub_1B29A4B98(v69, (uint64_t)qword_1EB7E5AC0);
      uint64_t v70 = sub_1B2E81F98();
      os_log_type_t v71 = sub_1B2E82DC8();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v72 = 0;
        _os_log_impl(&dword_1B2996000, v70, v71, "domainId or assetId not found in trialAssetsToGet", v72, 2u);
        MEMORY[0x1B3EB30C0](v72, -1, -1);
      }

      goto LABEL_38;
    }
    uint64_t v162 = v34;
    sub_1B29E576C();
    uint64_t v160 = *(void *)(v45 + 16);
    uint64_t v46 = *(void *)(v45 + 24);
    uint64_t v47 = *(void *)(v45 + 40);
    uint64_t v48 = *(void *)(v45 + 48);
    uint64_t v49 = *(void *)(v45 + 56);
    __int16 v50 = *(_WORD *)(v45 + 64);
    swift_bridgeObjectRetain();
    uint64_t v161 = v46;
    swift_bridgeObjectRetain();
    sub_1B29DABBC(v47, v48, v49, v50);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v51 = v48;
    uint64_t v4 = v166;
    sub_1B29DAB98(v47, v51, v49, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*(void *)(v166 + 16))
    {
      uint64_t v2 = v165;
      goto LABEL_31;
    }
    sub_1B29DB230(v27, v26, MEMORY[0x1E4FBB120], (uint64_t)sub_1B29DBF9C, v52, v53, v54, v55, v146, v147, v148, v149, v151, v152, v153, v154, v155, v156, v157,
      v158,
      (uint64_t)v159,
      v160,
      v46,
      v162,
      v163,
      (uint64_t)v164);
    if ((v56 & 1) == 0)
    {
      uint64_t v2 = v165;
      goto LABEL_31;
    }
    sub_1B29E576C();
    uint64_t v59 = *(void *)(v57 + 40);
    uint64_t v58 = *(void *)(v57 + 48);
    uint64_t v153 = *(void *)(v57 + 56);
    uint64_t v154 = *(void *)(v57 + 8);
    int v60 = *(unsigned __int16 *)(v57 + 64) | (*(unsigned __int8 *)(v57 + 66) << 16);
    uint64_t v61 = *(void *)(v57 + 80);
    uint64_t v151 = *(void *)(v57 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v155 = v58;
    uint64_t v156 = v59;
    uint64_t v62 = v59;
    uint64_t v63 = v61;
    sub_1B29DABBC(v62, v58, v153, v60);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v64 = sub_1B29D9CE4(v159, (uint64_t)v164, v162);
    long long v65 = (void (*)(void))v64;
    uint64_t v164 = v66;
    if (*v66)
    {
      LODWORD(v154) = v60;
      uint64_t v150 = (uint64_t)v64;
      sub_1B29E17F8(*(void *)(v0 + 296), *(void *)(v0 + 288));
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v68 = *(void **)(v0 + 416);
      if (EnumCaseMultiPayload == 1)
      {
        *uint64_t v68 = **(void **)(v0 + 288);
      }
      else
      {
        uint64_t v73 = *(void *)(v0 + 376);
        uint64_t v74 = *(void *)(v0 + 360);
        uint64_t v146 = *(void *)(v0 + 352);
        uint64_t v147 = *(void *)(v0 + 392);
        uint64_t v76 = *(void *)(v0 + 256);
        uint64_t v75 = *(void *)(v0 + 264);
        uint64_t v77 = *(void *)(v0 + 248);
        sub_1B29DABE0(*(void *)(v0 + 288), v75);
        sub_1B29E4DC4(v75, v76);
        (*(void (**)(void *, uint64_t, uint64_t))(v74 + 32))(v68, v76, v146);
        uint64_t v4 = v166;
        uint64_t v78 = (char *)v68 + *(int *)(v73 + 20);
        *(void *)uint64_t v78 = v156;
        *((void *)v78 + 1) = v58;
        *((void *)v78 + 2) = v153;
        v78[26] = BYTE2(v60);
        *((_WORD *)v78 + 12) = v60;
        *((void *)v78 + 4) = v151;
        *((void *)v78 + 5) = v63;
        sub_1B29E573C(*(void *)(v76 + *(int *)(v77 + 20)));
        uint64_t v79 = sub_1B29E57F8();
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v79, v80, v81, v73);
        uint64_t v82 = sub_1B29E5978();
        sub_1B29DABBC(v82, v83, v84, v85);
        swift_bridgeObjectRetain();
        sub_1B29E25E4(v75, (void (*)(void))type metadata accessor for TrialAssetManager.Asset);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v86 = *(void *)(v0 + 408);
      uint64_t v87 = *(void *)(v0 + 416);
      uint64_t v88 = sub_1B29E5978();
      sub_1B29DAB98(v88, v89, v90, v91);
      swift_bridgeObjectRelease();
      sub_1B29E1860(v87, v86, &qword_1E9C3A5A8);
      swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v0 + 224) = *v164;
      *uint64_t v164 = 0x8000000000000000;
      uint64_t v92 = v161;
      sub_1B29DB230(v160, v161, MEMORY[0x1E4FBB120], (uint64_t)sub_1B29DBF9C, v93, v94, v95, v96, v146, v147, v148, v150, v151, v152, v153, v154, v58, v156, v157,
        v158,
        (uint64_t)v159,
        v160,
        v161,
        v162,
        v163,
        (uint64_t)v164);
      sub_1B299D404();
      uint64_t v2 = v165;
      if (v99) {
        goto LABEL_112;
      }
      unint64_t v100 = v97;
      char v101 = v98;
      sub_1B29A3EB4(&qword_1E9C3A600);
      if (sub_1B2E83398())
      {
        uint64_t v106 = sub_1B29DB230(v160, v92, MEMORY[0x1E4FBB120], (uint64_t)sub_1B29DBF9C, v102, v103, v104, v105, v146, v147, v148, v149, v151, v152, v153, v154, v155, v156, v157,
                 v158,
                 (uint64_t)v159,
                 v160,
                 v161,
                 v162,
                 v163,
                 (uint64_t)v164);
        if ((v101 & 1) != (v107 & 1))
        {
          sub_1B29E5788();
          sub_1B2E83858();
          return;
        }
        unint64_t v100 = v106;
      }
      uint64_t v108 = *(void **)(v0 + 224);
      uint64_t v110 = *(void *)(v0 + 400);
      uint64_t v109 = *(void *)(v0 + 408);
      if (v101)
      {
        sub_1B29E0250(v109, v108[7] + *(void *)(v110 + 72) * v100);
      }
      else
      {
        v108[(v100 >> 6) + 8] |= 1 << v100;
        uint64_t v111 = (uint64_t *)(v108[6] + 16 * v100);
        *uint64_t v111 = v160;
        v111[1] = v92;
        sub_1B29E1860(v109, v108[7] + *(void *)(v110 + 72) * v100, &qword_1E9C3A5A8);
        sub_1B29E5760();
        if (v99) {
          goto LABEL_114;
        }
        v108[2] = v112;
        swift_bridgeObjectRetain();
      }
      *uint64_t v164 = v108;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v1 = v168;
      long long v65 = (void (*)(void))v149;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1B29DAB98(v156, v58, v153, v60);
      swift_bridgeObjectRelease();
      uint64_t v2 = v165;
      int64_t v1 = v168;
    }
    sub_1B29E56AC();
    v65();
    swift_bridgeObjectRelease();
LABEL_38:
    sub_1B29E18B8(*(void *)(v0 + 296));
    unint64_t v7 = v169;
    if (v169) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v18 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    if (v18 >= v167)
    {
      uint64_t v20 = v1;
    }
    else
    {
      unint64_t v19 = *(void *)(v163 + 8 * v18);
      if (v19) {
        goto LABEL_9;
      }
      uint64_t v20 = v1 + 1;
      if (v1 + 2 < v167)
      {
        unint64_t v19 = *(void *)(v163 + 8 * (v1 + 2));
        if (v19)
        {
          int64_t v18 = v1 + 2;
LABEL_9:
          uint64_t v169 = (v19 - 1) & v19;
          unint64_t v8 = __clz(__rbit64(v19)) + (v18 << 6);
          int64_t v1 = v18;
          goto LABEL_5;
        }
        uint64_t v20 = v1 + 2;
        if (v1 + 3 < v167)
        {
          unint64_t v19 = *(void *)(v163 + 8 * (v1 + 3));
          if (v19)
          {
            int64_t v18 = v1 + 3;
            goto LABEL_9;
          }
          int64_t v18 = v1 + 4;
          uint64_t v20 = v1 + 3;
          if (v1 + 4 < v167)
          {
            unint64_t v19 = *(void *)(v163 + 8 * v18);
            if (v19) {
              goto LABEL_9;
            }
            while (v1 + 5 < v167)
            {
              unint64_t v19 = *(void *)(v152 + 8 * v1++);
              if (v19)
              {
                int64_t v18 = v1 + 4;
                goto LABEL_9;
              }
            }
            uint64_t v20 = v148;
          }
        }
      }
    }
    uint64_t v21 = *(void *)(v0 + 304);
    uint64_t v22 = sub_1B29A3EB4(&qword_1E9C3A608);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v21, 1, 1, v22);
    uint64_t v169 = 0;
    int64_t v1 = v20;
  }
  swift_release();
  swift_bridgeObjectRelease();
  int64_t v113 = *(void *)(v0 + 480);
  unint64_t v114 = *(void *)(v0 + 488);
  if (v114)
  {
    uint64_t v115 = *(void *)(v0 + 472);
LABEL_63:
    uint64_t v116 = (v114 - 1) & v114;
    unint64_t v117 = __clz(__rbit64(v114)) | (v113 << 6);
LABEL_99:
    *(void *)(v0 + 480) = v113;
    *(void *)(v0 + 488) = v116;
    __int16 v138 = *(_WORD *)(v0 + 538);
    char v139 = *(unsigned char *)(*(void *)(v115 + 48) + v117);
    uint64_t v140 = *(void *)(*(void *)(v115 + 56) + 8 * v117);
    *(void *)(v0 + 496) = v140;
    *(void *)(v0 + 504) = sub_1B29E1640(v140);
    *(unsigned char *)(v0 + 540) = v139;
    *(_WORD *)(v0 + 536) = v138;
    swift_bridgeObjectRetain();
    uint64_t v141 = (void *)swift_task_alloc();
    *(void *)(v0 + 512) = v141;
    *uint64_t v141 = v0;
    v141[1] = sub_1B29D8C20;
    sub_1B29E5788();
    TrialAssetManager.assets(for:in:downloadOptions:)();
    return;
  }
  while (2)
  {
    BOOL v99 = __OFADD__(v113++, 1);
    if (v99) {
      goto LABEL_109;
    }
    unint64_t v118 = (1 << *(unsigned char *)(v0 + 542)) + 63;
    uint64_t v115 = *(void *)(v0 + 472);
    if (v113 < (uint64_t)(v118 >> 6))
    {
      uint64_t v119 = v115 + 64;
      unint64_t v120 = *(void *)(v115 + 64 + 8 * v113);
      if (v120) {
        goto LABEL_98;
      }
      int64_t v121 = v118 >> 6;
      int64_t v122 = v113 + 1;
      if (v113 + 1 < v121)
      {
        unint64_t v120 = *(void *)(v119 + 8 * v122);
        if (v120) {
          goto LABEL_97;
        }
        int64_t v122 = v113 + 2;
        if (v113 + 2 < v121)
        {
          unint64_t v120 = *(void *)(v119 + 8 * v122);
          if (v120)
          {
LABEL_97:
            int64_t v113 = v122;
            goto LABEL_98;
          }
          v113 += 3;
          if (v113 < v121)
          {
            unint64_t v120 = *(void *)(v119 + 8 * v113);
            if (!v120)
            {
              while (1)
              {
                int64_t v122 = v113 + 1;
                if (__OFADD__(v113, 1)) {
                  break;
                }
                if (v122 >= v121) {
                  goto LABEL_77;
                }
                unint64_t v120 = *(void *)(v119 + 8 * v122);
                ++v113;
                if (v120) {
                  goto LABEL_97;
                }
              }
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
              goto LABEL_113;
            }
LABEL_98:
            uint64_t v116 = (v120 - 1) & v120;
            unint64_t v117 = __clz(__rbit64(v120)) + (v113 << 6);
            goto LABEL_99;
          }
        }
      }
    }
LABEL_77:
    swift_release();
    uint64_t v123 = *(void *)(v0 + 456);
    unint64_t v124 = *(void *)(v0 + 464);
    if (v124)
    {
      uint64_t v125 = (v124 - 1) & v124;
      unint64_t v126 = __clz(__rbit64(v124)) | (v123 << 6);
      uint64_t v127 = *(void *)(v0 + 440);
      goto LABEL_92;
    }
    int64_t v128 = v123 + 1;
    if (__OFADD__(v123, 1)) {
      goto LABEL_111;
    }
    unint64_t v129 = (1 << *(unsigned char *)(v0 + 541)) + 63;
    if (v128 >= (uint64_t)(v129 >> 6))
    {
LABEL_102:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1B29E58FC();
      sub_1B29E5788();
      __asm { BRAA            X2, X16 }
    }
    uint64_t v130 = *(void *)(v0 + 440) + 64;
    if (*(void *)(v130 + 8 * v128)) {
      goto LABEL_91;
    }
    int64_t v131 = v129 >> 6;
    if (v123 + 2 >= v131) {
      goto LABEL_102;
    }
    if (*(void *)(v130 + 8 * (v123 + 2))) {
      goto LABEL_91;
    }
    if (v123 + 3 >= v131) {
      goto LABEL_102;
    }
    if (*(void *)(v130 + 8 * (v123 + 3))) {
      goto LABEL_91;
    }
    uint64_t v132 = v123 + 4;
    if (v123 + 4 >= v131) {
      goto LABEL_102;
    }
    if (*(void *)(v130 + 8 * v132))
    {
LABEL_91:
      sub_1B29E5724();
LABEL_92:
      *(void *)(v0 + 456) = v123;
      *(void *)(v0 + 464) = v125;
      *(_WORD *)(v0 + 538) = *(_WORD *)(*(void *)(v127 + 48) + 2 * v126);
      uint64_t v134 = *(void *)(*(void *)(v127 + 56) + 8 * v126);
      *(void *)(v0 + 472) = v134;
      char v135 = *(unsigned char *)(v134 + 32);
      *(unsigned char *)(v0 + 542) = v135;
      uint64_t v136 = 1 << v135;
      if (v136 < 64) {
        uint64_t v137 = ~(-1 << v136);
      }
      else {
        uint64_t v137 = -1;
      }
      unint64_t v114 = v137 & *(void *)(v134 + 64);
      uint64_t v115 = swift_bridgeObjectRetain();
      int64_t v113 = 0;
      if (v114) {
        goto LABEL_63;
      }
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v133 = v132 + 1;
    if (__OFADD__(v132, 1)) {
      break;
    }
    if (v133 >= v131) {
      goto LABEL_102;
    }
    ++v132;
    if (*(void *)(v130 + 8 * v133)) {
      goto LABEL_91;
    }
  }
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
}

uint64_t sub_1B29D9B24()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

uint64_t (*sub_1B29D9C68(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  v5[4] = a3;
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1B29E543C();
  v5[5] = sub_1B29E0780(v6, v7, v8);
  return sub_1B29D9CE0;
}

uint64_t (*sub_1B29D9CE4(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1B29E09A4(v6, a2, a3);
  return sub_1B29D9CE0;
}

void sub_1B29D9D64(void **a1)
{
  int64_t v1 = *a1;
  uint64_t v2 = sub_1B29E53C4();
  v3(v2);
  swift_bridgeObjectRelease();

  free(v1);
}

void (*sub_1B29D9DAC(void *a1, __int16 a2))(void **)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1B29E08C4(v4, a2);
  return sub_1B29D9E0C;
}

void (*sub_1B29D9E10(void *a1, uint64_t a2))(void **)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1B29E0830(v4, a2);
  return sub_1B29D9E0C;
}

void sub_1B29D9E70(void **a1)
{
  int64_t v1 = *a1;
  uint64_t v2 = sub_1B29E53C4();
  v3(v2);

  free(v1);
}

uint64_t AssetRegistry.deinit()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  sub_1B29E1918(*(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  return v0;
}

uint64_t AssetRegistry.__deallocating_deinit()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  sub_1B29E1918(*(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));

  return swift_deallocClassInstance();
}

uint64_t sub_1B29D9F20@<X0>(uint64_t a1@<X8>)
{
  return AssetRegistry.trialAssetManagerPolicy.getter(a1);
}

uint64_t sub_1B29D9F44()
{
  int64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *int64_t v1 = v0;
  v1[1] = sub_1B299ACAC;
  return AssetRegistry.asset(for:in:)();
}

uint64_t sub_1B29DA010()
{
  int64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *int64_t v1 = v0;
  v1[1] = sub_1B29DA0A8;
  return AssetRegistry.assets(for:)();
}

uint64_t sub_1B29DA0A8()
{
  sub_1B299B3BC();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v4 = *v1;
  sub_1B299B0E0();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  sub_1B29E58FC();
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

void sub_1B29DA174()
{
}

void sub_1B29DA198()
{
}

uint64_t sub_1B29DA1BC@<X0>(unsigned char *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 v4 = *a2;
  if (*a1)
  {
    uint64_t v5 = type metadata accessor for InferenceSupportRemoteBackendXPC();
    unsigned __int8 v9 = v4;
    uint64_t result = sub_1B2C762AC(v5, &v9);
    uint64_t v7 = &off_1F0AD56B8;
  }
  else
  {
    uint64_t v5 = sub_1B29A3EB4(&qword_1E9C3A700);
    unsigned __int8 v8 = v4;
    uint64_t result = sub_1B29F4434((char *)&v8);
    uint64_t v7 = &off_1F0ABE118;
  }
  a3[3] = v5;
  a3[4] = (uint64_t)v7;
  *a3 = result;
  return result;
}

uint64_t sub_1B29DA250@<X0>(uint64_t *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)GDXPCAssetRegistryService), sel_init);
  sub_1B2E7FFF8();
  swift_allocObject();
  uint64_t v3 = sub_1B2E7FFE8();
  sub_1B2E7FF98();
  swift_allocObject();
  uint64_t v4 = sub_1B2E7FF88();
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C3A6F8);
  uint64_t v6 = swift_allocObject();
  sub_1B29A3EB4(&qword_1E9C3A700);
  swift_allocObject();
  uint64_t result = sub_1B29F4594(1, v2, v3, v4);
  *(void *)(v6 + 16) = result;
  a1[3] = v5;
  a1[4] = (uint64_t)&protocol witness table for AssetRegistryRemoteWritableBackendXPC<A>;
  *a1 = v6;
  return result;
}

uint64_t AssetRegistryParameters.LocalOptions.loadOverriddenAssetEntries.getter()
{
  return 0;
}

uint64_t sub_1B29DA360(uint64_t a1)
{
  unint64_t v2 = sub_1B29E1980();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29DA39C(uint64_t a1)
{
  unint64_t v2 = sub_1B29E1980();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AssetRegistryParameters.LocalOptions.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C3A610);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299E4A0();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B29E1980();
  sub_1B2E83A38();
  uint64_t v3 = sub_1B29A4150();
  return v4(v3);
}

uint64_t AssetRegistryParameters.LocalOptions.init(from:)(uint64_t a1)
{
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
}

uint64_t sub_1B29DA4DC()
{
  return 0;
}

uint64_t sub_1B29DA4E4(uint64_t a1)
{
  return AssetRegistryParameters.LocalOptions.init(from:)(a1);
}

uint64_t sub_1B29DA4FC(void *a1)
{
  return AssetRegistryParameters.LocalOptions.encode(to:)(a1);
}

uint64_t AssetRegistryParameters.RemoteEndpointType.hash(into:)()
{
  return sub_1B2E83998();
}

BOOL static AssetRegistryParameters.RemoteEndpointType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AssetRegistryParameters.RemoteEndpointType.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t AssetRegistryParameters.RemoteOptions.loadOverriddenAssetEntries.getter()
{
  return *v0;
}

IntelligencePlatform::AssetRegistryParameters::RemoteOptions __swiftcall AssetRegistryParameters.RemoteOptions.init(loadOverriddenAssetEntries:)(IntelligencePlatform::AssetRegistryParameters::RemoteOptions loadOverriddenAssetEntries)
{
  v1->loadOverriddenAssetEntries = loadOverriddenAssetEntries.loadOverriddenAssetEntries;
  return loadOverriddenAssetEntries;
}

uint64_t sub_1B29DA5BC()
{
  return sub_1B2E83998();
}

uint64_t sub_1B29DA5E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x80000001B2E96A30)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t _s20IntelligencePlatform34LocationEmbedderInferenceInterfaceO6ErrorsO9InitErrorO9hashValueSivg_0()
{
  return sub_1B2E839E8();
}

unint64_t sub_1B29DA6B0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1B29DA6D4()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29DA718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29DA5E4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B29DA744(uint64_t a1)
{
  unint64_t v2 = sub_1B29E19CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29DA780(uint64_t a1)
{
  unint64_t v2 = sub_1B29E19CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AssetRegistryParameters.RemoteOptions.encode(to:)()
{
  sub_1B299F300();
  int64_t v1 = v0;
  sub_1B29A3EB4(&qword_1E9C3A620);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B29A0480();
  sub_1B29AEC7C(v1, v1[3]);
  sub_1B29E19CC();
  sub_1B2E83A38();
  sub_1B2E83698();
  uint64_t v3 = sub_1B299F318();
  v4(v3);
  sub_1B29998C8();
}

void AssetRegistryParameters.RemoteOptions.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3A630);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29A0480();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B29E19CC();
  sub_1B2E83A18();
  if (!v0)
  {
    char v6 = sub_1B2E83578();
    uint64_t v7 = sub_1B299F318();
    v8(v7);
    *uint64_t v4 = v6 & 1;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  sub_1B29998C8();
}

void sub_1B29DA998()
{
}

void sub_1B29DA9B0()
{
}

uint64_t AssetRegistryAsset.url.getter()
{
  sub_1B2E80498();
  sub_1B2999864();
  uint64_t v0 = sub_1B2999874();

  return v1(v0);
}

uint64_t AssetRegistryAsset.assetEntry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AssetRegistryAsset(0) + 20);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  char v7 = *(unsigned char *)(v3 + 26);
  __int16 v8 = *(_WORD *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t v10 = *(void *)(v3 + 40);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 26) = v7;
  *(_WORD *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  sub_1B29DABBC(v4, v5, v6, v8);

  return swift_bridgeObjectRetain();
}

uint64_t AssetRegistryAsset.metadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AssetRegistryAsset(0) + 24));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_1B29E1A18(v4, v5, v6);
}

uint64_t AssetRegistryAsset.Metadata.TrialMetadata.metadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AssetRegistryAsset.Metadata.TrialMetadata.experimentIdentifiers.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_1B29E1A88(v2, v3);
}

uint64_t sub_1B29DAB14(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 && a3 != 2)
  {
    if (a3 != 1) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t type metadata accessor for AssetRegistryAsset(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1EB7E2970);
}

uint64_t sub_1B29DAB98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 < 0) {
    return swift_bridgeObjectRelease();
  }
  else {
    return sub_1B29DABB0();
  }
}

uint64_t sub_1B29DABB0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29DABBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 < 0) {
    return swift_bridgeObjectRetain();
  }
  else {
    return sub_1B29DABD4();
  }
}

uint64_t sub_1B29DABD4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B29DABE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1B29E5808();
  v4(v3);
  sub_1B2999864();
  sub_1B29A15F0();
  v5();
  return a2;
}

unint64_t sub_1B29DAC38()
{
  unint64_t result = qword_1EB7D88C8;
  if (!qword_1EB7D88C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D88C8);
  }
  return result;
}

unint64_t sub_1B29DAC84()
{
  unint64_t result = qword_1EB7D8A58;
  if (!qword_1EB7D8A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8A58);
  }
  return result;
}

unint64_t sub_1B29DACD0()
{
  unint64_t result = qword_1E9C3A588;
  if (!qword_1E9C3A588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A588);
  }
  return result;
}

uint64_t type metadata accessor for AssetRegistryAssetLocalAvailabilityInfo(uint64_t a1)
{
  return sub_1B29DAD3C(a1, qword_1EB7D8A70);
}

uint64_t sub_1B29DAD3C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1B29DAD70()
{
  unint64_t result = qword_1E9C3A5C8;
  if (!qword_1E9C3A5C8)
  {
    sub_1B29C3588(&qword_1E9C3A5B8);
    sub_1B29DADE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A5C8);
  }
  return result;
}

unint64_t sub_1B29DADE4()
{
  unint64_t result = qword_1E9C3A5D0;
  if (!qword_1E9C3A5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A5D0);
  }
  return result;
}

uint64_t sub_1B29DAE30(uint64_t a1)
{
  uint64_t v3 = (_DWORD *)swift_slowAlloc();
  *uint64_t v3 = 0;
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = v3;
  return v1;
}

unint64_t sub_1B29DAE70()
{
  sub_1B29E53D8();
  sub_1B2E839C8();
  sub_1B2E839E8();
  uint64_t v0 = sub_1B29E56B8();

  return sub_1B29DBACC(v0, v1);
}

unint64_t sub_1B29DAEC8()
{
  sub_1B29E53D8();
  swift_bridgeObjectRetain();
  sub_1B29E5674();
  swift_bridgeObjectRelease();
  sub_1B2E839E8();
  uint64_t v0 = (uint64_t *)sub_1B29E56B8();

  return sub_1B29DBB68(v0, v1);
}

unint64_t sub_1B29DAF2C()
{
  sub_1B29E57A4();
  sub_1B29F8C34();
  char v0 = sub_1B29E577C();

  return sub_1B29DBC70(v0, v1);
}

unint64_t sub_1B29DAF64(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  sub_1B2E83988();
  sub_1B2E839A8();
  if ((a2 & 1) == 0) {
    sub_1B2E839C8();
  }
  uint64_t v5 = sub_1B2E839E8();

  return sub_1B29DBE10(a1, v4, v5);
}

unint64_t sub_1B29DAFFC()
{
  sub_1B29E53D8();
  swift_bridgeObjectRetain();
  sub_1B29E5674();
  swift_bridgeObjectRelease();
  sub_1B2E839E8();
  uint64_t v0 = sub_1B29E56B8();

  return sub_1B29DBE94(v0, v1);
}

uint64_t sub_1B29DB060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_1B29DB230(a1, a2, MEMORY[0x1E4FBB120], (uint64_t)sub_1B29DBF9C, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B29DB08C(uint64_t a1)
{
  return sub_1B29DB318(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA49C0, (uint64_t (*)(uint64_t, uint64_t))sub_1B29DC080);
}

unint64_t sub_1B29DB0B8()
{
  sub_1B29E53D8();
  CodableLocation.hash(into:)();
  sub_1B2E839E8();
  uint64_t v0 = (double *)sub_1B29E56B8();

  return sub_1B29DC3CC(v0, v1);
}

uint64_t sub_1B29DB114(uint64_t a1)
{
  sub_1B29E544C();
  sub_1B2E839B8();
  uint64_t v2 = sub_1B2E839E8();
  return sub_1B29DDD20(a1, v2);
}

unint64_t sub_1B29DB174()
{
  sub_1B29E5908();
  sub_1B29E544C();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  sub_1B2AA4BC0();
  sub_1B2E839E8();
  sub_1B29A4150();
  sub_1B29E591C();
  return sub_1B29DC5C0(v0, v1, v2, v3);
}

uint64_t sub_1B29DB204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_1B29DB230(a1, a2, MEMORY[0x1E4FBAF48], (uint64_t)sub_1B29DBF9C, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B29DB230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_1B29E5908();
  a25 = v26;
  a26 = v27;
  uint64_t v44 = v28;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_1B29E544C();
  v30(&a10, v34, v32);
  sub_1B2E839E8();
  sub_1B29A4150();
  sub_1B29E591C();
  return v38(v35, v36, v37, v38, v39, v40, v41, v42, v44, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_1B29DB2B0(uint64_t a1)
{
  uint64_t v2 = sub_1B2E83978();
  return sub_1B29DE0E0(a1, v2);
}

uint64_t sub_1B29DB2EC(uint64_t a1)
{
  return sub_1B29DB318(a1, (void (*)(unsigned char *, uint64_t))sub_1B2AA5F70, (uint64_t (*)(uint64_t, uint64_t))sub_1B29DC824);
}

uint64_t sub_1B29DB318(uint64_t a1, void (*a2)(unsigned char *, uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  sub_1B29E544C();
  a2(v8, a1);
  uint64_t v5 = sub_1B2E839E8();

  return a3(a1, v5);
}

unint64_t sub_1B29DB390(__int16 a1)
{
  sub_1B2E83988();
  sub_1B29E4FFC((uint64_t)v4, a1);
  uint64_t v2 = sub_1B2E839E8();

  return sub_1B29DCB14(a1, v2);
}

unint64_t sub_1B29DB3FC()
{
  sub_1B29E5908();
  sub_1B29E53D8();
  int v1 = *(unsigned __int8 *)(v0 + 33);
  swift_bridgeObjectRetain();
  sub_1B29E52BC(v0);
  sub_1B29E5674();
  swift_bridgeObjectRelease();
  sub_1B29C5E2C(v0);
  sub_1B2E839A8();
  if (v1 != 2) {
    sub_1B2E83998();
  }
  sub_1B2E839E8();
  sub_1B29E56B8();
  sub_1B29E591C();
  return sub_1B29DCCB8(v2, v3);
}

unint64_t sub_1B29DB4A8()
{
  sub_1B29F93B0();
  char v0 = sub_1B29E577C();

  return sub_1B29DCDAC(v0, v1);
}

unint64_t sub_1B29DB4EC()
{
  sub_1B29E5908();
  sub_1B2E82378();
  sub_1B2E83988();
  sub_1B2E82498();
  sub_1B2E839E8();
  swift_bridgeObjectRelease();
  sub_1B29E591C();
  return sub_1B29DCEF0(v0, v1);
}

unint64_t sub_1B29DB578(uint64_t a1)
{
  uint64_t v2 = sub_1B2E83138();

  return sub_1B29DD068(a1, v2);
}

unint64_t sub_1B29DB5BC(char a1)
{
  sub_1B29E544C();
  sub_1B2A9DC90(a1);
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1B2E839E8();

  return sub_1B29DD130(a1, v2);
}

unint64_t sub_1B29DB640(unsigned int a1)
{
  MEMORY[0x1B3EB2130](*(void *)(v1 + 40), a1, 4);
  int v2 = sub_1B29E577C();

  return sub_1B29DD3BC(v2, v3);
}

unint64_t sub_1B29DB684()
{
  sub_1B29E57A4();
  sub_1B29F9424();
  char v0 = sub_1B29E577C();

  return sub_1B29DD458(v0, v1);
}

void sub_1B29DB6BC()
{
}

unint64_t sub_1B29DB700(double a1)
{
  uint64_t v2 = sub_1B2E83978();

  return sub_1B29DDB38(v2, a1);
}

unint64_t sub_1B29DB748()
{
  sub_1B29E53D8();
  swift_bridgeObjectRetain();
  sub_1B29E5674();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  sub_1B2E839E8();
  char v0 = (uint64_t *)sub_1B29E56B8();
  return sub_1B29DDBD0(v0, v1);
}

void sub_1B29DB800()
{
}

unint64_t sub_1B29DB844()
{
  sub_1B29E57A4();
  sub_1B29F9874();
  char v0 = sub_1B29E577C();

  return sub_1B29DDE78(v0, v1);
}

void sub_1B29DB87C()
{
}

unint64_t sub_1B29DB920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B2E83988();
  sub_1B2E839A8();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
  }
  sub_1B2E839A8();
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = sub_1B2E839E8();

  return sub_1B29DE14C(a1, a2, a3, a4, v8);
}

unint64_t sub_1B29DBA18()
{
  sub_1B29E5908();
  sub_1B29E544C();
  sub_1B29E56D0();
  sub_1B2E153DC(v0, v1, v2, v3);
  sub_1B2E839E8();
  sub_1B29A4150();
  sub_1B29E591C();
  return sub_1B29DE26C(v4, v5, v6, v7);
}

void sub_1B29DBA88()
{
}

unint64_t sub_1B29DBACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1B29DBB68(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v7 = *a1;
    uint64_t v6 = a1[1];
    uint64_t v8 = *(void *)(v2 + 48);
    uint64_t v9 = (void *)(v8 + 40 * i);
    if ((*v9 != *a1 || v9[1] != v6) && (sub_1B2E837A8() & 1) == 0)
    {
      uint64_t v11 = ~v4;
      for (unint64_t i = (i + 1) & v11; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v11)
      {
        uint64_t v12 = (void *)(v8 + 40 * i);
        if (*v12 == v7 && v12[1] == v6) {
          break;
        }
        if (sub_1B2E837A8()) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1B29DBC70(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v7 = 0x7463614670696B73;
          unint64_t v8 = 0xEF7265646E655273;
        }
        else
        {
          unint64_t v8 = 0x80000001B2E8E960;
          unint64_t v7 = 0xD000000000000013;
        }
      }
      else
      {
        unint64_t v8 = 0xE700000000000000;
        unint64_t v7 = 0x73736572646461;
      }
      if (a1)
      {
        unint64_t v9 = a1 == 1 ? 0x7463614670696B73 : 0xD000000000000013;
        unint64_t v10 = a1 == 1 ? 0xEF7265646E655273 : 0x80000001B2E8E960;
      }
      else
      {
        unint64_t v10 = 0xE700000000000000;
        unint64_t v9 = 0x73736572646461;
      }
      if (v7 == v9 && v8 == v10) {
        break;
      }
      char v12 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1B29DBE10(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      uint64_t v8 = *(void *)(v3 + 48) + 16 * result;
      if (*(unsigned char *)(v8 + 8))
      {
        if (a2) {
          return result;
        }
      }
      else if ((a2 & 1) == 0 && *(void *)v8 == a1)
      {
        return result;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1B29DBE94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v7 = *(void *)(a1 + 16);
    uint64_t v6 = *(void *)(a1 + 24);
    uint64_t v8 = *(void *)(v2 + 48);
    uint64_t v9 = v8 + 40 * i;
    if ((*(void *)(v9 + 16) != v7 || *(void *)(v9 + 24) != v6) && (sub_1B2E837A8() & 1) == 0)
    {
      uint64_t v11 = ~v4;
      for (unint64_t i = (i + 1) & v11; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v11)
      {
        uint64_t v12 = v8 + 40 * i;
        if (*(void *)(v12 + 16) == v7 && *(void *)(v12 + 24) == v6) {
          break;
        }
        if (sub_1B2E837A8()) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1B29DBF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1B2E837A8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1B2E837A8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1B29DC080(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE400000000000000;
      uint64_t v8 = 1701736302;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0x80000001B2E8EB10;
          uint64_t v8 = 0xD000000000000010;
          break;
        case 2:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x7865646E496F6ELL;
          break;
        case 3:
          uint64_t v9 = 0x47746E657665;
          goto LABEL_10;
        case 4:
          uint64_t v8 = 0x79676F6C6F746E6FLL;
          unint64_t v7 = 0xED00007865646E49;
          break;
        case 5:
          uint64_t v8 = 0x49747865746E6F63;
          unint64_t v7 = 0xEC0000007865646ELL;
          break;
        case 6:
          uint64_t v9 = 0x476C61636F6CLL;
LABEL_10:
          uint64_t v8 = v9 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
          unint64_t v7 = 0xEF7865646E496870;
          break;
        case 7:
          uint64_t v8 = 0xD00000000000001ALL;
          unint64_t v7 = 0x80000001B2E8EB70;
          break;
        case 8:
          uint64_t v8 = 0xD000000000000018;
          unint64_t v7 = 0x80000001B2E8EB90;
          break;
        default:
          break;
      }
      unint64_t v10 = 0xE400000000000000;
      uint64_t v11 = 1701736302;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0x80000001B2E8EB10;
          uint64_t v11 = 0xD000000000000010;
          break;
        case 2:
          unint64_t v10 = 0xE700000000000000;
          uint64_t v11 = 0x7865646E496F6ELL;
          break;
        case 3:
          uint64_t v12 = 0x47746E657665;
          goto LABEL_20;
        case 4:
          uint64_t v11 = 0x79676F6C6F746E6FLL;
          unint64_t v10 = 0xED00007865646E49;
          break;
        case 5:
          uint64_t v11 = 0x49747865746E6F63;
          unint64_t v10 = 0xEC0000007865646ELL;
          break;
        case 6:
          uint64_t v12 = 0x476C61636F6CLL;
LABEL_20:
          uint64_t v11 = v12 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
          unint64_t v10 = 0xEF7865646E496870;
          break;
        case 7:
          uint64_t v11 = 0xD00000000000001ALL;
          unint64_t v10 = 0x80000001B2E8EB70;
          break;
        case 8:
          uint64_t v11 = 0xD000000000000018;
          unint64_t v10 = 0x80000001B2E8EB90;
          break;
        default:
          break;
      }
      if (v8 == v11 && v7 == v10) {
        break;
      }
      char v14 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1B29DC3CC(double *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CodableLocation();
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (double *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1B29E4DC4(*(void *)(v2 + 48) + v12 * v10, (uint64_t)v8);
      if (*v8 == *a1
        && v8[1] == a1[1]
        && v8[2] == a1[2]
        && v8[3] == a1[3]
        && v8[4] == a1[4]
        && v8[5] == a1[5]
        && v8[6] == a1[6]
        && (sub_1B2E80608() & 1) != 0)
      {
        break;
      }
      sub_1B29E25E4((uint64_t)v8, (void (*)(void))type metadata accessor for CodableLocation);
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        return v10;
      }
    }
    sub_1B29E25E4((uint64_t)v8, (void (*)(void))type metadata accessor for CodableLocation);
  }
  return v10;
}

unint64_t sub_1B29DC5C0(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v5 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v6 = a4 & ~v5;
  if ((*(void *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = a3;
    do
    {
      uint64_t v11 = *(void *)(v4 + 48) + 24 * v6;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 16);
      BOOL v13 = *(void *)v11 == a1 && *(void *)(v11 + 8) == a2;
      if (v13 || (sub_1B2E837A8() & 1) != 0)
      {
        unint64_t v14 = 0xE500000000000000;
        uint64_t v15 = 0x44495F474BLL;
        switch(v12)
        {
          case 1:
            uint64_t v15 = 0x61746164696B6957;
            unint64_t v14 = 0xEB0000000044495FLL;
            break;
          case 2:
            unint64_t v14 = 0xE700000000000000;
            uint64_t v15 = 0x44495F6D616441;
            break;
          case 3:
            unint64_t v14 = 0xE600000000000000;
            uint64_t v15 = 0x44495F434D55;
            break;
          case 4:
            unint64_t v14 = 0xE800000000000000;
            uint64_t v15 = 0x44495F7374617453;
            break;
          default:
            break;
        }
        unint64_t v16 = 0xE500000000000000;
        uint64_t v17 = 0x44495F474BLL;
        switch(v10)
        {
          case 1:
            uint64_t v17 = 0x61746164696B6957;
            unint64_t v16 = 0xEB0000000044495FLL;
            break;
          case 2:
            unint64_t v16 = 0xE700000000000000;
            uint64_t v17 = 0x44495F6D616441;
            break;
          case 3:
            unint64_t v16 = 0xE600000000000000;
            uint64_t v17 = 0x44495F434D55;
            break;
          case 4:
            unint64_t v16 = 0xE800000000000000;
            uint64_t v17 = 0x44495F7374617453;
            break;
          default:
            break;
        }
        if (v15 == v17 && v14 == v16)
        {
          swift_bridgeObjectRelease_n();
          return v6;
        }
        char v19 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v19) {
          return v6;
        }
      }
      unint64_t v6 = (v6 + 1) & v9;
    }
    while (((*(void *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1B29DC824(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xD000000000000022;
      unint64_t v8 = 0x80000001B2E8EBD0;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v9 = "STANDING_MULTITASK";
          goto LABEL_12;
        case 2:
          unint64_t v7 = 0xD000000000000028;
          uint64_t v10 = "BEHAVIORAL_UNDERSTANDING_ANCHOR";
          goto LABEL_10;
        case 3:
          unint64_t v7 = 0xD000000000000020;
          uint64_t v10 = "STANDING_EXPERIMENTATION";
          goto LABEL_10;
        case 4:
          uint64_t v10 = "TFORM_LIGHTHOUSE";
          unint64_t v7 = 0xD00000000000001CLL;
          goto LABEL_10;
        case 5:
          unint64_t v7 = 0xD00000000000002ELL;
          uint64_t v10 = "INTELLIGENCE_PLATFORM_CONFIG";
          goto LABEL_10;
        case 6:
          uint64_t v10 = "TFORM_GLOBAL_KNOWLEDGE_SERVICE";
          unint64_t v7 = 0xD00000000000001DLL;
LABEL_10:
          unint64_t v8 = (unint64_t)v10 | 0x8000000000000000;
          break;
        case 7:
          uint64_t v9 = "KNOWLEDGE_CONSTRUCTION_PERSON";
LABEL_12:
          unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
          unint64_t v7 = 0xD00000000000001FLL;
          break;
        case 8:
          unint64_t v7 = 0x4E4F435F4452454ELL;
          unint64_t v8 = 0xEB00000000474946;
          break;
        default:
          break;
      }
      unint64_t v11 = 0xD000000000000022;
      unint64_t v12 = 0x80000001B2E8EBD0;
      switch(v6)
      {
        case 1:
          BOOL v13 = "STANDING_MULTITASK";
          goto LABEL_23;
        case 2:
          unint64_t v11 = 0xD000000000000028;
          unint64_t v14 = "BEHAVIORAL_UNDERSTANDING_ANCHOR";
          goto LABEL_21;
        case 3:
          unint64_t v11 = 0xD000000000000020;
          unint64_t v14 = "STANDING_EXPERIMENTATION";
          goto LABEL_21;
        case 4:
          unint64_t v14 = "TFORM_LIGHTHOUSE";
          unint64_t v11 = 0xD00000000000001CLL;
          goto LABEL_21;
        case 5:
          unint64_t v11 = 0xD00000000000002ELL;
          unint64_t v14 = "INTELLIGENCE_PLATFORM_CONFIG";
          goto LABEL_21;
        case 6:
          unint64_t v14 = "TFORM_GLOBAL_KNOWLEDGE_SERVICE";
          unint64_t v11 = 0xD00000000000001DLL;
LABEL_21:
          unint64_t v12 = (unint64_t)v14 | 0x8000000000000000;
          break;
        case 7:
          BOOL v13 = "KNOWLEDGE_CONSTRUCTION_PERSON";
LABEL_23:
          unint64_t v12 = (unint64_t)v13 | 0x8000000000000000;
          unint64_t v11 = 0xD00000000000001FLL;
          break;
        case 8:
          unint64_t v11 = 0x4E4F435F4452454ELL;
          unint64_t v12 = 0xEB00000000474946;
          break;
        default:
          break;
      }
      if (v7 == v11 && v8 == v12) {
        break;
      }
      char v16 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1B29DCB14(__int16 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    char v5 = a1;
    uint64_t v6 = ~v3;
    int v7 = a1;
    if ((a1 & 0x100) != 0) {
      unint64_t v8 = 0x6974657263736964;
    }
    else {
      unint64_t v8 = 0xD000000000000010;
    }
    if ((a1 & 0x100) != 0) {
      unint64_t v9 = 0xED00007972616E6FLL;
    }
    else {
      unint64_t v9 = 0x80000001B2E95D90;
    }
    do
    {
      int v10 = *(unsigned __int16 *)(*(void *)(v2 + 48) + 2 * v4);
      if (*(_WORD *)(*(void *)(v2 + 48) + 2 * v4) == 2)
      {
        if (v7 == 2) {
          return v4;
        }
      }
      else if (v7 != 2 && ((((v5 & 1) == 0) ^ v10) & 1) != 0)
      {
        if ((v10 & 0x100) != 0) {
          unint64_t v11 = 0x6974657263736964;
        }
        else {
          unint64_t v11 = 0xD000000000000010;
        }
        if ((v10 & 0x100) != 0) {
          unint64_t v12 = 0xED00007972616E6FLL;
        }
        else {
          unint64_t v12 = 0x80000001B2E95D90;
        }
        if (v11 == v8 && v12 == v9)
        {
          swift_bridgeObjectRelease_n();
          return v4;
        }
        char v14 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v14) {
          return v4;
        }
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1B29DCCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = ~v4;
    uint64_t v7 = *(void *)(v2 + 48);
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 24);
    int v10 = *(unsigned __int8 *)(a1 + 33);
    do
    {
      uint64_t v11 = v7 + 40 * v5;
      int v12 = *(unsigned __int8 *)(v11 + 33);
      BOOL v13 = *(void *)(v11 + 16) == v8 && *(void *)(v11 + 24) == v9;
      if (v13 || (sub_1B2E837A8() & 1) != 0)
      {
        if (v12 == 2)
        {
          if (v10 == 2) {
            return v5;
          }
        }
        else if (v10 != 2 && ((v12 ^ v10) & 1) == 0)
        {
          return v5;
        }
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_1B29DCDAC(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x7241746E65746E69;
    }
    else {
      uint64_t v6 = 0x79676F6C6F746E6FLL;
    }
    if (a1) {
      unint64_t v7 = 0xE900000000000067;
    }
    else {
      unint64_t v7 = 0xE800000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x7241746E65746E69 : 0x79676F6C6F746E6FLL;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE900000000000067 : 0xE800000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1B29DCEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1B2E82378();
    uint64_t v8 = v7;
    if (v6 == sub_1B2E82378() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1B2E82378();
          uint64_t v15 = v14;
          if (v13 == sub_1B2E82378() && v15 == v16) {
            break;
          }
          char v18 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1B29DD068(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1B29E4C30(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1B3EB1910](v9, a1);
      sub_1B29E4C8C((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1B29DD130(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0x80000001B2E8EFC0;
      unint64_t v8 = 0xD000000000000012;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v9 = "candidateNameScore";
          goto LABEL_8;
        case 2:
          int v10 = "candidateCommunicationScore";
          unint64_t v8 = 0xD00000000000001ALL;
          goto LABEL_10;
        case 3:
          int v10 = "candidateOrganizationScore";
          unint64_t v8 = 0xD000000000000016;
          goto LABEL_10;
        case 4:
          uint64_t v9 = "candidateLocationScore";
LABEL_8:
          unint64_t v7 = (unint64_t)v9 | 0x8000000000000000;
          unint64_t v8 = 0xD00000000000001BLL;
          break;
        case 5:
          int v10 = "candidateEventLocationScore";
          unint64_t v8 = 0xD000000000000017;
LABEL_10:
          unint64_t v7 = (unint64_t)v10 | 0x8000000000000000;
          break;
        case 6:
          unint64_t v8 = 0x6F63536369706F74;
          unint64_t v7 = 0xEA00000000006572;
          break;
        default:
          break;
      }
      unint64_t v11 = 0x80000001B2E8EFC0;
      unint64_t v12 = 0xD000000000000012;
      switch(v6)
      {
        case 1:
          uint64_t v13 = "candidateNameScore";
          goto LABEL_17;
        case 2:
          uint64_t v14 = "candidateCommunicationScore";
          unint64_t v12 = 0xD00000000000001ALL;
          goto LABEL_19;
        case 3:
          uint64_t v14 = "candidateOrganizationScore";
          unint64_t v12 = 0xD000000000000016;
          goto LABEL_19;
        case 4:
          uint64_t v13 = "candidateLocationScore";
LABEL_17:
          unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
          unint64_t v12 = 0xD00000000000001BLL;
          break;
        case 5:
          uint64_t v14 = "candidateEventLocationScore";
          unint64_t v12 = 0xD000000000000017;
LABEL_19:
          unint64_t v11 = (unint64_t)v14 | 0x8000000000000000;
          break;
        case 6:
          unint64_t v12 = 0x6F63536369706F74;
          unint64_t v11 = 0xEA00000000006572;
          break;
        default:
          break;
      }
      if (v8 == v12 && v7 == v11) {
        break;
      }
      char v16 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1B29DD3BC(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1B29DD458(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      unint64_t v7 = 0xE500000000000000;
      unint64_t v8 = 0x7465736E75;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x6E776F6E6B6E75;
          break;
        case 2:
          unint64_t v8 = 0x726568746FLL;
          break;
        case 3:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x666C6573796DLL;
          break;
        case 4:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x796C696D6166;
          break;
        case 5:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x746E65726170;
          break;
        case 6:
          unint64_t v8 = 0x726568746F6DLL;
          unint64_t v7 = 0xE600000000000000;
          break;
        case 7:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v9 = 1752457574;
          goto LABEL_14;
        case 8:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x676E696C626973;
          break;
        case 9:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v10 = 0x6568746F7262;
          goto LABEL_25;
        case 0xA:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v9 = 1953720691;
LABEL_14:
          unint64_t v8 = v9 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
          break;
        case 0xB:
          unint64_t v8 = 0x726150646E617267;
          uint64_t v11 = 7630437;
          goto LABEL_19;
        case 0xC:
          unint64_t v8 = 0x746F6D646E617267;
          goto LABEL_18;
        case 0xD:
          unint64_t v8 = 0x746166646E617267;
LABEL_18:
          uint64_t v11 = 7497064;
LABEL_19:
          unint64_t v7 = v11 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0xE:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v12 = 0x6C696843796DLL;
          goto LABEL_28;
        case 0xF:
          unint64_t v8 = 0x646C696863;
          break;
        case 0x10:
          unint64_t v7 = 0xE300000000000000;
          unint64_t v8 = 7237491;
          break;
        case 0x11:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v13 = 0x746867756164;
          goto LABEL_32;
        case 0x12:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v10 = 0x656E74726170;
LABEL_25:
          unint64_t v8 = v10 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
          break;
        case 0x13:
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1701210487;
          break;
        case 0x14:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v12 = 0x6E6162737568;
LABEL_28:
          unint64_t v8 = v12 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
          break;
        case 0x15:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x646E65697266;
          break;
        case 0x16:
          unint64_t v7 = 0x80000001B2E8EA20;
          unint64_t v8 = 0xD000000000000010;
          break;
        case 0x17:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v13 = 0x6B726F776F63;
LABEL_32:
          unint64_t v8 = v13 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
          break;
        case 0x18:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x726F62686769656ELL;
          break;
        case 0x19:
          unint64_t v8 = 0x74616D6573756F68;
          unint64_t v7 = 0xE900000000000065;
          break;
        case 0x1A:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x696E6D756C61;
          break;
        case 0x1B:
          uint64_t v14 = 1699772781;
          goto LABEL_39;
        case 0x1C:
          unint64_t v8 = 0x676F44796DLL;
          break;
        case 0x1D:
          uint64_t v14 = 1631811949;
LABEL_39:
          unint64_t v8 = v14 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
          break;
        default:
          break;
      }
      unint64_t v15 = 0xE500000000000000;
      unint64_t v16 = 0x7465736E75;
      switch(a1)
      {
        case 1:
          unint64_t v15 = 0xE700000000000000;
          unint64_t v16 = 0x6E776F6E6B6E75;
          break;
        case 2:
          unint64_t v16 = 0x726568746FLL;
          break;
        case 3:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x666C6573796DLL;
          break;
        case 4:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x796C696D6166;
          break;
        case 5:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x746E65726170;
          break;
        case 6:
          unint64_t v16 = 0x726568746F6DLL;
          unint64_t v15 = 0xE600000000000000;
          break;
        case 7:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v17 = 1752457574;
          goto LABEL_51;
        case 8:
          unint64_t v15 = 0xE700000000000000;
          unint64_t v16 = 0x676E696C626973;
          break;
        case 9:
          unint64_t v15 = 0xE700000000000000;
          uint64_t v18 = 0x6568746F7262;
          goto LABEL_62;
        case 10:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v17 = 1953720691;
LABEL_51:
          unint64_t v16 = v17 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
          break;
        case 11:
          unint64_t v16 = 0x726150646E617267;
          uint64_t v19 = 7630437;
          goto LABEL_56;
        case 12:
          unint64_t v16 = 0x746F6D646E617267;
          goto LABEL_55;
        case 13:
          unint64_t v16 = 0x746166646E617267;
LABEL_55:
          uint64_t v19 = 7497064;
LABEL_56:
          unint64_t v15 = v19 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 14:
          unint64_t v15 = 0xE700000000000000;
          uint64_t v20 = 0x6C696843796DLL;
          goto LABEL_65;
        case 15:
          unint64_t v16 = 0x646C696863;
          break;
        case 16:
          unint64_t v15 = 0xE300000000000000;
          unint64_t v16 = 7237491;
          break;
        case 17:
          unint64_t v15 = 0xE800000000000000;
          uint64_t v21 = 0x746867756164;
          goto LABEL_69;
        case 18:
          unint64_t v15 = 0xE700000000000000;
          uint64_t v18 = 0x656E74726170;
LABEL_62:
          unint64_t v16 = v18 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
          break;
        case 19:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v16 = 1701210487;
          break;
        case 20:
          unint64_t v15 = 0xE700000000000000;
          uint64_t v20 = 0x6E6162737568;
LABEL_65:
          unint64_t v16 = v20 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
          break;
        case 21:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x646E65697266;
          break;
        case 22:
          unint64_t v15 = 0x80000001B2E8EA20;
          unint64_t v16 = 0xD000000000000010;
          break;
        case 23:
          unint64_t v15 = 0xE800000000000000;
          uint64_t v21 = 0x6B726F776F63;
LABEL_69:
          unint64_t v16 = v21 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
          break;
        case 24:
          unint64_t v15 = 0xE800000000000000;
          unint64_t v16 = 0x726F62686769656ELL;
          break;
        case 25:
          unint64_t v16 = 0x74616D6573756F68;
          unint64_t v15 = 0xE900000000000065;
          break;
        case 26:
          unint64_t v15 = 0xE600000000000000;
          unint64_t v16 = 0x696E6D756C61;
          break;
        case 27:
          uint64_t v22 = 1699772781;
          goto LABEL_76;
        case 28:
          unint64_t v16 = 0x676F44796DLL;
          break;
        case 29:
          uint64_t v22 = 1631811949;
LABEL_76:
          unint64_t v16 = v22 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
          break;
        default:
          break;
      }
      if (v8 == v16 && v7 == v15) {
        break;
      }
      char v24 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1B29DDB38(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1B29DDBD0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v21 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v19 = ~v3;
    uint64_t v20 = *(void *)(v2 + 48);
    uint64_t v5 = *a1;
    uint64_t v6 = a1[1];
    uint64_t v7 = a1[3];
    uint64_t v22 = a1[2];
    uint64_t v8 = a1[4];
    uint64_t v9 = a1[5];
    do
    {
      uint64_t v10 = (void *)(v20 + 48 * v4);
      uint64_t v12 = v10[2];
      uint64_t v11 = v10[3];
      uint64_t v13 = v10[4];
      uint64_t v14 = v10[5];
      BOOL v15 = *v10 == v5 && v10[1] == v6;
      if (v15 || (sub_1B2E837A8() & 1) != 0)
      {
        BOOL v16 = v12 == v22 && v11 == v7;
        if (v16 || (sub_1B2E837A8() & 1) != 0)
        {
          BOOL v17 = v13 == v8 && v14 == v9;
          if (v17 || (sub_1B2E837A8() & 1) != 0) {
            break;
          }
        }
      }
      unint64_t v4 = (v4 + 1) & v19;
    }
    while (((*(void *)(v21 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1B29DDD20(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B299B0FC(a1, a2);
  if ((v5 & 1) != 0 && *(unsigned __int8 *)(*(void *)(v2 + 48) + result) != v4)
  {
    uint64_t result = sub_1B29E5544(result);
    if (v8)
    {
      do
      {
        if (*(unsigned __int8 *)(v7 + result) == v6) {
          break;
        }
        uint64_t result = sub_1B29E5544(result);
      }
      while ((v9 & 1) != 0);
    }
  }
  return result;
}

void sub_1B29DDD90()
{
  sub_1B29C42D0();
  uint64_t v1 = -1 << *(unsigned char *)(v0 + 32);
  uint64_t v3 = v2 & ~v1;
  sub_1B29E55AC();
  if (v5)
  {
    sub_1B29C3CA0(0, v4);
    id v6 = *(id *)(*(void *)(v0 + 48) + 8 * v3);
    char v7 = sub_1B2E82F08();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v1;
      uint64_t v9 = (v3 + 1) & v8;
      sub_1B29E55AC();
      if (v10)
      {
        do
        {
          id v11 = *(id *)(*(void *)(v0 + 48) + 8 * v9);
          char v12 = sub_1B2E82F08();

          if (v12) {
            break;
          }
          uint64_t v9 = (v9 + 1) & v8;
          sub_1B29E55AC();
        }
        while ((v13 & 1) != 0);
      }
    }
  }
  sub_1B29A4118();
}

unint64_t sub_1B29DDE78(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x796C68746E6F6DLL;
        }
        else
        {
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x6C61756E6E61;
        }
      }
      else
      {
        unint64_t v7 = 0xE600000000000000;
        uint64_t v8 = 0x796C6B656577;
      }
      if (a1)
      {
        uint64_t v9 = a1 == 1 ? 0x796C68746E6F6DLL : 0x6C61756E6E61;
        unint64_t v10 = a1 == 1 ? 0xE700000000000000 : 0xE600000000000000;
      }
      else
      {
        unint64_t v10 = 0xE600000000000000;
        uint64_t v9 = 0x796C6B656577;
      }
      if (v8 == v9 && v7 == v10) {
        break;
      }
      char v12 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

void sub_1B29DDFF4()
{
  sub_1B299B720();
  uint64_t v5 = v0 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v0 + 32);
  unint64_t v8 = v7 & ~v6;
  if ((*(void *)(v0 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = v4;
    uint64_t v10 = v3;
    uint64_t v11 = v2;
    uint64_t v12 = v1;
    uint64_t v13 = ~v6;
    uint64_t v14 = *(void *)(v0 + 48);
    do
    {
      BOOL v15 = (void *)(v14 + 32 * v8);
      uint64_t v16 = v15[2];
      uint64_t v17 = v15[3];
      BOOL v18 = *v15 == v12 && v15[1] == v11;
      if (v18 || (sub_1B2E837A8() & 1) != 0)
      {
        BOOL v19 = v16 == v10 && v17 == v9;
        if (v19 || (sub_1B2E837A8() & 1) != 0) {
          break;
        }
      }
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v5 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  sub_1B299B738();
}

uint64_t sub_1B29DE0E0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B299B0FC(a1, a2);
  if ((v5 & 1) != 0 && *(void *)(*(void *)(v2 + 48) + 8 * result) != v4)
  {
    uint64_t result = sub_1B29E5544(result);
    if (v8)
    {
      do
      {
        if (*(void *)(v7 + 8 * result) == v6) {
          break;
        }
        uint64_t result = sub_1B29E5544(result);
      }
      while ((v9 & 1) != 0);
    }
  }
  return result;
}

unint64_t sub_1B29DE14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = *(void *)(v5 + 48);
    do
    {
      BOOL v15 = (void *)(v14 + 32 * v8);
      uint64_t v16 = v15[1];
      uint64_t v17 = v15[2];
      uint64_t v18 = v15[3];
      if (v16)
      {
        if (!a2) {
          goto LABEL_21;
        }
        BOOL v19 = *v15 == a1 && v16 == a2;
        if (!v19 && (sub_1B2E837A8() & 1) == 0) {
          goto LABEL_21;
        }
      }
      else if (a2)
      {
        goto LABEL_21;
      }
      if (v18)
      {
        if (a4)
        {
          BOOL v20 = v17 == a3 && v18 == a4;
          if (v20 || (sub_1B2E837A8() & 1) != 0) {
            return v8;
          }
        }
      }
      else if (!a4)
      {
        return v8;
      }
LABEL_21:
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_1B29DE26C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v6 = a4 & ~v5;
  if (((*(void *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return v6;
  }
  uint64_t v27 = ~v5;
  while (1)
  {
    uint64_t v8 = *(void *)(v29 + 48) + 24 * v6;
    char v9 = *(void **)v8;
    uint64_t v10 = *(void *)(v8 + 8);
    uint64_t v11 = *(void *)(v8 + 16);
    uint64_t v12 = sub_1B2E82378();
    uint64_t v14 = v13;
    if (v12 == sub_1B2E82378() && v14 == v15)
    {
      swift_bridgeObjectRetain();
      id v20 = a1;
      id v21 = v9;

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v17 = sub_1B2E837A8();
      swift_bridgeObjectRetain();
      id v18 = a1;
      id v19 = v9;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        swift_bridgeObjectRelease();

        goto LABEL_21;
      }
    }
    if (v11) {
      break;
    }
    if (!a3) {
      goto LABEL_24;
    }

LABEL_21:
    unint64_t v6 = (v6 + 1) & v27;
    if (((*(void *)(v28 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      return v6;
    }
  }
  if (!a3)
  {

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (v10 != a2 || v11 != a3)
  {
    char v23 = sub_1B2E837A8();
    swift_bridgeObjectRelease();

    if (v23) {
      return v6;
    }
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
LABEL_24:

  return v6;
}

uint64_t sub_1B29DE44C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v18 = a1[4];
  uint64_t v19 = a1[5];
  sub_1B29DAFFC();
  sub_1B299D404();
  if (v10)
  {
    __break(1u);
LABEL_12:
    uint64_t result = sub_1B2E83858();
    __break(1u);
    return result;
  }
  unint64_t v11 = v8;
  char v12 = v9;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7D9540);
  if (sub_1B29E55C0())
  {
    sub_1B29DAFFC();
    sub_1B29998B0();
    if (!v14) {
      goto LABEL_12;
    }
    unint64_t v11 = v13;
  }
  uint64_t v15 = *v2;
  if (v12)
  {
    uint64_t v16 = (void *)(v15[7] + 48 * v11);
    *uint64_t v16 = v5;
    v16[1] = v4;
    v16[2] = v7;
    v16[3] = v6;
    v16[4] = v18;
    v16[5] = v19;
    swift_release();
    return swift_release();
  }
  else
  {
    *(void *)&long long v20 = v5;
    *((void *)&v20 + 1) = v4;
    uint64_t v21 = v7;
    uint64_t v22 = v6;
    uint64_t v23 = v18;
    uint64_t v24 = v19;
    sub_1B29DFFD4(v11, a2, &v20, v15);
    return sub_1B29E52BC(a2);
  }
}

uint64_t sub_1B29DE5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B29DF094(a1, a2, a3, a4, &qword_1EB7D9868);
}

#error "1B29DE5F8: call analysis failed (funcsize=74)"

#error "1B29DE72C: call analysis failed (funcsize=71)"

_OWORD *sub_1B29DE808()
{
  sub_1B29C42D0();
  uint64_t v5 = sub_1B299F2E4(v3, v4);
  sub_1B29DB2B0(v5);
  sub_1B299D404();
  if (v6)
  {
    __break(1u);
LABEL_14:
    uint64_t result = (_OWORD *)sub_1B2E83858();
    __break(1u);
    return result;
  }
  sub_1B29E589C();
  sub_1B29A3EB4((uint64_t *)&unk_1E9C37AF0);
  if (sub_1B29E5384())
  {
    uint64_t v7 = sub_1B29E5718();
    sub_1B29DB2B0(v7);
    sub_1B29998B0();
    if (!v9) {
      goto LABEL_14;
    }
    uint64_t v2 = v8;
  }
  if (v1)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(*(void *)(*(void *)v0 + 56) + 32 * v2);
    sub_1B2999874();
    sub_1B29A4118();
    return sub_1B29E4FEC(v10, v11);
  }
  else
  {
    sub_1B29A4118();
    return sub_1B29E0160(v14, v15, v16, v17);
  }
}

void sub_1B29DE8E0()
{
  sub_1B29C42D0();
  sub_1B29E5510();
  sub_1B29DB318(v1, (void (*)(unsigned char *, uint64_t))sub_1B2AA5F70, (uint64_t (*)(uint64_t, uint64_t))sub_1B29DC824);
  sub_1B299D404();
  if (v5)
  {
    __break(1u);
LABEL_11:
    sub_1B2E83858();
    __break(1u);
    return;
  }
  sub_1B29E589C();
  sub_1B29A3EB4(&qword_1E9C3A6F0);
  if (sub_1B29E5384())
  {
    sub_1B29DB318(v1, (void (*)(unsigned char *, uint64_t))sub_1B2AA5F70, (uint64_t (*)(uint64_t, uint64_t))sub_1B29DC824);
    sub_1B29998B0();
    if (!v7) {
      goto LABEL_11;
    }
    unint64_t v4 = v6;
  }
  uint64_t v8 = *v2;
  if (v3)
  {
    uint64_t v9 = *(void *)(v8 + 56);
    swift_release();
    *(void *)(v9 + 8 * v4) = v0;
  }
  else
  {
    sub_1B29E04F8(v4, v1, v0, v8);
  }
  sub_1B29A4118();
}

#error "1B29DEA44: call analysis failed (funcsize=91)"

unint64_t sub_1B29DEB58()
{
  unint64_t result = qword_1EB7E3C50;
  if (!qword_1EB7E3C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3C50);
  }
  return result;
}

#error "1B29DEC08: call analysis failed (funcsize=80)"

void *sub_1B29DECF0()
{
  sub_1B29C42D0();
  uint64_t v3 = sub_1B299F2E4(v1, v2);
  sub_1B29DB2B0(v3);
  sub_1B299D404();
  if (v4)
  {
    __break(1u);
LABEL_13:
    unint64_t result = (void *)sub_1B2E83858();
    __break(1u);
    return result;
  }
  sub_1B29E56C4();
  sub_1B29A3EB4(&qword_1E9C37D00);
  if (sub_1B29E5384())
  {
    uint64_t v5 = sub_1B29E5718();
    sub_1B29DB2B0(v5);
    sub_1B29A4C34();
    if (!v6) {
      goto LABEL_13;
    }
  }
  if (v0)
  {
    sub_1B29A4118();
    return (void *)sub_1B29E5260(v7, v8);
  }
  else
  {
    sub_1B29E543C();
    sub_1B29A4118();
    return sub_1B29E02E0(v11, v12, v13, v14);
  }
}

unint64_t sub_1B29DEDBC(char a1, float a2)
{
  sub_1B29DB5BC(a1);
  sub_1B299D404();
  if (v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v8 = v5;
  char v9 = v6;
  sub_1B29A3EB4(&qword_1E9C3A6D8);
  unint64_t result = sub_1B29E55C0();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t result = sub_1B29DB5BC(a1);
  if ((v9 & 1) != (v11 & 1))
  {
LABEL_11:
    unint64_t result = sub_1B2E83858();
    __break(1u);
    return result;
  }
  unint64_t v8 = result;
LABEL_5:
  uint64_t v12 = *v2;
  if (v9)
  {
    *(float *)(v12[7] + 4 * v8) = a2;
  }
  else
  {
    return sub_1B29E0350(v8, a1, v12, a2);
  }
  return result;
}

void sub_1B29DEEA4()
{
  sub_1B29C42D0();
  sub_1B299F2E4(v5, v6);
  sub_1B29DB748();
  sub_1B299D404();
  if (v7)
  {
    __break(1u);
LABEL_11:
    sub_1B2E83858();
    __break(1u);
    return;
  }
  sub_1B29E56C4();
  sub_1B29A3EB4(&qword_1E9C38A30);
  if (sub_1B29E5384())
  {
    sub_1B29E5718();
    sub_1B29DB748();
    sub_1B29A4C34();
    if (!v9) {
      goto LABEL_11;
    }
    uint64_t v3 = v8;
  }
  if (v4)
  {
    uint64_t v10 = *(void *)(*(void *)v2 + 56);

    *(void *)(v10 + 8 * v3) = v0;
  }
  else
  {
    unint64_t v11 = sub_1B29E543C();
    sub_1B29E0394(v11, v12, v13, v14);
    sub_1B29E515C(v1);
  }
  sub_1B29A4118();
}

#error "1B29DEF98: call analysis failed (funcsize=73)"

uint64_t sub_1B29DF07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B29DF1CC(a1, a2, a3, a4, &unk_1EB7D9890);
}

uint64_t sub_1B29DF088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B29DF094(a1, a2, a3, a4, &unk_1EB7E3118);
}

#error "1B29DF0E4: call analysis failed (funcsize=73)"

uint64_t sub_1B29DF1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B29DF1CC(a1, a2, a3, a4, &unk_1EB7E3120);
}

#error "1B29DF21C: call analysis failed (funcsize=73)"

uint64_t sub_1B29DF2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B29DF094(a1, a2, a3, a4, &unk_1E9C38A40);
}

void sub_1B29DF304()
{
  sub_1B29C42D0();
  sub_1B299F2E4(v5, v6);
  sub_1B29DAFFC();
  sub_1B299D404();
  if (v7)
  {
    __break(1u);
LABEL_11:
    sub_1B2E83858();
    __break(1u);
    return;
  }
  sub_1B29E56C4();
  sub_1B29A3EB4(&qword_1EB7D9840);
  if (sub_1B29E5384())
  {
    sub_1B29E5718();
    sub_1B29DAFFC();
    sub_1B29A4C34();
    if (!v9) {
      goto LABEL_11;
    }
    uint64_t v3 = v8;
  }
  if (v4)
  {
    uint64_t v10 = (_OWORD *)(*(void *)(*(void *)v2 + 56) + 48 * v3);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    long long v11 = v0[1];
    _OWORD *v10 = *v0;
    v10[1] = v11;
    _OWORD v10[2] = v0[2];
  }
  else
  {
    unint64_t v12 = sub_1B29E543C();
    sub_1B29DFFD4(v12, v13, v14, v15);
    sub_1B29E52BC(v1);
  }
  sub_1B29A4118();
}

uint64_t sub_1B29DF3D4()
{
  sub_1B29C42D0();
  sub_1B29E5510();
  sub_1B29DB318(v0, (void (*)(unsigned char *, uint64_t))sub_1B2AA49C0, (uint64_t (*)(uint64_t, uint64_t))sub_1B29DC080);
  sub_1B299D404();
  if (v4)
  {
    __break(1u);
LABEL_14:
    uint64_t result = sub_1B2E83858();
    __break(1u);
    return result;
  }
  sub_1B29E589C();
  sub_1B29A3EB4(&qword_1EB7D9848);
  if (sub_1B29E5384())
  {
    sub_1B29DB318(v0, (void (*)(unsigned char *, uint64_t))sub_1B2AA49C0, (uint64_t (*)(uint64_t, uint64_t))sub_1B29DC080);
    sub_1B29998B0();
    if (!v6) {
      goto LABEL_14;
    }
    uint64_t v3 = v5;
  }
  if (v2)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(*(void *)(*(void *)v1 + 56) + 40 * v3);
    sub_1B2999874();
    sub_1B29A4118();
    return sub_1B29D1D20(v7, v8);
  }
  else
  {
    sub_1B29A4118();
    return sub_1B29E0440(v11, v12, v13, v14);
  }
}

#error "1B29DF554: call analysis failed (funcsize=74)"

uint64_t sub_1B29DF63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B29DF1CC(a1, a2, a3, a4, &unk_1E9C3A6D0);
}

void sub_1B29DF648()
{
  sub_1B29C42D0();
  sub_1B29E5510();
  sub_1B29DB684();
  sub_1B299D404();
  if (v5)
  {
    __break(1u);
LABEL_11:
    sub_1B2E83858();
    __break(1u);
    return;
  }
  sub_1B29E56C4();
  sub_1B29A3EB4(&qword_1E9C3A6C0);
  if (sub_1B29E5384())
  {
    sub_1B29DB684();
    sub_1B29A4C34();
    if (!v7) {
      goto LABEL_11;
    }
    unint64_t v3 = v6;
  }
  uint64_t v8 = *v2;
  if (v4)
  {
    uint64_t v9 = *(void *)(v8 + 56);

    *(void *)(v9 + 8 * v3) = v0;
  }
  else
  {
    sub_1B29E04F8(v3, v1, v0, v8);
  }
  sub_1B29A4118();
}

unint64_t sub_1B29DF6F8(char a1)
{
  sub_1B29E58DC();
  sub_1B29DB684();
  sub_1B299D404();
  if (v6)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v7 = v4;
  char v8 = v5;
  sub_1B29A3EB4(&qword_1E9C37AE0);
  unint64_t result = sub_1B29E55C0();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t result = sub_1B29DB684();
  if ((v8 & 1) != (v10 & 1))
  {
LABEL_11:
    unint64_t result = sub_1B2E83858();
    __break(1u);
    return result;
  }
  unint64_t v7 = result;
LABEL_5:
  unint64_t v11 = *v1;
  if (v8)
  {
    *(double *)(v11[7] + 8 * v7) = v2;
  }
  else
  {
    return sub_1B29E0524(v7, a1, v11, v2);
  }
  return result;
}

#error "1B29DF82C: call analysis failed (funcsize=76)"

#error "1B29DF980: call analysis failed (funcsize=89)"

uint64_t sub_1B29DFA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B29DF1CC(a1, a2, a3, a4, &unk_1E9C37B08);
}

void sub_1B29DFA94()
{
  sub_1B29C42D0();
  sub_1B29E5944();
  sub_1B29DB748();
  sub_1B299D404();
  if (v5)
  {
    __break(1u);
LABEL_12:
    sub_1B2E83858();
    __break(1u);
    return;
  }
  sub_1B29E56C4();
  sub_1B29A3EB4(&qword_1E9C37AE8);
  if (sub_1B29E5384())
  {
    sub_1B29DB748();
    sub_1B29A4C34();
    if (!v7) {
      goto LABEL_12;
    }
    unint64_t v3 = v6;
  }
  if (v4)
  {
    sub_1B29A4118();
    sub_1B29E4E20(v8, v9);
  }
  else
  {
    sub_1B29E05F8(v3, v0, v1, *v2);
    sub_1B29E515C((uint64_t)v0);
    sub_1B29A4118();
  }
}

void sub_1B29DFB70()
{
  sub_1B29C42D0();
  sub_1B299F2E4(v5, v6);
  sub_1B29DAEC8();
  sub_1B299D404();
  if (v7)
  {
    __break(1u);
LABEL_11:
    sub_1B2E83858();
    __break(1u);
    return;
  }
  sub_1B29E56C4();
  sub_1B29A3EB4(&qword_1E9C3A6B8);
  if (sub_1B29E5384())
  {
    sub_1B29E5718();
    sub_1B29DAEC8();
    sub_1B29A4C34();
    if (!v9) {
      goto LABEL_11;
    }
    uint64_t v3 = v8;
  }
  if (v4)
  {
    uint64_t v10 = *(void *)(*(void *)v2 + 56);
    swift_bridgeObjectRelease();
    *(void *)(v10 + 8 * v3) = v0;
  }
  else
  {
    unint64_t v11 = sub_1B29E543C();
    sub_1B29DFF94(v11, v12, v13, v14);
    sub_1B29E52BC(v1);
  }
  sub_1B29A4118();
}

uint64_t sub_1B29DFC18()
{
  sub_1B299B720();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  sub_1B29DB87C();
  sub_1B299D404();
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v14 = v11;
  char v15 = v12;
  sub_1B29A3EB4(&qword_1E9C3A6B0);
  if ((sub_1B2E83398() & 1) == 0) {
    goto LABEL_5;
  }
  sub_1B29DB87C();
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_13:
    uint64_t result = sub_1B2E83858();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  if (v15)
  {
    sub_1B299B738();
    return sub_1B29E4ED8(v18, v19);
  }
  else
  {
    sub_1B29E0674(v14, v8, v6, v4, v2, v10, *v0);
    swift_bridgeObjectRetain();
    sub_1B299B738();
    return swift_bridgeObjectRetain();
  }
}

void sub_1B29DFD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B29E58DC();
  sub_1B29DB920(v10, v11, v12, v13);
  sub_1B299D404();
  if (v16)
  {
    __break(1u);
LABEL_12:
    sub_1B2E83858();
    __break(1u);
    return;
  }
  unint64_t v17 = v14;
  char v18 = v15;
  sub_1B29A3EB4(&qword_1EB7D9B10);
  if (sub_1B29E58A8())
  {
    sub_1B29DB920(a1, a2, a3, a4);
    sub_1B29E5500();
    if (!v20) {
      goto LABEL_12;
    }
    unint64_t v17 = v19;
  }
  uint64_t v21 = *v4;
  if (v18)
  {
    *(double *)(v21[7] + 8 * v17) = v5;
    sub_1B29E5528();
  }
  else
  {
    sub_1B29E06E4(v17, a1, a2, a3, a4, v21, v5);
    swift_bridgeObjectRetain();
    sub_1B29E5528();
    swift_bridgeObjectRetain();
  }
}

void sub_1B29DFE6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_1B29DBA18();
  sub_1B299D404();
  if (v10)
  {
    __break(1u);
LABEL_12:
    sub_1B2E83858();
    __break(1u);
    return;
  }
  unint64_t v11 = v8;
  char v12 = v9;
  sub_1B29A3EB4(&qword_1EB7E6950);
  if (sub_1B29E53A4())
  {
    sub_1B29DBA18();
    sub_1B29E5500();
    if (!v14) {
      goto LABEL_12;
    }
    unint64_t v11 = v13;
  }
  char v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7];

    *(void *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_1B29E0730(v11, (uint64_t)a2, a3, a4, a1, v15);
    swift_bridgeObjectRetain();
    id v17 = a2;
  }
}

void sub_1B29DFF94(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4 = sub_1B29E53F8(a1, a2, a3, a4);
  uint64_t v7 = v6 + 40 * v4;
  long long v9 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v9;
  *(_WORD *)(v7 + 32) = *(_WORD *)(v8 + 32);
  *(void *)(*(void *)(v5 + 56) + 8 * v4) = v10;
  uint64_t v11 = *(void *)(v5 + 16);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    sub_1B29E5710(v5, v13);
  }
}

unint64_t sub_1B29DFFD4(unint64_t result, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = a4[6] + 40 * result;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(unsigned char *)(v4 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = (_OWORD *)(a4[7] + 48 * result);
  long long v7 = a3[1];
  *uint64_t v6 = *a3;
  v6[1] = v7;
  uint64_t v6[2] = a3[2];
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

void *sub_1B29E0040(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = sub_1B29A0450(a1, a2, a3, a4, a5);
  uint64_t result = memcpy((void *)(v7 + 88 * v6), v8, 0x58uLL);
  uint64_t v10 = *(void *)(a5 + 16);
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    *(void *)(a5 + 16) = v12;
  }
  return result;
}

void sub_1B29E0090(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = a6[6] + 24 * a1;
  *(void *)uint64_t v6 = a2;
  *(void *)(v6 + 8) = a3;
  *(unsigned char *)(v6 + 16) = a4;
  *(void *)(a6[7] + 8 * a1) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    sub_1B29E59CC((uint64_t)a6, v9);
  }
}

unint64_t sub_1B29E00DC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result = sub_1B29A0450(a1, a2, a3, a4, a5);
  uint64_t v8 = v7 + 40 * result;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  uint64_t v11 = *(void *)(v6 + 16);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    *(void *)(v6 + 16) = v13;
  }
  return result;
}

unint64_t sub_1B29E0118(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  long long v5 = (void *)(a5[6] + 16 * result);
  *long long v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

_OWORD *sub_1B29E0160(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  unint64_t result = sub_1B29E4FEC(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_1B29E01C8(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_1B29E020C(unint64_t result, __int16 a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(_WORD *)(a4[6] + 2 * result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_1B29E0250(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A5A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1B29E02B8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6 = sub_1B29E557C(a1, a2, a3, a4, a5, a6);
  uint64_t v9 = (void *)(v8 + 16 * v6);
  *uint64_t v9 = v10;
  v9[1] = v11;
  uint64_t v12 = *(void *)(v7 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    sub_1B29E59CC(v7, v14);
  }
}

void *sub_1B29E02E0(unint64_t a1, uint64_t a2, void *__src, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  unint64_t result = memcpy((void *)(a4[7] + 104 * a1), __src, 0x61uLL);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_1B29E0350(unint64_t result, char a2, void *a3, float a4)
{
  a3[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a2;
  *(float *)(a3[7] + 4 * result) = a4;
  uint64_t v4 = a3[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a3[2] = v6;
  }
  return result;
}

void sub_1B29E0394(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4 = sub_1B29E53F8(a1, a2, a3, a4);
  BOOL v7 = (_OWORD *)(v6 + 48 * v4);
  long long v9 = v8[1];
  *BOOL v7 = *v8;
  v7[1] = v9;
  v7[2] = v8[2];
  *(void *)(*(void *)(v5 + 56) + 8 * v4) = v10;
  uint64_t v11 = *(void *)(v5 + 16);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    sub_1B29E5710(v5, v13);
  }
}

uint64_t sub_1B29E03D4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1B29E5204(a4, a5[7] + 8 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1B29E0440(unint64_t a1, char a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t result = sub_1B29D1D20(a3, a4[7] + 40 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void *sub_1B29E04AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = sub_1B29A0450(a1, a2, a3, a4, a5);
  uint64_t result = memcpy((void *)(v7 + 112 * v6), v8, 0x70uLL);
  uint64_t v10 = *(void *)(a5 + 16);
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    *(void *)(a5 + 16) = v12;
  }
  return result;
}

void sub_1B29E04F8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4 = sub_1B29E53F8(a1, a2, a3, a4);
  *(unsigned char *)(v7 + v4) = v6;
  *(void *)(*(void *)(v5 + 56) + 8 * v4) = v8;
  uint64_t v9 = *(void *)(v5 + 16);
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    sub_1B29E5710(v5, v11);
  }
}

unint64_t sub_1B29E0524(unint64_t result, char a2, void *a3, double a4)
{
  a3[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a2;
  *(double *)(a3[7] + 8 * result) = a4;
  uint64_t v4 = a3[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a3[2] = v6;
  }
  return result;
}

void sub_1B29E0568(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4 = sub_1B29E53F8(a1, a2, a3, a4);
  uint64_t v7 = (void *)(v6 + 16 * v4);
  *uint64_t v7 = v8;
  v7[1] = v9;
  *(void *)(*(void *)(v5 + 56) + 8 * v4) = v10;
  uint64_t v11 = *(void *)(v5 + 16);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    sub_1B29E5710(v5, v13);
  }
}

void sub_1B29E0598(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6 = sub_1B29E557C(a1, a2, a3, a4, a5, a6);
  uint64_t v9 = v8 + 24 * v6;
  *(void *)uint64_t v9 = v10;
  *(void *)(v9 + 8) = v11;
  *(unsigned char *)(v9 + 16) = v12 & 1;
  uint64_t v13 = *(void *)(v7 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    sub_1B29E59CC(v7, v15);
  }
}

unint64_t sub_1B29E05D0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result = sub_1B29A0450(a1, a2, a3, a4, a5);
  *(void *)(v8 + 8 * result) = v7;
  uint64_t v9 = *(void *)(v6 + 16);
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    *(void *)(v6 + 16) = v11;
  }
  return result;
}

uint64_t sub_1B29E05F8(unint64_t a1, _OWORD *a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = (_OWORD *)(a4[6] + 48 * a1);
  long long v6 = a2[1];
  *uint64_t v5 = *a2;
  v5[1] = v6;
  v5[2] = a2[2];
  uint64_t result = sub_1B29E4E7C(a3, a4[7] + 48 * a1);
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_1B29E0674(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a7[6] + 32 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  v8[2] = a4;
  v8[3] = a5;
  uint64_t result = sub_1B29E4F34(a6, a7[7] + 8 * a1);
  uint64_t v10 = a7[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a7[2] = v12;
  }
  return result;
}

unint64_t sub_1B29E06E4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, double a7)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = (void *)(a6[6] + 32 * result);
  *uint64_t v7 = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  *(double *)(a6[7] + 8 * result) = a7;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

unint64_t sub_1B29E0730(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  long long v6 = (void *)(a6[6] + 24 * result);
  *long long v6 = a2;
  v6[1] = a3;
  uint64_t v6[2] = a4;
  *(void *)(a6[7] + 8 * result) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

uint64_t (*sub_1B29E0780(void *a1, uint64_t a2, uint64_t a3))()
{
  long long v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1B29E1298(v6);
  v6[10] = sub_1B29E0AB4(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1B29E082C;
}

uint64_t (*sub_1B29E0830(void *a1, uint64_t a2))()
{
  unint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1B29E12C8(v4);
  v4[9] = sub_1B29E0CBC((uint64_t)(v4 + 4), a2);
  return sub_1B29E08C0;
}

uint64_t (*sub_1B29E08C4(void *a1, __int16 a2))()
{
  unint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1B29E1298(v4);
  v4[9] = sub_1B29E0EE0((uint64_t)(v4 + 4), a2);
  return sub_1B29E08C0;
}

void sub_1B29E0954(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)a1 + 64);
  sub_1B29E56AC();
  v3();
  uint64_t v4 = sub_1B29E53C4();
  v2(v4);

  free(v1);
}

uint64_t (*sub_1B29E09A4(void *a1, uint64_t a2, uint64_t a3))()
{
  long long v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1B29E1298(v6);
  v6[10] = sub_1B29E10C4(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1B29E082C;
}

void sub_1B29E0A50(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)a1 + 72);
  sub_1B29E56AC();
  v3();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1B29E53C4();
  v2(v4);

  free(v1);
}

#error "1B29E0B34: call analysis failed (funcsize=104)"

void sub_1B29E0C64(uint64_t *a1)
{
  uint64_t v1 = (uint64_t *)*a1;
  sub_1B29E1450(*a1, *(unsigned char *)(*a1 + 33), *(uint64_t **)(*a1 + 56), *(void *)(*a1 + 64), *(void *)(*a1 + 40), *(void *)(*a1 + 48));
  sub_1B29E4D3C(*v1, v1[1]);

  free(v1);
}

unint64_t (*sub_1B29E0CBC(uint64_t a1, uint64_t a2))(unint64_t result)
{
  uint64_t v3 = v2;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1B29DB318(a2, (void (*)(unsigned char *, uint64_t))sub_1B2AA5F70, (uint64_t (*)(uint64_t, uint64_t))sub_1B29DC824);
  *(unsigned char *)(a1 + 25) = v8 & 1;
  if (__OFADD__(*(void *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v9 = v7;
  char v10 = v8;
  sub_1B29A3EB4(&qword_1E9C3A5F0);
  if (sub_1B2E83398())
  {
    uint64_t v11 = sub_1B29DB318(a2, (void (*)(unsigned char *, uint64_t))sub_1B2AA5F70, (uint64_t (*)(uint64_t, uint64_t))sub_1B29DC824);
    if ((v10 & 1) == (v12 & 1))
    {
      uint64_t v9 = v11;
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (unint64_t (*)(unint64_t))sub_1B2E83858();
    __break(1u);
    return result;
  }
LABEL_5:
  *(void *)(a1 + 16) = v9;
  if (v10) {
    uint64_t v13 = *(void *)(*(void *)(*v3 + 56) + 8 * v9);
  }
  else {
    uint64_t v13 = 0;
  }
  *(void *)a1 = v13;
  return sub_1B29E0E1C;
}

unint64_t sub_1B29E0E1C(unint64_t result)
{
  uint64_t v1 = *(void *)result;
  if (*(void *)result)
  {
    uint64_t v2 = **(void ***)(result + 8);
    if (*(unsigned char *)(result + 25))
    {
      *(void *)(v2[7] + 8 * *(void *)(result + 16)) = v1;
    }
    else
    {
      char v3 = *(unsigned char *)(result + 24);
      unint64_t v4 = *(void *)(result + 16);
      return sub_1B29E01C8(v4, v3, v1, v2);
    }
  }
  else if (*(unsigned char *)(result + 25))
  {
    sub_1B29A3EB4(&qword_1E9C3A5D8);
    sub_1B29DEB58();
    sub_1B2999874();
    return sub_1B2E833B8();
  }
  return result;
}

unint64_t (*sub_1B29E0EE0(uint64_t a1, __int16 a2))(unint64_t result)
{
  char v3 = v2;
  *(void *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 24) = a2;
  uint64_t v6 = *v2;
  unint64_t v7 = sub_1B29DB390(a2);
  *(unsigned char *)(a1 + 26) = v8 & 1;
  if (__OFADD__(*(void *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v9 = v7;
  char v10 = v8;
  sub_1B29A3EB4(&qword_1E9C3A5E0);
  if (sub_1B2E83398())
  {
    unint64_t v11 = sub_1B29DB390(a2);
    if ((v10 & 1) == (v12 & 1))
    {
      unint64_t v9 = v11;
      goto LABEL_5;
    }
LABEL_10:
    sub_1B29A3EB4(&qword_1E9C3A5B8);
    uint64_t result = (unint64_t (*)(unint64_t))sub_1B2E83858();
    __break(1u);
    return result;
  }
LABEL_5:
  *(void *)(a1 + 16) = v9;
  if (v10) {
    uint64_t v13 = *(void *)(*(void *)(*v3 + 56) + 8 * v9);
  }
  else {
    uint64_t v13 = 0;
  }
  *(void *)a1 = v13;
  return sub_1B29E0FF4;
}

unint64_t sub_1B29E0FF4(unint64_t result)
{
  uint64_t v1 = *(void *)result;
  if (*(void *)result)
  {
    uint64_t v2 = **(void ***)(result + 8);
    if (*(unsigned char *)(result + 26))
    {
      *(void *)(v2[7] + 8 * *(void *)(result + 16)) = v1;
    }
    else
    {
      __int16 v3 = *(_WORD *)(result + 24);
      unint64_t v4 = *(void *)(result + 16);
      return sub_1B29E020C(v4, v3, v1, v2);
    }
  }
  else if (*(unsigned char *)(result + 26))
  {
    sub_1B29A3EB4(&qword_1E9C3A5B8);
    sub_1B29A3EB4(&qword_1E9C3A5C0);
    sub_1B29DAD70();
    sub_1B2999874();
    return sub_1B2E833B8();
  }
  return result;
}

#error "1B29E1144: call analysis failed (funcsize=93)"

void sub_1B29E1248(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1B29E156C(*a1, *((unsigned char *)*a1 + 40), (void **)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t (*sub_1B29E1298(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1B29E5374;
}

uint64_t (*sub_1B29E12C8(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1B29E12F8;
}

uint64_t sub_1B29E12F8(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_1B29E1304(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v12 = a1[5];
  uint64_t v13 = a1[6];
  uint64_t v14 = a1[7];
  uint64_t v16 = a1[8];
  uint64_t v15 = a1[9];
  uint64_t v17 = a1[10];
  if (v8)
  {
    uint64_t v19 = *a1;
    __src[0] = *a1;
    __src[1] = v8;
    void __src[2] = v9;
    __src[3] = v10;
    __src[4] = v11;
    __src[5] = v12;
    __src[6] = v13;
    __src[7] = v14;
    __src[8] = v16;
    __src[9] = v15;
    __src[10] = v17;
    if (a2)
    {
      memcpy((void *)(*(void *)(*a3 + 56) + 88 * a4), __src, 0x58uLL);
    }
    else
    {
      sub_1B29E0040(a4, a5, a6, (uint64_t)__src, *a3);
      swift_bridgeObjectRetain();
    }
    goto LABEL_7;
  }
  if (a2)
  {
    uint64_t v19 = *a1;
    swift_arrayDestroy();
    sub_1B2E833B8();
LABEL_7:
    uint64_t v7 = v19;
  }
  return sub_1B29E52F4(v7, v8);
}

uint64_t sub_1B29E1450(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  char v10 = *(unsigned char *)(a1 + 32);
  if (v6)
  {
    *(void *)&long long v14 = *(void *)a1;
    *((void *)&v14 + 1) = v6;
    *(void *)&long long v15 = v8;
    *((void *)&v15 + 1) = v9;
    char v16 = v10;
    if (a2)
    {
      uint64_t v11 = *(void *)(*a3 + 56) + 40 * a4;
      long long v12 = v15;
      *(_OWORD *)uint64_t v11 = v14;
      *(_OWORD *)(v11 + 16) = v12;
      *(unsigned char *)(v11 + 32) = v16;
    }
    else
    {
      sub_1B29E00DC(a4, a5, a6, (uint64_t)&v14, *a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1B2E833B8();
  }

  return sub_1B29E4D80(v7, v6);
}

uint64_t sub_1B29E156C(uint64_t *a1, char a2, void **a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)((*a3)[7] + 8 * a4) = v6;
    }
    else
    {
      sub_1B29E0118(a4, a5, a6, v6, *a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1B29A3EB4(&qword_1E9C3A5B0);
    sub_1B2E833B8();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B29E1640(uint64_t a1)
{
  sub_1B29A3EB4(&qword_1E9C3A6E0);
  uint64_t result = sub_1B2E83468();
  __int16 v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    char v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t result = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(a1 + 56) + 88 * i + 32);
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    char v18 = (void *)(v3[6] + 16 * i);
    *char v18 = v17;
    v18[1] = result;
    *(unsigned char *)(v3[7] + i) = (_BYTE)v16;
    uint64_t v19 = v3[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v21;
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1B29E17F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B29E1860(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B29A3EB4(a3);
  sub_1B2999864();
  sub_1B29A15F0();
  v4();
  return a2;
}

uint64_t sub_1B29E18B8(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C3A598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B29E1918(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 && a3 != 2)
  {
    if (a3 != 1) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unint64_t sub_1B29E1980()
{
  unint64_t result = qword_1E9C3A618;
  if (!qword_1E9C3A618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A618);
  }
  return result;
}

unint64_t sub_1B29E19CC()
{
  unint64_t result = qword_1E9C3A628;
  if (!qword_1E9C3A628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A628);
  }
  return result;
}

uint64_t sub_1B29E1A18(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return sub_1B29E1A88(a2, a3);
  }
  return result;
}

uint64_t sub_1B29E1A88(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B29E1ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29E1C0C(a1, a2, a3, (uint64_t (*)(void))sub_1B29E1AF8, (uint64_t (*)(void))sub_1B29E1B44);
}

unint64_t sub_1B29E1AF8()
{
  unint64_t result = qword_1E9C3A648;
  if (!qword_1E9C3A648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A648);
  }
  return result;
}

unint64_t sub_1B29E1B44()
{
  unint64_t result = qword_1E9C3A650;
  if (!qword_1E9C3A650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A650);
  }
  return result;
}

unint64_t sub_1B29E1B94()
{
  unint64_t result = qword_1E9C3A658;
  if (!qword_1E9C3A658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A658);
  }
  return result;
}

uint64_t sub_1B29E1BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29E1C0C(a1, a2, a3, (uint64_t (*)(void))sub_1B29E1C48, (uint64_t (*)(void))sub_1B29E1C94);
}

uint64_t sub_1B29E1C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B29E1C48()
{
  unint64_t result = qword_1E9C3A660;
  if (!qword_1E9C3A660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A660);
  }
  return result;
}

unint64_t sub_1B29E1C94()
{
  unint64_t result = qword_1E9C3A668;
  if (!qword_1E9C3A668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A668);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AssetRegistryAssetLocalAvailabilityInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for AssetRegistryAsset(0);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = sub_1B2E80498();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = *(int *)(v7 + 20);
      unint64_t v11 = (char *)a1 + v10;
      long long v12 = (char *)a2 + v10;
      uint64_t v13 = *(uint64_t *)((char *)a2 + v10);
      uint64_t v14 = *(uint64_t *)((char *)a2 + v10 + 8);
      uint64_t v15 = *(uint64_t *)((char *)a2 + v10 + 16);
      char v16 = *((unsigned char *)a2 + v10 + 26);
      __int16 v17 = *(_WORD *)((char *)a2 + v10 + 24);
      sub_1B29DABBC(v13, v14, v15, v17);
      *(void *)unint64_t v11 = v13;
      *((void *)v11 + 1) = v14;
      *((void *)v11 + 2) = v15;
      v11[26] = v16;
      *((_WORD *)v11 + 12) = v17;
      uint64_t v18 = *((void *)v12 + 5);
      *((void *)v11 + 4) = *((void *)v12 + 4);
      *((void *)v11 + 5) = v18;
      uint64_t v19 = *(int *)(v7 + 24);
      BOOL v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = *(uint64_t *)((char *)a2 + v19);
      swift_bridgeObjectRetain();
      if (v22)
      {
        *(void *)BOOL v20 = v22;
        uint64_t v23 = *((void *)v21 + 2);
        swift_bridgeObjectRetain();
        if (v23)
        {
          *((void *)v20 + 1) = *((void *)v21 + 1);
          *((void *)v20 + 2) = v23;
          *((_DWORD *)v20 + 6) = *((_DWORD *)v21 + 6);
          uint64_t v24 = *((void *)v21 + 5);
          *((void *)v20 + 4) = *((void *)v21 + 4);
          *((void *)v20 + 5) = v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v26 = *(_OWORD *)(v21 + 24);
          *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
          *(_OWORD *)(v20 + 24) = v26;
          *((void *)v20 + 5) = *((void *)v21 + 5);
        }
      }
      else
      {
        long long v25 = *((_OWORD *)v21 + 1);
        *(_OWORD *)BOOL v20 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = v25;
        *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      }
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for AssetRegistryAssetLocalAvailabilityInfo(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetRegistryAsset(0);
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_1B2E80498();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    sub_1B29DAB98(*(void *)(a1 + *(int *)(v2 + 20)), *(void *)(a1 + *(int *)(v2 + 20) + 8), *(void *)(a1 + *(int *)(v2 + 20) + 16), *(_WORD *)(a1 + *(int *)(v2 + 20) + 24));
    swift_bridgeObjectRelease();
    int v5 = (uint64_t *)(a1 + *(int *)(v2 + 24));
    uint64_t result = *v5;
    if (*v5)
    {
      swift_bridgeObjectRelease();
      uint64_t result = v5[2];
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

char *initializeWithCopy for AssetRegistryAssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AssetRegistryAsset(0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1B2E80498();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = *(void *)&a2[v8];
    uint64_t v12 = *(void *)&a2[v8 + 8];
    uint64_t v13 = *(void *)&a2[v8 + 16];
    char v14 = a2[v8 + 26];
    __int16 v15 = *(_WORD *)&a2[v8 + 24];
    sub_1B29DABBC(v11, v12, v13, v15);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    *((void *)v9 + 2) = v13;
    v9[26] = v14;
    *((_WORD *)v9 + 12) = v15;
    uint64_t v16 = *((void *)v10 + 5);
    *((void *)v9 + 4) = *((void *)v10 + 4);
    *((void *)v9 + 5) = v16;
    uint64_t v17 = *(int *)(v6 + 24);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = *(void *)&a2[v17];
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(void *)uint64_t v18 = v20;
      uint64_t v21 = *((void *)v19 + 2);
      swift_bridgeObjectRetain();
      if (v21)
      {
        *((void *)v18 + 1) = *((void *)v19 + 1);
        *((void *)v18 + 2) = v21;
        *((_DWORD *)v18 + 6) = *((_DWORD *)v19 + 6);
        uint64_t v22 = *((void *)v19 + 5);
        *((void *)v18 + 4) = *((void *)v19 + 4);
        *((void *)v18 + 5) = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v24 = *(_OWORD *)(v19 + 24);
        *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
        *(_OWORD *)(v18 + 24) = v24;
        *((void *)v18 + 5) = *((void *)v19 + 5);
      }
    }
    else
    {
      long long v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    }
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for AssetRegistryAssetLocalAvailabilityInfo(char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AssetRegistryAsset(0);
  int v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1B29E25E4((uint64_t)a1, (void (*)(void))type metadata accessor for AssetRegistryAsset);
      goto LABEL_8;
    }
    uint64_t v23 = sub_1B2E80498();
    (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 24))(a1, a2, v23);
    uint64_t v24 = *(int *)(v6 + 20);
    long long v25 = &a1[v24];
    long long v26 = &a2[v24];
    uint64_t v27 = *(void *)&a2[v24];
    uint64_t v28 = *(void *)&a2[v24 + 8];
    uint64_t v29 = *(void *)&a2[v24 + 16];
    char v30 = a2[v24 + 26];
    __int16 v31 = *(_WORD *)&a2[v24 + 24];
    sub_1B29DABBC(v27, v28, v29, v31);
    uint64_t v32 = *(void *)v25;
    uint64_t v33 = *((void *)v25 + 1);
    uint64_t v34 = *((void *)v25 + 2);
    char v35 = *((_WORD *)v25 + 12);
    *(void *)long long v25 = v27;
    *((void *)v25 + 1) = v28;
    *((void *)v25 + 2) = v29;
    *((_WORD *)v25 + 12) = v31;
    v25[26] = v30;
    sub_1B29DAB98(v32, v33, v34, v35);
    *((void *)v25 + 4) = *((void *)v26 + 4);
    *((void *)v25 + 5) = *((void *)v26 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v36 = *(int *)(v6 + 24);
    uint64_t v37 = &a1[v36];
    __int16 v38 = &a2[v36];
    uint64_t v39 = *(void *)&a2[v36];
    if (*(void *)&a1[v36])
    {
      if (!v39)
      {
        sub_1B29E25B4((uint64_t)&a1[v36]);
        long long v53 = *((_OWORD *)v38 + 1);
        long long v52 = *((_OWORD *)v38 + 2);
        *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        *((_OWORD *)v37 + 1) = v53;
        *((_OWORD *)v37 + 2) = v52;
        return a1;
      }
      *(void *)uint64_t v37 = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v40 = v37 + 8;
      uint64_t v41 = v38 + 8;
      uint64_t v42 = *((void *)v38 + 2);
      if (*((void *)v37 + 2))
      {
        if (v42)
        {
          *((void *)v37 + 1) = *((void *)v38 + 1);
          *((void *)v37 + 2) = *((void *)v38 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *((_DWORD *)v37 + 6) = *((_DWORD *)v38 + 6);
          *((void *)v37 + 4) = *((void *)v38 + 4);
          *((void *)v37 + 5) = *((void *)v38 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1B29E2560((uint64_t)(v37 + 8));
          uint64_t v56 = *((void *)v38 + 5);
          long long v57 = *(_OWORD *)(v38 + 24);
          *(_OWORD *)uint64_t v40 = *v41;
          *(_OWORD *)(v37 + 24) = v57;
          *((void *)v37 + 5) = v56;
        }
        return a1;
      }
      if (v42)
      {
LABEL_23:
        *((void *)v37 + 1) = *((void *)v38 + 1);
        *((void *)v37 + 2) = *((void *)v38 + 2);
        *((_DWORD *)v37 + 6) = *((_DWORD *)v38 + 6);
        *((void *)v37 + 4) = *((void *)v38 + 4);
        *((void *)v37 + 5) = *((void *)v38 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return a1;
      }
      long long v49 = *v41;
      long long v50 = *(_OWORD *)(v38 + 24);
      uint64_t v51 = *((void *)v38 + 5);
    }
    else
    {
      if (!v39)
      {
        long long v54 = *(_OWORD *)v38;
        long long v55 = *((_OWORD *)v38 + 2);
        *((_OWORD *)v37 + 1) = *((_OWORD *)v38 + 1);
        *((_OWORD *)v37 + 2) = v55;
        *(_OWORD *)uint64_t v37 = v54;
        return a1;
      }
      *(void *)uint64_t v37 = v39;
      uint64_t v40 = v37 + 8;
      uint64_t v48 = *((void *)v38 + 2);
      swift_bridgeObjectRetain();
      if (v48) {
        goto LABEL_23;
      }
      long long v49 = *(_OWORD *)(v38 + 8);
      long long v50 = *(_OWORD *)(v38 + 24);
      uint64_t v51 = *((void *)v38 + 5);
    }
    *((void *)v40 + 4) = v51;
    *(_OWORD *)uint64_t v40 = v49;
    *((_OWORD *)v40 + 1) = v50;
    return a1;
  }
  if (v8)
  {
LABEL_8:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_1B2E80498();
  (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  uint64_t v10 = *(int *)(v6 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *(void *)&a2[v10];
  uint64_t v14 = *(void *)&a2[v10 + 8];
  uint64_t v15 = *(void *)&a2[v10 + 16];
  char v16 = a2[v10 + 26];
  __int16 v17 = *(_WORD *)&a2[v10 + 24];
  sub_1B29DABBC(v13, v14, v15, v17);
  *(void *)uint64_t v11 = v13;
  *((void *)v11 + 1) = v14;
  *((void *)v11 + 2) = v15;
  v11[26] = v16;
  *((_WORD *)v11 + 12) = v17;
  *((void *)v11 + 4) = *((void *)v12 + 4);
  *((void *)v11 + 5) = *((void *)v12 + 5);
  uint64_t v18 = *(int *)(v6 + 24);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void *)&a2[v18];
  swift_bridgeObjectRetain();
  if (v21)
  {
    *(void *)uint64_t v19 = v21;
    uint64_t v22 = *((void *)v20 + 2);
    swift_bridgeObjectRetain();
    if (v22)
    {
      *((void *)v19 + 1) = *((void *)v20 + 1);
      *((void *)v19 + 2) = *((void *)v20 + 2);
      *((_DWORD *)v19 + 6) = *((_DWORD *)v20 + 6);
      *((void *)v19 + 4) = *((void *)v20 + 4);
      *((void *)v19 + 5) = *((void *)v20 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v45 = *(_OWORD *)(v20 + 8);
      long long v46 = *(_OWORD *)(v20 + 24);
      *((void *)v19 + 5) = *((void *)v20 + 5);
      *(_OWORD *)(v19 + 8) = v45;
      *(_OWORD *)(v19 + 24) = v46;
    }
  }
  else
  {
    long long v43 = *(_OWORD *)v20;
    long long v44 = *((_OWORD *)v20 + 2);
    *((_OWORD *)v19 + 1) = *((_OWORD *)v20 + 1);
    *((_OWORD *)v19 + 2) = v44;
    *(_OWORD *)uint64_t v19 = v43;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1B29E2560(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B29E25B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B29E25E4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

char *initializeWithTake for AssetRegistryAssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AssetRegistryAsset(0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1B2E80498();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    long long v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    uint64_t v12 = *(int *)(v6 + 24);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for AssetRegistryAssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AssetRegistryAsset(0);
  int v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v19 = sub_1B2E80498();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(a1, a2, v19);
      uint64_t v20 = *(int *)(v6 + 20);
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = *(void *)&a2[v20 + 16];
      char v24 = v22[26];
      __int16 v25 = *((_WORD *)v22 + 12);
      uint64_t v26 = *(void *)v21;
      uint64_t v27 = *((void *)v21 + 1);
      uint64_t v28 = *((void *)v21 + 2);
      char v29 = *((_WORD *)v21 + 12);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *((void *)v21 + 2) = v23;
      *((_WORD *)v21 + 12) = v25;
      v21[26] = v24;
      sub_1B29DAB98(v26, v27, v28, v29);
      uint64_t v30 = *((void *)v22 + 5);
      *((void *)v21 + 4) = *((void *)v22 + 4);
      *((void *)v21 + 5) = v30;
      swift_bridgeObjectRelease();
      uint64_t v31 = *(int *)(v6 + 24);
      uint64_t v32 = (uint64_t)&a1[v31];
      uint64_t v33 = &a2[v31];
      if (*(void *)&a1[v31])
      {
        if (*(void *)v33)
        {
          *(void *)uint64_t v32 = *(void *)v33;
          swift_bridgeObjectRelease();
          if (*(void *)(v32 + 16))
          {
            uint64_t v34 = *((void *)v33 + 2);
            if (v34)
            {
              *(void *)(v32 + 8) = *((void *)v33 + 1);
              *(void *)(v32 + 16) = v34;
              swift_bridgeObjectRelease();
              *(_DWORD *)(v32 + 24) = *((_DWORD *)v33 + 6);
              uint64_t v35 = *((void *)v33 + 5);
              *(void *)(v32 + 32) = *((void *)v33 + 4);
              *(void *)(v32 + 40) = v35;
              swift_bridgeObjectRelease();
              return a1;
            }
            sub_1B29E2560(v32 + 8);
          }
          long long v37 = *(_OWORD *)(v33 + 24);
          *(_OWORD *)(v32 + 8) = *(_OWORD *)(v33 + 8);
          *(_OWORD *)(v32 + 24) = v37;
          *(void *)(v32 + 40) = *((void *)v33 + 5);
          return a1;
        }
        sub_1B29E25B4(v32);
      }
      long long v36 = *((_OWORD *)v33 + 1);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *(_OWORD *)(v32 + 16) = v36;
      *(_OWORD *)(v32 + 32) = *((_OWORD *)v33 + 2);
      return a1;
    }
    sub_1B29E25E4((uint64_t)a1, (void (*)(void))type metadata accessor for AssetRegistryAsset);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_1B2E80498();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  uint64_t v10 = *(int *)(v6 + 20);
  long long v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)long long v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  uint64_t v14 = *(int *)(v6 + 24);
  long long v15 = &a1[v14];
  char v16 = &a2[v14];
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)long long v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocalAvailabilityInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B29E29C0);
}

uint64_t sub_1B29E29C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29E5808();
  uint64_t v5 = type metadata accessor for AssetRegistryAsset(v4);
  unsigned int v6 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, a2, v5);
  if (v6 >= 2) {
    return v6 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocalAvailabilityInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B29E2A18);
}

uint64_t sub_1B29E2A18(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for AssetRegistryAsset(0);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, v5, a3, v6);
}

uint64_t sub_1B29E2A74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetRegistryAsset(0);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v2);
}

uint64_t sub_1B29E2AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetRegistryAsset(0);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v4);
}

uint64_t sub_1B29E2B04()
{
  uint64_t result = type metadata accessor for AssetRegistryAsset(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of AssetRegistryProtocol.trialAssetManagerPolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AssetRegistryProtocol.asset(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 16)
                                                                                              + **(int **)(a7 + 16));
  long long v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *long long v15 = v7;
  v15[1] = sub_1B299ACAC;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of AssetRegistryProtocol.assets(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1B29E2DC4;
  uint64_t v5 = sub_1B29E543C();
  return v7(v5);
}

uint64_t sub_1B29E2DC4()
{
  sub_1B299B3BC();
  uint64_t v2 = v1;
  sub_1B299B708();
  uint64_t v3 = *v0;
  sub_1B299B0E0();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  sub_1B29E58FC();
  return v5(v2);
}

uint64_t dispatch thunk of AssetRegistryProtocol.locallyAvailableAsset(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of AssetRegistryProtocol.assetEntry(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t type metadata accessor for AssetRegistry()
{
  return self;
}

uint64_t method lookup function for AssetRegistry(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AssetRegistry);
}

uint64_t destroy for AssetRegistry.TrialAssetManagerPolicy(uint64_t a1)
{
  return sub_1B29E1918(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s20IntelligencePlatform13AssetRegistryC23TrialAssetManagerPolicyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B29DAB14(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AssetRegistry.TrialAssetManagerPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B29DAB14(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B29E1918(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for AssetRegistry.TrialAssetManagerPolicy(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AssetRegistry.TrialAssetManagerPolicy(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B29E1918(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistry.TrialAssetManagerPolicy(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistry.TrialAssetManagerPolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B29E30B0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1B29E30B8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

void type metadata accessor for AssetRegistry.TrialAssetManagerPolicy()
{
}

uint64_t destroy for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo()
{
  swift_release();

  return swift_release();
}

void *_s20IntelligencePlatform13AssetRegistryC23TrialAssetManagerPolicyO14PersistentInfoVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo()
{
}

uint64_t dispatch thunk of AssetRegistryParametersOptionsProtocol.loadOverriddenAssetEntries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

_WORD *initializeBufferWithCopyOfBuffer for AssetRegistryParameters(_WORD *result, _WORD *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AssetRegistryParameters(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x3FFF)
  {
    if (a2 + 49153 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 49153 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 16)) - 49154;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = (*a1 & 0xFE | (*a1 >> 15) | (*a1 >> 1) & 0x3F00) ^ 0x3FFF;
  if (v5 >= 0x3FFE) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

uint64_t storeEnumTagSinglePayload for AssetRegistryParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 49153 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 49153 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3FFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3FFE)
  {
    unsigned int v6 = ((a2 - 0x3FFF) >> 16) + 1;
    *(_WORD *)__n128 result = a2 - 0x3FFF;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29E3430);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2)
        {
LABEL_18:
          unsigned int v7 = ((-a2 >> 1) & 0x1FFF) - (a2 << 13);
          *(_WORD *)__n128 result = (4 * v7) & 0xFE00 | (2 * (v7 & 0x7F));
        }
        break;
    }
  }
  return result;
}

uint64_t sub_1B29E3458(unsigned __int16 *a1)
{
  return *a1 >> 15;
}

_WORD *sub_1B29E3464(_WORD *result)
{
  *result &= ~0x8000u;
  return result;
}

_WORD *sub_1B29E3474(_WORD *result, __int16 a2)
{
  *__n128 result = *result & 0x101 | (a2 << 15);
  return result;
}

void type metadata accessor for AssetRegistryParameters()
{
}

void type metadata accessor for AssetRegistryParameters.LocalOptions()
{
}

uint64_t getEnumTagSinglePayload for AssetRegistryRemoteBackendType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AssetRegistryParameters.RemoteEndpointType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29E35F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1B29E361C(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

void type metadata accessor for AssetRegistryParameters.RemoteEndpointType()
{
}

uint64_t getEnumTagSinglePayload for AssetRegistryParameters.RemoteOptions(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AssetRegistryParameters.RemoteOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29E3798);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for AssetRegistryParameters.RemoteOptions()
{
}

void *initializeBufferWithCopyOfBuffer for AssetRegistryAsset(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B2E80498();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8);
    uint64_t v12 = *(void *)((char *)a2 + v8 + 8);
    uint64_t v13 = *(void *)((char *)a2 + v8 + 16);
    char v14 = *((unsigned char *)a2 + v8 + 26);
    __int16 v15 = *(_WORD *)((char *)a2 + v8 + 24);
    sub_1B29DABBC(v11, v12, v13, v15);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    *((void *)v9 + 2) = v13;
    v9[26] = v14;
    *((_WORD *)v9 + 12) = v15;
    uint64_t v16 = *((void *)v10 + 5);
    *((void *)v9 + 4) = *((void *)v10 + 4);
    *((void *)v9 + 5) = v16;
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(void *)uint64_t v18 = v20;
      uint64_t v21 = *((void *)v19 + 2);
      swift_bridgeObjectRetain();
      if (v21)
      {
        *((void *)v18 + 1) = *((void *)v19 + 1);
        *((void *)v18 + 2) = v21;
        *((_DWORD *)v18 + 6) = *((_DWORD *)v19 + 6);
        uint64_t v22 = *((void *)v19 + 5);
        *((void *)v18 + 4) = *((void *)v19 + 4);
        *((void *)v18 + 5) = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v25 = *(_OWORD *)(v19 + 24);
        *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
        *(_OWORD *)(v18 + 24) = v25;
        *((void *)v18 + 5) = *((void *)v19 + 5);
      }
    }
    else
    {
      long long v24 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v24;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    }
  }
  return a1;
}

uint64_t destroy for AssetRegistryAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_1B29DAB98(*(void *)(a1 + *(int *)(a2 + 20)), *(void *)(a1 + *(int *)(a2 + 20) + 8), *(void *)(a1 + *(int *)(a2 + 20) + 16), *(_WORD *)(a1 + *(int *)(a2 + 20) + 24));
  swift_bridgeObjectRelease();
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  uint64_t result = *v5;
  if (*v5)
  {
    swift_bridgeObjectRelease();
    uint64_t result = v5[2];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for AssetRegistryAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7);
  uint64_t v11 = *(void *)(a2 + v7 + 8);
  uint64_t v12 = *(void *)(a2 + v7 + 16);
  char v13 = *(unsigned char *)(a2 + v7 + 26);
  __int16 v14 = *(_WORD *)(a2 + v7 + 24);
  sub_1B29DABBC(v10, v11, v12, v14);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v12;
  *(unsigned char *)(v8 + 26) = v13;
  *(_WORD *)(v8 + 24) = v14;
  uint64_t v15 = *(void *)(v9 + 40);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = v15;
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16);
  swift_bridgeObjectRetain();
  if (v19)
  {
    *(void *)uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 16);
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(void *)(v17 + 8) = *(void *)(v18 + 8);
      *(void *)(v17 + 16) = v20;
      *(_DWORD *)(v17 + 24) = *(_DWORD *)(v18 + 24);
      uint64_t v21 = *(void *)(v18 + 40);
      *(void *)(v17 + 32) = *(void *)(v18 + 32);
      *(void *)(v17 + 40) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v23 = *(_OWORD *)(v18 + 24);
      *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
      *(_OWORD *)(v17 + 24) = v23;
      *(void *)(v17 + 40) = *(void *)(v18 + 40);
    }
  }
  else
  {
    long long v22 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v22;
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7);
  uint64_t v11 = *(void *)(a2 + v7 + 8);
  uint64_t v12 = *(void *)(a2 + v7 + 16);
  char v13 = *(unsigned char *)(a2 + v7 + 26);
  __int16 v14 = *(_WORD *)(a2 + v7 + 24);
  sub_1B29DABBC(v10, v11, v12, v14);
  uint64_t v15 = *(void *)v8;
  uint64_t v16 = *(void *)(v8 + 8);
  uint64_t v17 = *(void *)(v8 + 16);
  char v18 = *(_WORD *)(v8 + 24);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v12;
  *(_WORD *)(v8 + 24) = v14;
  *(unsigned char *)(v8 + 26) = v13;
  sub_1B29DAB98(v15, v16, v17, v18);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (long long *)(a2 + v19);
  uint64_t v22 = *(void *)(a2 + v19);
  if (!*(void *)(a1 + v19))
  {
    if (!v22)
    {
      long long v32 = *v21;
      long long v33 = v21[2];
      *(_OWORD *)(v20 + 16) = v21[1];
      *(_OWORD *)(v20 + 32) = v33;
      *(_OWORD *)uint64_t v20 = v32;
      return a1;
    }
    *(void *)uint64_t v20 = v22;
    uint64_t v23 = v20 + 8;
    uint64_t v26 = *((void *)v21 + 2);
    swift_bridgeObjectRetain();
    if (v26) {
      goto LABEL_11;
    }
    long long v27 = *(long long *)((char *)v21 + 8);
    long long v28 = *(long long *)((char *)v21 + 24);
    uint64_t v29 = *((void *)v21 + 5);
    goto LABEL_15;
  }
  if (!v22)
  {
    sub_1B29E25B4(a1 + v19);
    long long v31 = v21[1];
    long long v30 = v21[2];
    *(_OWORD *)uint64_t v20 = *v21;
    *(_OWORD *)(v20 + 16) = v31;
    *(_OWORD *)(v20 + 32) = v30;
    return a1;
  }
  *(void *)uint64_t v20 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v20 + 8;
  long long v24 = (long long *)((char *)v21 + 8);
  uint64_t v25 = *((void *)v21 + 2);
  if (!*(void *)(v20 + 16))
  {
    if (v25)
    {
LABEL_11:
      *(void *)(v20 + 8) = *((void *)v21 + 1);
      *(void *)(v20 + 16) = *((void *)v21 + 2);
      *(_DWORD *)(v20 + 24) = *((_DWORD *)v21 + 6);
      *(void *)(v20 + 32) = *((void *)v21 + 4);
      *(void *)(v20 + 40) = *((void *)v21 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
    long long v27 = *v24;
    long long v28 = *(long long *)((char *)v21 + 24);
    uint64_t v29 = *((void *)v21 + 5);
LABEL_15:
    *(void *)(v23 + 32) = v29;
    *(_OWORD *)uint64_t v23 = v27;
    *(_OWORD *)(v23 + 16) = v28;
    return a1;
  }
  if (v25)
  {
    *(void *)(v20 + 8) = *((void *)v21 + 1);
    *(void *)(v20 + 16) = *((void *)v21 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_DWORD *)(v20 + 24) = *((_DWORD *)v21 + 6);
    *(void *)(v20 + 32) = *((void *)v21 + 4);
    *(void *)(v20 + 40) = *((void *)v21 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B29E2560(v20 + 8);
    uint64_t v34 = *((void *)v21 + 5);
    long long v35 = *(long long *)((char *)v21 + 24);
    *(_OWORD *)uint64_t v23 = *v24;
    *(_OWORD *)(v20 + 24) = v35;
    *(void *)(v20 + 40) = v34;
  }
  return a1;
}

uint64_t initializeWithTake for AssetRegistryAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  uint64_t v12 = (_OWORD *)(a1 + v8);
  char v13 = (_OWORD *)(a2 + v8);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  v12[2] = v13[2];
  return a1;
}

uint64_t assignWithTake for AssetRegistryAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80498();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 16);
  char v11 = *(unsigned char *)(v9 + 26);
  __int16 v12 = *(_WORD *)(v9 + 24);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  uint64_t v15 = *(void *)(v8 + 16);
  char v16 = *(_WORD *)(v8 + 24);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(void *)(v8 + 16) = v10;
  *(_WORD *)(v8 + 24) = v12;
  *(unsigned char *)(v8 + 26) = v11;
  sub_1B29DAB98(v13, v14, v15, v16);
  uint64_t v17 = *(void *)(v9 + 40);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  if (!*(void *)(a1 + v18)) {
    goto LABEL_7;
  }
  if (!*(void *)v20)
  {
    sub_1B29E25B4(v19);
LABEL_7:
    long long v23 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v23;
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    return a1;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  swift_bridgeObjectRelease();
  if (!*(void *)(v19 + 16))
  {
LABEL_9:
    long long v24 = *(_OWORD *)(v20 + 24);
    *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
    *(_OWORD *)(v19 + 24) = v24;
    *(void *)(v19 + 40) = *(void *)(v20 + 40);
    return a1;
  }
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21)
  {
    sub_1B29E2560(v19 + 8);
    goto LABEL_9;
  }
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  *(void *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v19 + 24) = *(_DWORD *)(v20 + 24);
  uint64_t v22 = *(void *)(v20 + 40);
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  *(void *)(v19 + 40) = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B29E4004);
}

uint64_t sub_1B29E4004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B2E80498();
  sub_1B299B768();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 40);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAsset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B29E40B4);
}

void sub_1B29E40B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1B29E5808();
  sub_1B2E80498();
  sub_1B299B768();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v4, a2, a2, v8);
  }
  else
  {
    *(void *)(v4 + *(int *)(a4 + 20) + 40) = a2;
  }
}

uint64_t sub_1B29E413C()
{
  uint64_t result = sub_1B2E80498();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t destroy for AssetRegistryAsset.Metadata(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    unint64_t result = a1[2];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for AssetRegistryAsset.Metadata(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v4 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    if (v4)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v4;
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
      uint64_t v5 = *(void *)(a2 + 32);
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v5;
      *(void *)(a1 + 40) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v8;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
    }
  }
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAsset.Metadata(uint64_t a1, long long *a2)
{
  unint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      uint64_t v6 = a1 + 8;
      uint64_t v9 = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      if (v9)
      {
LABEL_13:
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return a1;
      }
      long long v10 = *(long long *)((char *)a2 + 8);
      long long v11 = *(long long *)((char *)a2 + 24);
      uint64_t v12 = *((void *)a2 + 5);
LABEL_16:
      *(void *)(v6 + 32) = v12;
      *(_OWORD *)uint64_t v6 = v10;
      *(_OWORD *)(v6 + 16) = v11;
      return a1;
    }
LABEL_11:
    long long v13 = *a2;
    long long v14 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v14;
    *(_OWORD *)a1 = v13;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_11;
  }
  *(void *)a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + 8;
  long long v7 = (long long *)((char *)a2 + 8);
  uint64_t v8 = *((void *)a2 + 2);
  if (!*(void *)(a1 + 16))
  {
    if (v8) {
      goto LABEL_13;
    }
    long long v10 = *v7;
    long long v11 = *(long long *)((char *)a2 + 24);
    uint64_t v12 = *((void *)a2 + 5);
    goto LABEL_16;
  }
  if (v8)
  {
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B29E2560(a1 + 8);
    uint64_t v15 = *((void *)a2 + 5);
    long long v16 = *(long long *)((char *)a2 + 24);
    *(_OWORD *)uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 24) = v16;
    *(void *)(a1 + 40) = v15;
  }
  return a1;
}

uint64_t assignWithTake for AssetRegistryAsset.Metadata(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 0xFFFFFFFFuLL)
  {
LABEL_8:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_8;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16))
  {
LABEL_11:
    long long v8 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v8;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    return a1;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
    sub_1B29E2560(a1 + 8);
    goto LABEL_11;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAsset.Metadata(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAsset.Metadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1B29E45F4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1B29E460C(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)unint64_t result = v2;
  return result;
}

void type metadata accessor for AssetRegistryAsset.Metadata()
{
}

uint64_t destroy for AssetRegistryAsset.Metadata.TrialMetadata(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AssetRegistryAsset.Metadata.TrialMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v5;
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
    uint64_t v6 = *(void *)(a2 + 32);
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 24);
    *uint64_t v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v8;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAsset.Metadata.TrialMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v6)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B29E2560(a1 + 8);
      uint64_t v7 = *(void *)(a2 + 40);
      long long v8 = *(_OWORD *)(a2 + 24);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 24) = v8;
      *(void *)(a1 + 40) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *uint64_t v4 = v9;
    *(_OWORD *)(a1 + 24) = v10;
  }
  return a1;
}

uint64_t assignWithTake for AssetRegistryAsset.Metadata.TrialMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
    sub_1B29E2560(a1 + 8);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v6;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    return a1;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAsset.Metadata.TrialMetadata(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAsset.Metadata.TrialMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AssetRegistryAsset.Metadata.TrialMetadata()
{
}

uint64_t getEnumTagSinglePayload for AssetRegistryParameters.RemoteOptions.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for AssetRegistryParameters.RemoteOptions.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B29E4A58);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryParameters.RemoteOptions.CodingKeys()
{
  return &type metadata for AssetRegistryParameters.RemoteOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryParameters.LocalOptions.CodingKeys()
{
  return &type metadata for AssetRegistryParameters.LocalOptions.CodingKeys;
}

unint64_t sub_1B29E4AA4()
{
  unint64_t result = qword_1E9C3A680;
  if (!qword_1E9C3A680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A680);
  }
  return result;
}

unint64_t sub_1B29E4AF4()
{
  unint64_t result = qword_1E9C3A688;
  if (!qword_1E9C3A688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A688);
  }
  return result;
}

unint64_t sub_1B29E4B44()
{
  unint64_t result = qword_1E9C3A690;
  if (!qword_1E9C3A690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A690);
  }
  return result;
}

unint64_t sub_1B29E4B94()
{
  unint64_t result = qword_1E9C3A698;
  if (!qword_1E9C3A698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A698);
  }
  return result;
}

unint64_t sub_1B29E4BE4()
{
  unint64_t result = qword_1E9C3A6A0;
  if (!qword_1E9C3A6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A6A0);
  }
  return result;
}

uint64_t sub_1B29E4C30(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B29E4C8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B29E4CE0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B29E4D3C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B29E4D80(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B29E4DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29E5808();
  v5(v4);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a2, v2);
  return a2;
}

uint64_t sub_1B29E4E20(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B29E4E7C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B29E4ED8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B29E4F34(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B29E4F90(uint64_t a1, uint64_t a2)
{
  return a2;
}

_OWORD *sub_1B29E4FEC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1B29E4FFC(uint64_t a1, char a2)
{
  if (a2 == 2) {
    return sub_1B2E839A8();
  }
  sub_1B2E839A8();
  sub_1B2E839A8();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29E50B4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  sub_1B29D1C70((uint64_t *)&v11);
  sub_1B29A15F0();
  v6();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  LOBYTE(a2) = *((unsigned char *)a2 + 16);
  sub_1B29D1D20(&v11, v7 + 16);
  *(void *)(v7 + 56) = v8;
  *(void *)(v7 + 64) = v9;
  *(unsigned char *)(v7 + 72) = (_BYTE)a2;
  return v7;
}

uint64_t sub_1B29E515C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B29E51A8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B29E5204(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B29E5260(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B29E52BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B29E52F4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B29E5384()
{
  return sub_1B2E83398();
}

uint64_t sub_1B29E53A4()
{
  return sub_1B2E83398();
}

uint64_t sub_1B29E53C4()
{
  return v0;
}

uint64_t sub_1B29E53D8()
{
  return sub_1B2E83988();
}

unint64_t sub_1B29E53F8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

uint64_t sub_1B29E541C()
{
  return sub_1B29DAB98(v2, v1, v0, v3);
}

uint64_t sub_1B29E543C()
{
  return v0;
}

uint64_t sub_1B29E544C()
{
  return sub_1B2E83988();
}

uint64_t sub_1B29E5480()
{
  return sub_1B29DABBC(v2, v0, v1, v3);
}

uint64_t sub_1B29E54A0()
{
  sub_1B29DAB98(v3, v1, v0, v2);
  return swift_bridgeObjectRelease();
}

void sub_1B29E54D8()
{
  *(void *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
}

uint64_t sub_1B29E5544(uint64_t a1)
{
  return (a1 + 1) & v1;
}

unint64_t sub_1B29E557C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + 8 * (result >> 6) + 64) |= 1 << result;
  uint64_t v6 = (void *)(*(void *)(a6 + 48) + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  return result;
}

uint64_t sub_1B29E55C0()
{
  return sub_1B2E83398();
}

uint64_t sub_1B29E55E0()
{
  return v0;
}

uint64_t sub_1B29E55F4(uint64_t a1)
{
  return sub_1B29DAB98(a1, v1, v2, v3);
}

uint64_t sub_1B29E5610()
{
  return sub_1B29DAB98(v0, v1, v3, v2);
}

uint64_t sub_1B29E5630()
{
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(*(void *)(v0 + 48), 0, 1, *(void *)(v0 + 176));
  return swift_task_dealloc();
}

uint64_t sub_1B29E5674()
{
  return sub_1B2E82498();
}

uint64_t sub_1B29E56B8()
{
  return v0;
}

uint64_t sub_1B29E56E0()
{
  sub_1B29DAB98(v2, *(void *)(v4 - 152), v1, v3);
  return v0;
}

void sub_1B29E5710(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 16) = a2;
}

uint64_t sub_1B29E5718()
{
  return v0;
}

__n128 sub_1B29E573C@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)uint64_t v3 = a1;
  *(__n128 *)(v3 + 8) = result;
  *(_OWORD *)(v3 + 24) = v5;
  *(void *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_1B29E577C()
{
  return v0;
}

uint64_t sub_1B29E57A4()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_1B29E57B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_1B29DB230(v27, v26, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B29E57CC()
{
  return sub_1B2E82EF8();
}

double sub_1B29E57E8@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1B29E57F8()
{
  return v0;
}

uint64_t sub_1B29E5808()
{
  return 0;
}

uint64_t sub_1B29E5814()
{
  return sub_1B29DAB98(v3, v2, v1, v0);
}

uint64_t sub_1B29E5834()
{
  return sub_1B29DABBC(v2, v1, v0, v3);
}

uint64_t sub_1B29E5854()
{
  return sub_1B29DABBC(v3, v1, v0, v2);
}

uint64_t sub_1B29E58A8()
{
  return sub_1B2E83398();
}

void sub_1B29E5930(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 26) = BYTE2(v1);
  *(_WORD *)(a1 + 24) = v1;
}

uint64_t sub_1B29E5958()
{
  return sub_1B29DAB98(v0, v3, v2, v1);
}

uint64_t sub_1B29E5978()
{
  return v0;
}

uint64_t sub_1B29E598C()
{
  return sub_1B29DABBC(v0, v2, v1, v3);
}

uint64_t sub_1B29E59AC()
{
  return sub_1B29DAB98(v0, v2, v1, v3);
}

void sub_1B29E59CC(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 16) = a2;
}

uint64_t AssetRegistryAssetEntry.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 26);
  __int16 v6 = *(_WORD *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 26) = v5;
  *(_WORD *)(a1 + 24) = v6;
  return sub_1B29DABBC(v2, v3, v4, v6);
}

uint64_t AssetRegistryAssetEntry.ratchetNumber.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t AssetRegistryAssetEntry.userInfo.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 AssetRegistryAssetEntry.init(location:ratchetNumber:userInfo:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  unint64_t v4 = a1[1].n128_u64[0];
  unsigned __int16 v5 = a1[1].n128_u16[4];
  unsigned __int8 v6 = a1[1].n128_u8[10];
  __n128 result = *a1;
  *a4 = *a1;
  a4[1].n128_u64[0] = v4;
  a4[1].n128_u8[10] = v6;
  a4[1].n128_u16[4] = v5;
  a4[2].n128_u64[0] = a2;
  a4[2].n128_u64[1] = a3;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetEntry.verifyValidity()()
{
  if ((*(_WORD *)(v0 + 24) & 0x80) == 0) {
    AssetRegistryAssetLocation.LocalAsset.verifyValidity()();
  }
}

uint64_t sub_1B29E5A88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x4E74656863746172 && a2 == 0xED00007265626D75;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6F666E4972657375 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B29E5BFC(char a1)
{
  if (!a1) {
    return 0x6E6F697461636F6CLL;
  }
  if (a1 == 1) {
    return 0x4E74656863746172;
  }
  return 0x6F666E4972657375;
}

uint64_t sub_1B29E5C60()
{
  return sub_1B29E5BFC(*v0);
}

uint64_t sub_1B29E5C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29E5A88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29E5C90(uint64_t a1)
{
  unint64_t v2 = sub_1B29E622C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29E5CCC(uint64_t a1)
{
  unint64_t v2 = sub_1B29E622C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AssetRegistryAssetEntry.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C3A708);
  sub_1B299D42C();
  uint64_t v19 = v4;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  __int16 v9 = *((_WORD *)v1 + 12);
  char v10 = *((unsigned char *)v1 + 26);
  uint64_t v11 = *((void *)v1 + 4);
  v16[0] = *((void *)v1 + 5);
  v16[1] = v11;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B29E622C();
  sub_1B2E83A38();
  long long v20 = v17;
  uint64_t v21 = v8;
  char v23 = v10;
  __int16 v22 = v9;
  char v24 = 0;
  sub_1B29E6278();
  uint64_t v12 = v18;
  sub_1B2E836D8();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v2);
  }
  uint64_t v14 = v16[0];
  uint64_t v15 = v19;
  LOBYTE(v20) = 1;
  sub_1B2E836C8();
  *(void *)&long long v20 = v14;
  char v24 = 2;
  sub_1B29A3EB4(&qword_1EB7D94D8);
  sub_1B29E6310((unint64_t *)&qword_1E9C3A720);
  sub_1B2E83668();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v7, v2);
}

uint64_t AssetRegistryAssetEntry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C3A728);
  sub_1B299D42C();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B29E622C();
  sub_1B2E83A18();
  if (v2) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  sub_1B29E62C4();
  sub_1B2E835B8();
  uint64_t v6 = v12;
  LOBYTE(v12) = 1;
  uint64_t v11 = v6;
  sub_1B29DABBC(v6, v13, v14, v15);
  uint64_t v10 = sub_1B2E835A8();
  sub_1B29A3EB4(&qword_1EB7D94D8);
  sub_1B29E6310((unint64_t *)&qword_1EB7D94E0);
  sub_1B2E83548();
  uint64_t v7 = sub_1B29A2514();
  v8(v7);
  sub_1B29DABBC(v11, v13, v14, v15);
  swift_bridgeObjectRetain();
  sub_1B29E68E4();
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v14;
  *(unsigned char *)(a2 + 26) = v16;
  *(_WORD *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v12;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  sub_1B29E68E4();
  return swift_bridgeObjectRelease();
}

void sub_1B29E61E4()
{
}

uint64_t sub_1B29E61FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AssetRegistryAssetEntry.init(from:)(a1, a2);
}

uint64_t sub_1B29E6214(void *a1)
{
  return AssetRegistryAssetEntry.encode(to:)(a1);
}

unint64_t sub_1B29E622C()
{
  unint64_t result = qword_1E9C3A710;
  if (!qword_1E9C3A710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A710);
  }
  return result;
}

unint64_t sub_1B29E6278()
{
  unint64_t result = qword_1E9C3A718;
  if (!qword_1E9C3A718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A718);
  }
  return result;
}

unint64_t sub_1B29E62C4()
{
  unint64_t result = qword_1E9C3A730;
  if (!qword_1E9C3A730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A730);
  }
  return result;
}

uint64_t sub_1B29E6310(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(&qword_1EB7D94D8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B29E6374(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B29E63A4();
  unint64_t result = sub_1B29E63F0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B29E63A4()
{
  unint64_t result = qword_1E9C3A738;
  if (!qword_1E9C3A738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A738);
  }
  return result;
}

unint64_t sub_1B29E63F0()
{
  unint64_t result = qword_1E9C3A740;
  if (!qword_1E9C3A740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A740);
  }
  return result;
}

uint64_t destroy for AssetRegistryAssetEntry(uint64_t a1)
{
  sub_1B29DAB98(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(_WORD *)(a1 + 24));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AssetRegistryAssetEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 26);
  __int16 v8 = *(_WORD *)(a2 + 24);
  sub_1B29DABBC(*(void *)a2, v5, v6, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 26) = v7;
  *(_WORD *)(a1 + 24) = v8;
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAssetEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 26);
  __int16 v8 = *(_WORD *)(a2 + 24);
  sub_1B29DABBC(*(void *)a2, v5, v6, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(_WORD *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 26) = v7;
  sub_1B29DAB98(v9, v10, v11, v12);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AssetRegistryAssetEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 26);
  __int16 v6 = *(_WORD *)(a2 + 24);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  __int16 v10 = *(_WORD *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 26) = v5;
  sub_1B29DAB98(v7, v8, v9, v10);
  uint64_t v11 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetEntry(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 40);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetEntry()
{
  return &type metadata for AssetRegistryAssetEntry;
}

unsigned char *storeEnumTagSinglePayload for AssetRegistryAssetEntry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29E67BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetEntry.CodingKeys()
{
  return &type metadata for AssetRegistryAssetEntry.CodingKeys;
}

unint64_t sub_1B29E67F8()
{
  unint64_t result = qword_1E9C3A748;
  if (!qword_1E9C3A748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A748);
  }
  return result;
}

unint64_t sub_1B29E6848()
{
  unint64_t result = qword_1E9C3A750;
  if (!qword_1E9C3A750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A750);
  }
  return result;
}

unint64_t sub_1B29E6898()
{
  unint64_t result = qword_1E9C3A758;
  if (!qword_1E9C3A758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A758);
  }
  return result;
}

uint64_t sub_1B29E68E4()
{
  return sub_1B29DAB98(v3, v1, v0, v2);
}

void AssetRegistryAssetLocation.LocalAsset.localURL.getter()
{
  sub_1B299F300();
  sub_1B2E803C8();
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B29A0480();
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7E69E0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0[1];
  if (v0[3])
  {
    uint64_t v6 = v0[2];
    LOBYTE(v13) = *v0 & 1;
    uint64_t v14 = v5;
    uint64_t v15 = v6;
    AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.localURL.getter();
  }
  else
  {
    uint64_t v13 = *v0;
    uint64_t v14 = v5;
    v12[1] = 47;
    v12[2] = 0xE100000000000000;
    sub_1B29DAC38();
    sub_1B29DAC84();
    if (sub_1B2E822C8())
    {
      uint64_t v7 = sub_1B2E80498();
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 1, 1, v7);
      uint64_t v8 = sub_1B29EC514();
      v9(v8);
      swift_bridgeObjectRetain();
      sub_1B2E80478();
    }
    else
    {
      sub_1B29DACD0();
      uint64_t v10 = sub_1B299E4D4();
      sub_1B29EC37C(v10, v11);
    }
  }
  sub_1B29EC408();
  sub_1B29998C8();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.verifyValidity()()
{
  if ((*(_WORD *)(v0 + 24) & 0x80) == 0) {
    AssetRegistryAssetLocation.LocalAsset.verifyValidity()();
  }
}

IntelligencePlatform::AssetRegistryAcceptableBundleName_optional __swiftcall AssetRegistryAcceptableBundleName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t AssetRegistryAcceptableBundleName.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000018;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1B29E6BA4()
{
  return sub_1B29AE4B4();
}

uint64_t sub_1B29E6BAC()
{
  return sub_1B2AA5078();
}

uint64_t sub_1B29E6BB4()
{
  return sub_1B29F8EDC();
}

IntelligencePlatform::AssetRegistryAcceptableBundleName_optional sub_1B29E6BBC(Swift::String *a1)
{
  return AssetRegistryAcceptableBundleName.init(rawValue:)(*a1);
}

unint64_t sub_1B29E6BC8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AssetRegistryAcceptableBundleName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B29E6BF0()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B29E6C50()
{
  return sub_1B2E82788();
}

uint64_t sub_1B29E6CA0(char *a1)
{
  return sub_1B29ABB20(*a1);
}

void AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.localURL.getter()
{
  sub_1B299F300();
  sub_1B2E803C8();
  sub_1B299D278();
  MEMORY[0x1F4188790](v1);
  sub_1B29A0480();
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7E69E0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1B299B3C8();
  sub_1B29EC494();
  sub_1B29DAC84();
  sub_1B29EC4D4();
  if (sub_1B2E822C8())
  {
    uint64_t v3 = sub_1B2E80498();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 1, 1, v3);
    uint64_t v4 = sub_1B29EC514();
    v5(v4);
    swift_bridgeObjectRetain();
    sub_1B2E80478();
  }
  else
  {
    sub_1B29DACD0();
    uint64_t v6 = sub_1B299E4D4();
    sub_1B29EC37C(v6, v7);
  }
  sub_1B29EC408();
  sub_1B29998C8();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.verifyValidity()()
{
  sub_1B29EC4B0();
  sub_1B29DAC84();
  if ((sub_1B29EC398() & 1) == 0)
  {
    sub_1B29DACD0();
    uint64_t v0 = sub_1B299E4D4();
    sub_1B29EC37C(v0, v1);
  }
}

IntelligencePlatform::AssetRegistryAssetLocation::LocalAsset::LocalAbsoluteAsset __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.init(absoluteFilePath:)(Swift::String absoluteFilePath)
{
  object = absoluteFilePath._object;
  uint64_t countAndFlagsBits = absoluteFilePath._countAndFlagsBits;
  uint64_t v4 = v1;
  sub_1B299B7A4();
  sub_1B29DAC84();
  swift_bridgeObjectRetain();
  if (sub_1B299E548())
  {
    uint64_t v5 = swift_bridgeObjectRelease();
    *uint64_t v4 = countAndFlagsBits;
    v4[1] = (uint64_t)object;
  }
  else
  {
    sub_1B29DACD0();
    sub_1B299E4D4();
    *uint64_t v7 = 0;
    swift_willThrow();
    uint64_t v5 = swift_bridgeObjectRelease_n();
  }
  result.absoluteFilePath._object = v6;
  result.absoluteFilePath._uint64_t countAndFlagsBits = v5;
  return result;
}

void AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.init(filePathURL:)()
{
  sub_1B299F300();
  uint64_t v1 = v0;
  sub_1B2E80498();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1B299B0C8();
  if (sub_1B2E803A8())
  {
    uint64_t v13 = v1;
    sub_1B2E803B8();
    uint64_t v5 = sub_1B2E80458();
    uint64_t v7 = v6;
    uint64_t v8 = *(void (**)(void))(v3 + 8);
    sub_1B299F330();
    v8();
    sub_1B29EC494();
    sub_1B29DAC84();
    swift_bridgeObjectRetain();
    sub_1B29EC4D4();
    if (sub_1B2E822C8())
    {
      sub_1B299F330();
      v8();
      swift_bridgeObjectRelease();
      *uint64_t v13 = v5;
      v13[1] = v7;
    }
    else
    {
      sub_1B29DACD0();
      uint64_t v11 = sub_1B299E4D4();
      sub_1B29EC37C(v11, v12);
      sub_1B299F330();
      v8();
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_1B29DACD0();
    sub_1B299E4D4();
    *uint64_t v9 = 1;
    swift_willThrow();
    sub_1B299F330();
    v10();
  }
  sub_1B29EC408();
  sub_1B29998C8();
}

BOOL static AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.ValidityError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.ValidityError.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t sub_1B29E7104(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001B2E8ED70)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1B29E718C()
{
  return 0xD000000000000010;
}

uint64_t sub_1B29E71A8()
{
  return sub_1B29E94C8();
}

uint64_t sub_1B29E71C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29E7104(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B29E71F4(uint64_t a1)
{
  unint64_t v2 = sub_1B29E8A90();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29E7230(uint64_t a1)
{
  unint64_t v2 = sub_1B29E8A90();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3A760);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B29A0480();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B29E8A90();
  sub_1B29998E0();
  sub_1B2E83688();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_1B29EC408();
  sub_1B29998C8();
}

void AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B299F300();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_1B29A3EB4(&qword_1E9C3A770);
  sub_1B299D278();
  MEMORY[0x1F4188790](v28);
  long long v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B299E524();
  sub_1B29E8A90();
  sub_1B29EC4FC();
  if (!v20)
  {
    sub_1B2E83568();
    sub_1B29EC580();
    sub_1B299F330();
    v31();
    *uint64_t v27 = v30;
    v27[1] = v21;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v25);
  sub_1B29998C8();
}

void sub_1B29E7450()
{
}

void sub_1B29E7468()
{
}

#error "1B29E748C: call analysis failed (funcsize=6)"

void sub_1B29E7498()
{
}

void AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.localURL.getter()
{
  sub_1B299F300();
  uint64_t v30 = sub_1B2E803C8();
  sub_1B299D278();
  uint64_t v28 = v1;
  MEMORY[0x1F4188790](v2);
  uint64_t v29 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7E69E0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v27 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v26 - v7;
  uint64_t v9 = sub_1B2E80498();
  sub_1B299D278();
  uint64_t v11 = v10;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  long long v17 = (char *)v26 - v16;
  char v18 = *v0;
  uint64_t v19 = *((void *)v0 + 1);
  v26[0] = *((void *)v0 + 2);
  v26[1] = v19;
  uint64_t v31 = v19;
  uint64_t v32 = v26[0];
  sub_1B29EC494();
  sub_1B29DAC84();
  sub_1B29EC4D4();
  if (sub_1B2E822C8())
  {
    sub_1B29E9EEC();
    sub_1B299E4D4();
    *uint64_t v20 = 0;
LABEL_15:
    swift_willThrow();
    goto LABEL_16;
  }
  if (v18)
  {
    if (qword_1EB7E5378 != -1) {
      swift_once();
    }
    uint64_t v21 = &qword_1EB7E5368;
  }
  else
  {
    if (qword_1EB7E6280 != -1) {
      swift_once();
    }
    uint64_t v21 = &qword_1EB7E6340;
  }
  id v22 = objc_msgSend((id)*v21, sel_resourceURL);
  if (!v22)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
    goto LABEL_14;
  }
  uint64_t v23 = v22;
  sub_1B2E80448();

  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v24(v8, v15, v9);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, v9);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9) == 1)
  {
LABEL_14:
    sub_1B29E9E40((uint64_t)v8);
    sub_1B29E9EA0();
    sub_1B299E4D4();
    goto LABEL_15;
  }
  v24(v17, v8, v9);
  uint64_t v25 = (uint64_t)v27;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v27, v17, v9);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v25, 0, 1, v9);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v29, *MEMORY[0x1E4F276C0], v30);
  swift_bridgeObjectRetain();
  sub_1B2E80478();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v9);
LABEL_16:
  sub_1B29EC408();
  sub_1B29998C8();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.verifyValidity()()
{
  sub_1B29EC4B0();
  sub_1B29DAC84();
  if (sub_1B29EC398())
  {
    sub_1B29E9EEC();
    uint64_t v0 = sub_1B299E4D4();
    sub_1B29EC37C(v0, v1);
  }
}

IntelligencePlatform::AssetRegistryAssetLocation::LocalAsset::LocalRelativeAsset __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.init(bundleName:relativeFilePath:)(IntelligencePlatform::AssetRegistryAcceptableBundleName bundleName, Swift::String relativeFilePath)
{
  object = relativeFilePath._object;
  uint64_t countAndFlagsBits = relativeFilePath._countAndFlagsBits;
  uint64_t v5 = v2;
  char v6 = *(unsigned char *)bundleName;
  sub_1B29DAC38();
  sub_1B29DAC84();
  swift_bridgeObjectRetain();
  if (sub_1B299E548())
  {
    sub_1B29E9EEC();
    sub_1B299E4D4();
    *uint64_t v7 = 0;
    swift_willThrow();
    IntelligencePlatform::AssetRegistryAcceptableBundleName v8 = swift_bridgeObjectRelease_n();
  }
  else
  {
    IntelligencePlatform::AssetRegistryAcceptableBundleName v8 = swift_bridgeObjectRelease();
    *(unsigned char *)uint64_t v5 = v6;
    *(void *)(v5 + 8) = countAndFlagsBits;
    *(void *)(v5 + 16) = object;
  }
  result.relativeFilePath._object = v10;
  result.relativeFilePath._uint64_t countAndFlagsBits = v9;
  result.bundleName = v8;
  return result;
}

uint64_t _s20IntelligencePlatform013AssetRegistryC8LocationO05LocalC0O0f8AbsoluteC0V13ValidityErrorO9hashValueSivg_0()
{
  return sub_1B2E839E8();
}

uint64_t static AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError.== infix(_:_:)()
{
  return 1;
}

uint64_t AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29E7A44()
{
  return sub_1B2E83998();
}

uint64_t sub_1B29E7A6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614E656C646E7562 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B2E96A50)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B29E7B68()
{
  return 2;
}

uint64_t sub_1B29E7B70(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0x614E656C646E7562;
  }
}

uint64_t sub_1B29E7BB0()
{
  return AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError.hashValue.getter();
}

uint64_t sub_1B29E7BC8()
{
  return AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError.hash(into:)();
}

BOOL sub_1B29E7BE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B29AE32C(*a1, *a2);
}

uint64_t sub_1B29E7BEC()
{
  return sub_1B29AE990();
}

uint64_t sub_1B29E7C08()
{
  return sub_1B29E7A44();
}

uint64_t sub_1B29E7C10()
{
  return sub_1B29E7B70(*v0);
}

uint64_t sub_1B29E7C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29E7A6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29E7C40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29E7B68();
  *a1 = result;
  return result;
}

uint64_t sub_1B29E7C68(uint64_t a1)
{
  unint64_t v2 = sub_1B29E9F38();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29E7CA4(uint64_t a1)
{
  unint64_t v2 = sub_1B29E9F38();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C3A788);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29EC3B8();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B29E9F38();
  sub_1B29998E0();
  sub_1B29E9F84();
  sub_1B29EC544();
  if (!v0) {
    sub_1B29EC440();
  }
  uint64_t v4 = sub_1B29EC52C();
  v5(v4);
  sub_1B29998C8();
}

void AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1B299F300();
  a21 = v25;
  a22 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = sub_1B29A3EB4(&qword_1E9C3A7A0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B299E524();
  sub_1B29E9F38();
  sub_1B29EC4FC();
  if (!v22)
  {
    a12 = 0;
    sub_1B29E9FD0();
    sub_1B2E835B8();
    sub_1B29EC5E8();
    sub_1B2E83568();
    uint64_t v35 = sub_1B29EC580();
    v36(v35, v31);
    *(unsigned char *)uint64_t v30 = v24;
    *(void *)(v30 + 8) = v34;
    *(void *)(v30 + 16) = v23;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v28);
  sub_1B29998C8();
}

void sub_1B29E7F20()
{
}

void sub_1B29E7F38()
{
}

#error "1B29E7F5C: call analysis failed (funcsize=6)"

void sub_1B29E7F68()
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.LocalAsset.verifyValidity()()
{
  if (*(unsigned char *)(v0 + 24))
  {
    sub_1B299B7A4();
    sub_1B29DAC84();
    if ((sub_1B29EC398() & 1) == 0) {
      return;
    }
    sub_1B29E9EEC();
  }
  else
  {
    sub_1B299B7A4();
    sub_1B29DAC84();
    if (sub_1B29EC398()) {
      return;
    }
    sub_1B29DACD0();
  }
  uint64_t v1 = sub_1B299E4D4();
  sub_1B29EC37C(v1, v2);
}

uint64_t sub_1B29E803C()
{
  return 12383;
}

uint64_t sub_1B29E8048(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574756C6F736261 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B2E8ED90)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B29E8138(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0x6574756C6F736261;
  }
}

uint64_t sub_1B29E8178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29E9458(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B29E81A4(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA100();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29E81E0(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA100();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29E821C()
{
  return sub_1B29E8138(*v0);
}

uint64_t sub_1B29E8224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29E8048(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29E824C(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA01C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29E8288(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA01C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29E82C4(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA068();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29E8300(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA068();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AssetRegistryAssetLocation.LocalAsset.encode(to:)()
{
  sub_1B299F300();
  sub_1B29EC594();
  sub_1B29A3EB4(&qword_1E9C3A7A8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299B3C8();
  sub_1B29A3EB4(&qword_1E9C3A7B0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299B0C8();
  sub_1B29A3EB4(&qword_1E9C3A7B8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A0480();
  char v5 = *(unsigned char *)(v0 + 24);
  sub_1B29AEC7C(v1, v1[3]);
  sub_1B29EA01C();
  sub_1B2E83A38();
  if (v5)
  {
    sub_1B29EA068();
    sub_1B2E83618();
    sub_1B29EA0B4();
  }
  else
  {
    sub_1B29EA100();
    sub_1B2E83618();
    sub_1B29EA14C();
  }
  sub_1B2E836D8();
  sub_1B299B798();
  v6();
  sub_1B299B798();
  v7();
  sub_1B29EC408();
  sub_1B29998C8();
}

void AssetRegistryAssetLocation.LocalAsset.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  sub_1B29EC594();
  uint64_t v40 = v12;
  sub_1B29A3EB4(&qword_1E9C3A7E8);
  sub_1B299D278();
  uint64_t v42 = v14;
  uint64_t v43 = v13;
  MEMORY[0x1F4188790](v13);
  sub_1B29A0498();
  uint64_t v15 = sub_1B29A3EB4(&qword_1E9C3A7F0);
  sub_1B299D278();
  uint64_t v41 = v16;
  MEMORY[0x1F4188790](v17);
  sub_1B29A0480();
  sub_1B29A3EB4(&qword_1E9C3A7F8);
  sub_1B299D278();
  uint64_t v44 = v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v11[4];
  sub_1B29AEC7C(v11, v11[3]);
  sub_1B29EA01C();
  sub_1B29EC4FC();
  if (a10) {
    goto LABEL_8;
  }
  v39[0] = v15;
  v39[1] = v10;
  if (!*(void *)(sub_1B2E835F8() + 16) || (uint64_t v23 = sub_1B29EC3E0(), sub_1B29B142C(v23), sub_1B29EC560(), v22))
  {
    sub_1B2E83288();
    sub_1B299E4D4();
    uint64_t v25 = v24;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v25 = &type metadata for AssetRegistryAssetLocation.LocalAsset;
    sub_1B2E834F8();
    sub_1B29EC414();
    uint64_t v26 = sub_1B29EC5D4();
    v27(v26);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v28 = sub_1B29EC5A0();
    v29(v28);
LABEL_8:
    uint64_t v30 = (uint64_t)v11;
    goto LABEL_9;
  }
  if (v21)
  {
    LOBYTE(v45) = 1;
    sub_1B29EA068();
    sub_1B29EC46C();
    sub_1B29EA198();
    sub_1B2E835B8();
    sub_1B299B798();
    v31();
    swift_unknownObjectRelease();
    sub_1B29EC36C();
    v32();
    uint64_t v33 = v45;
    uint64_t v35 = v46;
    uint64_t v34 = v47;
  }
  else
  {
    LOBYTE(v45) = 0;
    sub_1B29EA100();
    sub_1B29EC5B4();
    sub_1B29EA1E4();
    sub_1B2E835B8();
    sub_1B299B798();
    v36();
    swift_unknownObjectRelease();
    sub_1B29EC36C();
    v37();
    uint64_t v34 = 0;
    uint64_t v33 = v45;
    uint64_t v35 = v46;
  }
  __int16 v38 = v40;
  void *v40 = v33;
  v38[1] = v35;
  v38[2] = v34;
  *((unsigned char *)v38 + 24) = (_BYTE)v21;
  uint64_t v30 = (uint64_t)v11;
LABEL_9:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v30);
  sub_1B29998C8();
}

void sub_1B29E8A0C()
{
}

void sub_1B29E8A24()
{
}

void sub_1B29E8A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  AssetRegistryAssetLocation.LocalAsset.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1B29E8A54()
{
}

IntelligencePlatform::AssetRegistryAssetLocation::TrialAsset __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.TrialAsset.init(namespace:factor:assetType:downloadOptions:)(IntelligencePlatform::TrialNamespace a1, Swift::String factor, IntelligencePlatform::TrialAssetManager::AssetType assetType, IntelligencePlatform::TrialAssetManager::DownloadOptions_optional downloadOptions)
{
  char v5 = *(unsigned char *)assetType;
  __int16 v6 = **(_WORD **)&downloadOptions.value.allowsCellularAccess;
  *(unsigned char *)uint64_t v4 = *(unsigned char *)a1;
  *(Swift::String *)(v4 + 8) = factor;
  *(unsigned char *)(v4 + 24) = v5;
  *(_WORD *)(v4 + 25) = v6;
  result.factor = factor;
  result.assetType = assetType;
  result.namespace = a1;
  return result;
}

unint64_t sub_1B29E8A90()
{
  unint64_t result = qword_1E9C3A768;
  if (!qword_1E9C3A768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A768);
  }
  return result;
}

IntelligencePlatform::AssetRegistryAssetLocation::TrialAsset __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.TrialAsset.init(namespaceName:factor:assetTypeRawString:downloadOptions:)(Swift::String namespaceName, Swift::String factor, Swift::String assetTypeRawString, IntelligencePlatform::TrialAssetManager::DownloadOptions_optional downloadOptions)
{
  uint64_t countAndFlagsBits = factor._countAndFlagsBits;
  object = assetTypeRawString._object;
  uint64_t v6 = assetTypeRawString._countAndFlagsBits;
  uint64_t v7 = factor._object;
  IntelligencePlatform::AssetRegistryAcceptableBundleName v8 = namespaceName._object;
  uint64_t v9 = namespaceName._countAndFlagsBits;
  uint64_t v10 = v4;
  __int16 v11 = **(_WORD **)&downloadOptions.value.allowsCellularAccess;
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = v9;
  v12._object = v8;
  TrialNamespace.init(rawValue:)(v12);
  if (v21 == 9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B29EA230();
    sub_1B299E4D4();
    *(void *)uint64_t v15 = v9;
LABEL_9:
    *(void *)(v15 + 8) = v8;
    *(unsigned char *)(v15 + 16) = v21 != 9;
    uint64_t v16 = swift_willThrow();
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (!v13)
  {
    char v14 = 0;
    goto LABEL_7;
  }
  if (v13 != 1)
  {
    swift_bridgeObjectRelease();
    sub_1B29EA230();
    sub_1B299E4D4();
    *(void *)uint64_t v15 = v6;
    IntelligencePlatform::AssetRegistryAcceptableBundleName v8 = object;
    goto LABEL_9;
  }
  char v14 = 1;
LABEL_7:
  uint64_t v16 = swift_bridgeObjectRelease();
  *(unsigned char *)uint64_t v10 = v21;
  *(void *)(v10 + 8) = countAndFlagsBits;
  *(void *)(v10 + 16) = v7;
  *(unsigned char *)(v10 + 24) = v14;
  *(_WORD *)(v10 + 25) = v11;
LABEL_10:
  result.factor._object = v18;
  result.factor._uint64_t countAndFlagsBits = v17;
  result.namespace = v16;
  *(_DWORD *)result.gap1 = *(_DWORD *)((char *)&v16 + 1);
  *(_WORD *)&result.gap1[4] = *(_WORD *)((char *)&v16 + 5);
  result.gap1[6] = HIBYTE(v16);
  result.assetType = v19;
  result.downloadOptions = *(IntelligencePlatform::TrialAssetManager::DownloadOptions_optional *)((char *)&v19 + 1);
  return result;
}

uint64_t sub_1B29E8C40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x63617073656D616ELL && a2 == 0xE900000000000065;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x726F74636166 && a2 == 0xE600000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7079547465737361 && a2 == 0xE900000000000065;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEF736E6F6974704FLL)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1B29E8E24()
{
  return 4;
}

uint64_t sub_1B29E8E2C(char a1)
{
  uint64_t result = 0x63617073656D616ELL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x726F74636166;
      break;
    case 2:
      uint64_t result = 0x7079547465737361;
      break;
    case 3:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B29E8EC8()
{
  return sub_1B29E8E2C(*v0);
}

uint64_t sub_1B29E8ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29E8C40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29E8EF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29E8E24();
  *a1 = result;
  return result;
}

uint64_t sub_1B29E8F20(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA27C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29E8F5C(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA27C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AssetRegistryAssetLocation.TrialAsset.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C3A818);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29EC3B8();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B29EA27C();
  sub_1B29998E0();
  sub_1B29EA2C8();
  sub_1B29EC544();
  if (!v0)
  {
    sub_1B29EC440();
    sub_1B29EA314();
    sub_1B29EC544();
    sub_1B29EA360();
    sub_1B2E83668();
  }
  uint64_t v4 = sub_1B29EC52C();
  v5(v4);
  sub_1B29998C8();
}

void AssetRegistryAssetLocation.TrialAsset.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, __int16 a11, char a12)
{
  sub_1B299F300();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_1B29A3EB4(&qword_1E9C3A840);
  sub_1B299D278();
  MEMORY[0x1F4188790](v18);
  sub_1B299B3C8();
  sub_1B299E524();
  sub_1B29EA27C();
  sub_1B29EC4FC();
  if (v12)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v15);
  }
  else
  {
    sub_1B29EA3AC();
    sub_1B29EC5FC();
    sub_1B2E835B8();
    sub_1B29EC5E8();
    uint64_t v19 = sub_1B2E83568();
    uint64_t v21 = v20;
    uint64_t v24 = v19;
    sub_1B29EA3F8();
    swift_bridgeObjectRetain();
    sub_1B2E835B8();
    sub_1B29EA444();
    sub_1B29EC5FC();
    sub_1B2E83548();
    uint64_t v22 = sub_1B29EC4E4();
    v23(v22);
    *(unsigned char *)uint64_t v17 = v13;
    *(void *)(v17 + 8) = v24;
    *(void *)(v17 + 16) = v21;
    *(unsigned char *)(v17 + 24) = a12;
    *(_WORD *)(v17 + 25) = a10;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v15);
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

uint64_t sub_1B29E931C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7373416C61636F6CLL && a2 == 0xEA00000000007465;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373416C61697274 && a2 == 0xEA00000000007465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B29E9424(char a1)
{
  if (a1) {
    return 0x7373416C61697274;
  }
  else {
    return 0x7373416C61636F6CLL;
  }
}

uint64_t sub_1B29E9458(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B29E94C8()
{
  return sub_1B2E839E8();
}

void sub_1B29E9504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  AssetRegistryAssetLocation.TrialAsset.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(__int16 *)vars8, *(__int16 *)&vars8[2], vars8[4]);
}

void sub_1B29E951C()
{
}

uint64_t sub_1B29E9534()
{
  return sub_1B29E9424(*v0);
}

uint64_t sub_1B29E953C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29E931C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29E9564(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA490();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29E95A0(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA490();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29E95DC(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA574();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29E9618(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA574();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29E9654(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA4DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29E9690(uint64_t a1)
{
  unint64_t v2 = sub_1B29EA4DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AssetRegistryAssetLocation.encode(to:)()
{
  sub_1B299F300();
  sub_1B29EC594();
  sub_1B29A3EB4(&qword_1E9C3A858);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299B3C8();
  sub_1B29A3EB4(&qword_1E9C3A860);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299B0C8();
  sub_1B29A3EB4(&qword_1E9C3A868);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  __int16 v5 = *(_WORD *)(v0 + 24);
  sub_1B29AEC7C(v1, v1[3]);
  sub_1B29EA490();
  sub_1B2E83A38();
  if ((v5 & 0x80) != 0)
  {
    sub_1B29EA4DC();
    sub_1B2E83618();
    sub_1B29EA528();
  }
  else
  {
    sub_1B29EA574();
    sub_1B2E83618();
    sub_1B29EA5C0();
  }
  sub_1B2E836D8();
  sub_1B299B798();
  v7(v6);
  sub_1B299B798();
  v9(v8);
  sub_1B29EC408();
  sub_1B29998C8();
}

void AssetRegistryAssetLocation.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  sub_1B29EC594();
  uint64_t v42 = v12;
  sub_1B29A3EB4(&qword_1E9C3A898);
  sub_1B299D278();
  uint64_t v44 = v14;
  uint64_t v45 = v13;
  MEMORY[0x1F4188790](v13);
  sub_1B29A0498();
  uint64_t v15 = sub_1B29A3EB4(&qword_1E9C3A8A0);
  sub_1B299D278();
  uint64_t v43 = v16;
  MEMORY[0x1F4188790](v17);
  sub_1B29A0480();
  sub_1B29A3EB4(&qword_1E9C3A8A8);
  sub_1B299D278();
  uint64_t v46 = v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v11[4];
  sub_1B29AEC7C(v11, v11[3]);
  sub_1B29EA490();
  sub_1B29EC4FC();
  if (a10) {
    goto LABEL_7;
  }
  v41[1] = v15;
  v41[2] = v10;
  if (!*(void *)(sub_1B2E835F8() + 16) || (uint64_t v23 = sub_1B29EC3E0(), sub_1B29B142C(v23), sub_1B29EC560(), v22))
  {
    sub_1B2E83288();
    sub_1B299E4D4();
    uint64_t v25 = v24;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v25 = &type metadata for AssetRegistryAssetLocation;
    sub_1B2E834F8();
    sub_1B29EC414();
    uint64_t v26 = sub_1B29EC5D4();
    v27(v26);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v28 = sub_1B29EC5A0();
    v29(v28);
LABEL_7:
    uint64_t v30 = (uint64_t)v11;
    goto LABEL_8;
  }
  if (v21)
  {
    LOBYTE(v47) = 1;
    sub_1B29EA4DC();
    sub_1B29EC46C();
    sub_1B29EA60C();
    sub_1B2E835B8();
    sub_1B299B798();
    v31();
    swift_unknownObjectRelease();
    sub_1B29EC36C();
    v32();
    uint64_t v36 = v47;
    uint64_t v37 = v48;
    uint64_t v38 = v49;
    if (v50) {
      int v33 = 129;
    }
    else {
      int v33 = 128;
    }
    int v39 = v33 | (v51 << 8);
  }
  else
  {
    LOBYTE(v47) = 0;
    sub_1B29EA574();
    sub_1B29EC5B4();
    sub_1B29EA658();
    sub_1B2E835B8();
    sub_1B299B798();
    v34();
    swift_unknownObjectRelease();
    sub_1B29EC36C();
    v35();
    uint64_t v36 = v47;
    uint64_t v37 = v48;
    uint64_t v38 = v49;
    int v39 = v50;
  }
  uint64_t v40 = v42;
  void *v42 = v36;
  v40[1] = v37;
  v40[2] = v38;
  *((_WORD *)v40 + 12) = v39;
  *((unsigned char *)v40 + 26) = BYTE2(v39);
  uint64_t v30 = (uint64_t)v11;
LABEL_8:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v30);
  sub_1B29998C8();
}

void sub_1B29E9DF8()
{
}

void sub_1B29E9E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  AssetRegistryAssetLocation.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1B29E9E28()
{
}

uint64_t sub_1B29E9E40(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7E69E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B29E9EA0()
{
  unint64_t result = qword_1E9C3A778;
  if (!qword_1E9C3A778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A778);
  }
  return result;
}

unint64_t sub_1B29E9EEC()
{
  unint64_t result = qword_1E9C3A780;
  if (!qword_1E9C3A780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A780);
  }
  return result;
}

unint64_t sub_1B29E9F38()
{
  unint64_t result = qword_1E9C3A790;
  if (!qword_1E9C3A790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A790);
  }
  return result;
}

unint64_t sub_1B29E9F84()
{
  unint64_t result = qword_1E9C3A798;
  if (!qword_1E9C3A798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A798);
  }
  return result;
}

unint64_t sub_1B29E9FD0()
{
  unint64_t result = qword_1EB7D91C8;
  if (!qword_1EB7D91C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D91C8);
  }
  return result;
}

unint64_t sub_1B29EA01C()
{
  unint64_t result = qword_1E9C3A7C0;
  if (!qword_1E9C3A7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A7C0);
  }
  return result;
}

unint64_t sub_1B29EA068()
{
  unint64_t result = qword_1E9C3A7C8;
  if (!qword_1E9C3A7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A7C8);
  }
  return result;
}

unint64_t sub_1B29EA0B4()
{
  unint64_t result = qword_1E9C3A7D0;
  if (!qword_1E9C3A7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A7D0);
  }
  return result;
}

unint64_t sub_1B29EA100()
{
  unint64_t result = qword_1E9C3A7D8;
  if (!qword_1E9C3A7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A7D8);
  }
  return result;
}

unint64_t sub_1B29EA14C()
{
  unint64_t result = qword_1E9C3A7E0;
  if (!qword_1E9C3A7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A7E0);
  }
  return result;
}

unint64_t sub_1B29EA198()
{
  unint64_t result = qword_1E9C3A800;
  if (!qword_1E9C3A800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A800);
  }
  return result;
}

unint64_t sub_1B29EA1E4()
{
  unint64_t result = qword_1E9C3A808;
  if (!qword_1E9C3A808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A808);
  }
  return result;
}

unint64_t sub_1B29EA230()
{
  unint64_t result = qword_1E9C3A810;
  if (!qword_1E9C3A810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A810);
  }
  return result;
}

unint64_t sub_1B29EA27C()
{
  unint64_t result = qword_1E9C3A820;
  if (!qword_1E9C3A820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A820);
  }
  return result;
}

unint64_t sub_1B29EA2C8()
{
  unint64_t result = qword_1E9C3A828;
  if (!qword_1E9C3A828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A828);
  }
  return result;
}

unint64_t sub_1B29EA314()
{
  unint64_t result = qword_1E9C3A830;
  if (!qword_1E9C3A830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A830);
  }
  return result;
}

unint64_t sub_1B29EA360()
{
  unint64_t result = qword_1E9C3A838;
  if (!qword_1E9C3A838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A838);
  }
  return result;
}

unint64_t sub_1B29EA3AC()
{
  unint64_t result = qword_1E9C3A848;
  if (!qword_1E9C3A848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A848);
  }
  return result;
}

unint64_t sub_1B29EA3F8()
{
  unint64_t result = qword_1E9C3A850;
  if (!qword_1E9C3A850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A850);
  }
  return result;
}

unint64_t sub_1B29EA444()
{
  unint64_t result = qword_1EB7D9BC0;
  if (!qword_1EB7D9BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9BC0);
  }
  return result;
}

unint64_t sub_1B29EA490()
{
  unint64_t result = qword_1E9C3A870;
  if (!qword_1E9C3A870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A870);
  }
  return result;
}

unint64_t sub_1B29EA4DC()
{
  unint64_t result = qword_1E9C3A878;
  if (!qword_1E9C3A878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A878);
  }
  return result;
}

unint64_t sub_1B29EA528()
{
  unint64_t result = qword_1E9C3A880;
  if (!qword_1E9C3A880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A880);
  }
  return result;
}

unint64_t sub_1B29EA574()
{
  unint64_t result = qword_1E9C3A888;
  if (!qword_1E9C3A888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A888);
  }
  return result;
}

unint64_t sub_1B29EA5C0()
{
  unint64_t result = qword_1E9C3A890;
  if (!qword_1E9C3A890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A890);
  }
  return result;
}

unint64_t sub_1B29EA60C()
{
  unint64_t result = qword_1E9C3A8B0;
  if (!qword_1E9C3A8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A8B0);
  }
  return result;
}

unint64_t sub_1B29EA658()
{
  unint64_t result = qword_1E9C3A8B8;
  if (!qword_1E9C3A8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A8B8);
  }
  return result;
}

unint64_t sub_1B29EA6A8()
{
  unint64_t result = qword_1E9C3A8C0;
  if (!qword_1E9C3A8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A8C0);
  }
  return result;
}

unint64_t sub_1B29EA6F8()
{
  unint64_t result = qword_1E9C3A8C8;
  if (!qword_1E9C3A8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A8C8);
  }
  return result;
}

unint64_t sub_1B29EA744(uint64_t a1)
{
  unint64_t result = sub_1B29EA76C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B29EA76C()
{
  unint64_t result = qword_1E9C3A8D0;
  if (!qword_1E9C3A8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A8D0);
  }
  return result;
}

unint64_t sub_1B29EA7B8(uint64_t a1)
{
  unint64_t result = sub_1B29EA7E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B29EA7E0()
{
  unint64_t result = qword_1E9C3A8D8;
  if (!qword_1E9C3A8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A8D8);
  }
  return result;
}

uint64_t sub_1B29EA82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29EAC60(a1, a2, a3, (uint64_t (*)(void))sub_1B29EA1E4, (uint64_t (*)(void))sub_1B29EA14C);
}

unint64_t sub_1B29EA85C()
{
  unint64_t result = qword_1E9C3A8E0;
  if (!qword_1E9C3A8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A8E0);
  }
  return result;
}

unint64_t sub_1B29EA8AC()
{
  unint64_t result = qword_1E9C3A8E8;
  if (!qword_1E9C3A8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A8E8);
  }
  return result;
}

unint64_t sub_1B29EA8F8(uint64_t a1)
{
  unint64_t result = sub_1B29EA920();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B29EA920()
{
  unint64_t result = qword_1E9C3A8F0;
  if (!qword_1E9C3A8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A8F0);
  }
  return result;
}

unint64_t sub_1B29EA96C(uint64_t a1)
{
  unint64_t result = sub_1B29EA994();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B29EA994()
{
  unint64_t result = qword_1E9C3A8F8;
  if (!qword_1E9C3A8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A8F8);
  }
  return result;
}

uint64_t sub_1B29EA9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29EAC60(a1, a2, a3, (uint64_t (*)(void))sub_1B29EA198, (uint64_t (*)(void))sub_1B29EA0B4);
}

unint64_t sub_1B29EAA0C(uint64_t a1)
{
  unint64_t result = sub_1B29EAA34();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B29EAA34()
{
  unint64_t result = qword_1E9C3A900;
  if (!qword_1E9C3A900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A900);
  }
  return result;
}

unint64_t sub_1B29EAA80(uint64_t a1)
{
  unint64_t result = sub_1B29EAAA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B29EAAA8()
{
  unint64_t result = qword_1E9C3A908;
  if (!qword_1E9C3A908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A908);
  }
  return result;
}

uint64_t sub_1B29EAAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29EAC60(a1, a2, a3, (uint64_t (*)(void))sub_1B29EA658, (uint64_t (*)(void))sub_1B29EA5C0);
}

unint64_t sub_1B29EAB20(uint64_t a1)
{
  unint64_t result = sub_1B29EAB48();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B29EAB48()
{
  unint64_t result = qword_1E9C3A910;
  if (!qword_1E9C3A910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A910);
  }
  return result;
}

uint64_t sub_1B29EAB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29EAC60(a1, a2, a3, (uint64_t (*)(void))sub_1B29EA60C, (uint64_t (*)(void))sub_1B29EA528);
}

unint64_t sub_1B29EABC0(uint64_t a1)
{
  unint64_t result = sub_1B29EABE8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B29EABE8()
{
  unint64_t result = qword_1E9C3A918;
  if (!qword_1E9C3A918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A918);
  }
  return result;
}

uint64_t sub_1B29EAC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29EAC60(a1, a2, a3, (uint64_t (*)(void))sub_1B29E62C4, (uint64_t (*)(void))sub_1B29E6278);
}

uint64_t sub_1B29EAC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

void type metadata accessor for AssetRegistryAcceptableBundleName()
{
}

uint64_t dispatch thunk of AssetRegistryAssetLocalLocationProtocol.localURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t destroy for AssetRegistryAssetLocation(uint64_t a1)
{
  return sub_1B29DAB98(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(_WORD *)(a1 + 24));
}

uint64_t initializeWithCopy for AssetRegistryAssetLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 26);
  __int16 v7 = *(_WORD *)(a2 + 24);
  sub_1B29DABBC(*(void *)a2, v4, v5, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 26) = v6;
  *(_WORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAssetLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 26);
  __int16 v7 = *(_WORD *)(a2 + 24);
  sub_1B29DABBC(*(void *)a2, v4, v5, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(_WORD *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 26) = v6;
  sub_1B29DAB98(v8, v9, v10, v11);
  return a1;
}

__n128 initializeWithTake for AssetRegistryAssetLocation.TrialAsset(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AssetRegistryAssetLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 26);
  __int16 v5 = *(_WORD *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  __int16 v9 = *(_WORD *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 26) = v4;
  sub_1B29DAB98(v6, v8, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7F && *(unsigned char *)(a1 + 27))
    {
      unsigned int v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      unsigned int v2 = (*(_WORD *)(a1 + 24) & 0x7E | (*(unsigned __int16 *)(a1 + 24) >> 7) & 1) ^ 0x7F;
      if (v2 >= 0x7E) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 27) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 27) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 26) = 0;
      *(_WORD *)(result + 24) = 2 * ((((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6)) & 0x7F);
    }
  }
  return result;
}

uint64_t sub_1B29EAF04(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 24) >> 7) & 1;
}

uint64_t sub_1B29EAF10(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 24);
  uint64_t result = a1 + 24;
  int v3 = *(unsigned __int8 *)(result + 2);
  *(_WORD *)uint64_t result = v2 & 0xFF7F;
  *(unsigned char *)(result + 2) = (v2 & 0xFFFFFF7F | (v3 << 16)) >> 16;
  return result;
}

uint64_t sub_1B29EAF30(uint64_t a1, char a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 24);
  uint64_t result = a1 + 24;
  unsigned int v4 = v3 & 0xFFFFFF01 | (*(unsigned __int8 *)(result + 2) << 16);
  *(_WORD *)uint64_t result = v3 & 0xFF01 | ((a2 & 1) << 7);
  *(unsigned char *)(result + 2) = BYTE2(v4);
  return result;
}

void type metadata accessor for AssetRegistryAssetLocation()
{
}

uint64_t destroy for AssetRegistryAssetLocation.LocalAsset()
{
  return sub_1B29DABB0();
}

uint64_t initializeWithCopy for AssetRegistryAssetLocation.LocalAsset(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  char v6 = *((unsigned char *)a2 + 24);
  sub_1B29DABD4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAssetLocation.LocalAsset(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  char v6 = *((unsigned char *)a2 + 24);
  sub_1B29DABD4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B29DABB0();
  return a1;
}

uint64_t assignWithTake for AssetRegistryAssetLocation.LocalAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B29DABB0();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation.LocalAsset(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation.LocalAsset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B29EB120(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1B29EB128(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

void type metadata accessor for AssetRegistryAssetLocation.LocalAsset()
{
}

void *initializeBufferWithCopyOfBuffer for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset()
{
}

void type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.ValidityError()
{
}

uint64_t destroy for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s20IntelligencePlatform26AssetRegistryAssetLocationO10LocalAssetO18LocalRelativeAssetVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset()
{
}

void type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ValidityError()
{
}

void type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError()
{
}

uint64_t initializeWithCopy for AssetRegistryAssetLocation.TrialAsset(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAssetLocation.TrialAsset(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  return a1;
}

uint64_t assignWithTake for AssetRegistryAssetLocation.TrialAsset(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation.TrialAsset(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 27))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation.TrialAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 27) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 27) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AssetRegistryAssetLocation.TrialAsset()
{
}

uint64_t sub_1B29EB518()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for AssetRegistryAssetLocation.TrialAsset.ValidityError()
{
  return sub_1B29EB530();
}

uint64_t sub_1B29EB530()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s20IntelligencePlatform26AssetRegistryAssetLocationO10TrialAssetV13ValidityErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1B29EB518();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAssetLocation.TrialAsset.ValidityError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1B29EB518();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B29EB530();
  return a1;
}

uint64_t assignWithTake for AssetRegistryAssetLocation.TrialAsset.ValidityError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B29EB530();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation.TrialAsset.ValidityError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation.TrialAsset.ValidityError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B29EB6A8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

void type metadata accessor for AssetRegistryAssetLocation.TrialAsset.ValidityError()
{
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.CodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.LocalAssetCodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.LocalAssetCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.TrialAssetCodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.TrialAssetCodingKeys;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation.TrialAsset.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AssetRegistryAssetLocation.TrialAsset.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29EB844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.TrialAsset.CodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.TrialAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.LocalAsset.CodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.LocalAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.LocalAsset.AbsoluteCodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.LocalAsset.AbsoluteCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.LocalAsset.RelativeToBundleCodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.LocalAsset.RelativeToBundleCodingKeys;
}

unsigned char *_s20IntelligencePlatform33AssetRegistryAcceptableBundleNameOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29EB978);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.CodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.CodingKeys;
}

unsigned char *_s20IntelligencePlatform26AssetRegistryAssetLocationO10LocalAssetO18LocalRelativeAssetV13ResourceErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B29EBA4CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.CodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.CodingKeys;
}

unint64_t sub_1B29EBA88()
{
  unint64_t result = qword_1E9C3A920;
  if (!qword_1E9C3A920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A920);
  }
  return result;
}

unint64_t sub_1B29EBAD8()
{
  unint64_t result = qword_1E9C3A928;
  if (!qword_1E9C3A928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A928);
  }
  return result;
}

unint64_t sub_1B29EBB28()
{
  unint64_t result = qword_1E9C3A930;
  if (!qword_1E9C3A930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A930);
  }
  return result;
}

unint64_t sub_1B29EBB78()
{
  unint64_t result = qword_1E9C3A938;
  if (!qword_1E9C3A938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A938);
  }
  return result;
}

unint64_t sub_1B29EBBC8()
{
  unint64_t result = qword_1E9C3A940;
  if (!qword_1E9C3A940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A940);
  }
  return result;
}

unint64_t sub_1B29EBC18()
{
  unint64_t result = qword_1E9C3A948;
  if (!qword_1E9C3A948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A948);
  }
  return result;
}

unint64_t sub_1B29EBC68()
{
  unint64_t result = qword_1E9C3A950;
  if (!qword_1E9C3A950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A950);
  }
  return result;
}

unint64_t sub_1B29EBCB8()
{
  unint64_t result = qword_1E9C3A958;
  if (!qword_1E9C3A958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A958);
  }
  return result;
}

unint64_t sub_1B29EBD08()
{
  unint64_t result = qword_1E9C3A960;
  if (!qword_1E9C3A960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A960);
  }
  return result;
}

unint64_t sub_1B29EBD58()
{
  unint64_t result = qword_1E9C3A968;
  if (!qword_1E9C3A968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A968);
  }
  return result;
}

unint64_t sub_1B29EBDA8()
{
  unint64_t result = qword_1E9C3A970;
  if (!qword_1E9C3A970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A970);
  }
  return result;
}

unint64_t sub_1B29EBDF8()
{
  unint64_t result = qword_1E9C3A978;
  if (!qword_1E9C3A978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A978);
  }
  return result;
}

unint64_t sub_1B29EBE48()
{
  unint64_t result = qword_1E9C3A980;
  if (!qword_1E9C3A980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A980);
  }
  return result;
}

unint64_t sub_1B29EBE98()
{
  unint64_t result = qword_1E9C3A988;
  if (!qword_1E9C3A988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A988);
  }
  return result;
}

unint64_t sub_1B29EBEE8()
{
  unint64_t result = qword_1E9C3A990;
  if (!qword_1E9C3A990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A990);
  }
  return result;
}

unint64_t sub_1B29EBF38()
{
  unint64_t result = qword_1E9C3A998;
  if (!qword_1E9C3A998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A998);
  }
  return result;
}

unint64_t sub_1B29EBF88()
{
  unint64_t result = qword_1E9C3A9A0;
  if (!qword_1E9C3A9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A9A0);
  }
  return result;
}

unint64_t sub_1B29EBFD8()
{
  unint64_t result = qword_1E9C3A9A8;
  if (!qword_1E9C3A9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A9A8);
  }
  return result;
}

unint64_t sub_1B29EC028()
{
  unint64_t result = qword_1E9C3A9B0;
  if (!qword_1E9C3A9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A9B0);
  }
  return result;
}

unint64_t sub_1B29EC078()
{
  unint64_t result = qword_1E9C3A9B8;
  if (!qword_1E9C3A9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A9B8);
  }
  return result;
}

unint64_t sub_1B29EC0C8()
{
  unint64_t result = qword_1E9C3A9C0;
  if (!qword_1E9C3A9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A9C0);
  }
  return result;
}

unint64_t sub_1B29EC118()
{
  unint64_t result = qword_1E9C3A9C8;
  if (!qword_1E9C3A9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A9C8);
  }
  return result;
}

unint64_t sub_1B29EC168()
{
  unint64_t result = qword_1E9C3A9D0;
  if (!qword_1E9C3A9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A9D0);
  }
  return result;
}

unint64_t sub_1B29EC1B8()
{
  unint64_t result = qword_1E9C3A9D8;
  if (!qword_1E9C3A9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A9D8);
  }
  return result;
}

unint64_t sub_1B29EC208()
{
  unint64_t result = qword_1E9C3A9E0;
  if (!qword_1E9C3A9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A9E0);
  }
  return result;
}

unint64_t sub_1B29EC258()
{
  unint64_t result = qword_1E9C3A9E8;
  if (!qword_1E9C3A9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A9E8);
  }
  return result;
}

unint64_t sub_1B29EC2A8()
{
  unint64_t result = qword_1E9C3A9F0;
  if (!qword_1E9C3A9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A9F0);
  }
  return result;
}

unint64_t sub_1B29EC2F4()
{
  unint64_t result = qword_1EB7D91C0;
  if (!qword_1EB7D91C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D91C0);
  }
  return result;
}

uint64_t sub_1B29EC37C(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1B29EC398()
{
  return sub_1B2E822C8();
}

void sub_1B29EC3B8()
{
  uint64_t v2 = *(void *)(v0 + 8);
  *(void *)(v1 - 96) = *(void *)(v0 + 16);
  *(void *)(v1 - 88) = v2;
}

uint64_t sub_1B29EC3E0()
{
  return 1;
}

uint64_t sub_1B29EC414()
{
  return sub_1B2E83278();
}

uint64_t sub_1B29EC440()
{
  *(unsigned char *)(v0 - 67) = 1;
  return sub_1B2E83688();
}

uint64_t sub_1B29EC46C()
{
  return sub_1B2E834E8();
}

unint64_t sub_1B29EC494()
{
  *(void *)(v0 - 112) = 47;
  *(void *)(v0 - 104) = 0xE100000000000000;
  return sub_1B29DAC38();
}

unint64_t sub_1B29EC4B0()
{
  return sub_1B29DAC38();
}

uint64_t sub_1B29EC4D4()
{
  return v0 - 112;
}

uint64_t sub_1B29EC4E4()
{
  return v0;
}

uint64_t sub_1B29EC4FC()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B29EC514()
{
  return v0;
}

uint64_t sub_1B29EC52C()
{
  return v0;
}

uint64_t sub_1B29EC544()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B29EC560()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29EC580()
{
  return v0;
}

void sub_1B29EC594()
{
  *(void *)(v1 - 72) = v0;
}

uint64_t sub_1B29EC5A0()
{
  return v0;
}

uint64_t sub_1B29EC5B4()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B29EC5D4()
{
  return v0;
}

uint64_t sub_1B29EC5E8()
{
  *(unsigned char *)(v0 - 67) = 1;
  return v0 - 67;
}

uint64_t AssetRegistryRemoteBackendType.hash(into:)()
{
  return sub_1B2E83998();
}

BOOL static AssetRegistryRemoteBackendType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AssetRegistryRemoteBackendType.hashValue.getter()
{
  return sub_1B2E839E8();
}

unint64_t sub_1B29EC6A8()
{
  unint64_t result = qword_1E9C3A9F8;
  if (!qword_1E9C3A9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3A9F8);
  }
  return result;
}

uint64_t dispatch thunk of AssetRegistryBackend.assetEntry(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

unsigned char *storeEnumTagSinglePayload for AssetRegistryRemoteBackendType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29EC7ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryRemoteBackendType()
{
  return &type metadata for AssetRegistryRemoteBackendType;
}

uint64_t dispatch thunk of static AssetRegistryRemoteBackend.assetRegistryRemoteBackendType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AssetRegistryRemoteWritableBackend.overrideAssetEntry(for:in:overrideAssetEntryParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t AssetRegistryBasicServer.__allocating_init(jsonDecoder:)(uint64_t a1)
{
  type metadata accessor for AssetRegistryServerConfigLoader();
  uint64_t v3 = sub_1B29F83E4();
  if (v1) {
    return swift_release();
  }
  uint64_t v5 = v3;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v5;
  *(void *)(result + 24) = a1;
  return result;
}

uint64_t AssetRegistryBasicServer.assetEntryResult(for:in:localOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_1B29F51DC(v5, a3, a4, a1, a2, a5);
}

uint64_t sub_1B29EC954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t result = sub_1B29F8458(a2, a3, *(void *)(a1 + 24));
  if (!v6)
  {
    uint64_t v15 = v13;
    if (v13)
    {
      uint64_t v16 = result;
      sub_1B29EFBCC(a4, a5, v14, (uint64_t)&v23);
      uint64_t result = sub_1B29E4D3C(v16, v15);
      uint64_t v17 = v27;
      if (v27 != 1)
      {
        uint64_t v20 = v26;
        int v21 = v25;
        uint64_t v22 = v24;
        *(_OWORD *)a6 = v23;
        *(void *)(a6 + 16) = v22;
        *(unsigned char *)(a6 + 26) = BYTE2(v21);
        *(_WORD *)(a6 + 24) = v21;
        *(void *)(a6 + 32) = v20;
        *(void *)(a6 + 40) = v17;
        return result;
      }
      sub_1B29ECB4C();
      swift_allocError();
      *(void *)uint64_t v18 = a4;
      *(void *)(v18 + 8) = a5;
      *(unsigned char *)(v18 + 16) = 1;
    }
    else
    {
      sub_1B29ECB4C();
      swift_allocError();
      *(void *)uint64_t v19 = a2;
      *(void *)(v19 + 8) = a3;
      *(unsigned char *)(v19 + 16) = 0;
    }
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  return result;
}

uint64_t AssetRegistryBasicServer.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t AssetRegistryBasicServer.__deallocating_deinit()
{
  AssetRegistryBasicServer.deinit();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetRegistryBasicServer()
{
  return self;
}

uint64_t method lookup function for AssetRegistryBasicServer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AssetRegistryBasicServer);
}

unint64_t sub_1B29ECB4C()
{
  unint64_t result = qword_1E9C37528[0];
  if (!qword_1E9C37528[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C37528);
  }
  return result;
}

uint64_t sub_1B29ECB98(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001B2E96AC0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x4E64497465737361 && a2 == 0xEF646E756F46746FLL;
    if (v5 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001B2E96AE0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v6 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v6) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B29ECD08(char a1)
{
  uint64_t result = 0xD000000000000010;
  if (a1)
  {
    if (a1 == 1) {
      return 0x4E64497465737361;
    }
    else {
      return 0xD000000000000013;
    }
  }
  return result;
}

uint64_t sub_1B29ECD74()
{
  return _s20IntelligencePlatform34LocationEmbedderInferenceInterfaceO6ErrorsO9InitErrorO9hashValueSivg_0();
}

uint64_t sub_1B29ECD8C(uint64_t a1)
{
  unint64_t v2 = sub_1B29ED2E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29ECDC8(uint64_t a1)
{
  unint64_t v2 = sub_1B29ED2E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29ECE04()
{
  return sub_1B29A77E4();
}

uint64_t sub_1B29ECE20()
{
  return sub_1B29ECD08(*v0);
}

uint64_t sub_1B29ECE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29ECB98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29ECE50(uint64_t a1)
{
  unint64_t v2 = sub_1B29ED24C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29ECE8C(uint64_t a1)
{
  unint64_t v2 = sub_1B29ED24C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29ECEC8(uint64_t a1)
{
  unint64_t v2 = sub_1B29ED330();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29ECF04(uint64_t a1)
{
  unint64_t v2 = sub_1B29ED330();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29ECF40(uint64_t a1)
{
  unint64_t v2 = sub_1B29ED298();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29ECF7C(uint64_t a1)
{
  unint64_t v2 = sub_1B29ED298();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AssetRegistryLookupError.encode(to:)()
{
  sub_1B299F300();
  unsigned int v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3AA00);
  sub_1B299D278();
  uint64_t v24 = v6;
  uint64_t v25 = v5;
  MEMORY[0x1F4188790](v5);
  sub_1B29B1CCC(v7, v19);
  sub_1B29A3EB4(&qword_1E9C3AA08);
  sub_1B299D278();
  uint64_t v21 = v9;
  uint64_t v22 = v8;
  MEMORY[0x1F4188790](v8);
  sub_1B299B0C8();
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C3AA10);
  sub_1B299D278();
  uint64_t v20 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1B29A0480();
  sub_1B29A3EB4(&qword_1E9C3AA18);
  sub_1B299D278();
  MEMORY[0x1F4188790](v13);
  sub_1B29A415C();
  int v14 = *(unsigned __int8 *)(v0 + 16);
  sub_1B29AEC7C(v4, v4[3]);
  sub_1B29ED24C();
  sub_1B2E83A38();
  if (v14)
  {
    if (v14 == 1)
    {
      sub_1B29ED2E4();
      sub_1B29A252C();
      uint64_t v15 = v22;
      sub_1B2E83688();
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      uint64_t v17 = v2;
    }
    else
    {
      sub_1B29ED298();
      sub_1B29A252C();
      uint64_t v15 = v25;
      sub_1B29EFB7C();
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      uint64_t v17 = v23;
    }
    v16(v17, v15);
  }
  else
  {
    sub_1B29ED330();
    sub_1B29A252C();
    sub_1B2E83688();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v1, v10);
  }
  sub_1B299B798();
  v18();
  sub_1B29998C8();
}

unint64_t sub_1B29ED24C()
{
  unint64_t result = qword_1E9C3AA20;
  if (!qword_1E9C3AA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AA20);
  }
  return result;
}

unint64_t sub_1B29ED298()
{
  unint64_t result = qword_1E9C3AA28;
  if (!qword_1E9C3AA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AA28);
  }
  return result;
}

unint64_t sub_1B29ED2E4()
{
  unint64_t result = qword_1E9C3AA30;
  if (!qword_1E9C3AA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AA30);
  }
  return result;
}

unint64_t sub_1B29ED330()
{
  unint64_t result = qword_1E9C3AA38;
  if (!qword_1E9C3AA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AA38);
  }
  return result;
}

void AssetRegistryLookupError.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v44 = v3;
  sub_1B29A3EB4(&qword_1E9C3AA40);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29EFB60(v5, v42);
  sub_1B29A3EB4(&qword_1E9C3AA48);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C3AA50);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299B0C8();
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C3AA58);
  sub_1B299D278();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  sub_1B299E4A0();
  uint64_t v14 = v13 - v12;
  uint64_t v45 = v2;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B29ED24C();
  sub_1B2E83A18();
  if (v0)
  {
    uint64_t v15 = (uint64_t)v2;
LABEL_11:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v15);
    goto LABEL_12;
  }
  uint64_t v46 = v10;
  uint64_t v16 = v14;
  uint64_t v17 = sub_1B2E835F8();
  uint64_t v18 = v8;
  if (!*(void *)(v17 + 16))
  {
    uint64_t v15 = (uint64_t)v2;
    uint64_t v24 = v46;
LABEL_10:
    uint64_t v25 = sub_1B2E83288();
    swift_allocError();
    uint64_t v27 = v26;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v27 = &type metadata for AssetRegistryLookupError;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x1E4FBBA70], v25);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v16, v18);
    goto LABEL_11;
  }
  uint64_t v43 = v8;
  int v19 = *(unsigned __int8 *)(v17 + 32);
  sub_1B29B142C(1);
  uint64_t v21 = v20;
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (v21 != v23 >> 1)
  {
    uint64_t v15 = (uint64_t)v45;
    uint64_t v24 = v46;
    uint64_t v18 = v43;
    goto LABEL_10;
  }
  if (v19)
  {
    if (v19 == 1)
    {
      sub_1B29ED2E4();
      sub_1B299F340();
      uint64_t v28 = sub_1B2E83568();
      uint64_t v30 = v29;
      uint64_t v31 = sub_1B29EFB28();
      v32(v31);
      uint64_t v33 = (uint64_t)v45;
    }
    else
    {
      sub_1B29ED298();
      sub_1B299F340();
      uint64_t v33 = (uint64_t)v45;
      uint64_t v28 = sub_1B2E83568();
      uint64_t v30 = v34;
      uint64_t v35 = sub_1B29EFB28();
      v36(v35);
    }
  }
  else
  {
    sub_1B29ED330();
    sub_1B299F340();
    uint64_t v33 = (uint64_t)v45;
    uint64_t v28 = sub_1B2E83568();
    uint64_t v30 = v37;
    uint64_t v38 = sub_1B29EFB28();
    v39(v38);
  }
  swift_unknownObjectRelease();
  uint64_t v40 = sub_1B299B7C0();
  v41(v40);
  *(void *)uint64_t v44 = v28;
  *(void *)(v44 + 8) = v30;
  *(unsigned char *)(v44 + 16) = v19;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v33);
LABEL_12:
  sub_1B29998C8();
}

uint64_t sub_1B29ED8EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000023 && a2 == 0x80000001B2E96B00 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B2E96AC0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v5 = a1 == 0x4E64497465737361 && a2 == 0xEF646E756F46746FLL;
    if (v5 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001B2E96AE0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v6 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v6) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_1B29EDAB4(char a1)
{
  unint64_t result = 0xD000000000000023;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x4E64497465737361;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B29EDB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 2;
  return swift_bridgeObjectRetain();
}

void sub_1B29EDB74()
{
}

void sub_1B29EDB8C()
{
}

uint64_t sub_1B29EDBA4(uint64_t a1)
{
  unint64_t v2 = sub_1B29EE7FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29EDBE0(uint64_t a1)
{
  unint64_t v2 = sub_1B29EE7FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1B29EDC1C()
{
  return sub_1B29EDAB4(*v0);
}

uint64_t sub_1B29EDC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29ED8EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29EDC4C(uint64_t a1)
{
  unint64_t v2 = sub_1B29EE764();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29EDC88(uint64_t a1)
{
  unint64_t v2 = sub_1B29EE764();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29EDCC4(uint64_t a1)
{
  unint64_t v2 = sub_1B29EE848();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29EDD00(uint64_t a1)
{
  unint64_t v2 = sub_1B29EE848();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29EDD3C(uint64_t a1)
{
  unint64_t v2 = sub_1B29EE7B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29EDD78(uint64_t a1)
{
  unint64_t v2 = sub_1B29EE7B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29EDDB4(uint64_t a1)
{
  unint64_t v2 = sub_1B29EE894();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29EDDF0(uint64_t a1)
{
  unint64_t v2 = sub_1B29EE894();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AssetRegistryOverrideError.encode(to:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  sub_1B29A3EB4(&qword_1E9C3AA60);
  sub_1B299D278();
  uint64_t v32 = v5;
  uint64_t v33 = v4;
  MEMORY[0x1F4188790](v4);
  sub_1B29B1CCC(v6, v24);
  sub_1B29A3EB4(&qword_1E9C3AA68);
  sub_1B299D278();
  uint64_t v29 = v8;
  uint64_t v30 = v7;
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  uint64_t v28 = v9;
  sub_1B29A3EB4(&qword_1E9C3AA70);
  sub_1B299D278();
  uint64_t v26 = v11;
  uint64_t v27 = v10;
  MEMORY[0x1F4188790](v10);
  sub_1B29A0480();
  uint64_t v12 = sub_1B29A3EB4(&qword_1E9C3AA78);
  sub_1B299D278();
  uint64_t v25 = v13;
  MEMORY[0x1F4188790](v14);
  sub_1B299E4A0();
  uint64_t v17 = v16 - v15;
  sub_1B29A3EB4(&qword_1E9C3AA80);
  sub_1B299D278();
  MEMORY[0x1F4188790](v18);
  sub_1B29A415C();
  uint64_t v19 = *(unsigned __int8 *)(v0 + 16);
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B29EE764();
  sub_1B2E83A38();
  switch(v19)
  {
    case 1:
      sub_1B29EE848();
      sub_1B29A252C();
      sub_1B2E83688();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v1, v27);
      break;
    case 2:
      sub_1B29EE7FC();
      uint64_t v20 = v28;
      sub_1B29A252C();
      uint64_t v21 = v30;
      sub_1B29EFB7C();
      uint64_t v22 = v29;
      goto LABEL_5;
    case 3:
      sub_1B29EE7B0();
      uint64_t v20 = v31;
      sub_1B29A252C();
      uint64_t v21 = v33;
      sub_1B29EFB7C();
      uint64_t v22 = v32;
LABEL_5:
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
      break;
    default:
      sub_1B29EE894();
      sub_1B29A252C();
      sub_1B2E83688();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v17, v12);
      break;
  }
  sub_1B299B798();
  v23();
  sub_1B29998C8();
}

void AssetRegistryOverrideError.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v59 = v3;
  uint64_t v55 = sub_1B29A3EB4(&qword_1E9C3AAB0);
  sub_1B299D278();
  uint64_t v58 = v4;
  MEMORY[0x1F4188790](v5);
  sub_1B29EFB60(v6, v51);
  sub_1B29A3EB4(&qword_1E9C3AAB8);
  sub_1B299D278();
  uint64_t v56 = v8;
  uint64_t v57 = v7;
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  uint64_t v60 = v9;
  sub_1B29A3EB4(&qword_1E9C3AAC0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v10);
  sub_1B29A0480();
  uint64_t v11 = sub_1B29A3EB4(&qword_1E9C3AAC8);
  sub_1B299D278();
  uint64_t v54 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1B299E4A0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_1B29A3EB4(&qword_1E9C3AAD0);
  sub_1B299D278();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  sub_1B299E4A0();
  uint64_t v23 = v22 - v21;
  uint64_t v62 = (uint64_t)v2;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B29EE764();
  sub_1B2E83A18();
  if (v0) {
    goto LABEL_12;
  }
  uint64_t v52 = v11;
  uint64_t v53 = v16;
  uint64_t v24 = v60;
  uint64_t v63 = v19;
  uint64_t v25 = v23;
  uint64_t v26 = sub_1B2E835F8();
  if (!*(void *)(v26 + 16))
  {
LABEL_8:
    uint64_t v39 = sub_1B2E83288();
    swift_allocError();
    uint64_t v41 = v40;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v41 = &type metadata for AssetRegistryOverrideError;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v39 - 8) + 104))(v41, *MEMORY[0x1E4FBBA70], v39);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v25, v17);
    goto LABEL_12;
  }
  uint64_t v27 = v17;
  uint64_t v28 = v25;
  uint64_t v29 = *(unsigned __int8 *)(v26 + 32);
  sub_1B29B142C(1);
  uint64_t v31 = v30;
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  if (v31 != v33 >> 1)
  {
    uint64_t v17 = v27;
    goto LABEL_8;
  }
  char v34 = v29;
  uint64_t v35 = v29;
  uint64_t v36 = v27;
  switch(v35)
  {
    case 1:
      sub_1B29EE848();
      sub_1B29EFB40();
      uint64_t v42 = sub_1B29EFB98();
      uint64_t v44 = v46;
      uint64_t v47 = sub_1B29EFBB4();
      v48(v47);
      uint64_t v38 = v63;
      break;
    case 2:
      sub_1B29EE7FC();
      sub_1B29EFB40();
      uint64_t v37 = v57;
      uint64_t v38 = v63;
      uint64_t v42 = sub_1B29EFB98();
      uint64_t v44 = v49;
      uint64_t v45 = v56;
      goto LABEL_13;
    case 3:
      sub_1B29EE7B0();
      sub_1B29EFB40();
      uint64_t v42 = sub_1B2E83568();
      uint64_t v38 = v63;
      uint64_t v44 = v50;
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v61, v55);
      break;
    default:
      sub_1B29EE894();
      uint64_t v24 = v53;
      sub_1B29EFB40();
      uint64_t v37 = v52;
      uint64_t v38 = v63;
      uint64_t v42 = sub_1B29EFB98();
      uint64_t v44 = v43;
      uint64_t v45 = v54;
LABEL_13:
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v24, v37);
      break;
  }
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v28, v36);
  *(void *)uint64_t v59 = v42;
  *(void *)(v59 + 8) = v44;
  *(unsigned char *)(v59 + 16) = v34;
LABEL_12:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v62);
  sub_1B29998C8();
}

uint64_t sub_1B29EE720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 3;
  return swift_bridgeObjectRetain();
}

void sub_1B29EE734()
{
}

void sub_1B29EE74C()
{
}

unint64_t sub_1B29EE764()
{
  unint64_t result = qword_1E9C3AA88;
  if (!qword_1E9C3AA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AA88);
  }
  return result;
}

unint64_t sub_1B29EE7B0()
{
  unint64_t result = qword_1E9C3AA90;
  if (!qword_1E9C3AA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AA90);
  }
  return result;
}

unint64_t sub_1B29EE7FC()
{
  unint64_t result = qword_1E9C3AA98;
  if (!qword_1E9C3AA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AA98);
  }
  return result;
}

unint64_t sub_1B29EE848()
{
  unint64_t result = qword_1E9C3AAA0;
  if (!qword_1E9C3AAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AAA0);
  }
  return result;
}

unint64_t sub_1B29EE894()
{
  unint64_t result = qword_1E9C3AAA8;
  if (!qword_1E9C3AAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AAA8);
  }
  return result;
}

uint64_t sub_1B29EE8E0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29EE9F8(a1, a2, a3, (uint64_t (*)(void))sub_1B29EE920, (uint64_t (*)(void))sub_1B29EE96C, (uint64_t (*)(void))sub_1B29ECB4C);
}

unint64_t sub_1B29EE920()
{
  unint64_t result = qword_1E9C37520;
  if (!qword_1E9C37520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37520);
  }
  return result;
}

unint64_t sub_1B29EE96C()
{
  unint64_t result = qword_1E9C37518;
  if (!qword_1E9C37518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37518);
  }
  return result;
}

uint64_t sub_1B29EE9B8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29EE9F8(a1, a2, a3, (uint64_t (*)(void))sub_1B29EEA4C, (uint64_t (*)(void))sub_1B29EEA98, (uint64_t (*)(void))sub_1B29EEAE4);
}

uint64_t sub_1B29EE9F8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1B29EEA4C()
{
  unint64_t result = qword_1E9C3AAD8;
  if (!qword_1E9C3AAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AAD8);
  }
  return result;
}

unint64_t sub_1B29EEA98()
{
  unint64_t result = qword_1E9C3AAE0;
  if (!qword_1E9C3AAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AAE0);
  }
  return result;
}

unint64_t sub_1B29EEAE4()
{
  unint64_t result = qword_1E9C3AAE8;
  if (!qword_1E9C3AAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AAE8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AssetRegistryXPCError(void *a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for AssetRegistryXPCError(id *a1)
{
}

void **assignWithCopy for AssetRegistryXPCError(void **a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

void *initializeWithTake for TrialAssetManager.RefreshPolicy(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void **assignWithTake for AssetRegistryXPCError(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryXPCError(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryXPCError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AssetRegistryXPCError()
{
}

uint64_t dispatch thunk of static AssetRegistryServiceError.internalServerError(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t initializeBufferWithCopyOfBuffer for AssetRegistryLookupError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B29EED84(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1B29EEC9C);
}

uint64_t sub_1B29EEC9C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for AssetRegistryLookupError(uint64_t a1)
{
  return sub_1B29EECC4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1B29EECC4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *assignWithCopy for AssetRegistryLookupError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B29EEE00(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1B29EEC9C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B29EECC4);
}

uint64_t *assignWithTake for AssetRegistryLookupError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29EEE84(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B29EECC4);
}

void type metadata accessor for AssetRegistryLookupError()
{
}

uint64_t initializeBufferWithCopyOfBuffer for AssetRegistryOverrideError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B29EED84(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1B29EED44);
}

uint64_t sub_1B29EED44(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for AssetRegistryOverrideError(uint64_t a1)
{
  return sub_1B29EED6C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1B29EED6C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B29EED84(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for AssetRegistryOverrideError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B29EEE00(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1B29EED44, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B29EED6C);
}

uint64_t *sub_1B29EEE00(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for AssetRegistryOverrideError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29EEE84(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B29EED6C);
}

uint64_t *sub_1B29EEE84(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryOverrideError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryOverrideError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

void type metadata accessor for AssetRegistryOverrideError()
{
}

unsigned char *storeEnumTagSinglePayload for AssetRegistryOverrideError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29EF02CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideError.CodingKeys()
{
  return &type metadata for AssetRegistryOverrideError.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideError.LackingOverrideEntitlementForDomainCodingKeys()
{
  return &type metadata for AssetRegistryOverrideError.LackingOverrideEntitlementForDomainCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideError.DomainIdNotFoundCodingKeys()
{
  return &type metadata for AssetRegistryOverrideError.DomainIdNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideError.AssetIdNotFoundCodingKeys()
{
  return &type metadata for AssetRegistryOverrideError.AssetIdNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideError.InternalServerErrorCodingKeys()
{
  return &type metadata for AssetRegistryOverrideError.InternalServerErrorCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AssetRegistryLookupError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29EF174);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryLookupError.CodingKeys()
{
  return &type metadata for AssetRegistryLookupError.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryLookupError.DomainIdNotFoundCodingKeys()
{
  return &type metadata for AssetRegistryLookupError.DomainIdNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryLookupError.AssetIdNotFoundCodingKeys()
{
  return &type metadata for AssetRegistryLookupError.AssetIdNotFoundCodingKeys;
}

unsigned char *_s20IntelligencePlatform26AssetRegistryOverrideErrorO45LackingOverrideEntitlementForDomainCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B29EF268);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryLookupError.InternalServerErrorCodingKeys()
{
  return &type metadata for AssetRegistryLookupError.InternalServerErrorCodingKeys;
}

unint64_t sub_1B29EF2A4()
{
  unint64_t result = qword_1E9C3AAF0;
  if (!qword_1E9C3AAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AAF0);
  }
  return result;
}

unint64_t sub_1B29EF2F4()
{
  unint64_t result = qword_1E9C3AAF8;
  if (!qword_1E9C3AAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AAF8);
  }
  return result;
}

unint64_t sub_1B29EF344()
{
  unint64_t result = qword_1E9C3AB00;
  if (!qword_1E9C3AB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB00);
  }
  return result;
}

unint64_t sub_1B29EF394()
{
  unint64_t result = qword_1E9C3AB08;
  if (!qword_1E9C3AB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB08);
  }
  return result;
}

unint64_t sub_1B29EF3E4()
{
  unint64_t result = qword_1E9C3AB10;
  if (!qword_1E9C3AB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB10);
  }
  return result;
}

unint64_t sub_1B29EF434()
{
  unint64_t result = qword_1E9C3AB18;
  if (!qword_1E9C3AB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB18);
  }
  return result;
}

unint64_t sub_1B29EF484()
{
  unint64_t result = qword_1E9C3AB20;
  if (!qword_1E9C3AB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB20);
  }
  return result;
}

unint64_t sub_1B29EF4D4()
{
  unint64_t result = qword_1E9C3AB28;
  if (!qword_1E9C3AB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB28);
  }
  return result;
}

unint64_t sub_1B29EF524()
{
  unint64_t result = qword_1E9C3AB30;
  if (!qword_1E9C3AB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB30);
  }
  return result;
}

unint64_t sub_1B29EF574()
{
  unint64_t result = qword_1E9C3AB38;
  if (!qword_1E9C3AB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB38);
  }
  return result;
}

unint64_t sub_1B29EF5C4()
{
  unint64_t result = qword_1E9C3AB40;
  if (!qword_1E9C3AB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB40);
  }
  return result;
}

unint64_t sub_1B29EF614()
{
  unint64_t result = qword_1E9C3AB48;
  if (!qword_1E9C3AB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB48);
  }
  return result;
}

unint64_t sub_1B29EF664()
{
  unint64_t result = qword_1E9C3AB50;
  if (!qword_1E9C3AB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB50);
  }
  return result;
}

unint64_t sub_1B29EF6B4()
{
  unint64_t result = qword_1E9C3AB58;
  if (!qword_1E9C3AB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB58);
  }
  return result;
}

unint64_t sub_1B29EF704()
{
  unint64_t result = qword_1E9C3AB60;
  if (!qword_1E9C3AB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB60);
  }
  return result;
}

unint64_t sub_1B29EF754()
{
  unint64_t result = qword_1E9C3AB68;
  if (!qword_1E9C3AB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB68);
  }
  return result;
}

unint64_t sub_1B29EF7A4()
{
  unint64_t result = qword_1E9C3AB70;
  if (!qword_1E9C3AB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB70);
  }
  return result;
}

unint64_t sub_1B29EF7F4()
{
  unint64_t result = qword_1E9C3AB78;
  if (!qword_1E9C3AB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB78);
  }
  return result;
}

unint64_t sub_1B29EF844()
{
  unint64_t result = qword_1E9C3AB80;
  if (!qword_1E9C3AB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB80);
  }
  return result;
}

unint64_t sub_1B29EF894()
{
  unint64_t result = qword_1E9C3AB88;
  if (!qword_1E9C3AB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB88);
  }
  return result;
}

unint64_t sub_1B29EF8E4()
{
  unint64_t result = qword_1E9C3AB90;
  if (!qword_1E9C3AB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB90);
  }
  return result;
}

unint64_t sub_1B29EF934()
{
  unint64_t result = qword_1E9C3AB98;
  if (!qword_1E9C3AB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AB98);
  }
  return result;
}

unint64_t sub_1B29EF984()
{
  unint64_t result = qword_1E9C3ABA0;
  if (!qword_1E9C3ABA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ABA0);
  }
  return result;
}

unint64_t sub_1B29EF9D4()
{
  unint64_t result = qword_1E9C3ABA8;
  if (!qword_1E9C3ABA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ABA8);
  }
  return result;
}

unint64_t sub_1B29EFA24()
{
  unint64_t result = qword_1E9C3ABB0;
  if (!qword_1E9C3ABB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ABB0);
  }
  return result;
}

unint64_t sub_1B29EFA74()
{
  unint64_t result = qword_1E9C3ABB8;
  if (!qword_1E9C3ABB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ABB8);
  }
  return result;
}

unint64_t sub_1B29EFAC4()
{
  unint64_t result = qword_1E9C3ABC0;
  if (!qword_1E9C3ABC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ABC0);
  }
  return result;
}

uint64_t sub_1B29EFB28()
{
  return v0;
}

uint64_t sub_1B29EFB40()
{
  return sub_1B2E834E8();
}

void sub_1B29EFB60(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1B29EFB7C()
{
  return sub_1B2E83688();
}

uint64_t sub_1B29EFB98()
{
  return sub_1B2E83568();
}

uint64_t sub_1B29EFBB4()
{
  return v0;
}

void sub_1B29EFBCC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (!*(void *)(a3 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1B29DB060(a1, a2, v8, v9, v10, v11, v12, v13, v82, v86, v91, v96, v98, v100, v102, namespaceName._countAndFlagsBits, (uint64_t)namespaceName._object, v104, countAndFlagsBits,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(void *)(a4 + 32) = 0;
    *(void *)(a4 + 40) = 1;
    return;
  }
  uint64_t v16 = *(void *)(a3 + 56) + 72 * v14;
  uint64_t v17 = *(void *)(v16 + 24);
  uint64_t v19 = *(void *)(v16 + 32);
  uint64_t v18 = *(void **)(v16 + 40);
  uint64_t v20 = *(unsigned __int16 *)(v16 + 48);
  char v21 = *(unsigned char *)(v16 + 50);
  uint64_t v99 = *(void *)(v16 + 56);
  uint64_t v22 = *(void *)(v16 + 64);
  namespaceName._uint64_t countAndFlagsBits = *(void *)v16;
  uint64_t v23 = *(void **)(v16 + 8);
  uint64_t v110 = *(void *)(v16 + 16);
  sub_1B29F2C24();
  sub_1B29F145C(v24, v25, v26, v27, v28, v29, v30, v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    uint64_t v97 = (uint64_t)v18;
    uint64_t v45 = v17;
    if (v17)
    {
      uint64_t v46 = (uint64_t)v23;
      uint64_t countAndFlagsBits = (uint64_t)v23;
      uint64_t v106 = v110;
      uint64_t v47 = v110;
      sub_1B29F2BBC();
      sub_1B29DABD4();
      sub_1B29DAC38();
      sub_1B29DAC84();
      swift_bridgeObjectRetain();
      uint64_t v53 = v20;
      if (sub_1B29F2B98())
      {
        sub_1B29E9EEC();
        uint64_t v54 = sub_1B299E4D4();
        sub_1B29F2BE4(v54, v55);
        sub_1B29F2B58(namespaceName._countAndFlagsBits, v46, v20, v56, v57, v58, v59, v60, v83, v87, v92, v97);
        swift_bridgeObjectRelease();
LABEL_21:
        uint64_t v37 = sub_1B29F2BD0();
        uint64_t v41 = v19;
        uint64_t v42 = v45;
        uint64_t v43 = v53;
        char v44 = 0;
        goto LABEL_22;
      }
      uint64_t v84 = namespaceName._countAndFlagsBits & 1;
      uint64_t v88 = 1;
      uint64_t v93 = v110;
    }
    else
    {
      uint64_t countAndFlagsBits = namespaceName._countAndFlagsBits;
      uint64_t v106 = (uint64_t)v23;
      uint64_t v46 = (uint64_t)v23;
      sub_1B29F2BBC();
      uint64_t v47 = v61;
      sub_1B29DABD4();
      sub_1B29DAC38();
      sub_1B29DAC84();
      swift_bridgeObjectRetain();
      uint64_t v53 = v20;
      if ((sub_1B29F2B98() & 1) == 0)
      {
        sub_1B29DACD0();
        uint64_t v71 = sub_1B299E4D4();
        sub_1B29F2BE4(v71, v72);
        sub_1B29F2B58(namespaceName._countAndFlagsBits, v46, v20, v73, v74, v75, v76, v77, v83, v87, v92, v97);
        uint64_t v78 = sub_1B29F2BD0();
        sub_1B29F2C04(v78, v79, v80, v81);
        goto LABEL_21;
      }
      uint64_t v88 = 0;
      uint64_t v93 = 0;
      uint64_t v84 = namespaceName._countAndFlagsBits;
    }
    uint64_t v64 = v22;
    char v69 = v45;
    sub_1B29F2B58(namespaceName._countAndFlagsBits, v46, v47, v48, v49, v50, v51, v52, v84, v88, v93, v97);
    swift_bridgeObjectRetain();
    sub_1B29F2C04(namespaceName._countAndFlagsBits, v46, v47, v45);
    swift_bridgeObjectRelease();
    uint64_t v62 = v85;
    uint64_t countAndFlagsBits = v85;
    uint64_t v106 = v46;
    uint64_t v66 = v95;
    uint64_t v107 = v95;
    LOBYTE(v108) = v69 & 1;
    AssetRegistryAssetLocation.LocalAsset.verifyValidity()();
    if (v70)
    {
      sub_1B29DAB98(v85, v46, v95, v90);
LABEL_23:
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v68 = v99;
    int v67 = v90;
    goto LABEL_25;
  }
  LOWORD(namespaceName._object) = v20;
  uint64_t v31 = (uint64_t)v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  p_object = &namespaceName._object;
  v33._uint64_t countAndFlagsBits = namespaceName._countAndFlagsBits;
  v33._object = v23;
  v34._uint64_t countAndFlagsBits = v110;
  v34._object = (void *)v17;
  v35._uint64_t countAndFlagsBits = v19;
  v35._object = v18;
  AssetRegistryAssetLocation.TrialAsset.init(namespaceName:factor:assetTypeRawString:downloadOptions:)(v33, v34, v35, (IntelligencePlatform::TrialAssetManager::DownloadOptions_optional)p_object);
  if (v36)
  {
    sub_1B29F2C24();
    char v44 = 1;
LABEL_22:
    sub_1B29F14C8(v37, v38, v39, v40, v41, v42, v43, v44);
    goto LABEL_23;
  }
  uint64_t v62 = countAndFlagsBits;
  uint64_t v101 = v106;
  if ((_BYTE)v108) {
    int v63 = 129;
  }
  else {
    int v63 = 128;
  }
  int v89 = v63 | (*(unsigned __int16 *)((char *)&v108 + 1) << 8);
  uint64_t v94 = v107;
  uint64_t v64 = v22;
  swift_bridgeObjectRetain();
  uint64_t v65 = (uint64_t)v18;
  uint64_t v66 = v94;
  sub_1B29F14C8(namespaceName._countAndFlagsBits, v31, v110, v17, v19, v65, v20, 1);
  swift_bridgeObjectRelease();
  int v67 = v89;
  uint64_t v68 = v99;
  uint64_t v46 = v101;
LABEL_25:
  *(void *)a4 = v62;
  *(void *)(a4 + 8) = v46;
  *(void *)(a4 + 16) = v66;
  *(void *)(a4 + 24) = *(void *)&v67 & 0xFFFFFFLL;
  *(void *)(a4 + 32) = v68;
  *(void *)(a4 + 40) = v64;
}

uint64_t sub_1B29EFFA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C646E7562 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B2E96A50)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B29F0088(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0x656C646E7562;
  }
}

void sub_1B29F00C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_1B299F300();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_1B29A3EB4(&qword_1EB7D9560);
  sub_1B299D278();
  MEMORY[0x1F4188790](v18);
  sub_1B299E524();
  sub_1B29F2910();
  sub_1B29A04B0();
  if (!v13)
  {
    sub_1B29E9FD0();
    sub_1B2E835B8();
    uint64_t v19 = sub_1B2E83568();
    uint64_t v21 = v20;
    sub_1B29A15FC();
    v22();
    *(unsigned char *)uint64_t v17 = a13;
    *(void *)(v17 + 8) = v19;
    *(void *)(v17 + 16) = v21;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v15);
  sub_1B29998C8();
}

uint64_t sub_1B29F0220()
{
  uint64_t v0 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

unint64_t sub_1B29F0278()
{
  return 0xD000000000000010;
}

uint64_t sub_1B29F02AC()
{
  return sub_1B29F0088(*v0);
}

uint64_t sub_1B29F02B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29EFFA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29F02DC(uint64_t a1)
{
  unint64_t v2 = sub_1B29F2910();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29F0318(uint64_t a1)
{
  unint64_t v2 = sub_1B29F2910();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B29F0354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1B29F00C0(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

uint64_t sub_1B29F036C(char *a1, char *a2)
{
  return sub_1B29AC888(*a1, *a2);
}

uint64_t sub_1B29F0378()
{
  return sub_1B29AE4C0();
}

uint64_t sub_1B29F0380()
{
  return sub_1B2AA55F0();
}

uint64_t sub_1B29F0388()
{
  return sub_1B29F92F4();
}

uint64_t sub_1B29F0390@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29F0220();
  *a1 = result;
  return result;
}

unint64_t sub_1B29F03C0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B29F0278();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1B29F03EC()
{
  return sub_1B29F0278();
}

uint64_t sub_1B29F03F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29F0274();
  *a1 = result;
  return result;
}

uint64_t sub_1B29F041C(uint64_t a1)
{
  unint64_t v2 = sub_1B29F252C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29F0458(uint64_t a1)
{
  unint64_t v2 = sub_1B29F252C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B29F0494()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1EB7D9568);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E524();
  sub_1B29F252C();
  sub_1B29A04B0();
  if (!v0)
  {
    uint64_t v6 = sub_1B2E83568();
    uint64_t v8 = v7;
    sub_1B29A15FC();
    v9();
    *(void *)uint64_t v4 = v6;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = 0;
    *(unsigned char *)(v4 + 24) = 0;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v2);
  sub_1B29998C8();
}

uint64_t sub_1B29F0648(char a1)
{
  uint64_t result = 0x63617073656D616ELL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x726F74636166;
      break;
    case 2:
      uint64_t result = 0x7079547465737361;
      break;
    case 3:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1B29F06E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, __int16 a11)
{
  sub_1B299F300();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7D9BF0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v16);
  sub_1B29AEC7C(v13, v13[3]);
  sub_1B29F25C4();
  sub_1B2E83A18();
  if (v11)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v13);
  }
  else
  {
    uint64_t v17 = sub_1B2E83568();
    uint64_t v19 = v18;
    uint64_t v28 = v17;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1B2E83568();
    uint64_t v29 = v21;
    uint64_t v27 = v20;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1B2E83568();
    uint64_t v23 = v22;
    sub_1B29EA444();
    swift_bridgeObjectRetain();
    sub_1B2E83548();
    uint64_t v24 = sub_1B29A254C();
    v25(v24);
    *(void *)uint64_t v15 = v28;
    *(void *)(v15 + 8) = v19;
    *(void *)(v15 + 16) = v27;
    *(void *)(v15 + 24) = v29;
    *(void *)(v15 + 32) = v26;
    *(void *)(v15 + 40) = v23;
    *(_WORD *)(v15 + 48) = a11;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

uint64_t sub_1B29F0994()
{
  unint64_t v0 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B29F09E4(char a1)
{
  uint64_t result = 0x6C61636F6CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C61697274;
      break;
    case 2:
      uint64_t result = 0x4E74656863746172;
      break;
    case 3:
      uint64_t result = 0x6F666E4972657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B29F0A78(char a1)
{
  uint64_t result = 0x6C61636F6CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C61697274;
      break;
    case 2:
      uint64_t result = 0x4E74656863746172;
      break;
    case 3:
      uint64_t result = 0x6F666E4972657375;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1B29F0B0C()
{
}

uint64_t sub_1B29F0B24()
{
  return sub_1B29F0648(*v0);
}

uint64_t sub_1B29F0B2C(uint64_t a1)
{
  unint64_t v2 = sub_1B29F25C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29F0B68(uint64_t a1)
{
  unint64_t v2 = sub_1B29F25C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B29F0BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1B29F06E4(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SHIWORD(vars8));
}

uint64_t sub_1B29F0BBC()
{
  return sub_1B29AC724();
}

uint64_t sub_1B29F0BC8()
{
  return sub_1B29AE4CC(*v0);
}

uint64_t sub_1B29F0BD0()
{
  return sub_1B2AA5530();
}

uint64_t sub_1B29F0BD8()
{
  return sub_1B29F92DC();
}

uint64_t sub_1B29F0BE0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29F0994();
  *a1 = result;
  return result;
}

uint64_t sub_1B29F0C10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B29F09E4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B29F0C3C()
{
  return sub_1B29F0A78(*v0);
}

uint64_t sub_1B29F0C44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29F09E0();
  *a1 = result;
  return result;
}

uint64_t sub_1B29F0C6C(uint64_t a1)
{
  unint64_t v2 = sub_1B29F1C04();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29F0CA8(uint64_t a1)
{
  unint64_t v2 = sub_1B29F1C04();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B29F0CE4()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7D9570);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E524();
  sub_1B29F1C04();
  sub_1B29A04B0();
  if (!v0)
  {
    sub_1B29F1C50();
    sub_1B29F2B80();
    sub_1B2E835B8();
    uint64_t v8 = v9;
    LOBYTE(v9) = 2;
    uint64_t v6 = sub_1B2E835A8();
    sub_1B29A3EB4(&qword_1EB7D94D8);
    sub_1B29F1D34();
    sub_1B2E835B8();
    sub_1B29A15FC();
    v7();
    *(void *)uint64_t v4 = v8;
    *(void *)(v4 + 8) = v10;
    *(void *)(v4 + 16) = v11;
    *(void *)(v4 + 24) = v12;
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 40) = 0;
    *(_WORD *)(v4 + 48) = 0;
    *(unsigned char *)(v4 + 50) = 0;
    *(void *)(v4 + 56) = v6;
    *(void *)(v4 + 64) = v9;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v2);
  sub_1B29998C8();
}

uint64_t sub_1B29F0F8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656972746E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B29F1074()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F10BC(char a1)
{
  if (a1) {
    return 0x73656972746E65;
  }
  else {
    return 0x6E69616D6F64;
  }
}

uint64_t sub_1B29F10F0(void *a1)
{
  sub_1B29A3EB4(&qword_1EB7D9558);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = a1[4];
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B29F16F0();
  sub_1B2E83A18();
  if (v1)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  else
  {
    uint64_t v4 = sub_1B2E83568();
    sub_1B29A3EB4(&qword_1EB7D94E8);
    sub_1B29F173C();
    swift_bridgeObjectRetain();
    sub_1B2E835B8();
    uint64_t v6 = sub_1B29A4180();
    v7(v6);
    swift_bridgeObjectRetain();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

void sub_1B29F12CC()
{
}

uint64_t sub_1B29F12E4()
{
  return sub_1B29F1074();
}

uint64_t sub_1B29F1300()
{
  return sub_1B29F10BC(*v0);
}

uint64_t sub_1B29F1308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29F0F8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29F1330(uint64_t a1)
{
  unint64_t v2 = sub_1B29F16F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29F136C(uint64_t a1)
{
  unint64_t v2 = sub_1B29F16F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29F13A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B29F10F0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1B29F13D8(uint64_t a1)
{
  unint64_t v2 = sub_1B29F23F0();

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1B29F1414(uint64_t a1)
{
  unint64_t v2 = sub_1B29F23F0();

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1B29F145C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    return sub_1B29DABD4();
  }
}

uint64_t sub_1B29F14C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_1B29DABB0();
  }
}

uint64_t destroy for IntentRequest()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s20IntelligencePlatform5DebugVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Debug(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Debug(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Debug(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Debug(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AssetRegistryJSONFile()
{
}

unint64_t sub_1B29F16F0()
{
  unint64_t result = qword_1EB7D8CE8;
  if (!qword_1EB7D8CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8CE8);
  }
  return result;
}

unint64_t sub_1B29F173C()
{
  unint64_t result = qword_1EB7D94F0;
  if (!qword_1EB7D94F0)
  {
    sub_1B29C3588(&qword_1EB7D94E8);
    sub_1B29F17B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D94F0);
  }
  return result;
}

unint64_t sub_1B29F17B8()
{
  unint64_t result = qword_1EB7D8D58;
  if (!qword_1EB7D8D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D58);
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryJSONFile.CodingKeys()
{
  return &type metadata for AssetRegistryJSONFile.CodingKeys;
}

uint64_t sub_1B29F1818(uint64_t a1)
{
  sub_1B29F14C8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned __int16 *)(a1 + 48), *(unsigned char *)(a1 + 50));

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29F1868(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  char v10 = *(unsigned char *)(a2 + 50);
  uint64_t v11 = *(unsigned __int16 *)(a2 + 48);
  sub_1B29F145C(*(void *)a2, v5, v6, v7, v8, v9, v11, v10);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(_WORD *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 50) = v10;
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B29F1908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  char v10 = *(unsigned char *)(a2 + 50);
  uint64_t v11 = *(unsigned __int16 *)(a2 + 48);
  sub_1B29F145C(*(void *)a2, v5, v6, v7, v8, v9, v11, v10);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  char v18 = *(unsigned char *)(a1 + 50);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  uint64_t v19 = *(unsigned __int16 *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 50) = v10;
  sub_1B29F14C8(v12, v13, v14, v15, v16, v17, v19, v18);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for IntentHandler(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t sub_1B29F19DC(uint64_t a1, uint64_t a2)
{
  __int16 v4 = *(_WORD *)(a2 + 48);
  char v5 = *(unsigned char *)(a2 + 50);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  char v12 = *(unsigned char *)(a1 + 50);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v14 = *(unsigned __int16 *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 50) = v5;
  sub_1B29F14C8(v6, v7, v8, v9, v10, v11, v14, v12);
  uint64_t v15 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B29F1A50(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 72))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 64);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B29F1AA4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)(result + 64) = a2;
    }
  }
  return result;
}

void type metadata accessor for AssetRegistryJSONFile.Entry()
{
}

unint64_t sub_1B29F1B18()
{
  unint64_t result = qword_1E9C3ABC8;
  if (!qword_1E9C3ABC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ABC8);
  }
  return result;
}

unint64_t sub_1B29F1B68()
{
  unint64_t result = qword_1EB7D8CF8;
  if (!qword_1EB7D8CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8CF8);
  }
  return result;
}

unint64_t sub_1B29F1BB8()
{
  unint64_t result = qword_1EB7D8CF0;
  if (!qword_1EB7D8CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8CF0);
  }
  return result;
}

unint64_t sub_1B29F1C04()
{
  unint64_t result = qword_1EB7D8D40;
  if (!qword_1EB7D8D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D40);
  }
  return result;
}

unint64_t sub_1B29F1C50()
{
  unint64_t result = qword_1EB7D8D38;
  if (!qword_1EB7D8D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D38);
  }
  return result;
}

unint64_t sub_1B29F1C9C()
{
  unint64_t result = qword_1EB7D9BE0;
  if (!qword_1EB7D9BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9BE0);
  }
  return result;
}

unint64_t sub_1B29F1CE8()
{
  unint64_t result = qword_1E9C3ABD0;
  if (!qword_1E9C3ABD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ABD0);
  }
  return result;
}

unint64_t sub_1B29F1D34()
{
  unint64_t result = qword_1EB7D94E0;
  if (!qword_1EB7D94E0)
  {
    sub_1B29C3588(&qword_1EB7D94D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D94E0);
  }
  return result;
}

unsigned char *sub_1B29F1DA0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B29F1E3CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for AssetRegistryJSONFileError()
{
}

uint64_t destroy for Entity()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29F1EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B29F1F14(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for BaseEntityConstructionError(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1B29F1FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

uint64_t sub_1B29F2028(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 50))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B29F2068(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 50) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 50) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AssetRegistryJSONFile.Entry.TrialEntry()
{
}

void type metadata accessor for AssetRegistryJSONFile.Entry.LocalEntry()
{
}

ValueMetadata *type metadata accessor for AssetRegistryJSONFile.Entry.CodingKeys()
{
  return &type metadata for AssetRegistryJSONFile.Entry.CodingKeys;
}

uint64_t sub_1B29F20E8(uint64_t a1)
{
  return sub_1B29F14C8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned __int16 *)(a1 + 48), *(unsigned char *)(a1 + 50));
}

uint64_t sub_1B29F2104(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 50);
  uint64_t v10 = *(unsigned __int16 *)(a2 + 48);
  sub_1B29F145C(*(void *)a2, v4, v5, v6, v7, v8, v10, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(_WORD *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 50) = v9;
  return a1;
}

uint64_t sub_1B29F2194(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 50);
  uint64_t v10 = *(unsigned __int16 *)(a2 + 48);
  sub_1B29F145C(*(void *)a2, v4, v5, v6, v7, v8, v10, v9);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  char v17 = *(unsigned char *)(a1 + 50);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v18 = *(unsigned __int16 *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 50) = v9;
  sub_1B29F14C8(v11, v12, v13, v14, v15, v16, v18, v17);
  return a1;
}

__n128 sub_1B29F223C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1B29F2258(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 48);
  char v4 = *(unsigned char *)(a2 + 50);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  char v11 = *(unsigned char *)(a1 + 50);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v13 = *(unsigned __int16 *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 50) = v4;
  sub_1B29F14C8(v5, v7, v6, v8, v9, v10, v13, v11);
  return a1;
}

uint64_t sub_1B29F22BC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 51))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 50);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B29F22FC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 51) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 51) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 50) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B29F2354(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 50);
}

uint64_t sub_1B29F235C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 50) = a2 & 1;
  return result;
}

void type metadata accessor for AssetRegistryJSONFile.Entry.Location()
{
}

unint64_t sub_1B29F2378()
{
  unint64_t result = qword_1E9C3ABD8;
  if (!qword_1E9C3ABD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ABD8);
  }
  return result;
}

unint64_t sub_1B29F23C8(uint64_t a1)
{
  unint64_t result = sub_1B29F23F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B29F23F0()
{
  unint64_t result = qword_1E9C3ABE0;
  if (!qword_1E9C3ABE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ABE0);
  }
  return result;
}

unint64_t sub_1B29F2440()
{
  unint64_t result = qword_1E9C3ABE8;
  if (!qword_1E9C3ABE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ABE8);
  }
  return result;
}

unint64_t sub_1B29F2490()
{
  unint64_t result = qword_1EB7D8D50;
  if (!qword_1EB7D8D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D50);
  }
  return result;
}

unint64_t sub_1B29F24E0()
{
  unint64_t result = qword_1EB7D8D48;
  if (!qword_1EB7D8D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D48);
  }
  return result;
}

unint64_t sub_1B29F252C()
{
  unint64_t result = qword_1EB7D8D20;
  if (!qword_1EB7D8D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D20);
  }
  return result;
}

unint64_t sub_1B29F2578()
{
  unint64_t result = qword_1EB7D8D18;
  if (!qword_1EB7D8D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D18);
  }
  return result;
}

unint64_t sub_1B29F25C4()
{
  unint64_t result = qword_1EB7D9BC8;
  if (!qword_1EB7D9BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9BC8);
  }
  return result;
}

unsigned char *_s20IntelligencePlatform21AssetRegistryJSONFileV5EntryV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29F26DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryJSONFile.Entry.TrialEntry.CodingKeys()
{
  return &type metadata for AssetRegistryJSONFile.Entry.TrialEntry.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryJSONFile.Entry.LocalEntry.CodingKeys()
{
  return &type metadata for AssetRegistryJSONFile.Entry.LocalEntry.CodingKeys;
}

void type metadata accessor for AssetRegistryJSONFile.Entry.LocalEntry.LocalRelativeEntry()
{
}

unint64_t sub_1B29F2734()
{
  unint64_t result = qword_1E9C3ABF0;
  if (!qword_1E9C3ABF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ABF0);
  }
  return result;
}

unint64_t sub_1B29F2784()
{
  unint64_t result = qword_1E9C3ABF8;
  if (!qword_1E9C3ABF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ABF8);
  }
  return result;
}

unint64_t sub_1B29F27D4()
{
  unint64_t result = qword_1EB7D9BD8;
  if (!qword_1EB7D9BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9BD8);
  }
  return result;
}

unint64_t sub_1B29F2824()
{
  unint64_t result = qword_1EB7D9BD0;
  if (!qword_1EB7D9BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9BD0);
  }
  return result;
}

unint64_t sub_1B29F2874()
{
  unint64_t result = qword_1EB7D8D30;
  if (!qword_1EB7D8D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D30);
  }
  return result;
}

unint64_t sub_1B29F28C4()
{
  unint64_t result = qword_1EB7D8D28;
  if (!qword_1EB7D8D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D28);
  }
  return result;
}

unint64_t sub_1B29F2910()
{
  unint64_t result = qword_1EB7D8D00;
  if (!qword_1EB7D8D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D00);
  }
  return result;
}

unsigned char *_s20IntelligencePlatform21AssetRegistryJSONFileV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29F2A28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryJSONFile.Entry.LocalEntry.LocalRelativeEntry.CodingKeys()
{
  return &type metadata for AssetRegistryJSONFile.Entry.LocalEntry.LocalRelativeEntry.CodingKeys;
}

unint64_t sub_1B29F2A64()
{
  unint64_t result = qword_1E9C3AC00;
  if (!qword_1E9C3AC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC00);
  }
  return result;
}

unint64_t sub_1B29F2AB4()
{
  unint64_t result = qword_1EB7D8D10;
  if (!qword_1EB7D8D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D10);
  }
  return result;
}

unint64_t sub_1B29F2B04()
{
  unint64_t result = qword_1EB7D8D08;
  if (!qword_1EB7D8D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D08);
  }
  return result;
}

uint64_t sub_1B29F2B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1B29F14C8(a1, a2, a3, v13, v14, a12, v12, 0);
}

uint64_t sub_1B29F2B98()
{
  return sub_1B2E822C8();
}

uint64_t sub_1B29F2BBC()
{
  return v0;
}

uint64_t sub_1B29F2BD0()
{
  return v0;
}

uint64_t sub_1B29F2BE4(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1B29F2C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B29F14C8(a1, a2, a3, a4, v6, v5, v4, 0);
}

uint64_t sub_1B29F2C38(uint64_t a1, uint64_t a2)
{
  type metadata accessor for AssetRegistryServerConfigLoader();
  swift_retain();
  uint64_t v4 = sub_1B29F83E4();
  if (v2) {
    return swift_release_n();
  }
  uint64_t v6 = v4;
  type metadata accessor for AssetRegistryBasicServer();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = a2;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v7;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_1B29F2CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = *(void *)(v5 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1B29F51DC(v11, a3, a4, a1, a2, (uint64_t)&v21);
  long long v13 = v21;
  uint64_t v15 = v22;
  int v14 = v23;
  uint64_t v17 = v24;
  uint64_t v16 = v25;
  if (v26)
  {
    long long v19 = v21;
    char v20 = v22;
    sub_1B29EEC9C(v21, *((uint64_t *)&v21 + 1), v22);
    sub_1B29EEC9C(v13, *((uint64_t *)&v13 + 1), v15);
    sub_1B29ECB4C();
    if (sub_1B2E83768())
    {
      sub_1B299D44C();
    }
    else
    {
      swift_allocError();
      *(_OWORD *)uint64_t v18 = v19;
      *(unsigned char *)(v18 + 16) = v20;
    }
    swift_willThrow();
    sub_1B299D44C();
    return sub_1B299D44C();
  }
  else
  {
    *(void *)a5 = v21;
    *(void *)(a5 + 8) = *((void *)&v13 + 1);
    *(void *)(a5 + 16) = v15;
    *(_WORD *)(a5 + 24) = v14;
    *(unsigned char *)(a5 + 26) = BYTE2(v14);
    *(void *)(a5 + 32) = v17;
    *(void *)(a5 + 40) = v16;
  }
  return result;
}

uint64_t sub_1B29F2E2C()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B29F2E54()
{
  sub_1B29F2E2C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetRegistryLocalBackendBasic()
{
  return self;
}

uint64_t sub_1B29F2EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1B29F2CDC(a1, a2, a3, a4, a5);
}

uint64_t sub_1B29F2ED0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    return sub_1B29EECC4(a1, a2, a3);
  }
  else
  {
    sub_1B29DAB98(a1, a2, a3, a4);
    return swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryOverrideAssetEntryParameters.verifyValidity()()
{
  if ((*(_WORD *)(v0 + 24) & 0x80) == 0) {
    AssetRegistryAssetLocation.LocalAsset.verifyValidity()();
  }
}

uint64_t sub_1B29F2F70(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656469727265766FLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65764F7261656C63 && a2 == 0xED00006564697272)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B29F3084(char a1)
{
  if (a1) {
    return 0x65764F7261656C63;
  }
  else {
    return 0x656469727265766FLL;
  }
}

uint64_t sub_1B29F30C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001B2E96B80)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1B29F3150()
{
  return 0xD000000000000010;
}

uint64_t sub_1B29F316C(uint64_t a1)
{
  unint64_t v2 = sub_1B29F3634();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29F31A8(uint64_t a1)
{
  unint64_t v2 = sub_1B29F3634();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29F31E4()
{
  return sub_1B29F1074();
}

uint64_t sub_1B29F31EC()
{
  return sub_1B29F3084(*v0);
}

uint64_t sub_1B29F31F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29F2F70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29F321C(uint64_t a1)
{
  unint64_t v2 = sub_1B29F35E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29F3258(uint64_t a1)
{
  unint64_t v2 = sub_1B29F35E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29F3298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29F30C8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B29F32C4(uint64_t a1)
{
  unint64_t v2 = sub_1B29F3680();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29F3300(uint64_t a1)
{
  unint64_t v2 = sub_1B29F3680();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AssetRegistryOverrideAssetEntryParameters.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C3AC08);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C3AC10);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299E4A0();
  uint64_t v14 = sub_1B29A3EB4(&qword_1E9C3AC18);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B299E4A0();
  uint64_t v10 = v9 - v8;
  int v11 = *(unsigned __int16 *)(v1 + 24);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B29F35E8();
  sub_1B2E83A38();
  if ((~v11 & 0xFE) != 0)
  {
    sub_1B29F3680();
    sub_1B2E83618();
    sub_1B29E6278();
    sub_1B2E836D8();
  }
  else
  {
    sub_1B29F3634();
    sub_1B2E83618();
  }
  sub_1B299B798();
  v12();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v10, v14);
}

unint64_t sub_1B29F35E8()
{
  unint64_t result = qword_1E9C3AC20;
  if (!qword_1E9C3AC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC20);
  }
  return result;
}

unint64_t sub_1B29F3634()
{
  unint64_t result = qword_1E9C3AC28;
  if (!qword_1E9C3AC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC28);
  }
  return result;
}

unint64_t sub_1B29F3680()
{
  unint64_t result = qword_1E9C3AC30;
  if (!qword_1E9C3AC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC30);
  }
  return result;
}

uint64_t AssetRegistryOverrideAssetEntryParameters.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C3AC38);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C3AC40);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299E4A0();
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C3AC48);
  sub_1B299D278();
  uint64_t v32 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1B299E4A0();
  uint64_t v10 = v9 - v8;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B29F35E8();
  sub_1B2E83A18();
  if (v37) {
    goto LABEL_8;
  }
  uint64_t v38 = a1;
  uint64_t v11 = sub_1B2E835F8();
  if (!*(void *)(v11 + 16)
    || (char v30 = *(unsigned char *)(v11 + 32),
        sub_1B29B142C(1),
        uint64_t v13 = v12,
        unint64_t v15 = v14,
        swift_bridgeObjectRelease(),
        v13 != v15 >> 1))
  {
    uint64_t v21 = sub_1B2E83288();
    swift_allocError();
    uint64_t v23 = v22;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v23 = &type metadata for AssetRegistryOverrideAssetEntryParameters;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x1E4FBBA70], v21);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v10, v5);
    a1 = v38;
LABEL_8:
    uint64_t v24 = (uint64_t)a1;
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v24);
  }
  if (v30)
  {
    sub_1B29F3634();
    sub_1B29F4410();
    sub_1B299B798();
    v16();
    swift_unknownObjectRelease();
    sub_1B299B798();
    v17();
    uint64_t v18 = 0;
    long long v19 = 0uLL;
    int v20 = 254;
  }
  else
  {
    LOBYTE(v33) = 0;
    sub_1B29F3680();
    sub_1B29F4410();
    sub_1B29E62C4();
    sub_1B2E835B8();
    uint64_t v26 = sub_1B29F43F4();
    v27(v26);
    swift_unknownObjectRelease();
    uint64_t v28 = sub_1B29A04D0();
    v29(v28);
    long long v19 = v33;
    uint64_t v18 = v34;
    int v20 = v35 | (v36 << 16);
  }
  *(_OWORD *)a2 = v19;
  *(void *)(a2 + 16) = v18;
  *(_WORD *)(a2 + 24) = v20;
  *(unsigned char *)(a2 + 26) = BYTE2(v20);
  uint64_t v24 = (uint64_t)a1;
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v24);
}

void sub_1B29F3AFC()
{
}

uint64_t sub_1B29F3B14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AssetRegistryOverrideAssetEntryParameters.init(from:)(a1, a2);
}

uint64_t sub_1B29F3B2C(void *a1)
{
  return AssetRegistryOverrideAssetEntryParameters.encode(to:)(a1);
}

unint64_t sub_1B29F3B44(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B29F3B74();
  unint64_t result = sub_1B29F3BC0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B29F3B74()
{
  unint64_t result = qword_1E9C3AC50;
  if (!qword_1E9C3AC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC50);
  }
  return result;
}

unint64_t sub_1B29F3BC0()
{
  unint64_t result = qword_1E9C3AC58;
  if (!qword_1E9C3AC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC58);
  }
  return result;
}

uint64_t destroy for AssetRegistryOverrideAssetEntryParameters(uint64_t result)
{
  if ((*(_WORD *)(result + 24) & 0x7E) == 0) {
    return sub_1B29DAB98(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), *(_WORD *)(result + 24));
  }
  return result;
}

uint64_t initializeWithCopy for AssetRegistryOverrideAssetEntryParameters(uint64_t a1, uint64_t *a2)
{
  int v3 = *((unsigned __int16 *)a2 + 12);
  int v4 = v3 | (*((unsigned __int8 *)a2 + 26) << 16);
  if ((v3 & 0x7E) != 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 11) = *(_OWORD *)((char *)a2 + 11);
  }
  else
  {
    uint64_t v5 = *a2;
    uint64_t v6 = a2[1];
    uint64_t v7 = a2[2];
    sub_1B29DABBC(*a2, v6, v7, v3);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 26) = BYTE2(v4);
    *(_WORD *)(a1 + 24) = v4;
  }
  return a1;
}

uint64_t assignWithCopy for AssetRegistryOverrideAssetEntryParameters(uint64_t a1, long long *a2)
{
  __int16 v4 = *(_WORD *)(a1 + 24);
  int v5 = *((unsigned __int16 *)a2 + 12);
  int v6 = v5 | (*((unsigned __int8 *)a2 + 26) << 16);
  if ((v4 & 0x7E) == 0)
  {
    if ((v5 & 0x7E) == 0)
    {
      uint64_t v12 = *(void *)a2;
      uint64_t v13 = *((void *)a2 + 1);
      uint64_t v14 = *((void *)a2 + 2);
      sub_1B29DABBC(*(void *)a2, v13, v14, v5);
      uint64_t v15 = *(void *)a1;
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = *(void *)(a1 + 16);
      __int16 v18 = *(_WORD *)(a1 + 24);
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v13;
      *(void *)(a1 + 16) = v14;
      *(_WORD *)(a1 + 24) = v6;
      *(unsigned char *)(a1 + 26) = BYTE2(v6);
      sub_1B29DAB98(v15, v16, v17, v18);
      return a1;
    }
    sub_1B29DAB98(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v4);
    goto LABEL_6;
  }
  if ((v5 & 0x7E) != 0)
  {
LABEL_6:
    long long v10 = *a2;
    *(_OWORD *)(a1 + 11) = *(long long *)((char *)a2 + 11);
    *(_OWORD *)a1 = v10;
    return a1;
  }
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *((void *)a2 + 1);
  uint64_t v9 = *((void *)a2 + 2);
  sub_1B29DABBC(*(void *)a2, v8, v9, v5);
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 26) = BYTE2(v6);
  *(_WORD *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithTake for AssetRegistryOverrideAssetEntryParameters(uint64_t a1, uint64_t a2)
{
  char v4 = *(_WORD *)(a1 + 24);
  if ((*(_WORD *)(a1 + 24) & 0x7E) == 0)
  {
    int v5 = *(unsigned __int16 *)(a2 + 24);
    int v6 = v5 | (*(unsigned __int8 *)(a2 + 26) << 16);
    if ((v5 & 0x7E) == 0)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)a1;
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = *(void *)(a1 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = v8;
      *(_WORD *)(a1 + 24) = v6;
      *(unsigned char *)(a1 + 26) = BYTE2(v6);
      sub_1B29DAB98(v9, v10, v11, v4);
      return a1;
    }
    sub_1B29DAB98(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryOverrideAssetEntryParameters(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 27)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (*(_WORD *)(a1 + 24) & 0x7E | (*(unsigned __int16 *)(a1 + 24) >> 7) & 1) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AssetRegistryOverrideAssetEntryParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 23) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 27) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 27) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 26) = 0;
      *(_WORD *)(result + 24) = (a2 ^ 0x7F) & 0xFE | ((a2 ^ 0x7F) << 7);
    }
  }
  return result;
}

uint64_t sub_1B29F3F0C(uint64_t a1)
{
  if ((*(_WORD *)(a1 + 24) & 0x7E) != 0) {
    return (*(unsigned __int16 *)(a1 + 24) << 24 >> 31) - (*(_WORD *)(a1 + 24) & 0x7Eu) + 128;
  }
  else {
    return 0;
  }
}

uint64_t sub_1B29F3F34(uint64_t result, unsigned int a2)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 127;
  }
  else if (a2)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 2 * ((((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6)) & 0x7F);
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideAssetEntryParameters()
{
  return &type metadata for AssetRegistryOverrideAssetEntryParameters;
}

unsigned char *storeEnumTagSinglePayload for AssetRegistryOverrideAssetEntryParameters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29F4058);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideAssetEntryParameters.CodingKeys()
{
  return &type metadata for AssetRegistryOverrideAssetEntryParameters.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AssetRegistryOverrideAssetEntryParameters.OverrideCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B29F412CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideAssetEntryParameters.OverrideCodingKeys()
{
  return &type metadata for AssetRegistryOverrideAssetEntryParameters.OverrideCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideAssetEntryParameters.ClearOverrideCodingKeys()
{
  return &type metadata for AssetRegistryOverrideAssetEntryParameters.ClearOverrideCodingKeys;
}

unint64_t sub_1B29F4178()
{
  unint64_t result = qword_1E9C3AC60;
  if (!qword_1E9C3AC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC60);
  }
  return result;
}

unint64_t sub_1B29F41C8()
{
  unint64_t result = qword_1E9C3AC68;
  if (!qword_1E9C3AC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC68);
  }
  return result;
}

unint64_t sub_1B29F4218()
{
  unint64_t result = qword_1E9C3AC70;
  if (!qword_1E9C3AC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC70);
  }
  return result;
}

unint64_t sub_1B29F4268()
{
  unint64_t result = qword_1E9C3AC78;
  if (!qword_1E9C3AC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC78);
  }
  return result;
}

unint64_t sub_1B29F42B8()
{
  unint64_t result = qword_1E9C3AC80;
  if (!qword_1E9C3AC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC80);
  }
  return result;
}

unint64_t sub_1B29F4308()
{
  unint64_t result = qword_1E9C3AC88;
  if (!qword_1E9C3AC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC88);
  }
  return result;
}

unint64_t sub_1B29F4358()
{
  unint64_t result = qword_1E9C3AC90;
  if (!qword_1E9C3AC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC90);
  }
  return result;
}

unint64_t sub_1B29F43A8()
{
  unint64_t result = qword_1E9C3AC98;
  if (!qword_1E9C3AC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AC98);
  }
  return result;
}

uint64_t sub_1B29F43F4()
{
  return v0;
}

uint64_t sub_1B29F4410()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B29F4434(char *a1)
{
  char v1 = *a1;
  id v2 = objc_msgSend(objc_allocWithZone((Class)GDXPCAssetRegistryService), sel_init);
  sub_1B2E7FFF8();
  sub_1B29A4198();
  uint64_t v3 = sub_1B2E7FFE8();
  sub_1B2E7FF98();
  sub_1B29A4198();
  uint64_t v4 = sub_1B2E7FF88();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 24) = v1;
  *(void *)(result + 16) = v2;
  *(void *)(result + 32) = v3;
  *(void *)(result + 40) = v4;
  return result;
}

uint64_t AssetRegistryRemoteWritableBackendXPC.__allocating_init<>()()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)GDXPCAssetRegistryService), sel_init);
  sub_1B2E7FFF8();
  sub_1B29A4198();
  uint64_t v1 = sub_1B2E7FFE8();
  sub_1B2E7FF98();
  sub_1B29A4198();
  uint64_t v2 = sub_1B2E7FF88();
  uint64_t v3 = swift_allocObject();
  sub_1B29A3EB4(&qword_1E9C3A700);
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 24) = 1;
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 32) = v1;
  *(void *)(v4 + 40) = v2;
  *(void *)(v3 + 16) = v4;
  return v3;
}

void _s20IntelligencePlatform37AssetRegistryRemoteWritableBackendXPCC05assetdeG4TypeAA0cdegJ0OvgZ_0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1B29F4598(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(v4 + 24) = a1;
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = a4;
  return v4;
}

void sub_1B29F45AC(uint64_t a1@<X8>)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)MEMORY[0x1B3EB2480]();
  sub_1B29F49F0((uint64_t *)&v46);
  if (v2)
  {
    return;
  }
  long long v5 = v46;
  unsigned int v6 = *(void **)(v1 + 16);
  uint64_t v7 = (void *)sub_1B2E82348();
  uint64_t v8 = (void *)sub_1B2E82348();
  uint64_t v9 = (void *)sub_1B2E80568();
  *(void *)&long long v46 = 0;
  id v10 = objc_msgSend(v6, sel_assetEntryResultDataForAssetId_inDomainId_remoteOptionsData_error_, v7, v8, v9, &v46);

  id v11 = (id)v46;
  if (!v10)
  {
    uint64_t v17 = v11;
    __int16 v18 = (void *)sub_1B2E80388();

    swift_willThrow();
    sub_1B29F4F30();
    sub_1B299E4D4();
    *long long v19 = v18;
    id v20 = v18;
    swift_willThrow();
    sub_1B29C34DC(v5, *((unint64_t *)&v5 + 1));

    return;
  }
  uint64_t v12 = sub_1B2E80588();
  unint64_t v14 = v13;

  sub_1B29F4F7C(v12, v14);
  uint64_t v15 = swift_retain();
  uint64_t v16 = (void *)MEMORY[0x1B3EB2480](v15);
  sub_1B29A3EB4(&qword_1E9C3AD78);
  sub_1B29F5168((unint64_t *)&qword_1E9C3AD80, &qword_1E9C3AD78);
  sub_1B2E7FF78();
  long long v21 = v46;
  uint64_t v23 = v47;
  int v22 = v48;
  uint64_t v44 = v50;
  uint64_t v45 = v49;
  if (v51)
  {
    swift_release();
    sub_1B299D478();
    long long v46 = v21;
    LOBYTE(v47) = v23;
    sub_1B29EEC9C(v21, *((uint64_t *)&v21 + 1), v23);
    sub_1B29EEC9C(v21, *((uint64_t *)&v21 + 1), v23);
    sub_1B29ECB4C();
    if (sub_1B2E83768())
    {
      sub_1B29F2ED0(v21, *((uint64_t *)&v21 + 1), v23, v22, v45, v44, 1);
    }
    else
    {
      sub_1B299E4D4();
      char v27 = v47;
      *(_OWORD *)uint64_t v28 = v46;
      *(unsigned char *)(v28 + 16) = v27;
    }
    swift_willThrow();
    uint64_t v29 = sub_1B29A2564();
    sub_1B29F2ED0(v29, v30, v31, v32, v33, v34, v35);
    sub_1B299D478();
    sub_1B29C34DC(v5, *((unint64_t *)&v5 + 1));
    uint64_t v36 = sub_1B29A2564();
  }
  else
  {
    if ((v48 & 0x80) != 0)
    {
      swift_release();
      sub_1B299D478();
      uint64_t v25 = a1;
    }
    else
    {
      LOBYTE(v48) = v48 & 1;
      int v43 = v22;
      uint64_t v24 = v47;
      AssetRegistryAssetLocation.LocalAsset.verifyValidity()();
      swift_release();
      sub_1B299D478();
      uint64_t v25 = a1;
      if (v26)
      {
        sub_1B29F2ED0(v21, v5, v24, v43, v45, v44, 0);
        sub_1B299D478();
        sub_1B29C34DC(v5, *((unint64_t *)&v5 + 1));
        return;
      }
      uint64_t v23 = v24;
      int v22 = v43;
    }
    *(void *)uint64_t v25 = v21;
    *(void *)(v25 + 8) = v5;
    *(void *)(v25 + 16) = v23;
    *(_WORD *)(v25 + 24) = v22;
    *(unsigned char *)(v25 + 26) = BYTE2(v22);
    *(void *)(v25 + 32) = v45;
    *(void *)(v25 + 40) = v44;
    sub_1B29DABBC(v21, v5, v23, v22);
    swift_bridgeObjectRetain();
    sub_1B299D478();
    sub_1B29C34DC(v5, *((unint64_t *)&v5 + 1));
    uint64_t v36 = v21;
    uint64_t v37 = v5;
    uint64_t v38 = v23;
    char v39 = v22;
    uint64_t v40 = v45;
    uint64_t v41 = v44;
    char v42 = 0;
  }
  sub_1B29F2ED0(v36, v37, v38, v39, v40, v41, v42);
}

uint64_t sub_1B29F49F0@<X0>(uint64_t *a1@<X8>)
{
  sub_1B29E1C94();
  uint64_t result = sub_1B2E7FFD8();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_1B29F4A4C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B29F4A7C()
{
  sub_1B29F4A4C();

  return swift_deallocClassInstance();
}

void sub_1B29F4AB0(unsigned char *a1@<X8>)
{
}

void sub_1B29F4AC8(uint64_t a1@<X8>)
{
}

uint64_t sub_1B29F4AEC()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1B29F4AF8()
{
  return swift_retain();
}

uint64_t sub_1B29F4B04()
{
  return swift_retain();
}

void AssetRegistryRemoteWritableBackendXPC.assetEntry(for:in:)(uint64_t a1@<X8>)
{
}

void AssetRegistryRemoteWritableBackendXPC.overrideAssetEntry(for:in:overrideAssetEntryParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *(void *)a5;
  uint64_t v7 = *(void *)(a5 + 8);
  uint64_t v8 = *(void *)(a5 + 16);
  int v9 = *(unsigned __int16 *)(a5 + 24) | (*(unsigned __int8 *)(a5 + 26) << 16);
  id v10 = (uint64_t *)sub_1B29F4AF8();
  id v11 = sub_1B29F4E44(v10, v6, v7, v8, v9);
  unint64_t v13 = v12;
  swift_release();
  if (!v5)
  {
    unint64_t v14 = (void *)sub_1B29F4AEC();
    uint64_t v15 = (void *)sub_1B2E82348();
    uint64_t v16 = (void *)sub_1B2E82348();
    uint64_t v17 = (void *)sub_1B2E80568();
    *(void *)&long long v33 = 0;
    id v18 = objc_msgSend(v14, sel_overrideAssetEntryForAssetId_inDomainId_overrideAssetEntryParametersData_error_, v15, v16, v17, &v33);
    swift_unknownObjectRelease();

    id v19 = (id)v33;
    if (v18)
    {
      uint64_t v20 = sub_1B2E80588();
      unint64_t v22 = v21;

      sub_1B29F4B04();
      uint64_t v23 = sub_1B29F4F7C(v20, v22);
      uint64_t v24 = (void *)MEMORY[0x1B3EB2480](v23);
      sub_1B29A3EB4(&qword_1E9C3ACA8);
      sub_1B29F5168(&qword_1E9C3ACB0, &qword_1E9C3ACA8);
      sub_1B2E7FF78();
      swift_release();
      sub_1B299D478();
      if (v35)
      {
        long long v29 = v33;
        unsigned __int8 v30 = v34;
        sub_1B29EED44(v33, *((uint64_t *)&v33 + 1), v34);
        sub_1B29EED44(v29, *((uint64_t *)&v29 + 1), v30);
        sub_1B29EEAE4();
        if (sub_1B2E83768())
        {
          sub_1B29F51BC();
        }
        else
        {
          sub_1B299E4D4();
          unsigned __int8 v31 = v34;
          *(_OWORD *)uint64_t v32 = v33;
          *(unsigned char *)(v32 + 16) = v31;
        }
        swift_willThrow();
        sub_1B29F51BC();
        sub_1B299D478();
        sub_1B29C34DC((uint64_t)v11, v13);
        sub_1B29F51BC();
      }
      else
      {
        sub_1B299D478();
        sub_1B29C34DC((uint64_t)v11, v13);
      }
    }
    else
    {
      uint64_t v25 = v19;
      uint64_t v26 = (void *)sub_1B2E80388();

      swift_willThrow();
      sub_1B29F4F30();
      sub_1B299E4D4();
      *char v27 = v26;
      id v28 = v26;
      swift_willThrow();
      sub_1B29C34DC((uint64_t)v11, v13);
    }
  }
}

uint64_t *sub_1B29F4E44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  if ((a5 & 0x80) != 0
    || (uint64_t v18 = a2,
        uint64_t v19 = a3,
        uint64_t v20 = a4,
        LOBYTE(v21) = a5 & 1,
        unint64_t v12 = &v18,
        AssetRegistryAssetLocation.LocalAsset.verifyValidity()(),
        (uint64_t v6 = v13) == 0))
  {
    int v14 = a5 & 0xFFFFFF;
    uint64_t v15 = (void *)MEMORY[0x1B3EB2480]();
    uint64_t v18 = a2;
    uint64_t v19 = a3;
    uint64_t v20 = a4;
    char v22 = BYTE2(v14);
    __int16 v21 = v14;
    sub_1B29F3BC0();
    unint64_t v12 = a1;
    uint64_t v16 = sub_1B2E7FFD8();
    if (v6)
    {
    }
    else
    {
      unint64_t v12 = (uint64_t *)v16;
    }
  }
  return v12;
}

unint64_t sub_1B29F4F30()
{
  unint64_t result = qword_1E9C3ACA0;
  if (!qword_1E9C3ACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3ACA0);
  }
  return result;
}

uint64_t sub_1B29F4F7C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1B29F4FD4(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if (a4) {
    return sub_1B29EED6C(a1, a2, a3);
  }
  return a1;
}

uint64_t AssetRegistryRemoteWritableBackendXPC.deinit()
{
  swift_release();
  return v0;
}

uint64_t AssetRegistryRemoteWritableBackendXPC.__deallocating_deinit()
{
  AssetRegistryRemoteWritableBackendXPC.deinit();

  return swift_deallocClassInstance();
}

void sub_1B29F5034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1B29F5058(uint64_t a1@<X8>)
{
}

uint64_t sub_1B29F507C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AssetRegistryRemoteBackendXPC()
{
  return sub_1B29A1278();
}

uint64_t sub_1B29F50F0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AssetRegistryRemoteWritableBackendXPC()
{
  return sub_1B29A1278();
}

uint64_t method lookup function for AssetRegistryRemoteWritableBackendXPC(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AssetRegistryRemoteWritableBackendXPC);
}

uint64_t sub_1B29F5168(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B29F51BC()
{
  return sub_1B29F4FD4(v0, v1, v2, 1);
}

uint64_t sub_1B29F51DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1B29EC954(a1, a2, a3, a4, a5, (uint64_t)v11);
  swift_release();
  uint64_t v7 = v11[1];
  long long v8 = v12;
  long long v9 = v13;
  *(void *)a6 = v11[0];
  *(void *)(a6 + 8) = v7;
  *(_OWORD *)(a6 + 16) = v8;
  *(_OWORD *)(a6 + 32) = v9;
  *(unsigned char *)(a6 + 48) = 0;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t AssetRegistryResult.init(_:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v26 = a7;
  sub_1B2E82F38();
  sub_1B299D31C();
  v25[0] = v14;
  v25[1] = v13;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v15);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  v25[2] = a6;
  uint64_t v31 = a6;
  uint64_t v17 = type metadata accessor for AssetRegistryResult();
  sub_1B299D31C();
  uint64_t v19 = v18;
  sub_1B29A04E8();
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)v25 - v22;
  a1(v21);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(v26, v23, v17);
}

uint64_t type metadata accessor for AssetRegistryResult()
{
  return swift_getGenericMetadata();
}

uint64_t AssetRegistryResult.get()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 24);
  sub_1B299D31C();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  id v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v12 = (char *)v21 - v11;
  sub_1B299D31C();
  MEMORY[0x1F4188790](v13);
  sub_1B299E4A0();
  uint64_t v16 = v15 - v14;
  (*(void (**)(uint64_t))(v17 + 16))(v15 - v14);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a2, v16);
  }
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  v18(v12, v16, v4);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v12, v4);
  if (sub_1B2E83768())
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v4);
  }
  else
  {
    swift_allocError();
    v18(v20, (uint64_t)v10, v4);
  }
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v4);
}

uint64_t sub_1B29F5804(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B29F58FC(char a1)
{
  if (a1) {
    return 0x6572756C696166;
  }
  else {
    return 0x73736563637573;
  }
}

BOOL sub_1B29F592C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B29AE32C(*a1, *a2);
}

uint64_t sub_1B29F5948()
{
  return sub_1B29F1074();
}

uint64_t sub_1B29F5960()
{
  return sub_1B29E7A44();
}

uint64_t sub_1B29F5978()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F59C8()
{
  return sub_1B29F58FC(*v0);
}

uint64_t sub_1B29F59E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29F5804(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29F5A18()
{
  return sub_1B29A782C();
}

uint64_t sub_1B29F5A48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29E7B68();
  *a1 = result;
  return result;
}

uint64_t sub_1B29F5A80(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B29F5AD4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B29F5B28(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1B29F5C80(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void))_sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0);
}

uint64_t sub_1B29F5B44(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1B29F5CDC(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B29DA5BC);
}

uint64_t sub_1B29F5B5C(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1B29F5D10(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void, void))sub_1B29DA5BC);
}

uint64_t sub_1B29F5B74(void *a1, uint64_t a2)
{
  return sub_1B29F5D7C(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1B29E803C);
}

uint64_t sub_1B29F5B90(void *a1, uint64_t a2)
{
  return sub_1B29F5DEC(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1B29A782C);
}

uint64_t sub_1B29F5BA8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1B29F5E38(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void))_sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0, a3);
}

uint64_t sub_1B29F5BC0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B29F5C14(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B29F5C68(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1B29F5C80(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void))j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0);
}

uint64_t sub_1B29F5C80(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void))
{
  return a5(a3[2], a3[3], a3[4], a3[5], a3[6]);
}

uint64_t sub_1B29F5C9C()
{
  return _s20IntelligencePlatform34LocationEmbedderInferenceInterfaceO6ErrorsO9InitErrorO9hashValueSivg_0();
}

uint64_t sub_1B29F5CC4(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1B29F5CDC(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B29DA6D0);
}

uint64_t sub_1B29F5CDC(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void))
{
  return a4(a1, a2[2], a2[3], a2[4], a2[5], a2[6]);
}

uint64_t sub_1B29F5CF8(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1B29F5D10(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void, void))sub_1B29DA6D0);
}

uint64_t sub_1B29F5D10(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void, void, void))
{
  sub_1B2E83988();
  a4(v7, a2[2], a2[3], a2[4], a2[5], a2[6]);
  return sub_1B2E839E8();
}

uint64_t sub_1B29F5D64(void *a1, uint64_t a2)
{
  return sub_1B29F5D7C(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1B29E8174);
}

uint64_t sub_1B29F5D7C(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(a1[2], a1[3], a1[4], a1[5], a1[6]);
}

uint64_t sub_1B29F5D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29E9458(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B29F5DD4(void *a1, uint64_t a2)
{
  return sub_1B29F5DEC(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1B29F8394);
}

uint64_t sub_1B29F5DEC(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(a1[2], a1[3], a1[4], a1[5], a1[6]);
}

uint64_t sub_1B29F5E20@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1B29F5E38(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void))j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0, a3);
}

uint64_t sub_1B29F5E38@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(uint64_t, void, void, void, void, void)@<X3>, unsigned char *a4@<X8>)
{
  uint64_t result = a3(a1, a2[2], a2[3], a2[4], a2[5], a2[6]);
  *a4 = result & 1;
  return result;
}

uint64_t sub_1B29F5E7C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B29F5ED0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t AssetRegistryResult.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  sub_1B299F364();
  type metadata accessor for AssetRegistryResult.FailureCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  sub_1B2E83718();
  sub_1B299D31C();
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v6);
  sub_1B29A1608();
  sub_1B299D31C();
  uint64_t v31 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  uint64_t v30 = v9;
  sub_1B299F364();
  type metadata accessor for AssetRegistryResult.SuccessCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  sub_1B2E83718();
  sub_1B299D31C();
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v10);
  sub_1B29A1608();
  sub_1B299D31C();
  uint64_t v29 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1B299B6D0();
  uint64_t v28 = v13;
  sub_1B299D31C();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v19 = v18 - v17;
  sub_1B299F364();
  type metadata accessor for AssetRegistryResult.CodingKeys();
  swift_getWitnessTable();
  sub_1B2E83718();
  sub_1B299D31C();
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v20);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2E83A38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v19, v32, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = v31;
    uint64_t v22 = v30;
    sub_1B29998FC();
    uint64_t v23 = v5;
  }
  else
  {
    uint64_t v21 = v29;
    uint64_t v22 = v28;
    sub_1B29998FC();
    uint64_t v23 = v4;
  }
  sub_1B29F83D8();
  v24();
  sub_1B2E83618();
  sub_1B2E836D8();
  sub_1B299B798();
  v25();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
  sub_1B299B798();
  return v26();
}

uint64_t type metadata accessor for AssetRegistryResult.FailureCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AssetRegistryResult.SuccessCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AssetRegistryResult.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t AssetRegistryResult.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v80 = a1;
  uint64_t v54 = a7;
  uint64_t v12 = type metadata accessor for AssetRegistryResult.FailureCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  uint64_t v67 = v13;
  uint64_t v68 = v12;
  uint64_t v57 = sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v63 = v14;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v15);
  sub_1B29A1608();
  uint64_t v72 = v16;
  sub_1B29A4C5C();
  uint64_t v17 = type metadata accessor for AssetRegistryResult.SuccessCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  uint64_t v64 = v18;
  uint64_t v65 = v17;
  uint64_t v56 = sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v62 = v19;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v20);
  sub_1B29A1608();
  uint64_t v66 = v21;
  sub_1B29A4C5C();
  type metadata accessor for AssetRegistryResult.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v70 = v23;
  uint64_t v71 = v22;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v24);
  uint64_t v59 = a2;
  *(void *)&long long v77 = a2;
  *((void *)&v77 + 1) = a3;
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  *(void *)&long long v78 = a4;
  *((void *)&v78 + 1) = a5;
  uint64_t v58 = a6;
  uint64_t v79 = a6;
  uint64_t v69 = type metadata accessor for AssetRegistryResult();
  sub_1B299D31C();
  uint64_t v55 = v25;
  uint64_t v27 = MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v52 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  uint64_t v32 = (char *)&v52 - v31;
  MEMORY[0x1F4188790](v30);
  unsigned __int8 v34 = (char *)&v52 - v33;
  char v35 = v80;
  sub_1B29AEC7C(v80, v80[3]);
  uint64_t v36 = v74;
  sub_1B2E83A18();
  if (v36) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v35);
  }
  uint64_t WitnessTable = (uint64_t)v32;
  uint64_t v74 = v29;
  uint64_t v53 = v34;
  *(void *)&long long v75 = sub_1B2E835F8();
  sub_1B2E82968();
  swift_getWitnessTable();
  *(void *)&long long v77 = sub_1B2E83078();
  *((void *)&v77 + 1) = v37;
  *(void *)&long long v78 = v38;
  *((void *)&v78 + 1) = v39;
  sub_1B2E83068();
  swift_getWitnessTable();
  sub_1B2E82C28();
  char v40 = v75;
  if (v75 == 2 || (long long v52 = v77, v75 = v77, v76 = v78, (sub_1B2E82CD8() & 1) == 0))
  {
    uint64_t v41 = sub_1B2E83288();
    swift_allocError();
    int v43 = v42;
    sub_1B29A3EB4(&qword_1E9C39038);
    *int v43 = v69;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v41 - 8) + 104))(v43, *MEMORY[0x1E4FBBA70], v41);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1B299B798();
    v44();
    char v35 = v80;
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v35);
  }
  if (v40)
  {
    LOBYTE(v75) = 1;
    sub_1B2E834E8();
    sub_1B2E835B8();
    sub_1B29F83C4();
  }
  else
  {
    LOBYTE(v75) = 0;
    sub_1B2E834E8();
    sub_1B2E835B8();
    sub_1B29F83B0();
  }
  sub_1B299B798();
  v46();
  swift_unknownObjectRelease();
  uint64_t v47 = sub_1B29F8398();
  v48(v47);
  uint64_t v49 = v69;
  swift_storeEnumTagMultiPayload();
  uint64_t v50 = *(void (**)(void))(v55 + 32);
  char v51 = v53;
  sub_1B29F83D8();
  v50();
  ((void (*)(uint64_t, char *, uint64_t))v50)(v54, v51, v49);
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v80);
}

uint64_t sub_1B29F6A8C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return AssetRegistryResult.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a3);
}

uint64_t sub_1B29F6AB4(void *a1, uint64_t a2)
{
  return AssetRegistryResult.encode(to:)(a1, a2);
}

uint64_t AssetRegistryResult<>.verifyValidity()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  sub_1B299D490();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B299D490();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v14, a1);
  sub_1B29998FC();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1B29998FC();
    return v16(v15);
  }
  else
  {
    sub_1B29F83D8();
    v18();
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(v4, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  }
}

uint64_t sub_1B29F6C4C(uint64_t a1, uint64_t a2)
{
  return AssetRegistryResult<>.verifyValidity()(a1, *(void *)(a2 - 8));
}

uint64_t sub_1B29F6C70(uint64_t a1)
{
  unint64_t v2 = sub_1B29F6DCC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29F6CAC(uint64_t a1)
{
  unint64_t v2 = sub_1B29F6DCC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AssetRegistryOverrideAssetEntrySuccess.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C3AD88);
  sub_1B299D31C();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B29F6DCC();
  sub_1B2E83A38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

unint64_t sub_1B29F6DCC()
{
  unint64_t result = qword_1E9C3AD90;
  if (!qword_1E9C3AD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AD90);
  }
  return result;
}

uint64_t AssetRegistryOverrideAssetEntrySuccess.init(from:)(uint64_t a1)
{
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
}

uint64_t sub_1B29F6E40(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B29F6EA0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B29F6ED0();
  unint64_t result = sub_1B29F6F1C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B29F6ED0()
{
  unint64_t result = qword_1E9C3AD98;
  if (!qword_1E9C3AD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AD98);
  }
  return result;
}

unint64_t sub_1B29F6F1C()
{
  unint64_t result = qword_1E9C3ADA0[0];
  if (!qword_1E9C3ADA0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C3ADA0);
  }
  return result;
}

uint64_t sub_1B29F6F68(uint64_t a1)
{
  return AssetRegistryOverrideAssetEntrySuccess.init(from:)(a1);
}

uint64_t sub_1B29F6F80(void *a1)
{
  return AssetRegistryOverrideAssetEntrySuccess.encode(to:)(a1);
}

uint64_t sub_1B29F6F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

uint64_t sub_1B29F6FA0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_1B29F706C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_21;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_21:
          int v15 = (v14 | (v12 << (8 * v6))) + 2;
          unsigned int v11 = v14 + 2;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *))(v5 + 16))(a1);
      *((unsigned char *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v6) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1B29F7240(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24) - 8;
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(*(void *)v2 + 64);
  if (v4 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  }
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t sub_1B29F737C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_1B29F74F0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_1B29F7730(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_1B29F78A4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_1B29F7AE4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_1B29F7C28(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1B29F7DFCLL);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1B29F7E24(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_1B29F7EEC(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v6 + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
      size_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    a1[v5] = a2;
  }
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideAssetEntrySuccess()
{
  return &type metadata for AssetRegistryOverrideAssetEntrySuccess;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideAssetEntrySuccess.CodingKeys()
{
  return &type metadata for AssetRegistryOverrideAssetEntrySuccess.CodingKeys;
}

uint64_t sub_1B29F8034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

unsigned char *sub_1B29F803C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B29F8108);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1B29F8134(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B29F81D0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B29F81F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B29F8214()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B29F8230()
{
  return swift_getWitnessTable();
}

unint64_t sub_1B29F8250()
{
  unint64_t result = qword_1E9C3AF28;
  if (!qword_1E9C3AF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AF28);
  }
  return result;
}

unint64_t sub_1B29F82A0()
{
  unint64_t result = qword_1E9C3AF30;
  if (!qword_1E9C3AF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AF30);
  }
  return result;
}

uint64_t sub_1B29F82EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B29F8308()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B29F8324()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B29F8340()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B29F835C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B29F8378()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B29F8398()
{
  return v0;
}

uint64_t sub_1B29F83B0()
{
  return v0;
}

uint64_t sub_1B29F83C4()
{
  return v0;
}

uint64_t sub_1B29F83E4()
{
  type metadata accessor for FileLoader();
  sub_1B29F85B0();
  uint64_t v2 = static FileLoader.inIntelligencePlatform(searchPaths:)(v1);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0)
  {
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_1B29F8458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = FileLoader.data(forFile:withExtension:)(a1, a2, 1852797802, 0xE400000000000000);
  if (!v3)
  {
    unint64_t v10 = v8;
    if (v8 >> 60 == 15)
    {
      return 0;
    }
    else
    {
      uint64_t v11 = v7;
      sub_1B29F8650();
      sub_1B2E7FF78();
      a3 = v13;
      BOOL v12 = v13 == a1 && v14 == a2;
      if (!v12 && (sub_1B2E837A8() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B29F86B0();
        swift_allocError();
        swift_willThrow();
      }
      sub_1B29F869C(v11, v10);
    }
  }
  return a3;
}

double sub_1B29F85B0()
{
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E4AB0);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B2EC00A0;
  *(void *)(v0 + 32) = &unk_1F0ABE8A8;
  return result;
}

uint64_t sub_1B29F85F4()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetRegistryServerConfigLoader()
{
  return self;
}

unint64_t sub_1B29F8650()
{
  unint64_t result = qword_1EB7D8D60;
  if (!qword_1EB7D8D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8D60);
  }
  return result;
}

uint64_t sub_1B29F869C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1B29C34DC(a1, a2);
  }
  return a1;
}

unint64_t sub_1B29F86B0()
{
  unint64_t result = qword_1E9C3AF38;
  if (!qword_1E9C3AF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AF38);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AssetRegistryServerConfigLoaderError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B29F8798);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryServerConfigLoaderError()
{
  return &type metadata for AssetRegistryServerConfigLoaderError;
}

uint64_t sub_1B29F87D4(uint64_t a1)
{
  unint64_t v2 = sub_1B29F8874();

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1B29F8810(uint64_t a1)
{
  unint64_t v2 = sub_1B29F8874();

  return MEMORY[0x1F40E6E10](a1, v2);
}

unint64_t sub_1B29F884C(uint64_t a1)
{
  unint64_t result = sub_1B29F8874();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B29F8874()
{
  unint64_t result = qword_1E9C3AF40;
  if (!qword_1E9C3AF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AF40);
  }
  return result;
}

unint64_t sub_1B29F88C4()
{
  unint64_t result = qword_1E9C3AF48;
  if (!qword_1E9C3AF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AF48);
  }
  return result;
}

uint64_t AssetRegistryShouldVerifyValidity.init(from:jsonDecoder:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v17 = a5;
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)MEMORY[0x1B3EB2480](v11);
  sub_1B29F8B54();
  if (!v5)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v17, v13, a3);
    (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  }
  swift_release();
  return sub_1B29C34DC(a1, a2);
}

void AssetRegistryShouldVerifyValidity.encodeToJsonData(jsonEncoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  if (!v3)
  {
    uint64_t v5 = (void *)MEMORY[0x1B3EB2480](v4);
    sub_1B29F8B80(&v6);
  }
}

uint64_t sub_1B29F8B54()
{
  return sub_1B2E7FF78();
}

uint64_t sub_1B29F8B80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B2E7FFD8();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t dispatch thunk of AssetRegistryShouldVerifyValidity.verifyValidity()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1B29F8BE8()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F8C34()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F8CD4()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F8D20()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F8D40()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F8D84()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F8D9C(uint64_t a1, unsigned __int8 a2)
{
  return sub_1B29F9AC0(a1, a2, MEMORY[0x1E4FBC3B8]);
}

uint64_t sub_1B29F8DB4()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F8E00()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F8E64()
{
  return sub_1B29F9518();
}

uint64_t sub_1B29F8E7C()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F8E94()
{
  return sub_1B29F9518();
}

uint64_t sub_1B29F8EAC()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F8EC4()
{
  return sub_1B29F9944();
}

uint64_t sub_1B29F8EDC()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F8F50()
{
  return sub_1B29F9944();
}

uint64_t sub_1B29F8F68()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F8F84()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F900C()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F9050()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F90E8()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F913C()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F91B0()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F91F8()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F9248()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F92C4()
{
  return sub_1B29F9944();
}

uint64_t sub_1B29F92DC()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F92F4()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F9368(uint64_t a1, unsigned __int8 a2)
{
  return sub_1B29F9AC0(a1, a2, MEMORY[0x1E4FBC3C0]);
}

uint64_t sub_1B29F9380()
{
  return sub_1B29F9944();
}

uint64_t sub_1B29F9398()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F93B0()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F9424()
{
  return sub_1B29F9518();
}

uint64_t sub_1B29F943C()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F94D0()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F94E8()
{
  return sub_1B29F9944();
}

uint64_t sub_1B29F9500()
{
  return sub_1B29F9518();
}

uint64_t sub_1B29F9518()
{
  uint64_t v1 = sub_1B2A0F648();
  v0(v1);
  sub_1B29B1DA8();
  swift_bridgeObjectRelease();
  return sub_1B2E839E8();
}

uint64_t sub_1B29F9564()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F95E4()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F9650()
{
  return sub_1B29F9944();
}

uint64_t sub_1B29F9668()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F96D4()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F96EC()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F9708()
{
  return sub_1B29F9944();
}

uint64_t sub_1B29F9720()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F9738()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F979C()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F97B4()
{
  return sub_1B29F9944();
}

uint64_t sub_1B29F97CC()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F985C()
{
  return sub_1B29F9944();
}

uint64_t sub_1B29F9874()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F98FC()
{
  return sub_1B29F9944();
}

uint64_t sub_1B29F9914()
{
  return sub_1B29F9944();
}

uint64_t sub_1B29F992C()
{
  return sub_1B29F9944();
}

uint64_t sub_1B29F9944()
{
  sub_1B2A0F648();
  v0(v1);
  sub_1B29B1DA8();
  swift_bridgeObjectRelease();
  return sub_1B2E839E8();
}

uint64_t sub_1B29F998C()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F9A34()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F9A4C()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F9A64()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F9A7C()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F9AC0(uint64_t a1, unsigned __int8 a2, void (*a3)(void))
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F9B0C()
{
  return sub_1B29F9B24();
}

uint64_t sub_1B29F9B24()
{
  sub_1B2A0F648();
  v0(v3, v1);
  return sub_1B2E839E8();
}

uint64_t sub_1B29F9B64()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29F9BA0(uint64_t a1, uint64_t a2)
{
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B29F9C18()
{
  return 1701667182;
}

void sub_1B29F9C28()
{
  sub_1B299F300();
  uint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1E9C3B1A0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299B3C8();
  sub_1B29AEC7C(v1, v1[3]);
  sub_1B2A0E670();
  sub_1B2E83A38();
  sub_1B2E83688();
  sub_1B29A15FC();
  v3();
  sub_1B29EC408();
  sub_1B29998C8();
}

uint64_t sub_1B29F9D14(void *a1)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3B1B0);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0480();
  uint64_t v8 = (uint64_t)sub_1B29AEC7C(a1, a1[3]);
  sub_1B2A0E670();
  sub_1B2E83A18();
  if (!v1)
  {
    uint64_t v8 = sub_1B2E83568();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  return v8;
}

uint64_t sub_1B29F9E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29F9BA0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B29F9E64(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0E670();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29F9EA0(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0E670();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29F9EE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B29F9D14(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_1B29F9F0C()
{
}

id sub_1B29F9F28()
{
  uint64_t v0 = (objc_class *)type metadata accessor for AutonamingViewIdentifierType();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  uint64_t v2 = &v1[OBJC_IVAR___GDAutonamingViewIdentifierTypeInner_data];
  *(void *)uint64_t v2 = 0x6E6F737265504850;
  *((void *)v2 + 1) = 0xE800000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, sel_init);
  qword_1E9C3AF50 = (uint64_t)result;
  return result;
}

id static AutonamingViewIdentifierType.phPerson.getter()
{
  if (qword_1E9C38AF0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E9C3AF50;

  return v0;
}

void AutonamingViewIdentifierType.init()()
{
}

uint64_t sub_1B29FA05C(uint64_t a1, uint64_t a2)
{
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B29FA0D4()
{
  return 1635017060;
}

uint64_t sub_1B29FA0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29FA05C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B29FA114(uint64_t a1)
{
  unint64_t v2 = sub_1B29FA2DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29FA150(uint64_t a1)
{
  unint64_t v2 = sub_1B29FA2DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

id AutonamingViewIdentifierType.__deallocating_deinit()
{
  return sub_1B29FE3C8(type metadata accessor for AutonamingViewIdentifierType);
}

uint64_t type metadata accessor for AutonamingViewIdentifierType()
{
  return self;
}

uint64_t sub_1B29FA1DC()
{
  sub_1B29A3EB4(&qword_1E9C3AF58);
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B2A0FBD0();
  sub_1B29FA2DC();
  sub_1B299E584();
  sub_1B29FA328();
  sub_1B2E836D8();
  uint64_t v1 = sub_1B2A0F400();
  return v2(v1);
}

unint64_t sub_1B29FA2DC()
{
  unint64_t result = qword_1E9C3AF60;
  if (!qword_1E9C3AF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AF60);
  }
  return result;
}

unint64_t sub_1B29FA328()
{
  unint64_t result = qword_1E9C3AF70;
  if (!qword_1E9C3AF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AF70);
  }
  return result;
}

void AutonamingViewIdentifierType.__allocating_init(from:)()
{
  id v1 = objc_allocWithZone(v0);
  AutonamingViewIdentifierType.init(from:)();
}

void AutonamingViewIdentifierType.init(from:)()
{
  sub_1B299F300();
  char v3 = v2;
  sub_1B29A3EB4(&qword_1E9C3AF78);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A0480();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B29FA2DC();
  uint64_t v5 = v0;
  sub_1B2E83A18();
  if (v1)
  {

    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
    type metadata accessor for AutonamingViewIdentifierType();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1B29FA550();
    sub_1B2E835B8();
    uint64_t v6 = v12;
    uint64_t v7 = &v5[OBJC_IVAR___GDAutonamingViewIdentifierTypeInner_data];
    *(void *)uint64_t v7 = v11;
    *((void *)v7 + 1) = v6;

    v10.receiver = v5;
    v10.super_class = (Class)type metadata accessor for AutonamingViewIdentifierType();
    objc_msgSendSuper2(&v10, sel_init);
    uint64_t v8 = sub_1B2A0FAD4();
    v9(v8);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
  }
  sub_1B29998C8();
}

unint64_t sub_1B29FA550()
{
  unint64_t result = qword_1E9C3AF80;
  if (!qword_1E9C3AF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AF80);
  }
  return result;
}

uint64_t sub_1B29FA59C()
{
  swift_bridgeObjectRetain();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B29FA5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  }
  else {
    return sub_1B2E837A8();
  }
}

uint64_t sub_1B29FA610()
{
  return sub_1B2E839E8();
}

void sub_1B29FA664(void *a1@<X8>)
{
  AutonamingViewIdentifierType.__allocating_init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1B29FA690()
{
  return sub_1B29FA1DC();
}

uint64_t sub_1B29FA6B4()
{
  return sub_1B29FA610();
}

uint64_t sub_1B29FA6D0()
{
  return sub_1B29FA59C();
}

uint64_t sub_1B29FA6EC()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B29FA738(uint64_t *a1, uint64_t *a2)
{
  return sub_1B29FA5F8(*a1, a1[1], *a2, a2[1]) & 1;
}

id AutonamingView.__allocating_init(subgraph:isForLiveServing:)(uint64_t a1, char a2)
{
  id v5 = objc_allocWithZone(v2);
  return AutonamingView.init(subgraph:isForLiveServing:)(a1, a2);
}

id AutonamingView.init(subgraph:isForLiveServing:)(uint64_t a1, char a2)
{
  *(void *)&v2[OBJC_IVAR___GDAutonamingViewInner_subgraph] = a1;
  sub_1B29A3EB4(&qword_1EB7E2560);
  swift_allocObject();
  swift_retain_n();
  id v5 = v2;
  *(void *)&v5[OBJC_IVAR___GDAutonamingViewInner_context] = sub_1B29C83C8(a1);
  *(void *)&v5[OBJC_IVAR___GDAutonamingViewInner_feedbackService] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedbackService()), sel_init);
  *(void *)&v5[OBJC_IVAR___GDAutonamingViewInner_rejectedIdentifiers] = MEMORY[0x1E4FBC870];
  v5[OBJC_IVAR___GDAutonamingViewInner_isForLiveServing] = a2;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for AutonamingView();
  id v6 = objc_msgSendSuper2(&v8, sel_init);
  swift_release();
  return v6;
}

void sub_1B29FA8B4()
{
  sub_1B299F300();
  id v6 = v1;
  uint64_t v57 = v7;
  uint64_t v58 = v8;
  uint64_t v46 = v9;
  sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v54 = v11;
  uint64_t v55 = v10;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v53 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = sub_1B2E81FB8();
  sub_1B299D278();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  sub_1B29A0480();
  sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v51 = v21;
  uint64_t v52 = v20;
  MEMORY[0x1F4188790](v20);
  sub_1B29A0498();
  uint64_t v50 = type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v22);
  sub_1B299B0C8();
  sub_1B2E80668();
  sub_1B299D278();
  uint64_t v48 = v24;
  uint64_t v49 = v23;
  MEMORY[0x1F4188790](v23);
  sub_1B2999928();
  uint64_t v25 = sub_1B29A3EB4(&qword_1E9C3AFB0);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for CustomGraphPerson(0);
  uint64_t v56 = v27;
  uint64_t v45 = v28;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v27, 1, 1, v28);
  uint64_t v47 = v0;
  sub_1B2E80658();
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_1B29A4B98(v16, (uint64_t)qword_1EB7E6600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v4, v29, v16);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v30 = sub_1B2E81F28();
  os_signpost_type_t v31 = sub_1B2E82E68();
  uint64_t v32 = v15;
  if (sub_1B2E82F28())
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    os_signpost_id_t v34 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v30, v31, v34, "ViewEngine.Serving.AutonamingView.PersonLookup", "", v33, 2u);
    sub_1B299B750();
  }

  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v53, v32, v55);
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v35 = sub_1B2E81F68();
  sub_1B2A0F828();
  v36();
  *(void *)uint64_t v5 = "ViewEngine.Serving.AutonamingView.PersonLookup";
  *(void *)(v5 + 8) = 46;
  *(unsigned char *)(v5 + 16) = 2;
  *(void *)(v5 + 24) = v35;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v5 + *(int *)(v50 + 24), v3, v52);
  uint64_t v37 = (uint64_t *)&v6[OBJC_IVAR___GDAutonamingViewInner_rejectedIdentifiers];
  swift_beginAccess();
  uint64_t v38 = *v37;
  swift_bridgeObjectRetain();
  uint64_t v39 = v58;
  swift_bridgeObjectRetain();
  LOBYTE(v35) = sub_1B29FBAAC(v57, v39, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v35)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v46, 1, 1, v45);
    uint64_t v40 = (uint64_t)v56;
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    MEMORY[0x1F4188790](ObjectType);
    *(&v44 - 4) = (uint64_t)v6;
    *(&v44 - 3) = v42;
    *(&v44 - 2) = v39;
    uint64_t v40 = (uint64_t)v56;
    *(&v44 - 1) = (uint64_t)v56;
    swift_unknownObjectRetain();
    sub_1B2E80C18();
    swift_unknownObjectRelease();
    if (!v2) {
      sub_1B2A00748(v40, v46);
    }
  }
  sub_1B29FADF0(v40, v47, v6, v5);
  sub_1B2A00814(v5, (void (*)(void))type metadata accessor for LogSignpost);
  sub_1B299B798();
  v43();
  sub_1B2A0EA40(v40, &qword_1E9C3AFB0);
  sub_1B29998C8();
}

uint64_t sub_1B29FADF0(uint64_t a1, char *a2, const char *a3, uint64_t a4)
{
  uint64_t v70 = a4;
  uint64_t v73 = (char *)a3;
  uint64_t v74 = a2;
  uint64_t v5 = sub_1B2E81F48();
  uint64_t v64 = *(void *)(v5 - 8);
  uint64_t v65 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v63 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B2E81F08();
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v72 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1B2E81F38();
  uint64_t v76 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  long long v75 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B2E80668();
  uint64_t v11 = *(void **)(v10 - 8);
  uint64_t v12 = v11[8];
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v62 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v62 - v18;
  uint64_t v20 = type metadata accessor for CustomGraphPerson(0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1B29A3EB4(&qword_1E9C3AFB0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2A00748(a1, (uint64_t)v25);
  int v26 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v25, 1, v20);
  uint64_t v27 = 0;
  if (v26 != 1)
  {
    sub_1B2A007B0((uint64_t)v25, (uint64_t)v22);
    CustomGraphPerson.toObjectiveCGraphObject()(v28);
    uint64_t v27 = v29;
    sub_1B2A00814((uint64_t)v22, (void (*)(void))type metadata accessor for CustomGraphPerson);
  }
  uint64_t v68 = v27;
  sub_1B2E80658();
  uint64_t v69 = type metadata accessor for Analytics();
  uint64_t v30 = (void (*)(char *, char *, uint64_t))v11[2];
  os_signpost_type_t v31 = v17;
  v30(v17, v74, v10);
  v30(v14, v19, v10);
  uint64_t v32 = *((unsigned __int8 *)v11 + 80);
  uint64_t v33 = (v32 + 16) & ~v32;
  uint64_t v34 = (v12 + v32 + v33) & ~v32;
  unint64_t v35 = (v12 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v74 = v19;
  unint64_t v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = swift_allocObject();
  uint64_t v38 = (void (*)(uint64_t, char *, uint64_t))v11[4];
  v38(v37 + v33, v31, v10);
  v38(v37 + v34, v14, v10);
  uint64_t v39 = v68;
  *(void *)(v37 + v35) = v68;
  uint64_t v40 = v73;
  *(void *)(v37 + v36) = v73;
  uint64_t v41 = v10;
  id v42 = v39;
  int v43 = v40;
  static Analytics.sendEventForProductionLazy(eventName:eventPayloadBuilder:)(0xD00000000000002ELL, 0x80000001B2E96C50, (uint64_t)sub_1B2A0E930, v37);
  swift_release();
  uint64_t v44 = type metadata accessor for LogSignpost();
  uint64_t v45 = v70;
  uint64_t v46 = v71;
  uint64_t v48 = v75;
  uint64_t v47 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v70 + *(int *)(v44 + 24), v71);
  uint64_t v73 = *(char **)v45;
  LODWORD(v69) = *(unsigned __int8 *)(v45 + 16);
  swift_retain();
  uint64_t v49 = sub_1B2E81F28();
  uint64_t v50 = v72;
  sub_1B2E81F58();
  LODWORD(v70) = sub_1B2E82E58();
  uint64_t v51 = v49;
  uint64_t result = sub_1B2E82F28();
  uint64_t v53 = v74;
  if ((result & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v68 = v11;
  uint64_t v54 = v41;
  if ((v69 & 1) == 0)
  {
    if (v73)
    {
      uint64_t v55 = v51;
      uint64_t v57 = v64;
      uint64_t v56 = v65;
      uint64_t v58 = v63;
LABEL_11:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v57 + 88))(v58, v56) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v59 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
        uint64_t v59 = "";
      }
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v60 = 0;
      os_signpost_id_t v61 = sub_1B2E81EE8();
      uint64_t v51 = v55;
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v55, (os_signpost_type_t)v70, v61, v73, v59, v60, 2u);
      MEMORY[0x1B3EB30C0](v60, -1, -1);
      uint64_t v53 = v74;
      uint64_t v48 = v75;
      uint64_t v41 = v54;
      uint64_t v11 = v68;
      uint64_t v47 = v76;
LABEL_15:
      swift_release();

      (*(void (**)(char *, uint64_t))(v66 + 8))(v50, v67);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v46);
      return ((uint64_t (*)(char *, uint64_t))v11[1])(v53, v41);
    }
    __break(1u);
    goto LABEL_17;
  }
  if ((unint64_t)v73 >> 32)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v73 >> 11 != 27)
  {
    uint64_t v55 = v51;
    uint64_t v57 = v64;
    uint64_t v56 = v65;
    uint64_t v58 = v63;
    if (v73 >> 16 <= 0x10)
    {
      uint64_t v73 = &v77;
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

void sub_1B29FB4BC(uint64_t a1, uint64_t a2)
{
}

void sub_1B29FB4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1B2E83988();
    sub_1B2E82498();
    uint64_t v6 = sub_1B2E839E8();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v8 = v6 & ~v7;
    sub_1B29A2584();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_1B2A0F6F4() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_1B29A2584();
        if (v15)
        {
          do
          {
            uint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (sub_1B2A0F6F4()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_1B29A2584();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void sub_1B29FB5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_1B2A0ED70();
  a29 = v31;
  a30 = v34;
  if (*(void *)(v33 + 16))
  {
    uint64_t v35 = v33;
    unsigned __int8 v36 = v32;
    sub_1B2A0F6A4();
    sub_1B2AA49C0((uint64_t)&a10, v36);
    sub_1B2E839E8();
    sub_1B2A0EF5C();
    if (v37)
    {
      uint64_t v38 = v36;
      while (1)
      {
        unint64_t v39 = 0xE400000000000000;
        unint64_t v40 = 1701736302;
        switch(*(unsigned char *)(*(void *)(v35 + 48) + v30))
        {
          case 1:
            unint64_t v39 = 0x80000001B2E8EB10;
            unint64_t v40 = sub_1B29B1E20();
            break;
          case 2:
            unint64_t v39 = 0xE700000000000000;
            unint64_t v40 = sub_1B29A1630();
            break;
          case 3:
            uint64_t v41 = 0x47746E657665;
            goto LABEL_11;
          case 4:
            unint64_t v40 = sub_1B2A0FA50();
            unint64_t v39 = 0xED00007865646E49;
            break;
          case 5:
            unint64_t v40 = sub_1B2A0FA3C();
            unint64_t v39 = 0xEC0000007865646ELL;
            break;
          case 6:
            uint64_t v41 = 0x476C61636F6CLL;
LABEL_11:
            unint64_t v40 = v41 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
            unint64_t v39 = 0xEF7865646E496870;
            break;
          case 7:
            unint64_t v40 = 0xD00000000000001ALL;
            unint64_t v39 = 0x80000001B2E8EB70;
            break;
          case 8:
            unint64_t v40 = 0xD000000000000018;
            unint64_t v39 = 0x80000001B2E8EB90;
            break;
          default:
            break;
        }
        unint64_t v42 = 0xE400000000000000;
        uint64_t v43 = 1701736302;
        switch(v38)
        {
          case 1:
            unint64_t v42 = 0x80000001B2E8EB10;
            sub_1B29B1DE4();
            break;
          case 2:
            unint64_t v42 = 0xE700000000000000;
            sub_1B2A0F9BC();
            break;
          case 3:
            uint64_t v44 = 0x47746E657665;
            goto LABEL_21;
          case 4:
            sub_1B2A0F9A8();
            unint64_t v42 = 0xED00007865646E49;
            break;
          case 5:
            sub_1B2A0F994();
            unint64_t v42 = 0xEC0000007865646ELL;
            break;
          case 6:
            uint64_t v44 = 0x476C61636F6CLL;
LABEL_21:
            uint64_t v43 = v44 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
            unint64_t v42 = 0xEF7865646E496870;
            break;
          case 7:
            uint64_t v43 = 0xD00000000000001ALL;
            unint64_t v42 = 0x80000001B2E8EB70;
            break;
          case 8:
            uint64_t v43 = 0xD000000000000018;
            unint64_t v42 = 0x80000001B2E8EB90;
            break;
          default:
            break;
        }
        if (v40 == v43 && v39 == v42) {
          break;
        }
        char v46 = sub_1B2A0F454();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v46 & 1) == 0)
        {
          sub_1B2A0F2C4();
          if (v47) {
            continue;
          }
        }
        goto LABEL_30;
      }
      swift_bridgeObjectRelease_n();
    }
  }
LABEL_30:
  sub_1B2A0ED54();
}

void sub_1B29FB8A4()
{
  sub_1B2A0F00C();
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = v1;
    uint64_t v3 = v0;
    sub_1B2A0F6A4();
    uint64_t v4 = *v3;
    uint64_t v5 = v3[1];
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1B2E839E8();
    uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v8 = v6 & ~v7;
    sub_1B29A2584();
    if (v9)
    {
      uint64_t v10 = *(void *)(v2 + 48);
      uint64_t v11 = (void *)(v10 + 40 * v8);
      if ((*v11 != v4 || v11[1] != v5) && (sub_1B2A0F1D8() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_1B29A2584();
        if (v15)
        {
          do
          {
            uint64_t v16 = (void *)(v10 + 40 * v14);
            if (*v16 == v4 && v16[1] == v5) {
              break;
            }
            if (sub_1B2A0F1D8()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_1B29A2584();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
  sub_1B2A0EFD4();
}

void sub_1B29FB9A8()
{
  sub_1B2A0F00C();
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = v1;
    uint64_t v3 = v0;
    sub_1B2A0F6A4();
    uint64_t v4 = *(void *)(v3 + 16);
    uint64_t v5 = *(void *)(v3 + 24);
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1B2E839E8();
    uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v8 = v6 & ~v7;
    sub_1B29A2584();
    if (v9)
    {
      uint64_t v10 = *(void *)(v2 + 48);
      uint64_t v11 = v10 + 40 * v8;
      if ((*(void *)(v11 + 16) != v4 || *(void *)(v11 + 24) != v5) && (sub_1B2A0F1D8() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_1B29A2584();
        if (v15)
        {
          do
          {
            uint64_t v16 = v10 + 40 * v14;
            if (*(void *)(v16 + 16) == v4 && *(void *)(v16 + 24) == v5) {
              break;
            }
            if (sub_1B2A0F1D8()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_1B29A2584();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
  sub_1B2A0EFD4();
}

uint64_t sub_1B29FBAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1B2E83988();
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1B2E839E8();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1B2E837A8() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1B2E837A8() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

void sub_1B29FBBF4(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    int v3 = a1;
    sub_1B2A0F6A4();
    sub_1B2E83998();
    sub_1B2E839E8();
    sub_1B2A0EE98();
    if ((v5 & 1) != 0 && *(unsigned __int8 *)(*(void *)(a2 + 48) + v4) != v3)
    {
      sub_1B29A1614();
      if (v8)
      {
        do
        {
          if (*(unsigned __int8 *)(v6 + v7) == v3) {
            break;
          }
          sub_1B29A1614();
        }
        while ((v9 & 1) != 0);
      }
    }
  }
}

void sub_1B29FBC94(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v3 = sub_1B2E83978() & ~(-1 << *(unsigned char *)(a2 + 32));
    if ((*(void *)(a2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v3))
    {
      sub_1B2A0FBB0();
      if (!v4)
      {
        sub_1B29A1614();
        if (v5)
        {
          do
          {
            sub_1B2A0FBB0();
            if (v4) {
              break;
            }
            sub_1B29A1614();
          }
          while ((v6 & 1) != 0);
        }
      }
    }
  }
}

uint64_t sub_1B29FBD30(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1B29F9518(), sub_1B2A0EF5C(), (v5 & 1) != 0))
  {
    while (1)
    {
      unint64_t v6 = 0xE500000000000000;
      uint64_t v7 = "familyAndFriends";
      uint64_t v8 = 0x7465736E75;
      switch(*(unsigned char *)(*(void *)(a2 + 48) + v2))
      {
        case 1:
          unint64_t v6 = 0xE700000000000000;
          uint64_t v8 = sub_1B2A0F224();
          break;
        case 2:
          uint64_t v8 = sub_1B2A0F7E4();
          break;
        case 3:
          unint64_t v6 = 0xE600000000000000;
          uint64_t v8 = sub_1B2A0F7D4();
          break;
        case 4:
          unint64_t v6 = 0xE600000000000000;
          uint64_t v8 = sub_1B2A0F788();
          break;
        case 5:
          unint64_t v6 = 0xE600000000000000;
          uint64_t v8 = sub_1B2A0F738();
          break;
        case 6:
          uint64_t v8 = 0x726568746F6DLL;
          unint64_t v6 = 0xE600000000000000;
          break;
        case 7:
          unint64_t v6 = 0xE600000000000000;
          uint64_t v9 = 1752457574;
          goto LABEL_14;
        case 8:
          unint64_t v6 = 0xE700000000000000;
          uint64_t v8 = sub_1B2A0F1AC();
          break;
        case 9:
          unint64_t v6 = 0xE700000000000000;
          uint64_t v10 = sub_1B2A0F70C();
          goto LABEL_25;
        case 0xA:
          unint64_t v6 = 0xE600000000000000;
          uint64_t v9 = 1953720691;
LABEL_14:
          uint64_t v8 = v9 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
          break;
        case 0xB:
          uint64_t v8 = 0x726150646E617267;
          uint64_t v11 = 7630437;
          goto LABEL_19;
        case 0xC:
          uint64_t v8 = sub_1B2A0F17C();
          goto LABEL_18;
        case 0xD:
          uint64_t v8 = sub_1B2A0F168();
LABEL_18:
          uint64_t v11 = 7497064;
LABEL_19:
          unint64_t v6 = v11 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0xE:
          unint64_t v6 = 0xE700000000000000;
          uint64_t v12 = sub_1B2A0F7B4();
          goto LABEL_28;
        case 0xF:
          uint64_t v8 = sub_1B2A0F6BC();
          break;
        case 0x10:
          unint64_t v6 = 0xE300000000000000;
          uint64_t v8 = 7237491;
          break;
        case 0x11:
          unint64_t v6 = 0xE800000000000000;
          uint64_t v13 = sub_1B2A0F694();
          goto LABEL_32;
        case 0x12:
          unint64_t v6 = 0xE700000000000000;
          uint64_t v10 = sub_1B2A0F748();
LABEL_25:
          uint64_t v8 = v10 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
          break;
        case 0x13:
          unint64_t v6 = 0xE400000000000000;
          uint64_t v8 = 1701210487;
          break;
        case 0x14:
          unint64_t v6 = 0xE700000000000000;
          uint64_t v12 = sub_1B2A0F674();
LABEL_28:
          uint64_t v8 = v12 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
          break;
        case 0x15:
          unint64_t v6 = 0xE600000000000000;
          uint64_t v8 = sub_1B2A0F664();
          break;
        case 0x16:
          unint64_t v6 = 0x80000001B2E8EA20;
          uint64_t v8 = sub_1B29B1E20();
          break;
        case 0x17:
          unint64_t v6 = 0xE800000000000000;
          uint64_t v13 = sub_1B2A0F5F0();
LABEL_32:
          uint64_t v8 = v13 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
          break;
        case 0x18:
          unint64_t v6 = 0xE800000000000000;
          uint64_t v8 = sub_1B2A0F0D8();
          break;
        case 0x19:
          uint64_t v8 = 0x74616D6573756F68;
          unint64_t v6 = 0xE900000000000065;
          break;
        case 0x1A:
          unint64_t v6 = 0xE600000000000000;
          uint64_t v8 = sub_1B2A0F600();
          break;
        case 0x1B:
          uint64_t v14 = 1699772781;
          goto LABEL_39;
        case 0x1C:
          uint64_t v8 = sub_1B2A0F7C4();
          break;
        case 0x1D:
          uint64_t v14 = 1631811949;
LABEL_39:
          uint64_t v8 = v14 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
          break;
        default:
          break;
      }
      unint64_t v15 = 0xE500000000000000;
      uint64_t v16 = 0x7465736E75;
      switch(a1)
      {
        case 1:
          unint64_t v15 = 0xE700000000000000;
          sub_1B299ADA0();
          break;
        case 2:
          sub_1B2A0F5C8();
          break;
        case 3:
          unint64_t v15 = 0xE600000000000000;
          sub_1B2A0F598();
          break;
        case 4:
          unint64_t v15 = 0xE600000000000000;
          sub_1B2A0F588();
          break;
        case 5:
          unint64_t v15 = 0xE600000000000000;
          sub_1B2A0F568();
          break;
        case 6:
          uint64_t v16 = 0x726568746F6DLL;
          unint64_t v15 = 0xE600000000000000;
          break;
        case 7:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v17 = 1752457574;
          goto LABEL_51;
        case 8:
          unint64_t v15 = 0xE700000000000000;
          sub_1B2A0F084();
          break;
        case 9:
          unint64_t v15 = 0xE700000000000000;
          sub_1B2A0F558();
          goto LABEL_62;
        case 10:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v17 = 1953720691;
LABEL_51:
          uint64_t v16 = v17 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
          break;
        case 11:
          uint64_t v16 = 0x726150646E617267;
          uint64_t v19 = 7630437;
          goto LABEL_56;
        case 12:
          sub_1B299B124();
          goto LABEL_55;
        case 13:
          sub_1B2A0F070();
LABEL_55:
          uint64_t v19 = 7497064;
LABEL_56:
          unint64_t v15 = v19 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 14:
          unint64_t v15 = 0xE700000000000000;
          sub_1B2A0F5B8();
          goto LABEL_65;
        case 15:
          sub_1B2A0F508();
          break;
        case 16:
          unint64_t v15 = 0xE300000000000000;
          uint64_t v16 = 7237491;
          break;
        case 17:
          unint64_t v15 = 0xE800000000000000;
          sub_1B2A0F4B4();
          goto LABEL_69;
        case 18:
          unint64_t v15 = 0xE700000000000000;
          sub_1B2A0F578();
LABEL_62:
          uint64_t v16 = v18 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
          break;
        case 19:
          unint64_t v15 = 0xE400000000000000;
          uint64_t v16 = 1701210487;
          break;
        case 20:
          unint64_t v15 = 0xE700000000000000;
          sub_1B2A0F48C();
LABEL_65:
          uint64_t v16 = v20 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
          break;
        case 21:
          unint64_t v15 = 0xE600000000000000;
          sub_1B2A0F47C();
          break;
        case 22:
          unint64_t v15 = (unint64_t)(v7 - 32) | 0x8000000000000000;
          sub_1B29B1DE4();
          break;
        case 23:
          unint64_t v15 = 0xE800000000000000;
          sub_1B2A0F530();
LABEL_69:
          uint64_t v16 = v21 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
          break;
        case 24:
          unint64_t v15 = 0xE800000000000000;
          sub_1B2A0F024();
          break;
        case 25:
          uint64_t v16 = 0x74616D6573756F68;
          unint64_t v15 = 0xE900000000000065;
          break;
        case 26:
          unint64_t v15 = 0xE600000000000000;
          sub_1B2A0F46C();
          break;
        case 27:
          uint64_t v22 = 1699772781;
          goto LABEL_76;
        case 28:
          sub_1B2A0F5A8();
          break;
        case 29:
          uint64_t v22 = 1631811949;
LABEL_76:
          uint64_t v16 = v22 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
          break;
        default:
          break;
      }
      if (v8 == v16 && v6 == v15) {
        break;
      }
      char v24 = sub_1B2A0F454();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        sub_1B2A0F2C4();
        if (v25) {
          continue;
        }
      }
      return v24 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v24 = 1;
  }
  else
  {
    char v24 = 0;
  }
  return v24 & 1;
}

void sub_1B29FC29C(uint64_t a1, uint64_t a2)
{
}

void sub_1B29FC2B4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  if (*(void *)(a2 + 16))
  {
    sub_1B2A0F6A4();
    a3(a1);
    sub_1B2E839E8();
    sub_1B2A0EE98();
    if (v5)
    {
      sub_1B2A0FBB0();
      if (!v6)
      {
        sub_1B29A1614();
        if (v7)
        {
          do
          {
            sub_1B2A0FBB0();
            if (v6) {
              break;
            }
            sub_1B29A1614();
          }
          while ((v8 & 1) != 0);
        }
      }
    }
  }
}

void sub_1B29FC354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)&long long v44 = a3;
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C3AFB0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for CustomGraphPerson(0);
  MEMORY[0x1F4188790](v43);
  char v46 = (void *)((char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1B2E81028();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v47 = v12;
  uint64_t v48 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v41 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v37 - v16;
  sub_1B2E813A8();
  *(void *)&long long v50 = 0;
  *((void *)&v50 + 1) = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  uint64_t v42 = a2;
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  uint64_t v40 = sub_1B29A3EB4(&qword_1EB7D98C8);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B2EBFA40;
  uint64_t v19 = v18;
  uint64_t v38 = a5;
  unint64_t v39 = v10;
  sub_1B2A7C538(0xC9uLL, (uint64_t)&v50);
  long long v20 = v50;
  swift_bridgeObjectRelease();
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  uint64_t v22 = MEMORY[0x1E4F62F70];
  *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v19 + 64) = v22;
  *(_OWORD *)(v19 + 32) = v20;
  *(void *)(v19 + 96) = v21;
  *(void *)(v19 + 104) = v22;
  *(void *)(v19 + 72) = v44;
  *(void *)(v19 + 80) = a4;
  swift_bridgeObjectRetain();
  sub_1B2E81008();
  uint64_t v52 = 0;
  long long v50 = 0u;
  long long v51 = 0u;
  uint64_t v23 = v45;
  sub_1B2E81348();
  if (v23)
  {
    swift_bridgeObjectRelease();
    sub_1B2A0EA40((uint64_t)&v50, &qword_1E9C37BC0);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v17, v47);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1B2A0EA40((uint64_t)&v50, &qword_1E9C37BC0);
    uint64_t v24 = v48 + 8;
    char v25 = *(void (**)(char *, uint64_t))(v48 + 8);
    v25(v17, v47);
    uint64_t v26 = OBJC_IVAR___GDAutonamingViewInner_context;
    uint64_t v27 = sub_1B2DD07F8();
    uint64_t v45 = v25;
    long long v44 = xmmword_1B2EC00A0;
    v37[2] = 0x80000001B2E970A0;
    v37[3] = 0xD000000000000030;
    uint64_t v28 = (uint64_t)v39;
    v37[1] = v26;
    uint64_t v48 = v24;
    while (1)
    {
      if (!v27) {
        goto LABEL_4;
      }
      sub_1B2D7EAFC((uint64_t)&v50);
      if (BYTE8(v50))
      {
        swift_release();
LABEL_4:
        swift_release();
        return;
      }
      sub_1B2B55128(v50, &v50);
      swift_retain();
      sub_1B2DA39A0();
      swift_release();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v28, 1, v43) == 1)
      {
        swift_release();
        swift_release();
        sub_1B2A0EA40(v28, &qword_1E9C3AFB0);
        return;
      }
      uint64_t v29 = v46;
      sub_1B2A007B0(v28, (uint64_t)v46);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = v44;
      uint64_t v31 = *v29;
      uint64_t v32 = (*v29 & 0x80000000000000) != 0 ? 3826797 : 3828069;
      *(void *)&long long v50 = v32;
      *((void *)&v50 + 1) = 0xE300000000000000;
      uint64_t v53 = v31;
      sub_1B2E83748();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      long long v33 = v50;
      *(void *)(v30 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v30 + 64) = MEMORY[0x1E4F62F70];
      *(_OWORD *)(v30 + 32) = v33;
      uint64_t v34 = v41;
      sub_1B2E81008();
      uint64_t v52 = 0;
      long long v50 = 0u;
      long long v51 = 0u;
      sub_1B2E811D8();
      swift_release();
      sub_1B2A0EA40((uint64_t)&v50, &qword_1E9C37BC0);
      v45(v34, v47);
      uint64_t v35 = v49;
      swift_bridgeObjectRelease();
      if (!v35) {
        break;
      }
      sub_1B2A00814((uint64_t)v46, (void (*)(void))type metadata accessor for CustomGraphPerson);
      uint64_t v27 = sub_1B2DD07F8();
    }
    swift_release();
    uint64_t v36 = v38;
    sub_1B2A0EA40(v38, &qword_1E9C3AFB0);
    sub_1B2A007B0((uint64_t)v46, v36);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v36, 0, 1, v43);
  }
}

uint64_t sub_1B29FCA6C()
{
  uint64_t v1 = type metadata accessor for CustomGraphPerson(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v2);
  sub_1B2999928();
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3AFB0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  char v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v13 - v7;
  sub_1B29FA8B4();
  sub_1B2A00748((uint64_t)v8, (uint64_t)v6);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v1) == 1)
  {
    uint64_t v9 = 0;
  }
  else
  {
    sub_1B2A007B0((uint64_t)v6, v0);
    CustomGraphPerson.toObjectiveCGraphObject()(v10);
    uint64_t v9 = v11;
    sub_1B2A00814(v0, (void (*)(void))type metadata accessor for CustomGraphPerson);
  }
  sub_1B2A0EA40((uint64_t)v8, &qword_1E9C3AFB0);
  return v9;
}

uint64_t sub_1B29FCDD4()
{
  type metadata accessor for AutonamingViewFeedback();
  uint64_t v1 = sub_1B2A0F1C0();
  *(void *)(v1 + 16) = 1;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(void *)(v1 + 56) = 0;
  *(unsigned char *)(v1 + 64) = 2;
  sub_1B2A0EDF4((void *)v1);
  if (v0) {

  }
  return swift_release();
}

__n128 AutonamingViewFeedback.__allocating_init(feedback:)(uint64_t a1)
{
  uint64_t v2 = sub_1B2A0F1C0();
  char v3 = *(unsigned char *)(a1 + 48);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v2 + 48) = result;
  *(unsigned char *)(v2 + 64) = v3;
  return result;
}

void sub_1B29FCE9C(void *a1, uint64_t a2, int a3)
{
  LODWORD(v34) = a3;
  v35[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1B2E80668();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35[0] = a1;
  type metadata accessor for AutonamingViewFeedback();
  sub_1B2A0E7A0(&qword_1E9C37E48, v11, (void (*)(uint64_t))type metadata accessor for AutonamingViewFeedback);
  uint64_t v12 = sub_1B2E802B8();
  if (v4)
  {
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1B2E81FB8();
    sub_1B29A4B98(v14, (uint64_t)qword_1EB7E5AC0);
    id v15 = v4;
    id v16 = v4;
    uint64_t v17 = sub_1B2E81F98();
    os_log_type_t v18 = sub_1B2E82DB8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      long long v20 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412290;
      id v21 = v4;
      uint64_t v22 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v35[0] = v22;
      sub_1B2E82FB8();
      *long long v20 = v22;

      _os_log_impl(&dword_1B2996000, v17, v18, "Failed to encode Feedback: %@", v19, 0xCu);
      sub_1B29A3EB4(&qword_1EB7E3110);
      swift_arrayDestroy();
      MEMORY[0x1B3EB30C0](v20, -1, -1);
      MEMORY[0x1B3EB30C0](v19, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    uint64_t v23 = v12;
    unint64_t v24 = v13;
    id v33 = *(id *)(v3 + OBJC_IVAR___GDFeedbackServiceInner_server);
    sub_1B29F4F7C(v12, v13);
    char v25 = (void *)sub_1B2E80568();
    sub_1B29C34DC(v23, v24);
    uint64_t v26 = sub_1B2E82348();
    uint64_t v27 = a2;
    uint64_t v28 = (void *)v26;
    if (v34) {
      uint64_t v27 = 0;
    }
    uint64_t v34 = v27;
    sub_1B2E80628();
    uint64_t v29 = (void *)sub_1B2E805E8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v35[0] = 0;
    unsigned __int8 v30 = objc_msgSend(v33, sel_logWithFeedbackData_type_variant_eventId_withTimestamp_shouldProcessImmediately_error_, v25, v28, 0, v34, v29, 1, v35);

    id v31 = v35[0];
    if ((v30 & 1) == 0)
    {
      uint64_t v32 = v31;
      sub_1B2E80388();

      swift_willThrow();
    }
    sub_1B29C34DC(v23, v24);
  }
}

void sub_1B29FD2A0()
{
  sub_1B299F300();
  sub_1B299E56C(v3, v4, v5);
  char v6 = sub_1B2A0FAE8(*MEMORY[0x1E4F143B8]);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299B0C8();
  sub_1B2A0F214();
  type metadata accessor for EntityResolutionRankingStatefulFeedback();
  sub_1B2A0E7A0(&qword_1E9C3B208, 255, (void (*)(uint64_t))type metadata accessor for EntityResolutionRankingStatefulFeedback);
  sub_1B2A0EE64();
  if (v0)
  {
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1B2E81FB8();
    sub_1B2A0F4DC(v8, (uint64_t)qword_1EB7E5AC0);
    id v9 = v0;
    uint64_t v10 = (void *)sub_1B2E81F98();
    os_log_type_t v11 = sub_1B2E82DB8();
    if (sub_1B2A0F11C(v11))
    {
      sub_1B2A0F100();
      sub_1B2A0EFB8();
      sub_1B2A0EE44(5.7779e-34);
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_1B2A0ECDC(v12);
      sub_1B2A0FAA8();

      sub_1B2999908(&dword_1B2996000, v13, v14, "Failed to encode Feedback: %@");
      sub_1B29A3EB4(&qword_1EB7E3110);
      sub_1B2A0F190();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {
    }
  }
  else
  {
    sub_1B2A0FB00();
    sub_1B2A0FA64(v15, v16, OBJC_IVAR___GDFeedbackServiceInner_server);
    sub_1B2A0F8EC();
    sub_1B2A0EF84();
    sub_1B299B7D8();
    sub_1B2E82348();
    sub_1B2A0ECB0();
    sub_1B2E805E8();
    uint64_t v17 = sub_1B2A0ED20();
    uint64_t v19 = v18(v17);
    sub_1B29A4C78(v19, sel_logWithFeedbackData_type_variant_eventId_withTimestamp_shouldProcessImmediately_error_);
    sub_1B2A0FA24();

    id v20 = 0;
    if ((v6 & 1) == 0)
    {
      id v21 = v20;
      sub_1B2E80388();

      swift_willThrow();
    }
    sub_1B2A0EF84();
  }
  sub_1B29EC408();
  sub_1B29998C8();
}

void sub_1B29FD520()
{
  sub_1B299F300();
  sub_1B299E56C(v3, v4, v5);
  char v6 = sub_1B2A0FAE8(*MEMORY[0x1E4F143B8]);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299B0C8();
  sub_1B2A0F214();
  type metadata accessor for EntityResolutionRankingDirectFeedback();
  sub_1B2A0E7A0(&qword_1E9C3B200, 255, (void (*)(uint64_t))type metadata accessor for EntityResolutionRankingDirectFeedback);
  sub_1B2A0EE64();
  if (v0)
  {
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1B2E81FB8();
    sub_1B2A0F4DC(v8, (uint64_t)qword_1EB7E5AC0);
    id v9 = v0;
    uint64_t v10 = (void *)sub_1B2E81F98();
    os_log_type_t v11 = sub_1B2E82DB8();
    if (sub_1B2A0F11C(v11))
    {
      sub_1B2A0F100();
      sub_1B2A0EFB8();
      sub_1B2A0EE44(5.7779e-34);
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_1B2A0ECDC(v12);
      sub_1B2A0FAA8();

      sub_1B2999908(&dword_1B2996000, v13, v14, "Failed to encode Feedback: %@");
      sub_1B29A3EB4(&qword_1EB7E3110);
      sub_1B2A0F190();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {
    }
  }
  else
  {
    sub_1B2A0FB00();
    sub_1B2A0FA64(v15, v16, OBJC_IVAR___GDFeedbackServiceInner_server);
    sub_1B2A0F8EC();
    sub_1B2A0EF84();
    sub_1B299B7D8();
    sub_1B2E82348();
    sub_1B2A0ECB0();
    sub_1B2E805E8();
    uint64_t v17 = sub_1B2A0ED20();
    uint64_t v19 = v18(v17);
    sub_1B29A4C78(v19, sel_logWithFeedbackData_type_variant_eventId_withTimestamp_shouldProcessImmediately_error_);
    sub_1B2A0FA24();

    id v20 = 0;
    if ((v6 & 1) == 0)
    {
      id v21 = v20;
      sub_1B2E80388();

      swift_willThrow();
    }
    sub_1B2A0EF84();
  }
  sub_1B29EC408();
  sub_1B29998C8();
}

void sub_1B29FD7A0()
{
  sub_1B299F300();
  sub_1B299E56C(v3, v4, v5);
  char v6 = sub_1B2A0FAE8(*MEMORY[0x1E4F143B8]);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299B0C8();
  sub_1B2A0F214();
  type metadata accessor for EntityTaggingDirectFeedback();
  sub_1B2A0E7A0(&qword_1E9C3B1C0, 255, (void (*)(uint64_t))type metadata accessor for EntityTaggingDirectFeedback);
  sub_1B2A0EE64();
  if (v0)
  {
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1B2E81FB8();
    sub_1B2A0F4DC(v8, (uint64_t)qword_1EB7E5AC0);
    id v9 = v0;
    uint64_t v10 = (void *)sub_1B2E81F98();
    os_log_type_t v11 = sub_1B2E82DB8();
    if (sub_1B2A0F11C(v11))
    {
      sub_1B2A0F100();
      sub_1B2A0EFB8();
      sub_1B2A0EE44(5.7779e-34);
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_1B2A0ECDC(v12);
      sub_1B2A0FAA8();

      sub_1B2999908(&dword_1B2996000, v13, v14, "Failed to encode Feedback: %@");
      sub_1B29A3EB4(&qword_1EB7E3110);
      sub_1B2A0F190();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {
    }
  }
  else
  {
    sub_1B2A0FB00();
    sub_1B2A0FA64(v15, v16, OBJC_IVAR___GDFeedbackServiceInner_server);
    sub_1B2A0F8EC();
    sub_1B2A0EF84();
    sub_1B299B7D8();
    sub_1B2E82348();
    sub_1B2A0ECB0();
    sub_1B2E805E8();
    uint64_t v17 = sub_1B2A0ED20();
    uint64_t v19 = v18(v17);
    sub_1B29A4C78(v19, sel_logWithFeedbackData_type_variant_eventId_withTimestamp_shouldProcessImmediately_error_);
    sub_1B2A0FA24();

    id v20 = 0;
    if ((v6 & 1) == 0)
    {
      id v21 = v20;
      sub_1B2E80388();

      swift_willThrow();
    }
    sub_1B2A0EF84();
  }
  sub_1B29EC408();
  sub_1B29998C8();
}

void sub_1B29FDA20()
{
  sub_1B299F300();
  sub_1B299E56C(v3, v4, v5);
  char v6 = sub_1B2A0FAE8(*MEMORY[0x1E4F143B8]);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299B0C8();
  sub_1B2A0F214();
  type metadata accessor for EntityTaggingStatefulFeedback();
  sub_1B2A0E7A0(&qword_1E9C3B1E8, 255, (void (*)(uint64_t))type metadata accessor for EntityTaggingStatefulFeedback);
  sub_1B2A0EE64();
  if (v0)
  {
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1B2E81FB8();
    sub_1B2A0F4DC(v8, (uint64_t)qword_1EB7E5AC0);
    id v9 = v0;
    uint64_t v10 = (void *)sub_1B2E81F98();
    os_log_type_t v11 = sub_1B2E82DB8();
    if (sub_1B2A0F11C(v11))
    {
      sub_1B2A0F100();
      sub_1B2A0EFB8();
      sub_1B2A0EE44(5.7779e-34);
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_1B2A0ECDC(v12);
      sub_1B2A0FAA8();

      sub_1B2999908(&dword_1B2996000, v13, v14, "Failed to encode Feedback: %@");
      sub_1B29A3EB4(&qword_1EB7E3110);
      sub_1B2A0F190();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {
    }
  }
  else
  {
    sub_1B2A0FB00();
    sub_1B2A0FA64(v15, v16, OBJC_IVAR___GDFeedbackServiceInner_server);
    sub_1B2A0F8EC();
    sub_1B2A0EF84();
    sub_1B299B7D8();
    sub_1B2E82348();
    sub_1B2A0ECB0();
    sub_1B2E805E8();
    uint64_t v17 = sub_1B2A0ED20();
    uint64_t v19 = v18(v17);
    sub_1B29A4C78(v19, sel_logWithFeedbackData_type_variant_eventId_withTimestamp_shouldProcessImmediately_error_);
    sub_1B2A0FA24();

    id v20 = 0;
    if ((v6 & 1) == 0)
    {
      id v21 = v20;
      sub_1B2E80388();

      swift_willThrow();
    }
    sub_1B2A0EF84();
  }
  sub_1B29EC408();
  sub_1B29998C8();
}

uint64_t sub_1B29FDCE8()
{
  sub_1B2A0EE10();
  sub_1B2A0ED8C();
  swift_bridgeObjectRetain();
  sub_1B2A0C11C(v1, (uint64_t)v0);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  CustomGraphPerson.toObjectiveCGraphObject()(v2);
  uint64_t v4 = v3;
  sub_1B29FDE64(v16);

  sub_1B2A0F054();
  int v5 = (__n128 *)sub_1B2A0F1C0();
  sub_1B2A0F3C8(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  sub_1B2A0EDF4(v14);
  if (v0) {

  }
  return swift_release();
}

uint64_t sub_1B29FDDAC()
{
  sub_1B2A0EE10();
  sub_1B2A0ED8C();
  swift_bridgeObjectRetain();
  sub_1B2A0C11C(v1, (uint64_t)v0);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B29FDE64(v13);
  sub_1B2A0F054();
  uint64_t v2 = (__n128 *)sub_1B2A0F1C0();
  sub_1B2A0F3C8(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1B2A0EDF4(v11);
  if (v0) {

  }
  return swift_release();
}

uint64_t sub_1B29FDE64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3B238);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B2E80368();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  __n128 v13 = (char *)&v26 - v12;
  uint64_t v14 = sub_1B2A0D234(v2, (SEL *)&selRef_suggestedNameStringInner);
  uint64_t v16 = v15;
  id v17 = objc_msgSend(v2, sel_suggestedNameComponentsInner);
  if (!v17)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 1, 1, v7);
    goto LABEL_5;
  }
  os_log_type_t v18 = v17;
  sub_1B2E80348();

  uint64_t v27 = v8;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v19(v6, v11, v7);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 0, 1, v7);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v7) == 1)
  {
LABEL_5:
    sub_1B2A0EA40((uint64_t)v6, &qword_1E9C3B238);
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  v19(v13, v6, v7);
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F38]), sel_init);
  objc_msgSend(v20, sel_setStyle_, 3);
  id v21 = (void *)sub_1B2E80338();
  id v22 = objc_msgSend(v20, sel_stringFromPersonNameComponents_, v21);

  uint64_t v14 = sub_1B2E82378();
  uint64_t v16 = v23;

  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v7);
LABEL_6:
  uint64_t result = sub_1B2A0D234(v2, (SEL *)&selRef_suggestedContactIdentifierInner);
  *a1 = result;
  a1[1] = v25;
  a1[2] = v14;
  a1[3] = v16;
  return result;
}

uint64_t sub_1B29FE128()
{
  sub_1B2A0EE10();
  sub_1B2A0ED8C();
  swift_bridgeObjectRetain();
  sub_1B2A01008(&v17, v1, (uint64_t)v0);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  CustomGraphPerson.toObjectiveCGraphObject()(v2);
  uint64_t v4 = v3;
  sub_1B29FDE64(v16);

  sub_1B2A0F054();
  uint64_t v5 = (__n128 *)sub_1B2A0F1C0();
  sub_1B2A0F148(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  sub_1B2A0EDF4(v14);
  if (v0) {

  }
  return swift_release();
}

uint64_t sub_1B29FE1E8()
{
  sub_1B2A0EE10();
  sub_1B2A0ED8C();
  swift_bridgeObjectRetain();
  sub_1B2A01008(&v14, v1, (uint64_t)v0);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B29FDE64(v13);
  sub_1B2A0F054();
  uint64_t v2 = (__n128 *)sub_1B2A0F1C0();
  sub_1B2A0F148(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1B2A0EDF4(v11);
  if (v0) {

  }
  return swift_release();
}

uint64_t sub_1B29FE2B4(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, id))
{
  uint64_t v9 = sub_1B2E82378();
  uint64_t v11 = v10;
  id v12 = a4;
  id v13 = a1;
  a6(v9, v11, v12);

  return swift_bridgeObjectRelease();
}

id AutonamingView.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void AutonamingView.init()()
{
}

id AutonamingView.__deallocating_deinit()
{
  return sub_1B29FE3C8(type metadata accessor for AutonamingView);
}

id sub_1B29FE3C8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id AutonamingView.__allocating_init(viewName:)()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  v7[0] = 0;
  id v3 = objc_msgSend(v1, sel_initWithViewName_error_, v2, v7);

  if (v3)
  {
    id v4 = v7[0];
  }
  else
  {
    id v5 = v7[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v3;
}

void *AutonamingView.init(viewName:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ViewService();
  id v5 = (void *)static ViewService.clientService.getter();
  uint64_t v6 = ViewService.subgraphView(name:tableName:batchSize:)(a1, a2, 0x6870617267627573, 0xE800000000000000, 10);

  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_getObjectType();
    sub_1B2A0F904();
  }
  else
  {
    objc_allocWithZone((Class)type metadata accessor for AutonamingView());
    uint64_t v6 = AutonamingView.init(subgraph:isForLiveServing:)((uint64_t)v6, 1);
    swift_getObjectType();
    sub_1B2A0F904();
  }
  return v6;
}

void AutonamingView.personFor(_:ofType:)()
{
}

Swift::Void __swiftcall AutonamingView.reset()()
{
  uint64_t v2 = (void *)(v0 + OBJC_IVAR___GDAutonamingViewInner_rejectedIdentifiers);
  swift_beginAccess();
  *uint64_t v2 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRelease();
  type metadata accessor for AutonamingViewFeedback();
  uint64_t v3 = sub_1B2A0F1C0();
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(unsigned char *)(v3 + 64) = 2;
  sub_1B2A0EDF4((void *)v3);
  if (v1) {

  }
  swift_release();
}

uint64_t AutonamingViewFeedback.MatchingInfo.cnContact.getter()
{
  return sub_1B2999874();
}

uint64_t AutonamingViewFeedback.MatchingInfo.name.getter()
{
  return sub_1B2999874();
}

uint64_t sub_1B29FE824(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6361746E6F436E63 && a2 == 0xE900000000000074;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B29FE910(char a1)
{
  if (a1) {
    return 1701667182;
  }
  else {
    return 0x6361746E6F436E63;
  }
}

uint64_t sub_1B29FE944()
{
  return sub_1B29FE910(*v0);
}

uint64_t sub_1B29FE94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29FE824(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29FE974(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0C2BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29FE9B0(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0C2BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AutonamingViewFeedback.MatchingInfo.encode(to:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3AFB8);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2A0C2BC();
  sub_1B2E83A38();
  sub_1B2E83628();
  if (!v0) {
    sub_1B2E83628();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1B29998C8();
}

void AutonamingViewFeedback.MatchingInfo.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C3AFC8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B3C8();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2A0C2BC();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_1B2E83508();
    uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B2E83508();
    uint64_t v11 = v10;
    uint64_t v13 = v9;
    sub_1B29A15FC();
    v12();
    *uint64_t v4 = v6;
    v4[1] = v8;
    _OWORD v4[2] = v13;
    v4[3] = v11;
    swift_bridgeObjectRetain();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

uint64_t sub_1B29FECD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D7269666E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7463656A6572 && a2 == 0xE600000000000000;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7465736572 && a2 == 0xE500000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x80000001B2E96E30)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

unint64_t sub_1B29FEE70(char a1)
{
  unint64_t result = 0x6D7269666E6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7463656A6572;
      break;
    case 2:
      unint64_t result = 0x7465736572;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B29FEF00(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001B2E96E50
    || (sub_1B299B7D8(), sub_1B29B1E20(), (sub_1B2A0F6F4() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1868983913 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B2A0F6F4();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B29FEFC4(char a1)
{
  if (a1) {
    return 1868983913;
  }
  else {
    return 0xD000000000000010;
  }
}

void sub_1B29FEFF8()
{
}

void sub_1B29FF010()
{
}

unint64_t sub_1B29FF028()
{
  return sub_1B29FEE70(*v0);
}

uint64_t sub_1B29FF030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29FECD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29FF058(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0C308();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29FF094(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0C308();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29FF0D0(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0C484();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29FF10C(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0C484();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29FF148(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0C354();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29FF184(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0C354();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29FF1C0()
{
  return sub_1B29FEFC4(*v0);
}

uint64_t sub_1B29FF1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29FEF00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B29FF1F0(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0C3EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29FF22C(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0C3EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B29FF268(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0C3A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29FF2A4(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0C3A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AutonamingViewFeedback.FeedbackType.encode(to:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  sub_1B29A3EB4(&qword_1E9C3AFD0);
  sub_1B299D278();
  uint64_t v27 = v5;
  uint64_t v28 = v4;
  MEMORY[0x1F4188790](v4);
  sub_1B299B6D0();
  uint64_t v26 = v6;
  sub_1B29A3EB4(&qword_1E9C3AFD8);
  sub_1B299D278();
  uint64_t v24 = v8;
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  uint64_t v23 = v9;
  sub_1B29A3EB4(&qword_1E9C3AFE0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v10);
  sub_1B299B6D0();
  uint64_t v31 = sub_1B29A3EB4(&qword_1E9C3AFE8);
  sub_1B299D278();
  uint64_t v29 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1B299B6D0();
  uint64_t v30 = v13;
  sub_1B29A3EB4(&qword_1E9C3AFF0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v14);
  sub_1B299B0C8();
  uint64_t v15 = *v0;
  uint64_t v16 = v0[1];
  uint64_t v32 = v0[2];
  uint64_t v33 = v0[3];
  uint64_t v34 = v0[5];
  uint64_t v35 = v0[4];
  int v17 = *((unsigned __int8 *)v0 + 48);
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2A0C308();
  sub_1B299E584();
  if (!v17)
  {
    sub_1B2A0C484();
    sub_1B2A0F71C();
    sub_1B2E83688();
    if (!v1)
    {
      sub_1B2A0F3AC();
      sub_1B2A0C438();
      sub_1B2E836D8();
    }
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v31);
    goto LABEL_13;
  }
  if (v17 != 1)
  {
    if (v32 | v16 | v15 | v33 | v35 | v34)
    {
      sub_1B2A0C354();
      uint64_t v19 = v26;
      sub_1B2A0F71C();
      uint64_t v21 = v27;
      uint64_t v20 = v28;
    }
    else
    {
      sub_1B2A0C3A0();
      uint64_t v19 = v23;
      sub_1B2A0F71C();
      uint64_t v21 = v24;
      uint64_t v20 = v25;
    }
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
LABEL_13:
    sub_1B2A0F684();
    goto LABEL_14;
  }
  sub_1B2A0C3EC();
  sub_1B2E83618();
  sub_1B2E83688();
  if (!v1)
  {
    sub_1B2A0F3AC();
    sub_1B2A0C438();
    sub_1B2E836D8();
  }
  sub_1B299B798();
  v18();
  sub_1B2A0F684();
LABEL_14:
  sub_1B299B798();
  v22();
  sub_1B29998C8();
}

void AutonamingViewFeedback.FeedbackType.init(from:)()
{
  sub_1B299F300();
  uint64_t v4 = v3;
  uint64_t v41 = v5;
  sub_1B29A3EB4(&qword_1E9C3B028);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3B030);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C3B038);
  sub_1B299D278();
  MEMORY[0x1F4188790](v8);
  sub_1B299B0C8();
  sub_1B29A3EB4(&qword_1E9C3B040);
  sub_1B299D278();
  MEMORY[0x1F4188790](v9);
  sub_1B2999928();
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C3B048);
  sub_1B299D278();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1B29A0498();
  uint64_t v42 = v4;
  sub_1B2A0FBD0();
  sub_1B2A0C308();
  sub_1B2E83A18();
  if (v0) {
    goto LABEL_12;
  }
  uint64_t v40 = v2;
  uint64_t v43 = v12;
  uint64_t v14 = v1;
  uint64_t v15 = sub_1B2E835F8();
  if (!*(void *)(v15 + 16))
  {
LABEL_8:
    uint64_t v23 = sub_1B2E83288();
    swift_allocError();
    uint64_t v25 = v24;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v25 = &type metadata for AutonamingViewFeedback.FeedbackType;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x1E4FBBA70], v23);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v14, v10);
LABEL_12:
    uint64_t v28 = v42;
    goto LABEL_13;
  }
  uint64_t v16 = *(unsigned __int8 *)(v15 + 32);
  uint64_t v17 = sub_1B29B142C(1);
  uint64_t v19 = v18;
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v17;
  if (v19 != v21 >> 1)
  {
    uint64_t v14 = v1;
    goto LABEL_8;
  }
  switch(v16)
  {
    case 1:
      sub_1B2A0C3EC();
      uint64_t v1 = v40;
      sub_1B2A0EE24();
      LOBYTE(v44) = 0;
      sub_1B2E83568();
      sub_1B2A0FB0C();
      sub_1B2A0F96C();
      sub_1B2E835B8();
      sub_1B29A15FC();
      v37();
      swift_unknownObjectRelease();
      uint64_t v38 = sub_1B2A0F49C();
      v39(v38);
      long long v35 = v44;
      long long v36 = v45;
      char v34 = 1;
      break;
    case 2:
      sub_1B2A0C3A0();
      sub_1B2A0EE24();
      sub_1B299B798();
      v26();
      swift_unknownObjectRelease();
      sub_1B299B798();
      v27();
      uint64_t v22 = 0;
      uint64_t v1 = 0;
      long long v35 = 0uLL;
      char v34 = 2;
      goto LABEL_14;
    case 3:
      sub_1B2A0C354();
      sub_1B2A0EE24();
      sub_1B299B798();
      v29();
      swift_unknownObjectRelease();
      sub_1B299B798();
      v30();
      uint64_t v1 = 0;
      long long v35 = 0uLL;
      char v34 = 2;
      uint64_t v22 = 1;
LABEL_14:
      long long v36 = 0uLL;
      break;
    default:
      sub_1B2A0C484();
      sub_1B2A0EE24();
      LOBYTE(v44) = 0;
      sub_1B2E83568();
      sub_1B2A0FB0C();
      sub_1B2A0F96C();
      sub_1B2E835B8();
      uint64_t v31 = sub_1B2A0F958();
      v32(v31);
      swift_unknownObjectRelease();
      sub_1B299B798();
      v33();
      char v34 = 0;
      long long v35 = v44;
      long long v36 = v45;
      break;
  }
  uint64_t v28 = v42;
  *(void *)uint64_t v41 = v22;
  *(void *)(v41 + 8) = v1;
  *(_OWORD *)(v41 + 16) = v35;
  *(_OWORD *)(v41 + 32) = v36;
  *(unsigned char *)(v41 + 48) = v34;
LABEL_13:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v28);
  sub_1B29998C8();
}

void sub_1B29FFD78()
{
}

void sub_1B29FFD90()
{
}

uint64_t AutonamingViewFeedback.init(feedback:)(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 48);
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v3;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 64) = v2;
  return v1;
}

unint64_t static AutonamingViewFeedback.type.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t AutonamingViewFeedback.feedback.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  unsigned __int8 v8 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 48) = v8;
  return sub_1B2A0D2DC(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1B29FFE0C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6B63616264656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B29FFE94()
{
  return 0x6B63616264656566;
}

uint64_t sub_1B29FFEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29FFE0C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B29FFEDC(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0D38C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B29FFF18(uint64_t a1)
{
  unint64_t v2 = sub_1B2A0D38C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AutonamingViewFeedback.deinit()
{
  sub_1B2A0F938();
  return v0;
}

uint64_t AutonamingViewFeedback.__deallocating_deinit()
{
  sub_1B2A0F938();

  return swift_deallocClassInstance();
}

uint64_t sub_1B29FFFA4()
{
  sub_1B29A3EB4(&qword_1E9C3B058);
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B2A0FBD0();
  sub_1B2A0D38C();
  sub_1B299E584();
  sub_1B2A0D3D8();
  sub_1B2E836D8();
  uint64_t v1 = sub_1B2A0F400();
  return v2(v1);
}

uint64_t AutonamingViewFeedback.__allocating_init(from:)()
{
  uint64_t v0 = swift_allocObject();
  AutonamingViewFeedback.init(from:)();
  return v0;
}

void AutonamingViewFeedback.init(from:)()
{
  sub_1B299F300();
  char v3 = v2;
  sub_1B29A3EB4(&qword_1E9C3B070);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299B3C8();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2A0D38C();
  sub_1B2E83A18();
  if (v1)
  {
    type metadata accessor for AutonamingViewFeedback();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1B2A0D424();
    sub_1B2E835B8();
    sub_1B29A15FC();
    v5();
    *(_OWORD *)(v0 + 16) = v6;
    *(_OWORD *)(v0 + 32) = v7;
    *(_OWORD *)(v0 + 48) = v8;
    *(unsigned char *)(v0 + 64) = v9;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
  sub_1B29998C8();
}

unint64_t sub_1B2A00260()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_1B2A00280@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AutonamingViewFeedback.__allocating_init(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1B2A002AC()
{
  return sub_1B29FFFA4();
}

uint64_t type metadata accessor for AutonamingView()
{
  return self;
}

uint64_t sub_1B2A002F4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3B238);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  char v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v27 - v10;
  sub_1B29A3EB4(&qword_1E9C3B240);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC3C30;
  *(void *)(inited + 32) = 0x6E6F697461727544;
  *(void *)(inited + 40) = 0xEF73646E6F636553;
  sub_1B2E80638();
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v13);
  *(void *)(inited + 56) = 0x6C75736552646148;
  *(void *)(inited + 64) = 0xE900000000000074;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, a3 != 0);
  *(void *)(inited + 80) = 0xD000000000000015;
  *(void *)(inited + 88) = 0x80000001B2E96F90;
  if (a3)
  {
    sub_1B2A0D234(a3, (SEL *)&selRef_suggestedContactIdentifier);
    uint64_t v15 = v14;
    if (v14) {
      swift_bridgeObjectRelease();
    }
    *(void *)(inited + 96) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v15 != 0);
    *(void *)(inited + 104) = 0xD00000000000001ALL;
    *(void *)(inited + 112) = 0x80000001B2E96FB0;
    id v16 = objc_msgSend(a3, sel_suggestedNameComponents);
    if (v16)
    {
      uint64_t v17 = v16;
      sub_1B2E80348();

      uint64_t v18 = sub_1B2E80368();
      uint64_t v19 = (uint64_t)v9;
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v18 = sub_1B2E80368();
      uint64_t v19 = (uint64_t)v9;
      uint64_t v20 = 1;
    }
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v19, v20, 1, v18);
    sub_1B2A0E9D8((uint64_t)v9, (uint64_t)v11);
    sub_1B2E80368();
    BOOL v22 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v11, 1, v18) != 1;
  }
  else
  {
    *(void *)(inited + 96) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, 0);
    *(void *)(inited + 104) = 0xD00000000000001ALL;
    *(void *)(inited + 112) = 0x80000001B2E96FB0;
    uint64_t v21 = sub_1B2E80368();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 1, 1, v21);
    BOOL v22 = 0;
  }
  sub_1B2A0EA40((uint64_t)v11, &qword_1E9C3B238);
  *(void *)(inited + 120) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v22);
  *(void *)(inited + 128) = 0xD000000000000016;
  *(void *)(inited + 136) = 0x80000001B2E96FD0;
  if (a3)
  {
    sub_1B2A0D234(a3, (SEL *)&selRef_suggestedNameString);
    uint64_t v24 = v23;
    if (v23) {
      swift_bridgeObjectRelease();
    }
    *(void *)(inited + 144) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v24 != 0);
    *(void *)(inited + 152) = 0xD000000000000010;
    *(void *)(inited + 160) = 0x80000001B2E96FF0;
    id v25 = objc_msgSend(a3, sel_autonamingSuggestionReason);
  }
  else
  {
    id v25 = 0;
    *(void *)(inited + 144) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, 0);
    *(void *)(inited + 152) = 0xD000000000000010;
    *(void *)(inited + 160) = 0x80000001B2E96FF0;
  }
  *(void *)(inited + 168) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v25);
  *(void *)(inited + 176) = 0xD000000000000010;
  *(void *)(inited + 184) = 0x80000001B2E97010;
  *(void *)(inited + 192) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(unsigned __int8 *)(a4 + OBJC_IVAR___GDAutonamingViewInner_isForLiveServing));
  sub_1B299A1C8();
  return sub_1B2E82148();
}

void sub_1B2A00728(uint64_t a1)
{
  sub_1B29FC354(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1B2A00748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3AFB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2A007B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CustomGraphPerson(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2A00814(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  sub_1B299B798();
  v3();
  return a1;
}

uint64_t type metadata accessor for AutonamingViewFeedback()
{
  return self;
}

uint64_t sub_1B2A0088C(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_1B2A008A8(uint64_t a1, uint64_t a2)
{
  return sub_1B2A008D0(a1, a2, &unk_1E9C37AD8, &type metadata for RelationshipIdentifier);
}

uint64_t sub_1B2A008BC(uint64_t a1, uint64_t a2)
{
  return sub_1B2A008D0(a1, a2, &qword_1E9C3B1F0, &type metadata for EntityIdentifier);
}

#error "1B2A00980: call analysis failed (funcsize=52)"

#error "1B2A00AC4: call analysis failed (funcsize=88)"

void sub_1B2A00B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B2A0ED70();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  id v16 = v15;
  uint64_t v17 = *v10;
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  uint64_t v18 = sub_1B2E839E8();
  uint64_t v19 = -1 << *(unsigned char *)(v17 + 32);
  unint64_t v20 = v18 & ~v19;
  sub_1B29A2584();
  if ((v21 & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1B2A0FA94();
    swift_bridgeObjectRetain();
    sub_1B2A05C64(v14, v12, v20, isUniquelyReferenced_nonNull_native);
    sub_1B2A0FA7C(a10);
    *id v16 = v14;
    v16[1] = v12;
    goto LABEL_17;
  }
  uint64_t v22 = *(void *)(v17 + 48);
  uint64_t v23 = (void *)(v22 + 16 * v20);
  BOOL v24 = *v23 == v14 && v23[1] == v12;
  if (!v24 && (sub_1B2A0F454() & 1) == 0)
  {
    uint64_t v27 = ~v19;
    do
    {
      unint64_t v20 = (v20 + 1) & v27;
      sub_1B29A2584();
      if ((v28 & 1) == 0) {
        goto LABEL_16;
      }
      uint64_t v29 = (void *)(v22 + 16 * v20);
      BOOL v30 = *v29 == v14 && v29[1] == v12;
    }
    while (!v30 && (sub_1B2A0F454() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v25 = (uint64_t *)(*(void *)(*v10 + 48) + 16 * v20);
  uint64_t v26 = v25[1];
  *id v16 = *v25;
  v16[1] = v26;
  swift_bridgeObjectRetain();
LABEL_17:
  sub_1B2A0ED54();
}

void sub_1B2A00C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_1B299B3E0();
  a31 = v34;
  a32 = v35;
  long long v36 = v32;
  uint64_t v38 = v37;
  uint64_t v53 = v39;
  uint64_t v40 = *v32;
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  sub_1B2A24808((uint64_t)&a12, v38);
  sub_1B2E839E8();
  sub_1B2A0F798();
  unint64_t v43 = v42 & ~v41;
  if (((*(void *)(v40 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a12 = *v36;
    *long long v36 = 0x8000000000000000;
    sub_1B2A05E00(v38, v43, isUniquelyReferenced_nonNull_native);
    sub_1B2A0FA7C(a12);
    goto LABEL_43;
  }
  uint64_t v44 = ~v41;
  while (1)
  {
    unsigned int v45 = *(unsigned __int8 *)(*(void *)(v40 + 48) + v43);
    if (v45 >> 6)
    {
      if (v45 >> 6 != 1)
      {
        if (v45 == 128)
        {
          if (v38 == 128) {
            goto LABEL_42;
          }
        }
        else if (v45 == 129)
        {
          if (v38 == 129) {
            goto LABEL_42;
          }
        }
        else if (v38 == 130)
        {
          goto LABEL_42;
        }
        goto LABEL_39;
      }
      if ((v38 & 0xC0) != 0x40) {
        goto LABEL_39;
      }
      switch(v45 & 0x3F)
      {
        case 1u:
          sub_1B2A0F9FC();
          break;
        case 2u:
          sub_1B2A0F358();
          break;
        case 3u:
          sub_1B2A0F0B8();
          break;
        case 4u:
          sub_1B2A0FA10();
          break;
        case 5u:
          sub_1B2A0F098();
          break;
        default:
          break;
      }
      sub_1B2A0F540();
      switch(v48)
      {
        case 1:
          goto LABEL_29;
        case 2:
          goto LABEL_30;
        case 3:
          goto LABEL_31;
        case 4:
          goto LABEL_32;
        case 5:
          goto LABEL_33;
        default:
          break;
      }
    }
    else
    {
      if (v38 >= 0x40u) {
        goto LABEL_39;
      }
      switch(*(unsigned char *)(*(void *)(v40 + 48) + v43))
      {
        case 1:
          sub_1B2A0F9FC();
          break;
        case 2:
          sub_1B2A0F358();
          break;
        case 3:
          sub_1B2A0F0B8();
          break;
        case 4:
          sub_1B2A0FA10();
          break;
        case 5:
          sub_1B2A0F098();
          break;
        default:
          break;
      }
      sub_1B2A0F540();
      switch(v49)
      {
        case 1:
LABEL_29:
          unint64_t v33 = 0xE600000000000000;
          uint64_t v47 = 0x786966657270;
          break;
        case 2:
LABEL_30:
          uint64_t v47 = 0x6E656B6F546C6C61;
          unint64_t v33 = 0xE900000000000073;
          break;
        case 3:
LABEL_31:
          uint64_t v47 = 0x69666572506C6C61;
          unint64_t v33 = 0xEB00000000736578;
          break;
        case 4:
LABEL_32:
          unint64_t v33 = 0xE600000000000000;
          uint64_t v47 = 0x657361726870;
          break;
        case 5:
LABEL_33:
          uint64_t v47 = 0x6850786966657270;
          unint64_t v33 = 0xEC00000065736172;
          break;
        default:
          break;
      }
    }
    if (v46 == v47 && v33 == 0xE800000000000000) {
      break;
    }
    char v51 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v51) {
      goto LABEL_42;
    }
LABEL_39:
    unint64_t v43 = (v43 + 1) & v44;
    if (((*(void *)(v40 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
      goto LABEL_40;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_42:
  swift_bridgeObjectRelease();
  LOBYTE(v38) = *(unsigned char *)(*(void *)(*v36 + 48) + v43);
LABEL_43:
  *uint64_t v53 = v38;
  sub_1B2A0EF9C();
}

uint64_t sub_1B2A01008(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1B2E839E8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1B2E837A8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1B2E837A8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *char v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1B2A062BC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *char v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1B2A011C8(char *a1, char a2)
{
  uint64_t v5 = *v2;
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  sub_1B2AA49C0((uint64_t)v21, a2);
  sub_1B2E839E8();
  sub_1B2A0F7A4();
  sub_1B2A0F8D8();
  if (v6)
  {
    while (1)
    {
      unint64_t v7 = 0xE400000000000000;
      unint64_t v8 = 1701736302;
      switch(*(unsigned char *)(*(void *)(v5 + 48) + v3))
      {
        case 1:
          unint64_t v7 = 0x80000001B2E8EB10;
          unint64_t v8 = sub_1B29B1E20();
          break;
        case 2:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = sub_1B29A1630();
          break;
        case 3:
          uint64_t v9 = 0x47746E657665;
          goto LABEL_9;
        case 4:
          unint64_t v8 = sub_1B2A0FA50();
          unint64_t v7 = 0xED00007865646E49;
          break;
        case 5:
          unint64_t v8 = sub_1B2A0FA3C();
          unint64_t v7 = 0xEC0000007865646ELL;
          break;
        case 6:
          uint64_t v9 = 0x476C61636F6CLL;
LABEL_9:
          unint64_t v8 = v9 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
          unint64_t v7 = 0xEF7865646E496870;
          break;
        case 7:
          unint64_t v8 = 0xD00000000000001ALL;
          unint64_t v10 = "dex";
          goto LABEL_12;
        case 8:
          unint64_t v8 = 0xD000000000000018;
          unint64_t v10 = "staticGlobalKnowledgeIndex";
LABEL_12:
          unint64_t v7 = (unint64_t)v10 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v11 = 0xE400000000000000;
      uint64_t v12 = 1701736302;
      switch(a2)
      {
        case 1:
          unint64_t v11 = 0x80000001B2E8EB10;
          sub_1B29B1DE4();
          break;
        case 2:
          unint64_t v11 = 0xE700000000000000;
          sub_1B2A0F9BC();
          break;
        case 3:
          uint64_t v13 = 0x47746E657665;
          goto LABEL_20;
        case 4:
          sub_1B2A0F9A8();
          unint64_t v11 = 0xED00007865646E49;
          break;
        case 5:
          sub_1B2A0F994();
          unint64_t v11 = 0xEC0000007865646ELL;
          break;
        case 6:
          uint64_t v13 = 0x476C61636F6CLL;
LABEL_20:
          uint64_t v12 = v13 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
          unint64_t v11 = 0xEF7865646E496870;
          break;
        case 7:
          uint64_t v12 = 0xD00000000000001ALL;
          uint64_t v14 = "dex";
          goto LABEL_23;
        case 8:
          uint64_t v12 = 0xD000000000000018;
          uint64_t v14 = "staticGlobalKnowledgeIndex";
LABEL_23:
          unint64_t v11 = (unint64_t)v14 | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v8 == v12 && v7 == v11)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_33;
      }
      char v16 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16) {
        break;
      }
      sub_1B2A0F438();
      if ((v17 & 1) == 0) {
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRelease();
LABEL_33:
    uint64_t result = sub_1B2A0FB2C();
  }
  else
  {
LABEL_30:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21[0] = *v2;
    *unint64_t v2 = 0x8000000000000000;
    sub_1B2A06468(a2, v3, isUniquelyReferenced_nonNull_native);
    sub_1B2A0FA7C(v21[0]);
    uint64_t result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_1B2A0152C(uint64_t *a1, uint64_t a2)
{
  return sub_1B2A0282C(a1, a2);
}

#error "1B2A01664: call analysis failed (funcsize=88)"

uint64_t sub_1B2A016A0()
{
  sub_1B2A0F5D8();
  memcpy(__dst, v4, sizeof(__dst));
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  KnosisInternalFact.hash(into:)((uint64_t)v26);
  uint64_t v5 = sub_1B2E839E8();
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v7 = v5 & ~v6;
  sub_1B2A0EE84();
  if (v8)
  {
    uint64_t v9 = v1[1];
    sub_1B2A0F138(88);
    BOOL v11 = v11 && v10 == v9;
    if (v11 || (sub_1B2A0F238() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      sub_1B2A0E730((uint64_t)v1);
      sub_1B2A0FB54();
      uint64_t v13 = v12 + 88 * v7;
      uint64_t v14 = *(void *)(v13 + 8);
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = *(void *)(v13 + 24);
      uint64_t v17 = *(void *)(v13 + 32);
      uint64_t v18 = *(void *)(v13 + 72);
      uint64_t v19 = *(void *)(v13 + 80);
      *(void *)uint64_t v0 = *(void *)v13;
      *((void *)v0 + 1) = v14;
      *((void *)v0 + 2) = v15;
      *((void *)v0 + 3) = v16;
      *((void *)v0 + 4) = v17;
      *(_OWORD *)(v0 + 40) = *(_OWORD *)(v13 + 40);
      *(_OWORD *)(v0 + 56) = *(_OWORD *)(v13 + 56);
      *((void *)v0 + 9) = v18;
      *((void *)v0 + 10) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v21 = ~v6;
    while (1)
    {
      unint64_t v7 = (v7 + 1) & v21;
      sub_1B2A0EE84();
      if ((v22 & 1) == 0) {
        break;
      }
      sub_1B2A0F138(88);
      BOOL v24 = v11 && v23 == v9;
      if (v24 || (sub_1B2A0F238() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  __dst[0] = *v2;
  *unint64_t v2 = 0x8000000000000000;
  sub_1B2A0E6BC((uint64_t)v1);
  sub_1B2A06A5C(v1, v7, isUniquelyReferenced_nonNull_native);
  *unint64_t v2 = __dst[0];
  swift_bridgeObjectRelease();
  memcpy(v0, v1, 0x58uLL);
  return 1;
}

uint64_t sub_1B2A01874(unsigned char *a1, char a2)
{
  unsigned int v3 = a2 & 1;
  uint64_t v4 = *v2;
  unint64_t v5 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  sub_1B29F93B0();
  sub_1B2A0F7A4();
  sub_1B2A0F8D8();
  if (v6)
  {
    if (v3) {
      uint64_t v7 = 0x7241746E65746E69;
    }
    else {
      uint64_t v7 = 0x79676F6C6F746E6FLL;
    }
    if (v3) {
      unint64_t v8 = 0xE900000000000067;
    }
    else {
      unint64_t v8 = 0xE800000000000000;
    }
    while (1)
    {
      uint64_t v9 = *(unsigned char *)(*(void *)(v4 + 48) + v5) ? 0x7241746E65746E69 : 0x79676F6C6F746E6FLL;
      unint64_t v10 = *(unsigned char *)(*(void *)(v4 + 48) + v5) ? 0xE900000000000067 : 0xE800000000000000;
      if (v9 == v7 && v10 == v8) {
        break;
      }
      char v12 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_22;
      }
      sub_1B2A0F438();
      if ((v13 & 1) == 0) {
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    LOBYTE(v3) = *(unsigned char *)(*(void *)(*v16 + 48) + v5);
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v16;
    *uint64_t v16 = 0x8000000000000000;
    sub_1B2A06C40(v3, v5, isUniquelyReferenced_nonNull_native);
    sub_1B2A0F8AC(v18);
    uint64_t result = 1;
  }
  *a1 = v3;
  return result;
}

uint64_t sub_1B2A01A24(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *v2;
  sub_1B2E83988();
  uint64_t v6 = *a2;
  int v7 = *((unsigned __int8 *)a2 + 8);
  uint64_t v38 = a1;
  long long v36 = v2;
  sub_1B2E839A8();
  if (v7 != 1) {
    sub_1B2E839C8();
  }
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v11 = a2[5];
  uint64_t v37 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v40 = v8;
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v12 = v10;
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  sub_1B2E839E8();
  sub_1B2A0F798();
  unint64_t v15 = v14 & ~v13;
  uint64_t v16 = v5 + 56;
  if (((*(void *)(v5 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v41 = *v36;
    *long long v36 = 0x8000000000000000;
    sub_1B2A0E7E8((uint64_t)v37);
    sub_1B2A06E30((uint64_t)v37, v15, isUniquelyReferenced_nonNull_native);
    *long long v36 = v41;
    swift_bridgeObjectRelease();
    long long v28 = v37[1];
    *(_OWORD *)uint64_t v38 = *v37;
    *(_OWORD *)(v38 + 16) = v28;
    *(_OWORD *)(v38 + 32) = v37[2];
    return 1;
  }
  uint64_t v39 = v6;
  uint64_t v17 = ~v13;
  uint64_t v18 = *(void *)(v5 + 48);
  while (1)
  {
    uint64_t v19 = v18 + 48 * v15;
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v21 = *(void *)(v19 + 24);
    uint64_t v22 = *(void *)(v19 + 32);
    uint64_t v23 = *(void *)(v19 + 40);
    if ((*(unsigned char *)(v19 + 8) & 1) == 0) {
      break;
    }
    if (v7) {
      goto LABEL_12;
    }
LABEL_22:
    unint64_t v15 = (v15 + 1) & v17;
    if (((*(void *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
      goto LABEL_23;
    }
  }
  if (*(void *)v19 == v39) {
    char v24 = v7;
  }
  else {
    char v24 = 1;
  }
  if (v24) {
    goto LABEL_22;
  }
LABEL_12:
  BOOL v25 = v20 == v40 && v21 == v9;
  if (!v25 && (sub_1B2E837A8() & 1) == 0) {
    goto LABEL_22;
  }
  BOOL v26 = v22 == v12 && v23 == v11;
  if (!v26 && (sub_1B2E837A8() & 1) == 0) {
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  sub_1B2A0E820((uint64_t)v37);
  uint64_t v30 = *(void *)(*v36 + 48) + 48 * v15;
  char v31 = *(unsigned char *)(v30 + 8);
  uint64_t v33 = *(void *)(v30 + 16);
  uint64_t v32 = *(void *)(v30 + 24);
  uint64_t v34 = *(void *)(v30 + 32);
  uint64_t v35 = *(void *)(v30 + 40);
  *(void *)uint64_t v38 = *(void *)v30;
  *(unsigned char *)(v38 + 8) = v31;
  *(void *)(v38 + 16) = v33;
  *(void *)(v38 + 24) = v32;
  *(void *)(v38 + 32) = v34;
  *(void *)(v38 + 40) = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_1B2A01CBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2A023A4(a1, a2, a3, a4, a5);
}

void sub_1B2A01CD0()
{
  sub_1B2A0F00C();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_1B2A0F88C();
  sub_1B2E839B8();
  sub_1B2E839C8();
  sub_1B2E839C8();
  uint64_t v9 = sub_1B2E839E8();
  uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v11 = v9 & ~v10;
  if ((*(void *)(v2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v10;
    while (1)
    {
      uint64_t v13 = (unsigned __int8 *)(*(void *)(v2 + 48) + 24 * v11);
      int v14 = *v13;
      uint64_t v16 = *((void *)v13 + 1);
      uint64_t v15 = *((void *)v13 + 2);
      BOOL v17 = v14 == v8 && v16 == v6;
      if (v17 && v15 == v4) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
      if (((*(void *)(v2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_11;
      }
    }
    uint64_t v20 = *(void *)(*v1 + 48) + 24 * v11;
    LOBYTE(v8) = *(unsigned char *)v20;
    uint64_t v6 = *(void *)(v20 + 8);
    uint64_t v4 = *(void *)(v20 + 16);
  }
  else
  {
LABEL_11:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v1;
    *uint64_t v1 = 0x8000000000000000;
    sub_1B2A07088(v8, v6, v4, v11, isUniquelyReferenced_nonNull_native);
    *uint64_t v1 = v21;
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)uint64_t v0 = v8;
  *(void *)(v0 + 8) = v6;
  *(void *)(v0 + 16) = v4;
  sub_1B2A0EFD4();
}

void sub_1B2A01E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B2A0F870();
  char v12 = v11;
  int v14 = v13;
  uint64_t v15 = *v10;
  unint64_t v16 = *(void *)(v15 + 40);
  swift_bridgeObjectRetain();
  sub_1B29F9518();
  sub_1B2A0F7A4();
  if ((*(void *)(v15 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
  {
    uint64_t v18 = ~v17;
    while (1)
    {
      unint64_t v19 = 0xE500000000000000;
      uint64_t v20 = "familyAndFriends";
      uint64_t v21 = 0x7465736E75;
      switch(*(unsigned char *)(*(void *)(v15 + 48) + v16))
      {
        case 1:
          unint64_t v19 = 0xE700000000000000;
          uint64_t v21 = sub_1B2A0F224();
          break;
        case 2:
          uint64_t v21 = sub_1B2A0F7E4();
          break;
        case 3:
          unint64_t v19 = 0xE600000000000000;
          uint64_t v21 = sub_1B2A0F7D4();
          break;
        case 4:
          unint64_t v19 = 0xE600000000000000;
          uint64_t v21 = sub_1B2A0F788();
          break;
        case 5:
          unint64_t v19 = 0xE600000000000000;
          uint64_t v21 = sub_1B2A0F738();
          break;
        case 6:
          uint64_t v21 = sub_1B2A0F810();
          break;
        case 7:
          unint64_t v19 = 0xE600000000000000;
          uint64_t v22 = 1752457574;
          goto LABEL_14;
        case 8:
          unint64_t v19 = 0xE700000000000000;
          uint64_t v21 = sub_1B2A0F1AC();
          break;
        case 9:
          unint64_t v19 = 0xE700000000000000;
          uint64_t v23 = sub_1B2A0F70C();
          goto LABEL_25;
        case 0xA:
          unint64_t v19 = 0xE600000000000000;
          uint64_t v22 = 1953720691;
LABEL_14:
          uint64_t v21 = v22 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
          break;
        case 0xB:
          uint64_t v21 = sub_1B2A0F3E4();
          goto LABEL_19;
        case 0xC:
          uint64_t v21 = sub_1B2A0F17C();
          goto LABEL_18;
        case 0xD:
          uint64_t v21 = sub_1B2A0F168();
LABEL_18:
          unint64_t v19 = 7497064;
LABEL_19:
          unint64_t v19 = v19 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0xE:
          unint64_t v19 = 0xE700000000000000;
          uint64_t v24 = sub_1B2A0F7B4();
          goto LABEL_28;
        case 0xF:
          uint64_t v21 = sub_1B2A0F6BC();
          break;
        case 0x10:
          unint64_t v19 = 0xE300000000000000;
          uint64_t v21 = 7237491;
          break;
        case 0x11:
          unint64_t v19 = 0xE800000000000000;
          uint64_t v25 = sub_1B2A0F694();
          goto LABEL_32;
        case 0x12:
          unint64_t v19 = 0xE700000000000000;
          uint64_t v23 = sub_1B2A0F748();
LABEL_25:
          uint64_t v21 = v23 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
          break;
        case 0x13:
          unint64_t v19 = 0xE400000000000000;
          uint64_t v21 = 1701210487;
          break;
        case 0x14:
          unint64_t v19 = 0xE700000000000000;
          uint64_t v24 = sub_1B2A0F674();
LABEL_28:
          uint64_t v21 = v24 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
          break;
        case 0x15:
          unint64_t v19 = 0xE600000000000000;
          uint64_t v21 = sub_1B2A0F664();
          break;
        case 0x16:
          unint64_t v19 = 0x80000001B2E8EA20;
          uint64_t v21 = sub_1B29B1E20();
          break;
        case 0x17:
          unint64_t v19 = 0xE800000000000000;
          uint64_t v25 = sub_1B2A0F5F0();
LABEL_32:
          uint64_t v21 = v25 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
          break;
        case 0x18:
          unint64_t v19 = 0xE800000000000000;
          uint64_t v21 = sub_1B2A0F0D8();
          break;
        case 0x19:
          uint64_t v21 = sub_1B2A0F374();
          break;
        case 0x1A:
          unint64_t v19 = 0xE600000000000000;
          uint64_t v21 = sub_1B2A0F600();
          break;
        case 0x1B:
          uint64_t v26 = 1699772781;
          goto LABEL_39;
        case 0x1C:
          uint64_t v21 = sub_1B2A0F7C4();
          break;
        case 0x1D:
          uint64_t v26 = 1631811949;
LABEL_39:
          uint64_t v21 = v26 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
          break;
        default:
          break;
      }
      unint64_t v27 = 0xE500000000000000;
      uint64_t v28 = 0x7465736E75;
      switch(v12)
      {
        case 1:
          unint64_t v27 = 0xE700000000000000;
          sub_1B299ADA0();
          break;
        case 2:
          sub_1B2A0F5C8();
          break;
        case 3:
          unint64_t v27 = 0xE600000000000000;
          sub_1B2A0F598();
          break;
        case 4:
          unint64_t v27 = 0xE600000000000000;
          sub_1B2A0F588();
          break;
        case 5:
          unint64_t v27 = 0xE600000000000000;
          sub_1B2A0F568();
          break;
        case 6:
          sub_1B2A0F758();
          break;
        case 7:
          unint64_t v27 = 0xE600000000000000;
          uint64_t v29 = 1752457574;
          goto LABEL_51;
        case 8:
          unint64_t v27 = 0xE700000000000000;
          sub_1B2A0F084();
          break;
        case 9:
          unint64_t v27 = 0xE700000000000000;
          sub_1B2A0F558();
          goto LABEL_62;
        case 10:
          unint64_t v27 = 0xE600000000000000;
          uint64_t v29 = 1953720691;
LABEL_51:
          uint64_t v28 = v29 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
          break;
        case 11:
          sub_1B2A0F314();
          goto LABEL_56;
        case 12:
          sub_1B299B124();
          goto LABEL_55;
        case 13:
          sub_1B2A0F070();
LABEL_55:
          unint64_t v27 = 7497064;
LABEL_56:
          unint64_t v27 = v27 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 14:
          unint64_t v27 = 0xE700000000000000;
          sub_1B2A0F5B8();
          goto LABEL_65;
        case 15:
          sub_1B2A0F508();
          break;
        case 16:
          unint64_t v27 = 0xE300000000000000;
          uint64_t v28 = 7237491;
          break;
        case 17:
          unint64_t v27 = 0xE800000000000000;
          sub_1B2A0F4B4();
          goto LABEL_69;
        case 18:
          unint64_t v27 = 0xE700000000000000;
          sub_1B2A0F578();
LABEL_62:
          uint64_t v28 = v30 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
          break;
        case 19:
          unint64_t v27 = 0xE400000000000000;
          uint64_t v28 = 1701210487;
          break;
        case 20:
          unint64_t v27 = 0xE700000000000000;
          sub_1B2A0F48C();
LABEL_65:
          uint64_t v28 = v31 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
          break;
        case 21:
          unint64_t v27 = 0xE600000000000000;
          sub_1B2A0F47C();
          break;
        case 22:
          unint64_t v27 = (unint64_t)(v20 - 32) | 0x8000000000000000;
          sub_1B29B1DE4();
          break;
        case 23:
          unint64_t v27 = 0xE800000000000000;
          sub_1B2A0F530();
LABEL_69:
          uint64_t v28 = v32 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
          break;
        case 24:
          unint64_t v27 = 0xE800000000000000;
          sub_1B2A0F024();
          break;
        case 25:
          sub_1B2A0F280();
          break;
        case 26:
          unint64_t v27 = 0xE600000000000000;
          sub_1B2A0F46C();
          break;
        case 27:
          uint64_t v33 = 1699772781;
          goto LABEL_76;
        case 28:
          sub_1B2A0F5A8();
          break;
        case 29:
          uint64_t v33 = 1631811949;
LABEL_76:
          uint64_t v28 = v33 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
          break;
        default:
          break;
      }
      if (v21 == v28 && v19 == v27)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_86;
      }
      char v35 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v35) {
        break;
      }
      unint64_t v16 = (v16 + 1) & v18;
      if (((*(void *)(v15 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
        goto LABEL_83;
      }
    }
    swift_bridgeObjectRelease();
LABEL_86:
    sub_1B2A0FB2C();
  }
  else
  {
LABEL_83:
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    sub_1B2A0FA94();
    sub_1B2A07218(v12, v16, v36);
    sub_1B2A0FA7C(a10);
  }
  *int v14 = v12;
  sub_1B2A0F7F4();
}

uint64_t sub_1B2A02390(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2A023A4(a1, a2, a3, a4, a5);
}

uint64_t sub_1B2A023A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1B2E839E8();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v15 = ~v12;
    uint64_t v16 = *(void *)(v10 + 48);
    while (1)
    {
      uint64_t v17 = (void *)(v16 + 32 * v13);
      uint64_t v18 = v17[2];
      uint64_t v19 = v17[3];
      BOOL v20 = *v17 == a2 && v17[1] == a3;
      if (v20 || (sub_1B2E837A8() & 1) != 0)
      {
        BOOL v21 = v18 == a4 && v19 == a5;
        if (v21 || (sub_1B2A0F454() & 1) != 0) {
          break;
        }
      }
      unint64_t v13 = (v13 + 1) & v15;
      if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = (void *)(*(void *)(*v27 + 48) + 32 * v13);
    uint64_t v24 = v23[1];
    uint64_t v25 = v23[2];
    uint64_t v26 = v23[3];
    *a1 = *v23;
    a1[1] = v24;
    a1[2] = v25;
    a1[3] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v27;
    *unint64_t v27 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2A07994();
    sub_1B2A0F8AC(v29);
    *a1 = a2;
    a1[1] = a3;
    uint64_t result = 1;
    a1[2] = a4;
    a1[3] = a5;
  }
  return result;
}

void sub_1B2A025C0(void *a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  sub_1B2E83988();
  sub_1B2E83998();
  sub_1B2E839E8();
  sub_1B2A0EEC0();
  if ((v7 & 1) == 0)
  {
LABEL_6:
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = sub_1B2A0F1F4();
    sub_1B2A07B4C(v11, v3, v12);
    sub_1B2A0EEE8(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
    goto LABEL_7;
  }
  if (*(void *)(*(void *)(v6 + 48) + 8 * v3) != a2)
  {
    do
    {
      sub_1B2A0F390();
      if ((v9 & 1) == 0) {
        goto LABEL_6;
      }
    }
    while (*(void *)(v8 + 8 * v3) != a2);
  }
  sub_1B2A0FB54();
  a2 = *(void *)(v10 + 8 * v3);
LABEL_7:
  *a1 = a2;
}

uint64_t sub_1B2A02684()
{
  sub_1B2A0F5D8();
  memcpy(__dst, v4, 0x90uLL);
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  KnosisFact.hash(into:)();
  uint64_t v5 = sub_1B2E839E8();
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v7 = v5 & ~v6;
  sub_1B2A0EE84();
  if (v8)
  {
    uint64_t v9 = v1[1];
    sub_1B2A0F138(144);
    BOOL v11 = v11 && v10 == v9;
    if (v11 || (sub_1B2A0F238() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      sub_1B29C5A88((uint64_t)v1);
      sub_1B2A0FB54();
      memcpy(__dst, (const void *)(v12 + 144 * v7), 0x90uLL);
      uint64_t v13 = (void *)sub_1B2999874();
      memcpy(v13, v14, 0x90uLL);
      sub_1B29C5944((uint64_t)__dst);
      return 0;
    }
    uint64_t v16 = ~v6;
    while (1)
    {
      unint64_t v7 = (v7 + 1) & v16;
      sub_1B2A0EE84();
      if ((v17 & 1) == 0) {
        break;
      }
      sub_1B2A0F138(144);
      BOOL v19 = v11 && v18 == v9;
      if (v19 || (sub_1B2A0F238() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  __dst[0] = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_1B29C5944((uint64_t)v1);
  sub_1B2A07CAC(v1, v7, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = __dst[0];
  swift_bridgeObjectRelease();
  memcpy(v0, v1, 0x90uLL);
  return 1;
}

uint64_t sub_1B2A02818(uint64_t *a1, uint64_t a2)
{
  return sub_1B2A0282C(a1, a2);
}

uint64_t sub_1B2A0282C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  unint64_t v7 = sub_1B2E83978() & ~(-1 << *(unsigned char *)(v6 + 32));
  sub_1B2A0FAC0();
  if ((v8 & 1) == 0)
  {
LABEL_6:
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1B2A07E90(a2, v7);
    sub_1B2A0EEE8(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
    uint64_t result = 1;
    goto LABEL_7;
  }
  if (*(void *)(*(void *)(v6 + 48) + 8 * v7) != a2)
  {
    do
    {
      sub_1B2A0F41C();
      if ((v10 & 1) == 0) {
        goto LABEL_6;
      }
    }
    while (*(void *)(v9 + 8 * v7) != a2);
  }
  uint64_t result = 0;
LABEL_7:
  *a1 = a2;
  return result;
}

void sub_1B2A02914()
{
  sub_1B2A0ED70();
  sub_1B2A0EDB0(v5, v6);
  uint64_t v7 = sub_1B2A0F610();
  if (*(void *)(v1 + 16))
  {
    uint64_t v20 = v0;
    sub_1B2A0F9E8();
    sub_1B2A0EF1C();
    if (!v3) {
      goto LABEL_4;
    }
LABEL_3:
    sub_1B2A0F518();
    while (1)
    {
      uint64_t v11 = *(void *)(*(void *)(v1 + 48) + 8 * v8);
      sub_1B2E83988();
      sub_1B2E839C8();
      sub_1B2E839E8();
      sub_1B2A0F2A8();
      if (v12)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v12)
          {
            if (v14) {
              break;
            }
          }
          if (v15 == v16) {
            uint64_t v15 = 0;
          }
          if (*(void *)(v7 + 56 + 8 * v15) != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
      sub_1B299F374();
LABEL_26:
      sub_1B2A0EFEC(v13);
      *(void *)(*(void *)(v7 + 48) + 8 * v17) = v11;
      ++*(void *)(v7 + 16);
      if (v3) {
        goto LABEL_3;
      }
LABEL_4:
      uint64_t v9 = v0 + 1;
      if (__OFADD__(v0, 1)) {
        goto LABEL_34;
      }
      if (v9 >= v4) {
        goto LABEL_28;
      }
      ++v0;
      if (!v2[v9])
      {
        uint64_t v0 = v9 + 1;
        if (v9 + 1 >= v4) {
          goto LABEL_28;
        }
        if (!v2[v0])
        {
          uint64_t v10 = v9 + 2;
          if (v10 >= v4)
          {
LABEL_28:
            uint64_t v18 = 1 << *(unsigned char *)(v1 + 32);
            if (v18 > 63)
            {
              sub_1B2A0088C(0, (unint64_t)(v18 + 63) >> 6, v2);
            }
            else
            {
              sub_1B2A0F798();
              *uint64_t v2 = v19;
            }
            uint64_t v0 = v20;
            *(void *)(v1 + 16) = 0;
            break;
          }
          if (!v2[v10])
          {
            while (1)
            {
              uint64_t v0 = v10 + 1;
              if (__OFADD__(v10, 1)) {
                goto LABEL_35;
              }
              if (v0 >= v4) {
                goto LABEL_28;
              }
              ++v10;
              if (v2[v0]) {
                goto LABEL_15;
              }
            }
          }
          uint64_t v0 = v10;
        }
      }
LABEL_15:
      sub_1B2A0F4C4();
    }
  }
  swift_release();
  *(void *)uint64_t v0 = v7;
  sub_1B2A0ED54();
}

uint64_t sub_1B2A02AC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3498);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v35 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v34 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    int64_t v36 = v10;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v15 << 6))
    {
      uint64_t v17 = v2;
      uint64_t v18 = *(void *)(v2 + 48) + 40 * i;
      uint64_t v19 = *(void *)v18;
      uint64_t v20 = *(void *)(v18 + 8);
      uint64_t v21 = *(void *)(v18 + 16);
      uint64_t v22 = *(void *)(v18 + 24);
      __int16 v23 = *(_WORD *)(v18 + 32);
      sub_1B2E83988();
      swift_bridgeObjectRetain();
      sub_1B2E82498();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B2E839E8();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) == 0)
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          BOOL v30 = v26 == v29;
          if (v26 == v29) {
            unint64_t v26 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v8 + 8 * v26);
          if (v31 != -1)
          {
            unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v8 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      uint64_t v32 = *(void *)(v4 + 48) + 40 * v27;
      *(void *)uint64_t v32 = v19;
      *(void *)(v32 + 8) = v20;
      *(void *)(v32 + 16) = v21;
      *(void *)(v32 + 24) = v22;
      *(_WORD *)(v32 + 32) = v23;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v17;
      int64_t v10 = v36;
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_38;
      }
      if (v13 >= v34) {
        goto LABEL_32;
      }
      unint64_t v14 = v35[v13];
      int64_t v15 = v10 + 1;
      if (!v14)
      {
        int64_t v15 = v10 + 2;
        if (v10 + 2 >= v34) {
          goto LABEL_32;
        }
        unint64_t v14 = v35[v15];
        if (!v14)
        {
          int64_t v15 = v10 + 3;
          if (v10 + 3 >= v34) {
            goto LABEL_32;
          }
          unint64_t v14 = v35[v15];
          if (!v14)
          {
            uint64_t v16 = v10 + 4;
            if (v10 + 4 >= v34)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v33 = 1 << *(unsigned char *)(v2 + 32);
              if (v33 > 63) {
                sub_1B2A0088C(0, (unint64_t)(v33 + 63) >> 6, v35);
              }
              else {
                *char v35 = -1 << v33;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v35[v16];
            if (!v14)
            {
              while (1)
              {
                int64_t v15 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v15 >= v34) {
                  goto LABEL_32;
                }
                unint64_t v14 = v35[v15];
                ++v16;
                if (v14) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v15 = v10 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v14 - 1) & v14;
      int64_t v36 = v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B2A02DF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1EB7E4AF0);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_1B2E83988();
      sub_1B2E82498();
      uint64_t result = sub_1B2E839E8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      char v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *char v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_1B2A0088C(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *BOOL v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B2A030D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B210);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    swift_retain();
    int64_t v10 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
LABEL_21:
      unsigned int v16 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v12);
      sub_1B2E83988();
      sub_1B2E83998();
      if (v16 >> 6 <= 1)
      {
        sub_1B2E82498();
        swift_bridgeObjectRelease();
      }
      uint64_t v17 = sub_1B2E839E8();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = v17 & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_32;
      }
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v20);
      }
      while (v25 == -1);
      unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
LABEL_32:
      *(void *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(unsigned char *)(*(void *)(v4 + 48) + v21) = v16;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_40;
    }
    if (v13 < v28)
    {
      unint64_t v14 = v6[v13];
      ++v10;
      if (v14) {
        goto LABEL_20;
      }
      int64_t v10 = v13 + 1;
      if (v13 + 1 < v28)
      {
        unint64_t v14 = v6[v10];
        if (v14) {
          goto LABEL_20;
        }
        int64_t v10 = v13 + 2;
        if (v13 + 2 < v28)
        {
          unint64_t v14 = v6[v10];
          if (v14) {
            goto LABEL_20;
          }
          int64_t v15 = v13 + 3;
          if (v15 < v28)
          {
            unint64_t v14 = v6[v15];
            if (v14)
            {
              int64_t v10 = v15;
LABEL_20:
              unint64_t v8 = (v14 - 1) & v14;
              unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v10 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                break;
              }
              if (v10 >= v28) {
                goto LABEL_34;
              }
              unint64_t v14 = v6[v10];
              ++v15;
              if (v14) {
                goto LABEL_20;
              }
            }
LABEL_41:
            __break(1u);
            JUMPOUT(0x1B2A03594);
          }
        }
      }
    }
LABEL_34:
    swift_release();
    uint64_t v1 = v0;
    uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
    if (v26 > 63) {
      sub_1B2A0088C(0, (unint64_t)(v26 + 63) >> 6, (void *)(v2 + 56));
    }
    else {
      *uint64_t v6 = -1 << v26;
    }
    *(void *)(v2 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B2A035C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B230);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_1B2E83988();
      swift_bridgeObjectRetain();
      sub_1B2E82498();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B2E839E8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      int64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *int64_t v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_1B2A0088C(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *BOOL v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B2A038B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1EB7D9820);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      sub_1B2E83988();
      sub_1B2E82498();
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_1B2E839E8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v14 < v9)
    {
      unint64_t v15 = v6[v14];
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = v6[v11];
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = v6[v11];
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = v6[v16];
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = v6[v11];
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
            JUMPOUT(0x1B2A03C98);
          }
        }
      }
    }
LABEL_32:
    swift_release();
    uint64_t v1 = v0;
    uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
    if (v27 > 63) {
      sub_1B2A0088C(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
    }
    else {
      *uint64_t v6 = -1 << v27;
    }
    *(void *)(v2 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B2A03CBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E55F0);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v35 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v34 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    int64_t v36 = v10;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v15 << 6))
    {
      uint64_t v17 = v2;
      uint64_t v18 = *(void *)(v2 + 48) + 40 * i;
      uint64_t v19 = *(void *)v18;
      uint64_t v20 = *(void *)(v18 + 8);
      uint64_t v21 = *(void *)(v18 + 16);
      uint64_t v22 = *(void *)(v18 + 24);
      char v23 = *(unsigned char *)(v18 + 32);
      sub_1B2E83988();
      swift_bridgeObjectRetain();
      sub_1B2E82498();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B2E839E8();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) == 0)
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          BOOL v30 = v26 == v29;
          if (v26 == v29) {
            unint64_t v26 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v8 + 8 * v26);
          if (v31 != -1)
          {
            unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v8 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      uint64_t v32 = *(void *)(v4 + 48) + 40 * v27;
      *(void *)uint64_t v32 = v19;
      *(void *)(v32 + 8) = v20;
      *(void *)(v32 + 16) = v21;
      *(void *)(v32 + 24) = v22;
      *(unsigned char *)(v32 + 32) = v23;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v17;
      int64_t v10 = v36;
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_38;
      }
      if (v13 >= v34) {
        goto LABEL_32;
      }
      unint64_t v14 = v35[v13];
      int64_t v15 = v10 + 1;
      if (!v14)
      {
        int64_t v15 = v10 + 2;
        if (v10 + 2 >= v34) {
          goto LABEL_32;
        }
        unint64_t v14 = v35[v15];
        if (!v14)
        {
          int64_t v15 = v10 + 3;
          if (v10 + 3 >= v34) {
            goto LABEL_32;
          }
          unint64_t v14 = v35[v15];
          if (!v14)
          {
            uint64_t v16 = v10 + 4;
            if (v10 + 4 >= v34)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v33 = 1 << *(unsigned char *)(v2 + 32);
              if (v33 > 63) {
                sub_1B2A0088C(0, (unint64_t)(v33 + 63) >> 6, v35);
              }
              else {
                *char v35 = -1 << v33;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v35[v16];
            if (!v14)
            {
              while (1)
              {
                int64_t v15 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v15 >= v34) {
                  goto LABEL_32;
                }
                unint64_t v14 = v35[v15];
                ++v16;
                if (v14) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v15 = v10 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v14 - 1) & v14;
      int64_t v36 = v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1B2A03FF0()
{
  uint64_t v1 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B1D8);
  uint64_t v2 = sub_1B2E831A8();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    char v28 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v29 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v30 = v2 + 56;
    uint64_t v31 = v1;
    unint64_t result = swift_retain();
    int64_t v8 = 0;
    if (!v6) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v34 = (v6 - 1) & v6;
    int64_t v35 = v8;
    unint64_t v9 = __clz(__rbit64(v6)) | (v8 << 6);
    uint64_t v10 = v31;
    while (1)
    {
      int64_t v15 = (uint64_t *)(*(void *)(v10 + 48) + 88 * v9);
      uint64_t v16 = v15[1];
      uint64_t v18 = v15[2];
      uint64_t v20 = v15[3];
      uint64_t v19 = v15[4];
      uint64_t v22 = v15[5];
      uint64_t v21 = v15[6];
      uint64_t v23 = v15[8];
      uint64_t v24 = v15[9];
      uint64_t v32 = v15[10];
      uint64_t v33 = v15[7];
      uint64_t v37 = *v15;
      uint64_t v17 = v37;
      uint64_t v38 = v16;
      uint64_t v39 = v18;
      uint64_t v40 = v20;
      uint64_t v41 = v19;
      uint64_t v42 = v22;
      uint64_t v43 = v21;
      uint64_t v44 = v33;
      uint64_t v45 = v23;
      uint64_t v46 = v24;
      uint64_t v47 = v32;
      sub_1B2E83988();
      KnosisInternalFact.hash(into:)((uint64_t)v36);
      sub_1B2E839E8();
      unint64_t result = sub_1B2E830F8();
      *(void *)(v30 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      unint64_t v25 = (void *)(*(void *)(v3 + 48) + 88 * result);
      *unint64_t v25 = v17;
      v25[1] = v16;
      v25[2] = v18;
      void v25[3] = v20;
      v25[4] = v19;
      uint64_t v25[5] = v22;
      v25[6] = v21;
      unint64_t v6 = v34;
      v25[7] = v33;
      v25[8] = v23;
      v25[9] = v24;
      v25[10] = v32;
      ++*(void *)(v3 + 16);
      int64_t v8 = v35;
      if (v34) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v11 = v8 + 1;
      uint64_t v10 = v31;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return result;
      }
      if (v11 >= v29) {
        goto LABEL_23;
      }
      unint64_t v12 = v28[v11];
      int64_t v13 = v8 + 1;
      if (!v12)
      {
        int64_t v13 = v8 + 2;
        if (v8 + 2 >= v29) {
          goto LABEL_23;
        }
        unint64_t v12 = v28[v13];
        if (!v12)
        {
          int64_t v13 = v8 + 3;
          if (v8 + 3 >= v29) {
            goto LABEL_23;
          }
          unint64_t v12 = v28[v13];
          if (!v12)
          {
            uint64_t v14 = v8 + 4;
            if (v8 + 4 >= v29)
            {
LABEL_23:
              swift_release();
              uint64_t v26 = 1 << *(unsigned char *)(v31 + 32);
              if (v26 > 63) {
                sub_1B2A0088C(0, (unint64_t)(v26 + 63) >> 6, v28);
              }
              else {
                *char v28 = -1 << v26;
              }
              *(void *)(v31 + 16) = 0;
              break;
            }
            unint64_t v12 = v28[v14];
            if (!v12)
            {
              while (1)
              {
                int64_t v13 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v29) {
                  goto LABEL_23;
                }
                unint64_t v12 = v28[v13];
                ++v14;
                if (v12) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v13 = v8 + 4;
          }
        }
      }
LABEL_20:
      uint64_t v34 = (v12 - 1) & v12;
      int64_t v35 = v13;
      unint64_t v9 = __clz(__rbit64(v12)) + (v13 << 6);
    }
  }
  unint64_t result = swift_release();
  *unint64_t v27 = v3;
  return result;
}

uint64_t sub_1B2A042F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1EB7D9828);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + i);
      sub_1B2E83988();
      sub_1B2E82498();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B2E839E8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v18;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = v6[v12];
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v9) {
            goto LABEL_32;
          }
          unint64_t v16 = v6[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
              if (v27 > 63) {
                sub_1B2A0088C(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *unint64_t v6 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v9) {
                  goto LABEL_32;
                }
                unint64_t v16 = v6[v12];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

void sub_1B2A045F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B220);
  uint64_t v3 = sub_1B2E831A8();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    int64_t v9 = 0;
    if (!v7) {
      goto LABEL_6;
    }
LABEL_5:
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
    {
      int64_t v15 = (_OWORD *)(*(void *)(v2 + 48) + 48 * i);
      long long v16 = v15[1];
      v18[0] = *v15;
      v18[1] = v16;
      v18[2] = v15[2];
      sub_1B2A05834((uint64_t)v18, v3);
      if (v7) {
        goto LABEL_5;
      }
LABEL_6:
      int64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return;
      }
      if (v12 >= v8) {
        goto LABEL_22;
      }
      unint64_t v13 = v5[v12];
      ++v9;
      if (!v13)
      {
        int64_t v9 = v12 + 1;
        if (v12 + 1 >= v8) {
          goto LABEL_22;
        }
        unint64_t v13 = v5[v9];
        if (!v13)
        {
          int64_t v9 = v12 + 2;
          if (v12 + 2 >= v8) {
            goto LABEL_22;
          }
          unint64_t v13 = v5[v9];
          if (!v13)
          {
            int64_t v14 = v12 + 3;
            if (v14 >= v8)
            {
LABEL_22:
              swift_release();
              uint64_t v17 = 1 << *(unsigned char *)(v2 + 32);
              if (v17 > 63) {
                sub_1B2A0088C(0, (unint64_t)(v17 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v5 = -1 << v17;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v13 = v5[v14];
            if (!v13)
            {
              while (1)
              {
                int64_t v9 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_28;
                }
                if (v9 >= v8) {
                  goto LABEL_22;
                }
                unint64_t v13 = v5[v9];
                ++v14;
                if (v13) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v9 = v14;
          }
        }
      }
LABEL_19:
      unint64_t v7 = (v13 - 1) & v13;
    }
  }
  swift_release();
  *uint64_t v1 = v3;
}

uint64_t sub_1B2A047E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B1F8);
  uint64_t result = sub_1B2E831A8();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v31 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v6;
    int64_t v30 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = result + 56;
    if ((v8 & v6) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (unint64_t i = v11 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v5 << 6))
    {
      uint64_t v16 = *(void *)(v2 + 48) + 24 * i;
      char v17 = *(unsigned char *)v16;
      uint64_t v18 = *(void *)(v16 + 8);
      uint64_t v19 = *(void *)(v16 + 16);
      sub_1B2E83988();
      sub_1B2E839B8();
      sub_1B2E839C8();
      sub_1B2E839C8();
      uint64_t result = sub_1B2E839E8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      uint64_t v28 = *(void *)(v4 + 48) + 24 * v23;
      *(unsigned char *)uint64_t v28 = v17;
      *(void *)(v28 + 8) = v18;
      *(void *)(v28 + 16) = v19;
      ++*(void *)(v4 + 16);
      if (v9) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_38;
      }
      if (v13 >= v30) {
        goto LABEL_32;
      }
      unint64_t v14 = v31[v13];
      ++v5;
      if (!v14)
      {
        int64_t v5 = v13 + 1;
        if (v13 + 1 >= v30) {
          goto LABEL_32;
        }
        unint64_t v14 = v31[v5];
        if (!v14)
        {
          int64_t v5 = v13 + 2;
          if (v13 + 2 >= v30) {
            goto LABEL_32;
          }
          unint64_t v14 = v31[v5];
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v30)
            {
LABEL_32:
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_1B2A0088C(0, (unint64_t)(v29 + 63) >> 6, v31);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              uint64_t v1 = v0;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v31[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v5 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_39;
                }
                if (v5 >= v30) {
                  goto LABEL_32;
                }
                unint64_t v14 = v31[v5];
                ++v15;
                if (v14) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v5 = v15;
          }
        }
      }
LABEL_20:
      unint64_t v9 = (v14 - 1) & v14;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B2A04AEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B1B8);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + i);
      sub_1B2E83988();
      PersonEntityTagType.rawValue.getter();
      sub_1B2E82498();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B2E839E8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v18;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = v6[v12];
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v9) {
            goto LABEL_32;
          }
          unint64_t v16 = v6[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
              if (v27 > 63) {
                sub_1B2A0088C(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v6 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v9) {
                  goto LABEL_32;
                }
                unint64_t v16 = v6[v12];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

void sub_1B2A04DC4()
{
  sub_1B299B3E0();
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B2A0EDD8(v3, v4);
  uint64_t v5 = sub_1B2A0F610();
  if (*(void *)(v2 + 16))
  {
    uint64_t v39 = (void *)(v2 + 56);
    sub_1B2A0F8C4();
    unint64_t v8 = v7 & v6;
    int64_t v38 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v10 = v5 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_4;
    }
LABEL_3:
    unint64_t v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = v18 + (v11 << 6))
    {
      uint64_t v19 = v2;
      unint64_t v20 = (uint64_t *)(*(void *)(v2 + 48) + 32 * i);
      uint64_t v21 = *v20;
      uint64_t v22 = v20[1];
      uint64_t v23 = v20[2];
      uint64_t v24 = v20[3];
      sub_1B2E83988();
      swift_bridgeObjectRetain();
      sub_1B2E82498();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1B2E82498();
      swift_bridgeObjectRelease();
      sub_1B2E839E8();
      sub_1B2A0FB60();
      if (((v27 << v26) & ~*(void *)(v10 + 8 * v25)) == 0)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v31)
          {
            if (v28) {
              break;
            }
          }
          if (v29 == v30) {
            uint64_t v29 = 0;
          }
          if (*(void *)(v10 + 8 * v29) != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      sub_1B299F374();
LABEL_28:
      sub_1B2A0F924();
      *(void *)(v10 + v32) |= v33;
      int64_t v35 = (void *)(*(void *)(v5 + 48) + 32 * v34);
      *int64_t v35 = v21;
      v35[1] = v22;
      id v35[2] = v23;
      v35[3] = v24;
      ++*(void *)(v5 + 16);
      uint64_t v2 = v19;
      if (v8) {
        goto LABEL_3;
      }
LABEL_4:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_36;
      }
      if (v14 >= v38) {
        goto LABEL_30;
      }
      ++v11;
      if (!v39[v14])
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v38) {
          goto LABEL_30;
        }
        if (!v39[v11])
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v38) {
            goto LABEL_30;
          }
          if (!v39[v11])
          {
            int64_t v15 = v14 + 3;
            if (v15 >= v38)
            {
LABEL_30:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v36 = 1 << *(unsigned char *)(v2 + 32);
              if (v36 > 63)
              {
                sub_1B2A0088C(0, (unint64_t)(v36 + 63) >> 6, v39);
              }
              else
              {
                sub_1B2A0F798();
                *uint64_t v39 = v37;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            if (!v39[v15])
            {
              while (1)
              {
                int64_t v11 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_37;
                }
                if (v11 >= v38) {
                  goto LABEL_30;
                }
                ++v15;
                if (v39[v11]) {
                  goto LABEL_17;
                }
              }
            }
            int64_t v11 = v15;
          }
        }
      }
LABEL_17:
      sub_1B299E5A0();
      unint64_t v8 = v17 & v16;
    }
  }
  swift_release();
  *uint64_t v1 = v5;
  sub_1B2A0EF9C();
}

uint64_t sub_1B2A05070()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B1D0);
  uint64_t result = sub_1B2E831A8();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    if (!v9) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
    {
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      sub_1B2E83988();
      sub_1B2E83998();
      uint64_t result = sub_1B2E839E8();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          BOOL v24 = v20 == v23;
          if (v20 == v23) {
            unint64_t v20 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v20);
          if (v25 != -1)
          {
            unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(void *)(*(void *)(v4 + 48) + 8 * v21) = v17;
      ++*(void *)(v4 + 16);
      if (v9) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = v6[v14];
      ++v5;
      if (!v15)
      {
        int64_t v5 = v14 + 1;
        if (v14 + 1 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = v6[v5];
        if (!v15)
        {
          int64_t v5 = v14 + 2;
          if (v14 + 2 >= v10) {
            goto LABEL_32;
          }
          unint64_t v15 = v6[v5];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
              if (v26 > 63) {
                sub_1B2A0088C(0, (unint64_t)(v26 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v6 = -1 << v26;
              }
              uint64_t v1 = v0;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v6[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v5 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v5 >= v10) {
                  goto LABEL_32;
                }
                unint64_t v15 = v6[v5];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v5 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v9 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B2A05318()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B228);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (const void *)(*(void *)(v2 + 48) + 144 * i);
      memcpy(__dst, v17, sizeof(__dst));
      memcpy(v28, v17, sizeof(v28));
      sub_1B2E83988();
      KnosisFact.hash(into:)();
      uint64_t result = sub_1B2E839E8();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6))) == 0)
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          BOOL v24 = v20 == v23;
          if (v20 == v23) {
            unint64_t v20 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v9 + 8 * v20);
          if (v25 != -1)
          {
            unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v4 + 48) + 144 * v21), __dst, 0x90uLL);
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v27[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v27[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v27[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
              if (v26 > 63) {
                sub_1B2A0088C(0, (unint64_t)(v26 + 63) >> 6, v27);
              }
              else {
                *uint64_t v27 = -1 << v26;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v27[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v27[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

void sub_1B2A0561C(uint64_t a1, uint64_t *a2)
{
  sub_1B2A0EDB0(a1, a2);
  sub_1B2A0F610();
  sub_1B2A0F29C();
  if (v5)
  {
    int64_t v6 = 0;
    int64_t v8 = (uint64_t *)(v4 + 56);
    uint64_t v7 = *(void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v26 = -1 << v9;
    uint64_t v27 = v2;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    uint64_t v11 = v10 & v7;
    uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v3 + 56;
    if ((v10 & v7) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    sub_1B2A0FB40();
    for (int64_t i = v14 | (v6 << 6); ; int64_t i = v18 + (v6 << 6))
    {
      uint64_t v19 = *(void *)(*(void *)(v4 + 48) + 8 * i);
      unint64_t v20 = sub_1B2E83978() & ~(-1 << *(unsigned char *)(v3 + 32));
      if (((-1 << v20) & ~*(void *)(v13 + 8 * (v20 >> 6))) == 0)
      {
        sub_1B29A41BC();
        while (1)
        {
          sub_1B2A0F308();
          if (v25)
          {
            if (v22) {
              break;
            }
          }
          if (v23 == v24) {
            uint64_t v23 = 0;
          }
          if (*(void *)(v13 + 8 * v23) != -1)
          {
            sub_1B29A4CA8();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      sub_1B299F374();
LABEL_31:
      *(void *)(v13 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(void *)(*(void *)(v3 + 48) + 8 * v21) = v19;
      ++*(void *)(v3 + 16);
      if (v11) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_39;
      }
      if (v16 >= v12) {
        goto LABEL_33;
      }
      ++v6;
      if (!v8[v16])
      {
        int64_t v6 = v16 + 1;
        if (v16 + 1 >= v12) {
          goto LABEL_33;
        }
        if (!v8[v6])
        {
          int64_t v6 = v16 + 2;
          if (v16 + 2 >= v12) {
            goto LABEL_33;
          }
          if (!v8[v6])
          {
            int64_t v17 = v16 + 3;
            if (v17 >= v12)
            {
LABEL_33:
              if (v28 > 63) {
                sub_1B2A0088C(0, v12, (void *)(v4 + 56));
              }
              else {
                *int64_t v8 = v26;
              }
              uint64_t v2 = v27;
              *(void *)(v4 + 16) = 0;
              break;
            }
            if (!v8[v17])
            {
              while (1)
              {
                int64_t v6 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_40;
                }
                if (v6 >= v12) {
                  goto LABEL_33;
                }
                ++v17;
                if (v8[v6]) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v6 = v17;
          }
        }
      }
LABEL_20:
      sub_1B2A0FBBC();
    }
  }
  swift_release();
  *uint64_t v2 = v3;
}

__n128 sub_1B2A05834(uint64_t a1, uint64_t a2)
{
  sub_1B2E83988();
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    sub_1B2E839A8();
  }
  else
  {
    sub_1B2E839A8();
    sub_1B2E839C8();
  }
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  sub_1B2E839E8();
  unint64_t v4 = sub_1B2E830F8();
  *(void *)(a2 + 56 + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v4;
  uint64_t v5 = *(void *)(a2 + 48) + 48 * v4;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 16) = v6;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v5 + 32) = result;
  ++*(void *)(a2 + 16);
  return result;
}

void sub_1B2A05968(uint64_t a1, uint64_t a2)
{
  sub_1B2A0F6CC();
  if (!v10 & v9 && (v5 & 1) != 0) {
    goto LABEL_14;
  }
  if (v5)
  {
    sub_1B2A02914();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1B2A09234(v6);
      goto LABEL_14;
    }
    sub_1B2A0950C();
  }
  uint64_t v11 = *v2;
  sub_1B2E83988();
  sub_1B2E839C8();
  sub_1B2E839E8();
  sub_1B2A0EEC0();
  if (v12)
  {
    if (*(void *)(*(void *)(v11 + 48) + 8 * a2) == a1)
    {
LABEL_13:
      sub_1B2E83848();
      __break(1u);
    }
    else
    {
      while (1)
      {
        sub_1B2A0F390();
        if ((v14 & 1) == 0) {
          break;
        }
        if (*(void *)(v13 + 8 * a2) == a1) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  sub_1B2A0F0EC();
  *(void *)(v16 + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v15 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v15 + 16) = v19;
  }
}

uint64_t sub_1B2A05A7C(uint64_t result, unint64_t i, char a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_21;
  }
  if (a3)
  {
    sub_1B2A02AC4();
  }
  else
  {
    if (v8 > v7)
    {
      __n128 result = (uint64_t)sub_1B2A07FB4();
      goto LABEL_21;
    }
    sub_1B2A096A8();
  }
  uint64_t v9 = *v3;
  sub_1B2E83988();
  uint64_t v10 = *(void *)v6;
  uint64_t v11 = *(void *)(v6 + 8);
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  __n128 result = sub_1B2E839E8();
  uint64_t v12 = -1 << *(unsigned char *)(v9 + 32);
  int64_t i = result & ~v12;
  uint64_t v13 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v14 = *(void *)(v9 + 48);
    uint64_t v15 = (void *)(v14 + 40 * i);
    if (*v15 == v10 && v15[1] == v11) {
      goto LABEL_24;
    }
    __n128 result = sub_1B2E837A8();
    if (result) {
      goto LABEL_24;
    }
    uint64_t v17 = ~v12;
    for (int64_t i = (i + 1) & v17; ((*(void *)(v13 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; int64_t i = (i + 1) & v17)
    {
      BOOL v18 = (void *)(v14 + 40 * i);
      if (*v18 == v10 && v18[1] == v11) {
        goto LABEL_24;
      }
      __n128 result = sub_1B2E837A8();
      if (result) {
        goto LABEL_24;
      }
    }
  }
LABEL_21:
  uint64_t v20 = *v4;
  *(void *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  uint64_t v21 = *(void *)(v20 + 48) + 40 * i;
  long long v22 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v6;
  *(_OWORD *)(v21 + 16) = v22;
  *(_WORD *)(v21 + 32) = *(_WORD *)(v6 + 32);
  uint64_t v23 = *(void *)(v20 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v20 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_24:
  __n128 result = sub_1B2E83848();
  __break(1u);
  return result;
}

uint64_t sub_1B2A05C64(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  char v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1B2A02DF8();
  }
  else
  {
    if (v10 > v9)
    {
      __n128 result = (uint64_t)sub_1B2A08184();
      goto LABEL_22;
    }
    sub_1B2A099A4();
  }
  uint64_t v11 = *v4;
  sub_1B2E83988();
  sub_1B2E82498();
  __n128 result = sub_1B2E839E8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (__n128 result = sub_1B2E837A8(), (result & 1) != 0))
    {
LABEL_21:
      __n128 result = sub_1B2E83848();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          __n128 result = sub_1B2E837A8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1B2A05E00(uint64_t result, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  unsigned __int8 v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1B2A030D4();
    }
    else
    {
      if (v8 > v7)
      {
        __n128 result = (uint64_t)sub_1B2A08338();
        goto LABEL_47;
      }
      sub_1B2A09C50();
    }
    uint64_t v9 = *v3;
    sub_1B2E83988();
    sub_1B2A24808((uint64_t)v23, v6);
    __n128 result = sub_1B2E839E8();
    uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      while (1)
      {
        unsigned int v12 = *(unsigned __int8 *)(*(void *)(v9 + 48) + a2);
        if (!(v12 >> 6)) {
          break;
        }
        if (v12 >> 6 != 1)
        {
          if (v12 == 128)
          {
            if (v6 == 128) {
              goto LABEL_51;
            }
          }
          else if (v12 == 129)
          {
            if (v6 == 129) {
              goto LABEL_51;
            }
          }
          else if (v6 == 130)
          {
            goto LABEL_51;
          }
          goto LABEL_46;
        }
        if ((v6 & 0xC0) == 0x40)
        {
          unint64_t v13 = 0xE800000000000000;
          uint64_t v14 = 0x6E656B6F54796E61;
          switch(v12 & 0x3F)
          {
            case 1u:
              unint64_t v13 = 0xE600000000000000;
              uint64_t v14 = 0x786966657270;
              break;
            case 2u:
              uint64_t v14 = 0x6E656B6F546C6C61;
              unint64_t v13 = 0xE900000000000073;
              break;
            case 3u:
              uint64_t v14 = 0x69666572506C6C61;
              unint64_t v13 = 0xEB00000000736578;
              break;
            case 4u:
              unint64_t v13 = 0xE600000000000000;
              uint64_t v14 = 0x657361726870;
              break;
            case 5u:
              uint64_t v14 = 0x6850786966657270;
              unint64_t v13 = 0xEC00000065736172;
              break;
            default:
              break;
          }
LABEL_36:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v16 = 0x786966657270;
LABEL_41:
          if (v14 == v16 && v13 == v15) {
            goto LABEL_50;
          }
          char v18 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          __n128 result = swift_bridgeObjectRelease();
          if (v18) {
            goto LABEL_51;
          }
        }
LABEL_46:
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_47;
        }
      }
      if (v6 >= 0x40u) {
        goto LABEL_46;
      }
      unint64_t v13 = 0xE800000000000000;
      uint64_t v14 = 0x6E656B6F54796E61;
      switch(*(unsigned char *)(*(void *)(v9 + 48) + a2))
      {
        case 1:
          unint64_t v13 = 0xE600000000000000;
          uint64_t v14 = 0x786966657270;
          break;
        case 2:
          uint64_t v14 = 0x6E656B6F546C6C61;
          unint64_t v13 = 0xE900000000000073;
          break;
        case 3:
          uint64_t v14 = 0x69666572506C6C61;
          unint64_t v13 = 0xEB00000000736578;
          break;
        case 4:
          unint64_t v13 = 0xE600000000000000;
          uint64_t v14 = 0x657361726870;
          break;
        case 5:
          uint64_t v14 = 0x6850786966657270;
          unint64_t v13 = 0xEC00000065736172;
          break;
        default:
          break;
      }
      unint64_t v15 = 0xE800000000000000;
      uint64_t v16 = 0x6E656B6F54796E61;
      switch(v6)
      {
        case 1u:
          goto LABEL_36;
        case 2u:
          uint64_t v16 = 0x6E656B6F546C6C61;
          unint64_t v15 = 0xE900000000000073;
          break;
        case 3u:
          uint64_t v16 = 0x69666572506C6C61;
          unint64_t v15 = 0xEB00000000736578;
          break;
        case 4u:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v16 = 0x657361726870;
          break;
        case 5u:
          uint64_t v16 = 0x6850786966657270;
          unint64_t v15 = 0xEC00000065736172;
          break;
        default:
          goto LABEL_41;
      }
      goto LABEL_41;
    }
  }
LABEL_47:
  uint64_t v19 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v19 + 48) + a2) = v6;
  uint64_t v20 = *(void *)(v19 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
LABEL_50:
    swift_bridgeObjectRelease_n();
LABEL_51:
    sub_1B2E83848();
    __break(1u);
    JUMPOUT(0x1B2A0625CLL);
  }
  *(void *)(v19 + 16) = v22;
  return result;
}

uint64_t sub_1B2A062BC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  char v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1B2A035C4();
  }
  else
  {
    if (v10 > v9)
    {
      __n128 result = (uint64_t)sub_1B2A084D0();
      goto LABEL_22;
    }
    sub_1B2A0A104();
  }
  uint64_t v11 = *v4;
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  __n128 result = sub_1B2E839E8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (__n128 result = sub_1B2E837A8(), (result & 1) != 0))
    {
LABEL_21:
      __n128 result = sub_1B2E83848();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        char v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          __n128 result = sub_1B2E837A8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  BOOL v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *BOOL v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_1B2A06468(char a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1B2A038B0();
    }
    else
    {
      if (v7 > v6)
      {
        sub_1B2A08FB4(&qword_1EB7D9820);
        goto LABEL_36;
      }
      sub_1B2A0A3BC();
    }
    uint64_t v8 = *v3;
    sub_1B2E83988();
    sub_1B2AA49C0((uint64_t)v25, a1);
    uint64_t v9 = sub_1B2E839E8();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = v9 & ~v10;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      while (1)
      {
        unint64_t v12 = 0xE400000000000000;
        uint64_t v13 = 1701736302;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0x80000001B2E8EB10;
            uint64_t v13 = 0xD000000000000010;
            break;
          case 2:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v13 = 0x7865646E496F6ELL;
            break;
          case 3:
            uint64_t v14 = 0x47746E657665;
            goto LABEL_18;
          case 4:
            uint64_t v13 = 0x79676F6C6F746E6FLL;
            unint64_t v12 = 0xED00007865646E49;
            break;
          case 5:
            uint64_t v13 = 0x49747865746E6F63;
            unint64_t v12 = 0xEC0000007865646ELL;
            break;
          case 6:
            uint64_t v14 = 0x476C61636F6CLL;
LABEL_18:
            uint64_t v13 = v14 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
            unint64_t v12 = 0xEF7865646E496870;
            break;
          case 7:
            uint64_t v13 = 0xD00000000000001ALL;
            unint64_t v12 = 0x80000001B2E8EB70;
            break;
          case 8:
            uint64_t v13 = 0xD000000000000018;
            unint64_t v12 = 0x80000001B2E8EB90;
            break;
          default:
            break;
        }
        unint64_t v15 = 0xE400000000000000;
        uint64_t v16 = 1701736302;
        switch(a1)
        {
          case 1:
            unint64_t v15 = 0x80000001B2E8EB10;
            uint64_t v16 = 0xD000000000000010;
            break;
          case 2:
            unint64_t v15 = 0xE700000000000000;
            uint64_t v16 = 0x7865646E496F6ELL;
            break;
          case 3:
            uint64_t v17 = 0x47746E657665;
            goto LABEL_28;
          case 4:
            uint64_t v16 = 0x79676F6C6F746E6FLL;
            unint64_t v15 = 0xED00007865646E49;
            break;
          case 5:
            uint64_t v16 = 0x49747865746E6F63;
            unint64_t v15 = 0xEC0000007865646ELL;
            break;
          case 6:
            uint64_t v17 = 0x476C61636F6CLL;
LABEL_28:
            uint64_t v16 = v17 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
            unint64_t v15 = 0xEF7865646E496870;
            break;
          case 7:
            uint64_t v16 = 0xD00000000000001ALL;
            unint64_t v15 = 0x80000001B2E8EB70;
            break;
          case 8:
            uint64_t v16 = 0xD000000000000018;
            unint64_t v15 = 0x80000001B2E8EB90;
            break;
          default:
            break;
        }
        if (v13 == v16 && v12 == v15) {
          break;
        }
        char v19 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v19) {
          goto LABEL_40;
        }
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_36;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease_n();
LABEL_40:
      sub_1B2E83848();
      __break(1u);
      JUMPOUT(0x1B2A0682CLL);
    }
  }
LABEL_36:
  uint64_t v20 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v20 + 48) + a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
    goto LABEL_39;
  }
  *(void *)(v20 + 16) = v23;
}

uint64_t sub_1B2A06874(uint64_t result, unint64_t i, char a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_21;
  }
  if (a3)
  {
    sub_1B2A03CBC();
  }
  else
  {
    if (v8 > v7)
    {
      __n128 result = (uint64_t)sub_1B2A08684();
      goto LABEL_21;
    }
    sub_1B2A0A794();
  }
  uint64_t v9 = *v3;
  sub_1B2E83988();
  uint64_t v10 = *(void *)(v6 + 16);
  uint64_t v11 = *(void *)(v6 + 24);
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  __n128 result = sub_1B2E839E8();
  uint64_t v12 = -1 << *(unsigned char *)(v9 + 32);
  int64_t i = result & ~v12;
  uint64_t v13 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v14 = *(void *)(v9 + 48);
    uint64_t v15 = v14 + 40 * i;
    if (*(void *)(v15 + 16) == v10 && *(void *)(v15 + 24) == v11) {
      goto LABEL_24;
    }
    __n128 result = sub_1B2E837A8();
    if (result) {
      goto LABEL_24;
    }
    uint64_t v17 = ~v12;
    for (int64_t i = (i + 1) & v17; ((*(void *)(v13 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; int64_t i = (i + 1) & v17)
    {
      uint64_t v18 = v14 + 40 * i;
      if (*(void *)(v18 + 16) == v10 && *(void *)(v18 + 24) == v11) {
        goto LABEL_24;
      }
      __n128 result = sub_1B2E837A8();
      if (result) {
        goto LABEL_24;
      }
    }
  }
LABEL_21:
  uint64_t v20 = *v4;
  *(void *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  uint64_t v21 = *(void *)(v20 + 48) + 40 * i;
  long long v22 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v6;
  *(_OWORD *)(v21 + 16) = v22;
  *(unsigned char *)(v21 + 32) = *(unsigned char *)(v6 + 32);
  uint64_t v23 = *(void *)(v20 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v20 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_24:
  __n128 result = sub_1B2E83848();
  __break(1u);
  return result;
}

uint64_t sub_1B2A06A5C(uint64_t *__src, unint64_t i, char a3)
{
  unint64_t v4 = v3;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_21;
  }
  if (a3)
  {
    sub_1B2A03FF0();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1B2A08854();
      goto LABEL_21;
    }
    sub_1B2A0AA90();
  }
  uint64_t v9 = *v3;
  memcpy(__dst, __src, sizeof(__dst));
  sub_1B2E83988();
  KnosisInternalFact.hash(into:)((uint64_t)&v26);
  uint64_t v10 = sub_1B2E839E8();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  int64_t i = v10 & ~v11;
  uint64_t v12 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v13 = *__src;
    uint64_t v14 = __src[1];
    uint64_t v15 = *(void *)(v9 + 48);
    uint64_t v16 = (void *)(v15 + 88 * i);
    BOOL v17 = *v16 == *__src && v16[1] == v14;
    if (v17 || (sub_1B2E837A8() & 1) != 0) {
      goto LABEL_24;
    }
    uint64_t v18 = ~v11;
    for (int64_t i = (i + 1) & v18; ((*(void *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; int64_t i = (i + 1) & v18)
    {
      char v19 = (void *)(v15 + 88 * i);
      BOOL v20 = *v19 == v13 && v19[1] == v14;
      if (v20 || (sub_1B2E837A8() & 1) != 0) {
        goto LABEL_24;
      }
    }
  }
LABEL_21:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v21 + 48) + 88 * i), __src, 0x58uLL);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_24:
  uint64_t result = sub_1B2E83848();
  __break(1u);
  return result;
}

uint64_t sub_1B2A06C40(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result & 1;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  char v22 = result & 1;
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_27;
  }
  if (a3)
  {
    sub_1B2A042F8();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1B2A08A98();
      goto LABEL_27;
    }
    sub_1B2A0AD84();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_1B29F93B0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    if (v5) {
      uint64_t v11 = 0x7241746E65746E69;
    }
    else {
      uint64_t v11 = 0x79676F6C6F746E6FLL;
    }
    if (v5) {
      unint64_t v12 = 0xE900000000000067;
    }
    else {
      unint64_t v12 = 0xE800000000000000;
    }
    do
    {
      uint64_t v13 = *(unsigned char *)(*(void *)(v8 + 48) + a2) ? 0x7241746E65746E69 : 0x79676F6C6F746E6FLL;
      unint64_t v14 = *(unsigned char *)(*(void *)(v8 + 48) + a2) ? 0xE900000000000067 : 0xE800000000000000;
      if (v13 == v11 && v14 == v12) {
        goto LABEL_30;
      }
      char v16 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_31;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_27:
  uint64_t v17 = *v21;
  *(void *)(*v21 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v22;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (!v19)
  {
    *(void *)(v17 + 16) = v20;
    return result;
  }
  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease_n();
LABEL_31:
  uint64_t result = sub_1B2E83848();
  __break(1u);
  return result;
}

uint64_t sub_1B2A06E30(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  uint64_t v33 = (_OWORD *)result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1B2A045F0();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1B2A08C30();
        goto LABEL_30;
      }
      sub_1B2A0B048();
    }
    uint64_t v8 = *v3;
    sub_1B2E83988();
    uint64_t v9 = *(void *)v5;
    int v10 = *(unsigned __int8 *)(v5 + 8);
    sub_1B2E839A8();
    if (v10 != 1) {
      sub_1B2E839C8();
    }
    uint64_t v11 = *(void *)(v5 + 16);
    uint64_t v12 = *(void *)(v5 + 24);
    uint64_t v13 = *(void *)(v5 + 32);
    uint64_t v14 = *(void *)(v5 + 40);
    swift_bridgeObjectRetain();
    uint64_t v35 = v11;
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B2E839E8();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v15;
    uint64_t v16 = v8 + 56;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v34 = v9;
      uint64_t v17 = ~v15;
      uint64_t v18 = *(void *)(v8 + 48);
      do
      {
        uint64_t v19 = v18 + 48 * a2;
        uint64_t result = *(void *)(v19 + 16);
        uint64_t v20 = *(void *)(v19 + 24);
        uint64_t v21 = *(void *)(v19 + 32);
        uint64_t v22 = *(void *)(v19 + 40);
        if (*(unsigned char *)(v19 + 8))
        {
          if (!v10) {
            goto LABEL_29;
          }
        }
        else
        {
          if (*(void *)v19 == v34) {
            char v23 = v10;
          }
          else {
            char v23 = 1;
          }
          if (v23) {
            goto LABEL_29;
          }
        }
        BOOL v24 = result == v35 && v20 == v12;
        if (v24 || (uint64_t result = sub_1B2E837A8(), (result & 1) != 0))
        {
          if (v21 == v13 && v22 == v14) {
            goto LABEL_33;
          }
          uint64_t result = sub_1B2E837A8();
          if (result) {
            goto LABEL_33;
          }
        }
LABEL_29:
        a2 = (a2 + 1) & v17;
      }
      while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_30:
  uint64_t v26 = *v32;
  *(void *)(*v32 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v27 = (_OWORD *)(*(void *)(v26 + 48) + 48 * a2);
  long long v28 = v33[1];
  *uint64_t v27 = *v33;
  v27[1] = v28;
  v27[2] = v33[2];
  uint64_t v29 = *(void *)(v26 + 16);
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
    __break(1u);
LABEL_33:
    uint64_t result = sub_1B2E83848();
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v31;
  }
  return result;
}

uint64_t sub_1B2A07088(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  int v9 = result;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0) {
    goto LABEL_18;
  }
  if (a5)
  {
    sub_1B2A047E0();
  }
  else
  {
    if (v11 > v10)
    {
      uint64_t result = (uint64_t)sub_1B2A08E08();
      goto LABEL_18;
    }
    sub_1B2A0B20C();
  }
  uint64_t v12 = *v5;
  sub_1B2E83988();
  sub_1B2E839B8();
  sub_1B2E839C8();
  sub_1B2E839C8();
  uint64_t result = sub_1B2E839E8();
  uint64_t v13 = -1 << *(unsigned char *)(v12 + 32);
  a4 = result & ~v13;
  if ((*(void *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v14 = ~v13;
    do
    {
      uint64_t v15 = (unsigned __int8 *)(*(void *)(v12 + 48) + 24 * a4);
      int v16 = *v15;
      uint64_t v18 = *((void *)v15 + 1);
      uint64_t v17 = *((void *)v15 + 2);
      BOOL v19 = v16 == v9 && v18 == a2;
      if (v19 && v17 == a3) {
        goto LABEL_21;
      }
      a4 = (a4 + 1) & v14;
    }
    while (((*(void *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_18:
  uint64_t v21 = *v5;
  *(void *)(*v5 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v22 = *(void *)(v21 + 48) + 24 * a4;
  *(unsigned char *)uint64_t v22 = v9;
  *(void *)(v22 + 8) = a2;
  *(void *)(v22 + 16) = a3;
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_21:
  uint64_t result = sub_1B2E83848();
  __break(1u);
  return result;
}

void sub_1B2A07218(char a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1B2A04AEC();
    }
    else
    {
      if (v7 > v6)
      {
        sub_1B2A08FB4(&qword_1E9C3B1B8);
        goto LABEL_90;
      }
      sub_1B2A0B4E0();
    }
    uint64_t v8 = *v3;
    uint64_t v9 = sub_1B29F9518();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = v9 & ~v10;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      while (1)
      {
        unint64_t v12 = 0xE500000000000000;
        unint64_t v13 = 0x7465736E75;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0xE700000000000000;
            unint64_t v13 = 0x6E776F6E6B6E75;
            break;
          case 2:
            unint64_t v13 = 0x726568746FLL;
            break;
          case 3:
            unint64_t v12 = 0xE600000000000000;
            unint64_t v13 = 0x666C6573796DLL;
            break;
          case 4:
            unint64_t v12 = 0xE600000000000000;
            unint64_t v13 = 0x796C696D6166;
            break;
          case 5:
            unint64_t v12 = 0xE600000000000000;
            unint64_t v13 = 0x746E65726170;
            break;
          case 6:
            unint64_t v13 = 0x726568746F6DLL;
            unint64_t v12 = 0xE600000000000000;
            break;
          case 7:
            unint64_t v12 = 0xE600000000000000;
            uint64_t v18 = 1752457574;
            goto LABEL_28;
          case 8:
            unint64_t v12 = 0xE700000000000000;
            unint64_t v13 = 0x676E696C626973;
            break;
          case 9:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v16 = 0x6568746F7262;
            goto LABEL_35;
          case 0xA:
            unint64_t v12 = 0xE600000000000000;
            uint64_t v18 = 1953720691;
LABEL_28:
            unint64_t v13 = v18 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
            break;
          case 0xB:
            unint64_t v13 = 0x726150646E617267;
            uint64_t v17 = 7630437;
            goto LABEL_31;
          case 0xC:
            unint64_t v13 = 0x746F6D646E617267;
            goto LABEL_30;
          case 0xD:
            unint64_t v13 = 0x746166646E617267;
LABEL_30:
            uint64_t v17 = 7497064;
LABEL_31:
            unint64_t v12 = v17 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 0xE:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v15 = 0x6C696843796DLL;
            goto LABEL_37;
          case 0xF:
            unint64_t v13 = 0x646C696863;
            break;
          case 0x10:
            unint64_t v12 = 0xE300000000000000;
            unint64_t v13 = 7237491;
            break;
          case 0x11:
            unint64_t v12 = 0xE800000000000000;
            uint64_t v19 = 0x746867756164;
            goto LABEL_42;
          case 0x12:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v16 = 0x656E74726170;
LABEL_35:
            unint64_t v13 = v16 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
            break;
          case 0x13:
            unint64_t v12 = 0xE400000000000000;
            unint64_t v13 = 1701210487;
            break;
          case 0x14:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v15 = 0x6E6162737568;
LABEL_37:
            unint64_t v13 = v15 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
            break;
          case 0x15:
            unint64_t v12 = 0xE600000000000000;
            unint64_t v13 = 0x646E65697266;
            break;
          case 0x16:
            unint64_t v12 = 0x80000001B2E8EA20;
            unint64_t v13 = 0xD000000000000010;
            break;
          case 0x17:
            unint64_t v12 = 0xE800000000000000;
            uint64_t v19 = 0x6B726F776F63;
LABEL_42:
            unint64_t v13 = v19 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
            break;
          case 0x18:
            unint64_t v12 = 0xE800000000000000;
            unint64_t v13 = 0x726F62686769656ELL;
            break;
          case 0x19:
            unint64_t v13 = 0x74616D6573756F68;
            unint64_t v12 = 0xE900000000000065;
            break;
          case 0x1A:
            unint64_t v12 = 0xE600000000000000;
            unint64_t v13 = 0x696E6D756C61;
            break;
          case 0x1B:
            uint64_t v14 = 1699772781;
            goto LABEL_45;
          case 0x1C:
            unint64_t v13 = 0x676F44796DLL;
            break;
          case 0x1D:
            uint64_t v14 = 1631811949;
LABEL_45:
            unint64_t v13 = v14 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
            break;
          default:
            break;
        }
        unint64_t v20 = 0xE500000000000000;
        unint64_t v21 = 0x7465736E75;
        switch(a1)
        {
          case 1:
            unint64_t v20 = 0xE700000000000000;
            unint64_t v21 = 0x6E776F6E6B6E75;
            break;
          case 2:
            unint64_t v21 = 0x726568746FLL;
            break;
          case 3:
            unint64_t v20 = 0xE600000000000000;
            unint64_t v21 = 0x666C6573796DLL;
            break;
          case 4:
            unint64_t v20 = 0xE600000000000000;
            unint64_t v21 = 0x796C696D6166;
            break;
          case 5:
            unint64_t v20 = 0xE600000000000000;
            unint64_t v21 = 0x746E65726170;
            break;
          case 6:
            unint64_t v21 = 0x726568746F6DLL;
            unint64_t v20 = 0xE600000000000000;
            break;
          case 7:
            unint64_t v20 = 0xE600000000000000;
            uint64_t v26 = 1752457574;
            goto LABEL_65;
          case 8:
            unint64_t v20 = 0xE700000000000000;
            unint64_t v21 = 0x676E696C626973;
            break;
          case 9:
            unint64_t v20 = 0xE700000000000000;
            uint64_t v24 = 0x6568746F7262;
            goto LABEL_72;
          case 10:
            unint64_t v20 = 0xE600000000000000;
            uint64_t v26 = 1953720691;
LABEL_65:
            unint64_t v21 = v26 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
            break;
          case 11:
            unint64_t v21 = 0x726150646E617267;
            uint64_t v25 = 7630437;
            goto LABEL_68;
          case 12:
            unint64_t v21 = 0x746F6D646E617267;
            goto LABEL_67;
          case 13:
            unint64_t v21 = 0x746166646E617267;
LABEL_67:
            uint64_t v25 = 7497064;
LABEL_68:
            unint64_t v20 = v25 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 14:
            unint64_t v20 = 0xE700000000000000;
            uint64_t v23 = 0x6C696843796DLL;
            goto LABEL_74;
          case 15:
            unint64_t v21 = 0x646C696863;
            break;
          case 16:
            unint64_t v20 = 0xE300000000000000;
            unint64_t v21 = 7237491;
            break;
          case 17:
            unint64_t v20 = 0xE800000000000000;
            uint64_t v27 = 0x746867756164;
            goto LABEL_79;
          case 18:
            unint64_t v20 = 0xE700000000000000;
            uint64_t v24 = 0x656E74726170;
LABEL_72:
            unint64_t v21 = v24 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
            break;
          case 19:
            unint64_t v20 = 0xE400000000000000;
            unint64_t v21 = 1701210487;
            break;
          case 20:
            unint64_t v20 = 0xE700000000000000;
            uint64_t v23 = 0x6E6162737568;
LABEL_74:
            unint64_t v21 = v23 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
            break;
          case 21:
            unint64_t v20 = 0xE600000000000000;
            unint64_t v21 = 0x646E65697266;
            break;
          case 22:
            unint64_t v20 = 0x80000001B2E8EA20;
            unint64_t v21 = 0xD000000000000010;
            break;
          case 23:
            unint64_t v20 = 0xE800000000000000;
            uint64_t v27 = 0x6B726F776F63;
LABEL_79:
            unint64_t v21 = v27 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
            break;
          case 24:
            unint64_t v20 = 0xE800000000000000;
            unint64_t v21 = 0x726F62686769656ELL;
            break;
          case 25:
            unint64_t v21 = 0x74616D6573756F68;
            unint64_t v20 = 0xE900000000000065;
            break;
          case 26:
            unint64_t v20 = 0xE600000000000000;
            unint64_t v21 = 0x696E6D756C61;
            break;
          case 27:
            uint64_t v22 = 1699772781;
            goto LABEL_82;
          case 28:
            unint64_t v21 = 0x676F44796DLL;
            break;
          case 29:
            uint64_t v22 = 1631811949;
LABEL_82:
            unint64_t v21 = v22 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
            break;
          default:
            break;
        }
        if (v13 == v21 && v12 == v20) {
          break;
        }
        char v29 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v29) {
          goto LABEL_94;
        }
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_90;
        }
      }
LABEL_93:
      swift_bridgeObjectRelease_n();
LABEL_94:
      sub_1B2E83848();
      __break(1u);
      JUMPOUT(0x1B2A078A4);
    }
  }
LABEL_90:
  uint64_t v30 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v30 + 48) + a2) = a1;
  uint64_t v31 = *(void *)(v30 + 16);
  BOOL v32 = __OFADD__(v31, 1);
  uint64_t v33 = v31 + 1;
  if (v32)
  {
    __break(1u);
    goto LABEL_93;
  }
  *(void *)(v30 + 16) = v33;
}

void sub_1B2A07994()
{
  sub_1B299B3E0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  sub_1B2A0F6CC();
  if (!v25 & v15 && (v11 & 1) != 0) {
    goto LABEL_22;
  }
  if (v11)
  {
    sub_1B2A04DC4();
  }
  else
  {
    if (v14 > v13)
    {
      sub_1B2A090B8(v12);
      goto LABEL_22;
    }
    sub_1B2A0B784();
  }
  uint64_t v16 = *v0;
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_1B2E839E8();
  uint64_t v18 = -1 << *(unsigned char *)(v16 + 32);
  unint64_t v2 = v17 & ~v18;
  uint64_t v19 = v16 + 56;
  if ((*(void *)(v16 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v2))
  {
    uint64_t v20 = ~v18;
    uint64_t v21 = *(void *)(v16 + 48);
    do
    {
      uint64_t v22 = (void *)(v21 + 32 * v2);
      uint64_t v23 = v22[2];
      uint64_t v24 = v22[3];
      BOOL v25 = *v22 == v10 && v22[1] == v8;
      if (v25 || (sub_1B2A0F454() & 1) != 0)
      {
        BOOL v26 = v23 == v6 && v24 == v4;
        if (v26 || (sub_1B2A0F6F4() & 1) != 0) {
          goto LABEL_25;
        }
      }
      unint64_t v2 = (v2 + 1) & v20;
    }
    while (((*(void *)(v19 + ((v2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v2) & 1) != 0);
  }
LABEL_22:
  sub_1B2A0F0EC();
  char v29 = (void *)(v28 + 32 * v2);
  *char v29 = v10;
  v29[1] = v8;
  v29[2] = v6;
  v29[3] = v4;
  uint64_t v30 = *(void *)(v27 + 16);
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (!v31)
  {
    *(void *)(v27 + 16) = v32;
    sub_1B2A0EF9C();
    return;
  }
  __break(1u);
LABEL_25:
  sub_1B2E83848();
  __break(1u);
}

void sub_1B2A07B4C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1B2A05070();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1B2A09234(&qword_1E9C3B1D0);
      goto LABEL_14;
    }
    sub_1B2A0B9F0();
  }
  uint64_t v8 = *v3;
  sub_1B2E83988();
  sub_1B2E83998();
  uint64_t v9 = sub_1B2E839E8();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = *(void *)(v8 + 48);
    if (*(void *)(v11 + 8 * a2) == a1)
    {
LABEL_13:
      sub_1B2E83848();
      __break(1u);
    }
    else
    {
      uint64_t v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v11 + 8 * a2) == a1) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v13 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v13 + 48) + 8 * a2) = a1;
  uint64_t v14 = *(void *)(v13 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v13 + 16) = v16;
  }
}

uint64_t sub_1B2A07CAC(uint64_t *__src, unint64_t i, char a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_21;
  }
  if (a3)
  {
    sub_1B2A05318();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1B2A0932C();
      goto LABEL_21;
    }
    sub_1B2A0BC68();
  }
  uint64_t v9 = *v3;
  memcpy(__dst, __src, sizeof(__dst));
  sub_1B2E83988();
  KnosisFact.hash(into:)();
  uint64_t v10 = sub_1B2E839E8();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  int64_t i = v10 & ~v11;
  uint64_t v12 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v13 = *__src;
    uint64_t v14 = __src[1];
    uint64_t v15 = *(void *)(v9 + 48);
    uint64_t v16 = (void *)(v15 + 144 * i);
    BOOL v17 = *v16 == *__src && v16[1] == v14;
    if (v17 || (sub_1B2E837A8() & 1) != 0) {
      goto LABEL_24;
    }
    uint64_t v18 = ~v11;
    for (int64_t i = (i + 1) & v18; ((*(void *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; int64_t i = (i + 1) & v18)
    {
      uint64_t v19 = (void *)(v15 + 144 * i);
      BOOL v20 = *v19 == v13 && v19[1] == v14;
      if (v20 || (sub_1B2E837A8() & 1) != 0) {
        goto LABEL_24;
      }
    }
  }
LABEL_21:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v21 + 48) + 144 * i), __src, 0x90uLL);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_24:
  uint64_t result = sub_1B2E83848();
  __break(1u);
  return result;
}

void sub_1B2A07E90(uint64_t a1, unint64_t a2)
{
  sub_1B2A0F6CC();
  if (!v10 & v9 && (v5 & 1) != 0) {
    goto LABEL_15;
  }
  if (v5)
  {
    sub_1B2A0561C(v7 + 1, v6);
  }
  else
  {
    if (v8 > v7)
    {
      sub_1B2A09234(v6);
      goto LABEL_15;
    }
    sub_1B2A0BF3C();
  }
  uint64_t v11 = *v2;
  uint64_t v12 = sub_1B2E83978();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  a2 = v12 & ~v13;
  if ((*(void *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    if (*(void *)(v14 + 8 * a2) == a1)
    {
LABEL_14:
      sub_1B2E83848();
      __break(1u);
    }
    else
    {
      uint64_t v15 = ~v13;
      while (1)
      {
        a2 = (a2 + 1) & v15;
        if (((*(void *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v14 + 8 * a2) == a1) {
          goto LABEL_14;
        }
      }
    }
  }
LABEL_15:
  sub_1B2A0F0EC();
  *(void *)(v17 + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v16 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v20;
  }
}

void *sub_1B2A07FB4()
{
  unint64_t v1 = v0;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3498);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B2E83198();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 5 * i;
    uint64_t v21 = *(void *)(v2 + 48) + 8 * v20;
    uint64_t v23 = *(void *)v21;
    uint64_t v22 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    LOWORD(v21) = *(_WORD *)(v21 + 32);
    uint64_t v26 = *(void *)(v4 + 48) + 8 * v20;
    *(void *)uint64_t v26 = v23;
    *(void *)(v26 + 8) = v22;
    *(void *)(v26 + 16) = v24;
    *(void *)(v26 + 24) = v25;
    *(_WORD *)(v26 + 32) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B2A08184()
{
  unint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1EB7E4AF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B2E83198();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B2A08338()
{
  unint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1E9C3B210);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B2E83198();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(unsigned char *)(*(void *)(v4 + 48) + i) = *(unsigned char *)(*(void *)(v2 + 48) + i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B2A084D0()
{
  unint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1E9C3B230);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B2E83198();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B2A08684()
{
  unint64_t v1 = v0;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E55F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B2E83198();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 5 * i;
    uint64_t v21 = *(void *)(v2 + 48) + 8 * v20;
    uint64_t v23 = *(void *)v21;
    uint64_t v22 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    LOBYTE(v21) = *(unsigned char *)(v21 + 32);
    uint64_t v26 = *(void *)(v4 + 48) + 8 * v20;
    *(void *)uint64_t v26 = v23;
    *(void *)(v26 + 8) = v22;
    *(void *)(v26 + 16) = v24;
    *(void *)(v26 + 24) = v25;
    *(unsigned char *)(v26 + 32) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B2A08854()
{
  sub_1B29A3EB4(&qword_1E9C3B1D8);
  uint64_t v28 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1B2E83198();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v28 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 56);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 56);
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v5) {
    uint64_t result = memmove(result, __src, 8 * v5);
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  if (!v10) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v7 << 6))
  {
    uint64_t v17 = 88 * i;
    uint64_t v18 = *(void *)(v1 + 48) + v17;
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
    uint64_t v21 = *(void *)(v18 + 24);
    uint64_t v22 = *(void *)(v18 + 32);
    uint64_t v23 = *(void *)(v18 + 72);
    uint64_t v24 = *(void *)(v18 + 80);
    uint64_t v25 = *(void *)(v3 + 48) + v17;
    long long v26 = *(_OWORD *)(v18 + 40);
    long long v27 = *(_OWORD *)(v18 + 56);
    *(void *)uint64_t v25 = *(void *)v18;
    *(void *)(v25 + 8) = v19;
    *(void *)(v25 + 16) = v20;
    *(void *)(v25 + 24) = v21;
    *(void *)(v25 + 32) = v22;
    *(_OWORD *)(v25 + 40) = v26;
    *(_OWORD *)(v25 + 56) = v27;
    *(void *)(v25 + 72) = v23;
    *(void *)(v25 + 80) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v11) {
      goto LABEL_28;
    }
    unint64_t v15 = *((void *)__src + v14);
    ++v7;
    if (!v15)
    {
      int64_t v7 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_28;
      }
      unint64_t v15 = *((void *)__src + v7);
      if (!v15)
      {
        int64_t v7 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_28;
        }
        unint64_t v15 = *((void *)__src + v7);
        if (!v15) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_28;
  }
  unint64_t v15 = *((void *)__src + v16);
  if (v15)
  {
    int64_t v7 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_28;
    }
    unint64_t v15 = *((void *)__src + v7);
    ++v16;
    if (v15) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B2A08A98()
{
  uint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1EB7D9828);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B2E83198();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(unsigned char *)(*(void *)(v4 + 48) + i) = *(unsigned char *)(*(void *)(v2 + 48) + i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B2A08C30()
{
  uint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1E9C3B220);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B2E83198();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 3 * i;
    uint64_t v21 = *(void *)(v2 + 48) + 16 * v20;
    char v22 = *(unsigned char *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v23 = *(void *)(v21 + 24);
    uint64_t v25 = *(void *)(v21 + 32);
    uint64_t v26 = *(void *)(v21 + 40);
    uint64_t v27 = *(void *)(v4 + 48) + 16 * v20;
    *(void *)uint64_t v27 = *(void *)v21;
    *(unsigned char *)(v27 + 8) = v22;
    *(void *)(v27 + 16) = v24;
    *(void *)(v27 + 24) = v23;
    *(void *)(v27 + 32) = v25;
    *(void *)(v27 + 40) = v26;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B2A08E08()
{
  uint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1E9C3B1F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B2E83198();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    uint64_t v19 = 3 * i;
    uint64_t v20 = *(void *)(v2 + 48) + 8 * v19;
    long long v21 = *(_OWORD *)(v20 + 8);
    uint64_t v22 = *(void *)(v4 + 48) + 8 * v19;
    *(unsigned char *)uint64_t v22 = *(unsigned char *)v20;
    *(_OWORD *)(v22 + 8) = v21;
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1B2A08FB4(uint64_t *a1)
{
  sub_1B29A3EB4(a1);
  sub_1B2A0F038();
  sub_1B2A0F29C();
  if (v4)
  {
    unint64_t v5 = (void *)sub_1B29A04F4();
    if (v8) {
      BOOL v9 = (unint64_t)v5 >= v7;
    }
    else {
      BOOL v9 = 1;
    }
    if (v9) {
      sub_1B2A0F9D0(v5, v6);
    }
    sub_1B2A0EC74();
    if (!v12) {
      goto LABEL_10;
    }
LABEL_9:
    sub_1B2A0EF44();
    while (1)
    {
      *(unsigned char *)(v1[6] + v14) = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      if (v13) {
        goto LABEL_9;
      }
LABEL_10:
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v15 >= v10) {
        goto LABEL_25;
      }
      if (!*(void *)(v3 + 8 * v15))
      {
        if (v11 + 2 >= v10) {
          goto LABEL_25;
        }
        if (!*(void *)(v3 + 8 * (v11 + 2)))
        {
          if (v11 + 3 >= v10) {
            goto LABEL_25;
          }
          if (!*(void *)(v3 + 8 * (v11 + 3)))
          {
            uint64_t v16 = v11 + 4;
            if (v11 + 4 >= v10) {
              goto LABEL_25;
            }
            if (!*(void *)(v3 + 8 * v16)) {
              break;
            }
          }
        }
      }
LABEL_22:
      sub_1B2A0EF04();
    }
    while (1)
    {
      uint64_t v17 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        break;
      }
      if (v17 >= v10) {
        goto LABEL_25;
      }
      ++v16;
      if (*(void *)(v3 + 8 * v17)) {
        goto LABEL_22;
      }
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_release();
    *uint64_t v1 = v1;
  }
}

void *sub_1B2A090B8(uint64_t *a1)
{
  sub_1B29A3EB4(a1);
  sub_1B2A0F038();
  sub_1B2A0F29C();
  if (!v4)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v1;
    return result;
  }
  uint64_t result = (void *)sub_1B29A04F4();
  if (v8) {
    BOOL v9 = (unint64_t)result >= v7;
  }
  else {
    BOOL v9 = 1;
  }
  if (v9) {
    uint64_t result = sub_1B2A0F9D0(result, v6);
  }
  int64_t v10 = 0;
  v1[2] = *(void *)(v2 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v12 = *(void *)(v2 + 56);
  uint64_t v13 = -1;
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  unint64_t v14 = v13 & v12;
  int64_t v15 = (unint64_t)(v11 + 63) >> 6;
  if ((v13 & v12) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v16 | (v10 << 6); ; unint64_t i = v22 + (v10 << 6))
  {
    uint64_t v23 = (void *)(*(void *)(v2 + 48) + 32 * i);
    uint64_t v24 = v23[1];
    uint64_t v25 = v23[2];
    uint64_t v26 = v23[3];
    uint64_t v27 = (void *)(v1[6] + 32 * i);
    *uint64_t v27 = *v23;
    v27[1] = v24;
    v27[2] = v25;
    v27[3] = v26;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v15) {
      goto LABEL_28;
    }
    ++v10;
    if (!*(void *)(v3 + 8 * v18))
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v15) {
        goto LABEL_28;
      }
      if (!*(void *)(v3 + 8 * v10))
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v15) {
          goto LABEL_28;
        }
        if (!*(void *)(v3 + 8 * v10)) {
          break;
        }
      }
    }
LABEL_25:
    sub_1B299E5A0();
    unint64_t v14 = v21 & v20;
  }
  int64_t v19 = v18 + 3;
  if (v19 >= v15) {
    goto LABEL_28;
  }
  if (*(void *)(v3 + 8 * v19))
  {
    int64_t v10 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v15) {
      goto LABEL_28;
    }
    ++v19;
    if (*(void *)(v3 + 8 * v10)) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1B2A09234(uint64_t *a1)
{
  sub_1B29A3EB4(a1);
  sub_1B2A0F038();
  sub_1B2A0F29C();
  if (v3)
  {
    uint64_t v4 = (void *)sub_1B29A04F4();
    if (v7) {
      BOOL v8 = (unint64_t)v4 >= v6;
    }
    else {
      BOOL v8 = 1;
    }
    if (v8) {
      sub_1B2A0F9D0(v4, v5);
    }
    sub_1B2A0EC74();
    if (!v11) {
      goto LABEL_10;
    }
LABEL_9:
    sub_1B2A0EF44();
    while (1)
    {
      sub_1B2A0F980();
      if (v15) {
        goto LABEL_9;
      }
LABEL_10:
      uint64_t v12 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v12 >= v9) {
        goto LABEL_25;
      }
      if (!*(void *)(v2 + 8 * v12))
      {
        if (v10 + 2 >= v9) {
          goto LABEL_25;
        }
        if (!*(void *)(v2 + 8 * (v10 + 2)))
        {
          if (v10 + 3 >= v9) {
            goto LABEL_25;
          }
          if (!*(void *)(v2 + 8 * (v10 + 3)))
          {
            uint64_t v13 = v10 + 4;
            if (v10 + 4 >= v9) {
              goto LABEL_25;
            }
            if (!*(void *)(v2 + 8 * v13)) {
              break;
            }
          }
        }
      }
LABEL_22:
      sub_1B2A0EF04();
    }
    while (1)
    {
      uint64_t v14 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        break;
      }
      if (v14 >= v9) {
        goto LABEL_25;
      }
      ++v13;
      if (*(void *)(v2 + 8 * v14)) {
        goto LABEL_22;
      }
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_release();
    *uint64_t v1 = v1;
  }
}

void *sub_1B2A0932C()
{
  uint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1E9C3B228);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B2E83198();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 9 * i;
    uint64_t v21 = (const void *)(*(void *)(v2 + 48) + 144 * i);
    memcpy(v22, v21, sizeof(v22));
    memmove((void *)(*(void *)(v4 + 48) + 16 * v20), v21, 0x90uLL);
    uint64_t result = (void *)sub_1B29C5944((uint64_t)v22);
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1B2A0950C()
{
  sub_1B2A0ED70();
  uint64_t v3 = v0;
  uint64_t v4 = *v0;
  sub_1B2A0EDD8(v5, v6);
  uint64_t v7 = sub_1B2A0F62C();
  if (!*(void *)(v4 + 16))
  {
    swift_release();
LABEL_30:
    *uint64_t v3 = v7;
    sub_1B2A0ED54();
    return;
  }
  uint64_t v8 = 0;
  uint64_t v9 = v4 + 56;
  sub_1B2A0EF1C();
  if (!v1) {
    goto LABEL_4;
  }
LABEL_3:
  sub_1B2A0F518();
  while (1)
  {
    uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v10);
    sub_1B2E83988();
    sub_1B2E839C8();
    sub_1B2E839E8();
    sub_1B2A0F2A8();
    if (v14)
    {
      sub_1B29A41BC();
      while (1)
      {
        sub_1B2A0F308();
        if (v14)
        {
          if (v16) {
            break;
          }
        }
        if (v17 == v18) {
          uint64_t v17 = 0;
        }
        if (*(void *)(v7 + 56 + 8 * v17) != -1)
        {
          sub_1B29A4CA8();
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    sub_1B299F374();
LABEL_26:
    sub_1B2A0EFEC(v15);
    *(void *)(*(void *)(v7 + 48) + 8 * v19) = v13;
    ++*(void *)(v7 + 16);
    if (v1) {
      goto LABEL_3;
    }
LABEL_4:
    uint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_32;
    }
    if (v11 >= v2) {
      goto LABEL_28;
    }
    ++v8;
    if (!*(void *)(v9 + 8 * v11))
    {
      uint64_t v8 = v11 + 1;
      if (v11 + 1 >= v2) {
        goto LABEL_28;
      }
      if (!*(void *)(v9 + 8 * v8)) {
        break;
      }
    }
LABEL_15:
    sub_1B2A0F4C4();
  }
  uint64_t v12 = v11 + 2;
  if (v12 >= v2)
  {
LABEL_28:
    swift_release();
    uint64_t v3 = v0;
    goto LABEL_30;
  }
  if (*(void *)(v9 + 8 * v12))
  {
    uint64_t v8 = v12;
    goto LABEL_15;
  }
  while (1)
  {
    uint64_t v8 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v8 >= v2) {
      goto LABEL_28;
    }
    ++v12;
    if (*(void *)(v9 + 8 * v8)) {
      goto LABEL_15;
    }
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_1B2A096A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3498);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v31 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v32 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v33 = v2;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v2 + 48) + 40 * i;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    __int16 v21 = *(_WORD *)(v16 + 32);
    sub_1B2E83988();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B2E839E8();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) == 0)
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v24);
        if (v29 != -1)
        {
          unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v8 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = *(void *)(v4 + 48) + 40 * v25;
    *(void *)uint64_t v30 = v17;
    *(void *)(v30 + 8) = v18;
    *(void *)(v30 + 16) = v19;
    *(void *)(v30 + 24) = v20;
    *(_WORD *)(v30 + 32) = v21;
    ++*(void *)(v4 + 16);
    uint64_t v2 = v33;
    if (v7) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_36;
    }
    if (v13 >= v32) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v32) {
        goto LABEL_32;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v32) {
          goto LABEL_32;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v32)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v31 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1B2A099A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1EB7E4AF0);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1B2E83988();
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    uint64_t result = sub_1B2E839E8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    BOOL v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *BOOL v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1B2A09C50()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B210);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = v2 + 56;
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v27 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    swift_retain();
    int64_t v10 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
LABEL_21:
      unsigned int v16 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v12);
      sub_1B2E83988();
      sub_1B2E83998();
      if (v16 >> 6 <= 1)
      {
        sub_1B2E82498();
        swift_bridgeObjectRelease();
      }
      uint64_t v17 = sub_1B2E839E8();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = v17 & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_32;
      }
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v20);
      }
      while (v25 == -1);
      unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
LABEL_32:
      *(void *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(unsigned char *)(*(void *)(v4 + 48) + v21) = v16;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_38;
    }
    if (v13 < v27)
    {
      unint64_t v14 = *(void *)(v6 + 8 * v13);
      ++v10;
      if (v14) {
        goto LABEL_20;
      }
      int64_t v10 = v13 + 1;
      if (v13 + 1 < v27)
      {
        unint64_t v14 = *(void *)(v6 + 8 * v10);
        if (v14) {
          goto LABEL_20;
        }
        int64_t v10 = v13 + 2;
        if (v13 + 2 < v27)
        {
          unint64_t v14 = *(void *)(v6 + 8 * v10);
          if (v14) {
            goto LABEL_20;
          }
          int64_t v15 = v13 + 3;
          if (v15 < v27)
          {
            unint64_t v14 = *(void *)(v6 + 8 * v15);
            if (v14)
            {
              int64_t v10 = v15;
LABEL_20:
              unint64_t v8 = (v14 - 1) & v14;
              unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v10 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                break;
              }
              if (v10 >= v27) {
                goto LABEL_34;
              }
              unint64_t v14 = *(void *)(v6 + 8 * v10);
              ++v15;
              if (v14) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
            JUMPOUT(0x1B2A0A0D4);
          }
        }
      }
    }
LABEL_34:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B2A0A104()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B230);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1B2E83988();
    swift_bridgeObjectRetain_n();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B2E839E8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    BOOL v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *BOOL v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1B2A0A3BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1EB7D9820);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = v2 + 56;
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      sub_1B2E83988();
      sub_1B2E82498();
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_1B2E839E8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v6 + 8 * v14);
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = *(void *)(v6 + 8 * v11);
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v11);
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_37:
            __break(1u);
            JUMPOUT(0x1B2A0A770);
          }
        }
      }
    }
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B2A0A794()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E55F0);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v31 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v32 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v33 = v2;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v2 + 48) + 40 * i;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    char v21 = *(unsigned char *)(v16 + 32);
    sub_1B2E83988();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B2E839E8();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) == 0)
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v24);
        if (v29 != -1)
        {
          unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v8 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = *(void *)(v4 + 48) + 40 * v25;
    *(void *)uint64_t v30 = v17;
    *(void *)(v30 + 8) = v18;
    *(void *)(v30 + 16) = v19;
    *(void *)(v30 + 24) = v20;
    *(unsigned char *)(v30 + 32) = v21;
    ++*(void *)(v4 + 16);
    uint64_t v2 = v33;
    if (v7) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_36;
    }
    if (v13 >= v32) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v32) {
        goto LABEL_32;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v32) {
          goto LABEL_32;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v32)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v31 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1B2A0AA90()
{
  uint64_t v1 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B1D8);
  uint64_t v2 = sub_1B2E831A8();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_24:
    unint64_t result = swift_release();
    *char v26 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v27 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v28 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v29 = v2 + 56;
  uint64_t v30 = v1;
  unint64_t result = swift_retain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v33 = (v6 - 1) & v6;
  int64_t v34 = v8;
  unint64_t v9 = __clz(__rbit64(v6)) | (v8 << 6);
  uint64_t v10 = v30;
  while (1)
  {
    int64_t v15 = (uint64_t *)(*(void *)(v10 + 48) + 88 * v9);
    uint64_t v16 = v15[1];
    uint64_t v17 = v15[2];
    uint64_t v18 = v15[3];
    uint64_t v19 = v15[4];
    uint64_t v21 = v15[5];
    uint64_t v20 = v15[6];
    uint64_t v22 = v15[7];
    uint64_t v31 = v15[8];
    uint64_t v24 = v15[9];
    uint64_t v23 = v15[10];
    uint64_t v36 = *v15;
    uint64_t v32 = v36;
    uint64_t v37 = v16;
    uint64_t v38 = v17;
    uint64_t v39 = v18;
    uint64_t v40 = v19;
    uint64_t v41 = v21;
    uint64_t v42 = v20;
    uint64_t v43 = v22;
    uint64_t v44 = v31;
    uint64_t v45 = v24;
    uint64_t v46 = v23;
    sub_1B2E83988();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    KnosisInternalFact.hash(into:)((uint64_t)v35);
    sub_1B2E839E8();
    unint64_t result = sub_1B2E830F8();
    *(void *)(v29 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v25 = (void *)(*(void *)(v3 + 48) + 88 * result);
    *unint64_t v25 = v32;
    v25[1] = v16;
    v25[2] = v17;
    void v25[3] = v18;
    v25[4] = v19;
    uint64_t v25[5] = v21;
    v25[6] = v20;
    v25[7] = v22;
    v25[8] = v31;
    v25[9] = v24;
    v25[10] = v23;
    ++*(void *)(v3 + 16);
    unint64_t v6 = v33;
    int64_t v8 = v34;
    if (v33) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v11 = v8 + 1;
    uint64_t v10 = v30;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= v28) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    int64_t v13 = v8 + 1;
    if (!v12)
    {
      int64_t v13 = v8 + 2;
      if (v8 + 2 >= v28) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v8 + 3;
        if (v8 + 3 >= v28) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v33 = (v12 - 1) & v12;
    int64_t v34 = v13;
    unint64_t v9 = __clz(__rbit64(v12)) + (v13 << 6);
  }
  uint64_t v14 = v8 + 4;
  if (v8 + 4 >= v28)
  {
LABEL_23:
    swift_release();
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v8 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1B2A0AD84()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1EB7D9828);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + i);
    sub_1B2E83988();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B2E839E8();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*(void *)(v4 + 48) + v22) = v18;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1B2A0B048()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B220);
  uint64_t v3 = sub_1B2E831A8();
  if (!*(void *)(v2 + 16))
  {
    swift_release();
LABEL_24:
    *uint64_t v1 = v3;
    return;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  int64_t v9 = 0;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    int64_t v15 = (_OWORD *)(*(void *)(v2 + 48) + 48 * i);
    long long v17 = v15[1];
    long long v16 = v15[2];
    v18[0] = *v15;
    v18[1] = v17;
    v18[2] = v16;
    sub_1B2A0E7E8((uint64_t)v18);
    sub_1B2A05834((uint64_t)v18, v3);
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v8) {
      goto LABEL_22;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v9);
        if (!v13) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v8)
  {
LABEL_22:
    swift_release_n();
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_22;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1B2A0B20C()
{
  uint64_t v1 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B1F8);
  uint64_t result = sub_1B2E831A8();
  uint64_t v3 = result;
  if (!*(void *)(v1 + 16))
  {
LABEL_32:
    uint64_t result = swift_release();
    *uint64_t v0 = v3;
    return result;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v28 = v1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(v1 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  int64_t v29 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 56;
  if ((v7 & v5) == 0) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    uint64_t v15 = *(void *)(v1 + 48) + 24 * i;
    char v16 = *(unsigned char *)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    uint64_t v18 = *(void *)(v15 + 16);
    sub_1B2E83988();
    sub_1B2E839B8();
    sub_1B2E839C8();
    sub_1B2E839C8();
    uint64_t result = sub_1B2E839E8();
    uint64_t v19 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v9 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t v27 = *(void *)(v3 + 48) + 24 * v22;
    *(unsigned char *)uint64_t v27 = v16;
    *(void *)(v27 + 8) = v17;
    *(void *)(v27 + 16) = v18;
    ++*(void *)(v3 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_34;
    }
    if (v12 >= v29) {
      goto LABEL_32;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v13 = *(void *)(v28 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v13 = *(void *)(v28 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v29) {
    goto LABEL_32;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v29) {
      goto LABEL_32;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1B2A0B4E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B1B8);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + i);
    sub_1B2E83988();
    PersonEntityTagType.rawValue.getter();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B2E839E8();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*(void *)(v4 + 48) + v22) = v18;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1B2A0B784()
{
  sub_1B299B3E0();
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B2A0EDD8(v3, v4);
  uint64_t v5 = sub_1B2A0F62C();
  if (!*(void *)(v2 + 16))
  {
    swift_release();
LABEL_32:
    *uint64_t v1 = v5;
    sub_1B2A0EF9C();
    return;
  }
  uint64_t v33 = v2 + 56;
  sub_1B2A0F8C4();
  uint64_t v8 = v7 & v6;
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v10 = v5 + 56;
  swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_4;
  }
LABEL_3:
  sub_1B2A0FB40();
  for (int64_t i = v12 | (v11 << 6); ; int64_t i = v16 + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 32 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = v17[3];
    sub_1B2E83988();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    swift_bridgeObjectRelease();
    sub_1B2E839E8();
    sub_1B2A0FB60();
    if (((v24 << v23) & ~*(void *)(v10 + 8 * v22)) == 0)
    {
      sub_1B29A41BC();
      while (1)
      {
        sub_1B2A0F308();
        if (v28)
        {
          if (v25) {
            break;
          }
        }
        if (v26 == v27) {
          uint64_t v26 = 0;
        }
        if (*(void *)(v10 + 8 * v26) != -1)
        {
          sub_1B29A4CA8();
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    sub_1B299F374();
LABEL_28:
    sub_1B2A0F924();
    *(void *)(v10 + v29) |= v30;
    uint64_t v32 = (void *)(*(void *)(v5 + 48) + 32 * v31);
    *uint64_t v32 = v18;
    v32[1] = v19;
    v32[2] = v20;
    v32[3] = v21;
    ++*(void *)(v5 + 16);
    if (v8) {
      goto LABEL_3;
    }
LABEL_4:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_34;
    }
    if (v14 >= v34) {
      goto LABEL_30;
    }
    ++v11;
    if (!*(void *)(v33 + 8 * v14))
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v34) {
        goto LABEL_30;
      }
      if (!*(void *)(v33 + 8 * v11))
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v34) {
          goto LABEL_30;
        }
        if (!*(void *)(v33 + 8 * v11)) {
          break;
        }
      }
    }
LABEL_17:
    sub_1B2A0FBBC();
  }
  int64_t v15 = v14 + 3;
  if (v15 >= v34)
  {
LABEL_30:
    swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_32;
  }
  if (*(void *)(v33 + 8 * v15))
  {
    int64_t v11 = v15;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v11 >= v34) {
      goto LABEL_30;
    }
    ++v15;
    if (*(void *)(v33 + 8 * v11)) {
      goto LABEL_17;
    }
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1B2A0B9F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B1D0);
  uint64_t result = sub_1B2E831A8();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    sub_1B2E83988();
    sub_1B2E83998();
    uint64_t result = sub_1B2E839E8();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(void *)(*(void *)(v4 + 48) + 8 * v21) = v17;
    ++*(void *)(v4 + 16);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1B2A0BC68()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B29A3EB4(&qword_1E9C3B228);
  uint64_t v3 = sub_1B2E831A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = (const void *)(*(void *)(v2 + 48) + 144 * i);
    memcpy(__dst, v17, 0x90uLL);
    memcpy(v27, v17, sizeof(v27));
    sub_1B2E83988();
    sub_1B29C5944((uint64_t)__dst);
    KnosisFact.hash(into:)();
    uint64_t result = sub_1B2E839E8();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v4 + 48) + 144 * v21), __dst, 0x90uLL);
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v26) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v26) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v26) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v26)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1B2A0BF3C()
{
  sub_1B2A0F870();
  sub_1B2A0EDB0(v4, v5);
  sub_1B2A0F62C();
  sub_1B2A0F29C();
  if (!v6)
  {
    swift_release();
LABEL_35:
    *(void *)int64_t v0 = v1;
    sub_1B2A0F7F4();
    return;
  }
  int64_t v28 = v0;
  sub_1B2A0F9E8();
  uint64_t v9 = 1 << v8;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v7;
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v1 + 56;
  if ((v10 & v7) == 0) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v14 | (v0 << 6); ; unint64_t i = v20 + (v0 << 6))
  {
    uint64_t v21 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    unint64_t v22 = sub_1B2E83978() & ~(-1 << *(unsigned char *)(v1 + 32));
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) == 0)
    {
      sub_1B29A41BC();
      while (1)
      {
        sub_1B2A0F308();
        if (v27)
        {
          if (v24) {
            break;
          }
        }
        if (v25 == v26) {
          uint64_t v25 = 0;
        }
        if (*(void *)(v13 + 8 * v25) != -1)
        {
          sub_1B29A4CA8();
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    sub_1B299F374();
LABEL_31:
    *(void *)(v13 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(*(void *)(v1 + 48) + 8 * v23) = v21;
    ++*(void *)(v1 + 16);
    if (v11) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v16 = v0 + 1;
    if (__OFADD__(v0, 1)) {
      goto LABEL_37;
    }
    if (v16 >= v12) {
      goto LABEL_33;
    }
    ++v0;
    if (!*(void *)(v3 + 8 * v16))
    {
      int64_t v0 = v16 + 1;
      if (v16 + 1 >= v12) {
        goto LABEL_33;
      }
      if (!*(void *)(v3 + 8 * v0))
      {
        int64_t v0 = v16 + 2;
        if (v16 + 2 >= v12) {
          goto LABEL_33;
        }
        if (!*(void *)(v3 + 8 * v0)) {
          break;
        }
      }
    }
LABEL_20:
    sub_1B299E5A0();
    unint64_t v11 = v19 & v18;
  }
  int64_t v17 = v16 + 3;
  if (v17 >= v12)
  {
LABEL_33:
    swift_release();
    int64_t v0 = v28;
    goto LABEL_35;
  }
  if (*(void *)(v3 + 8 * v17))
  {
    int64_t v0 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v0 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v0 >= v12) {
      goto LABEL_33;
    }
    ++v17;
    if (*(void *)(v3 + 8 * v0)) {
      goto LABEL_20;
    }
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_1B2A0C11C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1B2E839E8();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1B2E837A8() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1B2E837A8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B2A084D0();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1B2A0CBBC(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1B2A0C2BC()
{
  unint64_t result = qword_1E9C3AFC0;
  if (!qword_1E9C3AFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AFC0);
  }
  return result;
}

unint64_t sub_1B2A0C308()
{
  unint64_t result = qword_1E9C3AFF8;
  if (!qword_1E9C3AFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AFF8);
  }
  return result;
}

unint64_t sub_1B2A0C354()
{
  unint64_t result = qword_1E9C3B000;
  if (!qword_1E9C3B000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B000);
  }
  return result;
}

unint64_t sub_1B2A0C3A0()
{
  unint64_t result = qword_1E9C3B008;
  if (!qword_1E9C3B008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B008);
  }
  return result;
}

unint64_t sub_1B2A0C3EC()
{
  unint64_t result = qword_1E9C3B010;
  if (!qword_1E9C3B010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B010);
  }
  return result;
}

unint64_t sub_1B2A0C438()
{
  unint64_t result = qword_1E9C3B018;
  if (!qword_1E9C3B018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B018);
  }
  return result;
}

unint64_t sub_1B2A0C484()
{
  unint64_t result = qword_1E9C3B020;
  if (!qword_1E9C3B020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B020);
  }
  return result;
}

void sub_1B2A0C4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B2A0F00C();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = *v10;
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  uint64_t v16 = sub_1B2E839E8();
  uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
  unint64_t v18 = v16 & ~v17;
  sub_1B2A0FB88();
  if ((v19 & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v20 = *(void *)(v15 + 48);
  uint64_t v21 = (void *)(v20 + 16 * v18);
  BOOL v22 = *v21 == v14 && v21[1] == v12;
  if (!v22 && (sub_1B2E837A8() & 1) == 0)
  {
    uint64_t v24 = ~v17;
    do
    {
      unint64_t v18 = (v18 + 1) & v24;
      sub_1B2A0FB88();
      if ((v25 & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v26 = (void *)(v20 + 16 * v18);
      BOOL v27 = *v26 == v14 && v26[1] == v12;
    }
    while (!v27 && (sub_1B2E837A8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1B2A0FB9C();
  if (!v23) {
    sub_1B2A08184();
  }
  sub_1B2A0CBBC(v18);
  sub_1B2A0F8AC(a10);
LABEL_19:
  sub_1B2A0EFD4();
}

void sub_1B2A0C624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B2A0F870();
  char v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = *v10;
  swift_bridgeObjectRetain();
  sub_1B29F9518();
  sub_1B2A0F798();
  unint64_t v18 = v17 & ~v16;
  if ((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
  {
    uint64_t v19 = ~v16;
    while (1)
    {
      unint64_t v20 = 0xE500000000000000;
      uint64_t v21 = "familyAndFriends";
      uint64_t v22 = 0x7465736E75;
      switch(*(unsigned char *)(*(void *)(v15 + 48) + v18))
      {
        case 1:
          unint64_t v20 = 0xE700000000000000;
          uint64_t v22 = sub_1B2A0F224();
          break;
        case 2:
          uint64_t v22 = sub_1B2A0F7E4();
          break;
        case 3:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v22 = sub_1B2A0F7D4();
          break;
        case 4:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v22 = sub_1B2A0F788();
          break;
        case 5:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v22 = sub_1B2A0F738();
          break;
        case 6:
          uint64_t v22 = sub_1B2A0F810();
          break;
        case 7:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v23 = 1752457574;
          goto LABEL_14;
        case 8:
          unint64_t v20 = 0xE700000000000000;
          uint64_t v22 = sub_1B2A0F1AC();
          break;
        case 9:
          unint64_t v20 = 0xE700000000000000;
          uint64_t v24 = sub_1B2A0F70C();
          goto LABEL_25;
        case 0xA:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v23 = 1953720691;
LABEL_14:
          uint64_t v22 = v23 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
          break;
        case 0xB:
          uint64_t v22 = sub_1B2A0F3E4();
          goto LABEL_19;
        case 0xC:
          uint64_t v22 = sub_1B2A0F17C();
          goto LABEL_18;
        case 0xD:
          uint64_t v22 = sub_1B2A0F168();
LABEL_18:
          unint64_t v20 = 7497064;
LABEL_19:
          unint64_t v20 = v20 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0xE:
          unint64_t v20 = 0xE700000000000000;
          uint64_t v25 = sub_1B2A0F7B4();
          goto LABEL_28;
        case 0xF:
          uint64_t v22 = sub_1B2A0F6BC();
          break;
        case 0x10:
          unint64_t v20 = 0xE300000000000000;
          uint64_t v22 = 7237491;
          break;
        case 0x11:
          unint64_t v20 = 0xE800000000000000;
          uint64_t v26 = sub_1B2A0F694();
          goto LABEL_32;
        case 0x12:
          unint64_t v20 = 0xE700000000000000;
          uint64_t v24 = sub_1B2A0F748();
LABEL_25:
          uint64_t v22 = v24 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
          break;
        case 0x13:
          unint64_t v20 = 0xE400000000000000;
          uint64_t v22 = 1701210487;
          break;
        case 0x14:
          unint64_t v20 = 0xE700000000000000;
          uint64_t v25 = sub_1B2A0F674();
LABEL_28:
          uint64_t v22 = v25 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
          break;
        case 0x15:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v22 = sub_1B2A0F664();
          break;
        case 0x16:
          unint64_t v20 = 0x80000001B2E8EA20;
          uint64_t v22 = sub_1B29B1E20();
          break;
        case 0x17:
          unint64_t v20 = 0xE800000000000000;
          uint64_t v26 = sub_1B2A0F5F0();
LABEL_32:
          uint64_t v22 = v26 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
          break;
        case 0x18:
          unint64_t v20 = 0xE800000000000000;
          uint64_t v22 = sub_1B2A0F0D8();
          break;
        case 0x19:
          uint64_t v22 = sub_1B2A0F374();
          break;
        case 0x1A:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v22 = sub_1B2A0F600();
          break;
        case 0x1B:
          uint64_t v27 = 1699772781;
          goto LABEL_39;
        case 0x1C:
          uint64_t v22 = sub_1B2A0F7C4();
          break;
        case 0x1D:
          uint64_t v27 = 1631811949;
LABEL_39:
          uint64_t v22 = v27 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
          break;
        default:
          break;
      }
      unint64_t v28 = 0xE500000000000000;
      uint64_t v29 = 0x7465736E75;
      switch(v12)
      {
        case 1:
          unint64_t v28 = 0xE700000000000000;
          sub_1B299ADA0();
          break;
        case 2:
          sub_1B2A0F5C8();
          break;
        case 3:
          unint64_t v28 = 0xE600000000000000;
          sub_1B2A0F598();
          break;
        case 4:
          unint64_t v28 = 0xE600000000000000;
          sub_1B2A0F588();
          break;
        case 5:
          unint64_t v28 = 0xE600000000000000;
          sub_1B2A0F568();
          break;
        case 6:
          sub_1B2A0F758();
          break;
        case 7:
          unint64_t v28 = 0xE600000000000000;
          uint64_t v30 = 1752457574;
          goto LABEL_51;
        case 8:
          unint64_t v28 = 0xE700000000000000;
          sub_1B2A0F084();
          break;
        case 9:
          unint64_t v28 = 0xE700000000000000;
          sub_1B2A0F558();
          goto LABEL_62;
        case 10:
          unint64_t v28 = 0xE600000000000000;
          uint64_t v30 = 1953720691;
LABEL_51:
          uint64_t v29 = v30 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
          break;
        case 11:
          sub_1B2A0F314();
          goto LABEL_56;
        case 12:
          sub_1B299B124();
          goto LABEL_55;
        case 13:
          sub_1B2A0F070();
LABEL_55:
          unint64_t v28 = 7497064;
LABEL_56:
          unint64_t v28 = v28 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 14:
          unint64_t v28 = 0xE700000000000000;
          sub_1B2A0F5B8();
          goto LABEL_65;
        case 15:
          sub_1B2A0F508();
          break;
        case 16:
          unint64_t v28 = 0xE300000000000000;
          uint64_t v29 = 7237491;
          break;
        case 17:
          unint64_t v28 = 0xE800000000000000;
          sub_1B2A0F4B4();
          goto LABEL_69;
        case 18:
          unint64_t v28 = 0xE700000000000000;
          sub_1B2A0F578();
LABEL_62:
          uint64_t v29 = v31 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
          break;
        case 19:
          unint64_t v28 = 0xE400000000000000;
          uint64_t v29 = 1701210487;
          break;
        case 20:
          unint64_t v28 = 0xE700000000000000;
          sub_1B2A0F48C();
LABEL_65:
          uint64_t v29 = v32 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
          break;
        case 21:
          unint64_t v28 = 0xE600000000000000;
          sub_1B2A0F47C();
          break;
        case 22:
          unint64_t v28 = (unint64_t)(v21 - 32) | 0x8000000000000000;
          sub_1B29B1DE4();
          break;
        case 23:
          unint64_t v28 = 0xE800000000000000;
          sub_1B2A0F530();
LABEL_69:
          uint64_t v29 = v33 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
          break;
        case 24:
          unint64_t v28 = 0xE800000000000000;
          sub_1B2A0F024();
          break;
        case 25:
          sub_1B2A0F280();
          break;
        case 26:
          unint64_t v28 = 0xE600000000000000;
          sub_1B2A0F46C();
          break;
        case 27:
          uint64_t v34 = 1699772781;
          goto LABEL_76;
        case 28:
          sub_1B2A0F5A8();
          break;
        case 29:
          uint64_t v34 = 1631811949;
LABEL_76:
          uint64_t v29 = v34 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
          break;
        default:
          break;
      }
      if (v22 == v29 && v20 == v28)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_86;
      }
      char v36 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v36) {
        break;
      }
      unint64_t v18 = (v18 + 1) & v19;
      if (((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        goto LABEL_83;
      }
    }
    swift_bridgeObjectRelease();
LABEL_86:
    swift_isUniquelyReferenced_nonNull_native();
    sub_1B2A0FB9C();
    if ((v38 & 1) == 0)
    {
      sub_1B2A08FB4(&qword_1E9C3B1B8);
      uint64_t v37 = a10;
    }
    *uint64_t v14 = *(unsigned char *)(*(void *)(v37 + 48) + v18);
    sub_1B2A0CD78(v18);
    sub_1B2A0F8AC(a10);
  }
  else
  {
LABEL_83:
    swift_bridgeObjectRelease();
    *uint64_t v14 = 30;
  }
  sub_1B2A0F7F4();
}

unint64_t sub_1B2A0CBBC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1B2E830D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1B2E83988();
        swift_bridgeObjectRetain();
        sub_1B2E82498();
        uint64_t v10 = sub_1B2E839E8();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= (uint64_t)v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            uint64_t v15 = (_OWORD *)(v14 + 16 * v2);
            uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
            BOOL v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              *uint64_t v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= (uint64_t)v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    unint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1B2A0CD78(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1B2E830D8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1B2E83988();
        sub_1B2E82498();
        swift_bridgeObjectRelease();
        uint64_t v10 = sub_1B2E839E8() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_15:
            uint64_t v13 = *(void *)(v3 + 48);
            uint64_t v14 = (unsigned char *)(v13 + v2);
            uint64_t v15 = (unsigned char *)(v13 + v6);
            BOOL v16 = v2 != v6 || v14 >= v15 + 1;
            int64_t v2 = v6;
            if (v16)
            {
              *uint64_t v14 = *v15;
              int64_t v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    unint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
    JUMPOUT(0x1B2A0D1BCLL);
  }
  *(void *)(v3 + 16) = v19;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_1B2A0D234(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1B2E82378();
  }
  return sub_1B2999874();
}

unint64_t sub_1B2A0D290()
{
  unint64_t result = qword_1E9C3B050;
  if (!qword_1E9C3B050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B050);
  }
  return result;
}

uint64_t sub_1B2A0D2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 <= 1u)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B2A0D334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 <= 1u)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1B2A0D38C()
{
  unint64_t result = qword_1E9C3B060;
  if (!qword_1E9C3B060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B060);
  }
  return result;
}

unint64_t sub_1B2A0D3D8()
{
  unint64_t result = qword_1E9C3B068;
  if (!qword_1E9C3B068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B068);
  }
  return result;
}

unint64_t sub_1B2A0D424()
{
  unint64_t result = qword_1E9C3B078;
  if (!qword_1E9C3B078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B078);
  }
  return result;
}

uint64_t sub_1B2A0D470(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_1B2A0E7A0(&qword_1E9C37E50, a2, (void (*)(uint64_t))type metadata accessor for AutonamingViewFeedback);
  uint64_t result = sub_1B2A0E7A0(&qword_1E9C37E48, v3, (void (*)(uint64_t))type metadata accessor for AutonamingViewFeedback);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t method lookup function for AutonamingViewIdentifierType(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AutonamingViewIdentifierType);
}

uint64_t dispatch thunk of AutonamingViewIdentifierType.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AutonamingViewIdentifierType.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for AutonamingView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AutonamingView);
}

uint64_t dispatch thunk of AutonamingView.__allocating_init(subgraph:isForLiveServing:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of AutonamingView.personFor(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AutonamingView.objCPersonFor(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AutonamingView.didUpdateUserFeedback()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AutonamingView.confirm(identifier:person:confirmationType:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AutonamingView.reject(identifier:person:confirmationType:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t method lookup function for AutonamingViewFeedback(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AutonamingViewFeedback);
}

uint64_t dispatch thunk of AutonamingViewFeedback.__allocating_init(feedback:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AutonamingViewFeedback.processImmediately.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of AutonamingViewFeedback.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of AutonamingViewFeedback.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t destroy for EntityClass()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AutonamingViewFeedback.MatchingInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AutonamingViewFeedback.MatchingInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AutonamingViewFeedback.MatchingInfo(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for AutonamingViewFeedback.MatchingInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AutonamingViewFeedback.MatchingInfo(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutonamingViewFeedback.MatchingInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for AutonamingViewFeedback.MatchingInfo()
{
}

uint64_t destroy for AutonamingViewFeedback.FeedbackType(uint64_t a1)
{
  return sub_1B2A0D334(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t initializeWithCopy for AutonamingViewFeedback.FeedbackType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_1B2A0D2DC(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for AutonamingViewFeedback.FeedbackType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_1B2A0D2DC(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  unsigned __int8 v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1B2A0D334(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 initializeWithTake for AutonamingViewFeedback.FeedbackType(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AutonamingViewFeedback.FeedbackType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1B2A0D334(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutonamingViewFeedback.FeedbackType(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 49))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutonamingViewFeedback.FeedbackType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B2A0DC0C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 1u) {
    return *(unsigned __int8 *)(a1 + 48);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1B2A0DC24(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

void type metadata accessor for AutonamingViewFeedback.FeedbackType()
{
}

ValueMetadata *type metadata accessor for AutonamingView.Rejection()
{
  return &type metadata for AutonamingView.Rejection;
}

ValueMetadata *type metadata accessor for AutonamingViewFeedback.CodingKeys()
{
  return &type metadata for AutonamingViewFeedback.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AutonamingViewFeedback.FeedbackType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2A0DD54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutonamingViewFeedback.FeedbackType.CodingKeys()
{
  return &type metadata for AutonamingViewFeedback.FeedbackType.CodingKeys;
}

ValueMetadata *type metadata accessor for AutonamingViewFeedback.FeedbackType.ConfirmCodingKeys()
{
  return &type metadata for AutonamingViewFeedback.FeedbackType.ConfirmCodingKeys;
}

ValueMetadata *type metadata accessor for AutonamingViewFeedback.FeedbackType.RejectCodingKeys()
{
  return &type metadata for AutonamingViewFeedback.FeedbackType.RejectCodingKeys;
}

ValueMetadata *type metadata accessor for AutonamingViewFeedback.FeedbackType.ResetCodingKeys()
{
  return &type metadata for AutonamingViewFeedback.FeedbackType.ResetCodingKeys;
}

ValueMetadata *type metadata accessor for AutonamingViewFeedback.FeedbackType.DidUpdateUserFeedbackCodingKeys()
{
  return &type metadata for AutonamingViewFeedback.FeedbackType.DidUpdateUserFeedbackCodingKeys;
}

unsigned char *_s20IntelligencePlatform22AutonamingViewFeedbackC12FeedbackTypeO17ConfirmCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2A0DE9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutonamingViewFeedback.MatchingInfo.CodingKeys()
{
  return &type metadata for AutonamingViewFeedback.MatchingInfo.CodingKeys;
}

void type metadata accessor for AutonamingViewIdentifierType.InnerData()
{
}

ValueMetadata *type metadata accessor for AutonamingViewIdentifierType.CodingKeys()
{
  return &type metadata for AutonamingViewIdentifierType.CodingKeys;
}

unint64_t sub_1B2A0DEF4()
{
  unint64_t result = qword_1E9C3B0E0;
  if (!qword_1E9C3B0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B0E0);
  }
  return result;
}

unint64_t sub_1B2A0DF44()
{
  unint64_t result = qword_1E9C3B0E8;
  if (!qword_1E9C3B0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B0E8);
  }
  return result;
}

unint64_t sub_1B2A0DF94()
{
  unint64_t result = qword_1E9C3B0F0;
  if (!qword_1E9C3B0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B0F0);
  }
  return result;
}

unint64_t sub_1B2A0DFE4()
{
  unint64_t result = qword_1E9C3B0F8;
  if (!qword_1E9C3B0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B0F8);
  }
  return result;
}

unint64_t sub_1B2A0E034()
{
  unint64_t result = qword_1E9C3B100;
  if (!qword_1E9C3B100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B100);
  }
  return result;
}

unint64_t sub_1B2A0E084()
{
  unint64_t result = qword_1E9C3B108;
  if (!qword_1E9C3B108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B108);
  }
  return result;
}

unint64_t sub_1B2A0E0D4()
{
  unint64_t result = qword_1E9C3B110;
  if (!qword_1E9C3B110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B110);
  }
  return result;
}

unint64_t sub_1B2A0E124()
{
  unint64_t result = qword_1E9C3B118;
  if (!qword_1E9C3B118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B118);
  }
  return result;
}

unint64_t sub_1B2A0E174()
{
  unint64_t result = qword_1E9C3B120;
  if (!qword_1E9C3B120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B120);
  }
  return result;
}

unint64_t sub_1B2A0E1C4()
{
  unint64_t result = qword_1E9C3B128;
  if (!qword_1E9C3B128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B128);
  }
  return result;
}

unint64_t sub_1B2A0E214()
{
  unint64_t result = qword_1E9C3B130;
  if (!qword_1E9C3B130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B130);
  }
  return result;
}

unint64_t sub_1B2A0E264()
{
  unint64_t result = qword_1E9C3B138;
  if (!qword_1E9C3B138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B138);
  }
  return result;
}

unint64_t sub_1B2A0E2B4()
{
  unint64_t result = qword_1E9C3B140;
  if (!qword_1E9C3B140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B140);
  }
  return result;
}

unint64_t sub_1B2A0E304()
{
  unint64_t result = qword_1E9C3B148;
  if (!qword_1E9C3B148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B148);
  }
  return result;
}

unint64_t sub_1B2A0E354()
{
  unint64_t result = qword_1E9C3B150;
  if (!qword_1E9C3B150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B150);
  }
  return result;
}

unint64_t sub_1B2A0E3A4()
{
  unint64_t result = qword_1E9C3B158;
  if (!qword_1E9C3B158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B158);
  }
  return result;
}

unint64_t sub_1B2A0E3F4()
{
  unint64_t result = qword_1E9C3B160;
  if (!qword_1E9C3B160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B160);
  }
  return result;
}

unint64_t sub_1B2A0E444()
{
  unint64_t result = qword_1E9C3B168;
  if (!qword_1E9C3B168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B168);
  }
  return result;
}

unint64_t sub_1B2A0E494()
{
  unint64_t result = qword_1E9C3B170;
  if (!qword_1E9C3B170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B170);
  }
  return result;
}

unint64_t sub_1B2A0E4E4()
{
  unint64_t result = qword_1E9C3B178;
  if (!qword_1E9C3B178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B178);
  }
  return result;
}

unint64_t sub_1B2A0E534()
{
  unint64_t result = qword_1E9C3B180;
  if (!qword_1E9C3B180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B180);
  }
  return result;
}

unint64_t sub_1B2A0E584()
{
  unint64_t result = qword_1E9C3B188;
  if (!qword_1E9C3B188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B188);
  }
  return result;
}

unint64_t sub_1B2A0E5D4()
{
  unint64_t result = qword_1E9C3B190;
  if (!qword_1E9C3B190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B190);
  }
  return result;
}

unint64_t sub_1B2A0E624()
{
  unint64_t result = qword_1E9C3B198;
  if (!qword_1E9C3B198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B198);
  }
  return result;
}

unint64_t sub_1B2A0E670()
{
  unint64_t result = qword_1E9C3B1A8;
  if (!qword_1E9C3B1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B1A8);
  }
  return result;
}

uint64_t sub_1B2A0E6BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2A0E730(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2A0E7A0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2A0E7E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2A0E820(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2A0E858()
{
  sub_1B2E80668();
  sub_1B2999864();
  int v2 = *(void (**)(void))(v1 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = v3 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + ((*(void *)(v1 + 64) + v3 + ((v3 + 16) & ~v3)) & ~v3) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1B2A0F828();
  v2();
  sub_1B2A0F828();
  v2();

  return MEMORY[0x1F4186498](v0, v6 + 8, v4);
}

uint64_t sub_1B2A0E930()
{
  uint64_t v1 = *(void *)(sub_1B2E80668() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  unint64_t v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void **)(v0 + v6);
  uint64_t v8 = *(void *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1B2A002F4(v0 + v3, v0 + v5, v7, v8);
}

uint64_t sub_1B2A0E9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3B238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2A0EA40(uint64_t a1, uint64_t *a2)
{
  sub_1B29A3EB4(a2);
  sub_1B2999864();
  sub_1B299B798();
  v3();
  return a1;
}

unsigned char *_s20IntelligencePlatform22AutonamingViewFeedbackC10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2A0EB2CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutonamingViewIdentifierType.InnerData.CodingKeys()
{
  return &type metadata for AutonamingViewIdentifierType.InnerData.CodingKeys;
}

unint64_t sub_1B2A0EB68()
{
  unint64_t result = qword_1E9C3B248;
  if (!qword_1E9C3B248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B248);
  }
  return result;
}

unint64_t sub_1B2A0EBB8()
{
  unint64_t result = qword_1E9C3B250;
  if (!qword_1E9C3B250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B250);
  }
  return result;
}

unint64_t sub_1B2A0EC08()
{
  unint64_t result = qword_1E9C3B258;
  if (!qword_1E9C3B258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B258);
  }
  return result;
}

void sub_1B2A0EC74()
{
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
}

uint64_t sub_1B2A0ECB0()
{
  uint64_t v3 = v0;
  if (*(_DWORD *)(v1 - 104)) {
    uint64_t v3 = 0;
  }
  *(void *)(v1 - 104) = v3;
  return sub_1B2E80628();
}

uint64_t sub_1B2A0ECDC(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return sub_1B2E82FB8();
}

uint64_t sub_1B2A0ED08()
{
  return sub_1B2E83988();
}

uint64_t sub_1B2A0ED20()
{
  return v0;
}

uint64_t sub_1B2A0ED3C()
{
  return sub_1B2E82498();
}

uint64_t sub_1B2A0ED8C()
{
  return swift_beginAccess();
}

uint64_t sub_1B2A0EDB0(uint64_t a1, uint64_t *a2)
{
  return sub_1B29A3EB4(a2);
}

uint64_t sub_1B2A0EDD8(uint64_t a1, uint64_t *a2)
{
  return sub_1B29A3EB4(a2);
}

void sub_1B2A0EDF4(void *a1)
{
  sub_1B29FCE9C(a1, 0, 1);
}

uint64_t sub_1B2A0EE24()
{
  return sub_1B2E834E8();
}

id sub_1B2A0EE44(float a1)
{
  *uint64_t v2 = a1;
  return v1;
}

uint64_t sub_1B2A0EE64()
{
  return sub_1B2E802B8();
}

uint64_t sub_1B2A0EEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v10 = a10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2A0EF84()
{
  return sub_1B29C34DC(v1, v0);
}

uint64_t sub_1B2A0EFB8()
{
  return swift_slowAlloc();
}

void sub_1B2A0EFEC(unint64_t a1@<X8>)
{
  *(void *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

uint64_t sub_1B2A0F038()
{
  return sub_1B2E83198();
}

uint64_t sub_1B2A0F054()
{
  return type metadata accessor for AutonamingViewFeedback();
}

uint64_t sub_1B2A0F098()
{
  return 0x6850786966657270;
}

uint64_t sub_1B2A0F0B8()
{
  return 0x69666572506C6C61;
}

uint64_t sub_1B2A0F0D8()
{
  return 0x726F62686769656ELL;
}

void sub_1B2A0F0EC()
{
  *(void *)(v0 + 56) |= v1;
}

uint64_t sub_1B2A0F100()
{
  return swift_slowAlloc();
}

BOOL sub_1B2A0F11C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1B2A0F138@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v2 + v1 * a1);
}

__n128 sub_1B2A0F148(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  a1[1].n128_u64[0] = v11;
  a1[1].n128_u64[1] = v10;
  __n128 result = a9;
  a1[2] = a9;
  a1[3].n128_u64[0] = v9;
  a1[3].n128_u64[1] = v12;
  a1[4].n128_u8[0] = 1;
  return result;
}

uint64_t sub_1B2A0F168()
{
  return 0x746166646E617267;
}

uint64_t sub_1B2A0F17C()
{
  return 0x746F6D646E617267;
}

uint64_t sub_1B2A0F190()
{
  return swift_arrayDestroy();
}

uint64_t sub_1B2A0F1AC()
{
  return 0x676E696C626973;
}

uint64_t sub_1B2A0F1C0()
{
  return swift_allocObject();
}

uint64_t sub_1B2A0F1D8()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2A0F1F4()
{
  *uint64_t v1 = 0x8000000000000000;
  return v0;
}

uint64_t sub_1B2A0F214()
{
  *(void *)(v1 - 96) = v0;
  return 0;
}

uint64_t sub_1B2A0F224()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1B2A0F238()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2A0F254()
{
  return sub_1B2E837A8();
}

uint64_t _s20IntelligencePlatform14AutonamingViewC7confirm10identifier6ofType6person012confirmationH0ySS_AA0cd10IdentifierH0CAA17CustomGraphPersonVSo024GDAutonamingConfirmationH0VtF_0()
{
  return sub_1B29FDCE8();
}

uint64_t _s20IntelligencePlatform14AutonamingViewC6reject10identifier6ofType6person012confirmationH0ySS_AA0cd10IdentifierH0CAA17CustomGraphPersonVSo024GDAutonamingConfirmationH0VtF_0()
{
  return sub_1B29FE128();
}

uint64_t sub_1B2A0F2E0()
{
  *uint64_t v1 = 0x8000000000000000;
  return sub_1B29E52BC(v0);
}

uint64_t sub_1B2A0F330()
{
  return sub_1B2E83988();
}

uint64_t sub_1B2A0F358()
{
  return 0x6E656B6F546C6C61;
}

uint64_t sub_1B2A0F374()
{
  return 0x74616D6573756F68;
}

void sub_1B2A0F3AC()
{
  uint64_t v1 = *(void *)(v0 - 160);
  *(void *)(v0 - 120) = *(void *)(v0 - 168);
  *(void *)(v0 - 112) = v1;
  uint64_t v2 = *(void *)(v0 - 152);
  *(void *)(v0 - 104) = *(void *)(v0 - 144);
  *(void *)(v0 - 96) = v2;
}

__n128 sub_1B2A0F3C8(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  a1[1].n128_u64[0] = v11;
  a1[1].n128_u64[1] = v10;
  __n128 result = a9;
  a1[2] = a9;
  a1[3].n128_u64[0] = v9;
  a1[3].n128_u64[1] = v12;
  a1[4].n128_u8[0] = 0;
  return result;
}

uint64_t sub_1B2A0F3E4()
{
  return 0x726150646E617267;
}

uint64_t sub_1B2A0F400()
{
  return v0;
}

uint64_t sub_1B2A0F454()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2A0F49C()
{
  return v0;
}

id sub_1B2A0F4DC(uint64_t a1, uint64_t a2)
{
  sub_1B29A4B98(a1, a2);
  return v2;
}

uint64_t sub_1B2A0F5F0()
{
  return 0x6B726F776F63;
}

uint64_t sub_1B2A0F600()
{
  return 0x696E6D756C61;
}

uint64_t sub_1B2A0F610()
{
  return sub_1B2E831A8();
}

uint64_t sub_1B2A0F62C()
{
  return sub_1B2E831A8();
}

uint64_t sub_1B2A0F648()
{
  return sub_1B2E83988();
}

uint64_t sub_1B2A0F664()
{
  return 0x646E65697266;
}

uint64_t sub_1B2A0F674()
{
  return 0x6E6162737568;
}

uint64_t sub_1B2A0F684()
{
  return v0;
}

uint64_t sub_1B2A0F694()
{
  return 0x746867756164;
}

uint64_t sub_1B2A0F6A4()
{
  return sub_1B2E83988();
}

uint64_t sub_1B2A0F6BC()
{
  return 0x646C696863;
}

uint64_t sub_1B2A0F6F4()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2A0F70C()
{
  return 0x6568746F7262;
}

uint64_t sub_1B2A0F71C()
{
  return sub_1B2E83618();
}

uint64_t sub_1B2A0F738()
{
  return 0x746E65726170;
}

uint64_t sub_1B2A0F748()
{
  return 0x656E74726170;
}

uint64_t sub_1B2A0F770()
{
  return *(void *)(*(void *)(*(void *)v1 + 48) + v0 + 8);
}

uint64_t sub_1B2A0F788()
{
  return 0x796C696D6166;
}

uint64_t sub_1B2A0F7B4()
{
  return 0x6C696843796DLL;
}

uint64_t sub_1B2A0F7C4()
{
  return 0x676F44796DLL;
}

uint64_t sub_1B2A0F7D4()
{
  return 0x666C6573796DLL;
}

uint64_t sub_1B2A0F7E4()
{
  return 0x726568746FLL;
}

uint64_t sub_1B2A0F810()
{
  return 0x726568746F6DLL;
}

uint64_t sub_1B2A0F838()
{
  return sub_1B2E82498();
}

uint64_t sub_1B2A0F854()
{
  return sub_1B2E82498();
}

uint64_t sub_1B2A0F88C()
{
  return sub_1B2E83988();
}

uint64_t sub_1B2A0F8AC@<X0>(uint64_t a1@<X8>)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2A0F8EC()
{
  return sub_1B2E80568();
}

uint64_t sub_1B2A0F904()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1B2A0F938()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);
  unsigned __int8 v8 = *(unsigned char *)(v0 + 64);
  return sub_1B2A0D334(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1B2A0F958()
{
  return v0;
}

void sub_1B2A0F980()
{
  *(void *)(*(void *)(v1 + 48) + 8 * v0) = *(void *)(*(void *)(v2 + 48) + 8 * v0);
}

void *sub_1B2A0F9D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return memmove(a1, v2, 8 * a2);
}

uint64_t sub_1B2A0F9FC()
{
  return 0x786966657270;
}

uint64_t sub_1B2A0FA10()
{
  return 0x657361726870;
}

void sub_1B2A0FA24()
{
}

uint64_t sub_1B2A0FA3C()
{
  return 0x49747865746E6F63;
}

uint64_t sub_1B2A0FA50()
{
  return 0x79676F6C6F746E6FLL;
}

uint64_t sub_1B2A0FA64@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(v4 - 112) = *(void *)(v3 + a3);
  return sub_1B29F4F7C(a1, a2);
}

uint64_t sub_1B2A0FA7C@<X0>(uint64_t a1@<X8>)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRelease();
}

void sub_1B2A0FA94()
{
  *uint64_t v0 = 0x8000000000000000;
}

void sub_1B2A0FAA8()
{
  *uint64_t v1 = v2;
}

uint64_t sub_1B2A0FAD4()
{
  return v0;
}

uint64_t sub_1B2A0FAE8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 88) = a1;
  return sub_1B2E80668();
}

unint64_t sub_1B2A0FB0C()
{
  *(unsigned char *)(v0 - 65) = 1;
  return sub_1B2A0D290();
}

uint64_t sub_1B2A0FB2C()
{
  return 0;
}

uint64_t sub_1B2A0FB74()
{
  return v0;
}

void sub_1B2A0FB9C()
{
  *uint64_t v0 = 0x8000000000000000;
}

void *sub_1B2A0FBD0()
{
  return sub_1B29AEC7C(v0, v1);
}

uint64_t sub_1B2A0FBF0()
{
  return 6780513;
}

unint64_t sub_1B2A0FC00()
{
  return 0xD00000000000001CLL;
}

double sub_1B2A0FC1C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0.0;
  }
  uint64_t v2 = 0;
  double v3 = 0.0;
  do
  {
    double v4 = *(double *)(a1 + 32 + 8 * v2++);
    double v3 = v3 + v4;
  }
  while (v1 != v2);
  return v3 / (double)v1;
}

uint64_t type metadata accessor for Avg()
{
  return self;
}

id static BackgroundSystemTaskUtilities.reportSystemWorkload(size:)(uint64_t a1)
{
  v3[1] = *(id *)MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (objc_msgSend(self, sel_reportSystemWorkload_ofCategory_error_, a1, 10, v3)) {
    return v3[0];
  }
  id v2 = v3[0];
  sub_1B2E80388();

  return (id)swift_willThrow();
}

void static BackgroundSystemTaskUtilities.reportFeatureCheckpoint(state:)(uint64_t a1)
{
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  v13[0] = 0;
  if (objc_msgSend(self, sel_reportFeatureCheckpoint_forFeature_error_, a1, 700, v13))
  {
    id v1 = v13[0];
  }
  else
  {
    id v2 = v13[0];
    double v3 = (void *)sub_1B2E80388();

    swift_willThrow();
    if (qword_1EB7D9BE8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1B2E81FB8();
    sub_1B29A4B98(v4, (uint64_t)qword_1EB7D8910);
    id v5 = v3;
    id v6 = v3;
    uint64_t v7 = sub_1B2E81F98();
    os_log_type_t v8 = sub_1B2E82DB8();
    if (os_log_type_enabled(v7, v8))
    {
      unint64_t v9 = (uint8_t *)swift_slowAlloc();
      unint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v9 = 138543362;
      id v11 = v3;
      unint64_t v12 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v13[0] = v12;
      sub_1B2E82FB8();
      void *v10 = v12;

      _os_log_impl(&dword_1B2996000, v7, v8, "BGSystemTaskCheckpoints.report error: %{public}@", v9, 0xCu);
      sub_1B29A3EB4(&qword_1EB7E3110);
      swift_arrayDestroy();
      MEMORY[0x1B3EB30C0](v10, -1, -1);
      MEMORY[0x1B3EB30C0](v9, -1, -1);
    }
    else
    {
    }
  }
}

ValueMetadata *type metadata accessor for BackgroundSystemTaskUtilities()
{
  return &type metadata for BackgroundSystemTaskUtilities;
}

uint64_t dispatch thunk of static BaseEntityFactObjectProtocol.string(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of static BaseEntityFactObjectProtocol.entityReference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BaseEntityFactObjectProtocol.asString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BaseEntityFactObjectProtocol.asEntityIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

BOOL sub_1B2A10000(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 24))();
  uint64_t v3 = v2;
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v3 != 0;
}

BOOL sub_1B2A10048(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(a2 + 32))(&v3);
  return (v4 & 1) == 0;
}

uint64_t sub_1B2A10088(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1B2E831C8();
    swift_bridgeObjectRelease();
    char v6 = v9;
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      char v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (uint64_t v7 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_1B2E83298();
      }
      char v6 = sub_1B2C834D0(v4, v5, (void (*)(uint64_t *__return_ptr))sub_1B2A10C40);
      swift_bridgeObjectRelease();
    }
  }
  if (v6) {
    return 0;
  }
  else {
    return 0;
  }
}

unint64_t BaseEntityFactObjectProtocol.asFloat.getter()
{
  sub_1B29A2598();
  uint64_t v1 = v0();
  if (v2)
  {
    unint64_t v3 = sub_1B2A10264(v1, v2);
    uint64_t v4 = HIDWORD(v3) & 1;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = 0;
    LOBYTE(v4) = 1;
  }
  return v5 | ((unint64_t)v4 << 32);
}

unint64_t sub_1B2A10264(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1B2E831C8();
    swift_bridgeObjectRelease();
    char v6 = v9;
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      char v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (uint64_t v7 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_1B2E83298();
      }
      char v6 = sub_1B2C834D0(v4, v5, (void (*)(uint64_t *__return_ptr))sub_1B2A10C78);
      swift_bridgeObjectRelease();
    }
  }
  return (unint64_t)((v6 & 1) == 0) << 32;
}

uint64_t BaseEntityFactObjectProtocol.asDouble.getter()
{
  sub_1B29A2598();
  uint64_t v1 = v0();
  if (v2) {
    return sub_1B2A10088(v1, v2);
  }
  else {
    return 0;
  }
}

uint64_t BaseEntityFactObjectProtocol.asBool.getter()
{
  sub_1B29A2598();
  uint64_t v1 = v0();
  if (!v2) {
    return 2;
  }
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  BOOL v5 = v1 == 1702195828 && v2 == 0xE400000000000000;
  if (v5 || (sub_1B29A4CBC(), (sub_1B2E837A8() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v3 == 0x65736C6166 && v4 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1B29A4CBC();
    char v8 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v8) {
      return 0;
    }
    else {
      return 2;
    }
  }
}

uint64_t BaseEntityFactObjectProtocol.asIntBool.getter()
{
  sub_1B29A2598();
  uint64_t v1 = v0();
  if (!v2) {
    return 2;
  }
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  BOOL v5 = v1 == 49 && v2 == 0xE100000000000000;
  if (v5 || (sub_1B29A4CBC(), (sub_1B2E837A8() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v3 == 48 && v4 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1B29A4CBC();
    char v8 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v8) {
      return 0;
    }
    else {
      return 2;
    }
  }
}

uint64_t BaseEntityFactObjectProtocol.asDateFromJSON(decodeWith:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v63 = a1;
  sub_1B2E80788();
  sub_1B299D278();
  uint64_t v57 = v8;
  uint64_t v58 = v7;
  MEMORY[0x1F4188790](v7);
  sub_1B299E4A0();
  uint64_t v56 = v10 - v9;
  uint64_t v11 = sub_1B29A3EB4(&qword_1EB7D87C0);
  MEMORY[0x1F4188790](v11 - 8);
  sub_1B2999940();
  uint64_t v61 = v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v59 = (char *)&v55 - v14;
  uint64_t v15 = sub_1B29A3EB4(&qword_1E9C37280);
  MEMORY[0x1F4188790](v15 - 8);
  sub_1B299E4A0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = sub_1B2E80218();
  sub_1B299D278();
  uint64_t v60 = v20;
  MEMORY[0x1F4188790](v21);
  sub_1B2999940();
  uint64_t v62 = v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v55 - v24;
  uint64_t v26 = sub_1B2E823C8();
  sub_1B299D278();
  uint64_t v28 = v27;
  MEMORY[0x1F4188790](v29);
  sub_1B299E4A0();
  uint64_t v32 = v31 - v30;
  (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  if (v33)
  {
    sub_1B2E823B8();
    uint64_t v34 = sub_1B2E82388();
    unint64_t v36 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v26);
    uint64_t v37 = a4;
    if (v36 >> 60 == 15)
    {
LABEL_10:
      uint64_t v43 = sub_1B2E80668();
      uint64_t v44 = v37;
      uint64_t v45 = 1;
      return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v44, v45, 1, v43);
    }
    sub_1B2A10B00();
    sub_1B2E7FF78();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v18, 0, 1, v19);
    int v40 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v18, 1, v19);
    if (v40 == 1)
    {
      sub_1B29F869C(v34, v36);
      uint64_t v41 = &qword_1E9C37280;
      uint64_t v42 = v18;
LABEL_9:
      sub_1B2A10B50(v42, v41);
      goto LABEL_10;
    }
    uint64_t v46 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v25, v18, v19);
    uint64_t v47 = v61;
    sub_1B2E801D8();
    (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v62, v25, v19);
    uint64_t v48 = sub_1B2E80668();
    sub_1B2A10CA0(v47);
    if (v54)
    {
      uint64_t v49 = v56;
      sub_1B2E80768();
      uint64_t v53 = (uint64_t)v59;
      sub_1B2E80738();
      sub_1B29F869C(v34, v36);
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v49, v58);
      long long v50 = *(void (**)(void))(v46 + 8);
      sub_1B2A10C90();
      v50();
      sub_1B2A10C90();
      v50();
      sub_1B2A10B50(v47, &qword_1EB7D87C0);
      sub_1B2A10CA0(v53);
      if (!v54)
      {
        uint64_t v52 = *(void *)(v48 - 8);
LABEL_19:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v37, v53, v48);
        uint64_t v44 = v37;
        uint64_t v45 = 0;
        uint64_t v43 = v48;
        return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v44, v45, 1, v43);
      }
    }
    else
    {
      sub_1B29F869C(v34, v36);
      char v51 = *(void (**)(void))(v46 + 8);
      sub_1B2A10C90();
      v51();
      sub_1B2A10C90();
      v51();
      uint64_t v52 = *(void *)(v48 - 8);
      uint64_t v53 = (uint64_t)v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v59, v47, v48);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v53, 0, 1, v48);
      sub_1B2A10CA0(v53);
      if (!v54) {
        goto LABEL_19;
      }
    }
    uint64_t v41 = &qword_1EB7D87C0;
    uint64_t v42 = v53;
    goto LABEL_9;
  }
  uint64_t v38 = sub_1B2E80668();

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a4, 1, 1, v38);
}

unint64_t sub_1B2A10B00()
{
  unint64_t result = qword_1E9C37278;
  if (!qword_1E9C37278)
  {
    sub_1B2E80218();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37278);
  }
  return result;
}

uint64_t sub_1B2A10B50(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1B29A3EB4(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t dispatch thunk of BaseEntityFactProtocol.predicate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BaseEntityFactProtocol.object.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

unsigned char *sub_1B2A10BD4@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (unint64_t result = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_1B2A10C40@<X0>(unsigned char *a1@<X8>)
{
  return sub_1B2C83588(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

unsigned char *sub_1B2A10C5C@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1B2A10BD4(a1, a2);
}

void *sub_1B2A10C78@<X0>(unsigned char *a1@<X8>)
{
  return sub_1B2A10C40(a1);
}

uint64_t sub_1B2A10CA0(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t dispatch thunk of BaseEntityProtocol.facts.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BaseEntityProtocol.entityClass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t BehaviorType.description.getter()
{
  uint64_t result = 0x6E776F6E6B6E55;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x636E75614C707041;
      break;
    case 2:
      uint64_t v2 = 0x746E49707041;
      goto LABEL_12;
    case 3:
      uint64_t result = 0x6765746143494F50;
      break;
    case 4:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
      uint64_t result = 0xD000000000000015;
      break;
    case 6:
      uint64_t result = 0x79616C50726143;
      break;
    case 7:
      uint64_t result = 0x6F4C656369766544;
      break;
    case 8:
      uint64_t result = 0xD000000000000012;
      break;
    case 9:
      uint64_t result = 0x656E616C70726941;
      break;
    case 0xA:
      uint64_t v2 = 0x764569466957;
LABEL_12:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6E65000000000000;
      break;
    case 0xB:
      uint64_t result = 0x746F6F7465756C42;
      break;
    case 0xC:
      uint64_t result = 0x676E696772616843;
      break;
    case 0xD:
      uint64_t result = 0x697463416B6E694CLL;
      break;
    case 0xE:
      uint64_t result = 0xD000000000000015;
      break;
    case 0xF:
      uint64_t result = 0x7469736956494F4CLL;
      break;
    case 0x10:
    case 0x12:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x11:
      uint64_t result = 0xD000000000000017;
      break;
    case 0x13:
      uint64_t result = 0x6369666963657053;
      break;
    case 0x14:
      uint64_t result = 0x6547657372616F43;
      break;
    case 0x15:
      uint64_t result = 0x6F6547656772614CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static BehaviorType.from(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v4 = qword_1F0AB5E28;
  if (qword_1F0AB5E28)
  {
    BOOL v7 = &byte_1F0AB5E38;
    while (1)
    {
      int v9 = *v7++;
      char v8 = v9;
      unint64_t v10 = 0xE700000000000000;
      uint64_t v11 = 0x6E776F6E6B6E55;
      switch(v9)
      {
        case 1:
          uint64_t v11 = 0x636E75614C707041;
          unint64_t v10 = 0xE900000000000068;
          break;
        case 2:
          uint64_t v12 = 0x746E49707041;
          goto LABEL_14;
        case 3:
          unint64_t v10 = 0xEB0000000079726FLL;
          uint64_t v11 = 0x6765746143494F50;
          break;
        case 4:
          uint64_t v13 = "UserFocusComputedMode";
          uint64_t v11 = 0xD000000000000010;
          goto LABEL_22;
        case 5:
          uint64_t v11 = 0xD000000000000015;
          uint64_t v13 = "MicrolocationVisit";
          goto LABEL_22;
        case 6:
          uint64_t v11 = 0x79616C50726143;
          break;
        case 7:
          unint64_t v10 = 0xEC00000064656B63;
          uint64_t v11 = 0x6F4C656369766544;
          break;
        case 8:
          uint64_t v11 = 0xD000000000000012;
          uint64_t v13 = "HomeKitAccessoryEvent";
          goto LABEL_22;
        case 9:
          unint64_t v10 = 0xEC00000065646F4DLL;
          uint64_t v11 = 0x656E616C70726941;
          break;
        case 10:
          uint64_t v12 = 0x764569466957;
LABEL_14:
          uint64_t v11 = v12 & 0xFFFFFFFFFFFFLL | 0x6E65000000000000;
          unint64_t v10 = 0xE900000000000074;
          break;
        case 11:
          unint64_t v10 = 0xEE00746E65764568;
          uint64_t v11 = 0x746F6F7465756C42;
          break;
        case 12:
          unint64_t v10 = 0xED0000746E657645;
          uint64_t v11 = 0x676E696772616843;
          break;
        case 13:
          unint64_t v10 = 0xEA00000000006E6FLL;
          uint64_t v11 = 0x697463416B6E694CLL;
          break;
        case 14:
          uint64_t v11 = 0xD000000000000015;
          uint64_t v13 = "PersonInteraction";
          goto LABEL_22;
        case 15:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v11 = 0x7469736956494F4CLL;
          break;
        case 16:
          unint64_t v10 = 0x80000001B2E97160;
          goto LABEL_24;
        case 17:
          uint64_t v11 = 0xD000000000000017;
          uint64_t v13 = "EntityInteraction";
LABEL_22:
          unint64_t v10 = (unint64_t)v13 | 0x8000000000000000;
          break;
        case 18:
          unint64_t v10 = 0x80000001B2E97120;
LABEL_24:
          uint64_t v11 = 0xD000000000000011;
          break;
        case 19:
          unint64_t v10 = 0xEF687361486F6547;
          uint64_t v11 = 0x6369666963657053;
          break;
        case 20:
          unint64_t v10 = 0xED0000687361486FLL;
          uint64_t v11 = 0x6547657372616F43;
          break;
        case 21:
          unint64_t v10 = 0xEC00000068736148;
          uint64_t v11 = 0x6F6547656772614CLL;
          break;
        default:
          break;
      }
      if (v11 == a1 && v10 == a2) {
        break;
      }
      char v15 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_36;
      }
      if (!--v4) {
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRelease();
LABEL_36:
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
LABEL_34:
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

void *static BehaviorType.allCases.getter()
{
  return &unk_1F0AB5E18;
}

uint64_t static BehaviorType.featurizedCases.getter()
{
  uint64_t v0 = qword_1F0AB5E28;
  if (qword_1F0AB5E28)
  {
    uint64_t v1 = MEMORY[0x1E4FBC860];
    uint64_t v2 = &byte_1F0AB5E38;
    do
    {
      unsigned int v4 = *v2++;
      char v3 = v4;
      int v5 = (1 << v4) & 0x380001;
      if (v4 > 0x15 || v5 == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1B29C0218();
        }
        unint64_t v7 = *(void *)(v1 + 16);
        if (v7 >= *(void *)(v1 + 24) >> 1) {
          sub_1B29C0218();
        }
        *(void *)(v1 + 16) = v7 + 1;
        *(unsigned char *)(v1 + v7 + 32) = v3;
      }
      --v0;
    }
    while (v0);
  }
  else
  {
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1B2A114B4()
{
  sub_1B2A1900C();
  qword_1E9C3B260 = v0;
}

uint64_t static BehaviorType.disabledCasesForDataCollection.getter()
{
  if (qword_1E9C38AF8 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

IntelligencePlatform::BehaviorType_optional __swiftcall BehaviorType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 0;
  char v3 = 4;
  switch(rawValue)
  {
    case 0:
      goto LABEL_6;
    case 1:
      char v2 = 1;
      goto LABEL_6;
    case 2:
      char v2 = 2;
      goto LABEL_6;
    case 3:
      char v2 = 3;
LABEL_6:
      char v3 = v2;
      break;
    case 4:
      break;
    case 5:
      char v3 = 5;
      break;
    case 6:
      char v3 = 6;
      break;
    case 7:
      char v3 = 7;
      break;
    case 8:
      char v3 = 8;
      break;
    case 9:
      char v3 = 9;
      break;
    case 10:
      char v3 = 10;
      break;
    case 11:
      char v3 = 11;
      break;
    case 12:
      char v3 = 12;
      break;
    case 13:
      char v3 = 13;
      break;
    case 14:
      char v3 = 14;
      break;
    case 15:
      char v3 = 15;
      break;
    case 16:
      char v3 = 16;
      break;
    case 17:
      char v3 = 17;
      break;
    case 18:
      char v3 = 18;
      break;
    case 19:
      char v3 = 19;
      break;
    case 20:
      char v3 = 20;
      break;
    case 21:
      char v3 = 21;
      break;
    default:
      char v3 = 22;
      break;
  }
  *uint64_t v1 = v3;
  return (IntelligencePlatform::BehaviorType_optional)rawValue;
}

uint64_t BehaviorType.rawValue.getter()
{
  return *v0;
}

uint64_t sub_1B2A1167C()
{
  return sub_1B29AE4E4(*v0);
}

uint64_t sub_1B2A11684(uint64_t a1)
{
  return sub_1B2ABAB0C(a1, *v1);
}

uint64_t sub_1B2A1168C(uint64_t a1)
{
  return sub_1B29F8D9C(a1, *v1);
}

IntelligencePlatform::BehaviorType_optional sub_1B2A11694(Swift::Int *a1)
{
  return BehaviorType.init(rawValue:)(*a1);
}

uint64_t sub_1B2A1169C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BehaviorType.rawValue.getter();
  *a1 = result;
  return result;
}

void sub_1B2A116C4(void *a1@<X8>)
{
  *a1 = &unk_1F0AB5E18;
}

uint64_t sub_1B2A116D4()
{
  return sub_1B2E827F8();
}

uint64_t sub_1B2A11734()
{
  return sub_1B2E82798();
}

unint64_t sub_1B2A1178C()
{
  unint64_t result = qword_1EB7D8800;
  if (!qword_1EB7D8800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8800);
  }
  return result;
}

unint64_t sub_1B2A117DC()
{
  unint64_t result = qword_1E9C3B268;
  if (!qword_1E9C3B268)
  {
    sub_1B29C3588(&qword_1E9C3B270);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B268);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BehaviorType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEB)
  {
    if (a2 + 21 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 21) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 22;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v5 = v6 - 22;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for BehaviorType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2A11984);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BehaviorType()
{
  return &type metadata for BehaviorType;
}

unint64_t sub_1B2A119BC()
{
  unint64_t result = qword_1E9C3B278;
  if (!qword_1E9C3B278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3B278);
  }
  return result;
}

unint64_t BiomeConsumptionError.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (v1 == 1) {
    return 0xD00000000000003ALL;
  }
  if (v1 == 2) {
    return 0xD000000000000021;
  }
  swift_bridgeObjectRetain();
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

BOOL static BiomeConsumptionError.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v3 == 2)
  {
    if (v5 != 2) {
      goto LABEL_10;
    }
    sub_1B2A14460(*a1, 2);
    uint64_t v6 = v4;
    uint64_t v7 = 2;
    goto LABEL_7;
  }
  if (v3 != 1)
  {
    if ((unint64_t)(v5 - 1) < 2) {
      goto LABEL_10;
    }
    if (!v3)
    {
      swift_bridgeObjectRetain();
      sub_1B2A14448(v4, v5);
      sub_1B2A14448(v2, 0);
      sub_1B2A14460(v2, 0);
      sub_1B2A14460(v4, v5);
      if (v5) {
        goto LABEL_12;
      }
      return 1;
    }
    if (!v5)
    {
      uint64_t v8 = *a2;
      uint64_t v9 = 0;
      goto LABEL_11;
    }
    uint64_t v11 = *a1;
    if (v2 != v4 || v3 != v5)
    {
      char v13 = sub_1B2E837A8();
      sub_1B29A051C(v4, v5);
      sub_1B2A14460(v4, v5);
      return (v13 & 1) != 0;
    }
    sub_1B29A051C(v11, v3);
    uint64_t v6 = v2;
    uint64_t v7 = v3;
LABEL_7:
    sub_1B2A14460(v6, v7);
    return 1;
  }
  if (v5 != 1)
  {
LABEL_10:
    uint64_t v8 = *a2;
    uint64_t v9 = a2[1];
LABEL_11:
    sub_1B2A14448(v8, v9);
    sub_1B2A14448(v2, v3);
LABEL_12:
    sub_1B2A14460(v2, v3);
    sub_1B2A14460(v4, v5);
    return 0;
  }
  sub_1B2A14460(*a1, 1);
  sub_1B2A14460(v4, 1);
  return v5;
}

id sub_1B2A11C74()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void BiomeAsyncThrowingPublisher.init(_:bookmark:)(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for BiomeAsyncThrowingPublisher.Inner();
  id v6 = sub_1B2A11C74();
  uint64_t v7 = v6;
  if (!a2)
  {
    id v13 = v6;
    objc_msgSend(a1, sel_subscribe_, v13);

    goto LABEL_5;
  }
  uint64_t v8 = swift_dynamicCastObjCProtocolConditional();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    id v10 = v7;
    swift_unknownObjectRetain();
    id v11 = a1;
    id v12 = objc_msgSend(v9, sel_withBookmark_, a2);
    objc_msgSend(v12, sel_subscribe_, v10);

    swift_unknownObjectRelease_n();
LABEL_5:
    *a3 = v7;
    return;
  }
  sub_1B2A14490();
  swift_allocError();
  *uint64_t v14 = xmmword_1B2EC4B30;
  swift_willThrow();
  swift_unknownObjectRelease();
}

uint64_t BiomeAsyncThrowingPublisher.next()(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x1F4188298](sub_1B2A11E34, 0, 0);
}

uint64_t sub_1B2A11E34()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (void *)v0[4];
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_task_alloc();
  v0[6] = v4;
  *(void *)(v4 + 16) = v2;
  id v5 = v2;
  id v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  uint64_t v7 = sub_1B2E82F38();
  *id v6 = v0;
  v6[1] = sub_1B2A11F60;
  return MEMORY[0x1F4188148](v0 + 2, &unk_1E9C3B2F8, v3, sub_1B2A14648, v4, 0, 0, v7);
}

uint64_t sub_1B2A11F60()
{
  sub_1B299F394();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *id v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = sub_1B2A12084;
  }
  else
  {

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = sub_1B2A12068;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1B2A12068()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1B2A12084()
{
  sub_1B299B3BC();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2A120F4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1B2A12188;
  return sub_1B2A122CC();
}

uint64_t sub_1B2A12188()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *id v6 = v5;
  uint64_t v7 = *v1;
  sub_1B299F388();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 32) = v3;
    return MEMORY[0x1F4188298](sub_1B2A122A4, 0, 0);
  }
}

uint64_t sub_1B2A122A4()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  sub_1B299AD7C();
  return v1();
}