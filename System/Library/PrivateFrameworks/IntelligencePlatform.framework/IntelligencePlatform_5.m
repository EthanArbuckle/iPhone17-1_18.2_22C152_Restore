uint64_t sub_1B2C33B50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(void *)(a1 + 40);
  v3 = *(void *)(a1 + 48);
  v4 = *(unsigned char *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2A53708(v2, v3, v4);
  return a1;
}

uint64_t sub_1B2C33BB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2A53718(v2, v3, v4);
  return a1;
}

uint64_t sub_1B2C33C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2C1696C(a1, a2, a3, a4, *(void *)(v4 + 16));
}

void sub_1B2C33C30()
{
  sub_1B2C37194();
  sub_1B2C169A8(v0, v1, v2, v3, v4);
}

uint64_t sub_1B2C33C4C(uint64_t a1, uint64_t *a2)
{
  sub_1B29A3EB4(a2);
  sub_1B299B3B0();
  sub_1B299B798();
  v3();
  return a1;
}

void sub_1B2C33CA0(_OWORD *a1)
{
  sub_1B2C16B58(a1, v1);
}

uint64_t sub_1B2C33CBC(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1B2C33D1C(_OWORD *a1)
{
  sub_1B2C167CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1B2C33D3C(_OWORD *a1)
{
  sub_1B2C17408(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1B2C33D5C()
{
  sub_1B2C39398();
  sub_1B2BF83D8(v0, v1, v2, v3);
}

void sub_1B2C33D7C(void *a1)
{
  sub_1B2C17170(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B2C33D98()
{
  return sub_1B29A0A90(v0, 32);
}

uint64_t sub_1B2C33DA4(uint64_t a1)
{
  return sub_1B2BF7030(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B2C33DC0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1B2C33DF8(uint64_t a1)
{
  sub_1B2BF5FDC(a1, *(uint8_t **)(v1 + 32), *(void *)(v1 + 16));
}

void sub_1B2C33E18(uint64_t a1)
{
  sub_1B2C05260(a1, *(uint8_t **)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1B2C33E38()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 96, 7);
}

void sub_1B2C33EA8(uint64_t a1)
{
  sub_1B2BF1F6C(a1, v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[2], v1[3]);
}

uint64_t sub_1B2C33EE4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_1B2C33F54()
{
  sub_1B29A425C();
  sub_1B2C16C48(v0, v1, v2, v3, v4, v5, v6, v7, v8);
}

void sub_1B2C33F78(_OWORD *a1)
{
  sub_1B2C16CEC(a1, v1);
}

void sub_1B2C33F94(uint64_t a1)
{
  sub_1B2BEF3D0(a1, *(uint8_t **)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1B2C33FB8(uint64_t a1)
{
  return sub_1B2C35848(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1B2C10168);
}

uint64_t sub_1B2C33FE8(uint64_t a1)
{
  return sub_1B2C358E4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B2C01980);
}

uint64_t sub_1B2C34014()
{
  return sub_1B29A0A90(v0, 48);
}

uint64_t sub_1B2C34020()
{
  return sub_1B2BFA4A4();
}

uint64_t sub_1B2C34060(uint64_t a1)
{
  return sub_1B2C356B4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B2C0DB04);
}

uint64_t sub_1B2C3408C()
{
  return sub_1B29A0A90(v0, 48);
}

uint64_t sub_1B2C34098()
{
  return sub_1B2BFA4A4();
}

uint64_t sub_1B2C340DC(uint64_t a1)
{
  return sub_1B2C3579C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1B2C0020C);
}

uint64_t sub_1B2C34108()
{
  return sub_1B29A0A90(v0, 48);
}

uint64_t sub_1B2C34114()
{
  return sub_1B2BFA4A4();
}

uint64_t sub_1B2C34158(uint64_t a1)
{
  return sub_1B2C3579C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1B2BFAA68);
}

uint64_t sub_1B2C34184()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 232, 7);
}

uint64_t sub_1B2C3427C()
{
  __n128 v1 = sub_1B2C36F14();
  return sub_1B2BE2C38(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], v12, v13, v0[15], v0[16], v0[17], v0[18], v0[19], v0[20], v0[21],
           v0[22],
           v0[23],
           v0[24],
           v0[25],
           v0[26],
           v0[27],
           v0[28],
           v10,
           v11);
}

unsigned char **sub_1B2C342E0(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29BFD70(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_1B2C342EC()
{
  return sub_1B29BF61C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1B2C342F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B29BF644(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1B2C34300()
{
  return sub_1B2BEC7C4();
}

unint64_t sub_1B2C34354()
{
  unint64_t result = qword_1E9C40980;
  if (!qword_1E9C40980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40980);
  }
  return result;
}

unint64_t sub_1B2C343AC()
{
  unint64_t result = qword_1E9C40988;
  if (!qword_1E9C40988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40988);
  }
  return result;
}

unint64_t sub_1B2C34404()
{
  unint64_t result = qword_1E9C40990;
  if (!qword_1E9C40990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40990);
  }
  return result;
}

uint64_t sub_1B2C344BC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B2C34558()
{
  sub_1B299B3B0();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 80) | 7;
  sub_1B299B798();
  v2();
  uint64_t v3 = sub_1B29A4CBC();

  return MEMORY[0x1F4186498](v3, v4, v1);
}

uint64_t sub_1B2C345DC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 216, 7);
}

uint64_t sub_1B2C346D4()
{
  __n128 v1 = sub_1B2C384C0();
  return sub_1B2C163FC(v2, v3, v4, v5, v6, v7, v8, v9, *(_OWORD *)&v1, v10, *(_OWORD *)(v0 + 104), *(_OWORD *)(v0 + 120), *(_OWORD *)(v0 + 136), *(_OWORD *)(v0 + 152), *(_OWORD *)(v0 + 168), *(_OWORD *)(v0 + 184), *(void *)(v0 + 200), *(void *)(v0 + 208));
}

uint64_t sub_1B2C3477C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B29A3EB4(a3);
  sub_1B299B3B0();
  sub_1B29A15F0();
  v4();
  return a2;
}

uint64_t sub_1B2C34808(uint64_t a1)
{
  uint64_t v2 = sub_1B2ACA11C(a1);
  char v5 = *(unsigned char *)(v1 + 57);
  v3(v2, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), v5);
  return v1;
}

uint64_t sub_1B2C348E0()
{
  return sub_1B2C16510(v0 + 16);
}

uint64_t sub_1B2C34908()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2A5347C(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(unsigned __int8 *)(v0 + 112), *(unsigned char *)(v0 + 113));

  return MEMORY[0x1F4186498](v0, 114, 7);
}

void sub_1B2C3497C(_OWORD *a1)
{
  sub_1B2C16844(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1B2C3499C(_OWORD *a1)
{
  sub_1B2C16754(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1B2C349B8(_OWORD *a1)
{
  sub_1B2C166DC(a1, v1);
}

uint64_t sub_1B2C349D8()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1B2C34A20(_OWORD *a1)
{
  sub_1B2C16664(a1, v1[2], v1[3], v1[4]);
}

void sub_1B2C34A44()
{
  sub_1B2C37194();
  sub_1B2C165EC(v0, v1, v2, v3, v4);
}

void sub_1B2C34A64()
{
  sub_1B2C39398();
  sub_1B2BD83C8(v0, v1, v2, v3, v4);
}

void sub_1B2C34A84(void *a1)
{
  sub_1B2C171CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1B2C34AA4()
{
  sub_1B2C39398();
  sub_1B2BD6280(v0, v1, v2, v3);
}

void sub_1B2C34AC4(void *a1)
{
  sub_1B2C17228(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B2C34AE4()
{
  return sub_1B2C34DAC();
}

uint64_t sub_1B2C34B14()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1B2C34B54()
{
  sub_1B2C39398();
  sub_1B2C0C7C8(v0, v1, v2, v3);
}

uint64_t sub_1B2C34B74(uint64_t a1)
{
  return sub_1B2C35848(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1B2BD30D0);
}

void sub_1B2C34BA4()
{
  sub_1B2C37194();
  sub_1B2C1707C(v0, v1, v2, v3, v4);
}

void sub_1B2C34BC4(_OWORD *a1)
{
  sub_1B2C17134(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1B2C34BE4(_OWORD *a1)
{
  sub_1B2C170F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_1B2C34C1C()
{
  return sub_1B29A0A90(v0, 48);
}

uint64_t sub_1B2C34C28()
{
  return sub_1B2BFA4A4();
}

uint64_t sub_1B2C34C68()
{
  swift_release();
  uint64_t v0 = sub_1B2AC9D1C();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_1B2C34C98(uint64_t a1)
{
  return sub_1B2C356B4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B2C0E870);
}

uint64_t sub_1B2C34CC8(uint64_t a1)
{
  return sub_1B2C35848(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1B2BCF8D4);
}

unint64_t sub_1B2C34CF4()
{
  unint64_t result = qword_1E9C409A8;
  if (!qword_1E9C409A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C409A8);
  }
  return result;
}

void sub_1B2C34D44()
{
  sub_1B2C37194();
  sub_1B2C16880(v0, v1, v2, v3, v4);
}

void sub_1B2C34D60(_OWORD *a1)
{
  sub_1B2C16930(a1, v1);
}

uint64_t sub_1B2C34D80()
{
  return sub_1B2C34DAC();
}

uint64_t sub_1B2C34DAC()
{
  sub_1B2C377B8();
  return v4(v0, v1, v2, v3);
}

uint64_t sub_1B2C34DE8(uint64_t a1)
{
  return sub_1B2C35A60(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void))sub_1B2C17284);
}

uint64_t sub_1B2C34E18()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B2C34E58(_OWORD *a1)
{
  sub_1B2C16BD0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B2C34E78()
{
  return sub_1B2C350F0();
}

uint64_t sub_1B2C34EA8()
{
  return sub_1B2C3522C();
}

uint64_t sub_1B2C34ED8()
{
  return sub_1B2C34EF0();
}

#error "1B2C34F10: call analysis failed (funcsize=12)"

uint64_t sub_1B2C34F24(uint64_t a1)
{
  return sub_1B2C35A60(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void))sub_1B2C335AC);
}

uint64_t sub_1B2C34FC8()
{
  return sub_1B29A0A90(v0, 48);
}

uint64_t sub_1B2C34FD4()
{
  return sub_1B2BFA4A4();
}

uint64_t sub_1B2C35014(uint64_t a1)
{
  return sub_1B2C356B4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B2C124D4);
}

uint64_t sub_1B2C35044()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1B2C350C4()
{
  return sub_1B2C350F0();
}

uint64_t sub_1B2C350F0()
{
  sub_1B2C377B8();
  return v5(v0, v1, v2, v3, v4);
}

unint64_t sub_1B2C35130()
{
  unint64_t result = qword_1E9C409B0;
  if (!qword_1E9C409B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C409B0);
  }
  return result;
}

uint64_t sub_1B2C35180()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1B2C35200()
{
  return sub_1B2C3522C();
}

uint64_t sub_1B2C3522C()
{
  sub_1B2C38B98();
  return v3(v0, v1, v2);
}

void sub_1B2C35264(_OWORD *a1)
{
  sub_1B2C33768(a1, v1);
}

uint64_t sub_1B2C352D8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 120, 7);
}

void sub_1B2C35360()
{
  __n128 v0 = sub_1B2C36F14();
  sub_1B2BA6EA4(v1, v2, v3, v4, v5, v6, v7, v8, v0.n128_i64[0], v0.n128_i64[1], v11, v12, v9, v10);
}

uint64_t sub_1B2C3538C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

double sub_1B2C35414()
{
  __n128 v1 = sub_1B2C38B98();
  *(void *)&double result = sub_1B2C3389C(v2, v3, v4, v5, v6, v7, v8, v9, *(_OWORD *)&v1, *(void *)(v0 + 88), *(void *)(v0 + 96)).n128_u64[0];
  return result;
}

uint64_t sub_1B2C35448()
{
  return sub_1B2C34DAC();
}

unint64_t sub_1B2C35474()
{
  unint64_t result = qword_1E9C409B8;
  if (!qword_1E9C409B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C409B8);
  }
  return result;
}

uint64_t sub_1B2C354C4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 128, 7);
}

void sub_1B2C35554()
{
  __n128 v1 = sub_1B2C36F14();
  sub_1B2B997C4(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], v12, v13, *(void *)(v0 + 120), v10, v11);
}

double sub_1B2C3558C()
{
  return sub_1B2C35B34();
}

void sub_1B2C355A4(_OWORD *a1)
{
  sub_1B2C16AE0(a1, v1);
}

uint64_t sub_1B2C355C0()
{
  return sub_1B29A0A90(v0, 48);
}

uint64_t sub_1B2C355CC()
{
  return sub_1B2BFA4A4();
}

uint64_t sub_1B2C35610(uint64_t a1)
{
  return sub_1B2C3579C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1B2C066B0);
}

uint64_t sub_1B2C3563C()
{
  return sub_1B29A0A90(v0, 48);
}

uint64_t sub_1B2C35648()
{
  return sub_1B2BFA4A4();
}

uint64_t sub_1B2C35688(uint64_t a1)
{
  return sub_1B2C356B4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B2BF98DC);
}

uint64_t sub_1B2C356B4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1B2C356E0()
{
  return sub_1B29A0A90(v0, 48);
}

uint64_t sub_1B2C356EC()
{
  return sub_1B2BFA4A4();
}

uint64_t sub_1B2C35730()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1B2C35770(uint64_t a1)
{
  return sub_1B2C3579C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1B2BFBBA8);
}

uint64_t sub_1B2C3579C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1B2C357CC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1B2C3581C(uint64_t a1)
{
  return sub_1B2C35848(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1B2BFE6A4);
}

uint64_t sub_1B2C35848(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3]);
}

uint64_t sub_1B2C35878()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1B2AC9D1C();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_1B2C358B8(uint64_t a1)
{
  return sub_1B2C358E4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B2C03848);
}

uint64_t sub_1B2C358E4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_1B2C35914()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1B2C3598C()
{
  return sub_1B2C34DAC();
}

uint64_t sub_1B2C359BC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1B2C35A34(uint64_t a1)
{
  return sub_1B2C35A60(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void))sub_1B2C16D28);
}

uint64_t sub_1B2C35A60(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10]);
}

uint64_t sub_1B2C35AA4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 112, 7);
}

double sub_1B2C35B34()
{
  __n128 v1 = sub_1B2C384C0();
  *(void *)&double result = sub_1B2C169E4(v2, v3, v4, v5, v6, v7, v8, v9, *(_OWORD *)&v1, v10, *(void *)(v0 + 104)).n128_u64[0];
  return result;
}

uint64_t sub_1B2C35B68()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B2C35BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2C33C10(a1, a2, a3, a4);
}

uint64_t sub_1B2C35BD0(void *a1)
{
  return sub_1B2C16AA4(a1);
}

uint64_t sub_1B2C35BE8(void *a1)
{
  return sub_1B2C173CC(a1);
}

void sub_1B2C35FB4()
{
}

void sub_1B2C36010()
{
}

uint64_t sub_1B2C36028()
{
  return sub_1B2C16E80();
}

uint64_t sub_1B2C36114()
{
  return sub_1B2E836D8();
}

void sub_1B2C36160()
{
  unint64_t v3 = (uint64_t *)(v0 + *(int *)(v1 + 44));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)(v2 - 104) = v4;
  *(void *)(v2 - 96) = v5;
  *(unsigned char *)(v2 - 88) = (_BYTE)v3;
  *(unsigned char *)(v2 - 65) = 7;
}

void sub_1B2C36184()
{
  unint64_t v3 = (uint64_t *)(v0 + *(int *)(v1 + 52));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)(v2 - 104) = v4;
  *(void *)(v2 - 96) = v5;
  *(unsigned char *)(v2 - 88) = (_BYTE)v3;
  *(unsigned char *)(v2 - 65) = 9;
}

void sub_1B2C361A8()
{
  unint64_t v3 = (uint64_t *)(v0 + *(int *)(v1 + 48));
  uint64_t v4 = *v3;
  LOBYTE(v3) = *((unsigned char *)v3 + 8);
  *(void *)(v2 - 104) = v4;
  *(unsigned char *)(v2 - 96) = (_BYTE)v3;
  *(unsigned char *)(v2 - 65) = 8;
}

void sub_1B2C361CC()
{
  unint64_t v3 = (uint64_t *)(v0 + *(int *)(v1 + 36));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)(v2 - 104) = v4;
  *(void *)(v2 - 96) = v5;
  *(unsigned char *)(v2 - 88) = (_BYTE)v3;
  *(unsigned char *)(v2 - 65) = 5;
}

uint64_t sub_1B2C361F0()
{
  return v0;
}

void sub_1B2C36234()
{
  *(void *)(v2 - 104) = *(void *)(v0 + *(int *)(v1 + 32));
  *(unsigned char *)(v2 - 65) = 4;
}

void sub_1B2C3624C()
{
  *(unsigned char *)(v0 - 104) = 2;
}

void sub_1B2C36264()
{
  *(void *)(v2 - 104) = *(void *)(v0 + *(int *)(v1 + 28));
  *(unsigned char *)(v2 - 65) = 3;
}

void sub_1B2C3627C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t))
{
  sub_1B2BBEF64(a1, (uint64_t)&a11, v22, v23, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22);
}

void *sub_1B2C362A0(void *a1)
{
  return sub_1B29AEC7C(a1, v1);
}

uint64_t sub_1B2C362BC@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_1B2E836D8();
}

uint64_t sub_1B2C3632C()
{
  return sub_1B2E835B8();
}

void sub_1B2C36358()
{
  *(void *)(v1 - 104) = *v0;
  *(unsigned char *)(v1 - 65) = 0;
}

uint64_t sub_1B2C36368()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C363B0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B2C363E4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_1B2E835B8();
}

uint64_t sub_1B2C36410@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 - 120);
  uint64_t v5 = *(void *)(v1 - 136);
  uint64_t v4 = *(void *)(v1 - 128);
  *(void *)(v1 - 144) = a1;
  *(void *)(v1 - 136) = v5;
  *(void *)(v1 - 128) = v4;
  *(unsigned char *)(v1 - 120) = v3;
  return ActivityEventType.init(activityTypeEntityClass:)(v1 - 152, (char *)(v1 - 176));
}

void sub_1B2C3643C()
{
  *(unsigned char *)(v0 - 65) = 3;
}

void sub_1B2C36448()
{
  *(unsigned char *)(v0 - 65) = 5;
}

void sub_1B2C36454()
{
  *(unsigned char *)(v0 - 65) = 4;
}

uint64_t sub_1B2C36460()
{
  uint64_t v1 = type metadata accessor for CustomGraphDateRelationship(0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 1, 1, v1);
  return 0;
}

void sub_1B2C36490()
{
  *(unsigned char *)(v0 - 65) = 8;
}

uint64_t sub_1B2C3649C(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 0, 1, v1);
}

void sub_1B2C364B8()
{
  *(unsigned char *)(v0 - 65) = 7;
}

double sub_1B2C364C4(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = 2;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 33) = 0u;
  *(unsigned char *)(a2 + 49) = 2;
  return result;
}

void sub_1B2C364E8()
{
  *(unsigned char *)(v0 - 65) = 9;
}

uint64_t _s20IntelligencePlatform16CustomGraphEventV5_nameSaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C364FC()
{
  return swift_beginAccess();
}

uint64_t sub_1B2C36518()
{
  return v0;
}

void sub_1B2C36530()
{
  *(unsigned char *)(v0 - 104) = 2;
}

uint64_t sub_1B2C3653C()
{
  *(void *)(v2 - 120) = v1;
  return v0;
}

uint64_t _s20IntelligencePlatform24CustomGraphCalendarEventV9_isAllDaySaySbGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s20IntelligencePlatform24CustomGraphCalendarEventV5_nameSaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C36568()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2C36590()
{
  return v0;
}

uint64_t sub_1B2C365A8()
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v0);
}

uint64_t sub_1B2C365E0()
{
  return sub_1B2E836D8();
}

void sub_1B2C365F8()
{
  sub_1B29B8FA4();
}

uint64_t sub_1B2C3661C()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2C36648()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C36674()
{
  return sub_1B2E835B8();
}

void sub_1B2C366A0(uint64_t a1@<X8>)
{
  uint64_t v3 = v2 + a1;
  uint64_t v4 = *(void *)(v3 + 8);
  LOBYTE(v3) = *(unsigned char *)(v3 + 16);
  *(void *)uint64_t v1 = v4;
  *(unsigned char *)(v1 + 8) = v3;
}

uint64_t sub_1B2C366B8()
{
  return v0;
}

uint64_t sub_1B2C36718()
{
  return sub_1B2E835B8();
}

__n128 sub_1B2C36748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long a19, long long a20,__n128 a21,uint64_t a22,char a23)
{
  *(_OWORD *)uint64_t v23 = a19;
  *(_OWORD *)(v23 + 16) = a20;
  __n128 result = a21;
  *(__n128 *)(v23 + 32) = a21;
  *(void *)(v23 + 48) = a22;
  *(unsigned char *)(v23 + 56) = a23;
  return result;
}

uint64_t sub_1B2C36778()
{
  return sub_1B2E835B8();
}

uint64_t _s20IntelligencePlatform19CustomGraphLocationV14_locationLabelSaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

__n128 sub_1B2C367B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, __n128 a18, uint64_t a19, long long a20)
{
  __n128 result = a18;
  *(void *)uint64_t v20 = a16;
  *(void *)(v20 + 8) = a17;
  *(__n128 *)(v20 + 16) = a18;
  *(void *)(v20 + 32) = a19;
  *(_OWORD *)(v20 + 40) = a20;
  return result;
}

__n128 sub_1B2C367D4(uint64_t a1, __n128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  __n128 result = a9;
  *a2 = a9;
  a2[1].n128_u64[0] = v9;
  a2[1].n128_u64[1] = v15;
  a2[2].n128_u8[0] = v16;
  a2[2].n128_u64[1] = v14;
  a2[3].n128_u64[0] = v10;
  a2[3].n128_u64[1] = v11;
  a2[4].n128_u64[0] = v12;
  a2[4].n128_u8[8] = v13;
  return result;
}

uint64_t sub_1B2C367F8(float a1)
{
  *uint64_t v1 = a1;
  *(void *)(v2 - 224) = v1 + 1;
  return *(void *)(v2 - 296);
}

uint64_t sub_1B2C36828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, a3);
}

uint64_t sub_1B2C36840(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

void sub_1B2C36858(uint64_t a1@<X8>)
{
  *(void *)uint64_t v3 = a1;
  *(void *)(v3 + 8) = v1;
  *(unsigned char *)(v3 + 16) = v2;
}

uint64_t sub_1B2C36864()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C36890(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1B2C3689C()
{
  return sub_1B2E835B8();
}

uint64_t _s20IntelligencePlatform21CustomGraphSportsTeamV14_umcIdentifierSaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C368D0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + a1) = *(void *)(v2 + a1);
  return swift_bridgeObjectRelease();
}

void sub_1B2C368F4(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + a1);
  uint64_t v4 = *v3;
  LOBYTE(v3) = *((unsigned char *)v3 + 8);
  *(void *)(v2 - 104) = v4;
  *(unsigned char *)(v2 - 96) = (_BYTE)v3;
}

uint64_t sub_1B2C3690C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + a1) = *(void *)(v2 + a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C36930@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return sub_1B2E835B8();
}

uint64_t sub_1B2C36964()
{
  return sub_1B2E835B8();
}

void sub_1B2C36998()
{
  uint64_t v2 = *(void *)(v0 + 16);
  *(void *)(v1 - 128) = *(void *)(v0 + 24);
  *(void *)(v1 - 120) = v2;
}

__n128 sub_1B2C369C0()
{
  __n128 result = *(__n128 *)(v1 - 3);
  v0[29] = result;
  v0[28].n128_u64[1] = v1[3];
  *(void *)(v2 - 72) = v1[4];
  unint64_t v4 = v1[5];
  v0[28].n128_u64[0] = v1[6];
  v0[30].n128_u64[1] = v1[7];
  v0[31].n128_u64[0] = v4;
  return result;
}

void sub_1B2C36A08(void *a1)
{
  _os_log_impl(a1, v1, v2, v4, v3, 2u);
}

uint64_t sub_1B2C36A2C()
{
  return v0;
}

void sub_1B2C36A44()
{
  *(unsigned char *)(v0 - 65) = 2;
}

uint64_t sub_1B2C36A50()
{
  return swift_getAssociatedConformanceWitness();
}

__n128 sub_1B2C36A7C()
{
  *(void *)(v1 + 16) = v2;
  uint64_t v8 = (__n128 *)(v1 + 88 * v4);
  __n128 result = v0[29];
  v8[2] = result;
  v8[3].n128_u64[0] = v3;
  v8[3].n128_u64[1] = v6;
  unint64_t v10 = v0[26].n128_u64[1];
  v8[4].n128_u64[0] = v5;
  v8[4].n128_u64[1] = v10;
  unint64_t v11 = *(void *)(v7 - 72);
  v8[5].n128_u64[0] = v0[28].n128_u64[1];
  v8[5].n128_u64[1] = v11;
  unint64_t v12 = v0[28].n128_u64[0];
  v8[6].n128_u64[0] = v0[31].n128_u64[0];
  v8[6].n128_u64[1] = v12;
  v8[7].n128_u64[0] = v0[30].n128_u64[1];
  return result;
}

uint64_t sub_1B2C36AC0()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C36AE8()
{
  return sub_1B2E835B8();
}

void sub_1B2C36B00(uint64_t a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = v3;
  *(__n128 *)(v5 + 16) = a2;
  *(void *)(v5 + 32) = v4;
  *(__n128 *)(v5 + 40) = a3;
}

void sub_1B2C36B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_1B2C06034(v17, v18, v16, a6, (uint64_t)va);
}

uint64_t sub_1B2C36B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  return sub_1B2C11FD0(v17, v18, v16, a6, (uint64_t)va);
}

uint64_t sub_1B2C36B64()
{
  return sub_1B2E837A8();
}

__n128 sub_1B2C36B84()
{
  __n128 result = *(__n128 *)(v0 - 24);
  *(void *)(v1 - 72) = *(void *)(v0 + 32);
  return result;
}

uint64_t sub_1B2C36BC8()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C36BE8()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C36C00()
{
  return v0;
}

uint64_t sub_1B2C36C1C()
{
  *(void *)(v0 + *(int *)(v1 + 24)) = *(void *)(v2 + *(int *)(v1 + 24));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C36C4C()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C36C7C()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C36CAC()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C36CDC()
{
  return sub_1B2E835B8();
}

__n128 sub_1B2C36D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, unint64_t a17, unint64_t a18, __n128 a19, uint64_t a20,uint64_t a21,unint64_t a22)
{
  *(void *)(v23 + 16) = v27;
  v30 = (__n128 *)(v23 + 88 * v24);
  __n128 result = a19;
  v30[2] = a19;
  v30[3].n128_u64[0] = v25;
  v30[3].n128_u64[1] = v22;
  v30[4].n128_u64[0] = v26;
  v30[4].n128_u64[1] = a16;
  unint64_t v32 = *(void *)(v29 - 72);
  v30[5].n128_u64[0] = a18;
  v30[5].n128_u64[1] = v32;
  v30[6].n128_u64[0] = a22;
  v30[6].n128_u64[1] = a17;
  v30[7].n128_u64[0] = v28;
  return result;
}

uint64_t sub_1B2C36D4C()
{
  *(void *)(v0 + *(int *)(v1 + 28)) = *(void *)(v2 + *(int *)(v1 + 28));
  return swift_bridgeObjectRetain();
}

__n128 sub_1B2C36D7C()
{
  __n128 result = *(__n128 *)(v0 - 24);
  *(void *)(v1 - 72) = *(void *)(v0 + 32);
  return result;
}

uint64_t sub_1B2C36DBC()
{
  return swift_getAssociatedConformanceWitness();
}

unint64_t sub_1B2C36DD8()
{
  *(unsigned char *)(v0 - 65) = 1;
  return sub_1B2C13968();
}

uint64_t sub_1B2C36DF0()
{
  return swift_slowAlloc();
}

uint64_t sub_1B2C36E08()
{
  return swift_slowAlloc();
}

void sub_1B2C36E20()
{
  sub_1B29B8FA4();
}

uint64_t sub_1B2C36E38(uint64_t a1)
{
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 1, 1, v1);
  return 0;
}

uint64_t _s20IntelligencePlatform38CustomGraphLocationAddressRelationshipV22_subAdministrativeAreaSaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s20IntelligencePlatform19CustomGraphLocationV8_latLongSayAA0cde3LatG12RelationshipVGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C36E6C()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C36E84()
{
  uint64_t v4 = *(void *)(v2 - 96);
  char v5 = *(unsigned char *)(v2 - 88);
  uint64_t v6 = v0 + *(int *)(v1 + 36);
  *(void *)uint64_t v6 = *(void *)(v2 - 104);
  *(void *)(v6 + 8) = v4;
  *(unsigned char *)(v6 + 16) = v5;
  *(unsigned char *)(v2 - 65) = 6;
  return sub_1B2E835B8();
}

uint64_t sub_1B2C36ECC(uint64_t a1)
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
  return sub_1B2C14310(v1, v2);
}

BOOL sub_1B2C36EF8(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

__n128 sub_1B2C36F14()
{
  return *(__n128 *)(v0 + 88);
}

void sub_1B2C36F34(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + a1);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)(v2 - 128) = v4;
  *(void *)(v2 - 120) = v5;
  *(unsigned char *)(v2 - 112) = (_BYTE)v3;
}

uint64_t sub_1B2C36F4C()
{
  _OWORD *v0 = *v2;
  *(void *)((char *)v0 + *(int *)(v1 + 20)) = *(void *)((char *)v2 + *(int *)(v1 + 20));
  return swift_bridgeObjectRetain();
}

void sub_1B2C36F78()
{
  sub_1B29C01C8();
}

uint64_t sub_1B2C36FA8()
{
  return sub_1B2E835B8();
}

void sub_1B2C36FD4(uint64_t a1@<X8>)
{
  uint64_t v4 = v3 + v2;
  *(void *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 8) = v1;
}

BOOL sub_1B2C36FF0(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1B2C3700C()
{
  return sub_1B2E80668();
}

uint64_t sub_1B2C37030@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 104) = v1;
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 88) = *(void *)(v2 - 168);
  *(unsigned char *)(v2 - 65) = 3;
  return v2 - 104;
}

uint64_t sub_1B2C37050(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1B2C3705C()
{
  return sub_1B2E836D8();
}

void *sub_1B2C37088(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

uint64_t sub_1B2C370A0()
{
  return sub_1B29D1EF4(v1, v0);
}

uint64_t sub_1B2C370C4()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B2C370E8()
{
  return sub_1B2E837A8();
}

void sub_1B2C37100()
{
  uint64_t v5 = v3 + v2;
  *(void *)uint64_t v5 = v4;
  *(void *)(v5 + 8) = v1;
  *(unsigned char *)(v5 + 16) = v0;
}

void sub_1B2C37114()
{
  *(unsigned char *)(v0 - 65) = 6;
}

void sub_1B2C37120()
{
  uint64_t v2 = v0[2];
  *(void *)(v1 - 128) = v0[3];
  *(void *)(v1 - 120) = v2;
  uint64_t v3 = v0[4];
  *(void *)(v1 - 144) = v0[5];
  *(void *)(v1 - 136) = v3;
}

__n128 sub_1B2C37154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17, long long a18, char a19, __n128 a20,long long a21,uint64_t a22)
{
  __n128 result = a20;
  *(void *)uint64_t v22 = a15;
  *(void *)(v22 + 8) = a16;
  *(_OWORD *)(v22 + 16) = a17;
  *(_OWORD *)(v22 + 32) = a18;
  *(unsigned char *)(v22 + 48) = a19;
  *(__n128 *)(v22 + 56) = a20;
  *(_OWORD *)(v22 + 72) = a21;
  *(void *)(v22 + 88) = a22;
  return result;
}

uint64_t sub_1B2C371A0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C371B8()
{
  return v0 - 104;
}

uint64_t sub_1B2C371C8()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2C371E0()
{
  return v0;
}

uint64_t sub_1B2C371F0(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 0, 1, v1);
}

uint64_t sub_1B2C3720C()
{
  return *(void *)(v0 + 152);
}

uint64_t sub_1B2C3721C(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t sub_1B2C37234()
{
  return swift_release();
}

uint64_t sub_1B2C3724C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 - 360) = v5;
  *(void *)(v6 - 384) = a5;
  *(void *)(v6 - 392) = a4;
  *(void *)(v6 - 72) = a3;
  *(void *)(v6 - 376) = a2;
  *(void *)(v6 - 368) = result;
  return result;
}

uint64_t sub_1B2C3727C(uint64_t a1)
{
  *(void *)(v1 - 72) = a1;
  return sub_1B2E82FB8();
}

uint64_t sub_1B2C372A4(uint64_t a1)
{
  *(void *)(v1 - 72) = a1;
  return sub_1B2E82FB8();
}

uint64_t sub_1B2C372CC()
{
  return 0;
}

uint64_t sub_1B2C372E8()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C37304()
{
  return 0;
}

uint64_t sub_1B2C37320()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_1B2C37330()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_1B2C37340()
{
  return sub_1B2E835B8();
}

__n128 sub_1B2C37368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, long long a18, __n128 a19, long long a20,uint64_t a21,long long a22)
{
  __n128 result = a19;
  *(void *)uint64_t v22 = a16;
  *(void *)(v22 + 8) = a17;
  *(_OWORD *)(v22 + 16) = a18;
  *(__n128 *)(v22 + 32) = a19;
  *(_OWORD *)(v22 + 48) = a20;
  *(void *)(v22 + 64) = a21;
  *(_OWORD *)(v22 + 72) = a22;
  return result;
}

uint64_t sub_1B2C37398()
{
  return v0;
}

__n128 sub_1B2C373AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __n128 a19, long long a20,char a21)
{
  __n128 result = a19;
  *(__n128 *)uint64_t v21 = a19;
  *(_OWORD *)(v21 + 16) = a20;
  *(unsigned char *)(v21 + 32) = a21;
  return result;
}

uint64_t sub_1B2C373EC(float a1)
{
  *uint64_t v2 = a1;
  return v1 + 152;
}

unint64_t sub_1B2C37400()
{
  return sub_1B2B811DC();
}

void sub_1B2C37420()
{
  EntityClass.ancestorClassesSet.getter();
}

uint64_t _s20IntelligencePlatform15CustomGraphSongV6_genreSaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

void *sub_1B2C3745C()
{
  return sub_1B29AEC7C(v0, v0[3]);
}

uint64_t sub_1B2C37480(uint64_t a1)
{
  uint64_t v5 = (uint64_t *)(v1 + *(int *)(a1 + 24));
  return sub_1B2B94E40(v2, v3, v5);
}

uint64_t sub_1B2C374A0(uint64_t result)
{
  *(void *)(result + 16) = v1;
  *(void *)(v2 - 408) = result + 16;
  return result;
}

uint64_t sub_1B2C374B4(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1B2C374C0()
{
  uint64_t v4 = *(void *)(v1 - 104);
  uint64_t v3 = *(void *)(v1 - 96);
  uint64_t v5 = *(void *)(v1 - 88);
  uint64_t v7 = *(void *)(v1 - 120);
  uint64_t v6 = *(void **)(v1 - 112);
  *uint64_t v6 = *(void *)(v1 - 128);
  v6[1] = v7;
  v6[2] = *(void *)(v1 - 136);
  v6[3] = v0;
  v6[4] = v4;
  v6[5] = v3;
  v6[6] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C374F8()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C37510()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C37528()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B2C37548()
{
  return sub_1B2E837A8();
}

void sub_1B2C37580(uint64_t a1@<X8>)
{
  uint64_t v4 = v3 + v2;
  *(void *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 8) = v1;
}

__n128 sub_1B2C37594@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + a1;
  *(void *)(v2 - 104) = *(void *)v3;
  __n128 result = *(__n128 *)(v3 + 8);
  *(__n128 *)(v2 - 96) = result;
  return result;
}

void sub_1B2C375AC(uint64_t a1@<X8>)
{
  *(void *)(v2 - 104) = *(void *)(v1 + a1);
}

uint64_t sub_1B2C375B8()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C375D4()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2C37610()
{
  return sub_1B2E83A38();
}

uint64_t sub_1B2C37634()
{
  return v0 - 104;
}

uint64_t sub_1B2C3764C()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C37680()
{
  return sub_1B2E835B8();
}

void sub_1B2C376A4(uint64_t a1@<X8>)
{
  *(void *)(v1 - 416) = a1;
}

uint64_t sub_1B2C376B0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C376E4(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1B2C37708()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2C3772C()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B2C37744()
{
  return 0;
}

uint64_t sub_1B2C3775C()
{
  return v0;
}

uint64_t sub_1B2C37774()
{
  return v0;
}

uint64_t sub_1B2C37784()
{
  return sub_1B2E837A8();
}

__n128 sub_1B2C377B8()
{
  return *(__n128 *)(v0 + 88);
}

void sub_1B2C377D0(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 39);
  EntityClass.init(intValue:)(v3, v1 - 152);
}

uint64_t sub_1B2C377E8()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_1B2C37804()
{
  sub_1B29FB9A8();
}

void sub_1B2C37820()
{
  *(unsigned char *)(v0 - 104) = 3;
}

uint64_t sub_1B2C37838()
{
  return *(void *)(v0 - 192);
}

uint64_t sub_1B2C37848()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C37878()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C378A8()
{
  return sub_1B2E836D8();
}

__n128 sub_1B2C378C0@<Q0>(uint64_t a1@<X8>)
{
  char v3 = (__n128 *)(v1 + a1);
  uint64_t v4 = (__n128 *)(v2 + a1);
  __n128 result = *v4;
  *char v3 = *v4;
  v3[1].n128_u8[0] = v4[1].n128_u8[0];
  return result;
}

uint64_t sub_1B2C378E4()
{
  return sub_1B2E835B8();
}

void sub_1B2C37914(char a1@<W8>)
{
  *(unsigned char *)(v1 + 16) = a1;
}

uint64_t sub_1B2C37920()
{
  return sub_1B2E835B8();
}

void *sub_1B2C37950()
{
  uint64_t v2 = v0[3];
  *(void *)(v1 - 136) = v0;
  return sub_1B29AEC7C(v0, v2);
}

uint64_t sub_1B2C37978(uint64_t a1, uint64_t a2)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v2);
}

void sub_1B2C37990()
{
  uint64_t v3 = (uint64_t *)(v0 + *(int *)(v1 + 56));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)(v2 - 104) = v4;
  *(void *)(v2 - 96) = v5;
  *(unsigned char *)(v2 - 88) = (_BYTE)v3;
  *(unsigned char *)(v2 - 65) = 10;
}

uint64_t sub_1B2C379B4()
{
  return swift_release();
}

uint64_t sub_1B2C379CC()
{
  return swift_release();
}

void sub_1B2C379E4(uint64_t a1@<X8>)
{
  *(void *)(v1 - 384) = a1;
}

uint64_t sub_1B2C379F0()
{
  void *v0 = *v2;
  return sub_1B2C132B4(v1);
}

uint64_t sub_1B2C37A20()
{
  void *v0 = *v2;
  return sub_1B2C132B4(v1);
}

void sub_1B2C37A50()
{
  uint64_t v2 = v0[6];
  *(void *)(v1 - 160) = v0[7];
  *(void *)(v1 - 152) = v2;
  uint64_t v3 = v0[9];
  *(void *)(v1 - 184) = v0[8];
  *(void *)(v1 - 176) = v3;
  *(void *)(v1 - 168) = v0[10];
}

uint64_t sub_1B2C37A80(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1B2C37A8C(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1B2C37A98(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1B2C37AA4(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

void sub_1B2C37AB0(void *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  a1[8] = v17;
  a1[9] = v16;
  uint64_t v20 = *(void *)(v19 - 72);
  a1[10] = a11;
  a1[11] = v20;
  a1[12] = a16;
  a1[13] = a10;
  a1[14] = v18;
}

void sub_1B2C37AD4()
{
  sub_1B29C01C8();
}

uint64_t sub_1B2C37AEC()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C37B04()
{
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, v3);
  uint64_t result = type metadata accessor for CustomGraphPerson(0);
  *(void *)(v4 - 72) = result;
  *(void *)(v2 + *(int *)(result + 68)) = v0;
  return result;
}

uint64_t sub_1B2C37B40()
{
  return v0;
}

uint64_t sub_1B2C37B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_1B2A51418(a2, 0, a4, v5, v7, v6, (uint64_t *)va);
}

uint64_t sub_1B2C37B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, ...)
{
  va_start(va, a6);
  return sub_1B2A51C00(v9, a3, 0, a5, v6, v8, v7, (uint64_t *)va);
}

void sub_1B2C37BC4()
{
  uint64_t v5 = v2 + *(int *)(v3 + 40);
  *(void *)uint64_t v5 = v4;
  *(void *)(v5 + 8) = v1;
  *(unsigned char *)(v5 + 16) = v0 == 0;
}

void sub_1B2C37BE8()
{
  *(unsigned char *)(v0 - 65) = 0;
}

uint64_t sub_1B2C37BF4()
{
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[14];
  return sub_1B2B6E950(v2, v4, v3);
}

uint64_t sub_1B2C37C24()
{
  return v0;
}

uint64_t sub_1B2C37C54()
{
  *(unsigned char *)(v0 - 65) = 4;
  return v0 - 104;
}

__n128 sub_1B2C37C68()
{
  __n128 result = *v2;
  __n128 *v0 = *v2;
  *(unint64_t *)((char *)v0->n128_u64 + *(int *)(v1 + 20)) = *(unint64_t *)((char *)v2->n128_u64
                                                                                        + *(int *)(v1 + 20));
  return result;
}

void sub_1B2C37C88()
{
  uint64_t v2 = *(void *)(v1 + 8);
  *(unsigned char *)(v0 + 16) = *(unsigned char *)(v1 + 16);
  *(void *)(v0 + 8) = v2;
}

uint64_t sub_1B2C37CF8()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C37D24()
{
  return v0;
}

void sub_1B2C37D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B29BF6BC(a1, a2, v20 - 192, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_1B2C37D60(uint64_t a1@<X8>)
{
  *(void *)(v1 - 400) = a1;
}

uint64_t sub_1B2C37D7C()
{
  return swift_arrayDestroy();
}

void sub_1B2C37DF4(uint64_t a1@<X8>)
{
  *(void *)(v1 - 320) = *(void *)(a1 - 256);
}

void sub_1B2C37E04(uint64_t a1@<X8>)
{
  *(void *)(v1 - 328) = *(void *)(a1 - 256);
}

void sub_1B2C37E14(uint64_t a1@<X8>)
{
  *(void *)(v1 - 312) = *(void *)(a1 - 256);
}

void sub_1B2C37E44()
{
  void *v0 = *v2;
  v0[1] = v1;
}

uint64_t sub_1B2C37E84()
{
  return swift_allocObject();
}

uint64_t sub_1B2C37E9C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C37EC8(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C37EF4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C37F0C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C37F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v2 + a1;
  char v4 = *(unsigned char *)(v3 + 40);
  long long v5 = *(_OWORD *)(v3 + 24);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v3 + 8);
  *(_OWORD *)(v1 + 16) = v5;
  *(unsigned char *)(v1 + 32) = v4;
  return v5;
}

uint64_t sub_1B2C37F48@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_1B2C37F58(uint64_t a1)
{
  uint64_t v5 = v2 + *(int *)(a1 + 28);
  return sub_1B2B8F380(v5, v3, v1);
}

uint64_t sub_1B2C37F78()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C37F90(uint64_t result, uint64_t a2)
{
  uint64_t v6 = (void *)(v4 + *(int *)(*(void *)(v5 - 72) + 72));
  *(void *)(v2 + 496) = v3;
  *uint64_t v6 = v3;
  v6[1] = result;
  v6[2] = a2;
  return result;
}

uint64_t sub_1B2C37FBC()
{
  return sub_1B2E836D8();
}

void sub_1B2C37FDC()
{
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  *(unsigned char *)(v0 + 16) = *(unsigned char *)(v1 + 16);
}

void sub_1B2C37FF0(char a1@<W8>)
{
  uint64_t v5 = v3 + *(int *)(*(void *)(v4 - 72) + 76);
  *(void *)(v2 + 488) = v1;
  *(void *)uint64_t v5 = v1;
  *(unsigned char *)(v5 + 8) = a1;
}

void sub_1B2C38010()
{
  *(void *)(*(void *)v0 + 16) = v1 + 1;
}

uint64_t sub_1B2C38024()
{
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 1, 1, v1);
  return type metadata accessor for CustomGraphActivityEvent(0);
}

uint64_t sub_1B2C3805C(uint64_t result)
{
  *(void *)(v1 - 200) = result;
  *(void *)(v1 - 192) = result;
  return result;
}

uint64_t sub_1B2C3806C()
{
  return v0;
}

uint64_t sub_1B2C3807C()
{
  return sub_1B2E83988();
}

uint64_t sub_1B2C38098()
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 0, 1, v1);
}

uint64_t sub_1B2C380B8()
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 1, 1, v1);
}

unint64_t sub_1B2C380D8()
{
  *(unsigned char *)(v0 - 65) = 3;
  return sub_1B2C13A94();
}

unint64_t sub_1B2C380F4()
{
  *(unsigned char *)(v0 - 65) = 7;
  return sub_1B2C140F8();
}

unint64_t sub_1B2C38110()
{
  *(unsigned char *)(v0 - 65) = 4;
  return sub_1B2C13BC4();
}

unint64_t sub_1B2C3812C()
{
  *(unsigned char *)(v0 - 65) = 8;
  return sub_1B2C141C4();
}

uint64_t sub_1B2C38148()
{
  return sub_1B2E837A8();
}

void sub_1B2C38194()
{
  uint64_t v5 = v2 + *(int *)(v3 + 40);
  *(void *)uint64_t v5 = v4;
  *(void *)(v5 + 8) = v1;
  *(unsigned char *)(v5 + 16) = v0 == 0;
}

uint64_t sub_1B2C381D4(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1B2C381E4()
{
  return v0;
}

uint64_t sub_1B2C38200()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B2C38228()
{
  return v0;
}

uint64_t sub_1B2C38260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v12 = v9[1];
  uint64_t v13 = v9[2];
  uint64_t v14 = v9[4];
  uint64_t v15 = v9[5];
  uint64_t v16 = v9[9];
  uint64_t v17 = v9[10];
  uint64_t v18 = *(unsigned int *)v9;
  return sub_1B2A5347C(v12, v13, v14, v16, v17, v15, v10, v18, a9);
}

__n128 sub_1B2C38288@<Q0>(uint64_t a1@<X8>)
{
  *(void *)uint64_t v2 = a1;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(v3 - 120);
  __n128 result = *(__n128 *)(v3 - 104);
  *(__n128 *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 40) = v1;
  return result;
}

uint64_t sub_1B2C382C0()
{
  *(void *)(v1 - 128) = v0;
  return 255;
}

void sub_1B2C382DC()
{
  *(unsigned char *)(v0 - 65) = 12;
}

void sub_1B2C382E8()
{
  *(unsigned char *)(v0 - 65) = 11;
}

uint64_t sub_1B2C382F4()
{
  return swift_release();
}

uint64_t sub_1B2C3830C()
{
  return swift_release();
}

void sub_1B2C38324(uint64_t a1@<X8>)
{
  *(void *)(a1 - 256) = v2;
  *(void *)(v4 - 312) = v1;
  *(void *)(v4 - 304) = v3;
}

void sub_1B2C3834C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 424) = a1;
}

void sub_1B2C38358(uint64_t a1@<X8>)
{
  *(void *)(v1 - 376) = a1;
}

void sub_1B2C38364(uint64_t a1@<X8>)
{
  *(void *)(v1 - 336) = a1;
}

void sub_1B2C38370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 - 296) = v5;
  *(void *)(v6 - 320) = a5;
  *(void *)(v6 - 328) = a4;
}

uint64_t _s20IntelligencePlatform17CustomGraphPersonV19phoneticMiddleNamesSaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C38394()
{
  *(void *)(v0 - 88) = *(void *)(v0 - 160);
  *(unsigned char *)(v0 - 65) = 2;
  return v0 - 104;
}

uint64_t sub_1B2C383D8(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 28);
  uint64_t v3 = type metadata accessor for CustomGraphDateRelationship(0);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v3);
}

uint64_t sub_1B2C38418(uint64_t a1)
{
  *(void *)(v1 + 152) = a1;
  return v1 + 152;
}

uint64_t _s20IntelligencePlatform24CustomGraphCalendarEventV10organizersSayAA0cD20AttendeeRelationshipVyAA0cD6PersonVGGvg_0()
{
  return swift_bridgeObjectRetain();
}

__n128 sub_1B2C3843C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __n128 a19)
{
  *(void *)(v20 + 16) = v23;
  uint64_t v24 = (__n128 *)(v20 + 88 * v21);
  __n128 result = a19;
  v24[2] = a19;
  v24[3].n128_u64[0] = v22;
  v24[3].n128_u64[1] = v19;
  return result;
}

void sub_1B2C38458()
{
  JUMPOUT(0x1B3EB1100);
}

uint64_t sub_1B2C38470()
{
  *(void *)(v1 - 136) = *(void *)(v1 - 96);
  *(void *)(v1 - 128) = v0;
  *(unsigned char *)(v1 - 65) = 2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C38498()
{
  return sub_1B2E835B8();
}

__n128 sub_1B2C384C0()
{
  return *(__n128 *)(v0 + 72);
}

uint64_t sub_1B2C384DC()
{
  return sub_1B2E82408();
}

uint64_t sub_1B2C384F4()
{
  return v0;
}

double sub_1B2C38510@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 33) = 0u;
  return result;
}

uint64_t sub_1B2C38564()
{
  *(_OWORD *)(v0 - 112) = *(_OWORD *)(v0 - 96);
  return v0 - 112;
}

__n128 sub_1B2C38580()
{
  *(void *)(v0 + 16) = *(void *)(v1 - 104);
  __n128 result = *(__n128 *)(v1 - 96);
  *(__n128 *)(v0 + 24) = result;
  *(unsigned char *)(v1 - 104) = 3;
  return result;
}

void sub_1B2C3859C()
{
  *(void *)(v1 - 112) = v0;
}

void sub_1B2C385A8(__n128 *a1@<X8>, __n128 a2@<Q0>)
{
  a1[1] = a2;
  a1[2] = a2;
  *a1 = a2;
}

void sub_1B2C385C0(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + a1);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)(v2 - 104) = v4;
  *(void *)(v2 - 96) = v5;
  *(unsigned char *)(v2 - 88) = (_BYTE)v3;
}

uint64_t sub_1B2C385D8()
{
  return sub_1B2E836D8();
}

void sub_1B2C385FC()
{
  sub_1B29B7048();
}

void sub_1B2C38620()
{
  sub_1B29B7048();
}

void sub_1B2C38644(uint64_t a1@<X8>)
{
  *(void *)(v1 + a1) = *(void *)(v2 + a1);
}

uint64_t sub_1B2C38674()
{
  uint64_t v2 = *v0;
  return sub_1B2C132B4(v2);
}

void sub_1B2C386A4()
{
  uint64_t v3 = *v0;
  *(void *)(v3 + 16) = v1 + 1;
  *(void *)(v3 + 8 * v1 + 32) = v2;
}

uint64_t sub_1B2C386D4()
{
  return v0 - 136;
}

uint64_t sub_1B2C386E4()
{
  return swift_bridgeObjectRelease();
}

void sub_1B2C38700(uint64_t a1@<X8>)
{
  *(void *)(v1 - 432) = a1;
}

__n128 sub_1B2C38724@<Q0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, long long a8, long long a9, __n128 a10)
{
  *(_OWORD *)uint64_t v10 = a8;
  *(_OWORD *)(v10 + 16) = a9;
  __n128 result = a10;
  *(__n128 *)(v10 + 32) = a10;
  *(void *)(v10 + 48) = a1;
  return result;
}

uint64_t sub_1B2C38754()
{
  return v0;
}

void sub_1B2C38764()
{
  *(void *)(v0 + *(int *)(v1 + 28)) = v3;
  *(void *)(v0 + *(int *)(v1 + 32)) = v2;
}

uint64_t sub_1B2C3877C()
{
  return v0;
}

void *sub_1B2C387A4(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t sub_1B2C387BC(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 - 384);
  *(void *)(result + 16) = *(void *)(v1 - 392);
  *(void *)(result + 24) = v2;
  return result;
}

uint64_t sub_1B2C387D4()
{
  return swift_allocObject();
}

uint64_t sub_1B2C387EC()
{
  return *(void *)(v0 - 112);
}

uint64_t sub_1B2C387FC()
{
  return swift_release();
}

uint64_t sub_1B2C38830@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 - 256) = v1;
  return swift_retain();
}

uint64_t sub_1B2C38848()
{
  return swift_allocObject();
}

void sub_1B2C38860()
{
  *(unsigned char *)(v0 - 65) = 0;
}

void sub_1B2C3886C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 368) = a1;
}

uint64_t sub_1B2C38890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return a18;
}

void sub_1B2C388A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  EntityClass.init(intValue:)(SHIBYTE(a2), (uint64_t)va);
}

void sub_1B2C388CC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  *(void *)(v4 - 72) = a3;
  *(void *)(v4 - 120) = a2;
  *(void *)(v4 - 152) = a1;
  *(void *)(v4 - 184) = a4;
}

uint64_t sub_1B2C388FC()
{
  return v0;
}

uint64_t sub_1B2C38914(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  return swift_bridgeObjectRelease();
}

void sub_1B2C38938()
{
  *(void *)(v1 - 104) = v0;
  *(unsigned char *)(v1 - 65) = 0;
}

uint64_t sub_1B2C38954(uint64_t result)
{
  *(void *)(result + 16) = v2;
  *(void *)(v1 + 32) = result + 16;
  return result;
}

uint64_t sub_1B2C38964(uint64_t result)
{
  *(void *)(result + 16) = v2;
  *(void *)(v1 + 48) = result + 16;
  return result;
}

void sub_1B2C38974(uint64_t a1@<X8>)
{
  *uint64_t v1 = *(unsigned char *)(v2 + a1 + 8);
}

uint64_t sub_1B2C38984@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1 + 8);
}

uint64_t sub_1B2C38994()
{
  return swift_getAssociatedTypeWitness();
}

void sub_1B2C389D4(uint64_t a1@<X8>)
{
  *(void *)(v1 - 464) = a1;
}

__n128 sub_1B2C389E0@<Q0>(uint64_t a1@<X8>)
{
  *(void *)uint64_t v1 = a1;
  __n128 result = *(__n128 *)(v2 - 96);
  *(__n128 *)(v1 + 8) = result;
  return result;
}

void sub_1B2C389F0(char a1@<W8>)
{
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v1;
  *(unsigned char *)(v2 + 16) = a1;
}

void sub_1B2C389FC()
{
  sub_1B29B7048();
}

void sub_1B2C38A20(uint64_t a1@<X8>)
{
  *(void *)(*(void *)v1 + 16) = a1;
}

uint64_t sub_1B2C38A2C()
{
  return *(void *)(*(void *)v0 + 16);
}

void sub_1B2C38A58()
{
  sub_1B29B7048();
}

void sub_1B2C38A7C()
{
  sub_1B29C01C8();
}

void sub_1B2C38AA0()
{
  sub_1B29C01C8();
}

void sub_1B2C38AC4()
{
  sub_1B29B7048();
}

void sub_1B2C38AE8()
{
  sub_1B29B7048();
}

void sub_1B2C38B0C()
{
  sub_1B29C01C8();
}

uint64_t sub_1B2C38B30()
{
  return v0;
}

void sub_1B2C38B3C()
{
  sub_1B29B7048();
}

void sub_1B2C38B60()
{
  *(void *)(v0 + 16) = v2;
  *(unsigned char *)(v0 + v1 + 32) = v3;
}

void *sub_1B2C38B80(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

__n128 sub_1B2C38B98()
{
  return *(__n128 *)(v0 + 72);
}

uint64_t sub_1B2C38BB0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C38BD8()
{
  return v0;
}

uint64_t sub_1B2C38BE4(uint64_t result)
{
  *(void *)(v1 - 112) = result;
  return result;
}

void sub_1B2C38C0C()
{
  uint64_t v5 = v2 + *(int *)(v4 + 44);
  *(void *)uint64_t v5 = v3;
  *(void *)(v5 + 8) = v1;
  *(unsigned char *)(v5 + 16) = v0;
}

uint64_t sub_1B2C38C24()
{
  return v0;
}

unint64_t sub_1B2C38C3C()
{
  *(unsigned char *)(v0 - 65) = 9;
  return sub_1B2C14240();
}

uint64_t sub_1B2C38C58(void *a1, void *a2)
{
  uint64_t result = a2[1];
  *a1 = *a2;
  a1[1] = result;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  return result;
}

uint64_t sub_1B2C38C70()
{
  return swift_release();
}

void sub_1B2C38C88()
{
  uint64_t v3 = *v1;
  *(void *)(v3 + 16) = v0 + 1;
  *(void *)(v3 + 8 * v0 + 32) = v2;
}

uint64_t sub_1B2C38CAC(uint64_t result)
{
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1B2C38CBC()
{
  return *(void *)(v0 - 248);
}

uint64_t sub_1B2C38CD4()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_1B2C38CEC()
{
  return v0;
}

uint64_t sub_1B2C38D04()
{
  return v0;
}

void sub_1B2C38D2C()
{
  *(void *)(v1 + *(int *)(v0 + 32)) = *(void *)(v2 - 104);
}

uint64_t sub_1B2C38D50()
{
  return v0;
}

uint64_t sub_1B2C38D64()
{
  return sub_1B2E83718();
}

unint64_t sub_1B2C38D84()
{
  *(unsigned char *)(v0 - 65) = 5;
  return sub_1B2C13C5C();
}

void sub_1B2C38DA8(uint64_t a1@<X8>)
{
  *(void *)(v1 + a1) = *(void *)(v2 + a1);
}

uint64_t sub_1B2C38DBC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_1B2C132B4(v2);
}

void sub_1B2C38DD4()
{
  *(void *)(*(void *)v0 + 16) = v1 + 1;
}

uint64_t sub_1B2C38DE8()
{
  return v0;
}

uint64_t sub_1B2C38DFC()
{
  return v0 - 104;
}

uint64_t sub_1B2C38E10()
{
  return v0;
}

uint64_t sub_1B2C38E24()
{
  return *(void *)(v0 - 256);
}

void sub_1B2C38E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_1B2C05E70(v32, v33, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32);
}

void sub_1B2C38E58(uint64_t a1@<X8>)
{
  *(void *)(v1 - 448) = a1;
}

__n128 sub_1B2C38E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long a15, long long a16, __n128 a17, long long a18)
{
  *uint64_t v18 = a15;
  v18[1] = a16;
  __n128 result = a17;
  v18[2] = a17;
  v18[3] = a18;
  return result;
}

uint64_t sub_1B2C38E78(void (*a1)(void *__return_ptr, uint64_t, void, uint64_t, void *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void *__return_ptr, void), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  return sub_1B2BF5990(a1, v14, a4, a6, a7, a8, (uint64_t *)va);
}

uint64_t sub_1B2C38E98()
{
  return swift_arrayDestroy();
}

uint64_t sub_1B2C38EB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C38EEC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C38F04()
{
  return v0;
}

uint64_t sub_1B2C38F18()
{
  return swift_bridgeObjectRelease();
}

void sub_1B2C38F30()
{
  *(_DWORD *)(v0 - 144) = 0;
}

uint64_t sub_1B2C38F7C()
{
  return sub_1B2E82898();
}

void sub_1B2C38F9C()
{
  uint64_t v5 = v3 + v2;
  *(void *)uint64_t v5 = v4;
  *(void *)(v5 + 8) = v1;
  *(unsigned char *)(v5 + 16) = v0;
}

uint64_t sub_1B2C38FD4@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_1B2C38FE0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C38FF8()
{
  return swift_bridgeObjectRelease();
}

void sub_1B2C39010(uint64_t a1@<X8>)
{
  uint64_t v5 = *(void *)(v1 - 256) + a1;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 16) = v4;
}

uint64_t sub_1B2C39024()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C39044()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C3905C()
{
  return swift_bridgeObjectRelease();
}

void sub_1B2C39088(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 - 256);
  *(void *)(v2 - 136) = v1;
  *(void *)(v2 - 128) = v3;
}

void sub_1B2C39094()
{
  *(_DWORD *)(v0 - 200) = *(unsigned __int8 *)(v0 - 136);
}

uint64_t sub_1B2C390A8()
{
  return *(void *)(v0 - 328);
}

uint64_t sub_1B2C390B4()
{
  return swift_bridgeObjectRelease();
}

void sub_1B2C390CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 + 24) = (char *)&a9 - v9;
}

void sub_1B2C390E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 128) = (char *)&a9 - v9;
}

void sub_1B2C39108(uint64_t a1@<X8>)
{
  *(void *)(v1 - 296) = a1;
}

uint64_t sub_1B2C39114(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *__return_ptr, void), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  return sub_1B2BF77A0(a1, a6, (uint64_t *)va);
}

uint64_t sub_1B2C3914C(uint64_t result)
{
  *(void *)(v1 + 312) = result;
  *(void *)(result + 16) = v2;
  *(void *)(v1 + 184) = result + 16;
  return result;
}

uint64_t sub_1B2C39160(uint64_t result)
{
  *(void *)(v1 + 432) = result;
  *(void *)(result + 16) = v2;
  *(void *)(v1 + 200) = result + 16;
  return result;
}

uint64_t sub_1B2C39174(uint64_t result)
{
  *(void *)(v1 + 440) = result;
  *(void *)(result + 16) = v2;
  *(void *)(v1 + 48) = result + 16;
  return result;
}

uint64_t sub_1B2C3919C()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2C391BC()
{
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[27];
  return sub_1B2B6ED74(v2, v3, v4);
}

__n128 sub_1B2C391E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, unint64_t a16, __n128 a17)
{
  __n128 result = a17;
  v17->n128_u64[0] = a15;
  v17->n128_u64[1] = a16;
  v17[1] = a17;
  return result;
}

uint64_t sub_1B2C391FC(uint64_t result)
{
  *(void *)(result + 16) = v1;
  *(void *)(v2 - 392) = result + 16;
  return result;
}

uint64_t sub_1B2C39210@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

double sub_1B2C3921C()
{
  return 0.0;
}

uint64_t sub_1B2C39230()
{
  return type metadata accessor for CustomGraphDateRelationship(0);
}

uint64_t sub_1B2C3924C()
{
  return 0;
}

void sub_1B2C39260(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_1B2C39280(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_1B2C392A0()
{
  uint64_t v3 = *v1;
  *(void *)(v0 + 144) = *v1;
  *(void *)(v2 + 88) = v3;
}

void sub_1B2C392B4(uint64_t a1@<X8>)
{
  *(void *)(v1 - 472) = a1;
}

void sub_1B2C392C0(uint64_t a1@<X8>)
{
  *(void *)(v1 - 456) = a1;
}

uint64_t sub_1B2C392CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C392FC()
{
  return swift_bridgeObjectRetain();
}

void sub_1B2C39314(char a1@<W8>)
{
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v1;
  *(unsigned char *)(v2 + 16) = a1;
}

void sub_1B2C39320()
{
  *(void *)(*(void *)v0 + 16) = v1 + 1;
}

uint64_t sub_1B2C39340()
{
  *(unsigned char *)(v0 - 65) = 2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C39360()
{
  return swift_bridgeObjectRelease();
}

void sub_1B2C39378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_1B2BF7950(a1, (uint64_t)&a9, v32, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32);
}

uint64_t sub_1B2C393A4()
{
  return sub_1B2E80668();
}

uint64_t sub_1B2C393C4(uint64_t *a1)
{
  uint64_t v4 = *(void (**)(uint64_t *))(v2 - 72);
  return sub_1B2A52464(a1, v1, v4);
}

uint64_t sub_1B2C393E4()
{
  return v0;
}

uint64_t sub_1B2C393F0()
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 0, 1, v0);
}

void sub_1B2C39410(char a1@<W8>)
{
  uint64_t v5 = v3 + *(int *)(v4 + 52);
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = v2;
  *(unsigned char *)(v5 + 16) = a1;
}

uint64_t sub_1B2C39424()
{
  return sub_1B2C33C4C(v1, v0);
}

uint64_t sub_1B2C3943C()
{
  return v0;
}

uint64_t sub_1B2C39470(uint64_t result)
{
  *(void *)(v1 + 88) = result;
  return result;
}

uint64_t sub_1B2C3947C()
{
  uint64_t v2 = *(void *)(v0 - 88);
  *(unsigned char *)(v0 - 65) = 4;
  *(void *)(v0 - 184) = v2;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1B2C3949C()
{
  *(unsigned char *)(v0 - 65) = 2;
  return sub_1B2C13968();
}

void *sub_1B2C394B4()
{
  return sub_1B29AEC7C(v0, v1);
}

uint64_t sub_1B2C394D4()
{
  return v0;
}

uint64_t sub_1B2C394E8()
{
  return v0;
}

uint64_t sub_1B2C394FC()
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 0, 1, v1);
}

uint64_t sub_1B2C3951C()
{
  return v0;
}

uint64_t sub_1B2C39530()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C39548()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B2C39568()
{
  return v0;
}

uint64_t sub_1B2C3958C(uint64_t result, int a2)
{
  *(void *)(result + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1B2C39598(uint64_t result, int a2)
{
  *(void *)(result + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1B2C395A4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 16) = a2;
  return result;
}

uint64_t sub_1B2C395B0()
{
  return v0;
}

uint64_t sub_1B2C395C4()
{
  return v0;
}

__n128 sub_1B2C395D8()
{
  unint64_t v3 = *(void *)(v2 - 104);
  __n128 result = *(__n128 *)(v2 - 96);
  v0->n128_u64[0] = v1;
  v0->n128_u64[1] = v3;
  v0[1] = result;
  return result;
}

uint64_t CustomGraphPerson.name.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v9 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t CustomGraphPerson.Name.fullNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CustomGraphPerson.Name.prefixes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CustomGraphPerson.Name.givenNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CustomGraphPerson.Name.middleNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CustomGraphPerson.Name.familyNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CustomGraphPerson.Name.previousFamilyNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CustomGraphPerson.Name.suffixes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CustomGraphPerson.Name.birthNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GDGraphPerson.suggestedNameComponentsInner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B2E80368();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v25 - v9;
  sub_1B2E80358();
  sub_1B2E80358();
  id v11 = objc_msgSend(v1, sel_prefixes);
  uint64_t v12 = sub_1B2E82838();

  if (*(void *)(v12 + 16)) {
    sub_1B29A0AA4();
  }
  else {
    sub_1B29A5048();
  }
  swift_bridgeObjectRelease();
  sub_1B29A1CA4();
  sub_1B2E80318();
  id v13 = objc_msgSend(v2, sel_givenNames);
  uint64_t v14 = sub_1B2E82838();

  if (*(void *)(v14 + 16)) {
    sub_1B29A0AA4();
  }
  else {
    sub_1B29A5048();
  }
  swift_bridgeObjectRelease();
  sub_1B29A1CA4();
  sub_1B2E802E8();
  id v15 = objc_msgSend(v2, sel_middleNames);
  uint64_t v16 = sub_1B2E82838();

  if (*(void *)(v16 + 16)) {
    sub_1B29A0AA4();
  }
  else {
    sub_1B29A5048();
  }
  swift_bridgeObjectRelease();
  sub_1B29A1CA4();
  sub_1B2E80308();
  id v17 = objc_msgSend(v2, sel_familyNames);
  uint64_t v18 = sub_1B2E82838();

  if (*(void *)(v18 + 16)) {
    sub_1B29A0AA4();
  }
  else {
    sub_1B29A5048();
  }
  swift_bridgeObjectRelease();
  sub_1B29A1CA4();
  sub_1B2E802F8();
  id v19 = objc_msgSend(v2, sel_suffixes);
  uint64_t v20 = sub_1B2E82838();

  if (*(void *)(v20 + 16)) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_1B2E80328();
  sub_1B2C3A33C();
  char v21 = sub_1B2E82328();
  unint64_t v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22(v10, v4);
  if (v21)
  {
    v22(v8, v4);
    uint64_t v23 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v8, v4);
    uint64_t v23 = 0;
  }
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, v23, 1, v4);
}

uint64_t GDGraphPerson.suggestedNameStringInner.getter()
{
  id v1 = objc_msgSend(v0, sel_fullNames);
  uint64_t v2 = sub_1B2E82838();

  if (!*(void *)(v2 + 16))
  {
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(v0, sel_visualIdentifiers);
    sub_1B29C3CA0(0, &qword_1E9C3EB50);
    unint64_t v5 = sub_1B2E82838();

    if (v5 >> 62)
    {
      sub_1B2B1263C();
      sub_1B2E83448();
      sub_1B299B414();
      if (v4) {
        goto LABEL_5;
      }
    }
    else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      uint64_t v6 = (void *)(v5 & 0xC000000000000001);
      sub_1B2B47548(0, (v5 & 0xC000000000000001) == 0, v5);
      if ((v5 & 0xC000000000000001) != 0) {
        MEMORY[0x1B3EB1A20](0, v5);
      }
      else {
        id v7 = *(id *)(v5 + 32);
      }
      sub_1B299B414();
      id v8 = objc_msgSend((id)(v5 & 0xC000000000000001), sel_suggestedName);
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v3 = sub_1B2E82378();

        return v3;
      }

      return 0;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v3;
}

id sub_1B2C39CAC(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4 = a1;
  unint64_t v5 = (void *)a3();
  uint64_t v7 = v6;

  if (v7)
  {
    sub_1B2E82348();
    sub_1B299B414();
  }
  else
  {
    unint64_t v5 = 0;
  }

  return v5;
}

void *GDGraphPerson.suggestedContactIdentifierInner.getter()
{
  id v1 = objc_msgSend(v0, sel_identifiers);
  sub_1B29C3CA0(0, &qword_1E9C3EB00);
  unint64_t v2 = sub_1B2E82838();

  if (v2 >> 62)
  {
LABEL_34:
    sub_1B2B1263C();
    uint64_t v3 = sub_1B2E83448();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v4 = 4;
      do
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v5 = (id)MEMORY[0x1B3EB1A20](v4 - 4, v2);
        }
        else {
          id v5 = *(id *)(v2 + 8 * v4);
        }
        uint64_t v6 = v5;
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_34;
        }
        uint64_t v8 = sub_1B2A9DBD4(v5, (SEL *)&selRef_type);
        if (v9)
        {
          if (v8 == 0x6361746E6F434E43 && v9 == 0xE900000000000074)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v11 = sub_1B2E837A8();
            swift_bridgeObjectRelease();
            if ((v11 & 1) == 0) {
              goto LABEL_24;
            }
          }
          uint64_t v12 = sub_1B2A9DBD4(v6, (SEL *)&selRef_hasProfileImage);
          if (v13)
          {
            unint64_t v14 = v13;
          }
          else
          {
            uint64_t v12 = 0;
            unint64_t v14 = 0xE000000000000000;
          }
          if (v12 == 1702195828 && v14 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
LABEL_28:
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
          char v16 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          if (v16) {
            goto LABEL_28;
          }
        }
LABEL_24:

        ++v4;
      }
      while (v7 != v3);
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B2A17410(v17, sub_1B2C39FCC);
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_29:
    id v18 = v6;
    id v19 = [v18 id];

    if (v19)
    {
      uint64_t v6 = (void *)sub_1B2E82378();

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1B2C39FCC(void **a1)
{
  uint64_t v1 = sub_1B2A9DBD4(*a1, (SEL *)&selRef_type);
  if (v2)
  {
    if (v1 == 0x6361746E6F434E43 && v2 == 0xE900000000000074) {
      char v4 = 1;
    }
    else {
      char v4 = sub_1B2E837A8();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t GDGraphPerson.autonamingSuggestionReasonInner.getter()
{
  id v1 = objc_msgSend(v0, sel_visualIdentifiers);
  sub_1B29C3CA0(0, &qword_1E9C3EB50);
  unint64_t v2 = sub_1B2E82838();

  if (!(v2 >> 62))
  {
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1B2B1263C();
  sub_1B2E83448();
  sub_1B299B414();
  if (!v1) {
    goto LABEL_25;
  }
LABEL_3:
  sub_1B2B47548(0, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0) {
    MEMORY[0x1B3EB1A20](0, v2);
  }
  else {
    id v3 = *(id *)(v2 + 32);
  }
  sub_1B299B414();
  uint64_t v4 = sub_1B2C3A38C((void *)(v2 & 0xC000000000000001));
  if (!v5) {
    return 0;
  }
  uint64_t v6 = v4;
  if (v4 == 0xD00000000000001DLL && (sub_1B29A2D18(), v7)
    || (sub_1B299D7C8() & 1) != 0
    || v6 == 0xD00000000000001BLL && (sub_1B29A2D18(), v7)
    || (sub_1B299D7C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v6 == 0xD000000000000014 && (sub_1B29A2D18(), v7) || (sub_1B299D7C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (v6 == 0xD00000000000001DLL && (sub_1B29A2D18(), v7) {
         || (sub_1B299D7C8() & 1) != 0
  }
         || v6 == 0xD00000000000001CLL && (sub_1B29A2D18(), v7)
         || (sub_1B299D7C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (v6 == 0xD00000000000001DLL && (sub_1B29A2D18(), v7) || (sub_1B299D7C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (v6 == 0xD00000000000001CLL && (sub_1B29A2D18(), v7))
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v9 = sub_1B299D7C8();
    swift_bridgeObjectRelease();
    if (v9) {
      return 4;
    }
    else {
      return 0;
    }
  }
}

unint64_t sub_1B2C3A33C()
{
  unint64_t result = qword_1E9C409D0[0];
  if (!qword_1E9C409D0[0])
  {
    sub_1B2E80368();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C409D0);
  }
  return result;
}

uint64_t sub_1B2C3A38C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_associationReason);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1B2E82378();

  return v3;
}

uint64_t _s4NameVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s4NameVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s4NameVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s4NameVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4NameVwet(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s4NameVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CustomGraphPerson.Name()
{
  return &type metadata for CustomGraphPerson.Name;
}

uint64_t sub_1B2C3A718()
{
  return swift_retain();
}

uint64_t sub_1B2C3A750(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t sub_1B2C3A798(uint64_t a1)
{
  return sub_1B2C3A7D4(a1);
}

uint64_t sub_1B2C3A7D4(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 88), a1);
  return v1;
}

uint64_t sub_1B2C3A848()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return v0;
}

uint64_t sub_1B2C3A8B8()
{
  sub_1B2C3A848();

  return swift_deallocClassInstance();
}

uint64_t MultipartDatabaseReader.__allocating_init(in:initialState:)(uint64_t a1)
{
  uint64_t v3 = sub_1B2E809D8();
  if (!v1) {
    a1 = MultipartDatabaseReader.__allocating_init(in:initialState:)(v3);
  }
  swift_release();
  return a1;
}

{
  uint64_t v2;

  uint64_t v2 = swift_allocObject();
  MultipartDatabaseReader.init(in:initialState:)(a1);
  return v2;
}

uint64_t MultipartDatabaseReader.init(in:initialState:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v9 - v5;
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = v4;
  swift_retain();
  sub_1B2E80F18();
  swift_release();
  if (!v2)
  {
    type metadata accessor for MultipartDatabaseReader.StateHolder();
    uint64_t v7 = sub_1B2C3A798((uint64_t)v6);
    swift_beginAccess();
    *(void *)(v3 + 24) = v7;
  }
  swift_release();
  return v3;
}

uint64_t type metadata accessor for MultipartDatabaseReader.StateHolder()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2C3AB38()
{
  return sub_1B2E80F18();
}

uint64_t sub_1B2C3AB88(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = sub_1B2C3A718();
  if (v5)
  {
    uint64_t v6 = v5 + *(void *)(*(void *)v5 + 88);
    swift_beginAccess();
    a3(a1, v6);
    swift_endAccess();
    return swift_release();
  }
  else
  {
    uint64_t result = sub_1B2E83418();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B2C3AC94(uint64_t a1)
{
  return sub_1B2C3AB88(a1, *(void *)(v1 + 24), *(void (**)(uint64_t, uint64_t))(v1 + 32));
}

uint64_t MultipartDatabaseReader.deinit()
{
  sub_1B2E80F18();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B2C3AD28()
{
  swift_beginAccess();
  type metadata accessor for MultipartDatabaseReader.StateHolder();
  char v0 = sub_1B2E83778();
  uint64_t result = swift_endAccess();
  if (v0) {
    return sub_1B2C3A750(0);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2C3ADC0()
{
  return sub_1B2C3AD28();
}

uint64_t MultipartDatabaseReader.__deallocating_deinit()
{
  MultipartDatabaseReader.deinit();

  return swift_deallocClassInstance();
}

uint64_t DatabaseSnapshotCursor.__allocating_init(in:batchSize:initialState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B2E809D8();
  if (!v2) {
    a1 = DatabaseSnapshotCursor.__allocating_init(in:batchSize:initialState:)(v5, a2);
  }
  swift_release();
  return a1;
}

{
  uint64_t v4;

  uint64_t v4 = swift_allocObject();
  DatabaseSnapshotCursor.init(in:batchSize:initialState:)(a1, a2);
  return v4;
}

void *DatabaseSnapshotCursor.init(in:batchSize:initialState:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MultipartDatabaseReader();
  uint64_t v5 = swift_retain();
  uint64_t v6 = MultipartDatabaseReader.__allocating_init(in:initialState:)(v5);
  if (v3)
  {
    swift_release();
    type metadata accessor for DatabaseSnapshotCursor();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v2[2] = v6;
    swift_getAssociatedTypeWitness();
    uint64_t v7 = sub_1B2E828C8();
    swift_release();
    v2[3] = v7;
    v2[4] = a2;
  }
  return v2;
}

uint64_t type metadata accessor for MultipartDatabaseReader()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2C3B078@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 32))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for DatabaseSnapshotCursor()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2C3B0C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v14 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_1B2E82F38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - v4;
  sub_1B299DACC();
  uint64_t v6 = sub_1B2E82968();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = swift_getWitnessTable();
  uint64_t v13 = WitnessTable;
  MEMORY[0x1B3EB1530](v6, WitnessTable, v8);
  swift_endAccess();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v5, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v9 = v15;
    uint64_t result = sub_1B2C3AB38();
    if (!v9)
    {
      sub_1B299DACC();
      MEMORY[0x1B3EB1530](v6, v13, v8);
      return swift_endAccess();
    }
  }
  else
  {
    uint64_t v11 = v14;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v14, v5, AssociatedTypeWitness);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v11, 0, 1, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_1B2C3B338(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v32 = a2;
  uint64_t v5 = *(void *)(*a3 + 88);
  uint64_t v30 = *(void *)(*a3 + 80);
  uint64_t v31 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1B2E82F38();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  unint64_t v28 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v11);
  unint64_t v17 = (char *)&v23 - v16;
  uint64_t v27 = a3[4];
  if (v27 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v24 = v15;
    uint64_t v25 = result;
    uint64_t v18 = 0;
    uint64_t v29 = a3 + 3;
    unint64_t v26 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    id v19 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v20 = (void (**)(char *, uint64_t))(v14 + 8);
    char v21 = v28;
    while (1)
    {
      uint64_t result = sub_1B2E81538();
      if (v3) {
        break;
      }
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, AssociatedTypeWitness) == 1)goto LABEL_9; {
      (*v26)(v17, v10, AssociatedTypeWitness);
      }
      (*v19)(v21, v17, AssociatedTypeWitness);
      swift_beginAccess();
      sub_1B2E82968();
      sub_1B2E82918();
      swift_endAccess();
      (*v20)(v17, AssociatedTypeWitness);
      if (v27 == v18) {
        goto LABEL_10;
      }
      if (__OFADD__(v18++, 1))
      {
        __break(1u);
LABEL_9:
        (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
LABEL_10:
        swift_beginAccess();
        sub_1B2E82968();
        swift_getWitnessTable();
        swift_getWitnessTable();
        sub_1B2E82318();
        return swift_endAccess();
      }
    }
  }
  return result;
}

uint64_t DatabaseSnapshotCursor.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DatabaseSnapshotCursor.__deallocating_deinit()
{
  DatabaseSnapshotCursor.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2C3B6E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2C3B0C4(a1);
}

uint64_t sub_1B2C3B6FC()
{
  return sub_1B2E81548();
}

uint64_t sub_1B2C3B754(uint64_t a1, uint64_t a2)
{
  return sub_1B2C3B338(a1, a2, v2);
}

uint64_t sub_1B2C3B770()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MultipartDatabaseReader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MultipartDatabaseReader);
}

uint64_t dispatch thunk of MultipartDatabaseReader.__allocating_init(in:initialState:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of MultipartDatabaseReader.perform<A>(body:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_1B2C3B838()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B2C3B8CC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for DatabaseSnapshotCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DatabaseSnapshotCursor);
}

uint64_t dispatch thunk of DatabaseSnapshotCursor.__allocating_init(in:batchSize:initialState:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DatabaseSnapshotCursor.next()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t QueryInterfaceRequest.toStatementArgumentString(db:)()
{
  uint64_t v0 = sub_1B2E81028();
  sub_1B299D278();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B2E80D98();
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E810C8();
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  uint64_t v15 = 0x203A6C71735BLL;
  unint64_t v16 = 0xE600000000000000;
  uint64_t v14 = sub_1B2E80D88();
  sub_1B2E81708();
  sub_1B2C3BC4C(&qword_1E9C40B58, MEMORY[0x1E4F62F48]);
  sub_1B2E83748();
  sub_1B2E82518();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2E80D88();
  sub_1B2E816F8();
  swift_release();
  sub_1B2C3BC4C(&qword_1E9C40B60, MEMORY[0x1E4F62D50]);
  sub_1B2E83748();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  sub_1B2E82518();
  uint64_t v12 = v15;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  return v12;
}

uint64_t sub_1B2C3BC4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2C3BC94()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EDEDB0;
  *(void *)(v0 + 32) = &unk_1F0AB4940;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EC01E0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EDEDC0;
  *(void *)(v0 + 72) = 0x80000001B2E9D750;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29B2124(0, 0);
  return v0;
}

uint64_t type metadata accessor for GreaterThan()
{
  return self;
}

uint64_t sub_1B2C3BD5C()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EDEDF0;
  *(void *)(v0 + 32) = &unk_1F0AB88C0;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EC01E0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EDEE00;
  *(void *)(v0 + 72) = 0x80000001B2E9D7C0;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29B2124(0, 0);
  return v0;
}

uint64_t type metadata accessor for GreaterThanEqual()
{
  return self;
}

ValueMetadata *type metadata accessor for IntentHandlerError()
{
  return &type metadata for IntentHandlerError;
}

uint64_t destroy for IntentHandler()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IntentHandler(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IntentHandler(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IntentHandler(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for IntentHandler()
{
  return &type metadata for IntentHandler;
}

uint64_t sub_1B2C3C0D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v109 = a1;
  v97 = a6;
  Context = (int *)type metadata accessor for QueryContext();
  sub_1B2999864();
  MEMORY[0x1F4188790](v13);
  sub_1B299E4A0();
  unint64_t v16 = (void *)(v15 - v14);
  uint64_t v17 = *a5;
  sub_1B29A3EB4(&qword_1EB7D98F0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B2EC00A0;
  *(void *)(v18 + 56) = &type metadata for NamedArgGenerator;
  *(void *)(v18 + 64) = &off_1F0ACA388;
  swift_bridgeObjectRetain_n();
  uint64_t v99 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v111 = a3;
  swift_bridgeObjectRetain();
  uint64_t v118 = a4;
  swift_retain();
  sub_1B2A19374();
  uint64_t v98 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29A3EB4(&qword_1EB7D9798);
  uint64_t v20 = MEMORY[0x1E4FBC860];
  char v21 = (void *)sub_1B2E82148();
  type metadata accessor for QueryTree();
  uint64_t v125 = 0;
  long long v124 = 0uLL;
  int v126 = 0;
  swift_allocObject();
  uint64_t v22 = sub_1B2DC3988(0, 0, 0, 0xE000000000000000, 0, &v124, 0, 0, 0, 0);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1B2A17E38();
  if (qword_1EB7D9670 != -1) {
    swift_once();
  }
  uint64_t v24 = swift_bridgeObjectRetain();
  sub_1B2CC8B34(v24, v23);
  uint64_t v26 = v25;
  sub_1B2E80658();
  v16[1] = 0;
  v16[2] = 0;
  sub_1B2C416F0((uint64_t)v16 + Context[8]);
  *(_OWORD *)(v28 + 88) = xmmword_1B2EC01D0;
  *(unsigned char *)(v28 + 104) = 0;
  *(void *)((char *)v16 + Context[10]) = v20;
  uint64_t v29 = (void *)((char *)v16 + Context[12]);
  *uint64_t v29 = 0;
  v29[1] = v20;
  v29[2] = v20;
  uint64_t v30 = Context[13];
  uint64_t v31 = Context[14];
  *unint64_t v16 = v22;
  *(void *)((char *)v16 + Context[9]) = v17;
  *((unsigned char *)v16 + v30) = 0;
  uint64_t v32 = (char *)v16 + Context[11];
  *(void *)uint64_t v32 = 0;
  *((void *)v32 + 1) = 0;
  v32[16] = 2;
  *((void *)v32 + 3) = v26;
  *((unsigned char *)v16 + v31) = 0;
  uint64_t v33 = v109;
  uint64_t v100 = v109 + 64;
  uint64_t v34 = 1 << *(unsigned char *)(v109 + 32);
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  unint64_t v36 = v35 & *(void *)(v109 + 64);
  int64_t v101 = (unint64_t)(v34 + 63) >> 6;
  uint64_t v110 = a2;
  uint64_t v37 = v111;
  uint64_t v38 = v20;
  uint64_t v39 = v118;
  uint64_t v108 = v17;
  uint64_t v117 = (uint64_t)v16;
  if (!v36) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v104 = (v36 - 1) & v36;
  for (unint64_t i = __clz(__rbit64(v36)) | (v27 << 6); ; unint64_t i = v50 + (v27 << 6))
  {
    uint64_t v106 = v27;
    v51 = (uint64_t *)(*(void *)(v33 + 48) + 16 * i);
    uint64_t v52 = v51[1];
    uint64_t v112 = *v51;
    uint64_t v53 = *(void *)(*(void *)(v33 + 56) + 8 * i);
    uint64_t v54 = *(void *)(v53 + 16);
    uint64_t v119 = v52;
    if (v54)
    {
      uint64_t v103 = (uint64_t)v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v102 = v53;
      uint64_t v55 = v53 + 72;
      uint64_t v120 = v38;
      while (1)
      {
        uint64_t v116 = v54;
        uint64_t v56 = *(void *)(v55 - 32);
        uint64_t v115 = *(void *)(v55 - 40);
        uint64_t v57 = *(void *)(v55 - 24);
        uint64_t v58 = *(void *)v55;
        long long v121 = *(_OWORD *)(v55 + 8);
        long long v122 = *(_OWORD *)(v55 - 16);
        uint64_t v59 = *(void *)(v55 + 24);
        sub_1B29A1CB4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        uint64_t v60 = sub_1B2D62780(v57, v122);
        if (v7) {
          break;
        }
        uint64_t v127 = v60;
        sub_1B2C41738(v117, &v127, 1, 1, v61, v62, v118);
        sub_1B29A1CB4();
        uint64_t v123 = sub_1B2D62780(v58, v121);
        sub_1B2C41738(v117, &v123, 1, 0, v63, v64, v118);
        uint64_t v65 = v127;
        uint64_t v66 = v123;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        swift_retain_n();
        uint64_t v114 = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29B8ADC();
          uint64_t v120 = v70;
        }
        unint64_t v68 = *(void *)(v120 + 16);
        unint64_t v67 = *(void *)(v120 + 24);
        if (v68 >= v67 >> 1)
        {
          sub_1B299B984(v67);
          sub_1B29B8ADC();
          uint64_t v120 = v71;
        }
        *(void *)(v120 + 16) = v68 + 1;
        uint64_t v69 = v120 + 104 * v68;
        *(void *)(v69 + 32) = v115;
        *(void *)(v69 + 40) = v56;
        *(void *)(v69 + 48) = v57;
        *(_OWORD *)(v69 + 56) = v122;
        *(void *)(v69 + 72) = v58;
        *(_OWORD *)(v69 + 80) = v121;
        *(void *)(v69 + 96) = v59;
        *(void *)(v69 + 104) = v65;
        *(void *)(v69 + 112) = v66;
        *(void *)(v69 + 120) = v112;
        uint64_t v52 = v119;
        *(void *)(v69 + 128) = v119;
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        sub_1B299E878();
        sub_1B299F7F0();
        sub_1B2C379B4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v55 += 104;
        uint64_t v54 = v116 - 1;
        uint64_t v7 = 0;
        a2 = v110;
        if (v116 == 1)
        {
          sub_1B2C41720();
          uint64_t v39 = v118;
          char v21 = (void *)v103;
          goto LABEL_30;
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
      sub_1B2C41720();
      sub_1B2C41644();
      sub_1B29A0ABC();
      sub_1B2C41614();
      swift_bridgeObjectRelease();
      sub_1B299E878();
      sub_1B299F7F0();
      sub_1B2C379B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2C41758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2C3FE24(v117, (void (*)(void))type metadata accessor for QueryContext);
      sub_1B2C41784();
      sub_1B2C4179C();
      sub_1B2C4167C();
      sub_1B2C417D4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v120 = v38;
LABEL_30:
    swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v124 = v21;
    uint64_t v78 = sub_1B29DB060(v112, v52, v72, v73, v74, v75, v76, v77, v96, (uint64_t)v97, v98, v99, v100, v101, v102, v103, v104, v106, v108,
            v109,
            v110,
            v111,
            v112,
            v114,
            v115,
            v116);
    uint64_t v17 = v108;
    if (__OFADD__(v21[2], (v79 & 1) == 0)) {
      break;
    }
    unint64_t v80 = v78;
    char v81 = v79;
    sub_1B29A3EB4(&qword_1EB7D9888);
    unint64_t v16 = (void *)v117;
    if (sub_1B2E83398())
    {
      uint64_t v88 = sub_1B29DB060(v113, v119, v82, v83, v84, v85, v86, v87, v96, (uint64_t)v97, v98, v99, v100, v101, v102, v103, v105, v107, v108,
              v109,
              v110,
              v111,
              v113,
              v114,
              v115,
              v116);
      if ((v81 & 1) != (v89 & 1)) {
        goto LABEL_51;
      }
      unint64_t v80 = v88;
    }
    char v21 = (void *)v124;
    if (v81)
    {
      uint64_t v90 = *(void *)(v124 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v90 + 8 * v80) = v120;
    }
    else
    {
      sub_1B299BB6C(v124 + 8 * (v80 >> 6));
      v91 = (uint64_t *)(v21[6] + 16 * v80);
      uint64_t *v91 = v113;
      v91[1] = v119;
      *(void *)(v21[7] + 8 * v80) = v120;
      uint64_t v92 = v21[2];
      BOOL v41 = __OFADD__(v92, 1);
      uint64_t v93 = v92 + 1;
      if (v41) {
        goto LABEL_49;
      }
      v21[2] = v93;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = v111;
    uint64_t v33 = v109;
    uint64_t v38 = MEMORY[0x1E4FBC860];
    uint64_t v27 = v107;
    unint64_t v36 = v105;
    if (v105) {
      goto LABEL_6;
    }
LABEL_7:
    BOOL v41 = __OFADD__(v27, 1);
    int64_t v42 = v27 + 1;
    if (v41) {
      goto LABEL_48;
    }
    if (v42 >= v101) {
      goto LABEL_46;
    }
    if (!*(void *)(v100 + 8 * v42))
    {
      sub_1B2C416C8();
      if (v43 == v41) {
        goto LABEL_46;
      }
      sub_1B2C416B8();
      if (!v44)
      {
        sub_1B2C416C8();
        if (v43 == v41) {
          goto LABEL_46;
        }
        sub_1B2C416B8();
        if (!v45)
        {
          sub_1B2C416C8();
          if (v43 == v41)
          {
LABEL_46:
            swift_release();
            sub_1B2C41784();
            sub_1B2C4179C();
            sub_1B2C4167C();
            sub_1B2C417D4();
            swift_bridgeObjectRelease();
            sub_1B2C3FE24((uint64_t)v16, (void (*)(void))type metadata accessor for QueryContext);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t *v97 = a2;
            v97[1] = v37;
            v97[2] = v39;
            v97[3] = v17;
            v97[4] = v98;
            v97[5] = v17;
            v97[6] = (uint64_t)v21;
            v97[7] = 25;
            v97[8] = v99;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_release();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          sub_1B2C416B8();
          if (!v47)
          {
            do
            {
              int64_t v94 = v46 + 1;
              if (__OFADD__(v46, 1)) {
                goto LABEL_50;
              }
              if (v94 >= v101) {
                goto LABEL_46;
              }
              ++v46;
            }
            while (!*(void *)(v100 + 8 * v94));
          }
        }
      }
    }
    sub_1B29A08E0();
    uint64_t v104 = v49 & v48;
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2C3CD74(uint64_t a1, uint64_t *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3 >= a8)
  {
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    unint64_t v62 = 0xD00000000000001BLL;
    unint64_t v63 = 0x80000001B2E9D8F0;
    *(void *)&long long v58 = a8;
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
LABEL_17:
    sub_1B2E82518();
    unint64_t v31 = v62;
    unint64_t v32 = v63;
    sub_1B2C3D9C4();
    swift_allocError();
    *(void *)uint64_t v33 = v31;
    *(void *)(v33 + 8) = v32;
    *(unsigned char *)(v33 + 16) = 2;
    return swift_willThrow();
  }
  uint64_t v10 = v8;
  uint64_t v66 = a7;
  if (a4)
  {
    uint64_t v15 = *a2;
    switch(*(unsigned char *)(*a2 + 64))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
        char v16 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_7;
        }
        break;
      default:
        swift_bridgeObjectRelease();
LABEL_7:
        *(unsigned char *)(v15 + 64) = 5;
        break;
    }
  }
  if (!*(void *)(a6 + 16))
  {
    uint64_t v60 = 0;
    long long v58 = 0u;
    long long v59 = 0u;
    goto LABEL_16;
  }
  uint64_t v17 = *(void *)(*a2 + 16);
  uint64_t v18 = *(void *)(*a2 + 24);
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1B29DB060(v17, v18, v19, v20, v21, v22, v23, v24, v45, v47, v49, v51, a1, a5, v57[0], v57[1], v57[2], v57[3], v57[4],
          v57[5],
          v58,
          *((uint64_t *)&v58 + 1),
          v59,
          *((uint64_t *)&v59 + 1),
          v60,
          v61);
  if ((v26 & 1) == 0)
  {
    uint64_t v60 = 0;
    long long v58 = 0u;
    long long v59 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_1B29C3B84(*(void *)(a6 + 56) + 40 * v25, (uint64_t)&v58);
  swift_bridgeObjectRelease();
  if (!*((void *)&v59 + 1))
  {
LABEL_16:
    sub_1B29C4148((uint64_t)&v58, &qword_1EB7D9640);
    unint64_t v62 = 0;
    unint64_t v63 = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    unint64_t v62 = 0x726F74617265706FLL;
    unint64_t v63 = 0xE900000000000020;
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_1B29D1D20(&v58, (uint64_t)&v62);
  uint64_t v27 = v64;
  uint64_t v28 = v65;
  sub_1B29AEC7C(&v62, v64);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v28 + 24))(v54, v56, a6, v66, a2, v27, v28);
  if (v10) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v62);
  }
  uint64_t v29 = *a2;
  swift_beginAccess();
  uint64_t v46 = v29;
  if (*(void *)(v29 + 32))
  {
    uint64_t v30 = *(void *)(v29 + 32);
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    uint64_t v30 = sub_1B2E82148();
  }
  uint64_t v50 = v30 + 64;
  uint64_t v35 = 1 << *(unsigned char *)(v30 + 32);
  uint64_t v36 = -1;
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  unint64_t v37 = v36 & *(void *)(v30 + 64);
  int64_t v52 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v48 = a3 + 1;
  swift_bridgeObjectRetain();
  int64_t v38 = 0;
  while (v37)
  {
    unint64_t v39 = __clz(__rbit64(v37));
    v37 &= v37 - 1;
    unint64_t v40 = v39 | (v38 << 6);
LABEL_35:
    uint64_t v44 = *(void *)(*(void *)(v30 + 56) + 8 * v40);
    swift_beginAccess();
    if (*(void *)(v44 + 24))
    {
      swift_beginAccess();
      if (!*(void *)(v44 + 24)) {
        goto LABEL_47;
      }
      swift_retain();
      sub_1B2C3CD74(v54, v44 + 24, v48, a4 & 1, v56, a6, v66, a8);
      swift_endAccess();
      swift_release();
    }
  }
  if (__OFADD__(v38++, 1))
  {
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    JUMPOUT(0x1B2C3D3A4);
  }
  if (v38 >= v52) {
    goto LABEL_42;
  }
  unint64_t v42 = *(void *)(v50 + 8 * v38);
  if (v42)
  {
LABEL_34:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v38 << 6);
    goto LABEL_35;
  }
  int64_t v43 = v38 + 1;
  if (v38 + 1 >= v52) {
    goto LABEL_42;
  }
  unint64_t v42 = *(void *)(v50 + 8 * v43);
  if (v42) {
    goto LABEL_33;
  }
  int64_t v43 = v38 + 2;
  if (v38 + 2 >= v52) {
    goto LABEL_42;
  }
  unint64_t v42 = *(void *)(v50 + 8 * v43);
  if (v42)
  {
LABEL_33:
    int64_t v38 = v43;
    goto LABEL_34;
  }
  int64_t v43 = v38 + 3;
  if (v38 + 3 < v52)
  {
    unint64_t v42 = *(void *)(v50 + 8 * v43);
    if (!v42)
    {
      while (1)
      {
        int64_t v38 = v43 + 1;
        if (__OFADD__(v43, 1)) {
          goto LABEL_46;
        }
        if (v38 >= v52) {
          goto LABEL_42;
        }
        unint64_t v42 = *(void *)(v50 + 8 * v38);
        ++v43;
        if (v42) {
          goto LABEL_34;
        }
      }
    }
    goto LABEL_33;
  }
LABEL_42:
  swift_release();
  if (*(void *)(v46 + 40))
  {
    v57[0] = *(void *)(v46 + 40);
    swift_retain();
    sub_1B2C3CD74(v54, v57, v48, a4 & 1, v56, a6, v66, a8);
    swift_release();
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v62);
}

uint64_t sub_1B2C3D3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C40B68);
  MEMORY[0x1F4188790](v8 - 8);
  sub_1B299E4A0();
  uint64_t v11 = v10 - v9;
  Context = (int *)type metadata accessor for QueryContext();
  sub_1B2999864();
  MEMORY[0x1F4188790](v13);
  sub_1B299E4A0();
  char v16 = (void *)(v15 - v14);
  uint64_t v17 = *(void *)(a1 + 64);
  if (v17)
  {
    uint64_t v43 = v11;
    uint64_t v44 = a3;
    uint64_t v18 = *(void *)a2;
    uint64_t v49 = *(void *)a2;
    uint64_t v48 = *(void *)(a2 + 8);
    unsigned __int8 v19 = *(unsigned char *)(a2 + 16);
    uint64_t v20 = *(void *)(a2 + 24);
    uint64_t v47 = *v3;
    uint64_t v21 = v3[3];
    uint64_t v55 = v3[2];
    uint64_t v56 = v3[1];
    uint64_t v54 = v3[4];
    uint64_t v53 = v3[5];
    uint64_t v52 = v3[6];
    uint64_t v51 = v3[7];
    uint64_t v50 = v3[8];
    uint64_t v57 = *(void *)(a1 + 56);
    uint64_t v73 = *(void *)(a1 + 72);
    int v45 = *(_DWORD *)(a1 + 80);
    char v46 = *(unsigned char *)(a1 + 104);
    uint64_t v22 = v17;
    sub_1B29E4D80(v57, v17);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B29C65EC(v18, v48, v19);
    swift_bridgeObjectRetain();
    sub_1B2E80658();
    v16[1] = 0;
    v16[2] = 0;
    sub_1B2C416F0((uint64_t)v16 + Context[8]);
    *(_OWORD *)(v23 + 88) = xmmword_1B2EC01D0;
    *(unsigned char *)(v23 + 104) = 0;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    uint64_t v42 = Context[10];
    *(void *)((char *)v16 + v42) = MEMORY[0x1E4FBC860];
    uint64_t v25 = (void *)((char *)v16 + Context[12]);
    *uint64_t v25 = 0;
    v25[1] = v24;
    v25[2] = v24;
    uint64_t v26 = Context[13];
    uint64_t v27 = Context[14];
    *char v16 = a1;
    *(void *)((char *)v16 + Context[9]) = v21;
    *((unsigned char *)v16 + v26) = v46;
    uint64_t v28 = (char *)v16 + Context[11];
    *(void *)uint64_t v28 = v49;
    *((void *)v28 + 1) = v48;
    v28[16] = v19;
    *((void *)v28 + 3) = v20;
    *((unsigned char *)v16 + v27) = 0;
    uint64_t v64 = v47;
    uint64_t v65 = v56;
    uint64_t v66 = v55;
    uint64_t v67 = v21;
    uint64_t v68 = v54;
    uint64_t v69 = v53;
    uint64_t v70 = v52;
    uint64_t v71 = v51;
    uint64_t v72 = v50;
    uint64_t v58 = v57;
    uint64_t v59 = v22;
    uint64_t v60 = v73;
    LODWORD(v61) = v45;
    uint64_t v29 = sub_1B2C3DA10(&v58);
    if (*(void *)(v29 + 16))
    {
      sub_1B29A2D28();
      v62[0] = v57;
      v62[1] = v22;
      v62[2] = v73;
      int v63 = v45;
      uint64_t v58 = v49;
      uint64_t v59 = v48;
      LOBYTE(v60) = v19;
      uint64_t v61 = v20;
      uint64_t v30 = sub_1B2C3DC8C((uint64_t)v62, v29, (uint64_t)&v58);
      if (v4)
      {
        swift_bridgeObjectRelease();
        sub_1B29E4D3C(v57, v22);
      }
      else
      {
        *(void *)((char *)v16 + v42) = v30;
        sub_1B29A2D28();
        uint64_t v58 = v57;
        uint64_t v59 = v22;
        uint64_t v37 = v73;
        uint64_t v60 = v73;
        LODWORD(v61) = v45;
        sub_1B2C3DF3C(v16, &v58, v29, v43);
        swift_bridgeObjectRelease();
        int64_t v38 = (int *)type metadata accessor for IntentExecResult();
        if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v43, 1, (uint64_t)v38) == 1)
        {
          sub_1B29C4148(v43, &qword_1E9C40B68);
          sub_1B2A32AAC((uint64_t)v16, v44);
          type metadata accessor for ResultGraph();
          uint64_t v39 = swift_allocObject();
          uint64_t v40 = MEMORY[0x1E4FBC860];
          *(void *)(v39 + 16) = sub_1B2E82148();
          *(void *)(v39 + 24) = v40;
          *(void *)(v44 + v38[5]) = v39;
          uint64_t v41 = v44 + v38[6];
          *(void *)uint64_t v41 = v57;
          *(void *)(v41 + 8) = v22;
          *(void *)(v41 + 16) = v37;
          *(_DWORD *)(v41 + 24) = v45;
          *(void *)(v41 + 32) = 0;
          *(void *)(v41 + 40) = 0xE000000000000000;
          *(void *)(v41 + 48) = v40;
          *(unsigned char *)(v44 + v38[7]) = 1;
        }
        else
        {
          sub_1B29E4D3C(v57, v22);
          sub_1B2C3FDC4(v43, v44, (void (*)(void))type metadata accessor for IntentExecResult);
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1B2A32AAC((uint64_t)v16, v44);
      type metadata accessor for ResultGraph();
      uint64_t v33 = swift_allocObject();
      uint64_t v34 = MEMORY[0x1E4FBC860];
      *(void *)(v33 + 16) = sub_1B2E82148();
      *(void *)(v33 + 24) = v34;
      uint64_t v35 = (int *)type metadata accessor for IntentExecResult();
      *(void *)(v44 + v35[5]) = v33;
      uint64_t v36 = v44 + v35[6];
      *(void *)uint64_t v36 = v57;
      *(void *)(v36 + 8) = v22;
      *(void *)(v36 + 16) = v73;
      *(_DWORD *)(v36 + 24) = v45;
      *(void *)(v36 + 32) = 0;
      *(void *)(v36 + 40) = 0xE000000000000000;
      *(void *)(v36 + 48) = v34;
      *(unsigned char *)(v44 + v35[7]) = 3;
    }
    return sub_1B2C3FE24((uint64_t)v16, (void (*)(void))type metadata accessor for QueryContext);
  }
  else
  {
    sub_1B2C3D9C4();
    sub_1B299E4D4();
    *(void *)uint64_t v31 = 0xD000000000000017;
    *(void *)(v31 + 8) = 0x80000001B2E9D810;
    *(unsigned char *)(v31 + 16) = 1;
    return swift_willThrow();
  }
}

unint64_t sub_1B2C3D9C4()
{
  unint64_t result = qword_1E9C40B70;
  if (!qword_1E9C40B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40B70);
  }
  return result;
}

uint64_t sub_1B2C3DA10(uint64_t *a1)
{
  uint64_t v2 = *(void *)(v1 + 48);
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = *a1;
    uint64_t v3 = a1[1];
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1B29DB060(v4, v3, v5, v6, v7, v8, v9, v10, v28, v29, v30, v31, v33, v35, v37, v39, v40, v41, v42,
            v44,
            v45,
            v47,
            v48,
            v49,
            v50,
            v51);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v2 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(v13 + 72);
    uint64_t v16 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v17 = *(v15 - 4);
      uint64_t v36 = *(v15 - 3);
      uint64_t v38 = *(v15 - 5);
      long long v43 = *(_OWORD *)(v15 + 1);
      long long v46 = *((_OWORD *)v15 - 1);
      uint64_t v18 = v15[3];
      uint64_t v19 = v15[4];
      uint64_t v20 = v15[5];
      uint64_t v32 = v15[6];
      uint64_t v34 = *v15;
      uint64_t v21 = v15[7];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_retain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B8ADC();
        uint64_t v16 = v25;
      }
      unint64_t v23 = *(void *)(v16 + 16);
      unint64_t v22 = *(void *)(v16 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1B299B984(v22);
        sub_1B29B8ADC();
        uint64_t v16 = v26;
      }
      *(void *)(v16 + 16) = v23 + 1;
      uint64_t v24 = v16 + 104 * v23;
      *(void *)(v24 + 32) = v38;
      *(void *)(v24 + 40) = v17;
      *(void *)(v24 + 48) = v36;
      *(_OWORD *)(v24 + 56) = v46;
      *(void *)(v24 + 72) = v34;
      *(_OWORD *)(v24 + 80) = v43;
      *(void *)(v24 + 96) = v18;
      *(void *)(v24 + 104) = v19;
      *(void *)(v24 + 112) = v20;
      *(void *)(v24 + 120) = v32;
      *(void *)(v24 + 128) = v21;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 += 13;
      --v14;
    }
    while (v14);
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1B2C3DC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  int v7 = *(_DWORD *)(a1 + 24);
  uint64_t v27 = *(void *)a3;
  uint64_t v28 = *(void *)(a3 + 8);
  unsigned __int8 v8 = *(unsigned char *)(a3 + 16);
  uint64_t v9 = *(void *)(a3 + 24);
  long long v10 = *(_OWORD *)(v3 + 32);
  uint64_t v11 = *(void *)(a2 + 16);
  if (v11)
  {
    long long v23 = *(_OWORD *)(v3 + 32);
    uint64_t v24 = *(void *)a1;
    uint64_t v25 = *(void *)(a1 + 16);
    uint64_t v26 = *(void *)(a3 + 24);
    swift_bridgeObjectRetain();
    uint64_t v13 = a2 + 64;
    uint64_t v14 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v15 = *(void *)(v13 + 32);
      if (v15)
      {
        uint64_t v38 = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2C416D8();
          sub_1B29B9334();
          uint64_t v14 = v19;
        }
        unint64_t v17 = *(void *)(v14 + 16);
        unint64_t v16 = *(void *)(v14 + 24);
        uint64_t v18 = v14;
        if (v17 >= v16 >> 1)
        {
          sub_1B299B984(v16);
          sub_1B29B9334();
          uint64_t v18 = v20;
        }
        *(void *)(v18 + 16) = v17 + 1;
        uint64_t v14 = v18;
        *(void *)(v18 + 8 * v17 + 32) = v15;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v13 += 104;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v9 = v26;
    uint64_t v6 = v25;
    uint64_t v21 = v14;
    uint64_t v4 = v24;
    long long v10 = v23;
  }
  else
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
  }
  long long v37 = v10;
  v30[0] = v4;
  v30[1] = v5;
  v30[2] = v6;
  int v31 = v7;
  uint64_t v38 = v21;
  uint64_t v32 = v21;
  uint64_t v33 = v27;
  uint64_t v34 = v28;
  unsigned __int8 v35 = v8;
  uint64_t v36 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29C65EC(v27, v28, v8);
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B2A30860((uint64_t)v30);
  sub_1B29E4D3C(v4, v5);
  swift_bridgeObjectRelease();
  sub_1B2A2A2C8(v27, v28, v8);
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1B2C3DF3C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v164 = a3;
  v163 = a1;
  uint64_t v161 = a4;
  uint64_t Context = type metadata accessor for QueryContext();
  sub_1B2999864();
  MEMORY[0x1F4188790](v7);
  sub_1B2999940();
  v131 = v8;
  MEMORY[0x1F4188790](v9);
  v173 = (uint64_t *)((char *)&v125 - v10);
  uint64_t v11 = *a2;
  uint64_t v12 = a2[1];
  uint64_t v13 = a2[2];
  int v14 = *((_DWORD *)a2 + 6);
  uint64_t v15 = v4[1];
  uint64_t v17 = v4[2];
  uint64_t v16 = v4[3];
  uint64_t v18 = v4[4];
  uint64_t v19 = v4[5];
  uint64_t v21 = v4[6];
  uint64_t v20 = v4[7];
  uint64_t v22 = v4[8];
  uint64_t v142 = *v4;
  uint64_t v177 = v142;
  uint64_t v141 = v15;
  uint64_t v178 = v15;
  uint64_t v179 = v17;
  uint64_t v180 = v16;
  uint64_t v181 = v18;
  uint64_t v182 = v19;
  uint64_t v183 = v21;
  uint64_t v184 = v20;
  uint64_t v185 = v22;
  uint64_t v127 = v11;
  v175[0] = v11;
  uint64_t v126 = v12;
  v175[1] = v12;
  uint64_t v125 = v13;
  v175[2] = v13;
  int v176 = v14;
  uint64_t result = sub_1B2C3ED3C((uint64_t)v175);
  if (v5) {
    return result;
  }
  uint64_t v24 = v161;
  uint64_t v132 = v22;
  uint64_t v139 = v20;
  uint64_t v133 = v21;
  uint64_t v134 = v19;
  uint64_t v135 = v18;
  uint64_t v136 = v16;
  uint64_t v140 = v17;
  uint64_t v25 = v164;
  uint64_t v26 = *(void *)(v164 + 16);
  if (!v26)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v94 = type metadata accessor for IntentExecResult();
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v24, 1, 1, v94);
  }
  uint64_t v137 = result;
  v130 = &__dst[9];
  swift_bridgeObjectRetain();
  uint64_t v27 = 32;
  uint64_t v28 = v139;
  while (1)
  {
    uint64_t v145 = v27;
    memcpy(__dst, (const void *)(v25 + v27), sizeof(__dst));
    sub_1B2C3FA38((uint64_t)v130, (uint64_t)v187);
    uint64_t v30 = __dst[0];
    uint64_t v29 = __dst[1];
    sub_1B2C3FA38((uint64_t)v187, (uint64_t)&v188);
    if (!v188)
    {
      sub_1B2C3FAA0((uint64_t)__dst);
      swift_bridgeObjectRelease();
      sub_1B29A4624();
      sub_1B2C41660();
      sub_1B2E831F8();
      sub_1B2C4167C();
      sub_1B2C41630(0xD000000000000020);
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2C417B4();
      uint64_t v95 = sub_1B299E4D4();
      sub_1B2C41694(v95, v96);
      return sub_1B2C3FB40((uint64_t)__dst);
    }
    uint64_t v144 = v26;
    sub_1B2C3FAA0((uint64_t)__dst);
    sub_1B2C3FBE0((uint64_t)v187);
    uint64_t v31 = sub_1B2DC1F1C();
    uint64_t v32 = sub_1B2C3FC0C((uint64_t)v187);
    v175[0] = v31;
    MEMORY[0x1F4188790](v32);
    long long v124 = __dst;
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v34 = sub_1B2C3FC40(v33, sub_1B2C3FC38, (uint64_t)&v122);
    swift_bridgeObjectRelease();
    uint64_t v35 = type metadata accessor for Virtual();
    uint64_t v36 = swift_retain();
    uint64_t v162 = v34;
    sub_1B2E172F0(v36, v34, v28);
    swift_release();
    long long v37 = v163;
    uint64_t v38 = *v163;
    uint64_t v39 = v163[1];
    uint64_t v160 = 0;
    uint64_t v129 = v29;
    uint64_t v128 = v30;
    uint64_t v138 = v35;
    uint64_t v159 = v38;
    if (v39)
    {
      swift_retain();
      uint64_t v146 = v39;
      uint64_t v147 = v39;
    }
    else
    {
      type metadata accessor for ResultGraph();
      uint64_t v40 = swift_allocObject();
      swift_retain();
      uint64_t v41 = MEMORY[0x1E4FBC860];
      uint64_t v42 = sub_1B2E82148();
      uint64_t v146 = 0;
      *(void *)(v40 + 16) = v42;
      *(void *)(v40 + 24) = v41;
      uint64_t v147 = v40;
    }
    long long v43 = (int *)Context;
    uint64_t v158 = v37[2];
    uint64_t v44 = *(int *)(Context + 28);
    uint64_t v45 = (char *)v37 + v44;
    long long v46 = (char *)v173 + v44;
    sub_1B2E80668();
    sub_1B2999864();
    (*(void (**)(char *, char *))(v47 + 16))(v46, v45);
    uint64_t v48 = v43[9];
    uint64_t v49 = (char *)v37 + v43[8];
    uint64_t v167 = *(void *)v49;
    uint64_t v166 = *((void *)v49 + 1);
    uint64_t v50 = *((void *)v49 + 3);
    uint64_t v168 = *((void *)v49 + 2);
    uint64_t v51 = *((void *)v49 + 4);
    uint64_t v148 = *((void *)v49 + 5);
    uint64_t v149 = *((void *)v49 + 6);
    uint64_t v150 = *((void *)v49 + 7);
    uint64_t v52 = *((void *)v49 + 9);
    uint64_t v171 = *((void *)v49 + 8);
    uint64_t v152 = v52;
    unint64_t v53 = *((void *)v49 + 11);
    uint64_t v153 = *((void *)v49 + 10);
    uint64_t v54 = v153;
    unint64_t v154 = v53;
    uint64_t v155 = *((void *)v49 + 12);
    uint64_t v55 = v155;
    uint64_t v170 = *(void *)((char *)v37 + v48);
    uint64_t v56 = v43[14];
    int v156 = *((unsigned __int8 *)v37 + v43[13]);
    unsigned __int8 v57 = v49[104];
    uint64_t v58 = v43[11];
    uint64_t v151 = *(void *)((char *)v37 + v43[10]);
    uint64_t v165 = *(void *)((char *)v37 + v58);
    uint64_t v169 = *(void *)((char *)v37 + v58 + 8);
    uint64_t v172 = *(void *)((char *)v37 + v58 + 24);
    int v157 = *((unsigned __int8 *)v37 + v56);
    unsigned __int8 v59 = *((unsigned char *)v37 + v58 + 16);
    swift_retain();
    unint64_t v123 = v53;
    uint64_t v121 = v52;
    uint64_t v122 = v54;
    uint64_t v60 = v148;
    uint64_t v61 = v149;
    uint64_t v62 = v150;
    sub_1B2A349B4(v167, v166, v168, v50, v51, v148, v149, v150, v171, v121, v122, v123, v55, v57);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unsigned __int8 v63 = v59;
    sub_1B29C65EC(v165, v169, v59);
    swift_bridgeObjectRetain();
    uint64_t v64 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease_n();
    uint64_t v65 = (char *)v173 + v43[8];
    uint64_t v66 = v43[10];
    void *v173 = v159;
    v173[1] = v147;
    uint64_t v67 = v43[12];
    uint64_t v68 = v43[13];
    v173[2] = v158;
    uint64_t v69 = v43[14];
    uint64_t v70 = v166;
    *(void *)uint64_t v65 = v167;
    *((void *)v65 + 1) = v70;
    *((void *)v65 + 2) = v168;
    *((void *)v65 + 3) = v50;
    *((void *)v65 + 4) = v51;
    *((void *)v65 + 5) = v60;
    uint64_t v71 = v173;
    *((void *)v65 + 6) = v61;
    *((void *)v65 + 7) = v62;
    uint64_t v72 = v152;
    *((void *)v65 + 8) = v171;
    *((void *)v65 + 9) = v72;
    unint64_t v73 = v154;
    *((void *)v65 + 10) = v153;
    *((void *)v65 + 11) = v73;
    *((void *)v65 + 12) = v155;
    v65[104] = v57;
    *(void *)((char *)v71 + v43[9]) = v170;
    *((unsigned char *)v71 + v68) = v156;
    uint64_t v74 = (void *)((char *)v71 + v67);
    *uint64_t v74 = 0;
    v74[1] = v64;
    v74[2] = v64;
    *(void *)((char *)v71 + v66) = v151;
    uint64_t v75 = (char *)v71 + v43[11];
    uint64_t v76 = v169;
    *(void *)uint64_t v75 = v165;
    *((void *)v75 + 1) = v76;
    v75[16] = v63;
    *((void *)v75 + 3) = v172;
    *((unsigned char *)v71 + v69) = v157;
    uint64_t v77 = v142;
    uint64_t v177 = v142;
    uint64_t v78 = v141;
    uint64_t v178 = v141;
    uint64_t v179 = v140;
    uint64_t v180 = v136;
    uint64_t v181 = v135;
    uint64_t v182 = v134;
    uint64_t v183 = v133;
    uint64_t v28 = v139;
    uint64_t v184 = v139;
    uint64_t v185 = v132;
    uint64_t v79 = v160;
    char v80 = sub_1B2C3F2BC((uint64_t)v71, v175);
    if (v79)
    {
      swift_release();
      sub_1B2C3FB40((uint64_t)__dst);
      uint64_t v97 = sub_1B29A4624();
      sub_1B2C41708(v97, (void (*)(void))type metadata accessor for QueryContext);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    uint64_t v25 = v164;
    uint64_t v81 = v162;
    if ((v80 & 1) == 0)
    {
      swift_release();
      uint64_t v93 = sub_1B2C3FB40((uint64_t)__dst);
      sub_1B2C41708(v93, (void (*)(void))type metadata accessor for QueryContext);
      sub_1B299F7F0();
      uint64_t v24 = v161;
      uint64_t v92 = v144;
      goto LABEL_14;
    }
    uint64_t v82 = v161;
    if (!__dst[10])
    {
      swift_bridgeObjectRelease();
      sub_1B29A4624();
      swift_release();
      sub_1B2C41660();
      sub_1B2E831F8();
      sub_1B2C4167C();
      sub_1B2C41630(0xD000000000000016);
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2C417B4();
      uint64_t v98 = sub_1B299E4D4();
      sub_1B2C41694(v98, v99);
      uint64_t v100 = sub_1B2C3FB40((uint64_t)__dst);
      sub_1B2C41708(v100, (void (*)(void))type metadata accessor for QueryContext);
      return swift_release();
    }
    swift_retain();
    uint64_t v83 = sub_1B2DC1F1C();
    swift_release();
    uint64_t v174 = v83;
    uint64_t v84 = swift_retain();
    sub_1B2E172F0(v84, v81, v28);
    swift_release();
    swift_release();
    uint64_t v85 = v131;
    sub_1B2D87CF8(v131);
    uint64_t v86 = sub_1B2D5DA20((uint64_t)v85, &v174, v77, v78, v140);
    uint64_t v87 = v82;
    uint64_t v88 = __dst[6];
    uint64_t v89 = __dst[7];
    uint64_t v90 = __dst[5];
    uint64_t v91 = v86;
    if (!sub_1B2D971EC()) {
      break;
    }
    swift_release();
    sub_1B2C3FB40((uint64_t)__dst);
    sub_1B2C3FE24((uint64_t)v85, (void (*)(void))type metadata accessor for QueryContext);
    swift_release();
    sub_1B2C3FE24((uint64_t)v173, (void (*)(void))type metadata accessor for QueryContext);
    sub_1B299F7F0();
    uint64_t v92 = v144;
    uint64_t v24 = v87;
    uint64_t v25 = v164;
LABEL_14:
    uint64_t v27 = v145 + 104;
    uint64_t v26 = v92 - 1;
    if (!v26)
    {
      sub_1B29A4624();
      goto LABEL_16;
    }
  }
  uint64_t v172 = v91;
  uint64_t v160 = 0;
  sub_1B29A4624();
  swift_bridgeObjectRelease();
  uint64_t v101 = *v85;
  *(void *)(v101 + 32) = v90;
  *(void *)(v101 + 40) = v88;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v103 = *(void *)(v101 + 56);
  uint64_t v102 = *(void *)(v101 + 64);
  uint64_t v104 = v126;
  *(void *)(v101 + 56) = v127;
  *(void *)(v101 + 64) = v104;
  *(void *)(v101 + 72) = v125;
  *(_DWORD *)(v101 + 80) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29E4D3C(v103, v102);
  *(void *)(v101 + 48) = v174;
  swift_retain();
  swift_release();
  sub_1B2C41630(0x676B2E6574756F72);
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  uint64_t v105 = v177;
  uint64_t v106 = v178;
  uint64_t v107 = (char *)v131 + *(int *)(Context + 48);
  uint64_t v108 = *((void *)v107 + 1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2C416D8();
    sub_1B29B7048();
    uint64_t v108 = v119;
  }
  unint64_t v110 = *(void *)(v108 + 16);
  unint64_t v109 = *(void *)(v108 + 24);
  if (v110 >= v109 >> 1)
  {
    sub_1B299B984(v109);
    sub_1B29B7048();
    uint64_t v108 = v120;
  }
  *(void *)(v108 + 16) = v110 + 1;
  uint64_t v111 = v108 + 16 * v110;
  *(void *)(v111 + 32) = v105;
  *(void *)(v111 + 40) = v106;
  uint64_t v112 = swift_release();
  *((void *)v107 + 1) = v108;
  sub_1B2C41708(v112, (void (*)(void))type metadata accessor for QueryContext);
  sub_1B299F7F0();
  uint64_t v113 = v161;
  sub_1B2C3FDC4((uint64_t)v131, v161, (void (*)(void))type metadata accessor for QueryContext);
  uint64_t v114 = v126;
  swift_bridgeObjectRetain();
  uint64_t v115 = v125;
  swift_bridgeObjectRetain();
  uint64_t v116 = v129;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2C3FB40((uint64_t)__dst);
  uint64_t v117 = (int *)type metadata accessor for IntentExecResult();
  *(void *)(v113 + v117[5]) = v172;
  uint64_t v118 = v113 + v117[6];
  *(void *)uint64_t v118 = v127;
  *(void *)(v118 + 8) = v114;
  *(void *)(v118 + 16) = v115;
  *(_DWORD *)(v118 + 24) = v14;
  *(void *)(v118 + 32) = v128;
  *(void *)(v118 + 40) = v116;
  *(void *)(v118 + 48) = v89;
  *(unsigned char *)(v113 + v117[7]) = 0;
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v113, 0, 1, (uint64_t)v117);
}

uint64_t sub_1B2C3ED3C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v64 = *(void *)a1;
  long long v63 = *(_OWORD *)(a1 + 8);
  int v4 = *(_DWORD *)(a1 + 24);
  uint64_t v5 = *(void *)(v1 + 64);
  type metadata accessor for KnosisQueryParam();
  uint64_t v6 = (void *)sub_1B2E82148();
  uint64_t v59 = *(void *)(v5 + 16);
  if (!v59) {
    return (uint64_t)v6;
  }
  uint64_t v7 = v5;
  uint64_t v61 = v5 + 32;
  swift_bridgeObjectRetain();
  unint64_t v8 = 0;
  uint64_t v65 = v3;
  uint64_t v60 = v5;
  while (2)
  {
    if (v8 >= *(void *)(v7 + 16))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      uint64_t result = sub_1B2E83858();
      __break(1u);
      return result;
    }
    uint64_t v62 = v8 + 1;
    sub_1B29C3B84(v61 + 40 * v8, (uint64_t)&v74);
    sub_1B29AEC7C(&v74, v76);
    uint64_t v71 = (void *)v64;
    long long v72 = v63;
    LODWORD(v73) = v4;
    uint64_t v9 = sub_1B29D3564((uint64_t)&v71);
    uint64_t v10 = 0;
    uint64_t v11 = *(void *)(v9 + 64);
    uint64_t v66 = v9 + 64;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v11;
    int64_t v67 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v68 = v9;
    if ((v13 & v11) != 0)
    {
LABEL_8:
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_23;
    }
    while (1)
    {
      int64_t v17 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_43;
      }
      if (v17 >= v67) {
        break;
      }
      unint64_t v18 = *(void *)(v66 + 8 * v17);
      ++v10;
      if (v18) {
        goto LABEL_22;
      }
      uint64_t v10 = v17 + 1;
      if (v17 + 1 >= v67) {
        break;
      }
      unint64_t v18 = *(void *)(v66 + 8 * v10);
      if (v18) {
        goto LABEL_22;
      }
      uint64_t v10 = v17 + 2;
      if (v17 + 2 >= v67) {
        break;
      }
      unint64_t v18 = *(void *)(v66 + 8 * v10);
      if (v18) {
        goto LABEL_22;
      }
      int64_t v19 = v17 + 3;
      if (v19 >= v67) {
        break;
      }
      unint64_t v18 = *(void *)(v66 + 8 * v19);
      if (!v18)
      {
        while (1)
        {
          uint64_t v10 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            goto LABEL_44;
          }
          if (v10 >= v67) {
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v66 + 8 * v10);
          ++v19;
          if (v18) {
            goto LABEL_22;
          }
        }
      }
      uint64_t v10 = v19;
LABEL_22:
      unint64_t v14 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_23:
      uint64_t v20 = (uint64_t *)(*(void *)(v68 + 48) + 16 * v16);
      uint64_t v22 = *v20;
      uint64_t v21 = v20[1];
      uint64_t v23 = *(void *)(*(void *)(v68 + 56) + 8 * v16);
      uint64_t v24 = v6[2];
      swift_bridgeObjectRetain();
      uint64_t v69 = v10;
      if (v24)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1B29DB060(v22, v21, v25, v26, v27, v28, v29, v30, v59, v60, v61, v62, v63, *((uint64_t *)&v63 + 1), v64, v65, v66, v67, v68,
          v10,
          (uint64_t)v71,
          v72,
          *((uint64_t *)&v72 + 1),
          v73,
          v74,
          v75);
        if (v31)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v71 = 0;
          *(void *)&long long v72 = 0xE000000000000000;
          sub_1B2E831F8();
          sub_1B2E82518();
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          sub_1B2E82518();
          uint64_t v55 = (uint64_t)v71;
          uint64_t v56 = v72;
          sub_1B2C3D9C4();
          sub_1B299E4D4();
          *(void *)uint64_t v57 = v55;
          *(void *)(v57 + 8) = v56;
          *(unsigned char *)(v57 + 16) = 0;
          swift_willThrow();
          swift_release();
          swift_release();
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v74);
          swift_bridgeObjectRelease();
          return (uint64_t)v6;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
      }
      swift_retain();
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v38 = sub_1B29DB060(v22, v21, v32, v33, v34, v35, v36, v37, v59, v60, v61, v62, v63, *((uint64_t *)&v63 + 1), v64, v65, v66, v67, v68,
              v69,
              (uint64_t)v6,
              v72,
              *((uint64_t *)&v72 + 1),
              v73,
              v74,
              v75);
      if (__OFADD__(v6[2], (v39 & 1) == 0))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      unint64_t v40 = v38;
      char v41 = v39;
      sub_1B29A3EB4(&qword_1EB7D9868);
      if (sub_1B2E83398())
      {
        uint64_t v48 = sub_1B29DB060(v22, v21, v42, v43, v44, v45, v46, v47, v59, v60, v61, v62, v63, *((uint64_t *)&v63 + 1), v64, v65, v66, v67, v68,
                v70,
                (uint64_t)v71,
                v72,
                *((uint64_t *)&v72 + 1),
                v73,
                v74,
                v75);
        if ((v41 & 1) != (v49 & 1)) {
          goto LABEL_46;
        }
        unint64_t v40 = v48;
      }
      uint64_t v6 = v71;
      if (v41)
      {
        uint64_t v50 = v71[7];
        swift_release();
        *(void *)(v50 + 8 * v40) = v23;
      }
      else
      {
        sub_1B299BB6C((uint64_t)&v71[v40 >> 6]);
        uint64_t v51 = (uint64_t *)(v6[6] + 16 * v40);
        uint64_t *v51 = v22;
        v51[1] = v21;
        *(void *)(v6[7] + 8 * v40) = v23;
        uint64_t v52 = v6[2];
        BOOL v53 = __OFADD__(v52, 1);
        uint64_t v54 = v52 + 1;
        if (v53) {
          goto LABEL_42;
        }
        v6[2] = v54;
        swift_bridgeObjectRetain();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = v70;
      if (v14) {
        goto LABEL_8;
      }
    }
LABEL_37:
    swift_release();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v74);
    uint64_t v7 = v60;
    unint64_t v8 = v62;
    if (v62 != v59) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v6;
}

uint64_t sub_1B2C3F1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = *(void **)(a4 + 32);
  uint64_t v5 = v4[2];
  if (!v5) {
    return 0;
  }
  if (v4[4] == a1 && v4[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1B2E837A8();
  if (result) {
    return 1;
  }
  if (v5 == 1) {
    return 0;
  }
  uint64_t v10 = v4 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v12 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v13 = *(v10 - 1) == a1 && *v10 == a2;
    if (v13 || (sub_1B2E837A8() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v10 += 2;
    if (v12 == v5) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2C3F2BC(uint64_t a1, void *a2)
{
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v45 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1B2999940();
  uint64_t v44 = v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = sub_1B2E81FB8();
  sub_1B299D278();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1B299E4A0();
  uint64_t v16 = v15 - v14;
  uint64_t v43 = sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  sub_1B299E4A0();
  uint64_t v22 = v21 - v20;
  uint64_t v42 = type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v23);
  sub_1B299E4A0();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = *v2;
  uint64_t v40 = v2[1];
  uint64_t v41 = v27;
  uint64_t v39 = v2[2];
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1B29A4B98(v10, (uint64_t)qword_1EB7E6600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v16, v28, v10);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v29 = sub_1B2E81F28();
  os_signpost_type_t v30 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    char v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v31 = 0;
    os_signpost_id_t v32 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v29, v30, v32, "Knosis.Intent.EvaluateCondition", "", v31, 2u);
    MEMORY[0x1B3EB30C0](v31, -1, -1);
  }

  uint64_t v33 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v44, v9, v45);
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v34 = sub_1B2E81F68();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v33);
  *(void *)uint64_t v26 = "Knosis.Intent.EvaluateCondition";
  *(void *)(v26 + 8) = 31;
  *(unsigned char *)(v26 + 16) = 2;
  *(void *)(v26 + 24) = v34;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v26 + *(int *)(v42 + 24), v22, v43);
  uint64_t v35 = v48;
  sub_1B2D5DA20(v46, v47, v41, v40, v39);
  if (v35)
  {
    sub_1B2C3F66C(v26);
  }
  else
  {
    BOOL v36 = sub_1B2D971EC();
    swift_release();
    sub_1B2C3F66C(v26);
    LOBYTE(v34) = !v36;
  }
  sub_1B2C3FE24(v26, (void (*)(void))type metadata accessor for LogSignpost);
  return v34 & 1;
}

uint64_t sub_1B2C3F66C(uint64_t a1)
{
  uint64_t v2 = sub_1B2E81F48();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v27 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B2E81F08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B2E81F38();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + *(int *)(v12 + 24), v8);
  uint64_t v28 = *(const char **)a1;
  char v13 = *(unsigned char *)(a1 + 16);
  swift_retain();
  uint64_t v14 = sub_1B2E81F28();
  sub_1B2E81F58();
  int v24 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v23 = v5;
  if ((v13 & 1) == 0)
  {
    uint64_t v16 = v27;
    if (v28)
    {
      uint64_t v18 = v25;
      uint64_t v17 = v26;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v16, v17) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v19 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
        uint64_t v19 = "";
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      os_signpost_id_t v21 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v14, (os_signpost_type_t)v24, v21, v28, v19, v20, 2u);
      MEMORY[0x1B3EB30C0](v20, -1, -1);
      uint64_t v5 = v23;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v16 = v27;
  if ((unint64_t)v28 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v28 >> 11 != 27)
  {
    uint64_t v18 = v25;
    uint64_t v17 = v26;
    if (v28 >> 16 <= 0x10)
    {
      uint64_t v28 = &v29;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for IntentExecResult()
{
  uint64_t result = qword_1E9C40B88;
  if (!qword_1E9C40B88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B2C3FA38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C40B78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2C3FAA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2C3FB40(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2C3FBE0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2C3FC0C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2C3FC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2C3F1F4(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1B2C3FC40(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v9 = (void *)((char *)v13 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1B2A0088C(0, v8, v9);
    uint64_t v10 = sub_1B2C3FE7C((uint64_t)v9, v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    sub_1B2A0088C(0, v8, v11);
    a3 = sub_1B2C3FE7C((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1B3EB30C0](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_1B2C3FDC4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1B2C3FE24(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1B2C3FE7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v22 = result;
  uint64_t v23 = 0;
  int64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v25 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_20;
    }
    int64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v25) {
      return sub_1B2C40234(v22, a2, v23);
    }
    unint64_t v13 = *(void *)(v24 + 8 * v12);
    ++v6;
    if (!v13)
    {
      int64_t v6 = v12 + 1;
      if (v12 + 1 >= v25) {
        return sub_1B2C40234(v22, a2, v23);
      }
      unint64_t v13 = *(void *)(v24 + 8 * v6);
      if (!v13)
      {
        int64_t v6 = v12 + 2;
        if (v12 + 2 >= v25) {
          return sub_1B2C40234(v22, a2, v23);
        }
        unint64_t v13 = *(void *)(v24 + 8 * v6);
        if (!v13) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_20:
    uint64_t v15 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(*(void *)(a3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    swift_retain();
    char v19 = a4(v16, v17, v18);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v19)
    {
      *(void *)(v22 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        return sub_1B2C40234(v22, a2, v23);
      }
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v25) {
    return sub_1B2C40234(v22, a2, v23);
  }
  unint64_t v13 = *(void *)(v24 + 8 * v14);
  if (v13)
  {
    int64_t v6 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v6 >= v25) {
      return sub_1B2C40234(v22, a2, v23);
    }
    unint64_t v13 = *(void *)(v24 + 8 * v6);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1B2C40084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return;
  }
  sub_1B2C41770();
  if (v7)
  {
    swift_retain();
    return;
  }
  uint64_t v8 = v6;
  unint64_t v9 = v5;
  sub_1B29A3EB4(&qword_1E9C38A48);
  unint64_t v10 = (void *)sub_1B2E83498();
  if (v8 < 1) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = *v9;
  }
  uint64_t v12 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_26;
    }
    uint64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_30;
    }
    if (v15 >= v8) {
      return;
    }
    ++v12;
    if (!v9[v15])
    {
      uint64_t v12 = v15 + 1;
      if (v15 + 1 >= v8) {
        return;
      }
      if (!v9[v12])
      {
        uint64_t v12 = v15 + 2;
        if (v15 + 2 >= v8) {
          return;
        }
        if (!v9[v12]) {
          break;
        }
      }
    }
LABEL_25:
    sub_1B29A08E0();
    unint64_t v11 = v18 & v17;
    unint64_t v14 = v19 + (v12 << 6);
LABEL_26:
    uint64_t v20 = *(void *)(v3 + 56);
    os_signpost_id_t v21 = (_OWORD *)(*(void *)(v3 + 48) + 48 * v14);
    long long v23 = v21[1];
    long long v22 = v21[2];
    v26[0] = *v21;
    v26[1] = v23;
    v26[2] = v22;
    uint64_t v24 = *(void **)(v20 + 8 * v14);
    sub_1B29E515C((uint64_t)v26);
    sub_1B2B078AC((uint64_t)v26, (uint64_t)v24, v10);
    if (__OFSUB__(v4--, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (!v4) {
      return;
    }
  }
  uint64_t v16 = v15 + 3;
  if (v16 >= v8) {
    return;
  }
  if (v9[v16])
  {
    uint64_t v12 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v12 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v12 >= v8) {
      return;
    }
    ++v16;
    if (v9[v12]) {
      goto LABEL_25;
    }
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_1B2C40228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2C40234(a1, a2, a3);
}

uint64_t sub_1B2C40234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  sub_1B2C41770();
  if (v8)
  {
    swift_retain();
    return v3;
  }
  uint64_t v9 = v6;
  unint64_t v10 = v5;
  sub_1B29A3EB4(v7);
  uint64_t result = sub_1B2E83498();
  uint64_t v12 = result;
  uint64_t v37 = v10;
  uint64_t v38 = v9;
  if (v9 < 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = *v10;
  }
  uint64_t v14 = 0;
  uint64_t v15 = result + 64;
  while (1)
  {
    if (v13)
    {
      unint64_t v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v17 = v16 | (v14 << 6);
    }
    else
    {
      uint64_t v18 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_41;
      }
      if (v18 >= v38) {
        return v12;
      }
      ++v14;
      if (!v37[v18])
      {
        uint64_t v14 = v18 + 1;
        if (v18 + 1 >= v38) {
          return v12;
        }
        if (!v37[v14])
        {
          uint64_t v14 = v18 + 2;
          if (v18 + 2 >= v38) {
            return v12;
          }
          if (!v37[v14])
          {
            uint64_t v19 = v18 + 3;
            if (v19 >= v38) {
              return v12;
            }
            if (!v37[v19])
            {
              while (1)
              {
                uint64_t v14 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_42;
                }
                if (v14 >= v38) {
                  return v12;
                }
                ++v19;
                if (v37[v14]) {
                  goto LABEL_25;
                }
              }
            }
            uint64_t v14 = v19;
          }
        }
      }
LABEL_25:
      sub_1B29A08E0();
      unint64_t v13 = v21 & v20;
      unint64_t v17 = v22 + (v14 << 6);
    }
    long long v23 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v17);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    uint64_t v26 = *(void *)(*(void *)(v3 + 56) + 8 * v17);
    sub_1B2E83988();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B2E82498();
    uint64_t result = sub_1B2E839E8();
    uint64_t v27 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v15 + 8 * (v28 >> 6))) == 0) {
      break;
    }
    unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_35:
    *(void *)(v15 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t v35 = (void *)(*(void *)(v12 + 48) + 16 * v30);
    *uint64_t v35 = v25;
    v35[1] = v24;
    *(void *)(*(void *)(v12 + 56) + 8 * v30) = v26;
    ++*(void *)(v12 + 16);
    if (__OFSUB__(v4--, 1)) {
      goto LABEL_40;
    }
    if (!v4) {
      return v12;
    }
  }
  char v31 = 0;
  unint64_t v32 = (unint64_t)(63 - v27) >> 6;
  while (++v29 != v32 || (v31 & 1) == 0)
  {
    BOOL v33 = v29 == v32;
    if (v29 == v32) {
      unint64_t v29 = 0;
    }
    v31 |= v33;
    uint64_t v34 = *(void *)(v15 + 8 * v29);
    if (v34 != -1)
    {
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1B2C404B0(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t Context = (int *)type metadata accessor for QueryContext();
    uint64_t v9 = Context[7];
    unint64_t v10 = (char *)v6 + v9;
    unint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1B2E80668();
    unint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    swift_retain();
    v13(v10, v11, v12);
    uint64_t v14 = Context[8];
    uint64_t v15 = (void *)((char *)v6 + v14);
    unint64_t v16 = (void *)((char *)a2 + v14);
    unint64_t v17 = *(void *)((char *)a2 + v14 + 88);
    unsigned __int8 v18 = *((unsigned char *)a2 + v14 + 104);
    if (v17 >> 1 == 0xFFFFFFFF && (v18 & 0x1E) == 0)
    {
      memcpy(v15, v16, 0x69uLL);
    }
    else
    {
      uint64_t v20 = *v16;
      uint64_t v21 = v16[1];
      uint64_t v22 = v16[2];
      uint64_t v23 = v16[3];
      uint64_t v42 = v16[5];
      uint64_t v43 = v16[4];
      uint64_t v40 = v16[7];
      uint64_t v41 = v16[6];
      uint64_t v44 = v16[8];
      uint64_t v45 = v16[9];
      uint64_t v46 = v16[10];
      uint64_t v47 = v16[12];
      sub_1B29C6430(*v16, v21, v22, v23, v43, v42, v41, v40, v44, v45, v46, v17, v47, v18);
      *uint64_t v15 = v20;
      v15[1] = v21;
      v15[2] = v22;
      v15[3] = v23;
      v15[4] = v43;
      v15[5] = v42;
      v15[6] = v41;
      v15[7] = v40;
      v15[8] = v44;
      v15[9] = v45;
      v15[10] = v46;
      v15[11] = v17;
      v15[12] = v47;
      *((unsigned char *)v15 + 104) = v18;
    }
    *(void *)((char *)v6 + Context[9]) = *(void *)((char *)a2 + Context[9]);
    *(void *)((char *)v6 + Context[10]) = *(void *)((char *)a2 + Context[10]);
    uint64_t v24 = Context[11];
    uint64_t v25 = (char *)v6 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = *(void *)((char *)a2 + v24);
    uint64_t v28 = *(void *)((char *)a2 + v24 + 8);
    unsigned __int8 v29 = *((unsigned char *)a2 + v24 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B29C65EC(v27, v28, v29);
    *(void *)uint64_t v25 = v27;
    *((void *)v25 + 1) = v28;
    v25[16] = v29;
    *((void *)v25 + 3) = *((void *)v26 + 3);
    uint64_t v30 = Context[12];
    char v31 = (void *)((char *)v6 + v30);
    unint64_t v32 = (void *)((char *)a2 + v30);
    uint64_t v33 = v32[1];
    *char v31 = *v32;
    v31[1] = v33;
    v31[2] = v32[2];
    *((unsigned char *)v6 + Context[13]) = *((unsigned char *)a2 + Context[13]);
    *((unsigned char *)v6 + Context[14]) = *((unsigned char *)a2 + Context[14]);
    uint64_t v34 = a3[6];
    *(void *)((char *)v6 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    uint64_t v35 = (char *)v6 + v34;
    BOOL v36 = (char *)a2 + v34;
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    *((void *)v35 + 2) = *((void *)v36 + 2);
    *((_DWORD *)v35 + 6) = *((_DWORD *)v36 + 6);
    uint64_t v38 = *((void *)v36 + 5);
    *((void *)v35 + 4) = *((void *)v36 + 4);
    *((void *)v35 + 5) = v38;
    *((void *)v35 + 6) = *((void *)v36 + 6);
    *((unsigned char *)v6 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t sub_1B2C407A8(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v3 = a1 + Context[7];
  uint64_t v4 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = a1 + Context[8];
  unint64_t v6 = *(void *)(v5 + 88);
  unsigned __int8 v7 = *(unsigned char *)(v5 + 104);
  if (v6 >> 1 != 0xFFFFFFFF || (v7 & 0x1E) != 0) {
    sub_1B2A34A94(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), v6, *(void *)(v5 + 96), v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2A2A2C8(*(void *)(a1 + Context[11]), *(void *)(a1 + Context[11] + 8), *(unsigned char *)(a1 + Context[11] + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1B2C40918(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v7 = Context[7];
  char v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  unint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = Context[8];
  unint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  unint64_t v15 = *(void *)((char *)a2 + v12 + 88);
  unsigned __int8 v16 = *((unsigned char *)a2 + v12 + 104);
  if (v15 >> 1 == 0xFFFFFFFF && (v16 & 0x1E) == 0)
  {
    memcpy(v13, v14, 0x69uLL);
  }
  else
  {
    uint64_t v18 = *v14;
    uint64_t v19 = v14[1];
    uint64_t v20 = v14[2];
    uint64_t v21 = v14[3];
    uint64_t v40 = v14[5];
    uint64_t v41 = v14[4];
    uint64_t v38 = v14[7];
    uint64_t v39 = v14[6];
    uint64_t v42 = v14[8];
    uint64_t v43 = v14[9];
    uint64_t v44 = v14[10];
    uint64_t v45 = v14[12];
    sub_1B29C6430(*v14, v19, v20, v21, v41, v40, v39, v38, v42, v43, v44, v15, v45, v16);
    *unint64_t v13 = v18;
    v13[1] = v19;
    void v13[2] = v20;
    v13[3] = v21;
    v13[4] = v41;
    v13[5] = v40;
    v13[6] = v39;
    v13[7] = v38;
    v13[8] = v42;
    v13[9] = v43;
    v13[10] = v44;
    v13[11] = v15;
    v13[12] = v45;
    *((unsigned char *)v13 + 104) = v16;
  }
  *(void *)((char *)a1 + Context[9]) = *(void *)((char *)a2 + Context[9]);
  *(void *)((char *)a1 + Context[10]) = *(void *)((char *)a2 + Context[10]);
  uint64_t v22 = Context[11];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)((char *)a2 + v22);
  uint64_t v26 = *(void *)((char *)a2 + v22 + 8);
  unsigned __int8 v27 = *((unsigned char *)a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29C65EC(v25, v26, v27);
  *(void *)uint64_t v23 = v25;
  *((void *)v23 + 1) = v26;
  v23[16] = v27;
  *((void *)v23 + 3) = *((void *)v24 + 3);
  uint64_t v28 = Context[12];
  unsigned __int8 v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v31 = v30[1];
  *unsigned __int8 v29 = *v30;
  v29[1] = v31;
  v29[2] = v30[2];
  *((unsigned char *)a1 + Context[13]) = *((unsigned char *)a2 + Context[13]);
  *((unsigned char *)a1 + Context[14]) = *((unsigned char *)a2 + Context[14]);
  uint64_t v32 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = v35;
  *((void *)v33 + 2) = *((void *)v34 + 2);
  *((_DWORD *)v33 + 6) = *((_DWORD *)v34 + 6);
  uint64_t v36 = *((void *)v34 + 5);
  *((void *)v33 + 4) = *((void *)v34 + 4);
  *((void *)v33 + 5) = v36;
  *((void *)v33 + 6) = *((void *)v34 + 6);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1B2C40BC4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v7 = Context[7];
  char v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = Context[8];
  uint64_t v12 = (char *)a1 + v11;
  unint64_t v13 = (void *)((char *)a2 + v11);
  unint64_t v14 = *(void *)((char *)a1 + v11 + 88);
  int v15 = *((unsigned char *)a1 + v11 + 104) & 0x1E;
  unint64_t v16 = *(void *)((char *)a2 + v11 + 88);
  unsigned __int8 v17 = *((unsigned char *)a2 + v11 + 104);
  BOOL v19 = (v17 & 0x1E) == 0 && v16 >> 1 == 0xFFFFFFFF;
  if (v14 >> 1 == 0xFFFFFFFF && v15 == 0)
  {
    if (!v19)
    {
      uint64_t v40 = v13[1];
      uint64_t v41 = v13[2];
      uint64_t v42 = v13[3];
      char v80 = a3;
      uint64_t v43 = v13[5];
      uint64_t v68 = v43;
      uint64_t v70 = v13[4];
      uint64_t v44 = v13[7];
      uint64_t v64 = v44;
      uint64_t v66 = v13[6];
      uint64_t v72 = v13[8];
      uint64_t v74 = v13[9];
      uint64_t v76 = v13[10];
      uint64_t v78 = v13[12];
      uint64_t v45 = *v13;
      uint64_t v46 = v41;
      sub_1B29C6430(v45, v40, v41, v42, v70, v43, v66, v44, v72, v74, v76, v16, v78, v17);
      *(void *)uint64_t v12 = v45;
      *((void *)v12 + 1) = v40;
      *((void *)v12 + 2) = v46;
      *((void *)v12 + 3) = v42;
      *((void *)v12 + 4) = v70;
      *((void *)v12 + 5) = v68;
      *((void *)v12 + 6) = v66;
      *((void *)v12 + 7) = v64;
      *((void *)v12 + 8) = v72;
      *((void *)v12 + 9) = v74;
      *((void *)v12 + 10) = v76;
      *((void *)v12 + 11) = v16;
      a3 = v80;
      *((void *)v12 + 12) = v78;
      v12[104] = v17;
      goto LABEL_17;
    }
  }
  else
  {
    if (!v19)
    {
      uint64_t v21 = *v13;
      uint64_t v22 = v13[1];
      uint64_t v71 = *v13;
      uint64_t v79 = a3;
      uint64_t v23 = v13[2];
      uint64_t v24 = v13[3];
      uint64_t v25 = v13[5];
      uint64_t v67 = v25;
      uint64_t v69 = v13[4];
      uint64_t v26 = v13[7];
      uint64_t v63 = v26;
      uint64_t v65 = v13[6];
      uint64_t v73 = v13[8];
      uint64_t v75 = v13[9];
      uint64_t v77 = v13[10];
      uint64_t v27 = v13[12];
      sub_1B29C6430(v21, v22, v23, v24, v69, v25, v65, v26, v73, v75, v77, v16, v27, v17);
      uint64_t v28 = *(void *)v12;
      uint64_t v29 = *((void *)v12 + 1);
      uint64_t v30 = *((void *)v12 + 2);
      uint64_t v31 = *((void *)v12 + 3);
      uint64_t v32 = *((void *)v12 + 4);
      uint64_t v33 = *((void *)v12 + 5);
      uint64_t v34 = *((void *)v12 + 6);
      uint64_t v35 = *((void *)v12 + 7);
      long long v36 = *((_OWORD *)v12 + 4);
      long long v37 = *((_OWORD *)v12 + 5);
      uint64_t v38 = *((void *)v12 + 12);
      unsigned __int8 v39 = v12[104];
      *(void *)uint64_t v12 = v71;
      *((void *)v12 + 1) = v22;
      *((void *)v12 + 2) = v23;
      *((void *)v12 + 3) = v24;
      *((void *)v12 + 4) = v69;
      *((void *)v12 + 5) = v67;
      *((void *)v12 + 6) = v65;
      *((void *)v12 + 7) = v63;
      *((void *)v12 + 8) = v73;
      *((void *)v12 + 9) = v75;
      a3 = v79;
      *((void *)v12 + 10) = v77;
      *((void *)v12 + 11) = v16;
      *((void *)v12 + 12) = v27;
      v12[104] = v17;
      sub_1B2A34A94(v28, v29, v30, v31, v32, v33, v34, v35, v36, *((uint64_t *)&v36 + 1), v37, *((uint64_t *)&v37 + 1), v38, v39);
      goto LABEL_17;
    }
    sub_1B2C40FF8((uint64_t)v12);
  }
  memcpy(v12, v13, 0x69uLL);
LABEL_17:
  *(void *)((char *)a1 + Context[9]) = *(void *)((char *)a2 + Context[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + Context[10]) = *(void *)((char *)a2 + Context[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = Context[11];
  uint64_t v48 = (char *)a1 + v47;
  char v49 = (char *)a2 + v47;
  uint64_t v50 = *(void *)((char *)a2 + v47);
  uint64_t v51 = *(void *)((char *)a2 + v47 + 8);
  unsigned __int8 v52 = *((unsigned char *)a2 + v47 + 16);
  sub_1B29C65EC(v50, v51, v52);
  uint64_t v53 = *(void *)v48;
  uint64_t v54 = *((void *)v48 + 1);
  *(void *)uint64_t v48 = v50;
  *((void *)v48 + 1) = v51;
  unsigned __int8 v55 = v48[16];
  v48[16] = v52;
  sub_1B2A2A2C8(v53, v54, v55);
  *((void *)v48 + 3) = *((void *)v49 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = Context[12];
  uint64_t v57 = (void *)((char *)a1 + v56);
  uint64_t v58 = (char *)a2 + v56;
  *uint64_t v57 = *(void *)((char *)a2 + v56);
  v57[1] = *(void *)((char *)a2 + v56 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57[2] = *((void *)v58 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + Context[13]) = *((unsigned char *)a2 + Context[13]);
  *((unsigned char *)a1 + Context[14]) = *((unsigned char *)a2 + Context[14]);
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_retain();
  swift_release();
  uint64_t v59 = a3[6];
  uint64_t v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  *(void *)uint64_t v60 = *(void *)((char *)a2 + v59);
  *((void *)v60 + 1) = *(void *)((char *)a2 + v59 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v60 + 2) = *((void *)v61 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_DWORD *)v60 + 6) = *((_DWORD *)v61 + 6);
  *((void *)v60 + 4) = *((void *)v61 + 4);
  *((void *)v60 + 5) = *((void *)v61 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v60 + 6) = *((void *)v61 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_1B2C40FF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2C4104C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v7 = Context[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  memcpy((void *)(a1 + Context[8]), (const void *)(a2 + Context[8]), 0x69uLL);
  *(void *)(a1 + Context[9]) = *(void *)(a2 + Context[9]);
  *(void *)(a1 + Context[10]) = *(void *)(a2 + Context[10]);
  uint64_t v11 = Context[11];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  unint64_t v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = Context[12];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(unsigned char *)(a1 + Context[13]) = *(unsigned char *)(a2 + Context[13]);
  *(unsigned char *)(a1 + Context[14]) = *(unsigned char *)(a2 + Context[14]);
  uint64_t v18 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
  *(void *)(v19 + 48) = *(void *)(v20 + 48);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

void *sub_1B2C41198(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v7 = Context[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = Context[8];
  uint64_t v12 = (void *)((char *)a1 + v11);
  unint64_t v13 = (_OWORD *)((char *)a2 + v11);
  unint64_t v14 = *(void *)((char *)a1 + v11 + 88);
  unsigned __int8 v15 = *((unsigned char *)v12 + 104);
  if (v14 >> 1 == 0xFFFFFFFF && (v15 & 0x1E) == 0) {
    goto LABEL_11;
  }
  unint64_t v17 = *((void *)v13 + 11);
  char v18 = *((unsigned char *)v13 + 104);
  if (v17 >> 1 == 0xFFFFFFFF && (v18 & 0x1E) == 0)
  {
    sub_1B2C40FF8((uint64_t)v12);
LABEL_11:
    memcpy(v12, v13, 0x69uLL);
    goto LABEL_12;
  }
  uint64_t v20 = *((void *)v13 + 10);
  uint64_t v21 = *((void *)v13 + 12);
  uint64_t v22 = *v12;
  uint64_t v23 = v12[1];
  uint64_t v24 = v12[2];
  uint64_t v25 = v12[3];
  uint64_t v26 = v12[4];
  uint64_t v27 = v12[5];
  uint64_t v28 = v12[6];
  uint64_t v29 = v12[7];
  long long v30 = *((_OWORD *)v12 + 4);
  uint64_t v31 = v12[10];
  uint64_t v32 = v12[12];
  long long v33 = v13[1];
  *(_OWORD *)uint64_t v12 = *v13;
  *((_OWORD *)v12 + 1) = v33;
  long long v34 = v13[3];
  *((_OWORD *)v12 + 2) = v13[2];
  *((_OWORD *)v12 + 3) = v34;
  *((_OWORD *)v12 + 4) = v13[4];
  v12[10] = v20;
  v12[11] = v17;
  v12[12] = v21;
  *((unsigned char *)v12 + 104) = v18;
  sub_1B2A34A94(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, v14, v32, v15);
LABEL_12:
  *(void *)((char *)a1 + Context[9]) = *(void *)((char *)a2 + Context[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + Context[10]) = *(void *)((char *)a2 + Context[10]);
  swift_bridgeObjectRelease();
  uint64_t v35 = Context[11];
  long long v36 = (char *)a1 + v35;
  long long v37 = (char *)a2 + v35;
  LOBYTE(v35) = *((unsigned char *)a2 + v35 + 16);
  uint64_t v38 = *(void *)v36;
  uint64_t v39 = *((void *)v36 + 1);
  *(_OWORD *)long long v36 = *(_OWORD *)v37;
  unsigned __int8 v40 = v36[16];
  v36[16] = v35;
  sub_1B2A2A2C8(v38, v39, v40);
  *((void *)v36 + 3) = *((void *)v37 + 3);
  swift_bridgeObjectRelease();
  uint64_t v41 = Context[12];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = *(void *)((char *)a2 + v41 + 8);
  *uint64_t v42 = *(void *)((char *)a2 + v41);
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v42[2] = *((void *)v43 + 2);
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + Context[13]) = *((unsigned char *)a2 + Context[13]);
  *((unsigned char *)a1 + Context[14]) = *((unsigned char *)a2 + Context[14]);
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_release();
  uint64_t v45 = a3[6];
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = *(void *)((char *)a2 + v45 + 8);
  *(void *)uint64_t v46 = *(void *)((char *)a2 + v45);
  *((void *)v46 + 1) = v48;
  swift_bridgeObjectRelease();
  *((void *)v46 + 2) = *((void *)v47 + 2);
  swift_bridgeObjectRelease();
  *((_DWORD *)v46 + 6) = *((_DWORD *)v47 + 6);
  uint64_t v49 = *((void *)v47 + 5);
  *((void *)v46 + 4) = *((void *)v47 + 4);
  *((void *)v46 + 5) = v49;
  swift_bridgeObjectRelease();
  *((void *)v46 + 6) = *((void *)v47 + 6);
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_1B2C4142C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2C41440);
}

uint64_t sub_1B2C41440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for QueryContext();
  sub_1B299B768();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_1B2C414CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2C414E0);
}

void sub_1B2C414E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for QueryContext();
  sub_1B299B768();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1B2C41568()
{
  uint64_t result = type metadata accessor for QueryContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B2C41614()
{
  return swift_bridgeObjectRelease();
}

void sub_1B2C41630(uint64_t a1@<X8>)
{
  *(void *)(v2 - 280) = a1;
  *(void *)(v2 - 272) = v1;
}

uint64_t sub_1B2C41644()
{
  return swift_bridgeObjectRelease();
}

void sub_1B2C41660()
{
  *(void *)(v0 - 280) = 0;
  *(void *)(v0 - 272) = 0xE000000000000000;
}

uint64_t sub_1B2C4167C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C41694(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_1B2C416D8()
{
  return 0;
}

double sub_1B2C416F0@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 80) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_1B2C41708(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = *(void *)(v2 - 328);
  return sub_1B2C3FE24(v4, a2);
}

uint64_t sub_1B2C41720()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C41738(uint64_t a1, uint64_t *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B2C3CD74(a1, a2, a3, a4, v8, v7, a7, 25);
}

uint64_t sub_1B2C41758()
{
  return swift_release();
}

uint64_t sub_1B2C41784()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C4179C()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B2C417B4()
{
  return sub_1B2C3D9C4();
}

uint64_t sub_1B2C417D4()
{
  return swift_bridgeObjectRelease();
}

uint64_t HandleView.identifier(forHandle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1B29A3EB4(&qword_1EB7E5B00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1B2A184AC();
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1EB7D94F8);
  sub_1B2E80C28();
  swift_bridgeObjectRelease();
  if (*(void *)(v10 + 16))
  {
    uint64_t v7 = *(void *)(v10 + 48);
    uint64_t result = swift_bridgeObjectRelease();
    char v9 = 0;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    char v9 = 1;
  }
  *(void *)a3 = v7;
  *(unsigned char *)(a3 + 8) = v9;
  return result;
}

uint64_t HandleView.identifiers(forHandles:)(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 8);
  swift_getObjectType();
  uint64_t v50 = a1;
  sub_1B29A3EB4(&qword_1EB7D94F8);
  sub_1B29A0ADC();
  if (v3)
  {
    if (qword_1EB7E5AE0 != -1) {
LABEL_23:
    }
      swift_once();
    uint64_t v4 = sub_1B2E81FB8();
    sub_1B29A4B98(v4, (uint64_t)qword_1EB7E5AC0);
    id v5 = v3;
    id v6 = v3;
    uint64_t v7 = (void *)sub_1B2E81F98();
    os_log_type_t v8 = sub_1B2E82DB8();
    if (sub_1B29A1CF0(v8))
    {
      sub_1B29A463C();
      uint64_t v57 = sub_1B299F808();
      sub_1B29A5054(4.8149e-34);
      swift_getErrorValue();
      uint64_t v9 = sub_1B2E838A8();
      sub_1B29BF6BC(v9, v10, (uint64_t)&v57, v11, v12, v13, v14, v15, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56,
        v57);
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();

      sub_1B2C4283C(&dword_1B2996000, v16, v17, "HandleView: unable to retrieve records matching handles: %s");
      sub_1B299BB84();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {
    }
    uint64_t v18 = sub_1B2E82148();

    return v18;
  }
  uint64_t v18 = sub_1B2E82148();
  uint64_t v47 = v57;
  uint64_t v19 = *(void *)(v57 + 16);
  if (!v19)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return v18;
  }
  uint64_t v20 = (void **)(swift_bridgeObjectRetain() + 48);
  while (1)
  {
    uint64_t v3 = *v20;
    swift_bridgeObjectRetain();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1B2C4285C(isUniquelyReferenced_nonNull_native, v22, v23, v24, v25, v26, v27, v28, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56,
      v18,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63);
    sub_1B2C42874();
    if (v31)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v32 = v29;
    char v33 = v30;
    sub_1B29A3EB4(&qword_1E9C37B00);
    uint64_t v34 = sub_1B2E83398();
    if (v34) {
      break;
    }
LABEL_11:
    uint64_t v18 = v57;
    if (v33)
    {
      *(void *)(*(void *)(v57 + 56) + 8 * v32) = v3;
    }
    else
    {
      sub_1B299DAEC();
      if (v31) {
        goto LABEL_22;
      }
      *(void *)(v57 + 16) = v44;
      swift_bridgeObjectRetain();
    }
    v20 += 3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  uint64_t v42 = sub_1B2C4285C(v34, v35, v36, v37, v38, v39, v40, v41, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56,
          v57,
          v58,
          v59,
          v60,
          v61,
          v62,
          v63);
  if ((v33 & 1) == (v43 & 1))
  {
    uint64_t v32 = v42;
    goto LABEL_11;
  }
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t HandleView.handleToIdentifierMap()()
{
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1EB7D94F8);
  sub_1B29A0ADC();
  if (v0)
  {
    if (qword_1EB7E5AE0 != -1) {
LABEL_23:
    }
      swift_once();
    uint64_t v1 = sub_1B2E81FB8();
    sub_1B29A4B98(v1, (uint64_t)qword_1EB7E5AC0);
    id v2 = v0;
    id v3 = v0;
    uint64_t v4 = (void *)sub_1B2E81F98();
    os_log_type_t v5 = sub_1B2E82DB8();
    if (sub_1B29A1CF0(v5))
    {
      sub_1B29A463C();
      uint64_t v50 = sub_1B299F808();
      sub_1B29A5054(4.8149e-34);
      swift_getErrorValue();
      uint64_t v6 = sub_1B2E838A8();
      sub_1B29BF6BC(v6, v7, (uint64_t)&v50, v8, v9, v10, v11, v12, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53,
        v54);
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();

      sub_1B2C4283C(&dword_1B2996000, v13, v14, "HandleView: unable to retrieve all records: %s");
      sub_1B299BB84();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {
    }
    uint64_t v15 = sub_1B2E82148();

    return v15;
  }
  uint64_t v15 = sub_1B2E82148();
  uint64_t v43 = v50;
  uint64_t v16 = *(void *)(v50 + 16);
  if (!v16)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return v15;
  }
  uint64_t v17 = (void **)(swift_bridgeObjectRetain() + 48);
  while (1)
  {
    uint64_t v0 = *v17;
    swift_bridgeObjectRetain();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1B2C4285C(isUniquelyReferenced_nonNull_native, v19, v20, v21, v22, v23, v24, v25, v43, v44, v45, v46, v47, v48, v49, v15, v51, v52, v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60);
    sub_1B2C42874();
    if (v28)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v29 = v26;
    char v30 = v27;
    sub_1B29A3EB4(&qword_1E9C37B00);
    uint64_t v31 = sub_1B2E83398();
    if (v31) {
      break;
    }
LABEL_11:
    uint64_t v15 = v50;
    if (v30)
    {
      *(void *)(*(void *)(v50 + 56) + 8 * v29) = v0;
    }
    else
    {
      sub_1B299DAEC();
      if (v28) {
        goto LABEL_22;
      }
      *(void *)(v50 + 16) = v41;
      swift_bridgeObjectRetain();
    }
    v17 += 3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v16)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  uint64_t v39 = sub_1B2C4285C(v31, v32, v33, v34, v35, v36, v37, v38, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53,
          v54,
          v55,
          v56,
          v57,
          v58,
          v59,
          v60);
  if ((v30 & 1) == (v40 & 1))
  {
    uint64_t v29 = v39;
    goto LABEL_11;
  }
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t HandleView.identifierToHandleMap()()
{
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1EB7D94F8);
  sub_1B29A0ADC();
  if (v0)
  {
    if (qword_1EB7E5AE0 != -1) {
LABEL_22:
    }
      swift_once();
    uint64_t v1 = sub_1B2E81FB8();
    sub_1B29A4B98(v1, (uint64_t)qword_1EB7E5AC0);
    id v2 = v0;
    id v3 = v0;
    uint64_t v4 = (void *)sub_1B2E81F98();
    os_log_type_t v5 = sub_1B2E82DB8();
    if (sub_1B29A1CF0(v5))
    {
      sub_1B29A463C();
      v39[0] = sub_1B299F808();
      sub_1B29A5054(4.8149e-34);
      swift_getErrorValue();
      uint64_t v6 = sub_1B2E838A8();
      sub_1B29BF6BC(v6, v7, (uint64_t)v39, v8, v9, v10, v11, v12, v37, v38, v39[0], v39[1], v40, v41, v42, v43, v44, v45, v46,
        v47);
      uint64_t v40 = v13;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();

      sub_1B2C4283C(&dword_1B2996000, v14, v15, "HandleView: unable to retrieve all records: %s");
      sub_1B299BB84();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {
    }
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B2A4B170();
    uint64_t v16 = (void *)sub_1B2E82148();

    return (uint64_t)v16;
  }
  sub_1B29A3EB4(&qword_1EB7E4A80);
  sub_1B2A4B170();
  uint64_t v16 = (void *)sub_1B2E82148();
  uint64_t v38 = v39[0];
  uint64_t v17 = *(void *)(v39[0] + 16);
  if (!v17)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v16;
  }
  uint64_t v0 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  while (1)
  {
    uint64_t v19 = *(v0 - 2);
    uint64_t v18 = *(v0 - 1);
    uint64_t v20 = *v0;
    swift_bridgeObjectRetain_n();
    swift_isUniquelyReferenced_nonNull_native();
    v39[0] = (uint64_t)v16;
    unint64_t v21 = sub_1B29DAE70();
    if (__OFADD__(v16[2], (v22 & 1) == 0))
    {
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    unint64_t v23 = v21;
    char v24 = v22;
    sub_1B29A3EB4(&qword_1E9C40B98);
    char v25 = sub_1B2E83398();
    uint64_t v16 = (void *)v39[0];
    if (v25) {
      break;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      v16[(v23 >> 6) + 8] |= 1 << v23;
      *(void *)(v16[6] + 8 * v23) = v20;
      *(void *)(v16[7] + 8 * v23) = MEMORY[0x1E4FBC870];
      uint64_t v33 = v16[2];
      BOOL v34 = __OFADD__(v33, 1);
      uint64_t v35 = v33 + 1;
      if (v34) {
        goto LABEL_21;
      }
      v16[2] = v35;
    }
    v0 += 3;
    sub_1B2A00B00((uint64_t)v39, v19, v18, v28, v29, v30, v31, v32, v37, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  unint64_t v26 = sub_1B29DAE70();
  if ((v24 & 1) == (v27 & 1))
  {
    unint64_t v23 = v26;
    goto LABEL_11;
  }
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2C424B8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v11 = a2;
  uint64_t v4 = sub_1B29A3EB4((uint64_t *)&unk_1E9C40BA0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[6] = a1;
  v12[3] = sub_1B2E81508();
  v12[4] = MEMORY[0x1E4F62E90];
  sub_1B29D1C70(v12);
  sub_1B2E81518();
  v13[3] = sub_1B2E80BE8();
  v13[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v13);
  sub_1B29A3EB4(&qword_1EB7E4A80);
  sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
  sub_1B2E82648();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
  sub_1B2C427D8();
  sub_1B2E80978();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v13);
  sub_1B29D22C4((unint64_t *)&unk_1E9C40BB0, (uint64_t *)&unk_1E9C40BA0);
  sub_1B2C4278C();
  uint64_t v8 = sub_1B2E809F8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v2) {
    *uint64_t v11 = v8;
  }
  return result;
}

uint64_t sub_1B2C426E4@<X0>(uint64_t *a1@<X8>)
{
  sub_1B2C4278C();
  sub_1B2C427D8();
  uint64_t result = sub_1B2E80CD8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1B2C4274C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B2C424B8(*(void *)(v1 + 16), a1);
}

uint64_t dispatch thunk of HandleViewProtocol.handleToIdentifierMap()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for HandleView()
{
  return &type metadata for HandleView;
}

unint64_t sub_1B2C4278C()
{
  unint64_t result = qword_1EB7D8790;
  if (!qword_1EB7D8790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8790);
  }
  return result;
}

unint64_t sub_1B2C427D8()
{
  unint64_t result = qword_1E9C372F8[0];
  if (!qword_1E9C372F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C372F8);
  }
  return result;
}

uint64_t sub_1B2C42824@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B2C4274C(a1);
}

void sub_1B2C4283C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1B2C4285C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_1B29DB060(v27, v26, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

ValueMetadata *type metadata accessor for HandleViewRecord()
{
  return &type metadata for HandleViewRecord;
}

uint64_t sub_1B2C42898()
{
  return sub_1B2E839C8();
}

BOOL sub_1B2C428F4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return v2 == v3;
  }
  char v5 = sub_1B2E837A8();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t sub_1B2C42950(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C646E6168 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2C42A20(char a1)
{
  if (a1) {
    return 25705;
  }
  else {
    return 0x656C646E6168;
  }
}

uint64_t sub_1B2C42A48(void *a1)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C40BC8);
  sub_1B299D278();
  uint64_t v12 = v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v1 + 16);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2C43000();
  sub_1B2E83A38();
  char v15 = 0;
  sub_1B2E83688();
  if (!v2)
  {
    uint64_t v13 = v11;
    char v14 = 1;
    sub_1B29CB42C();
    sub_1B2E836D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v8, v4);
}

uint64_t sub_1B2C42BB0()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2C42C24@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C37B28);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2C43000();
  sub_1B2E83A18();
  if (v2) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  uint64_t v6 = sub_1B2E83568();
  uint64_t v8 = v7;
  sub_1B29CB3E0();
  swift_bridgeObjectRetain();
  sub_1B2E835B8();
  uint64_t v9 = sub_1B299B8A4();
  v10(v9);
  *a2 = v6;
  a2[1] = v8;
  a2[2] = v12;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C42DDC()
{
  return sub_1B2C42A20(*v0);
}

uint64_t sub_1B2C42DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C42950(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C42E0C(uint64_t a1)
{
  unint64_t v2 = sub_1B2C43000();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C42E48(uint64_t a1)
{
  unint64_t v2 = sub_1B2C43000();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2C42E84@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2C42C24(a1, a2);
}

uint64_t sub_1B2C42E9C(void *a1)
{
  return sub_1B2C42A48(a1);
}

uint64_t sub_1B2C42EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2C4304C();

  return MEMORY[0x1F411AC60](a1, a2, a3, v6);
}

uint64_t sub_1B2C42F18()
{
  return 0x695F656C646E6168;
}

uint64_t sub_1B2C42F3C()
{
  return sub_1B2E839E8();
}

unint64_t sub_1B2C42FB4()
{
  unint64_t result = qword_1E9C40BC0;
  if (!qword_1E9C40BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40BC0);
  }
  return result;
}

unint64_t sub_1B2C43000()
{
  unint64_t result = qword_1E9C372D8;
  if (!qword_1E9C372D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C372D8);
  }
  return result;
}

unint64_t sub_1B2C4304C()
{
  unint64_t result = qword_1EB7D8798;
  if (!qword_1EB7D8798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D8798);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HandleViewRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C43164);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HandleViewRecord.CodingKeys()
{
  return &type metadata for HandleViewRecord.CodingKeys;
}

unint64_t sub_1B2C431A0()
{
  unint64_t result = qword_1E9C40BD0[0];
  if (!qword_1E9C40BD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C40BD0);
  }
  return result;
}

unint64_t sub_1B2C431F0()
{
  unint64_t result = qword_1E9C372E8;
  if (!qword_1E9C372E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C372E8);
  }
  return result;
}

unint64_t sub_1B2C43240()
{
  unint64_t result = qword_1E9C372E0;
  if (!qword_1E9C372E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C372E0);
  }
  return result;
}

uint64_t sub_1B2C4328C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_1B2B1D124(&v24, a1);
  uint64_t v2 = v25;
  if (!v28)
  {
    int64_t v21 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      goto LABEL_48;
    }
    int64_t v5 = (unint64_t)(v26 + 64) >> 6;
    if (v21 < v5)
    {
      unint64_t v22 = *(void *)(v25 + 8 * v21);
      int64_t v6 = v27 + 1;
      if (v22)
      {
LABEL_32:
        unint64_t v3 = (v22 - 1) & v22;
        unint64_t v4 = __clz(__rbit64(v22)) + (v6 << 6);
        goto LABEL_3;
      }
      int64_t v6 = v27 + 2;
      if (v27 + 2 < v5)
      {
        unint64_t v22 = *(void *)(v25 + 8 * v6);
        if (v22) {
          goto LABEL_32;
        }
        int64_t v6 = v27 + 3;
        if (v27 + 3 < v5)
        {
          unint64_t v22 = *(void *)(v25 + 8 * v6);
          if (v22) {
            goto LABEL_32;
          }
          int64_t v6 = v27 + 4;
          if (v27 + 4 < v5)
          {
            unint64_t v22 = *(void *)(v25 + 8 * v6);
            if (v22) {
              goto LABEL_32;
            }
            int64_t v6 = v27 + 5;
            if (v27 + 5 < v5)
            {
              unint64_t v22 = *(void *)(v25 + 8 * v6);
              if (!v22)
              {
                int64_t v23 = v27 + 6;
                do
                {
                  if (v23 >= v5) {
                    goto LABEL_45;
                  }
                  unint64_t v22 = *(void *)(v25 + 8 * v23++);
                }
                while (!v22);
                int64_t v6 = v23 - 1;
              }
              goto LABEL_32;
            }
          }
        }
      }
    }
LABEL_45:
    swift_bridgeObjectRetain();
    sub_1B2C3FC0C((uint64_t)&v24);
    return 0;
  }
  unint64_t v3 = (v28 - 1) & v28;
  unint64_t v4 = __clz(__rbit64(v28)) | (v27 << 6);
  int64_t v5 = (unint64_t)(v26 + 64) >> 6;
  int64_t v6 = v27;
LABEL_3:
  uint64_t v7 = v24;
  uint64_t v8 = (uint64_t *)(*(void *)(v24 + 48) + 16 * v4);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v3)
    {
      unint64_t v11 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_22;
    }
    int64_t v13 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v13 >= v5) {
      goto LABEL_28;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v13);
    int64_t v15 = v6 + 1;
    if (!v14)
    {
      int64_t v15 = v6 + 2;
      if (v6 + 2 >= v5) {
        goto LABEL_28;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v6 + 3;
        if (v6 + 3 >= v5) {
          goto LABEL_28;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v6 + 4;
          if (v6 + 4 >= v5) {
            goto LABEL_28;
          }
          unint64_t v14 = *(void *)(v2 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v6 + 5;
            if (v6 + 5 >= v5) {
              goto LABEL_28;
            }
            unint64_t v14 = *(void *)(v2 + 8 * v15);
            if (!v14)
            {
              int64_t v16 = v6 + 6;
              while (v16 < v5)
              {
                unint64_t v14 = *(void *)(v2 + 8 * v16++);
                if (v14)
                {
                  int64_t v15 = v16 - 1;
                  goto LABEL_21;
                }
              }
LABEL_28:
              swift_release();
              return v10;
            }
          }
        }
      }
    }
LABEL_21:
    unint64_t v3 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v6 = v15;
LABEL_22:
    uint64_t v17 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v12);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    if (v10 != *v17 || v9 != v19)
    {
      uint64_t result = sub_1B2E837A8();
      if (result)
      {
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v9 = v19;
        uint64_t v10 = v18;
      }
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1B2C43514(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    unint64_t v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v2 < v5) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

uint64_t sub_1B2C43558(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return 0;
  }
  uint64_t result = a1[4];
  uint64_t v4 = v1 - 1;
  if (v1 != 1)
  {
    double v5 = a1 + 5;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if (result <= v7) {
        uint64_t result = v6;
      }
      --v4;
    }
    while (v4);
  }
  return result;
}

void sub_1B2C4359C()
{
  sub_1B299B720();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_1B29A3EB4((uint64_t *)&unk_1E9C39D20);
  sub_1B299D31C();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = *(void *)(v1 + 16);
  if (v13)
  {
    uint64_t v30 = v3;
    uint64_t v31 = v6;
    unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v14((char *)&v29 - v11, v1 + v15, v4);
    uint64_t v32 = v1;
    swift_bridgeObjectRetain();
    uint64_t v16 = v13 - 1;
    if (v13 != 1)
    {
      uint64_t v17 = *(void *)(v31 + 72);
      uint64_t v18 = (void (**)(char *, uint64_t))(v31 + 8);
      uint64_t v19 = (void (**)(char *, char *, uint64_t))(v31 + 32);
      unint64_t v20 = v32 + v17 + v15;
      do
      {
        v14(v10, v20, v4);
        sub_1B2C454B4();
        char v21 = sub_1B2E822E8();
        unint64_t v22 = *v18;
        if (v21)
        {
          v22(v12, v4);
          (*v19)(v12, v10, v4);
        }
        else
        {
          v22(v10, v4);
        }
        v20 += v17;
        --v16;
      }
      while (v16);
    }
    swift_bridgeObjectRelease();
    uint64_t v23 = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v30, v12, v4);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v23, 0, 1, v4);
    sub_1B299B738();
  }
  else
  {
    sub_1B299B738();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v24, v25, v26, v27);
  }
}

uint64_t Heap.comparator.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t Heap.storage.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Heap.init(usingComparator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_1B2E828C8();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  return result;
}

void Heap.append(_:)()
{
  sub_1B299B720();
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v3 + 16);
  sub_1B299D31C();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)v19 - v11;
  unint64_t v20 = (uint64_t (**)(char *, char *))v0;
  int64_t v13 = MEMORY[0x1B3EB10D0](*(void *)(v0 + 16), v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, v2, v4);
  v19[1] = sub_1B2E82968();
  v19[2] = v0 + 16;
  sub_1B2E82918();
  if (v13 >= 1)
  {
    unint64_t v14 = (void (**)(char *, uint64_t))(v6 + 8);
    do
    {
      unint64_t v15 = *v20;
      sub_1B2E82998();
      unint64_t v16 = v13 - 1;
      sub_1B2E82998();
      char v17 = v15(v12, v10);
      uint64_t v18 = *v14;
      (*v14)(v10, v4);
      v18(v12, v4);
      if ((v17 & 1) == 0) {
        break;
      }
      unint64_t v21 = (unint64_t)(v13 - 1) >> 1;
      int64_t v22 = v13;
      swift_getWitnessTable();
      sub_1B2E82308();
      int64_t v13 = (unint64_t)(v13 - 1) >> 1;
    }
    while (v16 > 1);
  }
  sub_1B299B738();
}

Swift::Int __swiftcall Heap.parentIndex(_:)(Swift::Int result)
{
  if (!__OFSUB__(result, 1)) {
    return (result - 1) / 2;
  }
  __break(1u);
  return result;
}

void Heap.removeRoot()()
{
  sub_1B299B720();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 16);
  sub_1B299D31C();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v0 + 16);
  uint64_t v15 = v11;
  sub_1B2E82968();
  swift_getWitnessTable();
  if (sub_1B2E82CD8())
  {
    uint64_t v12 = 1;
LABEL_5:
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v4, v12, 1, v5);
    sub_1B299B738();
    return;
  }
  sub_1B2E82998();
  uint64_t v15 = 0;
  uint64_t v13 = MEMORY[0x1B3EB10D0](v11, v5);
  if (!__OFSUB__(v13, 1))
  {
    uint64_t v14 = v13 - 1;
    swift_getWitnessTable();
    sub_1B2E82308();
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1B2E82D58();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    sub_1B2C43BE8(0, v2);
    uint64_t v12 = 0;
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_1B2C43BE8(Swift::Int a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t (**)(char *, char *))v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v22 - v11;
  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = *(uint64_t (**)(char *, char *))v2;
  uint64_t v14 = *(void *)(v2 + 16);
  uint64_t v26 = (void *)(v2 + 16);
  Swift::Int v25 = Heap.rightIndex(_:)(a1);
  uint64_t result = MEMORY[0x1B3EB10D0](v14, v6);
  if (__OFSUB__(result, 1))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v23 = a2;
  uint64_t v15 = a1;
  if (result - 1 >= ((2 * a1) | 1))
  {
    sub_1B2E82998();
    sub_1B2E82998();
    char v16 = v13(v12, v9);
    char v17 = *(void (**)(char *, uint64_t))(v27 + 8);
    v17(v9, v6);
    v17(v12, v6);
    if (v16) {
      uint64_t v15 = (2 * a1) | 1;
    }
    else {
      uint64_t v15 = a1;
    }
  }
  uint64_t result = MEMORY[0x1B3EB10D0](*v26, v6);
  if (__OFSUB__(result, 1)) {
    goto LABEL_16;
  }
  uint64_t v24 = v3;
  Swift::Int v18 = v25;
  if (result - 1 >= v25)
  {
    uint64_t v19 = *v24;
    sub_1B2E82998();
    sub_1B2E82998();
    char v20 = v19(v12, v9);
    unint64_t v21 = *(void (**)(char *, uint64_t))(v27 + 8);
    v21(v9, v6);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v21)(v12, v6);
    if (v20) {
      uint64_t v15 = v18;
    }
  }
  if (v15 != a1)
  {
    uint64_t v28 = v15;
    Swift::Int v29 = a1;
    sub_1B2E82968();
    swift_getWitnessTable();
    sub_1B2E82308();
    return sub_1B2C43BE8(v15, v23);
  }
  return result;
}

Swift::Int __swiftcall Heap.leftIndex(_:)(Swift::Int result)
{
  if (result + 0x4000000000000000 >= 0) {
    return (2 * result) | 1;
  }
  __break(1u);
  return result;
}

Swift::Int __swiftcall Heap.rightIndex(_:)(Swift::Int result)
{
  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  BOOL v1 = __OFADD__(2 * result, 2);
  uint64_t result = 2 * result + 2;
  if (v1) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1B2C43EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v33 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v29 - v10;
  uint64_t v12 = (uint64_t (*)(char *, uint64_t))*v3;
  BOOL v34 = (uint64_t (**)(char *, char *))v3;
  uint64_t v13 = (uint64_t *)(v3 + 2);
  swift_retain();
  sub_1B2E82998();
  char v14 = v12(v11, a2);
  swift_release();
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t v31 = v7 + 8;
  uint64_t v32 = v11;
  uint64_t v30 = v15;
  v15(v11, v6);
  if (v14)
  {
    uint64_t result = sub_1B2E83418();
    __break(1u);
  }
  else
  {
    v29[2] = sub_1B2E82968();
    sub_1B2E828B8();
    uint64_t v16 = *v13;
    sub_1B2C45508(v5, *v13);
    char isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
    uint64_t v18 = v16 & 0xFFFFFFFFFFFFFF8;
    if ((isClassOrObjCExistentialType & 1) == 0) {
      uint64_t v18 = v16;
    }
    uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 24))(v18+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v5, a2, v6);
    if (v5 >= 1)
    {
      v29[1] = v13;
      char v20 = v32;
      do
      {
        unint64_t v21 = *v34;
        swift_retain();
        sub_1B2E82998();
        unint64_t v22 = v5 - 1;
        uint64_t v23 = v6;
        uint64_t v24 = v33;
        sub_1B2E82998();
        char v25 = v21(v20, v24);
        swift_release();
        uint64_t v26 = v24;
        uint64_t v6 = v23;
        uint64_t v27 = v23;
        uint64_t v28 = v30;
        v30(v26, v27);
        uint64_t result = v28(v20, v6);
        if ((v25 & 1) == 0) {
          break;
        }
        unint64_t v35 = (unint64_t)(v5 - 1) >> 1;
        uint64_t v36 = v5;
        swift_getWitnessTable();
        uint64_t result = sub_1B2E82308();
        uint64_t v5 = (unint64_t)(v5 - 1) >> 1;
      }
      while (v22 > 1);
    }
  }
  return result;
}

uint64_t Heap<A>.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1B29A1D0C();
  uint64_t result = sub_1B2E828C8();
  *a3 = sub_1B2C45284;
  a3[1] = (uint64_t (*)())v6;
  a3[2] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1B2C44260()
{
  return sub_1B2E822E8() & 1;
}

uint64_t Heap<A>.removeFirst(where:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a2;
  uint64_t v20 = a4;
  uint64_t v21 = a1;
  sub_1B29A1D0C();
  uint64_t v6 = sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v16 - v10;
  unint64_t v12 = *(void *)(v4 + 16);
  unint64_t v24 = v12;
  sub_1B29A1D0C();
  sub_1B2E82968();
  swift_getWitnessTable();
  uint64_t result = sub_1B2E82CD8();
  if ((result & 1) == 0)
  {
    char v17 = v11;
    uint64_t v18 = v8;
    uint64_t v19 = v6;
    unint64_t v26 = v12;
    swift_bridgeObjectRetain();
    uint64_t v14 = v23;
    sub_1B2E82C38();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v14 && (v25 & 1) == 0)
    {
      uint64_t v15 = (uint64_t)v17;
      sub_1B2C44404(v24, a3, (uint64_t)v17);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v15, v19);
    }
  }
  return result;
}

uint64_t sub_1B2C44404@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v45 = a2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v44 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v41 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v41 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v41 - v14;
  uint64_t v46 = v3;
  uint64_t v49 = v3[2];
  sub_1B2E82968();
  swift_getWitnessTable();
  if (sub_1B2E82CD8())
  {
    uint64_t v16 = 1;
    uint64_t v17 = v48;
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v17, v16, 1, v5);
  }
  sub_1B2E82998();
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = MEMORY[0x1B3EB10D0](v18, v5);
  swift_bridgeObjectRelease();
  if (v19 == 1) {
    goto LABEL_6;
  }
  unint64_t v43 = a1;
  sub_1B2E82998();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = MEMORY[0x1B3EB10D0](v20, v5);
  swift_bridgeObjectRelease();
  uint64_t result = v21 - 1;
  if (__OFSUB__(v21, 1))
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1B2E82998();
  char v23 = sub_1B2E82328();
  uint64_t v24 = v47 + 8;
  char v25 = *(void (**)(char *, uint64_t))(v47 + 8);
  v25(v10, v5);
  v25(v13, v5);
  if (v23)
  {
LABEL_6:
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1B2E82D58();
    uint64_t v26 = v47;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v5);
LABEL_7:
    uint64_t v17 = v48;
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v48, v15, v5);
    uint64_t v16 = 0;
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v17, v16, 1, v5);
  }
  v41[1] = v24;
  uint64_t v42 = v25;
  v41[0] = *v46;
  swift_retain();
  sub_1B2E82998();
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = MEMORY[0x1B3EB10D0](v27, v5);
  swift_bridgeObjectRelease();
  uint64_t result = v28 - 1;
  if (__OFSUB__(v28, 1)) {
    goto LABEL_21;
  }
  sub_1B2E82998();
  char v29 = ((uint64_t (*)(char *, char *))v41[0])(v13, v10);
  swift_release();
  uint64_t v30 = v42;
  v42(v10, v5);
  v30(v13, v5);
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = MEMORY[0x1B3EB10D0](v31, v5);
  swift_bridgeObjectRelease();
  uint64_t result = v32 - 1;
  BOOL v33 = __OFSUB__(v32, 1);
  if (v29)
  {
    unint64_t v34 = v43;
    uint64_t v26 = v47;
    if (!v33)
    {
      unint64_t v35 = v44;
      sub_1B2E82998();
      sub_1B2E828B8();
      uint64_t v36 = v46[2];
      sub_1B2C45508(v34, v36);
      char isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
      uint64_t v38 = v36 & 0xFFFFFFFFFFFFFF8;
      if ((isClassOrObjCExistentialType & 1) == 0) {
        uint64_t v38 = v36;
      }
      (*(void (**)(unint64_t, char *, uint64_t))(v26 + 40))(v38+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v34, v35, v5);
      swift_getWitnessTable();
      swift_getWitnessTable();
      sub_1B2E82D58();
      v42(v13, v5);
      sub_1B2C43BE8(v34, v45);
      goto LABEL_7;
    }
    goto LABEL_22;
  }
  uint64_t v39 = v43;
  uint64_t v26 = v47;
  if (!v33)
  {
    sub_1B2E82998();
    sub_1B2C43EE0(v39, (uint64_t)v13, v45);
    uint64_t v40 = v42;
    v42(v13, v5);
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1B2E82D58();
    v40(v13, v5);
    goto LABEL_7;
  }
LABEL_23:
  __break(1u);
  return result;
}

void Heap<A>.remove(value:)()
{
  sub_1B299B720();
  uint64_t v2 = v1;
  sub_1B29A1D0C();
  uint64_t v3 = sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v9 - v7;
  v9[1] = *(void *)(v0 + 16);
  sub_1B29A1D0C();
  sub_1B2E82968();
  swift_getWitnessTable();
  sub_1B2E82D18();
  if ((v10 & 1) == 0)
  {
    sub_1B2C44404(v9[2], v2, (uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
  sub_1B299B738();
}

void Heap.debugDescription.getter(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[2];
  uint64_t v43 = v1[1];
  uint64_t v44 = v2;
  uint64_t v47 = v3;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = sub_1B2E82968();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_1B2E82CD8();
  if ((v7 & 1) == 0)
  {
    uint64_t v47 = v3;
    MEMORY[0x1F4188790](v7);
    uint64_t v39[2] = v4;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B2A4AB2C((void (*)(char *, uint64_t))sub_1B2C4528C, (uint64_t)v39, v5, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v8);
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v9 + 16);
    uint64_t v11 = MEMORY[0x1E4FBC860];
    uint64_t v46 = v10;
    if (v10)
    {
      uint64_t v47 = MEMORY[0x1E4FBC860];
      sub_1B29C0490();
      uint64_t v12 = (void *)v47;
      uint64_t v13 = v9;
      uint64_t v14 = v9 + 40;
      do
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_1B2E824A8();
        swift_bridgeObjectRelease();
        uint64_t v47 = (uint64_t)v12;
        unint64_t v16 = v12[2];
        if (v16 >= v12[3] >> 1)
        {
          sub_1B29C0490();
          uint64_t v12 = (void *)v47;
        }
        v14 += 16;
        v12[2] = v16 + 1;
        v12[v16 + 4] = v15;
        --v10;
      }
      while (v10);
      uint64_t v9 = v13;
      uint64_t v10 = v46;
      uint64_t v11 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v17 = sub_1B2C43558(v12);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19)
    {
LABEL_40:
      __break(1u);
      return;
    }
    uint64_t v41 = v4;
    uint64_t v42 = v3;
    if (v10)
    {
      uint64_t v49 = v11;
      sub_1B29BFD80();
      uint64_t v20 = 0;
      uint64_t v21 = v49;
      uint64_t v40 = v9;
      uint64_t v45 = v9 + 32;
      do
      {
        uint64_t v22 = (uint64_t *)(v45 + 16 * v20);
        uint64_t v24 = *v22;
        unint64_t v23 = v22[1];
        swift_bridgeObjectRetain_n();
        uint64_t v25 = sub_1B2E824A8();
        unint64_t v26 = v23;
        while (v25 < v17)
        {
          if (sub_1B2E824A8())
          {
            uint64_t v47 = v24;
            unint64_t v48 = v26;
            sub_1B2C4555C();
            sub_1B2E82518();
          }
          else
          {
            uint64_t v47 = 32;
            unint64_t v48 = 0xE100000000000000;
            sub_1B2E82518();
            swift_bridgeObjectRelease();
          }
          uint64_t v24 = v47;
          unint64_t v26 = v48;
          uint64_t v25 = sub_1B2E824A8();
        }
        swift_bridgeObjectRelease();
        uint64_t v49 = v21;
        unint64_t v27 = *(void *)(v21 + 16);
        if (v27 >= *(void *)(v21 + 24) >> 1)
        {
          sub_1B29BFD80();
          uint64_t v21 = v49;
        }
        ++v20;
        *(void *)(v21 + 16) = v27 + 1;
        uint64_t v28 = v21 + 16 * v27;
        *(void *)(v28 + 32) = v24;
        *(void *)(v28 + 40) = v26;
      }
      while (v20 != v46);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = MEMORY[0x1E4FBC860];
    }
    uint64_t v47 = 10;
    unint64_t v48 = 0xE100000000000000;
    uint64_t v29 = sub_1B2C4555C();
    uint64_t v40 = MEMORY[0x1B3EB0DB0](v29);
    uint64_t v30 = *(void *)(v21 + 16);
    uint64_t v45 = v31;
    uint64_t v46 = v30;
    if (v30)
    {
      Swift::Int v32 = 0;
      uint64_t v33 = v21 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        sub_1B2C4508C(v32, v44, v43, v42, v17, v41);
        uint64_t v34 = sub_1B2C4555C();
        MEMORY[0x1B3EB0DB0](v34);
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        uint64_t v35 = sub_1B2C4555C();
        MEMORY[0x1B3EB0DB0](v35);
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        double v36 = log2((double)(v32 + 1));
        if ((~*(void *)&v36 & 0x7FF0000000000000) == 0) {
          break;
        }
        if (v36 <= -9.22337204e18) {
          goto LABEL_35;
        }
        if (v36 >= 9.22337204e18) {
          goto LABEL_36;
        }
        Swift::Int v37 = v32 + 2;
        double v38 = log2((double)(v32 + 2));
        if ((~*(void *)&v38 & 0x7FF0000000000000) == 0) {
          goto LABEL_37;
        }
        if (v38 <= -9.22337204e18) {
          goto LABEL_38;
        }
        if (v38 >= 9.22337204e18) {
          goto LABEL_39;
        }
        sub_1B2E82518();
        v33 += 16;
        ++v32;
        if (v37 - 1 == v46) {
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
  }
}

uint64_t sub_1B2C44FBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_1B2E823E8();
  *a2 = result;
  a2[1] = v6;
  return result;
}

Swift::Int sub_1B2C4508C(Swift::Int result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = (2 * result) | 1;
  Swift::Int v12 = Heap.rightIndex(_:)(result);
  uint64_t v13 = MEMORY[0x1B3EB10D0](a4, a6);
  Swift::Int v14 = v13;
  if (v11 < v13)
  {
    uint64_t result = sub_1B2C4508C(v11, a2, a3, a4, a5, a6);
    Swift::Int v16 = result + v15;
    if (!__OFADD__(result, v15))
    {
      Swift::Int v17 = v16 + a5;
      if (!__OFADD__(v16, a5))
      {
        if (v12 >= v14) {
          return v17;
        }
        goto LABEL_8;
      }
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  Swift::Int v17 = 0;
  if (v12 >= v13) {
    return v17;
  }
LABEL_8:
  uint64_t result = sub_1B2C4508C(v12, a2, a3, a4, a5, a6);
  if (__OFADD__(result, v18))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!__OFADD__(result + v18, a5)) {
    return v17;
  }
LABEL_15:
  __break(1u);
  return result;
}

void HeapIterator.next()()
{
  type metadata accessor for Heap();

  Heap.removeRoot()();
}

void Heap.underestimatedCount.getter()
{
}

uint64_t Heap.makeIterator()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C45234@<X0>(void *a1@<X8>)
{
  Heap.makeIterator()(a1);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1B2C45274()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B2C45284()
{
  return sub_1B2C44260();
}

uint64_t sub_1B2C4528C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2C44FBC(a1, a2);
}

uint64_t type metadata accessor for Heap()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2C452C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C452F8()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_1B2C45334(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1B2C45374(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2C453D4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Operators(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Operators(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for HeapIterator()
{
  return sub_1B29A1278();
}

unint64_t sub_1B2C454B4()
{
  unint64_t result = qword_1E9C40C58;
  if (!qword_1E9C40C58)
  {
    sub_1B29C3588((uint64_t *)&unk_1E9C39D20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40C58);
  }
  return result;
}

uint64_t sub_1B2C45508(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1B2C4555C()
{
  return 32;
}

uint64_t sub_1B2C45568(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1B29E4FEC((_OWORD *)a1, v9);
    return sub_1B2B2A198();
  }
  else
  {
    sub_1B2A10B50(a1, (uint64_t *)&unk_1EB7E6270);
    uint64_t v5 = sub_1B29DB2B0(a2);
    if (v6)
    {
      uint64_t v7 = v5;
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v8 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      sub_1B29A3EB4((uint64_t *)&unk_1E9C37AF0);
      sub_1B2E83398();
      sub_1B29E4FEC((_OWORD *)(*(void *)(v8 + 56) + 32 * v7), v9);
      sub_1B2E833B8();
      *uint64_t v2 = v8;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v9, 0, sizeof(v9));
    }
    return sub_1B2A10B50((uint64_t)v9, (uint64_t *)&unk_1EB7E6270);
  }
}

uint64_t sub_1B2C4568C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1B2A10B50(a1, &qword_1E9C38A10);
    sub_1B2B29A50(v6, a2, a3);
    swift_bridgeObjectRelease();
    return sub_1B2A10B50((uint64_t)v6, &qword_1E9C38A10);
  }
  else
  {
    sub_1B29E5204(a1, (uint64_t)v6);
    sub_1B2B2A230(v6, a2, a3);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B2C45720(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1B29D1D20((long long *)a1, (uint64_t)v12);
    return sub_1B2B2A2DC();
  }
  else
  {
    sub_1B2A10B50(a1, &qword_1E9C40C60);
    sub_1B2B29D74(a2, v4, v5, v6, v7, v8, v9, v10, v11, v12[0]);
    return sub_1B2A10B50((uint64_t)v12, &qword_1E9C40C60);
  }
}

uint64_t sub_1B2C45798(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    sub_1B2A10B50(a1, &qword_1E9C376F0);
    sub_1B2B29E84(a2, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1]);
    sub_1B2A90B98(a2);
    return sub_1B2A10B50((uint64_t)v11, &qword_1E9C376F0);
  }
  else
  {
    sub_1B29E4E7C(a1, (uint64_t)v11);
    sub_1B2B2A598();
    return sub_1B2A90B98(a2);
  }
}

uint64_t sub_1B2C45824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1B2A10B50(a1, &qword_1E9C40C68);
    sub_1B2B29F80(a2, a3, a4, a5, v9, v10, v11, v12, v14[0], v14[1]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1B2A10B50((uint64_t)v14, &qword_1E9C40C68);
  }
  else
  {
    sub_1B29E4F34(a1, (uint64_t)v14);
    sub_1B2B2A630(v14, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t IndexHandler.init(indexMap:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v7 = a1;
  uint64_t v5 = &type metadata for ContextIndexHandler;
  uint64_t v6 = &off_1F0ACBA18;
  uint64_t result = sub_1B2C45720((uint64_t)v4, 5);
  *a2 = v7;
  return result;
}

uint64_t sub_1B2C45950@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_1B2E81F08();
  uint64_t v8 = sub_1B299DB5C(v7, (uint64_t)v200);
  uint64_t v170 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v169 = (char *)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v143 - v12;
  uint64_t v14 = sub_1B2E81FB8();
  uint64_t v15 = sub_1B299DB5C(v14, (uint64_t)&v203);
  uint64_t v151 = v16;
  MEMORY[0x1F4188790](v15);
  sub_1B299B6D0();
  uint64_t v150 = v17;
  uint64_t v18 = sub_1B2E81F38();
  uint64_t v19 = sub_1B299DB5C(v18, (uint64_t)&v198);
  uint64_t v167 = v20;
  MEMORY[0x1F4188790](v19);
  sub_1B299B6D0();
  os_log_t v174 = v21;
  uint64_t v152 = type metadata accessor for LogSignpost();
  MEMORY[0x1F4188790](v152);
  sub_1B299B6D0();
  v173 = v22;
  uint64_t v23 = *a1;
  uint64_t v166 = *((void *)a1 + 1);
  uint64_t v24 = *((void *)a1 + 3);
  uint64_t v176 = *((void *)a1 + 2);
  uint64_t v25 = *((void *)a1 + 4);
  unsigned __int8 v26 = a1[40];
  uint64_t v27 = *((void *)a1 + 6);
  uint64_t v165 = *a2;
  uint64_t v164 = a2[1];
  uint64_t v163 = a2[2];
  uint64_t v162 = a2[3];
  uint64_t v161 = a2[4];
  uint64_t v160 = a2[5];
  uint64_t v159 = a2[6];
  uint64_t v158 = a2[7];
  uint64_t v157 = a2[8];
  uint64_t v156 = a2[9];
  uint64_t v155 = a2[10];
  uint64_t v154 = a2[11];
  uint64_t v153 = a2[12];
  int v28 = *((unsigned __int8 *)a2 + 104);
  uint64_t v204 = v23;
  sub_1B29B2424();
  if (!v179)
  {
    uint64_t result = sub_1B2A10B50((uint64_t)&v177, &qword_1E9C40C60);
    *(_OWORD *)a3 = xmmword_1B2EDF2B0;
    a3[2] = 0x80000001B2E9D970;
    return result;
  }
  HIDWORD(v147) = v28;
  uint64_t v148 = a3;
  uint64_t v172 = v3;
  sub_1B29A0AF8(0xEF7865646E496870);
  sub_1B29D1D20(&v177, (uint64_t)&v199);
  uint64_t v30 = v201;
  uint64_t v29 = v202;
  sub_1B29AEC7C(&v199, v201);
  uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v30, v29);
  switch(v204)
  {
    case 6:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 7:
    case 8:
      sub_1B299F3A0();
      break;
    default:
      break;
  }
  char v33 = sub_1B2E837A8();
  swift_bridgeObjectRelease();
  if (v33)
  {
LABEL_7:
    if (*(void *)(v31 + 16))
    {
      uint64_t v34 = sub_1B2A17E38();
      char v35 = sub_1B2CAB41C(v31, v34);
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0)
      {
        if (sub_1B2C46DB4(v31, v27))
        {
          swift_bridgeObjectRelease();
          uint64_t v42 = v13;
          goto LABEL_10;
        }
        if (qword_1EB7E30F0 != -1) {
          swift_once();
        }
        sub_1B29A4B98(v175, (uint64_t)qword_1EB7E30D8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B299DB28();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B299DB28();
        uint64_t v62 = sub_1B2E81F98();
        os_log_type_t v63 = sub_1B2E82DB8();
        int v64 = v63;
        if (os_log_type_enabled(v62, v63))
        {
          uint64_t v65 = swift_slowAlloc();
          LODWORD(v204) = v64;
          uint64_t v66 = v65;
          uint64_t v175 = swift_slowAlloc();
          *(void *)&long long v177 = v175;
          *(_DWORD *)uint64_t v66 = 136315394;
          uint64_t v170 = v66 + 4;
          v173 = (void *)sub_1B2B2A9E0();
          swift_bridgeObjectRetain();
          uint64_t v67 = sub_1B2E82B18();
          os_log_t v174 = v62;
          uint64_t v69 = v68;
          swift_bridgeObjectRelease();
          sub_1B29BF6BC(v67, v69, (uint64_t)&v177, v70, v71, v72, v73, v74, v143, v144, (uint64_t)v145, v146, v147, (uint64_t)v148, v149, v150, v151, v152, v153,
            v154);
          sub_1B2C47998(v75);
          uint64_t v171 = v76;
          sub_1B2E82FB8();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v66 + 12) = 2080;
          uint64_t v170 = v66 + 14;
          swift_bridgeObjectRetain();
          uint64_t v77 = sub_1B2E82B18();
          uint64_t v79 = v78;
          swift_bridgeObjectRelease();
          sub_1B29BF6BC(v77, v79, (uint64_t)&v177, v80, v81, v82, v83, v84, v143, v144, (uint64_t)v145, v146, v147, (uint64_t)v148, v149, v150, v151, v152, v153,
            v154);
          uint64_t v190 = v85;
          sub_1B2E82FB8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B29A1D18();
          swift_bridgeObjectRelease();
          sub_1B2C478C0();
          os_log_t v86 = v174;
          _os_log_impl(&dword_1B2996000, v174, (os_log_type_t)v204, "Knosis.IndexHandler: insufficient access to query index: %s. Available access: %s", (uint8_t *)v66, 0x16u);
          swift_arrayDestroy();
          sub_1B299B750();
          sub_1B299B750();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          sub_1B29A1D18();
          swift_bridgeObjectRelease();
          sub_1B2A2A2C8(v24, v25, v26);

          swift_bridgeObjectRelease();
        }
        uint64_t v87 = v148;
        sub_1B2C4796C();
        sub_1B2C478F4();
        sub_1B2E82518();
        sub_1B2B2A9E0();
        sub_1B2E82B18();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2C47958();
        *uint64_t v87 = 0;
        v87[1] = v88;
        v87[2] = v89;
        return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v199);
      }
    }
  }
  swift_bridgeObjectRelease();
  sub_1B29FB5D8(v204, v27, v36, v37, v38, v39, v40, v41, v143, v144, (uint64_t)v145, v146, v147, (uint64_t)v148, v149, v150, v151, v152, v153,
    v154,
    v155,
    v156,
    v157,
    v158,
    v159,
    v160,
    v161,
    v162,
    v163,
    v164);
  uint64_t v42 = v13;
  if ((v43 & 1) == 0)
  {
    if (qword_1EB7E30F0 != -1) {
      swift_once();
    }
    sub_1B29A4B98(v175, (uint64_t)qword_1EB7E30D8);
    swift_bridgeObjectRetain();
    sub_1B299DB28();
    swift_bridgeObjectRetain();
    sub_1B299DB28();
    uint64_t v53 = sub_1B2E81F98();
    int v54 = sub_1B2E82DB8();
    if (os_log_type_enabled(v53, (os_log_type_t)v54))
    {
      LODWORD(v175) = v54;
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      os_log_t v174 = (os_log_t)swift_slowAlloc();
      *(void *)&long long v177 = v174;
      *(_DWORD *)uint64_t v55 = 136315138;
      uint64_t v61 = 0x617247746E657665;
      switch(v204)
      {
        case 1:
          sub_1B29A0AF8(0x80000001B2E8EB10);
          uint64_t v61 = 0xD000000000000010;
          break;
        case 2:
          sub_1B29A0AF8(0xE700000000000000);
          uint64_t v61 = 0x7865646E496F6ELL;
          break;
        case 3:
          break;
        case 4:
          sub_1B2C479AC();
          goto LABEL_59;
        case 5:
          unint64_t v137 = 0xEC0000007865646ELL;
          goto LABEL_59;
        case 6:
          uint64_t v61 = 0x6172476C61636F6CLL;
          break;
        case 7:
          sub_1B299F3A0();
          uint64_t v138 = "dex";
          goto LABEL_58;
        case 8:
          sub_1B299F3A0();
          uint64_t v138 = "staticGlobalKnowledgeIndex";
LABEL_58:
          unint64_t v137 = (unint64_t)v138 | 0x8000000000000000;
LABEL_59:
          sub_1B29A0AF8(v137);
          break;
        default:
          sub_1B29A0AF8(0xE400000000000000);
          uint64_t v61 = 1701736302;
          break;
      }
      sub_1B29BF6BC(v61, v149, (uint64_t)&v177, v56, v57, v58, v59, v60, v143, v144, (uint64_t)v145, v146, v147, (uint64_t)v148, v149, v150, v151, v152, v153,
        v154);
      sub_1B2C47998(v139);
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B29A1D18();
      swift_bridgeObjectRelease();
      sub_1B2C478C0();
      _os_log_impl(&dword_1B2996000, v53, (os_log_type_t)v175, "Knosis.IndexHandler: insufficient access to query index: %s", v55, 0xCu);
      swift_arrayDestroy();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1B29A1D18();
      swift_bridgeObjectRelease();
      sub_1B2A2A2C8(v24, v25, v26);

      swift_bridgeObjectRelease();
    }
    sub_1B2C4796C();
    sub_1B2C478F4();
    sub_1B2E82518();
    sub_1B2CAF284();
    sub_1B2C47958();
    uint64_t v140 = v148;
    *uint64_t v148 = 0;
    v140[1] = v141;
    v140[2] = v142;
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v199);
  }
LABEL_10:
  if (qword_1EB7E30F0 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_1B29A4B98(v175, (uint64_t)qword_1EB7E30D8);
  swift_bridgeObjectRetain();
  sub_1B299DB28();
  swift_bridgeObjectRetain();
  sub_1B299DB28();
  swift_bridgeObjectRetain();
  sub_1B299DB28();
  swift_bridgeObjectRetain();
  sub_1B299DB28();
  uint64_t v146 = v44;
  uint64_t v45 = sub_1B2E81F98();
  LODWORD(v147) = sub_1B2E82DA8();
  if (os_log_type_enabled(v45, (os_log_type_t)v147))
  {
    os_log_t v145 = v45;
    uint64_t v46 = 0x617247746E657665;
    uint64_t v47 = swift_slowAlloc();
    uint64_t v144 = swift_slowAlloc();
    v197[0] = v144;
    *(_DWORD *)uint64_t v47 = 136315394;
    switch(v204)
    {
      case 1:
        sub_1B29A0AF8(0x80000001B2E8EB10);
        uint64_t v46 = 0xD000000000000010;
        break;
      case 2:
        sub_1B29A0AF8(0xE700000000000000);
        uint64_t v46 = 0x7865646E496F6ELL;
        break;
      case 3:
        break;
      case 4:
        uint64_t v46 = 0x79676F6C6F746E6FLL;
        sub_1B2C479AC();
        goto LABEL_38;
      case 5:
        uint64_t v46 = 0x49747865746E6F63;
        unint64_t v90 = 0xEC0000007865646ELL;
        goto LABEL_38;
      case 6:
        uint64_t v46 = 0x6172476C61636F6CLL;
        break;
      case 7:
        sub_1B299F3A0();
        uint64_t v46 = v91 + 10;
        uint64_t v92 = "dex";
        goto LABEL_37;
      case 8:
        sub_1B299F3A0();
        uint64_t v46 = v93 + 8;
        uint64_t v92 = "staticGlobalKnowledgeIndex";
LABEL_37:
        unint64_t v90 = (unint64_t)v92 | 0x8000000000000000;
LABEL_38:
        sub_1B29A0AF8(v90);
        break;
      default:
        sub_1B29A0AF8(0xE400000000000000);
        uint64_t v46 = 1701736302;
        break;
    }
    sub_1B29BF6BC(v46, v149, (uint64_t)v197, v48, v49, v50, v51, v52, v143, v144, (uint64_t)v145, v146, v147, (uint64_t)v148, v149, v150, v151, v152, v153,
      v154);
    sub_1B29A5064(v94);
    sub_1B2E82FB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A2A2C8(v24, v25, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2C478C0();
    *(_WORD *)(v47 + 12) = 2080;
    sub_1B29A0AF8(v47 + 14);
    *(void *)&long long v177 = 0;
    *((void *)&v177 + 1) = 0xE000000000000000;
    sub_1B299DB28();
    sub_1B2E831F8();
    sub_1B2C47958();
    uint64_t v190 = v95;
    uint64_t v191 = v96;
    sub_1B2E82518();
    *(void *)&long long v177 = v24;
    *((void *)&v177 + 1) = v25;
    LOBYTE(v178) = v26;
    sub_1B2E83388();
    sub_1B2E82518();
    sub_1B2B2A9E0();
    swift_bridgeObjectRetain();
    sub_1B2E82B18();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2C478C0();
    sub_1B29BF6BC(v190, v191, (uint64_t)v197, v97, v98, v99, v100, v101, v143, v144, (uint64_t)v145, v146, v147, (uint64_t)v148, v149, v150, v151, v152, v153,
      v154);
    sub_1B29A5064(v102);
    sub_1B2E82FB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A2A2C8(v24, v25, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2C478C0();
    os_log_t v103 = v145;
    _os_log_impl(&dword_1B2996000, v145, (os_log_type_t)v147, "Knosis.IndexHandler: sufficient access to query index: %s, from available access: %s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    sub_1B299B750();
    sub_1B299B750();

    uint64_t v42 = v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1B2C47924();
    swift_bridgeObjectRelease();
    sub_1B2C47924();
    swift_bridgeObjectRelease();
    sub_1B2C47924();
    swift_bridgeObjectRelease();
    sub_1B2A2A2C8(v24, v25, v26);

    swift_bridgeObjectRelease();
  }
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v104 = v175;
  uint64_t v105 = sub_1B29A4B98(v175, (uint64_t)qword_1EB7E6600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v151 + 16))(v150, v105, v104);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v106 = sub_1B2E81F28();
  os_signpost_type_t v107 = sub_1B2E82E68();
  uint64_t v108 = v42;
  if (sub_1B2E82F28())
  {
    unint64_t v109 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v109 = 0;
    os_signpost_id_t v110 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v106, v107, v110, "IndexHandler.execute", "", v109, 2u);
    sub_1B299B750();
  }

  uint64_t v111 = v170;
  uint64_t v112 = v171;
  (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v169, v108, v171);
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v113 = sub_1B2E81F68();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v108, v112);
  uint64_t v114 = (uint64_t)v173;
  void *v173 = "IndexHandler.execute";
  *(void *)(v114 + 8) = 20;
  *(unsigned char *)(v114 + 16) = 2;
  *(void *)(v114 + 24) = v113;
  (*(void (**)(uint64_t, os_log_t, uint64_t))(v167 + 32))(v114 + *(int *)(v152 + 24), v174, v168);
  uint64_t v115 = v201;
  uint64_t v116 = v202;
  sub_1B29AEC7C(&v199, v201);
  LOBYTE(v190) = v204;
  uint64_t v191 = v166;
  uint64_t v192 = v176;
  uint64_t v193 = v24;
  uint64_t v194 = v25;
  unsigned __int8 v195 = v26;
  uint64_t v196 = v27;
  *(void *)&long long v177 = v165;
  *((void *)&v177 + 1) = v164;
  uint64_t v178 = v163;
  uint64_t v179 = v162;
  uint64_t v180 = v161;
  uint64_t v181 = v160;
  uint64_t v182 = v159;
  uint64_t v183 = v158;
  uint64_t v184 = v157;
  uint64_t v185 = v156;
  uint64_t v186 = v155;
  uint64_t v187 = v154;
  uint64_t v188 = v153;
  char v189 = BYTE4(v147);
  uint64_t v117 = v172;
  (*(void (**)(void *__return_ptr, uint64_t *, long long *, uint64_t, uint64_t))(v116 + 8))(v197, &v190, &v177, v115, v116);
  if (v117)
  {
    sub_1B2C46DDC(v114);
    uint64_t v118 = v114;
  }
  else
  {
    uint64_t v119 = v197[0];
    uint64_t v120 = v197[1];
    uint64_t v121 = v198;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v122 = sub_1B2E81F98();
    os_log_type_t v123 = sub_1B2E82DA8();
    if (os_log_type_enabled(v122, v123))
    {
      uint64_t v124 = swift_slowAlloc();
      uint64_t v172 = 0;
      uint64_t v125 = (uint8_t *)v124;
      uint64_t v126 = swift_slowAlloc();
      uint64_t v204 = v120;
      *(_DWORD *)uint64_t v125 = 136315138;
      uint64_t v190 = v126;
      *(void *)&long long v177 = v119;
      *((void *)&v177 + 1) = v204;
      uint64_t v178 = v121;
      unint64_t v127 = IndexResult.description.getter();
      sub_1B29BF6BC(v127, v128, (uint64_t)&v190, v129, v130, v131, v132, v133, v143, v144, (uint64_t)v145, v146, v147, (uint64_t)v148, v149, v150, v151, v152, v153,
        v154);
      sub_1B29A5064(v134);
      sub_1B2E82FB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B2996000, v122, v123, "Index result: %s", v125, 0xCu);
      swift_arrayDestroy();
      uint64_t v120 = v204;
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v135 = (uint64_t)v173;
    uint64_t v136 = v148;
    *uint64_t v148 = v119;
    v136[1] = v120;
    v136[2] = v121;
    sub_1B2C46DDC(v135);
    uint64_t v118 = v135;
  }
  sub_1B2A93478(v118);
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v199);
}

uint64_t sub_1B2C46DB4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) >= *(void *)(a2 + 16)) {
    return 0;
  }
  else {
    return sub_1B2C473A4(a2, a1);
  }
}

uint64_t sub_1B2C46DDC(uint64_t a1)
{
  uint64_t v2 = sub_1B2E81F48();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v27 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B2E81F08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B2E81F38();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + *(int *)(v12 + 24), v8);
  int v28 = *(const char **)a1;
  char v13 = *(unsigned char *)(a1 + 16);
  swift_retain();
  uint64_t v14 = sub_1B2E81F28();
  sub_1B2E81F58();
  int v24 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v23 = v5;
  if ((v13 & 1) == 0)
  {
    uint64_t v16 = v27;
    if (v28)
    {
      uint64_t v18 = v25;
      uint64_t v17 = v26;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v16, v17) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v19 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
        uint64_t v19 = "";
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      os_signpost_id_t v21 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v14, (os_signpost_type_t)v24, v21, v28, v19, v20, 2u);
      MEMORY[0x1B3EB30C0](v20, -1, -1);
      uint64_t v5 = v23;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v16 = v27;
  if ((unint64_t)v28 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v28 >> 11 != 27)
  {
    uint64_t v18 = v25;
    uint64_t v17 = v26;
    if (v28 >> 16 <= 0x10)
    {
      int v28 = &v29;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

void IndexContext.indexType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t IndexContext.limit.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t dispatch thunk of KnosisIndex.execute(indexContext:indexQuery:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of KnosisIndex.localGraphIndexDefinition()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void type metadata accessor for IndexHandler()
{
}

uint64_t destroy for IndexContext(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1B2A2A2C8(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IndexContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_1B29C65EC(v5, v6, v7);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IndexContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 40);
  sub_1B29C65EC(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v6;
  sub_1B2A2A2C8(v7, v8, v9);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IndexContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v5;
  sub_1B2A2A2C8(v6, v7, v8);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for IndexContext()
{
}

void type metadata accessor for IndexError()
{
}

uint64_t sub_1B2C473A4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v34 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v32 = (unint64_t)(63 - v5) >> 6;
  uint64_t v8 = a1 + 56;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v33 = v3;
  if (!v7) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v10 = (v7 - 1) & v7;
  unint64_t v11 = __clz(__rbit64(v7)) | (v9 << 6);
  for (i = v9; ; unint64_t v11 = __clz(__rbit64(v14)) + (i << 6))
  {
    if (!*(void *)(a1 + 16))
    {
      uint64_t v2 = 0;
      goto LABEL_57;
    }
    uint64_t v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v11);
    sub_1B2E83988();
    sub_1B2AA49C0((uint64_t)v35, v16);
    uint64_t v17 = sub_1B2E839E8();
    uint64_t v18 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v8 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
    {
      uint64_t v2 = 0;
      goto LABEL_57;
    }
    uint64_t v20 = ~v18;
    while (1)
    {
      unint64_t v21 = 0xE400000000000000;
      uint64_t v22 = 1701736302;
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v19))
      {
        case 1:
          unint64_t v21 = 0x80000001B2E8EB10;
          uint64_t v22 = 0xD000000000000010;
          break;
        case 2:
          unint64_t v21 = 0xE700000000000000;
          uint64_t v22 = 0x7865646E496F6ELL;
          break;
        case 3:
          uint64_t v23 = 0x47746E657665;
          goto LABEL_32;
        case 4:
          uint64_t v22 = 0x79676F6C6F746E6FLL;
          unint64_t v21 = 0xED00007865646E49;
          break;
        case 5:
          uint64_t v22 = 0x49747865746E6F63;
          unint64_t v21 = 0xEC0000007865646ELL;
          break;
        case 6:
          uint64_t v23 = 0x476C61636F6CLL;
LABEL_32:
          uint64_t v22 = v23 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
          unint64_t v21 = 0xEF7865646E496870;
          break;
        case 7:
          uint64_t v22 = 0xD00000000000001ALL;
          int v24 = "dex";
          goto LABEL_35;
        case 8:
          uint64_t v22 = 0xD000000000000018;
          int v24 = "staticGlobalKnowledgeIndex";
LABEL_35:
          unint64_t v21 = (unint64_t)v24 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v25 = 0xE400000000000000;
      uint64_t v26 = 1701736302;
      switch(v16)
      {
        case 1:
          unint64_t v25 = 0x80000001B2E8EB10;
          uint64_t v26 = 0xD000000000000010;
          break;
        case 2:
          unint64_t v25 = 0xE700000000000000;
          uint64_t v26 = 0x7865646E496F6ELL;
          break;
        case 3:
          uint64_t v27 = 0x47746E657665;
          goto LABEL_43;
        case 4:
          uint64_t v26 = 0x79676F6C6F746E6FLL;
          unint64_t v25 = 0xED00007865646E49;
          break;
        case 5:
          uint64_t v26 = 0x49747865746E6F63;
          unint64_t v25 = 0xEC0000007865646ELL;
          break;
        case 6:
          uint64_t v27 = 0x476C61636F6CLL;
LABEL_43:
          uint64_t v26 = v27 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
          unint64_t v25 = 0xEF7865646E496870;
          break;
        case 7:
          uint64_t v26 = 0xD00000000000001ALL;
          int v28 = "dex";
          goto LABEL_46;
        case 8:
          uint64_t v26 = 0xD000000000000018;
          int v28 = "staticGlobalKnowledgeIndex";
LABEL_46:
          unint64_t v25 = (unint64_t)v28 | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v22 == v26 && v21 == v25) {
        break;
      }
      char v30 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30) {
        goto LABEL_55;
      }
      unint64_t v19 = (v19 + 1) & v20;
      if (((*(void *)(v8 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      {
        uint64_t v2 = 0;
        goto LABEL_57;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_55:
    int64_t v9 = i;
    unint64_t v7 = v10;
    uint64_t v3 = v33;
    if (v10) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_63;
    }
    if (v13 >= v32) {
      goto LABEL_61;
    }
    unint64_t v14 = *(void *)(v34 + 8 * v13);
    int64_t i = v9 + 1;
    if (!v14)
    {
      int64_t i = v9 + 2;
      if (v9 + 2 >= v32) {
        goto LABEL_61;
      }
      unint64_t v14 = *(void *)(v34 + 8 * i);
      if (!v14)
      {
        int64_t i = v9 + 3;
        if (v9 + 3 >= v32) {
          goto LABEL_61;
        }
        unint64_t v14 = *(void *)(v34 + 8 * i);
        if (!v14) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v9 + 4;
  if (v9 + 4 < v32)
  {
    unint64_t v14 = *(void *)(v34 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t i = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (i >= v32) {
          goto LABEL_61;
        }
        unint64_t v14 = *(void *)(v34 + 8 * i);
        ++v15;
        if (v14) {
          goto LABEL_21;
        }
      }
LABEL_63:
      __break(1u);
      JUMPOUT(0x1B2C47878);
    }
    int64_t i = v9 + 4;
    goto LABEL_21;
  }
LABEL_61:
  uint64_t v2 = 1;
LABEL_57:
  sub_1B2A47690();
  return v2;
}

uint64_t sub_1B2C478C0()
{
  sub_1B2A2A2C8(v2, v1, v0);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B2C478F4()
{
  uint64_t v1 = *(void *)(v0 - 312);
  *(void *)(v0 - 320) = *(void *)(v0 - 320);
  *(void *)(v0 - 312) = v1;
  return 0xD000000000000039;
}

uint64_t sub_1B2C47924()
{
  sub_1B2A2A2C8(v2, v1, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C4796C()
{
  *(void *)(v0 - 320) = 0;
  *(void *)(v0 - 312) = 0xE000000000000000;
  return sub_1B2E831F8();
}

uint64_t sub_1B2C47998(uint64_t result)
{
  *(void *)(v1 - 208) = result;
  return result;
}

uint64_t InferenceClient.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  InferenceClient.init()();
  return v0;
}

uint64_t InferenceClient.clientForServiceInstance<A>(with:interface:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  type metadata accessor for InferenceServiceInstanceClient();
  uint64_t v9 = type metadata accessor for LocalInferenceServiceInstanceClient();
  v15[0] = v3;
  v15[1] = v4;
  v15[2] = v6;
  v15[3] = v5;
  v15[4] = v8;
  v15[5] = v7;
  uint64_t v16 = *(void *)(v2 + 16);
  uint64_t v10 = type metadata accessor for InferenceServer();
  v15[0] = sub_1B2D3F8A8((uint64_t)v15, a2, (uint64_t)&v16, v10, (uint64_t)&off_1F0AC85E0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = sub_1B2C70748((uint64_t)v15, v9, WitnessTable);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return v12;
}

uint64_t InferenceClient.__allocating_init(serverParameters:)()
{
  uint64_t v0 = swift_allocObject();
  InferenceClient.init(serverParameters:)();
  return v0;
}

uint64_t InferenceClient.init()()
{
  sub_1B299DB7C();
  type metadata accessor for InferenceServer();
  uint64_t v2 = sub_1B2C47D08(129, (uint64_t)&type metadata for InferenceServiceDefinitionList);
  if (v1) {
    sub_1B29A2D74();
  }
  else {
    *(void *)(v0 + 16) = v2;
  }
  return v0;
}

uint64_t InferenceClient.init(serverParameters:)()
{
  sub_1B299DB7C();
  char v3 = *v2;
  type metadata accessor for InferenceServer();
  uint64_t v4 = sub_1B2C47D08(v3, (uint64_t)&type metadata for InferenceServiceDefinitionList);
  if (v1) {
    sub_1B29A2D74();
  }
  else {
    *(void *)(v0 + 16) = v4;
  }
  return v0;
}

uint64_t InferenceClient.__allocating_init(server:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t InferenceClient.init(server:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t InferenceClient.deinit()
{
  swift_release();
  return v0;
}

uint64_t InferenceClient.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2C47CE4(uint64_t *a1, uint64_t a2)
{
  return InferenceClient.clientForServiceInstance<A>(with:interface:)(a1, a2);
}

void *sub_1B2C47D08(char a1, uint64_t a2)
{
  void (*v7)(long long *__return_ptr);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void v12[5];
  void v13[5];

  sub_1B2E7FF98();
  swift_allocObject();
  uint64_t v5 = sub_1B2E7FF88();
  uint64_t v6 = v5;
  if (qword_1EB7E3F60 != -1) {
    uint64_t v5 = swift_once();
  }
  uint64_t v7 = (void (*)(long long *__return_ptr))qword_1EB7E5280;
  uint64_t v8 = unk_1EB7E5288;
  MEMORY[0x1F4188790](v5);
  v12[2] = v6;
  v12[3] = v2;
  type metadata accessor for InferenceServerLifecycleManagerNoOp();
  swift_allocObject();
  uint64_t v9 = sub_1B2C622A0();
  v13[3] = type metadata accessor for InferenceServerCacheManagerNoOp();
  v13[4] = &off_1F0AD4CA0;
  v13[0] = swift_allocObject();
  type metadata accessor for InferenceServer();
  swift_allocObject();
  swift_retain();
  uint64_t v10 = sub_1B2C47F8C(a1, (void (*)(long long *__return_ptr))sub_1B2C47F70, v6, v7, v8, (void (*)(long long *__return_ptr, uint64_t *))sub_1B2C48238, (uint64_t)v12, v9, (uint64_t)&off_1F0AD68A0, (uint64_t)v13, MEMORY[0x1E4FBC860], a2, v6);
  swift_release();
  return v10;
}

uint64_t type metadata accessor for InferenceClient()
{
  return self;
}

uint64_t method lookup function for InferenceClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceClient);
}

uint64_t dispatch thunk of InferenceClient.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of InferenceClient.__allocating_init(serverParameters:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of InferenceClient.__allocating_init(server:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1B2C47F70@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B2C58740(v1, a1);
}

void *sub_1B2C47F8C(char a1, void (*a2)(long long *__return_ptr), uint64_t a3, void (*a4)(long long *__return_ptr), uint64_t a5, void (*a6)(long long *__return_ptr, uint64_t *), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int64_t v15 = (void *)v13;
  *(void *)(v13 + 192) = 0;
  sub_1B2B2A948();
  *(void *)(v13 + 16) = sub_1B2E82148();
  *(unsigned char *)(v13 + 24) = a1;
  if (a1 < 0)
  {
    char v31 = a1 & 1;
    a4(&v27);
    if (!v14)
    {
      uint64_t v20 = v28;
      uint64_t v21 = v29;
      uint64_t v22 = sub_1B29AEC7C(&v27, v28);
      void v30[3] = v20;
      v30[4] = *(void *)(v21 + 16);
      uint64_t v23 = sub_1B29D1C70(v30);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v23, v22, v20);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v27);
      goto LABEL_7;
    }
  }
  else
  {
    a2(&v27);
    if (!v14)
    {
      sub_1B29D1D20(&v27, (uint64_t)v30);
LABEL_7:
      sub_1B29C3B84((uint64_t)v30, (uint64_t)(v15 + 4));
      a6(&v27, v30);
      sub_1B29D1D20(&v27, (uint64_t)(v15 + 16));
      v15[9] = a8;
      v15[10] = a9;
      sub_1B29C3B84(a10, (uint64_t)(v15 + 11));
      v15[21] = a11;
      v15[22] = a12;
      v15[23] = &protocol witness table for InferenceServiceDefinitionList;
      v15[25] = a13;
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v25 = swift_retain();
      sub_1B2C62224(v25, (uint64_t)&off_1F0AC85D0);
      swift_unknownObjectRelease();
      swift_release();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a10);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v30);
      return v15;
    }
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a10);
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for InferenceServer();
  swift_deallocPartialClassInstance();
  return v15;
}

void *sub_1B2C48238@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B2C587B8(a1, *(void *)(v2 + 16), a2);
}

uint64_t dispatch thunk of LocalInferenceClientProtocol.clientForServiceInstance<A>(with:interface:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of RemoteInferenceClientProtocol.clientForServiceInstance<A>(with:interface:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a14 + 8))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1B2C482BC(uint64_t a1)
{
  unint64_t v2 = sub_1B2C48400();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C482F8(uint64_t a1)
{
  unint64_t v2 = sub_1B2C48400();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t InferenceInterfaceNoError.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C40C70);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v2);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2C48400();
  sub_1B2C48F94();
  uint64_t v3 = sub_1B29A2D94();
  return v4(v3);
}

unint64_t sub_1B2C48400()
{
  unint64_t result = qword_1E9C40C78;
  if (!qword_1E9C40C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40C78);
  }
  return result;
}

uint64_t InferenceInterfaceNoError.init(from:)(uint64_t a1)
{
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
}

uint64_t sub_1B2C48474(uint64_t a1)
{
  return InferenceInterfaceNoError.init(from:)(a1);
}

uint64_t sub_1B2C4848C(void *a1)
{
  return InferenceInterfaceNoError.encode(to:)(a1);
}

unint64_t static InferenceInterfaceNoFeedback.type.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_1B2C484C0(uint64_t a1)
{
  unint64_t v2 = sub_1B2C4861C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C484FC(uint64_t a1)
{
  unint64_t v2 = sub_1B2C4861C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t InferenceInterfaceNoFeedback.deinit()
{
  return v0;
}

uint64_t InferenceInterfaceNoFeedback.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B2C48550(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C40C80);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v2);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2C4861C();
  sub_1B2C48F94();
  uint64_t v3 = sub_1B29A2D94();
  return v4(v3);
}

unint64_t sub_1B2C4861C()
{
  unint64_t result = qword_1E9C40C88;
  if (!qword_1E9C40C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40C88);
  }
  return result;
}

uint64_t InferenceInterfaceNoFeedback.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
  return v2;
}

uint64_t InferenceInterfaceNoFeedback.init(from:)(uint64_t a1)
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
  return v1;
}

unint64_t sub_1B2C486E8()
{
  unint64_t result = qword_1E9C40C90;
  if (!qword_1E9C40C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40C90);
  }
  return result;
}

unint64_t sub_1B2C48734()
{
  return 0xD000000000000031;
}

uint64_t sub_1B2C48754(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B2C48858(&qword_1E9C40C98);
  uint64_t result = sub_1B2C48858(&qword_1E9C40CA0);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for InferenceInterfaceNoFeedback()
{
  return self;
}

uint64_t sub_1B2C487E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = InferenceInterfaceNoFeedback.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B2C4880C(void *a1)
{
  return sub_1B2C48550(a1);
}

uint64_t sub_1B2C48824()
{
  return sub_1B2C48858((unint64_t *)&qword_1E9C3C310);
}

uint64_t sub_1B2C48858(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for InferenceInterfaceNoFeedback();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of static InferenceInterface.interfaceId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

ValueMetadata *type metadata accessor for InferenceInterfaceNoError()
{
  return &type metadata for InferenceInterfaceNoError;
}

ValueMetadata *type metadata accessor for InferenceInterfaceNoErrors()
{
  return &type metadata for InferenceInterfaceNoErrors;
}

uint64_t method lookup function for InferenceInterfaceNoFeedback(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceInterfaceNoFeedback);
}

uint64_t dispatch thunk of InferenceInterfaceNoFeedback.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of InferenceInterfaceNoFeedback.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for InferenceInterfaceNoFeedback.CodingKeys()
{
  return &type metadata for InferenceInterfaceNoFeedback.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceInterfaceNoError.CodingKeys()
{
  return &type metadata for InferenceInterfaceNoError.CodingKeys;
}

unint64_t sub_1B2C48968()
{
  unint64_t result = qword_1E9C40CA8;
  if (!qword_1E9C40CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40CA8);
  }
  return result;
}

unint64_t sub_1B2C489B8()
{
  unint64_t result = qword_1E9C40CB0;
  if (!qword_1E9C40CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40CB0);
  }
  return result;
}

unint64_t sub_1B2C48A08()
{
  unint64_t result = qword_1E9C40CB8;
  if (!qword_1E9C40CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40CB8);
  }
  return result;
}

unint64_t sub_1B2C48A58()
{
  unint64_t result = qword_1E9C40CC0;
  if (!qword_1E9C40CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40CC0);
  }
  return result;
}

uint64_t sub_1B2C48AA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v46 = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = sub_1B29A1D4C();
  sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v42 = v5;
  uint64_t v43 = v4;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v6);
  uint64_t v44 = (char *)&v39 - v7;
  uint64_t v45 = v3;
  uint64_t v41 = *(void *)(v3 - 8);
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v8);
  uint64_t v40 = (char *)&v39 - v9;
  uint64_t v10 = sub_1B29A1D4C();
  uint64_t v11 = sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v13 = v12;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v39 - v15;
  sub_1B299D31C();
  uint64_t v18 = v17;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v39 - v20;
  v51[0] = a1;
  id v22 = a1;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  if (swift_dynamicCast())
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v16, 0, 1, v10);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v23(v21, v16, v10);
    v23((char *)v46, v21, v10);
    type metadata accessor for InferenceMessageResponseError.ServiceError();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for InferenceMessageResponseError();
  }
  else
  {
    int v24 = v46;
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v16, 1, 1, v10);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
    v51[0] = a1;
    id v25 = a1;
    uint64_t v27 = (uint64_t)v44;
    uint64_t v26 = v45;
    if (swift_dynamicCast())
    {
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v27, 0, 1, v26);
      uint64_t v28 = v40;
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 32);
      v29(v40, v27, v26);
      v29((char *)v24, (uint64_t)v28, v26);
      type metadata accessor for InferenceMessageResponseError.ServiceError();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for InferenceMessageResponseError();
    }
    else
    {
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v27, 1, 1, v26);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v27, v43);
      uint64_t v50 = a1;
      id v31 = a1;
      sub_1B29A3EB4(&qword_1E9C3E108);
      int64_t v32 = v24;
      if (swift_dynamicCast())
      {
        sub_1B29D1D20(&v47, (uint64_t)v51);
        uint64_t v33 = v52;
        uint64_t v34 = v53;
        sub_1B29AEC7C(v51, v52);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v34 + 32))(&v47, v33, v34);
        char v35 = v49;
        long long v36 = v48;
        *(_OWORD *)int64_t v32 = v47;
        *((_OWORD *)v32 + 1) = v36;
        *((unsigned char *)v32 + 32) = v35;
        type metadata accessor for InferenceMessageResponseError();
        swift_storeEnumTagMultiPayload();
        return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v51);
      }
      uint64_t v49 = 0;
      long long v47 = 0u;
      long long v48 = 0u;
      sub_1B2B1D0C4((uint64_t)&v47);
      v51[0] = a1;
      id v37 = a1;
      *int v24 = sub_1B2E82408();
      v24[1] = v38;
      type metadata accessor for InferenceMessageResponseError();
    }
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1B2C48F94()
{
  return sub_1B2E83A38();
}

uint64_t static InferenceInterfaceList.interfaceWrappers.getter()
{
  sub_1B29A3EB4(&qword_1E9C40CC8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B2EC00A0;
  uint64_t v1 = sub_1B29A3EB4(&qword_1E9C40CD0);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = sub_1B2C49038();
  *(void *)(v0 + 32) = v2;
  return v0;
}

unint64_t sub_1B2C49038()
{
  unint64_t result = qword_1E9C40CD8[0];
  if (!qword_1E9C40CD8[0])
  {
    sub_1B29C3588(&qword_1E9C40CD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C40CD8);
  }
  return result;
}

uint64_t static InferenceInterfaceList.interfaceWrapper(for:wrapperId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C40CC8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
  uint64_t v11 = sub_1B29A3EB4(&qword_1E9C40CD0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  *(void *)(inited + 56) = v11;
  *(void *)(inited + 64) = sub_1B2C49038();
  *(void *)(inited + 32) = v12;
  swift_bridgeObjectRetain();
  sub_1B29C3B84(inited + 32, (uint64_t)&v26);
  sub_1B29AEC7C(&v26, v27);
  if (InferenceInterfaceWrapperProtocol.interfaceId.getter() == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
    sub_1B29C3B84((uint64_t)&v26, (uint64_t)v23);
  }
  else
  {
    char v15 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    sub_1B29C3B84((uint64_t)&v26, (uint64_t)v23);
    if ((v15 & 1) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v16 = v24;
  uint64_t v17 = v25;
  sub_1B29AEC7C(v23, v24);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 88))(v16, v17);
  if (v19)
  {
    if (!a4)
    {
      swift_bridgeObjectRelease();
LABEL_19:
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v23);
      goto LABEL_20;
    }
    if (v18 == a3 && v19 == a4)
    {
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v23);
LABEL_22:
      swift_bridgeObjectRelease();
      sub_1B29D1D20(&v26, a5);
      return swift_bridgeObjectRelease();
    }
    char v21 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v23);
    if (v21) {
      goto LABEL_22;
    }
  }
  else
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v23);
    if (!a4) {
      goto LABEL_22;
    }
  }
LABEL_20:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v26);
  swift_bridgeObjectRelease();
  *(void *)(a5 + 32) = 0;
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for InferenceInterfaceList()
{
  return &type metadata for InferenceInterfaceList;
}

uint64_t InferenceInterfaceDefaultCodableWrapper.__allocating_init(interfaceType:wrapperId:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = a3;
  return result;
}

uint64_t InferenceInterfaceWrapperProtocol.interfaceId.getter()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t InferenceInterfaceWrapperProtocol<>.codableInputToInput(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2C4938C(a1, a2);
}

uint64_t InferenceInterfaceWrapperProtocol<>.outputToCodableOutput(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2C4938C(a1, a2);
}

uint64_t sub_1B2C4938C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v5(a2, a1, AssociatedTypeWitness);
}

uint64_t InferenceInterfaceDefaultCodableWrapper.wrapperId.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InferenceInterfaceDefaultCodableWrapper.init(interfaceType:wrapperId:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = v3;
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return result;
}

uint64_t InferenceInterfaceDefaultCodableWrapper.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InferenceInterfaceDefaultCodableWrapper.__deallocating_deinit()
{
  InferenceInterfaceDefaultCodableWrapper.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2C494A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2C494D0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))InferenceInterfaceWrapperProtocol<>.codableInputToInput(_:));
}

uint64_t sub_1B2C494B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2C494D0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))InferenceInterfaceWrapperProtocol<>.outputToCodableOutput(_:));
}

uint64_t sub_1B2C494D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = type metadata accessor for InferenceInterfaceDefaultCodableWrapper();
  return a4(a1, v7, a3);
}

uint64_t sub_1B2C49540()
{
  return InferenceInterfaceDefaultCodableWrapper.wrapperId.getter();
}

uint64_t InferenceInterfaceCustomCodableWrapper.wrapperId.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void *InferenceInterfaceCustomCodableWrapper.__allocating_init(interfaceType:wrapperId:convertInput:convertOutput:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = (void *)swift_allocObject();
  result[6] = a2;
  result[7] = a3;
  result[2] = a4;
  result[3] = a5;
  result[4] = a6;
  result[5] = a7;
  return result;
}

void *InferenceInterfaceCustomCodableWrapper.init(interfaceType:wrapperId:convertInput:convertOutput:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = v7;
  v7[6] = a2;
  v7[7] = a3;
  v7[2] = a4;
  v7[3] = a5;
  v7[4] = a6;
  v7[5] = a7;
  return result;
}

uint64_t sub_1B2C49608()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B2C49630()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t InferenceInterfaceCustomCodableWrapper.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InferenceInterfaceCustomCodableWrapper.__deallocating_deinit()
{
  InferenceInterfaceCustomCodableWrapper.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2C496BC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 112);
}

uint64_t sub_1B2C496C4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 120);
}

uint64_t sub_1B2C496CC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 128);
}

uint64_t sub_1B2C496D4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 136);
}

uint64_t sub_1B2C496DC()
{
  return sub_1B2C49608();
}

uint64_t sub_1B2C49700()
{
  return sub_1B2C49630();
}

uint64_t sub_1B2C49724()
{
  return InferenceInterfaceCustomCodableWrapper.wrapperId.getter();
}

uint64_t dispatch thunk of InferenceInterfaceWrapperProtocol.codableInputToInput(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of InferenceInterfaceWrapperProtocol.outputToCodableOutput(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of InferenceInterfaceWrapperProtocol.wrapperId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t sub_1B2C49784()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InferenceInterfaceDefaultCodableWrapper()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for InferenceInterfaceDefaultCodableWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceInterfaceDefaultCodableWrapper);
}

uint64_t dispatch thunk of InferenceInterfaceDefaultCodableWrapper.__allocating_init(interfaceType:wrapperId:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1B2C4980C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InferenceInterfaceCustomCodableWrapper()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for InferenceInterfaceCustomCodableWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceInterfaceCustomCodableWrapper);
}

uint64_t dispatch thunk of InferenceInterfaceCustomCodableWrapper.__allocating_init(interfaceType:wrapperId:convertInput:convertOutput:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of InferenceInterfaceCustomCodableWrapper.codableInputToInput(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of InferenceInterfaceCustomCodableWrapper.outputToCodableOutput(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t sub_1B2C498F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 80);
}

uint64_t sub_1B2C49900()
{
  uint64_t result = type metadata accessor for InferenceMessageResponse();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for InferenceMessageResponseError();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1B2C499D0(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v42 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v42 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v9 - 8);
  if (*(void *)(v10 + 64) <= v8) {
    unint64_t v11 = v8;
  }
  else {
    unint64_t v11 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  if (v11 + 1 > 0x21) {
    uint64_t v12 = v11 + 1;
  }
  else {
    uint64_t v12 = 33;
  }
  if (v12 + 1 > ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v13 = v12 + 1;
  }
  else {
    unint64_t v13 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  int v14 = *(_DWORD *)(v7 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v10 + 80);
  if ((v14 & 0x1000F8) != 0 || v13 + 1 > 0x18)
  {
    uint64_t v16 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v17 = (uint64_t *)(v16 + (((v14 & 0xF8 | 7u) + 16) & ~(unint64_t)(v14 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    unsigned int v18 = a2[v13];
    unsigned int v19 = v18 - 2;
    uint64_t v20 = a2;
    if (v18 < 2)
    {
      uint64_t v17 = a1;
    }
    else
    {
      if (v13 <= 3) {
        uint64_t v21 = v13;
      }
      else {
        uint64_t v21 = 4;
      }
      uint64_t v17 = a1;
      switch(v21)
      {
        case 1:
          int v22 = *v20;
          goto LABEL_26;
        case 2:
          int v22 = *(unsigned __int16 *)v20;
          goto LABEL_26;
        case 3:
          int v22 = *(unsigned __int16 *)v20 | (v20[2] << 16);
          goto LABEL_26;
        case 4:
          int v22 = *(_DWORD *)v20;
LABEL_26:
          if (v13 < 4) {
            unsigned int v18 = (v22 | (v19 << (8 * v13))) + 2;
          }
          else {
            unsigned int v18 = v22 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v18 == 1)
    {
      unsigned int v23 = v20[v12];
      unsigned int v24 = v23 - 3;
      if (v23 >= 3)
      {
        if (v12 <= 3) {
          uint64_t v25 = v12;
        }
        else {
          uint64_t v25 = 4;
        }
        switch(v25)
        {
          case 1:
            int v26 = *v20;
            goto LABEL_40;
          case 2:
            int v26 = *(unsigned __int16 *)v20;
            goto LABEL_40;
          case 3:
            int v26 = *(unsigned __int16 *)v20 | (v20[2] << 16);
            goto LABEL_40;
          case 4:
            int v26 = *(_DWORD *)v20;
LABEL_40:
            if (v12 < 4) {
              unsigned int v23 = (v26 | (v24 << (8 * v12))) + 3;
            }
            else {
              unsigned int v23 = v26 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v23 == 2)
      {
        uint64_t v33 = *((void *)v20 + 1);
        *uint64_t v17 = *(void *)v20;
        v17[1] = v33;
        *((unsigned char *)v17 + v12) = 2;
        swift_bridgeObjectRetain();
      }
      else if (v23 == 1)
      {
        uint64_t v27 = v20;
        uint64_t v28 = *(void *)v20;
        unint64_t v29 = *((void *)v20 + 1);
        uint64_t v30 = *((void *)v27 + 2);
        uint64_t v31 = *((void *)v27 + 3);
        char v32 = v27[32];
        sub_1B2C49E68(v28, v29, v30, v31, v32);
        *uint64_t v17 = v28;
        v17[1] = v29;
        v17[2] = v30;
        v17[3] = v31;
        *((unsigned char *)v17 + 32) = v32;
        *((unsigned char *)v17 + v12) = 1;
      }
      else
      {
        unsigned int v34 = v20[v11];
        unsigned int v35 = v34 - 2;
        if (v34 >= 2)
        {
          if (v11 <= 3) {
            uint64_t v36 = v11;
          }
          else {
            uint64_t v36 = 4;
          }
          switch(v36)
          {
            case 1:
              int v37 = *v20;
              goto LABEL_56;
            case 2:
              int v37 = *(unsigned __int16 *)v20;
              goto LABEL_56;
            case 3:
              int v37 = *(unsigned __int16 *)v20 | (v20[2] << 16);
              goto LABEL_56;
            case 4:
              int v37 = *(_DWORD *)v20;
LABEL_56:
              if (v11 < 4) {
                unsigned int v34 = (v37 | (v35 << (8 * v11))) + 2;
              }
              else {
                unsigned int v34 = v37 + 2;
              }
              break;
            default:
              break;
          }
        }
        BOOL v38 = v34 == 1;
        if (v34 == 1)
        {
          uint64_t v39 = v9;
        }
        else
        {
          uint64_t v10 = v7;
          uint64_t v39 = AssociatedTypeWitness;
        }
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(v10 + 16))(v17, v20, v39);
        *((unsigned char *)v17 + v11) = v38;
        *((unsigned char *)v17 + v12) = 0;
      }
      *((unsigned char *)v17 + v13) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(v5 + 16))(v17, v20, v42);
      *(void *)(((unint64_t)v17 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v20[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v17 + v13) = 0;
    }
  }
  return v17;
}

uint64_t sub_1B2C49E68(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 3)
  {
LABEL_4:
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if (a5 != 2)
  {
    if (a5) {
      return result;
    }
    goto LABEL_4;
  }

  return sub_1B2C49EE4(result, a2);
}

uint64_t sub_1B2C49EE4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B2C49EF8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v36 = *(void *)(v3 - 8);
  unint64_t v4 = ((*(void *)(v36 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v35 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  unint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  if (v8 <= v6) {
    unint64_t v8 = v6;
  }
  uint64_t v9 = 33;
  if (v8 + 1 > 0x21) {
    uint64_t v9 = v8 + 1;
  }
  if (v9 + 1 > v4) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = v4;
  }
  unsigned int v11 = a1[v10];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a1;
        goto LABEL_17;
      case 2:
        int v14 = *(unsigned __int16 *)a1;
        goto LABEL_17;
      case 3:
        int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_17;
      case 4:
        int v14 = *(_DWORD *)a1;
LABEL_17:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 != 1)
  {
    uint64_t v20 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v36 + 8);
    uint64_t v21 = a1;
    uint64_t v22 = v3;
LABEL_27:
    return v20(v21, v22);
  }
  unsigned int v16 = a1[v9];
  unsigned int v17 = v16 - 3;
  if (v16 >= 3)
  {
    if (v9 <= 3) {
      uint64_t v18 = v9;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *a1;
        goto LABEL_33;
      case 2:
        int v19 = *(unsigned __int16 *)a1;
        goto LABEL_33;
      case 3:
        int v19 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_33;
      case 4:
        int v19 = *(_DWORD *)a1;
LABEL_33:
        int v24 = (v19 | (v17 << (8 * v9))) + 3;
        unsigned int v16 = v19 + 3;
        if (v9 < 4) {
          unsigned int v16 = v24;
        }
        break;
      default:
        break;
    }
  }
  if (v16 != 2)
  {
    if (v16 == 1)
    {
      uint64_t v25 = *(void *)a1;
      unint64_t v26 = *((void *)a1 + 1);
      uint64_t v27 = *((void *)a1 + 2);
      uint64_t v28 = *((void *)a1 + 3);
      char v29 = a1[32];
      return sub_1B2C4A32C(v25, v26, v27, v28, v29);
    }
    unsigned int v30 = a1[v8];
    unsigned int v31 = v30 - 2;
    if (v30 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v32 = v8;
      }
      else {
        uint64_t v32 = 4;
      }
      switch(v32)
      {
        case 1:
          int v33 = *a1;
          goto LABEL_52;
        case 2:
          int v33 = *(unsigned __int16 *)a1;
          goto LABEL_52;
        case 3:
          int v33 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_52;
        case 4:
          int v33 = *(_DWORD *)a1;
LABEL_52:
          if (v8 < 4) {
            unsigned int v30 = (v33 | (v31 << (8 * v8))) + 2;
          }
          else {
            unsigned int v30 = v33 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v30 == 1)
    {
      unsigned int v34 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(*(void *)(v7 - 8) + 8);
      return v34(a1, v7);
    }
    uint64_t v20 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v35 + 8);
    uint64_t v21 = a1;
    uint64_t v22 = AssociatedTypeWitness;
    goto LABEL_27;
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C4A32C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 3)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (a5 != 2)
  {
    if (a5) {
      return result;
    }
    goto LABEL_4;
  }

  return sub_1B2C4A3A8(result, a2);
}

uint64_t sub_1B2C4A3A8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2C4A3BC(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v40 = AssociatedTypeWitness;
  unint64_t v9 = *(void *)(v39 + 64);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  if (*(void *)(v11 + 64) <= v9) {
    unint64_t v12 = v9;
  }
  else {
    unint64_t v12 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  if (v12 + 1 > 0x21) {
    uint64_t v13 = v12 + 1;
  }
  else {
    uint64_t v13 = 33;
  }
  if (v13 + 1 > ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v14 = v13 + 1;
  }
  else {
    unint64_t v14 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v15 = a2[v14];
  unsigned int v16 = v15 - 2;
  if (v15 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v17 = v14;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a2;
        goto LABEL_19;
      case 2:
        int v18 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v18 = *(_DWORD *)a2;
LABEL_19:
        int v19 = (v18 | (v16 << (8 * v14))) + 2;
        unsigned int v15 = v18 + 2;
        if (v14 < 4) {
          unsigned int v15 = v19;
        }
        break;
      default:
        break;
    }
  }
  if (v15 == 1)
  {
    unsigned int v20 = a2[v13];
    unsigned int v21 = v20 - 3;
    if (v20 >= 3)
    {
      if (v13 <= 3) {
        uint64_t v22 = v13;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          goto LABEL_32;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          goto LABEL_32;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_32;
        case 4:
          int v23 = *(_DWORD *)a2;
LABEL_32:
          if (v13 < 4) {
            unsigned int v20 = (v23 | (v21 << (8 * v13))) + 3;
          }
          else {
            unsigned int v20 = v23 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v20 == 2)
    {
      uint64_t v30 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v30;
      *(unsigned char *)(a1 + v13) = 2;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v20 == 1)
      {
        uint64_t v25 = *(void *)a2;
        unint64_t v26 = *((void *)a2 + 1);
        uint64_t v27 = *((void *)a2 + 2);
        uint64_t v28 = *((void *)a2 + 3);
        char v29 = a2[32];
        sub_1B2C49E68(v25, v26, v27, v28, v29);
        *(void *)a1 = v25;
        *(void *)(a1 + 8) = v26;
        *(void *)(a1 + 16) = v27;
        *(void *)(a1 + 24) = v28;
        char v24 = 1;
        *(unsigned char *)(a1 + 32) = v29;
        *(unsigned char *)(a1 + v13) = 1;
        goto LABEL_55;
      }
      unsigned int v31 = a2[v12];
      unsigned int v32 = v31 - 2;
      if (v31 >= 2)
      {
        if (v12 <= 3) {
          uint64_t v33 = v12;
        }
        else {
          uint64_t v33 = 4;
        }
        switch(v33)
        {
          case 1:
            int v34 = *a2;
            goto LABEL_48;
          case 2:
            int v34 = *(unsigned __int16 *)a2;
            goto LABEL_48;
          case 3:
            int v34 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_48;
          case 4:
            int v34 = *(_DWORD *)a2;
LABEL_48:
            int v35 = (v34 | (v32 << (8 * v12))) + 2;
            unsigned int v31 = v34 + 2;
            if (v12 < 4) {
              unsigned int v31 = v35;
            }
            break;
          default:
            break;
        }
      }
      BOOL v36 = v31 == 1;
      if (v31 == 1)
      {
        uint64_t v37 = v10;
      }
      else
      {
        uint64_t v11 = v39;
        uint64_t v37 = v40;
      }
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v11 + 16))(a1, a2, v37);
      *(unsigned char *)(a1 + v12) = v36;
      *(unsigned char *)(a1 + v13) = 0;
    }
    char v24 = 1;
    goto LABEL_55;
  }
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
  char v24 = 0;
  *(void *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
LABEL_55:
  *(unsigned char *)(a1 + v14) = v24;
  return a1;
}

unsigned __int8 *sub_1B2C4A7E8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v50 = *(void *)(v6 + 64);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v48 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v49 = AssociatedTypeWitness;
    unint64_t v8 = *(void *)(v48 + 64);
    uint64_t v9 = swift_getAssociatedTypeWitness();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(void *)(v10 + 64) <= v8) {
      unint64_t v11 = v8;
    }
    else {
      unint64_t v11 = *(void *)(*(void *)(v9 - 8) + 64);
    }
    if (v11 + 1 > 0x21) {
      uint64_t v12 = v11 + 1;
    }
    else {
      uint64_t v12 = 33;
    }
    if (v12 + 1 > ((v50 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
      unint64_t v13 = v12 + 1;
    }
    else {
      unint64_t v13 = ((v50 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    unsigned int v14 = a1[v13];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v16 = v13;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a1;
          goto LABEL_20;
        case 2:
          int v17 = *(unsigned __int16 *)a1;
          goto LABEL_20;
        case 3:
          int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_20;
        case 4:
          int v17 = *(_DWORD *)a1;
LABEL_20:
          if (v13 < 4) {
            unsigned int v14 = (v17 | (v15 << (8 * v13))) + 2;
          }
          else {
            unsigned int v14 = v17 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      unsigned int v18 = a1[v12];
      unsigned int v19 = v18 - 3;
      if (v18 >= 3)
      {
        if (v12 <= 3) {
          uint64_t v20 = v12;
        }
        else {
          uint64_t v20 = 4;
        }
        switch(v20)
        {
          case 1:
            int v21 = *a1;
            goto LABEL_54;
          case 2:
            int v21 = *(unsigned __int16 *)a1;
            goto LABEL_54;
          case 3:
            int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_54;
          case 4:
            int v21 = *(_DWORD *)a1;
LABEL_54:
            if (v12 < 4) {
              unsigned int v18 = (v21 | (v19 << (8 * v12))) + 3;
            }
            else {
              unsigned int v18 = v21 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v18 == 2)
      {
        swift_bridgeObjectRelease();
      }
      else if (v18 == 1)
      {
        sub_1B2C4A32C(*(void *)a1, *((void *)a1 + 1), *((void *)a1 + 2), *((void *)a1 + 3), a1[32]);
      }
      else
      {
        unsigned int v31 = a1[v11];
        unsigned int v32 = v31 - 2;
        if (v31 >= 2)
        {
          if (v11 <= 3) {
            uint64_t v33 = v11;
          }
          else {
            uint64_t v33 = 4;
          }
          switch(v33)
          {
            case 1:
              int v34 = *a1;
              goto LABEL_86;
            case 2:
              int v34 = *(unsigned __int16 *)a1;
              goto LABEL_86;
            case 3:
              int v34 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_86;
            case 4:
              int v34 = *(_DWORD *)a1;
LABEL_86:
              if (v11 < 4) {
                unsigned int v31 = (v34 | (v32 << (8 * v11))) + 2;
              }
              else {
                unsigned int v31 = v34 + 2;
              }
              break;
            default:
              break;
          }
        }
        if (v31 == 1) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(a1, v9);
        }
        else {
          (*(void (**)(unsigned __int8 *, uint64_t))(v48 + 8))(a1, v49);
        }
      }
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v22 = a2[v13];
    unsigned int v23 = v22 - 2;
    if (v22 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v24 = v13;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          goto LABEL_40;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          goto LABEL_40;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_40;
        case 4:
          int v25 = *(_DWORD *)a2;
LABEL_40:
          if (v13 < 4) {
            unsigned int v22 = (v25 | (v23 << (8 * v13))) + 2;
          }
          else {
            unsigned int v22 = v25 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v22 == 1)
    {
      unsigned int v26 = a2[v12];
      unsigned int v27 = v26 - 3;
      if (v26 >= 3)
      {
        if (v12 <= 3) {
          uint64_t v28 = v12;
        }
        else {
          uint64_t v28 = 4;
        }
        switch(v28)
        {
          case 1:
            int v29 = *a2;
            goto LABEL_70;
          case 2:
            int v29 = *(unsigned __int16 *)a2;
            goto LABEL_70;
          case 3:
            int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_70;
          case 4:
            int v29 = *(_DWORD *)a2;
LABEL_70:
            if (v12 < 4) {
              unsigned int v26 = (v29 | (v27 << (8 * v12))) + 3;
            }
            else {
              unsigned int v26 = v29 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v26 == 2)
      {
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[v12] = 2;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v26 == 1)
        {
          uint64_t v35 = *(void *)a2;
          unint64_t v36 = *((void *)a2 + 1);
          uint64_t v37 = *((void *)a2 + 2);
          uint64_t v38 = *((void *)a2 + 3);
          char v39 = a2[32];
          sub_1B2C49E68(v35, v36, v37, v38, v39);
          *(void *)a1 = v35;
          *((void *)a1 + 1) = v36;
          *((void *)a1 + 2) = v37;
          *((void *)a1 + 3) = v38;
          char v30 = 1;
          a1[32] = v39;
          a1[v12] = 1;
          goto LABEL_103;
        }
        unsigned int v40 = a2[v11];
        unsigned int v41 = v40 - 2;
        if (v40 >= 2)
        {
          if (v11 <= 3) {
            uint64_t v42 = v11;
          }
          else {
            uint64_t v42 = 4;
          }
          switch(v42)
          {
            case 1:
              int v43 = *a2;
              goto LABEL_95;
            case 2:
              int v43 = *(unsigned __int16 *)a2;
              goto LABEL_95;
            case 3:
              int v43 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_95;
            case 4:
              int v43 = *(_DWORD *)a2;
LABEL_95:
              if (v11 < 4) {
                unsigned int v40 = (v43 | (v41 << (8 * v11))) + 2;
              }
              else {
                unsigned int v40 = v43 + 2;
              }
              break;
            default:
              break;
          }
        }
        BOOL v44 = v40 == 1;
        uint64_t v45 = v48;
        if (v40 == 1)
        {
          uint64_t v45 = v10;
          uint64_t v46 = v9;
        }
        else
        {
          uint64_t v46 = v49;
        }
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v45 + 16))(a1, a2, v46);
        a1[v11] = v44;
        a1[v12] = 0;
      }
      char v30 = 1;
      goto LABEL_103;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    char v30 = 0;
    *(void *)((unint64_t)&a1[v50 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v50 + 7] & 0xFFFFFFFFFFFFFFF8);
LABEL_103:
    a1[v13] = v30;
  }
  return a1;
}

uint64_t sub_1B2C4AE64(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v35 = AssociatedTypeWitness;
  unint64_t v9 = *(void *)(v34 + 64);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  if (*(void *)(v11 + 64) <= v9) {
    unint64_t v12 = v9;
  }
  else {
    unint64_t v12 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  if (v12 + 1 > 0x21) {
    uint64_t v13 = v12 + 1;
  }
  else {
    uint64_t v13 = 33;
  }
  if (v13 + 1 > ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v14 = v13 + 1;
  }
  else {
    unint64_t v14 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v15 = a2[v14];
  unsigned int v16 = v15 - 2;
  if (v15 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v17 = v14;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a2;
        goto LABEL_19;
      case 2:
        int v18 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v18 = *(_DWORD *)a2;
LABEL_19:
        if (v14 < 4) {
          unsigned int v15 = (v18 | (v16 << (8 * v14))) + 2;
        }
        else {
          unsigned int v15 = v18 + 2;
        }
        break;
      default:
        break;
    }
  }
  if (v15 == 1)
  {
    unsigned int v19 = a2[v13];
    unsigned int v20 = v19 - 3;
    if (v19 >= 3)
    {
      if (v13 <= 3) {
        uint64_t v21 = v13;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *a2;
          goto LABEL_33;
        case 2:
          int v22 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v22 = *(_DWORD *)a2;
LABEL_33:
          if (v13 < 4) {
            unsigned int v19 = (v22 | (v20 << (8 * v13))) + 3;
          }
          else {
            unsigned int v19 = v22 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v19 == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v25 = 2;
    }
    else if (v19 == 1)
    {
      long long v24 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v24;
      *(unsigned char *)(a1 + 32) = a2[32];
      char v25 = 1;
    }
    else
    {
      unsigned int v26 = a2[v12];
      unsigned int v27 = v26 - 2;
      if (v26 >= 2)
      {
        if (v12 <= 3) {
          uint64_t v28 = v12;
        }
        else {
          uint64_t v28 = 4;
        }
        switch(v28)
        {
          case 1:
            int v29 = *a2;
            goto LABEL_49;
          case 2:
            int v29 = *(unsigned __int16 *)a2;
            goto LABEL_49;
          case 3:
            int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_49;
          case 4:
            int v29 = *(_DWORD *)a2;
LABEL_49:
            int v30 = (v29 | (v27 << (8 * v12))) + 2;
            unsigned int v26 = v29 + 2;
            if (v12 < 4) {
              unsigned int v26 = v30;
            }
            break;
          default:
            break;
        }
      }
      BOOL v31 = v26 == 1;
      if (v26 == 1)
      {
        uint64_t v32 = v10;
      }
      else
      {
        uint64_t v11 = v34;
        uint64_t v32 = v35;
      }
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v11 + 32))(a1, a2, v32);
      char v25 = 0;
      *(unsigned char *)(a1 + v12) = v31;
    }
    *(unsigned char *)(a1 + v13) = v25;
    char v23 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
    char v23 = 0;
    *(void *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
  }
  *(unsigned char *)(a1 + v14) = v23;
  return a1;
}

unsigned __int8 *sub_1B2C4B26C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v47 = *(void *)(v6 + 64);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v46 = AssociatedTypeWitness;
    unint64_t v8 = *(void *)(v45 + 64);
    uint64_t v9 = swift_getAssociatedTypeWitness();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(void *)(v10 + 64) <= v8) {
      unint64_t v11 = v8;
    }
    else {
      unint64_t v11 = *(void *)(*(void *)(v9 - 8) + 64);
    }
    if (v11 + 1 > 0x21) {
      uint64_t v12 = v11 + 1;
    }
    else {
      uint64_t v12 = 33;
    }
    if (v12 + 1 > ((v47 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
      unint64_t v13 = v12 + 1;
    }
    else {
      unint64_t v13 = ((v47 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    unsigned int v14 = a1[v13];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v16 = v13;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a1;
          goto LABEL_20;
        case 2:
          int v17 = *(unsigned __int16 *)a1;
          goto LABEL_20;
        case 3:
          int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_20;
        case 4:
          int v17 = *(_DWORD *)a1;
LABEL_20:
          if (v13 < 4) {
            unsigned int v14 = (v17 | (v15 << (8 * v13))) + 2;
          }
          else {
            unsigned int v14 = v17 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      unsigned int v18 = a1[v12];
      unsigned int v19 = v18 - 3;
      if (v18 >= 3)
      {
        if (v12 <= 3) {
          uint64_t v20 = v12;
        }
        else {
          uint64_t v20 = 4;
        }
        switch(v20)
        {
          case 1:
            int v21 = *a1;
            goto LABEL_54;
          case 2:
            int v21 = *(unsigned __int16 *)a1;
            goto LABEL_54;
          case 3:
            int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_54;
          case 4:
            int v21 = *(_DWORD *)a1;
LABEL_54:
            if (v12 < 4) {
              unsigned int v18 = (v21 | (v19 << (8 * v12))) + 3;
            }
            else {
              unsigned int v18 = v21 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v18 == 2)
      {
        swift_bridgeObjectRelease();
      }
      else if (v18 == 1)
      {
        sub_1B2C4A32C(*(void *)a1, *((void *)a1 + 1), *((void *)a1 + 2), *((void *)a1 + 3), a1[32]);
      }
      else
      {
        unsigned int v31 = a1[v11];
        unsigned int v32 = v31 - 2;
        if (v31 >= 2)
        {
          if (v11 <= 3) {
            uint64_t v33 = v11;
          }
          else {
            uint64_t v33 = 4;
          }
          switch(v33)
          {
            case 1:
              int v34 = *a1;
              goto LABEL_86;
            case 2:
              int v34 = *(unsigned __int16 *)a1;
              goto LABEL_86;
            case 3:
              int v34 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_86;
            case 4:
              int v34 = *(_DWORD *)a1;
LABEL_86:
              if (v11 < 4) {
                unsigned int v31 = (v34 | (v32 << (8 * v11))) + 2;
              }
              else {
                unsigned int v31 = v34 + 2;
              }
              break;
            default:
              break;
          }
        }
        if (v31 == 1) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(a1, v9);
        }
        else {
          (*(void (**)(unsigned __int8 *, uint64_t))(v45 + 8))(a1, v46);
        }
      }
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v22 = a2[v13];
    unsigned int v23 = v22 - 2;
    if (v22 >= 2)
    {
      if (v13 <= 3) {
        uint64_t v24 = v13;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          goto LABEL_40;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          goto LABEL_40;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_40;
        case 4:
          int v25 = *(_DWORD *)a2;
LABEL_40:
          if (v13 < 4) {
            unsigned int v22 = (v25 | (v23 << (8 * v13))) + 2;
          }
          else {
            unsigned int v22 = v25 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v22 == 1)
    {
      unsigned int v26 = a2[v12];
      unsigned int v27 = v26 - 3;
      if (v26 >= 3)
      {
        if (v12 <= 3) {
          uint64_t v28 = v12;
        }
        else {
          uint64_t v28 = 4;
        }
        switch(v28)
        {
          case 1:
            int v29 = *a2;
            goto LABEL_70;
          case 2:
            int v29 = *(unsigned __int16 *)a2;
            goto LABEL_70;
          case 3:
            int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_70;
          case 4:
            int v29 = *(_DWORD *)a2;
LABEL_70:
            if (v12 < 4) {
              unsigned int v26 = (v29 | (v27 << (8 * v12))) + 3;
            }
            else {
              unsigned int v26 = v29 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v26 == 2)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v36 = 2;
      }
      else if (v26 == 1)
      {
        long long v35 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v35;
        a1[32] = a2[32];
        char v36 = 1;
      }
      else
      {
        unsigned int v37 = a2[v11];
        unsigned int v38 = v37 - 2;
        if (v37 >= 2)
        {
          if (v11 <= 3) {
            uint64_t v39 = v11;
          }
          else {
            uint64_t v39 = 4;
          }
          switch(v39)
          {
            case 1:
              int v40 = *a2;
              goto LABEL_95;
            case 2:
              int v40 = *(unsigned __int16 *)a2;
              goto LABEL_95;
            case 3:
              int v40 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_95;
            case 4:
              int v40 = *(_DWORD *)a2;
LABEL_95:
              if (v11 < 4) {
                unsigned int v37 = (v40 | (v38 << (8 * v11))) + 2;
              }
              else {
                unsigned int v37 = v40 + 2;
              }
              break;
            default:
              break;
          }
        }
        BOOL v41 = v37 == 1;
        uint64_t v42 = v45;
        if (v37 == 1)
        {
          uint64_t v42 = v10;
          uint64_t v43 = v9;
        }
        else
        {
          uint64_t v43 = v46;
        }
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v42 + 32))(a1, a2, v43);
        char v36 = 0;
        a1[v11] = v41;
      }
      a1[v12] = v36;
      char v30 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v30 = 0;
      *(void *)((unint64_t)&a1[v47 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v47 + 7] & 0xFFFFFFFFFFFFFFF8);
    }
    a1[v13] = v30;
  }
  return a1;
}

uint64_t sub_1B2C4B8B8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 <= v6) {
    unint64_t v7 = v6;
  }
  if (v7 + 1 > 0x21) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 33;
  }
  if (v8 + 1 > v5) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = v5;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_28;
  }
  unint64_t v10 = v9 + 1;
  char v11 = 8 * (v9 + 1);
  if ((v9 + 1) <= 3)
  {
    unsigned int v14 = ((a2 + ~(-1 << v11) - 254) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v14 < 2)
    {
LABEL_28:
      unsigned int v16 = *((unsigned __int8 *)a1 + v9);
      if (v16 >= 2) {
        return (v16 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_28;
  }
LABEL_20:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v10 | v15) + 255;
}

void sub_1B2C4BAB4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 <= v8) {
    unint64_t v9 = v8;
  }
  if (v9 + 1 > 0x21) {
    uint64_t v10 = v9 + 1;
  }
  else {
    uint64_t v10 = 33;
  }
  if (v10 + 1 > v7) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = v7;
  }
  size_t v12 = v11 + 1;
  char v13 = 8 * (v11 + 1);
  if (a3 < 0xFF)
  {
    int v14 = 0;
  }
  else if (v12 <= 3)
  {
    unsigned int v17 = ((a3 + ~(-1 << v13) - 254) >> v13) + 1;
    if (HIWORD(v17))
    {
      int v14 = 4;
    }
    else if (v17 >= 0x100)
    {
      int v14 = 2;
    }
    else
    {
      int v14 = v17 > 1;
    }
  }
  else
  {
    int v14 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v15 = a2 - 255;
    if (v12 < 4)
    {
      int v16 = (v15 >> v13) + 1;
      if (v11 != -1)
      {
        int v18 = v15 & ~(-1 << v13);
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v11 + 1);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v14)
    {
      case 1:
        a1[v12] = v16;
        break;
      case 2:
        *(_WORD *)&a1[v12] = v16;
        break;
      case 3:
LABEL_40:
        __break(1u);
        JUMPOUT(0x1B2C4BD18);
      case 4:
        *(_DWORD *)&a1[v12] = v16;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v14)
    {
      case 1:
        a1[v12] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_29;
      case 2:
        *(_WORD *)&a1[v12] = 0;
        goto LABEL_28;
      case 3:
        goto LABEL_40;
      case 4:
        *(_DWORD *)&a1[v12] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_29;
      default:
LABEL_28:
        if (a2) {
LABEL_29:
        }
          a1[v11] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1B2C4BD40(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v3 = ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v5 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v5 <= v4) {
    unint64_t v5 = v4;
  }
  if (v5 + 1 > 0x21) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 33;
  }
  if (v6 + 1 > v3) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = v3;
  }
  uint64_t result = a1[v7];
  if (result >= 2)
  {
    if (v7 <= 3) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_18;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_18:
        unsigned int v11 = (v10 | ((result - 2) << (8 * v7))) + 2;
        unsigned int v12 = v10 + 2;
        if (v7 >= 4) {
          uint64_t result = v12;
        }
        else {
          uint64_t result = v11;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1B2C4BEB0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (a2 > 1)
  {
    unint64_t v10 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unint64_t v11 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
    unint64_t v12 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
    if (v12 <= v11) {
      unint64_t v12 = v11;
    }
    if (v12 + 1 > 0x21) {
      uint64_t v13 = v12 + 1;
    }
    else {
      uint64_t v13 = 33;
    }
    if (v13 + 1 > v10) {
      size_t v14 = v13 + 1;
    }
    else {
      size_t v14 = v10;
    }
    unsigned int v15 = a2 - 2;
    if (v14 < 4)
    {
      unsigned int v16 = v15 >> (8 * v14);
      int v17 = v15 & ~(-1 << (8 * v14));
      a1[v14] = v16 + 2;
      bzero(a1, v14);
      if (v14 == 3)
      {
        *(_WORD *)a1 = v17;
        a1[2] = BYTE2(v17);
      }
      else if (v14 == 2)
      {
        *(_WORD *)a1 = v17;
      }
      else
      {
        *a1 = v17;
      }
    }
    else
    {
      a1[v14] = 2;
      bzero(a1, v14);
      *(_DWORD *)a1 = v15;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    unint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
    if (v7 <= *(void *)(v6 + 64)) {
      unint64_t v7 = *(void *)(v6 + 64);
    }
    if (v7 + 1 > 0x21) {
      uint64_t v8 = v7 + 1;
    }
    else {
      uint64_t v8 = 33;
    }
    if (v8 + 1 > ((*(void *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
      unint64_t v9 = v8 + 1;
    }
    else {
      unint64_t v9 = ((*(void *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    a1[v9] = a2;
  }
}

uint64_t type metadata accessor for InferenceMessageRemoteServerResponse()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B2C4C10C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2C4C1F4(char a1)
{
  if (a1) {
    return 0x726F727265;
  }
  else {
    return 0x73736563637573;
  }
}

uint64_t sub_1B2C4C228(void *a1, void *a2)
{
  uint64_t v62 = a1;
  uint64_t v3 = a2[2];
  uint64_t v4 = a2[3];
  uint64_t v6 = a2[4];
  uint64_t v5 = a2[5];
  uint64_t v8 = a2[6];
  uint64_t v7 = a2[7];
  uint64_t v9 = a2[8];
  uint64_t v10 = a2[9];
  uint64_t v64 = a2[10];
  uint64_t v65 = v10;
  uint64_t v84 = v6;
  uint64_t v66 = v7;
  uint64_t v67 = v5;
  uint64_t v11 = v9;
  type metadata accessor for InferenceMessageRemoteServerResponse.ErrorCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  sub_1B2C4DBF4((uint64_t)v83);
  uint64_t v56 = v12;
  uint64_t v13 = sub_1B2E83718();
  sub_1B299DB5C(v13, (uint64_t)&v86);
  uint64_t v59 = v14;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v15);
  sub_1B2C4DBC8(v16, v51);
  uint64_t v17 = type metadata accessor for InferenceMessageResponseError();
  sub_1B299DB5C(v17, (uint64_t)&v85);
  uint64_t v58 = v18;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v19);
  sub_1B29A1608();
  uint64_t v57 = v20;
  uint64_t v74 = v3;
  uint64_t v75 = v4;
  uint64_t v76 = v6;
  uint64_t v77 = v67;
  uint64_t v78 = v8;
  uint64_t v79 = v7;
  uint64_t v80 = v11;
  uint64_t v21 = v11;
  uint64_t v81 = v10;
  uint64_t v82 = v64;
  type metadata accessor for InferenceMessageRemoteServerResponse.SuccessCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  sub_1B2C4DBF4((uint64_t)&v75);
  uint64_t v51 = v22;
  uint64_t v23 = sub_1B2E83718();
  sub_1B299DB5C(v23, (uint64_t)&v81);
  uint64_t v55 = v24;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v25);
  sub_1B29A1608();
  uint64_t v53 = v26;
  uint64_t v27 = type metadata accessor for InferenceMessageResponse();
  sub_1B299DB5C(v27, (uint64_t)&v79);
  uint64_t v54 = v28;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v29);
  sub_1B29A1608();
  uint64_t v52 = v30;
  uint64_t v31 = *(a2 - 1);
  MEMORY[0x1F4188790](v32);
  int v34 = (char *)&v51 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v3;
  uint64_t v75 = v4;
  uint64_t v76 = v84;
  uint64_t v77 = v67;
  uint64_t v78 = v8;
  uint64_t v79 = v66;
  uint64_t v60 = v21;
  uint64_t v80 = v21;
  uint64_t v81 = v10;
  uint64_t v82 = v64;
  type metadata accessor for InferenceMessageRemoteServerResponse.CodingKeys();
  swift_getWitnessTable();
  uint64_t v35 = sub_1B2E83718();
  sub_1B299DB5C(v35, (uint64_t)&v87);
  uint64_t v61 = v36;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v37);
  sub_1B29AEC7C(v62, v62[3]);
  sub_1B2E83A38();
  uint64_t v39 = *(void (**)(char *, uint64_t, void *))(v31 + 16);
  uint64_t v38 = v31 + 16;
  v39(v34, v63, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = v58;
    uint64_t v41 = v57;
    sub_1B2C4DBE0();
    v43(v42);
    LOBYTE(v74) = 1;
    sub_1B2C4DBB0();
    sub_1B2E83618();
    uint64_t v70 = v66;
    uint64_t v71 = v60;
    uint64_t v72 = v65;
    uint64_t v73 = v64;
  }
  else
  {
    uint64_t v40 = v54;
    uint64_t v41 = v52;
    sub_1B2C4DBE0();
    v45(v44);
    LOBYTE(v74) = 0;
    sub_1B2C4DBB0();
    sub_1B2E83618();
    uint64_t v68 = v84;
    uint64_t v69 = v67;
  }
  swift_getWitnessTable();
  sub_1B29A507C();
  sub_1B299B798();
  v47(v46);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v38);
  sub_1B299B798();
  return v49(v48);
}

uint64_t sub_1B2C4C7AC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v102 = a7;
  uint64_t v119 = a1;
  uint64_t v81 = a9;
  uint64_t v100 = a2;
  *((void *)&v112 + 1) = a5;
  uint64_t v113 = a6;
  uint64_t v114 = a7;
  uint64_t v115 = a8;
  uint64_t v116 = a10;
  uint64_t v117 = a11;
  type metadata accessor for InferenceMessageRemoteServerResponse.ErrorCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  sub_1B2C4DBF4((uint64_t)&v118);
  uint64_t v92 = v17;
  uint64_t v18 = sub_1B2E83608();
  sub_1B299DB5C(v18, (uint64_t)&v112 + 8);
  uint64_t v89 = v19;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v20);
  sub_1B2C4DBC8(v21, v77);
  *(void *)&long long v111 = a2;
  *((void *)&v111 + 1) = a3;
  *(void *)&long long v112 = a4;
  *((void *)&v112 + 1) = a5;
  uint64_t v101 = a5;
  uint64_t v113 = a6;
  uint64_t v114 = v102;
  uint64_t v115 = a8;
  uint64_t v116 = a10;
  uint64_t v117 = a11;
  type metadata accessor for InferenceMessageRemoteServerResponse.SuccessCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  sub_1B2C4DBF4((uint64_t)&v116);
  uint64_t v90 = v22;
  uint64_t v23 = sub_1B2E83608();
  sub_1B299DB5C(v23, (uint64_t)&v110);
  uint64_t v88 = v24;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v25);
  sub_1B29A1608();
  uint64_t v91 = v26;
  *(void *)&long long v111 = v100;
  *((void *)&v111 + 1) = a3;
  *(void *)&long long v112 = a4;
  *((void *)&v112 + 1) = a5;
  uint64_t v113 = a6;
  uint64_t v114 = v102;
  uint64_t v115 = a8;
  uint64_t v116 = a10;
  uint64_t v117 = a11;
  type metadata accessor for InferenceMessageRemoteServerResponse.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = sub_1B2E83608();
  sub_1B299DB5C(v27, (uint64_t)&v121);
  uint64_t v94 = v28;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v77 - v30;
  *(void *)&long long v111 = v100;
  *((void *)&v111 + 1) = a3;
  uint64_t v84 = a3;
  uint64_t v96 = a4;
  *(void *)&long long v112 = a4;
  *((void *)&v112 + 1) = a5;
  uint64_t v97 = a6;
  uint64_t v113 = a6;
  uint64_t v114 = v102;
  uint64_t v87 = a8;
  uint64_t v115 = a8;
  uint64_t v116 = a10;
  uint64_t v85 = a10;
  uint64_t v86 = a11;
  uint64_t v117 = a11;
  uint64_t v32 = type metadata accessor for InferenceMessageRemoteServerResponse();
  uint64_t v33 = sub_1B299DB5C(v32, (uint64_t)&v120);
  uint64_t v82 = v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v37 = (char *)&v77 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x1F4188790](v35);
  uint64_t v40 = (char *)&v77 - v39;
  MEMORY[0x1F4188790](v38);
  uint64_t v42 = (char *)&v77 - v41;
  uint64_t v43 = v119;
  sub_1B29AEC7C(v119, v119[3]);
  uint64_t v44 = v99;
  sub_1B2E83A18();
  if (v44) {
    goto LABEL_9;
  }
  uint64_t v79 = v40;
  uint64_t v80 = v37;
  uint64_t v78 = v42;
  uint64_t v45 = v96;
  uint64_t WitnessTable = 0;
  uint64_t v46 = v95;
  uint64_t v99 = v31;
  *(void *)&long long v109 = sub_1B2E835F8();
  sub_1B2E82968();
  swift_getWitnessTable();
  *(void *)&long long v111 = sub_1B2E83078();
  *((void *)&v111 + 1) = v47;
  *(void *)&long long v112 = v48;
  *((void *)&v112 + 1) = v49;
  sub_1B2E83068();
  swift_getWitnessTable();
  sub_1B2E82C28();
  char v50 = v109;
  if (v109 != 2)
  {
    long long v77 = v111;
    long long v109 = v111;
    long long v110 = v112;
    if (sub_1B2E82CD8())
    {
      if (v50)
      {
        LOBYTE(v109) = 1;
        uint64_t v63 = v99;
        uint64_t v64 = WitnessTable;
        sub_1B2E834E8();
        if (v64)
        {
          swift_unknownObjectRelease();
          sub_1B29A4658();
          uint64_t v54 = v63;
          goto LABEL_13;
        }
        type metadata accessor for InferenceMessageResponseError();
        uint64_t v105 = v102;
        uint64_t v106 = v87;
        uint64_t v107 = v85;
        uint64_t v108 = v86;
        swift_getWitnessTable();
        uint64_t v67 = v80;
        sub_1B2E835B8();
        uint64_t v68 = v94;
        sub_1B299B798();
        v75();
        swift_unknownObjectRelease();
        uint64_t v70 = (void (*)(uint64_t, char *, uint64_t))(v68 + 8);
        sub_1B29A0560();
        v76();
        uint64_t v72 = v93;
        swift_storeEnumTagMultiPayload();
        uint64_t v73 = sub_1B2C4DB8C();
        uint64_t v74 = v67;
      }
      else
      {
        LOBYTE(v109) = 0;
        uint64_t v51 = v99;
        uint64_t v52 = WitnessTable;
        sub_1B2E834E8();
        if (v52)
        {
          swift_unknownObjectRelease();
          sub_1B29A4658();
          uint64_t v54 = v51;
LABEL_13:
          uint64_t v60 = v46;
          goto LABEL_8;
        }
        type metadata accessor for InferenceMessageResponse();
        uint64_t v103 = v45;
        uint64_t v104 = v101;
        swift_getWitnessTable();
        uint64_t v65 = v79;
        uint64_t v63 = v83;
        sub_1B2E835B8();
        uint64_t v66 = v94;
        sub_1B299B798();
        v69();
        swift_unknownObjectRelease();
        uint64_t v70 = (void (*)(uint64_t, char *, uint64_t))(v66 + 8);
        sub_1B29A0560();
        v71();
        uint64_t v72 = v93;
        swift_storeEnumTagMultiPayload();
        uint64_t v73 = sub_1B2C4DB8C();
        uint64_t v74 = v65;
      }
      v70(v73, v74, v72);
      v70(v81, v63, v72);
      uint64_t v61 = v119;
      return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v61);
    }
  }
  uint64_t v55 = sub_1B2E83288();
  swift_allocError();
  uint64_t v56 = v46;
  uint64_t v58 = v57;
  sub_1B29A3EB4(&qword_1E9C39038);
  *uint64_t v58 = v93;
  uint64_t v59 = v99;
  sub_1B2E834F8();
  sub_1B2E83278();
  (*(void (**)(void *, void, uint64_t))(*(void *)(v55 - 8) + 104))(v58, *MEMORY[0x1E4FBBA70], v55);
  swift_willThrow();
  swift_unknownObjectRelease();
  sub_1B29A4658();
  uint64_t v54 = v59;
  uint64_t v60 = v56;
LABEL_8:
  v53(v54, v60);
  uint64_t v43 = v119;
LABEL_9:
  uint64_t v61 = v43;
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v61);
}

BOOL sub_1B2C4D07C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B29AE32C(*a1, *a2);
}

uint64_t sub_1B2C4D0C8()
{
  return sub_1B29F1074();
}

uint64_t sub_1B2C4D108()
{
  return sub_1B29E7A44();
}

uint64_t sub_1B2C4D14C()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2C4D1AC()
{
  return sub_1B2C4C1F4(*v0);
}

uint64_t sub_1B2C4D1EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C4C10C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C4D23C()
{
  return sub_1B29A782C();
}

uint64_t sub_1B2C4D280@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29E7B68();
  *a1 = result;
  return result;
}

uint64_t sub_1B2C4D2CC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C4D320(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B2C4D374(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1B2C4D4CC(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void, void))_sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0);
}

uint64_t sub_1B2C4D390()
{
  return sub_1B2C4D568();
}

uint64_t sub_1B2C4D3A8(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1B2C4D5B4(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void, void, void, void, void, void))sub_1B29DA5BC);
}

uint64_t sub_1B2C4D3C0(uint64_t a1)
{
  return sub_1B2C4D62C(a1);
}

uint64_t sub_1B2C4D3DC(uint64_t a1)
{
  return sub_1B2C4D6C0(a1);
}

uint64_t sub_1B2C4D3F4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1B2C4D704(a1);
}

uint64_t sub_1B2C4D40C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C4D460(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B2C4D4B4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1B2C4D4CC(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_1B2C4DB50);
}

uint64_t sub_1B2C4D4CC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void, void, void, void))
{
  return a5(a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10]) & 1;
}

uint64_t sub_1B2C4D514()
{
  return _s20IntelligencePlatform34LocationEmbedderInferenceInterfaceO6ErrorsO9InitErrorO9hashValueSivg_0();
}

uint64_t sub_1B2C4D550()
{
  return sub_1B2C4D568();
}

uint64_t sub_1B2C4D568()
{
  sub_1B299F824();
  return v0();
}

uint64_t sub_1B2C4D59C(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1B2C4D5B4(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void, void, void, void, void, void))sub_1B2C4DB74);
}

uint64_t sub_1B2C4D5B4(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void, void, void, void, void, void, void))
{
  sub_1B2E83988();
  a4(v7, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a2[9], a2[10]);
  return sub_1B2E839E8();
}

uint64_t sub_1B2C4D614(uint64_t a1)
{
  return sub_1B2C4D62C(a1);
}

uint64_t sub_1B2C4D62C(uint64_t a1)
{
  uint64_t v1 = sub_1B29A1D6C(a1);
  return v2(v1);
}

uint64_t sub_1B2C4D654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29E9458(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2C4D6A8(uint64_t a1)
{
  return sub_1B2C4D6C0(a1);
}

uint64_t sub_1B2C4D6C0(uint64_t a1)
{
  uint64_t v1 = sub_1B29A1D6C(a1);
  return v2(v1);
}

uint64_t sub_1B2C4D6EC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1B2C4D704(a1);
}

uint64_t sub_1B2C4D704@<X0>(unsigned char *a1@<X8>)
{
  sub_1B299F824();
  uint64_t result = v2();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B2C4D74C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C4D7A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B2C4D7F4@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B2C4C7AC(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a3, a2[9], a2[10]);
}

uint64_t sub_1B2C4D830(void *a1, void *a2)
{
  return sub_1B2C4C228(a1, a2);
}

uint64_t type metadata accessor for InferenceMessageRemoteServerResponse.ErrorCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for InferenceMessageRemoteServerResponse.SuccessCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for InferenceMessageRemoteServerResponse.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B2C4D890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 72);
}

unsigned char *sub_1B2C4D898(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C4D964);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1B2C4D990(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2C4DA2CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2C4DA54()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C4DA70()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C4DA8C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C4DAA8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C4DAC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C4DAE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C4DAFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C4DB18()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C4DB34()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C4DB50()
{
  return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
}

uint64_t sub_1B2C4DB5C()
{
  return sub_1B29A782C();
}

uint64_t sub_1B2C4DB68()
{
  return sub_1B29E803C();
}

uint64_t sub_1B2C4DB74()
{
  return sub_1B29DA5BC();
}

uint64_t sub_1B2C4DB80()
{
  return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
}

uint64_t sub_1B2C4DB8C()
{
  return *(void *)(v0 - 472);
}

uint64_t sub_1B2C4DBB0()
{
  return *(void *)(v0 - 256);
}

void sub_1B2C4DBC8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 328) = (char *)&a2 - a1;
}

void sub_1B2C4DBF4(uint64_t a1@<X8>)
{
  *(void *)(a1 - 256) = v1;
}

uint64_t sub_1B2C4DC00()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B2C4DC98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) == 0 && ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFFFFFFFE7)
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v10 = *(void *)v11;
    *(void *)(v10 + 8) = *(void *)(v11 + 8);
    uint64_t v12 = *(void *)(v11 + 16);
    *(unsigned char *)(v10 + 24) = *(unsigned char *)(v11 + 24);
    *(void *)(v10 + 16) = v12;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  return v4;
}

uint64_t sub_1B2C4DDA8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C4DE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  char v9 = *(unsigned char *)(v8 + 24);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(unsigned char *)(v7 + 24) = v9;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2C4DEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  *(unsigned char *)(v7 + 24) = *(unsigned char *)(v8 + 24);
  *(void *)(v7 + 16) = v9;
  return a1;
}

uint64_t sub_1B2C4DF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  long long v9 = *(_OWORD *)((char *)v8 + 9);
  *unint64_t v7 = *v8;
  *(_OWORD *)((char *)v7 + 9) = v9;
  return a1;
}

uint64_t sub_1B2C4DFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  *(unsigned char *)(v7 + 24) = *(unsigned char *)(v8 + 24);
  *(void *)(v7 + 16) = v9;
  return a1;
}

uint64_t sub_1B2C4E074(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 25;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B2C4E1CCLL);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFFE8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1B2C4E1E0(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 25;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = (~(_BYTE)v8 + a2);
    if (v10 < 4) {
      int v18 = (v16 >> v11) + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 >= 4) {
      unsigned int v19 = v16;
    }
    else {
      unsigned int v19 = v17;
    }
    bzero(a1, v10);
    if (v10 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x1B2C4E3E8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v20 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            *(void *)(v20 + 8) = 0;
            *(void *)(v20 + 16) = 0;
            *(unsigned char *)(v20 + 24) = 0;
            *(void *)unint64_t v20 = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v20 + 8) = (a2 - 1);
          }
        }
        else
        {
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for InferenceMessageRequest()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2C4E428@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  sub_1B299D31C();
  uint64_t v15 = v14;
  (*(void (**)(uint64_t))(v16 + 16))(a7);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 56))(a5, a6);
  uint64_t v19 = v18;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, a4);
  uint64_t result = type metadata accessor for InferenceMessageRequest();
  uint64_t v21 = a7 + *(int *)(result + 28);
  *(void *)uint64_t v21 = v17;
  *(void *)(v21 + 8) = v19;
  *(void *)(v21 + 16) = a2;
  *(unsigned char *)(v21 + 24) = a3 & 1;
  return result;
}

uint64_t sub_1B2C4E510(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7475706E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697469646461 && a2 == 0xEE006F666E496C61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2C4E61C(char a1)
{
  if (a1) {
    return 0x6E6F697469646461;
  }
  else {
    return 0x7475706E69;
  }
}

void sub_1B2C4E65C()
{
  sub_1B299F300();
  uint64_t v19 = v2;
  uint64_t v20 = v1;
  uint64_t v17 = v3;
  uint64_t v18 = v0;
  uint64_t v5 = v4;
  type metadata accessor for InferenceMessageRequest.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_1B2E83718();
  sub_1B299D31C();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v17 - v10;
  sub_1B29AEC7C(v5, v5[3]);
  uint64_t v12 = v18;
  sub_1B2E83A38();
  LOBYTE(v21) = 0;
  uint64_t v13 = v20;
  sub_1B2E836D8();
  if (!v13)
  {
    uint64_t v14 = (long long *)(v12 + *(int *)(v17 + 28));
    long long v15 = *v14;
    uint64_t v16 = *((void *)v14 + 2);
    LOBYTE(v14) = *((unsigned char *)v14 + 24);
    long long v21 = v15;
    uint64_t v22 = v16;
    char v23 = (char)v14;
    sub_1B2C4F63C();
    sub_1B2E836D8();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  sub_1B29998C8();
}

void sub_1B2C4E7F8()
{
  sub_1B299F300();
  uint64_t v34 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v28 = v5;
  sub_1B299D31C();
  uint64_t v29 = v7;
  uint64_t v30 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v33 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for InferenceMessageRequest.CodingKeys();
  swift_getWitnessTable();
  sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v31 = v10;
  uint64_t v32 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = type metadata accessor for InferenceMessageRequest();
  sub_1B299D31C();
  uint64_t v27 = v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v27 - v15;
  sub_1B29AEC7C(v4, v4[3]);
  uint64_t v17 = v34;
  sub_1B2E83A18();
  if (v17)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v4);
  }
  else
  {
    uint64_t v18 = v29;
    LOBYTE(v35) = 0;
    sub_1B2E835B8();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v34 = v16;
    v19(v16, v33, v2);
    sub_1B2C4F5F0();
    sub_1B2E835B8();
    uint64_t v20 = sub_1B29A1D90();
    v21(v20);
    uint64_t v22 = v36;
    char v23 = v37;
    uint64_t v24 = v34;
    uint64_t v25 = &v34[*(int *)(v12 + 28)];
    *(_OWORD *)uint64_t v25 = v35;
    *((void *)v25 + 2) = v22;
    v25[24] = v23;
    uint64_t v26 = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v28, v24, v12);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v12);
  }
  sub_1B29998C8();
}

uint64_t sub_1B2C4EAF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6361667265746E69 && a2 == 0xEB00000000644965;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7645746E65726170 && a2 == 0xED00006449746E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2C4EC24(char a1)
{
  if (a1) {
    return 0x7645746E65726170;
  }
  else {
    return 0x6361667265746E69;
  }
}

void sub_1B2C4EC70()
{
  sub_1B299F300();
  v10[1] = v1;
  uint64_t v3 = v2;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C41080);
  sub_1B299D31C();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2C4F9CC();
  sub_1B2E83A38();
  sub_1B2E83688();
  if (!v0) {
    sub_1B2E83678();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  sub_1B29998C8();
}

void sub_1B2C4EDBC()
{
  sub_1B299F300();
  BOOL v2 = v1;
  sub_1B29A3EB4(&qword_1E9C41070);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v3);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2C4F9CC();
  sub_1B2C4FE1C();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    sub_1B2E83568();
    swift_bridgeObjectRetain();
    sub_1B2E83558();
    uint64_t v4 = sub_1B299F318();
    v5(v4);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

uint64_t sub_1B2C4EF4C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F697469646461 && a2 == 0xEE006F666E496C61)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2C4EFF8()
{
  return 0x6E6F697469646461;
}

void sub_1B2C4F01C()
{
  sub_1B299F300();
  int v16 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C41098);
  sub_1B299D31C();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29AEC7C(v8, v8[3]);
  sub_1B2C4FA18();
  sub_1B2E83A38();
  uint64_t v17 = v6;
  uint64_t v18 = v4;
  uint64_t v19 = v2;
  char v20 = v16 & 1;
  sub_1B2C4F63C();
  sub_1B2E836D8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
  sub_1B29998C8();
}

void *sub_1B2C4F150(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C41088);
  sub_1B299D31C();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29AEC7C(a1, a1[3]);
  sub_1B2C4FA18();
  sub_1B2C4FE1C();
  if (v1)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1B2C4F5F0();
    sub_1B2E835B8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    uint64_t v9 = v11;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  return v9;
}

BOOL sub_1B2C4F298(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B29AE32C(*a1, *a2);
}

uint64_t sub_1B2C4F2A8()
{
  return sub_1B29F1074();
}

uint64_t sub_1B2C4F2B8()
{
  return sub_1B29E7A44();
}

uint64_t sub_1B2C4F2C8()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2C4F310()
{
  return sub_1B2C4E61C(*v0);
}

uint64_t sub_1B2C4F320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C4E510(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C4F34C()
{
  return sub_1B29A782C();
}

uint64_t sub_1B2C4F374@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29E7B68();
  *a1 = result;
  return result;
}

uint64_t sub_1B2C4F3A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C4F3F4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

void sub_1B2C4F448()
{
}

void sub_1B2C4F468()
{
}

uint64_t sub_1B2C4F484()
{
  return sub_1B2C4EC24(*v0);
}

uint64_t sub_1B2C4F48C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C4EAF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C4F4B4(uint64_t a1)
{
  unint64_t v2 = sub_1B2C4F9CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C4F4F0(uint64_t a1)
{
  unint64_t v2 = sub_1B2C4F9CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B2C4F52C(uint64_t a1@<X8>)
{
  sub_1B2C4EDBC();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 24) = v6 & 1;
  }
}

void sub_1B2C4F564()
{
}

uint64_t sub_1B2C4F588(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for InferenceMessageRequest.CodingKeys()
{
  return sub_1B29A1278();
}

unint64_t sub_1B2C4F5F0()
{
  unint64_t result = qword_1E9C40FE0;
  if (!qword_1E9C40FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C40FE0);
  }
  return result;
}

unint64_t sub_1B2C4F63C()
{
  unint64_t result = qword_1E9C40FE8[0];
  if (!qword_1E9C40FE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C40FE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceFullRequestBase()
{
  return &type metadata for InferenceFullRequestBase;
}

uint64_t _s20IntelligencePlatform34InferenceFullRequestAdditionalInfoVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s20IntelligencePlatform34InferenceFullRequestAdditionalInfoVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t _s20IntelligencePlatform34InferenceFullRequestAdditionalInfoVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t _s20IntelligencePlatform34InferenceFullRequestAdditionalInfoVwet_0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2C4F7D8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceFullRequestAdditionalInfo()
{
  return &type metadata for InferenceFullRequestAdditionalInfo;
}

uint64_t sub_1B2C4F82C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C4F84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C4EF4C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2C4F878(uint64_t a1)
{
  unint64_t v2 = sub_1B2C4FA18();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C4F8B4(uint64_t a1)
{
  unint64_t v2 = sub_1B2C4FA18();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2C4F8F0()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1B2C4F938@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B2C4F150(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

void sub_1B2C4F970()
{
}

uint64_t sub_1B2C4F994()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C4F9B0()
{
  return swift_getWitnessTable();
}

unint64_t sub_1B2C4F9CC()
{
  unint64_t result = qword_1E9C41078;
  if (!qword_1E9C41078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41078);
  }
  return result;
}

unint64_t sub_1B2C4FA18()
{
  unint64_t result = qword_1E9C41090;
  if (!qword_1E9C41090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41090);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InferenceFullRequestBase.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2C4FB00);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceFullRequestBase.CodingKeys()
{
  return &type metadata for InferenceFullRequestBase.CodingKeys;
}

unsigned char *_s20IntelligencePlatform34InferenceFullRequestAdditionalInfoV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C4FC04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceFullRequestAdditionalInfo.CodingKeys()
{
  return &type metadata for InferenceFullRequestAdditionalInfo.CodingKeys;
}

unint64_t sub_1B2C4FC40()
{
  unint64_t result = qword_1E9C410A0;
  if (!qword_1E9C410A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C410A0);
  }
  return result;
}

unint64_t sub_1B2C4FC90()
{
  unint64_t result = qword_1E9C410A8;
  if (!qword_1E9C410A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C410A8);
  }
  return result;
}

unint64_t sub_1B2C4FCE0()
{
  unint64_t result = qword_1E9C410B0;
  if (!qword_1E9C410B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C410B0);
  }
  return result;
}

unint64_t sub_1B2C4FD30()
{
  unint64_t result = qword_1E9C410B8;
  if (!qword_1E9C410B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C410B8);
  }
  return result;
}

unint64_t sub_1B2C4FD80()
{
  unint64_t result = qword_1E9C410C0;
  if (!qword_1E9C410C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C410C0);
  }
  return result;
}

unint64_t sub_1B2C4FDD0()
{
  unint64_t result = qword_1E9C410C8[0];
  if (!qword_1E9C410C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C410C8);
  }
  return result;
}

uint64_t sub_1B2C4FE1C()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B2C4FE40()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B2C4FEDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1B2C4FFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B2C50050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B2C500CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B2C50148(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B2C5024CLL);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, v5, v4);
  }
  else {
    return 0;
  }
}

void sub_1B2C50260(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = ((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
  }
  else
  {
    int v9 = a3 - v7;
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
  }
  if (a2 > v7)
  {
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v13 = a2 - v7;
    }
    else {
      int v13 = 1;
    }
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v14 = ~v7 + a2;
      bzero(a1, v8);
      *(_DWORD *)a1 = v14;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1B2C503F8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for InferenceMessageResponse()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2C50438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t result = type metadata accessor for InferenceMessageResponse();
  *(void *)(a4 + *(int *)(result + 28)) = a2;
  return result;
}

uint64_t sub_1B2C504AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74757074756FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449746E657665 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2C50594(char a1)
{
  if (a1) {
    return 0x6449746E657665;
  }
  else {
    return 0x74757074756FLL;
  }
}

uint64_t sub_1B2C505C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v13[2] = a4;
  v13[0] = a2;
  type metadata accessor for InferenceMessageResponse.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1B2E83718();
  sub_1B299D31C();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  unsigned int v10 = (char *)v13 - v9;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2E83A38();
  char v15 = 0;
  uint64_t v11 = v13[3];
  sub_1B2E836D8();
  if (!v11)
  {
    char v14 = 1;
    sub_1B2E836F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

uint64_t sub_1B2C50748@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a3;
  sub_1B299D31C();
  uint64_t v28 = v6;
  uint64_t v29 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v30 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for InferenceMessageResponse.CodingKeys();
  swift_getWitnessTable();
  sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v31 = v10;
  uint64_t v32 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = type metadata accessor for InferenceMessageResponse();
  sub_1B299D31C();
  uint64_t v26 = v12;
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v26 - v14;
  sub_1B29AEC7C(a1, a1[3]);
  int v16 = v33;
  sub_1B2E83A18();
  if (v16) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  uint64_t v17 = v28;
  char v35 = 0;
  uint64_t v18 = v30;
  sub_1B2E835B8();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v33 = v15;
  v19(v15, v18, a2);
  char v34 = 1;
  uint64_t v20 = sub_1B2E835D8();
  uint64_t v21 = sub_1B29A2DAC();
  v22(v21);
  char v23 = v33;
  *(void *)&v33[*(int *)(v11 + 28)] = v20;
  uint64_t v24 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 16))(v27, v23, v11);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v23, v11);
}

uint64_t sub_1B2C50A24()
{
  return sub_1B2C50594(*v0);
}

uint64_t sub_1B2C50A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C504AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C50A60(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C50AB4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B2C50B08@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B2C50748(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1B2C50B28(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2C505C8(a1, a2, a3, *(void *)(a3 - 16));
}

uint64_t type metadata accessor for InferenceMessageResponse.CodingKeys()
{
  return sub_1B29A1278();
}

unsigned char *sub_1B2C50B5C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C50C28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1B2C50C50()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C50C6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C50C88()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C50CA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F7272456E7572 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F72724574696E69 && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2C50DA0(char a1)
{
  if (a1) {
    return 0x6F72724574696E69;
  }
  else {
    return 0x726F7272456E7572;
  }
}

uint64_t sub_1B2C50DDC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4565636976726573 && a2 == 0xEC000000726F7272;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7245726576726573 && a2 == 0xEB00000000726F72;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x456E776F6E6B6E75 && a2 == 0xEC000000726F7272)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B2C50F70(char a1)
{
  if (!a1) {
    return 0x4565636976726573;
  }
  if (a1 == 1) {
    return 0x7245726576726573;
  }
  return 0x456E776F6E6B6E75;
}

uint64_t sub_1B2C50FD4()
{
  return sub_1B29F1074();
}

uint64_t sub_1B2C50FE4()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2C5102C()
{
  return sub_1B2C50DA0(*v0);
}

uint64_t sub_1B2C5103C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C50CA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C5106C()
{
  return sub_1B29A782C();
}

uint64_t sub_1B2C51094(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C510E8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B2C5113C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2C515C8(a1, a2, a3, (void (*)(unsigned char *, void, void))sub_1B29DA6D0);
}

uint64_t sub_1B2C51154(uint64_t a1, uint64_t a2)
{
  return sub_1B2C51614(a1, a2, (uint64_t (*)(void, void))sub_1B29F8394);
}

uint64_t sub_1B2C5116C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C511C0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B2C51214(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C51268(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B2C512BC()
{
  return sub_1B2C50F70(*v0);
}

uint64_t sub_1B2C512C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C50DDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C512F8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C5134C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B2C513A0()
{
  return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
}

uint64_t sub_1B2C513A8()
{
  return _s20IntelligencePlatform34LocationEmbedderInferenceInterfaceO6ErrorsO9InitErrorO9hashValueSivg_0();
}

uint64_t sub_1B2C513C8()
{
  return sub_1B29DA5BC();
}

uint64_t sub_1B2C513D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2C515C8(a1, a2, a3, (void (*)(unsigned char *, void, void))sub_1B29DA5BC);
}

uint64_t sub_1B2C513EC()
{
  return sub_1B29E803C();
}

uint64_t sub_1B2C513F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B29E9458(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2C5142C(uint64_t a1, uint64_t a2)
{
  return sub_1B2C51614(a1, a2, (uint64_t (*)(void, void))sub_1B29A782C);
}

uint64_t sub_1B2C51444@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B2C51478(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C514CC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B2C51520(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C51574(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B2C515C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void, void))
{
  sub_1B2E83988();
  a4(v7, *(void *)(a2 + 16), *(void *)(a2 + 24));
  return sub_1B2E839E8();
}

uint64_t sub_1B2C51614(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  return a3(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_1B2C5163C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C51690(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

void InferenceMessageResponseError.ServiceError<>.encode(to:)()
{
  sub_1B299F300();
  uint64_t v59 = v0;
  uint64_t v60 = v1;
  uint64_t v55 = v3;
  uint64_t v56 = v4;
  BOOL v6 = v5;
  uint64_t v58 = v7;
  uint64_t inited = type metadata accessor for InferenceMessageResponseError.ServiceError.InitErrorCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  uint64_t v51 = inited;
  uint64_t v48 = v9;
  sub_1B2E83718();
  sub_1B299D31C();
  uint64_t v53 = v11;
  uint64_t v54 = v10;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v12);
  sub_1B29A1608();
  uint64_t v49 = v13;
  uint64_t v52 = sub_1B2C568A4();
  sub_1B299D31C();
  uint64_t v50 = v14;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v15);
  sub_1B29A1608();
  uint64_t v47 = v16;
  uint64_t v17 = type metadata accessor for InferenceMessageResponseError.ServiceError.RunErrorCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  uint64_t v43 = v17;
  uint64_t v40 = v18;
  sub_1B2E83718();
  sub_1B299D31C();
  uint64_t v45 = v20;
  uint64_t v46 = v19;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v21);
  uint64_t v41 = (char *)&v38 - v22;
  uint64_t v44 = sub_1B2C568A4();
  sub_1B299D31C();
  uint64_t v42 = v23;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v24);
  sub_1B29A1608();
  uint64_t v39 = v25;
  sub_1B299D31C();
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v28);
  sub_1B2C56824();
  type metadata accessor for InferenceMessageResponseError.ServiceError.CodingKeys();
  swift_getWitnessTable();
  sub_1B2C56844();
  sub_1B2E83718();
  sub_1B299D31C();
  uint64_t v57 = v29;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v30);
  sub_1B29AEC7C(v6, v6[3]);
  sub_1B2C56844();
  sub_1B2E83A38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v2, v59, v58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = v50;
    uint64_t v32 = v47;
    uint64_t v33 = v52;
  }
  else
  {
    uint64_t v31 = v42;
    uint64_t v32 = v39;
    uint64_t v33 = v44;
  }
  sub_1B29F83D8();
  v34();
  sub_1B2E83618();
  sub_1B2E836D8();
  uint64_t v35 = sub_1B29A2DC4();
  v36(v35);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v33);
  sub_1B299B798();
  v37();
  sub_1B29998C8();
}

uint64_t type metadata accessor for InferenceMessageResponseError.ServiceError.InitErrorCodingKeys()
{
  return sub_1B29A1278();
}

uint64_t type metadata accessor for InferenceMessageResponseError.ServiceError.RunErrorCodingKeys()
{
  return sub_1B29A1278();
}

uint64_t type metadata accessor for InferenceMessageResponseError.ServiceError.CodingKeys()
{
  return sub_1B29A1278();
}

void InferenceMessageResponseError.ServiceError<>.init(from:)()
{
  sub_1B299F300();
  uint64_t v69 = v1;
  uint64_t v68 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v78 = v9;
  uint64_t inited = type metadata accessor for InferenceMessageResponseError.ServiceError.InitErrorCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  uint64_t v75 = v11;
  uint64_t v76 = inited;
  uint64_t v67 = sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v71 = v12;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v13);
  sub_1B29A1608();
  uint64_t v77 = v14;
  sub_1B299BBA0();
  uint64_t v15 = type metadata accessor for InferenceMessageResponseError.ServiceError.RunErrorCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  uint64_t v73 = v15;
  uint64_t v72 = v16;
  uint64_t v66 = sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v70 = v17;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v18);
  uint64_t v74 = (char *)&v60 - v19;
  sub_1B299BBA0();
  type metadata accessor for InferenceMessageResponseError.ServiceError.CodingKeys();
  swift_getWitnessTable();
  uint64_t v82 = sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v79 = v20;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v60 - v22;
  uint64_t v83 = v4;
  uint64_t v84 = v6;
  uint64_t v80 = type metadata accessor for InferenceMessageResponseError.ServiceError();
  sub_1B299D31C();
  uint64_t v65 = v24;
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v31 = (char *)&v60 - v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v33 = (char *)&v60 - v32;
  sub_1B29AEC7C(v8, v8[3]);
  uint64_t v81 = v23;
  sub_1B2E83A18();
  uint64_t v34 = (uint64_t)v8;
  if (!v0)
  {
    uint64_t v62 = v31;
    uint64_t v63 = v28;
    uint64_t v61 = v33;
    uint64_t v35 = v83;
    uint64_t v36 = v80;
    uint64_t v64 = 0;
    uint64_t v89 = v34;
    uint64_t v38 = v81;
    uint64_t v37 = v82;
    *(void *)&long long v85 = sub_1B2E835F8();
    sub_1B2E82968();
    swift_getWitnessTable();
    *(void *)&long long v87 = sub_1B2E83078();
    *((void *)&v87 + 1) = v39;
    *(void *)&long long v88 = v40;
    *((void *)&v88 + 1) = v41;
    sub_1B2E83068();
    swift_getWitnessTable();
    sub_1B2E82C28();
    char v42 = v85;
    if (v85 == 2 || (long long v60 = v87, v85 = v87, v86 = v88, (sub_1B2E82CD8() & 1) == 0))
    {
      sub_1B2E83288();
      swift_allocError();
      uint64_t v46 = v45;
      sub_1B29A3EB4(&qword_1E9C39038);
      *uint64_t v46 = v36;
      sub_1B2E834F8();
      sub_1B2E83278();
      uint64_t v47 = sub_1B2AC9CB4();
      v48(v47);
      swift_willThrow();
    }
    else if (v42)
    {
      LOBYTE(v85) = 1;
      sub_1B2C5688C();
      uint64_t v49 = v64;
      sub_1B2E834E8();
      uint64_t v55 = v78;
      if (!v49)
      {
        swift_getAssociatedTypeWitness();
        sub_1B2C56898();
        uint64_t v35 = v67;
        sub_1B2E835B8();
        uint64_t v44 = (void (*)(uint64_t))v79;
        sub_1B299B798();
        v56();
        swift_unknownObjectRelease();
        uint64_t v57 = sub_1B299F83C();
        v58(v57);
        uint64_t v53 = v36;
        swift_storeEnumTagMultiPayload();
        uint64_t v59 = sub_1B29A0B04();
        v44(v59);
        goto LABEL_14;
      }
    }
    else
    {
      LOBYTE(v85) = 0;
      sub_1B2C5688C();
      uint64_t v43 = v64;
      sub_1B2E834E8();
      if (!v43)
      {
        swift_getAssociatedTypeWitness();
        sub_1B2C56898();
        sub_1B2E835B8();
        uint64_t v44 = (void (*)(uint64_t))v79;
        sub_1B299B798();
        v50();
        swift_unknownObjectRelease();
        uint64_t v51 = sub_1B299F83C();
        v52(v51);
        uint64_t v53 = v36;
        swift_storeEnumTagMultiPayload();
        uint64_t v54 = sub_1B29A0B04();
        v44(v54);
        uint64_t v55 = v78;
LABEL_14:
        ((void (*)(uint64_t, uint64_t, uint64_t))v44)(v55, v35, v53);
        goto LABEL_9;
      }
    }
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v38, v37);
LABEL_9:
    uint64_t v34 = v89;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v34);
  sub_1B29998C8();
}

uint64_t type metadata accessor for InferenceMessageResponseError.ServiceError()
{
  return sub_1B29A1278();
}

void sub_1B2C52244()
{
}

void sub_1B2C5226C()
{
}

void InferenceMessageResponseError<>.encode(to:)()
{
  sub_1B299F300();
  uint64_t v75 = v1;
  unint64_t v76 = v3;
  uint64_t v86 = v0;
  uint64_t v72 = v4;
  uint64_t v73 = v5;
  uint64_t v70 = v6;
  uint64_t v71 = v7;
  uint64_t v9 = v8;
  sub_1B2C56844();
  uint64_t v10 = type metadata accessor for InferenceMessageResponseError.UnknownErrorCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  uint64_t v67 = v10;
  uint64_t v65 = v11;
  uint64_t v69 = sub_1B2E83718();
  sub_1B299D31C();
  v52[1] = v12;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v13);
  sub_1B29A1608();
  uint64_t v68 = v14;
  sub_1B2C56844();
  uint64_t v62 = type metadata accessor for InferenceMessageResponseError.ServerErrorCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v66 = sub_1B2E83718();
  sub_1B299D31C();
  uint64_t v64 = v15;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v16);
  uint64_t v63 = (char *)v52 - v17;
  sub_1B2C56844();
  uint64_t v18 = type metadata accessor for InferenceMessageResponseError.ServiceErrorCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  uint64_t v55 = v18;
  uint64_t v54 = v19;
  uint64_t v60 = sub_1B2E83718();
  sub_1B299D31C();
  uint64_t v53 = v20;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v21);
  uint64_t v57 = (char *)v52 - v22;
  sub_1B2C56844();
  uint64_t v59 = type metadata accessor for InferenceMessageResponseError.ServiceError();
  sub_1B299D31C();
  uint64_t v58 = v23;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v24);
  sub_1B29A1608();
  uint64_t v56 = v25;
  sub_1B299D31C();
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v28);
  sub_1B2C56824();
  type metadata accessor for InferenceMessageResponseError.CodingKeys();
  uint64_t v29 = swift_getWitnessTable();
  sub_1B299E890();
  uint64_t v30 = sub_1B2E83718();
  sub_1B299D31C();
  uint64_t v74 = v31;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)v52 - v33;
  sub_1B29AEC7C(v9, v9[3]);
  sub_1B2E83A38();
  (*(void (**)(uint64_t, uint64_t, unint64_t))(v27 + 16))(v2, v86, v76);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v36 = *(void *)v2;
      unint64_t v37 = *(void *)(v2 + 8);
      uint64_t v39 = *(void *)(v2 + 16);
      uint64_t v38 = *(void *)(v2 + 24);
      char v40 = *(unsigned char *)(v2 + 32);
      LOBYTE(v81) = 1;
      sub_1B2C5688C();
      sub_1B2E83618();
      uint64_t v81 = v36;
      unint64_t v82 = v37;
      unint64_t v76 = v37;
      uint64_t v83 = v39;
      uint64_t v84 = v38;
      char v85 = v40;
      sub_1B2C528E4();
      sub_1B2E836D8();
      sub_1B299B798();
      v41();
      sub_1B299B798();
      v42();
      sub_1B2C4A32C(v36, v76, v39, v38, v40);
    }
    else
    {
      LOBYTE(v81) = 2;
      sub_1B2C5688C();
      uint64_t v50 = v49;
      sub_1B2E83618();
      sub_1B2E83688();
      swift_bridgeObjectRelease();
      sub_1B299B798();
      v51();
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v50, v30);
    }
  }
  else
  {
    uint64_t v43 = v53;
    sub_1B2C56898();
    uint64_t v44 = v56;
    uint64_t v45 = v59;
    sub_1B29F83D8();
    v46();
    LOBYTE(v81) = 0;
    uint64_t v47 = v57;
    sub_1B2C5688C();
    sub_1B2E83618();
    uint64_t v77 = v70;
    uint64_t v78 = v71;
    uint64_t v79 = v72;
    uint64_t v80 = v73;
    swift_getWitnessTable();
    uint64_t v48 = v60;
    sub_1B2E836D8();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v47, v48);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v44, v45);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v34, v30);
  }
  sub_1B29998C8();
}

uint64_t type metadata accessor for InferenceMessageResponseError.UnknownErrorCodingKeys()
{
  return sub_1B29A1278();
}

uint64_t type metadata accessor for InferenceMessageResponseError.ServerErrorCodingKeys()
{
  return sub_1B29A1278();
}

uint64_t type metadata accessor for InferenceMessageResponseError.ServiceErrorCodingKeys()
{
  return sub_1B29A1278();
}

uint64_t type metadata accessor for InferenceMessageResponseError.CodingKeys()
{
  return sub_1B29A1278();
}

unint64_t sub_1B2C528E4()
{
  unint64_t result = qword_1E9C41150;
  if (!qword_1E9C41150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41150);
  }
  return result;
}

void InferenceMessageResponseError<>.init(from:)()
{
  sub_1B299F300();
  uint64_t v88 = v1;
  uint64_t v87 = v2;
  uint64_t v86 = v3;
  uint64_t v85 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v96 = v11;
  uint64_t v95 = type metadata accessor for InferenceMessageResponseError.UnknownErrorCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v83 = sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v82 = v12;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v13);
  sub_1B29A50A0((uint64_t)&v74 - v14);
  uint64_t v15 = type metadata accessor for InferenceMessageResponseError.ServerErrorCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  uint64_t v93 = v15;
  uint64_t v92 = v16;
  uint64_t v81 = sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v80 = v17;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v18);
  sub_1B29A1608();
  sub_1B29A50A0(v19);
  uint64_t v20 = type metadata accessor for InferenceMessageResponseError.ServiceErrorCodingKeys();
  swift_getWitnessTable();
  sub_1B29A41B0();
  uint64_t v91 = v20;
  uint64_t v90 = v21;
  uint64_t v79 = sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v78 = v22;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v23);
  sub_1B29A50A0((uint64_t)&v74 - v24);
  type metadata accessor for InferenceMessageResponseError.CodingKeys();
  swift_getWitnessTable();
  sub_1B299E890();
  uint64_t v100 = sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v98 = v25;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v74 - v27;
  uint64_t v84 = v8;
  uint64_t v101 = v6;
  uint64_t v97 = type metadata accessor for InferenceMessageResponseError();
  sub_1B299D31C();
  uint64_t v89 = v29;
  uint64_t v31 = MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v74 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x1F4188790](v31);
  uint64_t v36 = (char *)&v74 - v35;
  uint64_t v37 = MEMORY[0x1F4188790](v34);
  uint64_t v39 = (char *)&v74 - v38;
  MEMORY[0x1F4188790](v37);
  char v40 = v10;
  uint64_t v41 = v10[3];
  uint64_t v102 = v40;
  sub_1B29AEC7C(v40, v41);
  uint64_t v99 = v28;
  sub_1B2E83A18();
  if (!v0)
  {
    uint64_t v75 = (uint64_t *)v33;
    uint64_t v77 = v39;
    unint64_t v76 = v36;
    uint64_t v42 = v100;
    uint64_t v43 = v99;
    *(void *)&long long v107 = sub_1B2E835F8();
    sub_1B299E890();
    sub_1B2E82968();
    swift_getWitnessTable();
    *(void *)&long long v110 = sub_1B2E83078();
    *((void *)&v110 + 1) = v44;
    *(void *)&long long v111 = v45;
    *((void *)&v111 + 1) = v46;
    sub_1B299E890();
    sub_1B2E83068();
    swift_getWitnessTable();
    sub_1B2E82C28();
    int v47 = v107;
    if (v107 != 3)
    {
      long long v74 = v110;
      long long v107 = v110;
      long long v108 = v111;
      if (sub_1B2E82CD8())
      {
        if (v47)
        {
          if (v47 != 1)
          {
            LOBYTE(v107) = 2;
            sub_1B2C56850();
            sub_1B2C56870();
            uint64_t v53 = v96;
            uint64_t v54 = sub_1B2E83568();
            uint64_t v55 = v98;
            uint64_t v67 = v54;
            uint64_t v69 = v68;
            sub_1B299B798();
            v70();
            swift_unknownObjectRelease();
            uint64_t v58 = (void (*)(void))(v55 + 8);
            sub_1B2C56860();
            v71();
            uint64_t v72 = v75;
            *uint64_t v75 = v67;
            v72[1] = v69;
            uint64_t v63 = v97;
            swift_storeEnumTagMultiPayload();
            uint64_t v73 = sub_1B2C56804();
            ((void (*)(uint64_t, uint64_t *, uint64_t))v58)(v73, v72, v63);
LABEL_12:
            ((void (*)(uint64_t, uint64_t, uint64_t))v58)(v53, v42, v63);
            goto LABEL_8;
          }
          LOBYTE(v107) = 1;
          sub_1B2C56850();
          sub_1B2C56870();
          sub_1B2C53250();
          sub_1B2E835B8();
          uint64_t v48 = v98;
          uint64_t v56 = sub_1B29A2DC4();
          v57(v56);
          swift_unknownObjectRelease();
          uint64_t v58 = (void (*)(void))(v48 + 8);
          sub_1B2C56860();
          v59();
          char v60 = v109;
          long long v61 = v108;
          uint64_t v62 = v76;
          *unint64_t v76 = v107;
          v62[1] = v61;
          *((unsigned char *)v62 + 32) = v60;
          uint64_t v63 = v97;
          swift_storeEnumTagMultiPayload();
          sub_1B2C56804();
        }
        else
        {
          LOBYTE(v107) = 0;
          sub_1B2C56850();
          sub_1B2C56870();
          uint64_t v58 = (void (*)(void))type metadata accessor for InferenceMessageResponseError.ServiceError();
          uint64_t v103 = v85;
          uint64_t v104 = v86;
          uint64_t v105 = v87;
          uint64_t v106 = v88;
          swift_getWitnessTable();
          sub_1B2C56898();
          sub_1B2E835B8();
          uint64_t v64 = sub_1B29A2DC4();
          v65(v64);
          swift_unknownObjectRelease();
          sub_1B299B798();
          v66();
          uint64_t v63 = v97;
          swift_storeEnumTagMultiPayload();
          sub_1B2C56804();
        }
        sub_1B29F83D8();
        v58();
        uint64_t v53 = v96;
        goto LABEL_12;
      }
    }
    sub_1B2E83288();
    swift_allocError();
    uint64_t v50 = v49;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v50 = v97;
    sub_1B2E834F8();
    sub_1B2E83278();
    uint64_t v51 = sub_1B2AC9CB4();
    v52(v51);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v43, v42);
  }
LABEL_8:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v102);
  sub_1B29998C8();
}

uint64_t type metadata accessor for InferenceMessageResponseError()
{
  return sub_1B29A1278();
}

unint64_t sub_1B2C53250()
{
  unint64_t result = qword_1E9C41158[0];
  if (!qword_1E9C41158[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C41158);
  }
  return result;
}

void sub_1B2C5329C()
{
}

void sub_1B2C532C4()
{
}

uint64_t sub_1B2C532E8()
{
  uint64_t result = type metadata accessor for InferenceMessageResponseError.ServiceError();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1B2C53388(unint64_t a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(void *)(v8 + 64) <= v6) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  if (v9 + 1 > 0x21) {
    uint64_t v10 = v9 + 1;
  }
  else {
    uint64_t v10 = 33;
  }
  int v11 = *(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80);
  if ((v11 & 0x1000F8) != 0 || (unint64_t)(v10 + 1) > 0x18)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + (((v11 & 0xF8 | 7u) + 16) & ~(unint64_t)(v11 & 0xF8 | 7u));
    swift_retain();
  }
  else
  {
    unsigned int v14 = a2[v10];
    if (v14 >= 3) {
      unsigned int v14 = *(_DWORD *)a2 + 3;
    }
    if (v14 == 2)
    {
      uint64_t v20 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v20;
      *(unsigned char *)(a1 + v10) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v14 == 1)
    {
      uint64_t v15 = *(void *)a2;
      unint64_t v16 = *((void *)a2 + 1);
      uint64_t v17 = *((void *)a2 + 2);
      uint64_t v18 = *((void *)a2 + 3);
      char v19 = a2[32];
      sub_1B2C49E68(v15, v16, v17, v18, v19);
      *(void *)a1 = v15;
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = v18;
      *(unsigned char *)(a1 + 32) = v19;
      *(unsigned char *)(a1 + v10) = 1;
    }
    else
    {
      unsigned int v21 = a2[v9];
      unsigned int v22 = v21 - 2;
      if (v21 >= 2)
      {
        if (v9 <= 3) {
          uint64_t v23 = v9;
        }
        else {
          uint64_t v23 = 4;
        }
        switch(v23)
        {
          case 1:
            int v24 = *a2;
            goto LABEL_28;
          case 2:
            int v24 = *(unsigned __int16 *)a2;
            goto LABEL_28;
          case 3:
            int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_28;
          case 4:
            int v24 = *(_DWORD *)a2;
LABEL_28:
            int v25 = (v24 | (v22 << (8 * v9))) + 2;
            unsigned int v21 = v24 + 2;
            if (v9 < 4) {
              unsigned int v21 = v25;
            }
            break;
          default:
            break;
        }
      }
      BOOL v26 = v21 == 1;
      if (v21 == 1)
      {
        uint64_t v27 = v7;
      }
      else
      {
        uint64_t v8 = v5;
        uint64_t v27 = AssociatedTypeWitness;
      }
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v27);
      *(unsigned char *)(a1 + v9) = v26;
      *(unsigned char *)(a1 + v10) = 0;
    }
  }
  return a1;
}

uint64_t sub_1B2C5362C(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = *(void *)(v25 + 64);
  uint64_t v4 = swift_getAssociatedTypeWitness();
  unint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= v3) {
    unint64_t v5 = v3;
  }
  uint64_t v6 = 33;
  if (v5 + 1 > 0x21) {
    uint64_t v6 = v5 + 1;
  }
  unsigned int v7 = a1[v6];
  unsigned int v8 = v7 - 3;
  if (v7 >= 3)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_14;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_14:
        int v11 = (v10 | (v8 << (8 * v6))) + 3;
        unsigned int v7 = v10 + 3;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 2)
  {
    return swift_bridgeObjectRelease();
  }
  else if (v7 == 1)
  {
    uint64_t v12 = *(void *)a1;
    unint64_t v13 = *((void *)a1 + 1);
    uint64_t v14 = *((void *)a1 + 2);
    uint64_t v15 = *((void *)a1 + 3);
    char v16 = a1[32];
    return sub_1B2C4A32C(v12, v13, v14, v15, v16);
  }
  else
  {
    unsigned int v18 = a1[v5];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v20 = v5;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a1;
          goto LABEL_33;
        case 2:
          int v21 = *(unsigned __int16 *)a1;
          goto LABEL_33;
        case 3:
          int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_33;
        case 4:
          int v21 = *(_DWORD *)a1;
LABEL_33:
          int v22 = (v21 | (v19 << (8 * v5))) + 2;
          unsigned int v18 = v21 + 2;
          if (v5 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    if (v18 == 1)
    {
      uint64_t v23 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8);
      return v23(a1, v4);
    }
    else
    {
      int v24 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v25 + 8);
      return v24(a1, AssociatedTypeWitness);
    }
  }
}

uint64_t sub_1B2C53940(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(void *)(v8 + 64) <= v6) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  if (v9 + 1 > 0x21) {
    uint64_t v10 = v9 + 1;
  }
  else {
    uint64_t v10 = 33;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 3;
  if (v11 >= 3)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_16;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_16:
        int v15 = (v14 | (v12 << (8 * v10))) + 3;
        unsigned int v11 = v14 + 3;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 2)
  {
    uint64_t v21 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v21;
    *(unsigned char *)(a1 + v10) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v11 == 1)
  {
    uint64_t v16 = *(void *)a2;
    unint64_t v17 = *((void *)a2 + 1);
    uint64_t v18 = *((void *)a2 + 2);
    uint64_t v19 = *((void *)a2 + 3);
    char v20 = a2[32];
    sub_1B2C49E68(v16, v17, v18, v19, v20);
    *(void *)a1 = v16;
    *(void *)(a1 + 8) = v17;
    *(void *)(a1 + 16) = v18;
    *(void *)(a1 + 24) = v19;
    *(unsigned char *)(a1 + 32) = v20;
    *(unsigned char *)(a1 + v10) = 1;
  }
  else
  {
    unsigned int v22 = a2[v9];
    unsigned int v23 = v22 - 2;
    if (v22 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v24 = v9;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          goto LABEL_31;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v25 = *(_DWORD *)a2;
LABEL_31:
          int v26 = (v25 | (v23 << (8 * v9))) + 2;
          unsigned int v22 = v25 + 2;
          if (v9 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    BOOL v27 = v22 == 1;
    if (v22 == 1)
    {
      uint64_t v28 = v7;
    }
    else
    {
      uint64_t v8 = v5;
      uint64_t v28 = AssociatedTypeWitness;
    }
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v28);
    *(unsigned char *)(a1 + v9) = v27;
    *(unsigned char *)(a1 + v10) = 0;
  }
  return a1;
}

unsigned __int8 *sub_1B2C53C14(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v6 = *(void *)(v5 + 64);
    uint64_t v7 = swift_getAssociatedTypeWitness();
    uint64_t v8 = *(void *)(v7 - 8);
    if (*(void *)(v8 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v7 - 8) + 64);
    }
    if (v6 + 1 > 0x21) {
      uint64_t v9 = v6 + 1;
    }
    else {
      uint64_t v9 = 33;
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 3;
    if (v10 >= 3)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_16;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_16:
          int v14 = (v13 | (v11 << (8 * v9))) + 3;
          unsigned int v10 = v13 + 3;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 2)
    {
      swift_bridgeObjectRelease();
    }
    else if (v10 == 1)
    {
      sub_1B2C4A32C(*(void *)a1, *((void *)a1 + 1), *((void *)a1 + 2), *((void *)a1 + 3), a1[32]);
    }
    else
    {
      unsigned int v15 = a1[v6];
      unsigned int v16 = v15 - 2;
      if (v15 >= 2)
      {
        if (v6 <= 3) {
          uint64_t v17 = v6;
        }
        else {
          uint64_t v17 = 4;
        }
        switch(v17)
        {
          case 1:
            int v18 = *a1;
            goto LABEL_31;
          case 2:
            int v18 = *(unsigned __int16 *)a1;
            goto LABEL_31;
          case 3:
            int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_31;
          case 4:
            int v18 = *(_DWORD *)a1;
LABEL_31:
            if (v6 < 4) {
              unsigned int v15 = (v18 | (v16 << (8 * v6))) + 2;
            }
            else {
              unsigned int v15 = v18 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v15 == 1) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(a1, v7);
      }
      else {
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      }
    }
    unsigned int v19 = a2[v9];
    unsigned int v20 = v19 - 3;
    if (v19 >= 3)
    {
      if (v9 <= 3) {
        uint64_t v21 = v9;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *a2;
          goto LABEL_46;
        case 2:
          int v22 = *(unsigned __int16 *)a2;
          goto LABEL_46;
        case 3:
          int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_46;
        case 4:
          int v22 = *(_DWORD *)a2;
LABEL_46:
          int v23 = (v22 | (v20 << (8 * v9))) + 3;
          unsigned int v19 = v22 + 3;
          if (v9 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    if (v19 == 2)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      a1[v9] = 2;
      swift_bridgeObjectRetain();
    }
    else if (v19 == 1)
    {
      uint64_t v24 = *(void *)a2;
      unint64_t v25 = *((void *)a2 + 1);
      uint64_t v26 = *((void *)a2 + 2);
      uint64_t v27 = *((void *)a2 + 3);
      char v28 = a2[32];
      sub_1B2C49E68(v24, v25, v26, v27, v28);
      *(void *)a1 = v24;
      *((void *)a1 + 1) = v25;
      *((void *)a1 + 2) = v26;
      *((void *)a1 + 3) = v27;
      a1[32] = v28;
      a1[v9] = 1;
    }
    else
    {
      unsigned int v29 = a2[v6];
      unsigned int v30 = v29 - 2;
      if (v29 >= 2)
      {
        if (v6 <= 3) {
          uint64_t v31 = v6;
        }
        else {
          uint64_t v31 = 4;
        }
        switch(v31)
        {
          case 1:
            int v32 = *a2;
            goto LABEL_61;
          case 2:
            int v32 = *(unsigned __int16 *)a2;
            goto LABEL_61;
          case 3:
            int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_61;
          case 4:
            int v32 = *(_DWORD *)a2;
LABEL_61:
            int v33 = (v32 | (v30 << (8 * v6))) + 2;
            unsigned int v29 = v32 + 2;
            if (v6 < 4) {
              unsigned int v29 = v33;
            }
            break;
          default:
            break;
        }
      }
      BOOL v34 = v29 == 1;
      if (v29 == 1) {
        uint64_t v35 = v8;
      }
      else {
        uint64_t v35 = v5;
      }
      if (v29 == 1) {
        uint64_t v36 = v7;
      }
      else {
        uint64_t v36 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v35 + 16))(a1, a2, v36);
      a1[v6] = v34;
      a1[v9] = 0;
    }
  }
  return a1;
}

uint64_t sub_1B2C54088(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(void *)(v8 + 64) <= v6) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  if (v9 + 1 > 0x21) {
    uint64_t v10 = v9 + 1;
  }
  else {
    uint64_t v10 = 33;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 3;
  if (v11 >= 3)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_16;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_16:
        int v15 = (v14 | (v12 << (8 * v10))) + 3;
        unsigned int v11 = v14 + 3;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    char v17 = 2;
  }
  else if (v11 == 1)
  {
    long long v16 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    *(unsigned char *)(a1 + 32) = a2[32];
    char v17 = 1;
  }
  else
  {
    unsigned int v18 = a2[v9];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v20 = v9;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_31;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_31:
          int v22 = (v21 | (v19 << (8 * v9))) + 2;
          unsigned int v18 = v21 + 2;
          if (v9 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    BOOL v23 = v18 == 1;
    if (v18 == 1)
    {
      uint64_t v24 = v7;
    }
    else
    {
      uint64_t v8 = v5;
      uint64_t v24 = AssociatedTypeWitness;
    }
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v8 + 32))(a1, a2, v24);
    char v17 = 0;
    *(unsigned char *)(a1 + v9) = v23;
  }
  *(unsigned char *)(a1 + v10) = v17;
  return a1;
}

unsigned __int8 *sub_1B2C54334(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v6 = *(void *)(v5 + 64);
    uint64_t v7 = swift_getAssociatedTypeWitness();
    uint64_t v8 = *(void *)(v7 - 8);
    if (*(void *)(v8 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v7 - 8) + 64);
    }
    if (v6 + 1 > 0x21) {
      uint64_t v9 = v6 + 1;
    }
    else {
      uint64_t v9 = 33;
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 3;
    if (v10 >= 3)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_16;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_16:
          int v14 = (v13 | (v11 << (8 * v9))) + 3;
          unsigned int v10 = v13 + 3;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 2)
    {
      swift_bridgeObjectRelease();
    }
    else if (v10 == 1)
    {
      sub_1B2C4A32C(*(void *)a1, *((void *)a1 + 1), *((void *)a1 + 2), *((void *)a1 + 3), a1[32]);
    }
    else
    {
      unsigned int v15 = a1[v6];
      unsigned int v16 = v15 - 2;
      if (v15 >= 2)
      {
        if (v6 <= 3) {
          uint64_t v17 = v6;
        }
        else {
          uint64_t v17 = 4;
        }
        switch(v17)
        {
          case 1:
            int v18 = *a1;
            goto LABEL_31;
          case 2:
            int v18 = *(unsigned __int16 *)a1;
            goto LABEL_31;
          case 3:
            int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_31;
          case 4:
            int v18 = *(_DWORD *)a1;
LABEL_31:
            if (v6 < 4) {
              unsigned int v15 = (v18 | (v16 << (8 * v6))) + 2;
            }
            else {
              unsigned int v15 = v18 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v15 == 1) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(a1, v7);
      }
      else {
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      }
    }
    unsigned int v19 = a2[v9];
    unsigned int v20 = v19 - 3;
    if (v19 >= 3)
    {
      if (v9 <= 3) {
        uint64_t v21 = v9;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *a2;
          goto LABEL_46;
        case 2:
          int v22 = *(unsigned __int16 *)a2;
          goto LABEL_46;
        case 3:
          int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_46;
        case 4:
          int v22 = *(_DWORD *)a2;
LABEL_46:
          int v23 = (v22 | (v20 << (8 * v9))) + 3;
          unsigned int v19 = v22 + 3;
          if (v9 < 4) {
            unsigned int v19 = v23;
          }
          break;
        default:
          break;
      }
    }
    if (v19 == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v25 = 2;
    }
    else if (v19 == 1)
    {
      long long v24 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v24;
      a1[32] = a2[32];
      char v25 = 1;
    }
    else
    {
      unsigned int v26 = a2[v6];
      unsigned int v27 = v26 - 2;
      if (v26 >= 2)
      {
        if (v6 <= 3) {
          uint64_t v28 = v6;
        }
        else {
          uint64_t v28 = 4;
        }
        switch(v28)
        {
          case 1:
            int v29 = *a2;
            goto LABEL_61;
          case 2:
            int v29 = *(unsigned __int16 *)a2;
            goto LABEL_61;
          case 3:
            int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_61;
          case 4:
            int v29 = *(_DWORD *)a2;
LABEL_61:
            int v30 = (v29 | (v27 << (8 * v6))) + 2;
            unsigned int v26 = v29 + 2;
            if (v6 < 4) {
              unsigned int v26 = v30;
            }
            break;
          default:
            break;
        }
      }
      BOOL v31 = v26 == 1;
      if (v26 == 1) {
        uint64_t v32 = v8;
      }
      else {
        uint64_t v32 = v5;
      }
      if (v26 == 1) {
        uint64_t v33 = v7;
      }
      else {
        uint64_t v33 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v32 + 32))(a1, a2, v33);
      char v25 = 0;
      a1[v6] = v31;
    }
    a1[v9] = v25;
  }
  return a1;
}

uint64_t sub_1B2C54778(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v5 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v5 <= v4) {
    unint64_t v5 = v4;
  }
  uint64_t v6 = 33;
  if (v5 + 1 > 0x21) {
    uint64_t v6 = v5 + 1;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_24;
  }
  uint64_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    unsigned int v11 = ((a2 + ~(-1 << v8) - 253) >> v8) + 1;
    if (HIWORD(v11))
    {
      int v9 = *(_DWORD *)((char *)a1 + v7);
      if (!v9) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v11 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v11 < 2)
    {
LABEL_24:
      unsigned int v13 = *((unsigned __int8 *)a1 + v6);
      if (v13 >= 3) {
        return (v13 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_24;
  }
LABEL_16:
  int v12 = (v9 - 1) << v8;
  if (v7 > 3) {
    int v12 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v7 | v12) + 254;
}

void sub_1B2C5493C(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 <= v6) {
    unint64_t v7 = v6;
  }
  if (v7 + 1 > 0x21) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 33;
  }
  size_t v9 = v8 + 1;
  char v10 = 8 * (v8 + 1);
  if (a3 < 0xFE)
  {
    int v11 = 0;
  }
  else if (v9 <= 3)
  {
    unsigned int v14 = ((a3 + ~(-1 << v10) - 253) >> v10) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v12 = a2 - 254;
    if (v9 < 4)
    {
      int v13 = (v12 >> v10) + 1;
      if (v8 != -1)
      {
        int v15 = v12 & ~(-1 << v10);
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8 + 1);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v9] = v13;
        break;
      case 2:
        *(_WORD *)&a1[v9] = v13;
        break;
      case 3:
LABEL_37:
        __break(1u);
        JUMPOUT(0x1B2C54B70);
      case 4:
        *(_DWORD *)&a1[v9] = v13;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v11)
    {
      case 1:
        a1[v9] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      case 2:
        *(_WORD *)&a1[v9] = 0;
        goto LABEL_25;
      case 3:
        goto LABEL_37;
      case 4:
        *(_DWORD *)&a1[v9] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      default:
LABEL_25:
        if (a2) {
LABEL_26:
        }
          a1[v8] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1B2C54B98(unsigned __int8 *a1)
{
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v3 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v3 <= v2) {
    unint64_t v3 = v2;
  }
  if (v3 + 1 > 0x21) {
    uint64_t v4 = v3 + 1;
  }
  else {
    uint64_t v4 = 33;
  }
  uint64_t result = a1[v4];
  if (result >= 3)
  {
    if (v4 <= 3) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_15;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_15:
        unsigned int v8 = (v7 | ((result - 3) << (8 * v4))) + 3;
        unsigned int v9 = v7 + 3;
        if (v4 >= 4) {
          uint64_t result = v9;
        }
        else {
          uint64_t result = v8;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1B2C54CD8(unsigned char *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  if (a2 > 2)
  {
    unint64_t v8 = *(void *)(v4 + 64);
    unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
    if (v9 <= v8) {
      unint64_t v9 = v8;
    }
    if (v9 + 1 > 0x21) {
      size_t v10 = v9 + 1;
    }
    else {
      size_t v10 = 33;
    }
    unsigned int v11 = a2 - 3;
    if (v10 < 4)
    {
      unsigned int v12 = v11 >> (8 * v10);
      int v13 = v11 & ~(-1 << (8 * v10));
      a1[v10] = v12 + 3;
      bzero(a1, v10);
      if (v10 == 3)
      {
        *(_WORD *)a1 = v13;
        a1[2] = BYTE2(v13);
      }
      else if (v10 == 2)
      {
        *(_WORD *)a1 = v13;
      }
      else
      {
        *a1 = v13;
      }
    }
    else
    {
      a1[v10] = 3;
      bzero(a1, v10);
      *(_DWORD *)a1 = v11;
    }
  }
  else
  {
    unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
    if (v6 <= *(void *)(v5 + 64)) {
      unint64_t v6 = *(void *)(v5 + 64);
    }
    if (v6 + 1 > 0x21) {
      uint64_t v7 = v6 + 1;
    }
    else {
      uint64_t v7 = 33;
    }
    a1[v7] = a2;
  }
}

uint64_t sub_1B2C54E84()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_1B2C54F84(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(void *)(v8 + 64) <= v6) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  uint64_t v10 = (*(unsigned char *)(v8 + 80) | *(unsigned char *)(v5 + 80));
  if (v10 <= 7 && v9 + 1 <= 0x18 && ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80)) & 0x100000) == 0)
  {
    unsigned int v14 = a2[v9];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v16 = v9;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          goto LABEL_21;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v17 = *(_DWORD *)a2;
LABEL_21:
          int v18 = (v17 | (v15 << (8 * v9))) + 2;
          unsigned int v14 = v17 + 2;
          if (v9 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v7);
      *((unsigned char *)a1 + v9) = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v9) = 0;
    }
  }
  else
  {
    uint64_t v13 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1B2C551BC(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  unint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
  if (v6 <= v4) {
    unint64_t v6 = v4;
  }
  unsigned int v7 = a1[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_12;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_12:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 1) {
    uint64_t v12 = *(void *)(v5 - 8);
  }
  else {
    uint64_t v12 = v3;
  }
  if (v7 == 1) {
    uint64_t v13 = v5;
  }
  else {
    uint64_t v13 = AssociatedTypeWitness;
  }
  unsigned int v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v12 + 8);

  return v14(a1, v13);
}

uint64_t sub_1B2C55384(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(void *)(v8 + 64) <= v6) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_13;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_13:
        int v14 = (v13 | (v11 << (8 * v9))) + 2;
        unsigned int v10 = v13 + 2;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  BOOL v15 = v10 == 1;
  if (v10 == 1)
  {
    uint64_t v16 = v7;
  }
  else
  {
    uint64_t v8 = v5;
    uint64_t v16 = AssociatedTypeWitness;
  }
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v16);
  *(unsigned char *)(a1 + v9) = v15;
  return a1;
}

unsigned __int8 *sub_1B2C55554(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v6 = *(void *)(v5 + 64);
    uint64_t v7 = swift_getAssociatedTypeWitness();
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if (*(void *)(v9 + 64) <= v6) {
      unint64_t v10 = v6;
    }
    else {
      unint64_t v10 = *(void *)(*(void *)(v7 - 8) + 64);
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_14;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_14:
          int v15 = (v14 | (v12 << (8 * v10))) + 2;
          unsigned int v11 = v14 + 2;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1) {
      uint64_t v16 = *(void *)(v7 - 8);
    }
    else {
      uint64_t v16 = v5;
    }
    if (v11 == 1) {
      uint64_t v17 = v7;
    }
    else {
      uint64_t v17 = AssociatedTypeWitness;
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v16 + 8))(a1, v17);
    unsigned int v18 = a2[v10];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v20 = v10;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_31;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_31:
          int v22 = (v21 | (v19 << (8 * v10))) + 2;
          unsigned int v18 = v21 + 2;
          if (v10 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    BOOL v23 = v18 == 1;
    if (v18 == 1) {
      uint64_t v24 = v9;
    }
    else {
      uint64_t v24 = v5;
    }
    if (v18 == 1) {
      uint64_t v25 = v8;
    }
    else {
      uint64_t v25 = AssociatedTypeWitness;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 16))(a1, a2, v25);
    a1[v10] = v23;
  }
  return a1;
}

uint64_t sub_1B2C557DC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(void *)(v8 + 64) <= v6) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  unsigned int v10 = a2[v9];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_13;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_13:
        int v14 = (v13 | (v11 << (8 * v9))) + 2;
        unsigned int v10 = v13 + 2;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  BOOL v15 = v10 == 1;
  if (v10 == 1)
  {
    uint64_t v16 = v7;
  }
  else
  {
    uint64_t v8 = v5;
    uint64_t v16 = AssociatedTypeWitness;
  }
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v8 + 32))(a1, a2, v16);
  *(unsigned char *)(a1 + v9) = v15;
  return a1;
}

unsigned __int8 *sub_1B2C559AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v6 = *(void *)(v5 + 64);
    uint64_t v7 = swift_getAssociatedTypeWitness();
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if (*(void *)(v9 + 64) <= v6) {
      unint64_t v10 = v6;
    }
    else {
      unint64_t v10 = *(void *)(*(void *)(v7 - 8) + 64);
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_14;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_14:
          int v15 = (v14 | (v12 << (8 * v10))) + 2;
          unsigned int v11 = v14 + 2;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1) {
      uint64_t v16 = *(void *)(v7 - 8);
    }
    else {
      uint64_t v16 = v5;
    }
    if (v11 == 1) {
      uint64_t v17 = v7;
    }
    else {
      uint64_t v17 = AssociatedTypeWitness;
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v16 + 8))(a1, v17);
    unsigned int v18 = a2[v10];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v20 = v10;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_31;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_31:
          int v22 = (v21 | (v19 << (8 * v10))) + 2;
          unsigned int v18 = v21 + 2;
          if (v10 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    BOOL v23 = v18 == 1;
    if (v18 == 1) {
      uint64_t v24 = v9;
    }
    else {
      uint64_t v24 = v5;
    }
    if (v18 == 1) {
      uint64_t v25 = v8;
    }
    else {
      uint64_t v25 = AssociatedTypeWitness;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 32))(a1, a2, v25);
    a1[v10] = v23;
  }
  return a1;
}

uint64_t sub_1B2C55C34(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v5 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v5 <= v4) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = v5;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_23;
  }
  unint64_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    unsigned int v11 = ((a2 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v11))
    {
      int v9 = *(_DWORD *)((char *)a1 + v7);
      if (!v9) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v11 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v11 < 2)
    {
LABEL_23:
      unsigned int v13 = *((unsigned __int8 *)a1 + v6);
      if (v13 >= 2) {
        return (v13 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_23;
  }
LABEL_15:
  int v12 = (v9 - 1) << v8;
  if (v7 > 3) {
    int v12 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v7 | v12) + 255;
}

void sub_1B2C55DE8(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 <= v6) {
    unint64_t v7 = v6;
  }
  size_t v8 = v7 + 1;
  char v9 = 8 * (v7 + 1);
  if (a3 < 0xFF)
  {
    int v10 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v13 = ((a3 + ~(-1 << v9) - 254) >> v9) + 1;
    if (HIWORD(v13))
    {
      int v10 = 4;
    }
    else if (v13 >= 0x100)
    {
      int v10 = 2;
    }
    else
    {
      int v10 = v13 > 1;
    }
  }
  else
  {
    int v10 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v11 = a2 - 255;
    if (v8 < 4)
    {
      int v12 = (v11 >> v9) + 1;
      if (v7 != -1)
      {
        int v14 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v14;
          a1[2] = BYTE2(v14);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v14;
        }
        else
        {
          *a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 1);
      *(_DWORD *)a1 = v11;
      int v12 = 1;
    }
    switch(v10)
    {
      case 1:
        a1[v8] = v12;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v12;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1B2C5600CLL);
      case 4:
        *(_DWORD *)&a1[v8] = v12;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v10)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v7] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1B2C56034(unsigned __int8 *a1)
{
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v3 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v3 <= v2) {
    unint64_t v3 = v2;
  }
  uint64_t result = a1[v3];
  if (result >= 2)
  {
    if (v3 <= 3) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | ((result - 2) << (8 * v3))) + 2;
        unsigned int v8 = v6 + 2;
        if (v3 >= 4) {
          uint64_t result = v8;
        }
        else {
          uint64_t result = v7;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1B2C56164(unsigned char *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  if (a2 > 1)
  {
    size_t v7 = *(void *)(v4 + 64);
    size_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
    if (v8 <= v7) {
      size_t v9 = v7;
    }
    else {
      size_t v9 = v8;
    }
    unsigned int v10 = a2 - 2;
    if (v9 < 4)
    {
      unsigned int v11 = v10 >> (8 * v9);
      int v12 = v10 & ~(-1 << (8 * v9));
      a1[v9] = v11 + 2;
      bzero(a1, v9);
      if (v9 == 3)
      {
        *(_WORD *)a1 = v12;
        a1[2] = BYTE2(v12);
      }
      else if (v9 == 2)
      {
        *(_WORD *)a1 = v12;
      }
      else
      {
        *a1 = v12;
      }
    }
    else
    {
      a1[v9] = 2;
      bzero(a1, v9);
      *(_DWORD *)a1 = v10;
    }
  }
  else
  {
    unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
    if (v6 <= *(void *)(v5 + 64)) {
      unint64_t v6 = *(void *)(v5 + 64);
    }
    a1[v6] = a2;
  }
}

unsigned char *sub_1B2C562F0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C563BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_1B2C563E8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C564B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1B2C564DC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2C56578);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2C565A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C565BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C565D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C565F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C56610()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C5662C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C56648()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C56664()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C56680()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C5669C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C566B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C566D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C566F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C5670C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C56728()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C56744()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C56760()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C5677C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C56798()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C567B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C567D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C56804()
{
  return *(void *)(v0 - 72);
}

uint64_t sub_1B2C56824()
{
  return 255;
}

uint64_t sub_1B2C56850()
{
  return *(void *)(v0 - 256);
}

uint64_t sub_1B2C56870()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B2C568A4()
{
  return swift_getAssociatedTypeWitness();
}

id InferenceMLModel.modelDescription.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_modelDescription);

  return v1;
}

uint64_t InferenceMLModel.prediction<A>(from:context:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1B2C56920()
{
  sub_1B299B3BC();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E9E0]), sel_init);
  v0[4] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1B2C569E0;
  uint64_t v3 = v0[2];
  return MEMORY[0x1F40DB7B0](v3, v1);
}

uint64_t sub_1B2C569E0()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *unsigned int v6 = v5;
  uint64_t v7 = *v1;
  sub_1B299B0E0();
  *size_t v8 = v7;
  *(void *)(v5 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1B299F2A4();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
  else
  {

    int v12 = *(uint64_t (**)(uint64_t))(v7 + 8);
    return v12(v3);
  }
}

uint64_t sub_1B2C56B00()
{
  sub_1B299B3BC();

  sub_1B299AD7C();
  return v1();
}

uint64_t InferenceMLModel.__allocating_init<A>(domainId:assetId:configuration:context:)()
{
  sub_1B299B3BC();
  v1[20] = v2;
  v1[21] = v0;
  v1[18] = v3;
  v1[19] = v4;
  v1[16] = v5;
  v1[17] = v6;
  v1[14] = v7;
  v1[15] = v8;
  v1[13] = v9;
  v1[22] = *(void *)(v4 - 8);
  v1[23] = swift_task_alloc();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

uint64_t sub_1B2C56C18()
{
  uint64_t v28 = v0;
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[20];
  uint64_t v24 = v0[19];
  uint64_t v25 = v0[23];
  uint64_t v23 = v0[18];
  id v33 = (id)v0[17];
  uint64_t v3 = *(void *)((*(uint64_t (**)(void))(v2 + 8))() + 16);
  swift_unownedRetainStrong();
  swift_release();
  sub_1B29C3B84(v3 + 32, (uint64_t)(v0 + 2));
  swift_release();
  uint64_t v4 = type metadata accessor for AssetRegistry();
  uint64_t v6 = v0[5];
  uint64_t v5 = v0[6];
  sub_1B29AEC7C(v0 + 2, v6);
  v0[10] = v6;
  uint64_t v7 = *(void *)(v5 + 8);
  v0[11] = v7;
  uint64_t v8 = sub_1B29D1C70(v0 + 7);
  sub_1B299B3B0();
  uint64_t v10 = *(void (**)(void))(v9 + 16);
  v10();
  v26[0] = (uint64_t)sub_1B29D5F00;
  v26[1] = 0;
  char v27 = 0;
  uint64_t v11 = swift_task_alloc();
  ((void (*)(uint64_t, uint64_t *, uint64_t))v10)(v11, v8, v6);
  uint64_t v12 = sub_1B29E50B4(v11, v26, v4, v6, v7);
  v0[24] = v12;
  swift_task_dealloc();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)(v0 + 7));
  v0[12] = v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v25, v23, v24);
  swift_retain();
  id v13 = v33;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[25] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1B2C56E60;
  uint64_t v15 = v0[23];
  uint64_t v16 = v0[19];
  uint64_t v17 = v0[16];
  uint64_t v18 = v0[17];
  uint64_t v19 = v0[14];
  uint64_t v20 = v0[15];
  uint64_t v21 = v0[13];
  uint64_t v32 = v0[20];
  uint64_t v30 = v16;
  BOOL v31 = &protocol witness table for AssetRegistry;
  return sub_1B2C570D4((uint64_t)(v0 + 12), v21, v19, v20, v17, v18, v15, v4);
}

uint64_t sub_1B2C56E60()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1B299B0E0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    *(void *)(v5 + 216) = v3;
    swift_retain();
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B2C56F64()
{
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = (void *)v0[17];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  sub_1B29E58FC();
  uint64_t v6 = v0[27];
  return v5(v6);
}

uint64_t sub_1B2C57028()
{
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = (void *)v0[17];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  sub_1B299AD7C();
  return v5();
}

uint64_t sub_1B2C570D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[9] = v23;
  v9[10] = v8;
  v9[7] = a8;
  v9[8] = v21;
  v9[5] = a6;
  v9[6] = a7;
  void v9[3] = a3;
  v9[4] = a5;
  _OWORD v9[2] = a1;
  v9[11] = *(void *)(v21 - 8);
  v9[12] = swift_task_alloc();
  uint64_t v15 = sub_1B2E80498();
  v9[13] = v15;
  v9[14] = *(void *)(v15 - 8);
  v9[15] = swift_task_alloc();
  sub_1B29A3EB4(&qword_1E9C37290);
  uint64_t v16 = swift_task_alloc();
  v9[16] = v16;
  v9[17] = type metadata accessor for AssetRegistryAsset(0);
  v9[18] = swift_task_alloc();
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 16)
                                                                                     + **(int **)(v22 + 16));
  uint64_t v17 = (void *)swift_task_alloc();
  v9[19] = v17;
  *uint64_t v17 = v9;
  v17[1] = sub_1B2C5733C;
  return v19(v16, a4, a5, a2, a3, a8);
}

uint64_t sub_1B2C5733C()
{
  sub_1B299F394();
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1B299B0E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 160) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1B2C57458()
{
  uint64_t v1 = v0[16];
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v0[17]) == 1)
  {
    sub_1B2C58300();
    uint64_t v2 = sub_1B2C582B4();
    v3(v2);
    sub_1B299B3B0();
    sub_1B299B798();
    v4();
    sub_1B2B2787C(v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B29E58FC();
    return v5(0);
  }
  else
  {
    uint64_t v7 = v0[18];
    uint64_t v9 = v0[14];
    uint64_t v8 = v0[15];
    uint64_t v11 = v0[12];
    uint64_t v10 = v0[13];
    uint64_t v12 = v0[11];
    uint64_t v13 = v0[8];
    uint64_t v14 = v0[6];
    uint64_t v21 = (void *)v0[5];
    sub_1B2B278DC(v1, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
    id v15 = v21;
    uint64_t v16 = (void *)swift_task_alloc();
    v0[21] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1B2C57648;
    uint64_t v17 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v19 = v0[8];
    uint64_t v20 = v0[5];
    return sub_1B2C579C8(v17, v20, v18, v19);
  }
}

uint64_t sub_1B2C57648()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1B299B0E0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 176) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 184) = v3;
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B2C57738()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  sub_1B299B3B0();
  sub_1B299B798();
  v6();
  sub_1B2B27940(v2);
  sub_1B2C582CC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B29E58FC();
  return v7(v1);
}

uint64_t sub_1B2C5782C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
  sub_1B299B3B0();
  sub_1B299B798();
  v4();
  sub_1B2C582CC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v5();
}

uint64_t sub_1B2C57904()
{
  uint64_t v1 = *(void *)(v0 + 144);
  sub_1B2C58300();
  uint64_t v2 = sub_1B2C582B4();
  v3(v2);
  sub_1B299B3B0();
  sub_1B299B798();
  v4();
  sub_1B2B27940(v1);
  sub_1B2C582CC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v5();
}

uint64_t sub_1B2C579C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1B29DA0A8;
  return sub_1B2C57AA0(a1, a2, a3, a4);
}

uint64_t sub_1B2C57AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *v4;
  return MEMORY[0x1F4188298](sub_1B2C57AF0, 0, 0);
}

uint64_t sub_1B2C57AF0()
{
  sub_1B299F394();
  uint64_t v1 = (void *)v0[9];
  sub_1B2C58274();
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[14] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1B2C57C34;
    uint64_t v4 = v0[8];
    id v5 = v2;
  }
  else
  {
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_init);
    v0[16] = v6;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[17] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1B2C57D18;
    uint64_t v4 = v0[8];
    id v5 = v6;
  }
  return MEMORY[0x1F40DB7C0](v4, v5);
}

uint64_t sub_1B2C57C34()
{
  sub_1B299B3BC();
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v3 = v2;
  v2[2] = v1;
  v2[3] = v4;
  v2[4] = v0;
  uint64_t v5 = *v1;
  sub_1B299B0E0();
  *id v6 = v5;
  *(void *)(v7 + 120) = v0;
  swift_task_dealloc();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1B2C57D18()
{
  sub_1B299B3BC();
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v3 = v2;
  v2[5] = v1;
  v2[6] = v4;
  v2[7] = v0;
  id v6 = *(void **)(v5 + 128);
  uint64_t v7 = *v1;
  sub_1B299B0E0();
  *uint64_t v8 = v7;
  *(void *)(v9 + 144) = v0;
  swift_task_dealloc();

  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

uint64_t sub_1B2C57E14()
{
  sub_1B299F394();
  uint64_t v1 = *(void **)(v0 + 72);

  sub_1B299B3B0();
  (*(void (**)(void))(v2 + 8))();
  sub_1B2E80498();
  sub_1B299B3B0();
  sub_1B299B798();
  v3();
  uint64_t v4 = sub_1B2C582E8();
  return v5(v4);
}

uint64_t sub_1B2C57EDC()
{
  sub_1B299F394();
  sub_1B299B3B0();
  (*(void (**)(void))(v0 + 8))();
  sub_1B2E80498();
  sub_1B299B3B0();
  sub_1B299B798();
  v1();
  uint64_t v2 = sub_1B2C582E8();
  return v3(v2);
}

uint64_t sub_1B2C57F98()
{
  sub_1B299F394();
  uint64_t v1 = *(void **)(v0 + 72);

  sub_1B299B3B0();
  (*(void (**)(void))(v2 + 8))();
  sub_1B2E80498();
  sub_1B299B3B0();
  sub_1B299B798();
  v3();
  sub_1B2B27D34();
  sub_1B299AD7C();
  return v4();
}

uint64_t sub_1B2C58064()
{
  sub_1B299F394();
  sub_1B299B3B0();
  (*(void (**)(void))(v0 + 8))();
  sub_1B2E80498();
  sub_1B299B3B0();
  sub_1B299B798();
  v1();
  sub_1B2B27D34();
  sub_1B299AD7C();
  return v2();
}

id InferenceMLModel.prediction<A>(from:context:)(uint64_t a1)
{
  v8[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void **)(v1 + 16);
  v8[0] = 0;
  id v4 = objc_msgSend(v3, sel_predictionFromFeatures_error_, a1, v8);
  if (v4)
  {
    id v5 = v8[0];
  }
  else
  {
    id v6 = v8[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v4;
}

uint64_t InferenceMLModel.deinit()
{
  return v0;
}

uint64_t InferenceMLModel.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InferenceMLModel()
{
  return self;
}

uint64_t method lookup function for InferenceMLModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceMLModel);
}

unint64_t sub_1B2C58274()
{
  unint64_t result = qword_1EB7D9538;
  if (!qword_1EB7D9538)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB7D9538);
  }
  return result;
}

uint64_t sub_1B2C582B4()
{
  return v0;
}

uint64_t sub_1B2C582CC()
{
  return swift_task_dealloc();
}

uint64_t sub_1B2C582E8()
{
  *(void *)(v1 + 16) = v0;
  return *(void *)(v2 + 96);
}

void sub_1B2C58300()
{
  uint64_t v2 = *(void **)(v0 + 40);
}

void InferenceServerParameters.init(supportServerMode:)(unsigned char *a1@<X8>)
{
}

void *InferenceServer.__allocating_init(parameters:)(char *a1)
{
  return sub_1B2C47D08(*a1, (uint64_t)&type metadata for InferenceServiceDefinitionList);
}

uint64_t InferenceActor.MyActor.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t InferenceActor.MyActor.__deallocating_deinit()
{
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

void InferenceActor.MyActor.unownedExecutor.getter()
{
}

void sub_1B2C583A8()
{
}

uint64_t sub_1B2C583C4()
{
  type metadata accessor for InferenceActor.MyActor();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_1E9C372C0 = v0;
  return result;
}

uint64_t static InferenceActor.shared.getter()
{
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }

  return swift_retain();
}

void InferenceServerParameters.supportServerMode.getter(unsigned char *a1@<X8>)
{
}

void *sub_1B2C58470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for InferenceServerConfigManager();
  sub_1B2B11010(a1, (uint64_t)v8);
  swift_retain();
  uint64_t result = sub_1B2C5D310((uint64_t)v8, a2);
  a3[3] = v6;
  a3[4] = &off_1F0AD2600;
  *a3 = result;
  return result;
}

uint64_t sub_1B2C584F8()
{
  if (*(void *)(v0 + 192))
  {
    uint64_t v1 = *(void *)(v0 + 192);
  }
  else
  {
    uint64_t v2 = v0;
    sub_1B2E7FFF8();
    swift_allocObject();
    uint64_t v1 = sub_1B2E7FFE8();
    *(void *)(v2 + 192) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

void static InferenceServer.defaultParameters.getter(unsigned char *a1@<X8>)
{
}

uint64_t InferenceServer.__allocating_init<A>(parameters:serviceDefinitionListType:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v9)(long long *__return_ptr);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void v14[4];
  uint64_t v15;
  uint64_t v16;
  void v17[5];
  char v18;

  uint64_t v16 = a2;
  id v15 = a3;
  char v6 = *a1;
  sub_1B2E7FF98();
  swift_allocObject();
  uint64_t v7 = sub_1B2E7FF88();
  uint64_t v8 = v7;
  uint64_t v18 = v6;
  if (qword_1EB7E3F60 != -1) {
    uint64_t v7 = swift_once();
  }
  uint64_t v9 = (void (*)(long long *__return_ptr))qword_1EB7E5280;
  uint64_t v10 = unk_1EB7E5288;
  MEMORY[0x1F4188790](v7);
  uint64_t v14[2] = v8;
  v14[3] = v4;
  type metadata accessor for InferenceServerLifecycleManagerNoOp();
  swift_allocObject();
  uint64_t v11 = sub_1B2C622A0();
  v17[3] = type metadata accessor for InferenceServerCacheManagerNoOp();
  v17[4] = &off_1F0AD4CA0;
  v17[0] = swift_allocObject();
  swift_retain();
  uint64_t v12 = sub_1B2C587D0(&v18, (void (*)(long long *__return_ptr))sub_1B2C47F70, v8, v9, v10, (void (*)(long long *__return_ptr, uint64_t *))sub_1B2C5CACC, (uint64_t)v14, v11, (uint64_t)&off_1F0AD68A0, (uint64_t)v17, MEMORY[0x1E4FBC860], v16, v8, v15, a4);
  swift_release();
  return v12;
}

uint64_t sub_1B2C58740@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for InferenceSupportLocalBackendBasic();
  swift_allocObject();
  uint64_t v6 = swift_retain();
  uint64_t result = sub_1B2C761A4(v6, v7, a1);
  if (!v2)
  {
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1F0AD6050;
    *a2 = result;
  }
  return result;
}

void *sub_1B2C587B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1B2C58470(a1, a2, a3);
}

uint64_t sub_1B2C587D0(char *a1, void (*a2)(long long *__return_ptr), uint64_t a3, void (*a4)(long long *__return_ptr), uint64_t a5, void (*a6)(long long *__return_ptr, uint64_t *), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v21 = swift_allocObject();
  sub_1B2C588A4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, v23, a15);
  return v21;
}

void *sub_1B2C588A4(char *a1, void (*a2)(long long *__return_ptr), uint64_t a3, void (*a4)(long long *__return_ptr), uint64_t a5, void (*a6)(long long *__return_ptr, uint64_t *), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v17 = (void *)v15;
  int v21 = *a1;
  *(void *)(v15 + 192) = 0;
  sub_1B2B2A948();
  *(void *)(v15 + 16) = sub_1B2E82148();
  *(unsigned char *)(v15 + 24) = v21;
  if (v21 < 0)
  {
    char v32 = v21 & 1;
    a4(&v28);
    if (!v16)
    {
      uint64_t v22 = v29;
      uint64_t v23 = v30;
      sub_1B29AEC7C(&v28, v29);
      v31[3] = v22;
      v31[4] = *(void *)(v23 + 16);
      sub_1B29D1C70(v31);
      sub_1B299B3B0();
      sub_1B299ADCC();
      v24();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v28);
      goto LABEL_7;
    }
  }
  else
  {
    a2(&v28);
    if (!v16)
    {
      sub_1B29D1D20(&v28, (uint64_t)v31);
LABEL_7:
      sub_1B2B11010((uint64_t)v31, (uint64_t)(v17 + 4));
      a6(&v28, v31);
      sub_1B29D1D20(&v28, (uint64_t)(v17 + 16));
      v17[9] = a8;
      v17[10] = a9;
      sub_1B2B11010(a10, (uint64_t)(v17 + 11));
      v17[21] = a11;
      v17[22] = a12;
      v17[23] = a15;
      v17[25] = a13;
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v26 = swift_retain();
      sub_1B2C62224(v26, (uint64_t)&off_1F0AC85D0);
      swift_unknownObjectRelease();
      swift_release();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a10);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v31);
      return v17;
    }
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a10);
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for InferenceServer();
  swift_deallocPartialClassInstance();
  return v17;
}

uint64_t sub_1B2C58B40()
{
  sub_1B2C5D110();
  sub_1B2C5D19C();
  uint64_t v1 = v0;
  v0[9] = v2;
  v0[10] = v3;
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v8 = v4[2];
  uint64_t v7 = v4[3];
  uint64_t v10 = v4[4];
  uint64_t v9 = v4[5];
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  v1[11] = qword_1E9C372C0;
  v1[2] = v5;
  v1[3] = v6;
  v1[4] = v8;
  v1[5] = v7;
  v1[6] = v10;
  v1[7] = v9;
  v1[8] = 0;
  uint64_t v11 = (void *)swift_task_alloc();
  v1[12] = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_1B2C58C68;
  sub_1B2A88440();
  return sub_1B2C590AC();
}

uint64_t sub_1B2C58C68()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 88);
    return MEMORY[0x1F4188298](sub_1B2C58D68, v7, 0);
  }
  else
  {
    sub_1B299AD7C();
    return v8();
  }
}

void sub_1B2C58D68()
{
  sub_1B299B9B8();
  uint64_t v1 = *(void **)(v0 + 104);
  swift_getAssociatedTypeWitness();
  sub_1B2C5D1A8();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for InferenceMessageResponseError();
  swift_getWitnessTable();
  swift_allocError();
  sub_1B2C48AA4(v1, v2);
  swift_willThrow();

  sub_1B299AD7C();
  sub_1B2999AC8();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_1B2C58E80()
{
  sub_1B2C5D110();
  sub_1B2C5D19C();
  uint64_t v1 = v0;
  v0[9] = v2;
  v0[10] = v3;
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  uint64_t v7 = v4[2];
  uint64_t v8 = v4[3];
  uint64_t v10 = v4[4];
  uint64_t v9 = v4[5];
  uint64_t v12 = *v11;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  v1[11] = qword_1E9C372C0;
  v1[2] = v6;
  v1[3] = v5;
  v1[4] = v7;
  v1[5] = v8;
  v1[6] = v10;
  v1[7] = v9;
  v1[8] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v1[12] = v13;
  *uint64_t v13 = v1;
  v13[1] = sub_1B2C58FAC;
  sub_1B2A88440();
  return sub_1B2C590AC();
}

uint64_t sub_1B2C58FAC()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 88);
    return MEMORY[0x1F4188298](sub_1B2C5D10C, v7, 0);
  }
  else
  {
    sub_1B299AD7C();
    return v8();
  }
}

uint64_t sub_1B2C590AC()
{
  sub_1B299B3BC();
  *(void *)(v1 + 144) = v2;
  *(void *)(v1 + 152) = v3;
  *(void *)(v1 + 128) = v4;
  *(void *)(v1 + 136) = v5;
  *(void *)(v1 + 112) = v6;
  *(void *)(v1 + 120) = v7;
  long long v8 = v7[1];
  *(_OWORD *)(v1 + 16) = *v7;
  *(_OWORD *)(v1 + 32) = v8;
  *(_OWORD *)(v1 + 48) = v7[2];
  uint64_t v10 = *v9;
  *(void *)(v1 + 160) = v0;
  *(void *)(v1 + 168) = v10;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1E9C372C0;
  *(void *)(v1 + 176) = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C59164, v11, 0);
}

uint64_t sub_1B2C59164()
{
  sub_1B2B1222C();
  uint64_t v12 = v0;
  uint64_t v1 = *(long long **)(v0 + 120);
  uint64_t v11 = *(void *)(v0 + 168);
  sub_1B2C5A948(v1, &v11);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  sub_1B2C5D188();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 184) = v6;
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(v0 + 144);
  *(void *)(v6 + 32) = v3;
  *(void *)(v6 + 40) = v4;
  *(void *)(v6 + 48) = v0 + 16;
  *(void *)(v6 + 56) = v5;
  *(void *)(v6 + 64) = v2;
  swift_task_alloc();
  sub_1B2B1DB0C();
  *(void *)(v0 + 192) = v7;
  *uint64_t v7 = v8;
  v7[1] = sub_1B2C592AC;
  sub_1B2B11C04();
  return sub_1B2C5AD64();
}

uint64_t sub_1B2C592AC()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 176);
    return MEMORY[0x1F4188298](sub_1B2C593B4, v7, 0);
  }
  else
  {
    swift_task_dealloc();
    sub_1B299AD7C();
    return v8();
  }
}

uint64_t sub_1B2C593B4()
{
  sub_1B299B3BC();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2C59410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[29] = a8;
  v8[30] = v13;
  v8[27] = a6;
  v8[28] = a7;
  v8[25] = a4;
  v8[26] = a5;
  v8[23] = a2;
  v8[24] = a3;
  v8[22] = a1;
  swift_getAssociatedTypeWitness();
  v8[31] = type metadata accessor for InferenceMessageResponse();
  v8[32] = swift_getTupleTypeMetadata2();
  v8[33] = swift_task_alloc();
  v8[34] = swift_task_alloc();
  v8[35] = swift_task_alloc();
  uint64_t v9 = sub_1B2E82F38();
  v8[36] = v9;
  v8[37] = *(void *)(v9 - 8);
  v8[38] = swift_task_alloc();
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1E9C372C0;
  v8[39] = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C595BC, v10, 0);
}

uint64_t sub_1B2C595BC()
{
  sub_1B299B3BC();
  uint64_t v1 = *(_OWORD **)(v0 + 208);
  sub_1B29AEC7C((void *)(*(void *)(v0 + 192) + 88), *(void *)(*(void *)(v0 + 192) + 112));
  long long v3 = v1[1];
  long long v2 = v1[2];
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v3;
  *(_OWORD *)(v0 + 48) = v2;
  swift_task_alloc();
  sub_1B2B1DB0C();
  *(void *)(v0 + 320) = v4;
  *uint64_t v4 = v5;
  v4[1] = sub_1B2C59684;
  uint64_t v6 = *(void *)(v0 + 304);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v9 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 200);
  return sub_1B2C5D1B4(v6, v10, v0 + 16, v9, v7, v8);
}

uint64_t sub_1B2C59684()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 328) = v0;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v3 + 312);
  if (v0) {
    uint64_t v8 = sub_1B2C599D8;
  }
  else {
    uint64_t v8 = sub_1B2C5976C;
  }
  return MEMORY[0x1F4188298](v8, v7, 0);
}

uint64_t sub_1B2C5976C()
{
  uint64_t v1 = v0[38];
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v0[31]) != 1)
  {
    uint64_t v5 = v0[23];
    sub_1B299B3B0();
    (*(void (**)(void))(v6 + 32))();
    *(void *)uint64_t v5 = 0;
    *(_WORD *)(v5 + 8) = 256;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B2999AB8();
    goto LABEL_5;
  }
  uint64_t v2 = v0[41];
  uint64_t v3 = (_OWORD *)v0[26];
  (*(void (**)(uint64_t, uint64_t))(v0[37] + 8))(v1, v0[36]);
  sub_1B2C5A078(v3);
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B29A448C();
LABEL_5:
    return v4();
  }
  uint64_t v8 = v0[28];
  uint64_t v9 = v0[24];
  swift_getAssociatedTypeWitness();
  uint64_t v10 = type metadata accessor for InferenceMessageRequest();
  v0[42] = v10;
  v0[16] = v10;
  v0[17] = (uint64_t)&off_1F0ACF0D0;
  sub_1B29D1C70(v0 + 13);
  sub_1B299B3B0();
  sub_1B299ADCC();
  v11();
  v0[18] = v9;
  v0[19] = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[43] = (uint64_t)v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1B2C59A50;
  return sub_1B2C5A9C8();
}

uint64_t sub_1B2C599D8()
{
  sub_1B299F394();
  sub_1B2C5D140();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2C59A50()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 352) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 312);
    uint64_t v8 = sub_1B2C59F3C;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 312);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v3 + 104);
    uint64_t v8 = sub_1B2C59B48;
    uint64_t v7 = v9;
  }
  return MEMORY[0x1F4188298](v8, v7, 0);
}

void sub_1B2C59B48()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 192);
  *(_DWORD *)(v0 + 376) = *(_DWORD *)(*(void *)(v0 + 256) + 48);
  sub_1B29AEC7C((void *)(v0 + 64), *(void *)(v0 + 88));
  *(void *)(v0 + 160) = v2;
  *(void *)(v0 + 168) = v1;
  swift_task_alloc();
  sub_1B2B1DB0C();
  *(void *)(v0 + 360) = v3;
  *uint64_t v3 = v4;
  v3[1] = sub_1B2C59CC8;
  sub_1B2ADA938();
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1B2C59CC8()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 368) = v0;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v3 + 312);
  if (v0) {
    uint64_t v8 = sub_1B2C59FE0;
  }
  else {
    uint64_t v8 = sub_1B2C59DB0;
  }
  return MEMORY[0x1F4188298](v8, v7, 0);
}

uint64_t sub_1B2C59DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_1B2C5D110();
  sub_1B2C5D19C();
  uint64_t v17 = *(int *)(v16 + 376);
  uint64_t v19 = *(void *)(v16 + 272);
  uint64_t v18 = *(void *)(v16 + 280);
  uint64_t v20 = *(void *)(v16 + 256);
  uint64_t v41 = *(void *)(v16 + 264);
  uint64_t v21 = *(void *)(v16 + 248);
  uint64_t v22 = *(void *)(v16 + 184);
  uint64_t v39 = v20;
  uint64_t v40 = *(void *)(v16 + 176);
  swift_release();
  uint64_t v23 = (uint64_t *)(v18 + v17);
  swift_bridgeObjectRelease();
  uint64_t v24 = v19 + *(int *)(v20 + 48);
  uint64_t v25 = *(void *)(v21 - 8);
  sub_1B299E89C();
  v26();
  uint64_t v27 = *v23;
  LOBYTE(v23) = *((unsigned char *)v23 + 8);
  *(void *)uint64_t v24 = v27;
  *(unsigned char *)(v24 + 8) = (_BYTE)v23;
  long long v28 = *(void (**)(void))(v25 + 32);
  ((void (*)(uint64_t, uint64_t, uint64_t))v28)(v40, v19, v21);
  uint64_t v29 = v41 + *(int *)(v39 + 48);
  sub_1B299E89C();
  v28();
  *(void *)uint64_t v29 = v27;
  *(unsigned char *)(v29 + 8) = (_BYTE)v23;
  *(void *)uint64_t v22 = v27;
  *(_WORD *)(v22 + 8) = v23;
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v41, v21);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v16 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B2999AB8();
  sub_1B2A88440();
  return v31(v30, v31, v32, v33, v34, v35, v36, v37, a9, v39, v40, v16 + 64, v41, a14, a15, a16);
}

uint64_t sub_1B2C59F3C()
{
  sub_1B299F394();
  swift_release();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 104);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 64);
  sub_1B2C5D140();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2C59FE0()
{
  sub_1B299F394();
  swift_release();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 64);
  sub_1B2C5D140();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2C5A078(_OWORD *a1)
{
  sub_1B299F854(a1);
  sub_1B29E515C((uint64_t)v23);
  swift_bridgeObjectRetain();
  sub_1B29B2CE8();
  swift_bridgeObjectRelease();
  sub_1B2A90B98((uint64_t)v23);
  if (v22 != 255)
  {
    sub_1B29C3BE8((uint64_t)&v19, (uint64_t)&v13);
    sub_1B29D2368((uint64_t)&v19, &qword_1E9C376F0);
    sub_1B2C72B18(v16);
    sub_1B2C5CF4C((uint64_t)&v13);
    uint64_t v3 = (long long *)v16;
    return sub_1B29D1D20(v3, v2);
  }
  sub_1B29D2368((uint64_t)&v19, &qword_1E9C376F0);
  sub_1B2C5D174();
  uint64_t result = sub_1B2C5A824(v21, &v13);
  if (!v1)
  {
    uint64_t v6 = result;
    uint64_t v7 = v5;
    uint64_t v19 = result;
    uint64_t v20 = v5;
    sub_1B2C5D12C();
    uint64_t v13 = v8;
    uint64_t v14 = v9;
    sub_1B2C5CE50((uint64_t)v21, (uint64_t)v15);
    swift_bridgeObjectRetain();
    sub_1B2C5A4E4(v16, v6, v7, (uint64_t)v15, (uint64_t)v17);
    sub_1B2C5CEAC((uint64_t)v15);
    swift_bridgeObjectRelease();
    if (v18)
    {
      sub_1B29D2368((uint64_t)&v19, &qword_1E9C37A48);
      uint64_t v3 = (long long *)v17;
      return sub_1B29D1D20(v3, v2);
    }
    sub_1B29D2368((uint64_t)v17, &qword_1E9C41658);
    uint64_t v11 = v19;
    uint64_t v10 = v20;
    uint64_t v13 = v19;
    uint64_t v14 = v20;
    sub_1B2C5CE50((uint64_t)v21, (uint64_t)v15);
    sub_1B2C5CF00();
    swift_allocError();
    *(void *)uint64_t v12 = v11;
    *(void *)(v12 + 8) = v10;
    *(unsigned char *)(v12 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1B29D2368((uint64_t)&v19, &qword_1E9C37A48);
    return sub_1B2C5CEAC((uint64_t)v15);
  }
  return result;
}

uint64_t sub_1B2C5A294(_OWORD *a1)
{
  sub_1B299F854(a1);
  sub_1B29E515C((uint64_t)v25);
  swift_bridgeObjectRetain();
  sub_1B29B2CE8();
  swift_bridgeObjectRelease();
  sub_1B2A90B98((uint64_t)v25);
  if (v24 == 255)
  {
    sub_1B29D2368((uint64_t)&v21, &qword_1E9C376F0);
    long long v16 = 0u;
    long long v17 = 0u;
    uint64_t v18 = 0;
  }
  else
  {
    sub_1B29C3BE8((uint64_t)&v21, (uint64_t)&v13);
    sub_1B29D2368((uint64_t)&v21, &qword_1E9C376F0);
    sub_1B2C72BD8((uint64_t)&v16);
    sub_1B2C5CF4C((uint64_t)&v13);
    if (*((void *)&v17 + 1))
    {
      uint64_t v3 = &v16;
      return sub_1B29D1D20(v3, v2);
    }
  }
  sub_1B29D2368((uint64_t)&v16, &qword_1E9C37960);
  sub_1B2C5D174();
  uint64_t result = sub_1B2C5A824(v23, &v13);
  if (!v1)
  {
    uint64_t v6 = result;
    uint64_t v7 = v5;
    uint64_t v21 = result;
    uint64_t v22 = v5;
    sub_1B2C5D12C();
    uint64_t v13 = v8;
    uint64_t v14 = v9;
    sub_1B2C5CE50((uint64_t)v23, (uint64_t)v15);
    swift_bridgeObjectRetain();
    sub_1B2C5A6E4(&v16, v6, v7, (uint64_t)v15, (uint64_t)v19);
    sub_1B2C5CEAC((uint64_t)v15);
    swift_bridgeObjectRelease();
    if (v20)
    {
      sub_1B29D2368((uint64_t)&v21, &qword_1E9C37A48);
      uint64_t v3 = (long long *)v19;
      return sub_1B29D1D20(v3, v2);
    }
    sub_1B29D2368((uint64_t)v19, &qword_1E9C37960);
    uint64_t v11 = v21;
    uint64_t v10 = v22;
    uint64_t v13 = v21;
    uint64_t v14 = v22;
    sub_1B2C5CE50((uint64_t)v23, (uint64_t)v15);
    sub_1B2C5CF00();
    swift_allocError();
    *(void *)uint64_t v12 = v11;
    *(void *)(v12 + 8) = v10;
    *(unsigned char *)(v12 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1B29D2368((uint64_t)&v21, &qword_1E9C37A48);
    return sub_1B2C5CEAC((uint64_t)v15);
  }
  return result;
}

uint64_t sub_1B2C5A4E4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  long long v10 = a1[1];
  v28[0] = *a1;
  v28[1] = v10;
  v28[2] = a1[2];
  v26[0] = a2;
  v26[1] = a3;
  sub_1B2C5CE50(a4, (uint64_t)v27);
  sub_1B2C5D12C();
  *(void *)&long long v17 = a2;
  *((void *)&v17 + 1) = a3;
  sub_1B2C5CE50((uint64_t)v27, (uint64_t)v18);
  swift_bridgeObjectRetain();
  sub_1B2C5A6E4(v20, a2, a3, (uint64_t)v18, (uint64_t)&v21);
  sub_1B2C5CEAC((uint64_t)v18);
  if (!v6)
  {
    if (v22)
    {
      sub_1B29D1D20(&v21, (uint64_t)v23);
      uint64_t v11 = v24;
      uint64_t v12 = v25;
      sub_1B29AEC7C(v23, v24);
      *(void *)(a5 + 24) = v11;
      *(void *)(a5 + 32) = *(void *)(v12 + 8);
      sub_1B29D1C70((uint64_t *)a5);
      sub_1B299B3B0();
      sub_1B299ADCC();
      v15(v13, v14);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v23);
    }
    else
    {
      sub_1B29D2368((uint64_t)&v21, &qword_1E9C37960);
      sub_1B2C6FD0C(*(void *)(v5 + 176), *(void *)(v5 + 184), (uint64_t)&v17);
      if (v18[1])
      {
        sub_1B29D1D20(&v17, (uint64_t)v20);
        sub_1B2B11010((uint64_t)v20, (uint64_t)&v17);
        char v19 = 0;
        swift_beginAccess();
        sub_1B29E515C((uint64_t)v28);
        sub_1B2C45798((uint64_t)&v17, (uint64_t)v28);
        swift_endAccess();
        sub_1B29D1D20(v20, a5);
      }
      else
      {
        sub_1B29D2368((uint64_t)&v17, &qword_1E9C41658);
        *(void *)(a5 + 32) = 0;
        *(_OWORD *)a5 = 0u;
        *(_OWORD *)(a5 + 16) = 0u;
      }
    }
  }
  return sub_1B29D2368((uint64_t)v26, &qword_1E9C37A48);
}

uint64_t sub_1B2C5A6E4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = v6;
  long long v9 = a1[1];
  v18[0] = *a1;
  v18[1] = v9;
  v18[2] = a1[2];
  v16[0] = a2;
  v16[1] = a3;
  sub_1B2C5CE50(a4, (uint64_t)&v17);
  uint64_t v10 = *(void *)(v5 + 176);
  uint64_t v11 = *(void *)(v5 + 184);
  swift_bridgeObjectRetain();
  sub_1B2C6FDE0(v10, v11, (uint64_t)&v13);
  if (!v7)
  {
    if (v14)
    {
      sub_1B29D1D20(&v13, a5);
      sub_1B2B11010(a5, (uint64_t)&v13);
      char v15 = 1;
      swift_beginAccess();
      sub_1B29E515C((uint64_t)v18);
      sub_1B2C45798((uint64_t)&v13, (uint64_t)v18);
      swift_endAccess();
    }
    else
    {
      sub_1B29D2368((uint64_t)&v13, &qword_1E9C37960);
      *(void *)(a5 + 32) = 0;
      *(_OWORD *)a5 = 0u;
      *(_OWORD *)(a5 + 16) = 0u;
    }
  }
  return sub_1B29D2368((uint64_t)v16, &qword_1E9C37A48);
}

uint64_t sub_1B2C5A824(void *a1, uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v10 = a2[5];
  sub_1B29AEC7C(v4 + 16, v4[19]);
  v17[0] = v7;
  v17[1] = v6;
  v17[2] = v8;
  v17[3] = v9;
  v17[4] = v11;
  v17[5] = v10;
  uint64_t v18 = v10;
  uint64_t result = sub_1B2C5E988((uint64_t)v17);
  if (!v3)
  {
    uint64_t v16 = result;
    sub_1B29A3EB4(&qword_1E9C37B70);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1B2EC00A0;
    uint64_t v14 = *(void *)(v4[10] + 8);
    *(void *)(v13 + 32) = v4[9];
    *(void *)(v13 + 40) = v14;
    *a1 = v7;
    a1[1] = v6;
    a1[2] = v8;
    a1[3] = v9;
    uint64_t v15 = v18;
    a1[4] = v11;
    a1[5] = v15;
    sub_1B2B11010((uint64_t)(v4 + 16), (uint64_t)(a1 + 6));
    a1[11] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    return v16;
  }
  return result;
}

__n128 sub_1B2C5A948(long long *a1, uint64_t *a2)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  uint64_t v3 = *((void *)a1 + 4);
  uint64_t v4 = *((void *)a1 + 5);
  uint64_t v5 = *a2;
  sub_1B29AEC7C((void *)(v2 + 128), *(void *)(v2 + 152));
  v9[0] = v8;
  v9[1] = v7;
  uint64_t v10 = v3;
  uint64_t v11 = v4;
  uint64_t v12 = v5;
  sub_1B2C5E80C((uint64_t)v9, &v12);
  return result;
}

uint64_t sub_1B2C5A9C8()
{
  sub_1B299B3BC();
  v0[4] = v1;
  v0[5] = v2;
  uint64_t v4 = v3[1];
  v0[6] = *v3;
  v0[7] = v4;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1E9C372C0;
  v0[8] = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C5AA68, v5, 0);
}

void sub_1B2C5AA68()
{
  sub_1B2B1222C();
  uint64_t v2 = (void *)v0[4];
  uint64_t v1 = (void *)v0[5];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_1B29AEC7C(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B299E89C();
  v5();
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  swift_bridgeObjectRelease();
  long long v8 = (void *)sub_1B2C5D1A8();
  sub_1B29AEC7C(v8, v9);
  v0[2] = v7;
  v0[3] = v6;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[9] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1B2C5AC48;
  sub_1B299E89C();
  sub_1B2B11C04();
  __asm { BRAA            X5, X16 }
}

uint64_t sub_1B2C5AC48()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 64);
    return MEMORY[0x1F4188298](sub_1B2C5AD48, v7, 0);
  }
  else
  {
    sub_1B299AD7C();
    return v8();
  }
}

uint64_t sub_1B2C5AD48()
{
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2C5AD64()
{
  sub_1B299B3BC();
  uint64_t v3 = v2;
  *(void *)(v1 + 128) = v4;
  *(void *)(v1 + 136) = v0;
  *(void *)(v1 + 112) = v5;
  *(void *)(v1 + 120) = v6;
  *(void *)(v1 + 96) = v7;
  *(void *)(v1 + 104) = v8;
  *(void *)(v1 + 80) = v9;
  *(void *)(v1 + 88) = v10;
  swift_getAssociatedTypeWitness();
  uint64_t v11 = type metadata accessor for InferenceMessageResponse();
  *(void *)(v1 + 144) = v11;
  sub_1B299D2A8(v11);
  *(void *)(v1 + 152) = v12;
  *(void *)(v1 + 160) = swift_task_alloc();
  uint64_t v13 = sub_1B2E806B8();
  *(void *)(v1 + 168) = v13;
  sub_1B299D2A8(v13);
  *(void *)(v1 + 176) = v14;
  *(void *)(v1 + 184) = swift_task_alloc();
  long long v15 = v3[1];
  *(_OWORD *)(v1 + 16) = *v3;
  *(_OWORD *)(v1 + 32) = v15;
  *(_OWORD *)(v1 + 48) = v3[2];
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1E9C372C0;
  *(void *)(v1 + 192) = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C5AEB0, v16, 0);
}

uint64_t sub_1B2C5AEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _OWORD *a9, uint64_t a10, long long a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23)
{
  sub_1B2C5D110();
  a22 = v24;
  a23 = v25;
  sub_1B2C5D19C();
  a21 = v23;
  uint64_t v26 = v23[17];
  sub_1B2E806A8();
  uint64_t v27 = *(void *)(v26 + 168);
  v23[25] = v27;
  uint64_t v47 = v27;
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    a9 = v23 + 2;
    swift_bridgeObjectRetain();
    uint64_t v29 = 0;
    do
    {
      uint64_t v30 = v23[23];
      uint64_t v32 = v23[15];
      uint64_t v31 = v23[16];
      uint64_t v34 = v23[11];
      uint64_t v33 = v23[12];
      uint64_t v35 = v47 + 16 * v29++;
      a11 = *(_OWORD *)(v35 + 32);
      swift_unknownObjectRetain();
      sub_1B2C5B2EC((uint64_t)&a11, v30, a9, v34, v33, v32, v31);
      swift_unknownObjectRelease();
    }
    while (v28 != v29);
    swift_bridgeObjectRelease();
  }
  uint64_t v48 = v23[13] + *(int *)v23[13];
  swift_task_alloc();
  sub_1B2B1DB0C();
  v23[26] = v36;
  *uint64_t v36 = v37;
  v36[1] = sub_1B2C5B028;
  sub_1B2A88440();
  return v40(v38, v39, v40, v41, v42, v43, v44, v45, a9, v48, a11, *((void *)&a11 + 1), a12, a13, a14, a15);
}

uint64_t sub_1B2C5B028()
{
  sub_1B299F394();
  sub_1B29A19D4();
  sub_1B299F388();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 216) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v1 + 192);
  if (v0) {
    uint64_t v6 = sub_1B2C5B278;
  }
  else {
    uint64_t v6 = sub_1B2C5B128;
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

uint64_t sub_1B2C5B128()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 64);
  __int16 v3 = *(unsigned __int8 *)(v0 + 72);
  __int16 v4 = *(unsigned __int8 *)(v0 + 73);
  (*(void (**)(void, void, void))(*(void *)(v0 + 152) + 32))(*(void *)(v0 + 80), *(void *)(v0 + 160), *(void *)(v0 + 144));
  uint64_t v5 = *(void *)(v1 + 16);
  if (v5)
  {
    uint64_t v6 = (long long *)(*(void *)(v0 + 200) + 32);
    swift_bridgeObjectRetain();
    __int16 v17 = v3 | (v4 << 8);
    uint64_t v18 = v2;
    do
    {
      uint64_t v19 = *(void *)(v0 + 184);
      uint64_t v8 = *(void *)(v0 + 120);
      uint64_t v7 = *(void *)(v0 + 128);
      uint64_t v10 = *(void *)(v0 + 88);
      uint64_t v9 = *(void *)(v0 + 96);
      uint64_t v11 = *(void *)(v0 + 80);
      long long v12 = *v6++;
      long long v20 = v12;
      swift_unknownObjectRetain();
      sub_1B2C5B3A4((uint64_t)&v20, v19, (_OWORD *)(v0 + 16), v10, v9, v11, v18, v17, v8, v7);
      swift_unknownObjectRelease();
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = sub_1B29A0908();
  v14(v13);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B2999AB8();
  return v15();
}

uint64_t sub_1B2C5B278()
{
  sub_1B299B3BC();
  uint64_t v0 = sub_1B29A0908();
  v1(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v2();
}

uint64_t sub_1B2C5B2EC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  long long v15 = a3[1];
  v17[0] = *a3;
  v17[1] = v15;
  v17[2] = a3[2];
  return (*(uint64_t (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(a2, v17, a4, a5, a6, a7, ObjectType, v13);
}

uint64_t sub_1B2C5B3A4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __int16 a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  long long v17 = a3[1];
  v23[0] = *a3;
  v23[1] = v17;
  v23[2] = a3[2];
  uint64_t v21 = a7;
  __int16 v22 = a8 & 0x1FF;
  return (*(uint64_t (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(a2, v23, a4, a5, a6, &v21, a9, a10, ObjectType, v15);
}

uint64_t sub_1B2C5B470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 80) = a8;
  *(void *)(v8 + 88) = v14;
  *(void *)(v8 + 64) = a6;
  *(void *)(v8 + 72) = a7;
  *(void *)(v8 + 48) = a4;
  *(void *)(v8 + 56) = a5;
  *(void *)(v8 + 32) = a2;
  *(void *)(v8 + 40) = a3;
  uint64_t v10 = sub_1B2E806B8();
  *(void *)(v8 + 96) = v10;
  *(void *)(v8 + 104) = *(void *)(v10 - 8);
  *(void *)(v8 + 112) = swift_task_alloc();
  *(_OWORD *)(v8 + 120) = *(_OWORD *)a1;
  *(void *)(v8 + 136) = *(void *)(a1 + 16);
  *(_OWORD *)(v8 + 144) = *(_OWORD *)(a1 + 24);
  *(void *)(v8 + 160) = *(void *)(a1 + 40);
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1E9C372C0;
  *(void *)(v8 + 168) = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C5B5A0, v11, 0);
}

uint64_t sub_1B2C5B5A0()
{
  uint64_t v26 = v0;
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1B2E806A8();
  uint64_t v2 = *(void *)(v1 + 168);
  *(void *)(v0 + 176) = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v6 = *(void *)(v0 + 152);
      uint64_t v5 = *(void *)(v0 + 160);
      long long v20 = *(_OWORD *)(v0 + 120);
      long long v21 = *(_OWORD *)(v0 + 136);
      uint64_t v7 = *(void *)(v0 + 112);
      uint64_t v8 = *(void *)(v0 + 32);
      uint64_t v22 = *(void *)(v0 + 40);
      uint64_t v9 = *v4;
      uint64_t ObjectType = swift_getObjectType();
      v23[0] = v20;
      v23[1] = v21;
      uint64_t v24 = v6;
      uint64_t v25 = v5;
      uint64_t v11 = *(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16);
      swift_unknownObjectRetain();
      v11(v7, v23, v8, v22, ObjectType, v9);
      swift_unknownObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  swift_task_alloc();
  sub_1B2B1DB0C();
  *(void *)(v0 + 184) = v12;
  *long long v12 = v13;
  v12[1] = sub_1B2C5B71C;
  uint64_t v14 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 88);
  uint64_t v16 = *(void *)(v0 + 64);
  uint64_t v17 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 56);
  return sub_1B2C5C298(v0 + 16, v18, v16, v17, v14, v15);
}

uint64_t sub_1B2C5B71C()
{
  sub_1B299F394();
  sub_1B29A19D4();
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v2;
  sub_1B299F388();
  *uint64_t v6 = v5;
  v9[24] = v7;
  v9[25] = v8;
  v9[26] = v0;
  swift_task_dealloc();
  uint64_t v10 = *(void *)(v1 + 168);
  if (v0) {
    uint64_t v11 = sub_1B2C5B9DC;
  }
  else {
    uint64_t v11 = sub_1B2C5B824;
  }
  return MEMORY[0x1F4188298](v11, v10, 0);
}

uint64_t sub_1B2C5B824()
{
  uint64_t v34 = v0;
  if ((*(unsigned char *)(v0 + 26) & 1) == 0)
  {
    uint64_t v1 = *(void *)(*(void *)(v0 + 176) + 16);
    if (v1)
    {
      uint64_t v21 = *(void *)(v0 + 16);
      unsigned int v2 = *(unsigned __int16 *)(v0 + 24);
      char v20 = *(_WORD *)(v0 + 24);
      uint64_t v3 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
      int v19 = (v2 >> 8) & 1;
      do
      {
        uint64_t v26 = *(void *)(v0 + 192);
        uint64_t v27 = *(void *)(v0 + 200);
        uint64_t v4 = *(void *)(v0 + 152);
        uint64_t v5 = *(void *)(v0 + 160);
        long long v22 = *(_OWORD *)(v0 + 120);
        long long v23 = *(_OWORD *)(v0 + 136);
        uint64_t v6 = *(void *)(v0 + 32);
        uint64_t v24 = *(void *)(v0 + 40);
        uint64_t v25 = *(void *)(v0 + 112);
        uint64_t v7 = *v3;
        uint64_t ObjectType = swift_getObjectType();
        v28[0] = v22;
        v28[1] = v23;
        uint64_t v29 = v4;
        uint64_t v30 = v5;
        uint64_t v31 = v21;
        char v32 = v20;
        char v33 = v19;
        uint64_t v9 = *(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v7 + 32);
        swift_unknownObjectRetain();
        v9(v25, v28, v6, v24, v26, v27, &v31, ObjectType, v7);
        swift_unknownObjectRelease();
        v3 += 2;
        --v1;
      }
      while (v1);
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v11 = *(void *)(v0 + 72);
  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v12 = *(void *)(v0 + 64);
  uint64_t v13 = sub_1B29A0908();
  v14(v13);
  swift_release();
  sub_1B29C34DC(v12, v11);
  sub_1B2A90B98(v10);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v16 = *(void *)(v0 + 192);
  uint64_t v17 = *(void *)(v0 + 200);
  return v15(v16, v17);
}

uint64_t sub_1B2C5B9DC()
{
  sub_1B299B9B8();
  unint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_1B29A0908();
  v5(v4);
  swift_release();
  sub_1B29C34DC(v3, v2);
  sub_1B2A90B98(v1);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v6();
}

uint64_t InferenceServer.deinit()
{
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 32);
  swift_unknownObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 88);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t InferenceServer.__deallocating_deinit()
{
  InferenceServer.deinit();

  return swift_deallocClassInstance();
}

uint64_t InferenceServer.runRequest(instanceQualifiedId:requestData:clientEntitlementInfo:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  v5[26] = v4;
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v12 = *a4;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  v5[27] = qword_1E9C372C0;
  v5[2] = v6;
  v5[3] = v7;
  v5[4] = v8;
  v5[5] = v9;
  v5[6] = v10;
  v5[7] = v11;
  v5[23] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v5[28] = v13;
  *uint64_t v13 = v5;
  v13[1] = sub_1B2C5BC2C;
  sub_1B2ADA938();
  return sub_1B2C5BF68(v14, v15, v16, v17);
}

uint64_t sub_1B2C5BC2C()
{
  sub_1B299B9B8();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 232) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_1B2C5D15C();
    sub_1B2999AC8();
    __asm { BRAA            X3, X16 }
  }
  sub_1B2999AC8();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1B2C5BD48()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void **)(v0 + 232);
  *(void *)(v0 + 200) = v1;
  id v2 = v1;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  sub_1B29A3EB4(&qword_1E9C3E108);
  sub_1B299E89C();
  if (swift_dynamicCast())
  {
    uint64_t v3 = (long long *)sub_1B2C5D1A8();
    sub_1B29D1D20(v3, v4);
    uint64_t v5 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    sub_1B29AEC7C((void *)(v0 + 104), v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 32))(v25, v5, v6);
    uint64_t v7 = v25[0];
    unint64_t v8 = v25[1];
    uint64_t v9 = v25[2];
    uint64_t v10 = v25[3];
    __int16 v11 = v26 | 0x100;
    uint64_t v12 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 104);
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 232);
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(void *)(v0 + 96) = 0;
    sub_1B29D2368(v0 + 64, &qword_1E9C3E110);
    *(void *)(v0 + 192) = v13;
    id v14 = v13;
    sub_1B2C5D1A8();
    uint64_t v12 = sub_1B2E82408();
    uint64_t v7 = v12;
    unint64_t v8 = v15;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    __int16 v11 = 512;
  }
  uint64_t v16 = (void *)MEMORY[0x1B3EB2480](v12);
  sub_1B2C584F8();
  unint64_t v23 = v8;
  uint64_t v24 = v7;
  *(void *)(v0 + 144) = v7;
  *(void *)(v0 + 152) = v8;
  *(void *)(v0 + 160) = v9;
  *(void *)(v0 + 168) = v10;
  *(_WORD *)(v0 + 176) = v11;
  *(unsigned char *)(v0 + 178) = 1;
  sub_1B29A3EB4(&qword_1E9C41618);
  sub_1B2C5CAE8();
  uint64_t v17 = sub_1B2E7FFD8();
  uint64_t v19 = v18;
  char v20 = *(void **)(v0 + 232);
  swift_release();
  sub_1B2C5CB3C(v24, v23, v9, v10, v11, 1);

  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v21(v17, v19);
}

uint64_t sub_1B2C5BF68(_OWORD *a1, uint64_t a2, uint64_t a3, void *a4)
{
  *(void *)(v5 + 128) = a3;
  *(void *)(v5 + 136) = v4;
  *(void *)(v5 + 112) = a1;
  *(void *)(v5 + 120) = a2;
  long long v6 = a1[1];
  *(_OWORD *)(v5 + 16) = *a1;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = a1[2];
  *(void *)(v5 + 144) = *a4;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1E9C372C0;
  *(void *)(v5 + 152) = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C5C020, v7, 0);
}

uint64_t sub_1B2C5C020()
{
  sub_1B299B9B8();
  uint64_t v16 = v0;
  uint64_t v1 = (long long *)v0[14];
  uint64_t v15 = v0[18];
  sub_1B2C5A948(v1, &v15);
  uint64_t v3 = v0[15];
  unint64_t v2 = v0[16];
  sub_1B2C5D188();
  swift_retain();
  sub_1B29F4F7C(v3, v2);
  sub_1B29E515C((uint64_t)(v0 + 2));
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[20] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1B2C5C160;
  uint64_t v17 = v0[18];
  sub_1B2999AC8();
  return sub_1B2C5B470(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1B2C5C160()
{
  sub_1B299B9B8();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_1B2C5D15C();
    sub_1B2999AC8();
    __asm { BRAA            X3, X16 }
  }
  sub_1B2999AC8();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1B2C5C27C()
{
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2C5C298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[33] = a5;
  v6[34] = a6;
  v6[31] = a3;
  v6[32] = a4;
  v6[29] = a1;
  v6[30] = a2;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1E9C372C0;
  v6[35] = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C5C33C, v7, 0);
}

uint64_t sub_1B2C5C33C()
{
  return MEMORY[0x1F4188298](sub_1B2C5C358, *(void *)(v0 + 280), 0);
}

uint64_t sub_1B2C5C358()
{
  uint64_t v1 = sub_1B2C5A294(*(_OWORD **)(v0 + 264));
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = (void *)MEMORY[0x1B3EB2480](v1);
  *(void *)(v0 + 288) = *(void *)(v2 + 200);
  sub_1B2C5D088();
  sub_1B2E7FF78();
  uint64_t v14 = *(void *)(v0 + 240);
  uint64_t v15 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 144);
  *(void *)(v0 + 296) = v5;
  *(void *)(v0 + 304) = v4;
  uint64_t v6 = *(void *)(v0 + 152);
  *(void *)(v0 + 312) = v6;
  LOBYTE(v2) = *(unsigned char *)(v0 + 160);
  *(unsigned char *)(v0 + 161) = v2;
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  sub_1B29AEC7C((void *)(v0 + 16), v8);
  *(void *)(v0 + 120) = v8;
  *(void *)(v0 + 128) = *(void *)(v7 + 8);
  sub_1B29D1C70((uint64_t *)(v0 + 96));
  sub_1B299B3B0();
  sub_1B299ADCC();
  v9();
  *(void *)(v0 + 80) = &type metadata for InferenceFullRequestBase;
  *(void *)(v0 + 88) = &off_1F0ACF988;
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 56) = v10;
  *(void *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v4;
  *(void *)(v10 + 32) = v6;
  *(unsigned char *)(v10 + 40) = v2;
  *(void *)(v0 + 200) = v14;
  *(void *)(v0 + 208) = v15;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1B2C5C584;
  sub_1B2ADA938();
  return sub_1B2C5A9C8();
}

uint64_t sub_1B2C5C584()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 280);
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1B2C5C9C4;
    uint64_t v9 = v7;
  }
  else
  {
    uint64_t v10 = v3 + 96;
    uint64_t v11 = v3 + 56;
    uint64_t v12 = *(void *)(v3 + 280);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v11);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v10);
    uint64_t v8 = sub_1B2C5C694;
    uint64_t v9 = v12;
  }
  return MEMORY[0x1F4188298](v8, v9, 0);
}

void sub_1B2C5C694()
{
  sub_1B2B1222C();
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[6];
  sub_1B29AEC7C(v0 + 2, v0[5]);
  v0[27] = v2;
  v0[28] = v1;
  v0[42] = sub_1B2C584F8();
  uint64_t v5 = *(void *)(v3 + 16) + **(int **)(v3 + 16);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[43] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1B2C5C7F8;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1B2C5C7F8()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 352) = v0;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v3 + 280);
  if (v0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1B2C5CA58;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v8 = sub_1B2C5C90C;
  }
  return MEMORY[0x1F4188298](v8, v7, 0);
}

uint64_t sub_1B2C5C90C()
{
  sub_1B299F394();
  uint64_t v1 = *(void *)(v0 + 232);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  char v5 = *(unsigned char *)(v0 + 192);
  BOOL v6 = v5 < 0;
  __int16 v7 = v5 & 1;
  if (v6)
  {
    uint64_t v4 = 0;
    __int16 v7 = 0;
  }
  *(void *)uint64_t v1 = v4;
  *(_WORD *)(v1 + 8) = v7;
  *(unsigned char *)(v1 + 10) = v6;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v8(v2, v3);
}

uint64_t sub_1B2C5C9C4()
{
  sub_1B299F394();
  swift_release();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 56);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 96);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2C5CA58()
{
  sub_1B299B3BC();
  swift_release();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  sub_1B299AD7C();
  return v1();
}

void *sub_1B2C5CACC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B2C58470(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_1B2C5CAE8()
{
  unint64_t result = qword_1E9C41620;
  if (!qword_1E9C41620)
  {
    sub_1B29C3588(&qword_1E9C41618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41620);
  }
  return result;
}

uint64_t sub_1B2C5CB3C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, char a6)
{
  if (a6) {
    return sub_1B2C5CB4C(a1, a2, a3, a4, a5, SHIBYTE(a5));
  }
  else {
    return sub_1B29C34DC(a1, a2);
  }
}

uint64_t sub_1B2C5CB4C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  if (a6 == 2) {
    return swift_bridgeObjectRelease();
  }
  if (a6 == 1) {
    return sub_1B2C4A32C(result, a2, a3, a4, a5);
  }
  return result;
}

unint64_t sub_1B2C5CB74()
{
  unint64_t result = qword_1E9C41628;
  if (!qword_1E9C41628)
  {
    type metadata accessor for InferenceActor.MyActor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9C41628);
  }
  return result;
}

uint64_t type metadata accessor for InferenceActor.MyActor()
{
  return self;
}

void type metadata accessor for InferenceActor()
{
}

uint64_t method lookup function for InferenceActor.MyActor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceActor.MyActor);
}

void type metadata accessor for InferenceServerParameters()
{
}

uint64_t _s20IntelligencePlatform25InferenceServerParametersV17SupportServerModeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x7F)
  {
    if (a2 + 129 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 129) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 130;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v5 >= 0x7E) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *_s20IntelligencePlatform25InferenceServerParametersV17SupportServerModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 129 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 129) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7E)
  {
    unsigned int v6 = ((a2 - 127) >> 8) + 1;
    *unint64_t result = a2 - 127;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C5CD88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
        break;
    }
  }
  return result;
}

uint64_t sub_1B2C5CDB0(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_1B2C5CDBC(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_1B2C5CDCC(unsigned char *result, char a2)
{
  *unint64_t result = *result & 1 | (a2 << 7);
  return result;
}

void type metadata accessor for InferenceServerParameters.SupportServerMode()
{
}

void type metadata accessor for InferenceServerParameters.SupportServerMode.LocalOptions()
{
}

void type metadata accessor for InferenceServerParameters.SupportServerMode.RemoteOptions()
{
}

uint64_t type metadata accessor for InferenceServer()
{
  return self;
}

uint64_t method lookup function for InferenceServer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceServer);
}

ValueMetadata *type metadata accessor for InferenceServer._DummyError()
{
  return &type metadata for InferenceServer._DummyError;
}

uint64_t sub_1B2C5CE50(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B2C5CEAC(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B2C5CF00()
{
  unint64_t result = qword_1E9C41660;
  if (!qword_1E9C41660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9C41660);
  }
  return result;
}

uint64_t sub_1B2C5CF4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2C5CFA0()
{
  sub_1B2B1222C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = v0[2];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  uint64_t v10 = v0[7];
  uint64_t v11 = v0[8];
  swift_task_alloc();
  sub_1B2B1DB0C();
  *(void *)(v1 + 16) = v12;
  *uint64_t v12 = v13;
  v12[1] = sub_1B2A14584;
  return sub_1B2C59410(v5, v3, v7, v8, v9, v10, v11, v6);
}

unint64_t sub_1B2C5D088()
{
  unint64_t result = qword_1E9C41688;
  if (!qword_1E9C41688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9C41688);
  }
  return result;
}

uint64_t sub_1B2C5D0D4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

__n128 sub_1B2C5D12C()
{
  return *(__n128 *)(v0 - 80);
}

uint64_t sub_1B2C5D140()
{
  return swift_task_dealloc();
}

uint64_t sub_1B2C5D15C()
{
  return v0;
}

__n128 sub_1B2C5D174()
{
  return *(__n128 *)(v0 - 80);
}

__n128 sub_1B2C5D188()
{
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 80) = v2;
  __n128 result = *(__n128 *)(v0 + 32);
  *(__n128 *)(v1 + 96) = result;
  return result;
}

uint64_t sub_1B2C5D1A8()
{
  return v0;
}

uint64_t sub_1B2C5D1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  void v6[2] = a1;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C5D250, v7, 0);
}

uint64_t sub_1B2C5D250()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for InferenceMessageResponse();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t type metadata accessor for InferenceServerCacheManagerNoOp()
{
  return self;
}

void *sub_1B2C5D310(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InferenceServerConfigLoader();
  sub_1B29C3B84(a1, (uint64_t)v21);
  uint64_t v5 = sub_1B2C5D51C(v21);
  uint64_t v6 = type metadata accessor for InferenceServerConfigManagerCacheNoOp();
  uint64_t v7 = swift_allocObject();
  void v21[3] = v4;
  v21[4] = &off_1F0AD1BB0;
  v20[4] = &off_1F0AD76A0;
  v21[0] = v5;
  long long v20[3] = v6;
  v20[0] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  sub_1B2A49CD8((uint64_t)v21, v4);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v9);
  sub_1B299F280();
  (*(void (**)(uint64_t *))(v10 + 16))(v2);
  sub_1B2A49CD8((uint64_t)v20, v6);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v11);
  sub_1B299E4A0();
  uint64_t v14 = (uint64_t *)(v13 - v12);
  (*(void (**)(uint64_t))(v15 + 16))(v13 - v12);
  uint64_t v16 = *v2;
  uint64_t v17 = *v14;
  v8[5] = v4;
  v8[6] = &off_1F0AD1BB0;
  id v8[2] = v16;
  v8[10] = v6;
  v8[11] = &off_1F0AD76A0;
  v8[7] = v17;
  v8[12] = a2;
  swift_retain();
  swift_retain();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v20);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v21);
  swift_release();
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
  return v8;
}

uint64_t sub_1B2C5D500@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 2;
  return sub_1B2C49EE4(v2, v3);
}

uint64_t sub_1B2C5D51C(void *a1)
{
  uint64_t v2 = type metadata accessor for AssetRegistry();
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = sub_1B29AEC7C(a1, v4);
  long long v20[3] = v4;
  uint64_t v21 = *(void *)(v3 + 8);
  uint64_t v6 = v21;
  uint64_t v7 = sub_1B29D1C70(v20);
  uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16);
  v8(v7, v5, v4);
  type metadata accessor for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo();
  swift_allocObject();
  uint64_t v9 = sub_1B2DDDCA4();
  v18[0] = v9;
  type metadata accessor for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo.PersistentContent();
  swift_allocObject();
  uint64_t v10 = sub_1B29D5F50(v18, (uint64_t)sub_1B29D6054, 0);
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3C78);
  swift_allocObject();
  swift_retain();
  uint64_t v11 = sub_1B29E5380(v10);
  v18[0] = v9;
  v18[1] = v11;
  char v19 = 1;
  MEMORY[0x1F4188790](v11);
  sub_1B299E4A0();
  uint64_t v14 = v13 - v12;
  v8((uint64_t *)(v13 - v12), v7, v4);
  uint64_t v15 = sub_1B29E50B4(v14, v18, v2, v4, v6);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v20);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  return v16;
}

void sub_1B2C5D6F0()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  sub_1B2E7FF58();
  sub_1B299D31C();
  v32[3] = v3;
  v32[4] = v4;
  MEMORY[0x1F4188790](v3);
  sub_1B299B6D0();
  v32[2] = v5;
  v32[5] = sub_1B2E80498();
  sub_1B299D31C();
  uint64_t v35 = v6;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  v32[6] = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v34 = (char *)v32 - v10;
  uint64_t v33 = type metadata accessor for AssetRegistryAsset(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v11);
  sub_1B299E4A0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_1B29A3EB4(&qword_1E9C37298);
  MEMORY[0x1F4188790](v15 - 8);
  sub_1B299E4A0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for AssetRegistryAssetLocalAvailabilityInfo(0);
  sub_1B2999864();
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  unint64_t v23 = (char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)v32 - v24;
  uint64_t v27 = *v2;
  uint64_t v26 = v2[1];
  AssetRegistry.locallyAvailableAsset(for:in:)();
  if (!v0)
  {
    v32[0] = v26;
    v32[1] = v27;
    uint64_t v28 = v14;
    uint64_t v29 = v33;
    uint64_t v30 = v35;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v18, 1, v19) == 1)
    {
      sub_1B2C5F590(v18);
    }
    else
    {
      sub_1B2C5F6A0(v18, (uint64_t)v25, (void (*)(void))type metadata accessor for AssetRegistryAssetLocalAvailabilityInfo);
      sub_1B2C5F63C((uint64_t)v25, (uint64_t)v23);
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v23, 1, v29) != 1)
      {
        sub_1B2C5F6A0((uint64_t)v23, v28, (void (*)(void))type metadata accessor for AssetRegistryAsset);
        uint64_t v33 = v28;
        sub_1B2E80428();
        sub_1B2E80438();
        uint64_t v31 = *(void (**)(void))(v30 + 8);
        sub_1B299F888();
        v31();
        sub_1B2E804D8();
        sub_1B299F888();
        v31();
        sub_1B2C5F700(v33, (void (*)(void))type metadata accessor for AssetRegistryAsset);
        sub_1B2C5F700((uint64_t)v25, (void (*)(void))type metadata accessor for AssetRegistryAssetLocalAvailabilityInfo);
        goto LABEL_7;
      }
      sub_1B2C5F700((uint64_t)v25, (void (*)(void))type metadata accessor for AssetRegistryAssetLocalAvailabilityInfo);
      sub_1B2C5F700((uint64_t)v23, (void (*)(void))type metadata accessor for AssetRegistryAssetLocalAvailabilityInfo);
    }
    sub_1B2C5F5F0();
    sub_1B299E4D4();
    swift_willThrow();
  }
LABEL_7:
  sub_1B29998C8();
}

BOOL static InferenceServiceLoadInstanceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t InferenceServiceLoadInstanceError.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t sub_1B2C5DB90(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001B2E9DDF0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001B2E9DE10)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1B2C5DC7C()
{
  return 0xD000000000000012;
}

unint64_t sub_1B2C5DCB0()
{
  return sub_1B2C5DC7C();
}

uint64_t sub_1B2C5DCB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C5DB90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C5DCE0(uint64_t a1)
{
  unint64_t v2 = sub_1B2C5E048();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C5DD1C(uint64_t a1)
{
  unint64_t v2 = sub_1B2C5E048();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2C5DD58(uint64_t a1)
{
  unint64_t v2 = sub_1B2C5E094();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C5DD94(uint64_t a1)
{
  unint64_t v2 = sub_1B2C5E094();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2C5DDD0(uint64_t a1)
{
  unint64_t v2 = sub_1B2C5E0E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C5DE0C(uint64_t a1)
{
  unint64_t v2 = sub_1B2C5E0E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void InferenceServiceLoadInstanceError.encode(to:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  sub_1B29A3EB4(&qword_1E9C41698);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v4);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C416A0);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C416A8);
  sub_1B299D31C();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B299F280();
  char v10 = *v0;
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2C5E048();
  sub_1B2E83A38();
  uint64_t v11 = (void (**)(uint64_t, uint64_t))(v8 + 8);
  if (v10) {
    sub_1B2C5E094();
  }
  else {
    sub_1B2C5E0E0();
  }
  sub_1B2E83618();
  sub_1B299B798();
  v13(v12);
  (*v11)(v1, v6);
  sub_1B29998C8();
}

unint64_t sub_1B2C5E048()
{
  unint64_t result = qword_1E9C416B0;
  if (!qword_1E9C416B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C416B0);
  }
  return result;
}

unint64_t sub_1B2C5E094()
{
  unint64_t result = qword_1E9C416B8;
  if (!qword_1E9C416B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C416B8);
  }
  return result;
}

unint64_t sub_1B2C5E0E0()
{
  unint64_t result = qword_1E9C416C0;
  if (!qword_1E9C416C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C416C0);
  }
  return result;
}

uint64_t InferenceServiceLoadInstanceError.hashValue.getter()
{
  return sub_1B2E839E8();
}

void InferenceServiceLoadInstanceError.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  unint64_t v23 = v3;
  sub_1B29A3EB4(&qword_1E9C416C8);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v4);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C416D0);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C416D8);
  sub_1B299D31C();
  uint64_t v24 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1B299E4A0();
  uint64_t v11 = v10 - v9;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2C5E048();
  sub_1B2E83A18();
  if (v0) {
    goto LABEL_6;
  }
  uint64_t v25 = (uint64_t)v2;
  uint64_t v12 = sub_1B2E835F8();
  if (!*(void *)(v12 + 16)
    || (char v13 = *(unsigned char *)(v12 + 32),
        sub_1B29B142C(1),
        uint64_t v15 = v14,
        unint64_t v17 = v16,
        swift_bridgeObjectRelease(),
        v15 != v17 >> 1))
  {
    uint64_t v18 = sub_1B2E83288();
    sub_1B299E4D4();
    uint64_t v20 = v19;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v20 = &type metadata for InferenceServiceLoadInstanceError;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x1E4FBBA70], v18);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1B299B798();
    v21();
    unint64_t v2 = (void *)v25;
LABEL_6:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    goto LABEL_7;
  }
  sub_1B2C5E094();
  sub_1B2E834E8();
  sub_1B299B798();
  v22();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v6);
  *unint64_t v23 = v13;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v25);
LABEL_7:
  sub_1B29998C8();
}

void sub_1B2C5E5AC(uint64_t a1@<X8>)
{
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 1;
}

void sub_1B2C5E5C4()
{
}

void sub_1B2C5E5DC()
{
}

void sub_1B2C5E5F4(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  long long v15 = *((_OWORD *)a1 + 1);
  uint64_t v8 = a1[4];
  sub_1B29AEC7C((void *)(v4 + 16), *(void *)(v4 + 40));
  sub_1B2C5D6F0();
  if (!v3)
  {
    unint64_t v11 = v10;
    if (v10 >> 60 == 15)
    {
      sub_1B2C5F0B4();
      swift_allocError();
      *uint64_t v12 = 1;
      swift_willThrow();
    }
    else
    {
      uint64_t v13 = v9;
      uint64_t v14 = (void *)MEMORY[0x1B3EB2480]();
      sub_1B2C5F544();
      sub_1B2E7FF78();
      *(void *)a2 = v13;
      *(void *)(a2 + 8) = v11;
      *(void *)(a2 + 16) = v6;
      *(void *)(a2 + 24) = v7;
      *(_OWORD *)(a2 + 32) = v15;
      *(void *)(a2 + 48) = v8;
    }
  }
}

void sub_1B2C5E80C(uint64_t a1, uint64_t *a2)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *a2;
  v15[0] = *(_OWORD *)a1;
  v15[1] = v3;
  uint64_t v16 = v4;
  uint64_t v17 = v5;
  sub_1B2C5E5F4((uint64_t *)v15, (uint64_t)v14);
  if (!v2)
  {
    uint64_t v8 = v14[2];
    uint64_t v7 = v14[3];
    uint64_t v10 = v14[4];
    uint64_t v9 = v14[5];
    uint64_t v11 = v14[6];
    sub_1B29C34DC(v14[0], v14[1]);
    v18[0] = v8;
    v18[1] = v7;
    uint64_t v18[2] = v10;
    _OWORD v18[3] = v9;
    v18[4] = v11;
    char v12 = sub_1B2C5E8E8(v18, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      sub_1B2C5F0B4();
      sub_1B299E4D4();
      *uint64_t v13 = 0;
      swift_willThrow();
    }
  }
}

uint64_t sub_1B2C5E8E8(uint64_t *a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = a1[4];
    uint64_t v5 = *a1;
    uint64_t v4 = a1[1];
    swift_bridgeObjectRetain();
    sub_1B29FB4D4(v5, v4, a2);
    LOBYTE(v5) = v6;
    swift_bridgeObjectRelease();
    if (v5)
    {
      char v7 = 1;
    }
    else if (v3)
    {
      uint64_t v8 = swift_bridgeObjectRetain();
      char v9 = sub_1B2C5EE88(v8, a2);
      swift_bridgeObjectRelease();
      char v7 = v9 ^ 1;
    }
    else
    {
      char v7 = 0;
    }
  }
  else
  {
    char v7 = 1;
  }
  return v7 & 1;
}

uint64_t sub_1B2C5E988(uint64_t a1)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 32);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  uint64_t v8 = v4;
  sub_1B2C5E5F4((uint64_t *)v7, (uint64_t)v6);
  if (!v2)
  {
    uint64_t v1 = v6[4];
    sub_1B29C34DC(v6[0], v6[1]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v1;
}

void sub_1B2C5EA10()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v41 = v7;
  swift_getAssociatedTypeWitness();
  uint64_t v47 = v2;
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for InferenceServiceConfig();
  sub_1B299D31C();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = *(void *)v6;
  uint64_t v15 = *(void *)(v6 + 8);
  long long v16 = *(_OWORD *)(v6 + 16);
  uint64_t v17 = *(void *)(v6 + 32);
  uint64_t v18 = *(void *)(v6 + 40);
  v43[0] = *(void *)v6;
  v43[1] = v15;
  long long v44 = v16;
  uint64_t v45 = v17;
  uint64_t v46 = v18;
  sub_1B2C5E5F4(v43, (uint64_t)v42);
  if (!v0)
  {
    uint64_t v37 = v15;
    uint64_t v38 = v14;
    uint64_t v39 = v10;
    uint64_t v40 = v8;
    uint64_t v19 = v42[0];
    unint64_t v20 = v42[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = swift_bridgeObjectRelease();
    uint64_t v22 = (void *)MEMORY[0x1B3EB2480](v21);
    sub_1B2C5ED38();
    uint64_t v36 = v19;
    uint64_t v23 = v39;
    uint64_t v24 = v41;
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v41, v13, v40);
    uint64_t v25 = v24[2];
    uint64_t v26 = v24[3];
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v47 + 56);
    swift_bridgeObjectRetain();
    if (v25 == v27(v4, v47) && v26 == v28)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v30 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {
        sub_1B2C5F4F8();
        sub_1B299E4D4();
        *uint64_t v31 = 0;
        swift_willThrow();
        sub_1B29C34DC(v36, v20);
        (*(void (**)(void *, uint64_t))(v23 + 8))(v41, v40);
        goto LABEL_16;
      }
    }
    char v32 = v41;
    BOOL v33 = *v41 == v38 && v41[1] == v37;
    if (v33 || (sub_1B2E837A8() & 1) != 0)
    {
      sub_1B29C34DC(v36, v20);
    }
    else
    {
      sub_1B2C5F4F8();
      sub_1B299E4D4();
      *uint64_t v34 = 1;
      swift_willThrow();
      sub_1B29C34DC(v36, v20);
      (*(void (**)(void *, uint64_t))(v23 + 8))(v32, v40);
    }
  }
LABEL_16:
  sub_1B29998C8();
}

uint64_t sub_1B2C5ED38()
{
  return sub_1B2E7FF78();
}

uint64_t sub_1B2C5EE24()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 56);
  swift_release();
  return v0;
}

uint64_t sub_1B2C5EE54()
{
  sub_1B2C5EE24();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2C5EE88(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v22 = a1 + 32;
  uint64_t v4 = a2 + 56;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (!*(void *)(a2 + 16))
  {
LABEL_20:
    if (++v5 == v2)
    {
      uint64_t v20 = 1;
      goto LABEL_24;
    }
  }
  uint64_t v6 = (uint64_t *)(v22 + 16 * v5);
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  sub_1B2E83988();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  uint64_t v9 = sub_1B2E839E8();
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v13 = (void *)(v12 + 16 * v11);
  BOOL v14 = *v13 == v8 && v13[1] == v7;
  if (!v14 && (sub_1B2E837A8() & 1) == 0)
  {
    uint64_t v15 = ~v10;
    for (unint64_t i = v11 + 1; ; unint64_t i = v17 + 1)
    {
      uint64_t v17 = i & v15;
      if (((*(void *)(v4 + (((i & v15) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v15)) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v12 + 16 * v17);
      BOOL v19 = *v18 == v8 && v18[1] == v7;
      if (v19 || (sub_1B2E837A8() & 1) != 0) {
        goto LABEL_23;
      }
    }
    goto LABEL_19;
  }
LABEL_23:
  swift_bridgeObjectRelease();
  uint64_t v20 = 0;
LABEL_24:
  swift_bridgeObjectRelease();
  return v20;
}

unint64_t sub_1B2C5F014(uint64_t a1)
{
  unint64_t result = sub_1B2A509C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2C5F040()
{
  unint64_t result = qword_1E9C416E0;
  if (!qword_1E9C416E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C416E0);
  }
  return result;
}

unint64_t sub_1B2C5F08C(uint64_t a1)
{
  unint64_t result = sub_1B2C5F0B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2C5F0B4()
{
  unint64_t result = qword_1E9C416E8;
  if (!qword_1E9C416E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C416E8);
  }
  return result;
}

unint64_t sub_1B2C5F100(uint64_t a1)
{
  unint64_t result = sub_1B2B4D074();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for InferenceServerConfigLoader()
{
  return self;
}

void type metadata accessor for InferenceServiceLoadInstanceError()
{
}

uint64_t type metadata accessor for InferenceServerConfigManager()
{
  return self;
}

uint64_t type metadata accessor for InferenceServerConfigManagerCacheNoOp()
{
  return self;
}

unsigned char *_s20IntelligencePlatform33InferenceServiceLoadInstanceErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C5F270);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceServiceLoadInstanceError.CodingKeys()
{
  return &type metadata for InferenceServiceLoadInstanceError.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceServiceLoadInstanceError.MissingEntitlementCodingKeys()
{
  return &type metadata for InferenceServiceLoadInstanceError.MissingEntitlementCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceServiceLoadInstanceError.InstanceIdNotFoundCodingKeys()
{
  return &type metadata for InferenceServiceLoadInstanceError.InstanceIdNotFoundCodingKeys;
}

unint64_t sub_1B2C5F2CC()
{
  unint64_t result = qword_1E9C416F0;
  if (!qword_1E9C416F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C416F0);
  }
  return result;
}

unint64_t sub_1B2C5F31C()
{
  unint64_t result = qword_1E9C416F8;
  if (!qword_1E9C416F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C416F8);
  }
  return result;
}

unint64_t sub_1B2C5F36C()
{
  unint64_t result = qword_1E9C41700;
  if (!qword_1E9C41700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41700);
  }
  return result;
}

unint64_t sub_1B2C5F3BC()
{
  unint64_t result = qword_1E9C41708;
  if (!qword_1E9C41708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41708);
  }
  return result;
}

unint64_t sub_1B2C5F40C()
{
  unint64_t result = qword_1E9C41710;
  if (!qword_1E9C41710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41710);
  }
  return result;
}

unint64_t sub_1B2C5F45C()
{
  unint64_t result = qword_1E9C41718;
  if (!qword_1E9C41718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41718);
  }
  return result;
}

unint64_t sub_1B2C5F4AC()
{
  unint64_t result = qword_1E9C41720;
  if (!qword_1E9C41720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41720);
  }
  return result;
}

unint64_t sub_1B2C5F4F8()
{
  unint64_t result = qword_1E9C41728;
  if (!qword_1E9C41728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41728);
  }
  return result;
}

unint64_t sub_1B2C5F544()
{
  unint64_t result = qword_1E9C376D0;
  if (!qword_1E9C376D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C376D0);
  }
  return result;
}

uint64_t sub_1B2C5F590(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C37298);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B2C5F5F0()
{
  unint64_t result = qword_1E9C41730;
  if (!qword_1E9C41730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41730);
  }
  return result;
}

uint64_t sub_1B2C5F63C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetRegistryAssetLocalAvailabilityInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2C5F6A0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1B2C5F700(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  sub_1B299B798();
  v3();
  return a1;
}

unsigned char *sub_1B2C5F754(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2C5F7F0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for InferenceServerConfigLoader.InferenceServerConfigLoaderError()
{
}

void *sub_1B2C5F824(void *a1, void **a2)
{
  int v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void sub_1B2C5F864(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **sub_1B2C5F87C(void **a1, void **a2)
{
  int v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF) {
      id v7 = v4;
    }
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    id v5 = v4;
    unsigned int v6 = *a1;
    *a1 = v4;
  }
  return a1;
}

void **sub_1B2C5F90C(void **a1, unint64_t *a2)
{
  int v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t sub_1B2C5F970(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1B2C5F9CC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

void type metadata accessor for InferenceServiceConfigError()
{
}

unint64_t sub_1B2C5FA28(uint64_t a1)
{
  unint64_t result = sub_1B2C5F4F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2C5FA54()
{
  unint64_t result = qword_1E9C41738;
  if (!qword_1E9C41738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41738);
  }
  return result;
}

unint64_t static InferenceServerEntitlementInfo.configEntitlement.getter()
{
  return 0xD000000000000040;
}

uint64_t InferenceServerEntitlementInfo.init(clientEntitlements:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void *assignWithCopy for InferenceServerEntitlementInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for InferenceServerEntitlementInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceServerEntitlementInfo(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceServerEntitlementInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceServerEntitlementInfo()
{
  return &type metadata for InferenceServerEntitlementInfo;
}

void *initializeBufferWithCopyOfBuffer for InferenceServerEntitlementInfo.InferenceServerEntitlementList(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InferenceServerEntitlementInfo.InferenceServerEntitlementList(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for InferenceServerEntitlementInfo.InferenceServerEntitlementList(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InferenceServerEntitlementInfo.InferenceServerEntitlementList()
{
  return &type metadata for InferenceServerEntitlementInfo.InferenceServerEntitlementList;
}

uint64_t sub_1B2C5FCA0()
{
  return sub_1B2C5FCC8((uint64_t)&type metadata for EntitlementCheckError, &qword_1E9C41878);
}

uint64_t sub_1B2C5FCC8(uint64_t a1, uint64_t *a2)
{
  return sub_1B2E82408();
}

uint64_t sub_1B2C5FCFC()
{
  return sub_1B2E82408();
}

uint64_t sub_1B2C5FD2C()
{
  return sub_1B2C5FD68(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_1B2C5FD34(void *a1)
{
  id v1 = a1;
  return sub_1B2E82408();
}

uint64_t sub_1B2C5FD68(uint64_t a1, unint64_t a2)
{
  return sub_1B2E82408();
}

uint64_t sub_1B2C5FD9C(void *a1)
{
  return sub_1B2E82408();
}

uint64_t sub_1B2C5FDD0()
{
  return sub_1B2E82408();
}

uint64_t sub_1B2C5FE04()
{
  return sub_1B2E82408();
}

uint64_t sub_1B2C5FE10()
{
  return sub_1B2E82408();
}

uint64_t sub_1B2C5FE4C()
{
  return sub_1B2E82408();
}

uint64_t sub_1B2C5FE9C()
{
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B299E4A0();
  (*(void (**)(uint64_t))(v3 + 16))(v2 - v1);
  return sub_1B2E82408();
}

uint64_t sub_1B2C5FF24()
{
  return sub_1B2C5FCC8((uint64_t)&type metadata for InferenceServiceLoadInstanceError, &qword_1E9C41870);
}

uint64_t sub_1B2C5FF4C()
{
  return sub_1B2C5FDD0();
}

uint64_t sub_1B2C5FF54()
{
  return sub_1B2C5FCC8((uint64_t)&unk_1F0AD1C88, &qword_1E9C41890);
}

uint64_t sub_1B2C5FF7C()
{
  return sub_1B2C5FD9C(*v0);
}

uint64_t sub_1B2C5FF84@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2C6001C(*v1, a1);
}

uint64_t sub_1B2C5FF8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C41868);
  uint64_t v4 = sub_1B2E82408();
  uint64_t v6 = v5;
  id v7 = a1;
  uint64_t result = sub_1B2E82408();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = result;
  *(void *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 32) = 3;
  return result;
}

uint64_t sub_1B2C6001C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C41890);
  uint64_t v4 = sub_1B2E82408();
  uint64_t v6 = v5;
  sub_1B2C6219C(a1);
  uint64_t result = sub_1B2E82408();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = result;
  *(void *)(a2 + 24) = v8;
  *(unsigned char *)(a2 + 32) = 3;
  return result;
}

uint64_t sub_1B2C600AC@<X0>(uint64_t a1@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C41888);
  uint64_t v2 = sub_1B2E82408();
  uint64_t v4 = v3;
  uint64_t result = sub_1B2E82408();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = result;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = 3;
  return result;
}

uint64_t sub_1B2C60120@<X0>(uint64_t a1@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C41880);
  uint64_t v2 = sub_1B2E82408();
  uint64_t v4 = v3;
  sub_1B29EB518();
  uint64_t result = sub_1B2E82408();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = result;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = 3;
  return result;
}

uint64_t sub_1B2C601CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(void))(a2 + 16))();
  uint64_t v8 = v7;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  *(void *)(a3 + 16) = result;
  *(void *)(a3 + 24) = v10;
  *(unsigned char *)(a3 + 32) = 3;
  return result;
}

uint64_t sub_1B2C60260()
{
  return sub_1B2C5FCC8((uint64_t)&type metadata for FileLoaderError, &qword_1E9C41868);
}

uint64_t sub_1B2C60288()
{
  return sub_1B2C5FD34(*v0);
}

uint64_t sub_1B2C60290@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2C5FF8C(*v1, a1);
}

uint64_t sub_1B2C60298(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4574736575716572 && a2 == 0xEC000000726F7272;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B2E9DE80 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001B2E9DEA0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x727245726568746FLL && a2 == 0xEA0000000000726FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1B2C60468(char a1)
{
  unint64_t result = 0x4574736575716572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x727245726568746FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2C60514(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2C60614(char a1)
{
  if (a1) {
    return 0x7470697263736564;
  }
  else {
    return 0x6E69616D6F64;
  }
}

unint64_t sub_1B2C60650()
{
  return sub_1B2C60468(*v0);
}

uint64_t sub_1B2C60658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C60298(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C60680(uint64_t a1)
{
  unint64_t v2 = sub_1B2C60D68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C606BC(uint64_t a1)
{
  unint64_t v2 = sub_1B2C60D68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2C606F8(uint64_t a1)
{
  unint64_t v2 = sub_1B2C60E00();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C60734(uint64_t a1)
{
  unint64_t v2 = sub_1B2C60E00();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2C60770(uint64_t a1)
{
  unint64_t v2 = sub_1B2C60E98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C607AC(uint64_t a1)
{
  unint64_t v2 = sub_1B2C60E98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2C607E8()
{
  return sub_1B2C60614(*v0);
}

uint64_t sub_1B2C607F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C60514(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C60818(uint64_t a1)
{
  unint64_t v2 = sub_1B2C60DB4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C60854(uint64_t a1)
{
  unint64_t v2 = sub_1B2C60DB4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2C60890(uint64_t a1)
{
  unint64_t v2 = sub_1B2C60F30();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C608CC(uint64_t a1)
{
  unint64_t v2 = sub_1B2C60F30();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t InferenceServerErrorInfo.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C41740);
  sub_1B299D278();
  uint64_t v35 = v5;
  uint64_t v36 = v4;
  MEMORY[0x1F4188790](v4);
  sub_1B299B6D0();
  uint64_t v34 = v6;
  sub_1B29A3EB4(&qword_1E9C41748);
  sub_1B299D278();
  uint64_t v32 = v8;
  uint64_t v33 = v7;
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  uint64_t v31 = v9;
  sub_1B29A3EB4(&qword_1E9C41750);
  sub_1B299D278();
  uint64_t v29 = v11;
  uint64_t v30 = v10;
  MEMORY[0x1F4188790](v10);
  sub_1B299E4A0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_1B29A3EB4(&qword_1E9C41758);
  sub_1B299D278();
  uint64_t v28 = v16;
  MEMORY[0x1F4188790](v17);
  sub_1B29A0498();
  sub_1B29A3EB4(&qword_1E9C41760);
  sub_1B299D278();
  uint64_t v37 = v19;
  uint64_t v38 = v18;
  MEMORY[0x1F4188790](v18);
  sub_1B299E4A0();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = *(unsigned __int8 *)(v1 + 32);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2C60D68();
  sub_1B2E83A38();
  switch(v23)
  {
    case 1:
      sub_1B2C60E98();
      sub_1B29A0B34();
      sub_1B2C60EE4();
      sub_1B2E836D8();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v14, v30);
      goto LABEL_9;
    case 2:
      sub_1B2C60E00();
      uint64_t v25 = v31;
      sub_1B29A0B34();
      sub_1B2C60E4C();
      uint64_t v26 = v33;
      sub_1B2E836D8();
      uint64_t v27 = v32;
      goto LABEL_8;
    case 3:
      sub_1B2C60DB4();
      uint64_t v25 = v34;
      sub_1B29A0B34();
      uint64_t v26 = v36;
      sub_1B2E83688();
      if (!v39) {
        sub_1B2E83688();
      }
      uint64_t v27 = v35;
LABEL_8:
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
LABEL_9:
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v22, v2);
      break;
    default:
      sub_1B2C60F30();
      sub_1B2E83618();
      sub_1B2C60F7C();
      sub_1B2E836D8();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v2, v15);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v22, v38);
      break;
  }
  return result;
}

unint64_t sub_1B2C60D68()
{
  unint64_t result = qword_1E9C41768;
  if (!qword_1E9C41768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41768);
  }
  return result;
}

unint64_t sub_1B2C60DB4()
{
  unint64_t result = qword_1E9C41770;
  if (!qword_1E9C41770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41770);
  }
  return result;
}

unint64_t sub_1B2C60E00()
{
  unint64_t result = qword_1E9C41778;
  if (!qword_1E9C41778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41778);
  }
  return result;
}

unint64_t sub_1B2C60E4C()
{
  unint64_t result = qword_1E9C41780;
  if (!qword_1E9C41780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41780);
  }
  return result;
}

unint64_t sub_1B2C60E98()
{
  unint64_t result = qword_1E9C41788;
  if (!qword_1E9C41788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41788);
  }
  return result;
}

unint64_t sub_1B2C60EE4()
{
  unint64_t result = qword_1E9C41790;
  if (!qword_1E9C41790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41790);
  }
  return result;
}

unint64_t sub_1B2C60F30()
{
  unint64_t result = qword_1E9C41798;
  if (!qword_1E9C41798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41798);
  }
  return result;
}

unint64_t sub_1B2C60F7C()
{
  unint64_t result = qword_1E9C417A0;
  if (!qword_1E9C417A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C417A0);
  }
  return result;
}

uint64_t InferenceServerErrorInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = sub_1B29A3EB4(&qword_1E9C417A8);
  sub_1B299D278();
  uint64_t v48 = v3;
  MEMORY[0x1F4188790](v4);
  sub_1B299B6D0();
  uint64_t v50 = v5;
  sub_1B29A3EB4(&qword_1E9C417B0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B299B6D0();
  sub_1B29A3EB4(&qword_1E9C417B8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v7);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C417C0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v8);
  sub_1B29A0498();
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C417C8);
  sub_1B299D278();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1B299E4A0();
  uint64_t v15 = v14 - v13;
  uint64_t v51 = (uint64_t)a1;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2C60D68();
  sub_1B2E83A18();
  if (v56) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v51);
  }
  uint64_t v57 = v11;
  uint64_t v16 = sub_1B2E835F8();
  if (!*(void *)(v16 + 16))
  {
LABEL_7:
    uint64_t v24 = sub_1B2E83288();
    swift_allocError();
    uint64_t v26 = v25;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v26 = &type metadata for InferenceServerErrorInfo;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, *MEMORY[0x1E4FBBA70], v24);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v15, v9);
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v51);
  }
  uint64_t v46 = v9;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 32);
  sub_1B29B142C(1);
  uint64_t v19 = v18;
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v19 != v21 >> 1)
  {
    uint64_t v9 = v46;
    goto LABEL_7;
  }
  char v45 = v17;
  uint64_t v22 = v17;
  uint64_t v23 = a2;
  switch(v22)
  {
    case 1:
      sub_1B2C60E98();
      sub_1B2C621AC();
      sub_1B2C617CC();
      sub_1B2C621CC();
      sub_1B29A4668();
      v35();
      swift_unknownObjectRelease();
      uint64_t v36 = sub_1B2999A34();
      v37(v36);
      uint64_t v31 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v32 = 1;
      break;
    case 2:
      LOBYTE(v52) = 2;
      sub_1B2C60E00();
      sub_1B2C621AC();
      sub_1B2C61780();
      sub_1B2C621CC();
      sub_1B29A4668();
      v38();
      swift_unknownObjectRelease();
      uint64_t v39 = sub_1B2999A34();
      v40(v39);
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v32 = v52;
      uint64_t v31 = v53;
      break;
    case 3:
      sub_1B2C60DB4();
      sub_1B2C621AC();
      uint64_t v32 = sub_1B2E83568();
      uint64_t v31 = v41;
      uint64_t v33 = sub_1B2E83568();
      uint64_t v34 = v42;
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v50, v47);
      swift_unknownObjectRelease();
      uint64_t v43 = sub_1B299F898();
      v44(v43);
      uint64_t v23 = a2;
      break;
    default:
      LOBYTE(v52) = 0;
      sub_1B2C60F30();
      sub_1B2C621AC();
      sub_1B2C61818();
      sub_1B2E835B8();
      sub_1B29A4668();
      v28();
      swift_unknownObjectRelease();
      uint64_t v29 = sub_1B2999A34();
      v30(v29);
      uint64_t v32 = v52;
      uint64_t v31 = v53;
      uint64_t v33 = v54;
      uint64_t v34 = v55;
      break;
  }
  *(void *)uint64_t v23 = v32;
  *(void *)(v23 + 8) = v31;
  *(void *)(v23 + 16) = v33;
  *(void *)(v23 + 24) = v34;
  *(unsigned char *)(v23 + 32) = v45;
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v51);
}

uint64_t sub_1B2C6168C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InferenceServerErrorInfo.init(from:)(a1, a2);
}

uint64_t sub_1B2C616A4(void *a1)
{
  return InferenceServerErrorInfo.encode(to:)(a1);
}

uint64_t sub_1B2C616BC()
{
  return sub_1B2C5FCC8((uint64_t)&type metadata for InferenceServiceInstanceRequestError, &qword_1E9C41860);
}

uint64_t sub_1B2C616E4()
{
  return sub_1B2C5FE4C();
}

uint64_t sub_1B2C616F0()
{
  return sub_1B2C5FCC8((uint64_t)&unk_1F0AD6A18, &qword_1E9C41888);
}

uint64_t sub_1B2C61720()
{
  return sub_1B2C5FCFC();
}

uint64_t sub_1B2C61740()
{
  return sub_1B2C5FCC8((uint64_t)&type metadata for InferenceServiceInstanceBuilderError, &qword_1E9C41880);
}

uint64_t sub_1B2C61768()
{
  return sub_1B2C5FE10();
}

uint64_t sub_1B2C61774@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2C60120(a1);
}

unint64_t sub_1B2C61780()
{
  unint64_t result = qword_1E9C417D0;
  if (!qword_1E9C417D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C417D0);
  }
  return result;
}

unint64_t sub_1B2C617CC()
{
  unint64_t result = qword_1E9C417D8;
  if (!qword_1E9C417D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C417D8);
  }
  return result;
}

unint64_t sub_1B2C61818()
{
  unint64_t result = qword_1E9C417E0;
  if (!qword_1E9C417E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C417E0);
  }
  return result;
}

uint64_t destroy for InferenceServerErrorInfo(uint64_t a1)
{
  return sub_1B2C4A32C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for InferenceServerErrorInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1B2C49E68(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for InferenceServerErrorInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1B2C49E68(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1B2C4A32C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for InferenceServerErrorInfo(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1B2C4A32C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceServerErrorInfo(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for InferenceServerErrorInfo()
{
  return &type metadata for InferenceServerErrorInfo;
}

unsigned char *storeEnumTagSinglePayload for InferenceServerErrorInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C61AB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceServerErrorInfo.CodingKeys()
{
  return &type metadata for InferenceServerErrorInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceServerErrorInfo.RequestErrorCodingKeys()
{
  return &type metadata for InferenceServerErrorInfo.RequestErrorCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceServerErrorInfo.LoadInstanceErrorCodingKeys()
{
  return &type metadata for InferenceServerErrorInfo.LoadInstanceErrorCodingKeys;
}

unsigned char *_s20IntelligencePlatform24InferenceServerErrorInfoO22RequestErrorCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2C61BB0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceServerErrorInfo.EntitlementCheckErrorCodingKeys()
{
  return &type metadata for InferenceServerErrorInfo.EntitlementCheckErrorCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InferenceServerErrorInfo.OtherErrorCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C61CB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceServerErrorInfo.OtherErrorCodingKeys()
{
  return &type metadata for InferenceServerErrorInfo.OtherErrorCodingKeys;
}

unint64_t sub_1B2C61CF0()
{
  unint64_t result = qword_1E9C417E8;
  if (!qword_1E9C417E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C417E8);
  }
  return result;
}

unint64_t sub_1B2C61D40()
{
  unint64_t result = qword_1E9C417F0;
  if (!qword_1E9C417F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C417F0);
  }
  return result;
}

unint64_t sub_1B2C61D90()
{
  unint64_t result = qword_1E9C417F8;
  if (!qword_1E9C417F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C417F8);
  }
  return result;
}

unint64_t sub_1B2C61DE0()
{
  unint64_t result = qword_1E9C41800;
  if (!qword_1E9C41800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41800);
  }
  return result;
}

unint64_t sub_1B2C61E30()
{
  unint64_t result = qword_1E9C41808;
  if (!qword_1E9C41808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41808);
  }
  return result;
}

unint64_t sub_1B2C61E80()
{
  unint64_t result = qword_1E9C41810;
  if (!qword_1E9C41810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41810);
  }
  return result;
}

unint64_t sub_1B2C61ED0()
{
  unint64_t result = qword_1E9C41818;
  if (!qword_1E9C41818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41818);
  }
  return result;
}

unint64_t sub_1B2C61F20()
{
  unint64_t result = qword_1E9C41820;
  if (!qword_1E9C41820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41820);
  }
  return result;
}

unint64_t sub_1B2C61F70()
{
  unint64_t result = qword_1E9C41828;
  if (!qword_1E9C41828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41828);
  }
  return result;
}

unint64_t sub_1B2C61FC0()
{
  unint64_t result = qword_1E9C41830;
  if (!qword_1E9C41830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41830);
  }
  return result;
}

unint64_t sub_1B2C62010()
{
  unint64_t result = qword_1E9C41838;
  if (!qword_1E9C41838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41838);
  }
  return result;
}

unint64_t sub_1B2C62060()
{
  unint64_t result = qword_1E9C41840;
  if (!qword_1E9C41840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41840);
  }
  return result;
}

unint64_t sub_1B2C620B0()
{
  unint64_t result = qword_1E9C41848;
  if (!qword_1E9C41848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41848);
  }
  return result;
}

unint64_t sub_1B2C62100()
{
  unint64_t result = qword_1E9C41850;
  if (!qword_1E9C41850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41850);
  }
  return result;
}

unint64_t sub_1B2C62150()
{
  unint64_t result = qword_1E9C41858;
  if (!qword_1E9C41858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41858);
  }
  return result;
}

id sub_1B2C6219C(id result)
{
  if ((unint64_t)result >= 3) {
    return result;
  }
  return result;
}

uint64_t sub_1B2C621AC()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B2C621CC()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2C621EC()
{
  sub_1B2C62360(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1B2C62224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(os_unfair_lock_s **)(v4 + 24);
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  *(void *)(*(void *)(v4 + 16) + 24) = a2;
  swift_unknownObjectWeakAssign();
  os_unfair_lock_unlock(v5);
  return swift_unknownObjectRelease();
}

uint64_t sub_1B2C622A0()
{
  uint64_t v1 = v0;
  type metadata accessor for InferenceServerLifecycleManagerNoOp.DelegateHolder();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_1B29A3EB4(&qword_1EB7E3B08);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1B29E5380(v2);
  return v1;
}

uint64_t type metadata accessor for InferenceServerLifecycleManagerNoOp()
{
  return self;
}

uint64_t type metadata accessor for InferenceServerLifecycleManagerNoOp.DelegateHolder()
{
  return self;
}

uint64_t sub_1B2C62360(uint64_t a1)
{
  return a1;
}

uint64_t static InferenceServiceCachePolicy.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) != 1) {
    return (v4 & 1) == 0 && v2 == v3;
  }
  BOOL v5 = *(void *)&v3 == 0;
  if (v3 == 0.0) {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v6 = 0;
  }
  if (v5) {
    unsigned int v4 = 0;
  }
  if (v2 == 0.0) {
    return v6;
  }
  else {
    return v4;
  }
}

ValueMetadata *type metadata accessor for InferenceServiceCachePolicy()
{
  return &type metadata for InferenceServiceCachePolicy;
}

uint64_t InferenceServiceConfig.instanceId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InferenceServiceConfig.definitionId.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InferenceServiceConfig.entitlementGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InferenceServiceConfig.parameters.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t sub_1B2C62490(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65636E6174736E69 && a2 == 0xEA00000000006449;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6974696E69666564 && a2 == 0xEC00000064496E6FLL;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001B2E9DF90 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v8 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v8) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_1B2C62664(char a1)
{
  unint64_t result = 0x65636E6174736E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6974696E69666564;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x6574656D61726170;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2C62708()
{
  return sub_1B2C62664(*v0);
}

uint64_t sub_1B2C62714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C62490(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C62744@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B29E8E24();
  *a1 = result;
  return result;
}

uint64_t sub_1B2C62774(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C627C8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t InferenceServiceConfig.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v14[1] = *(void *)(a2 + 24);
  uint64_t v14[2] = v4;
  type metadata accessor for InferenceServiceConfig.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1B2E83718();
  sub_1B299D31C();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v14 - v9;
  sub_1B29AEC7C(a1, a1[3]);
  uint64_t v11 = v14[3];
  sub_1B2E83A38();
  char v18 = 0;
  uint64_t v12 = v14[4];
  sub_1B2E83688();
  if (!v12)
  {
    char v17 = 1;
    sub_1B2E83688();
    v14[5] = *(void *)(v11 + 32);
    char v16 = 2;
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2C62E24(&qword_1E9C3F888);
    sub_1B2E83668();
    char v15 = 3;
    sub_1B2E836D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

uint64_t type metadata accessor for InferenceServiceConfig.CodingKeys()
{
  return sub_1B29A1278();
}

uint64_t InferenceServiceConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v32 = a4;
  sub_1B299D31C();
  uint64_t v31 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1B299E4A0();
  uint64_t v34 = v10 - v9;
  type metadata accessor for InferenceServiceConfig.CodingKeys();
  swift_getWitnessTable();
  uint64_t v37 = sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v33 = v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v29 - v13;
  uint64_t v35 = a3;
  uint64_t v15 = type metadata accessor for InferenceServiceConfig();
  sub_1B299D31C();
  uint64_t v30 = v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (void *)((char *)v29 - v18);
  sub_1B29AEC7C(a1, a1[3]);
  uint64_t v36 = v14;
  uint64_t v20 = v38;
  sub_1B2E83A18();
  if (v20) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  uint64_t v38 = v15;
  uint64_t v21 = v34;
  char v43 = 0;
  *uint64_t v19 = sub_1B2E83568();
  v19[1] = v22;
  char v42 = 1;
  v19[2] = sub_1B2E83568();
  void v19[3] = v23;
  sub_1B29A3EB4(&qword_1EB7E3B30);
  char v41 = 2;
  sub_1B2C62E24(&qword_1EB7E2BC8);
  sub_1B2E83548();
  v29[1] = 0;
  v19[4] = v39;
  char v40 = 3;
  sub_1B2E835B8();
  uint64_t v24 = sub_1B29A2DDC();
  v25(v24);
  uint64_t v26 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))((char *)v19 + *(int *)(v38 + 44), v21, a2);
  uint64_t v27 = v30;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v30 + 16))(v32, v19, v26);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v27 + 8))(v19, v26);
}

uint64_t type metadata accessor for InferenceServiceConfig()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2C62E24(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(&qword_1EB7E3B30);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2C62E88(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1B2E837A8(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (char v8 = sub_1B2E837A8(), result = 0, (v8 & 1) != 0))
    {
      uint64_t v9 = (void *)a1[4];
      uint64_t v10 = (void *)a2[4];
      if (v9)
      {
        if (v10 && (sub_1B2AA6868(v9, v10) & 1) != 0) {
          return 1;
        }
      }
      else if (!v10)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B2C62F28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65636E6174736E69 && a2 == 0xEA00000000006449;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6974696E69666564 && a2 == 0xEC00000064496E6FLL;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001B2E9DF90)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B2C6309C(char a1)
{
  if (!a1) {
    return 0x65636E6174736E69;
  }
  if (a1 == 1) {
    return 0x6974696E69666564;
  }
  return 0xD000000000000011;
}

uint64_t sub_1B2C63104(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C418A0);
  sub_1B299D31C();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1B299E4A0();
  uint64_t v11 = v10 - v9;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2C64434();
  sub_1B2E83A38();
  v13[0] = 0;
  sub_1B2C646F4();
  if (!v2)
  {
    v13[0] = 1;
    sub_1B2C646F4();
    sub_1B2C64480(v3 + 32, (uint64_t)v14);
    sub_1B2C64480((uint64_t)v14, (uint64_t)v13);
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2C62E24(&qword_1E9C3F888);
    sub_1B2E83668();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
}

uint64_t sub_1B2C63298@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C37B30);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2C64434();
  sub_1B2E83A18();
  if (v2) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  uint64_t v6 = sub_1B2E83568();
  uint64_t v8 = v7;
  uint64_t v16 = v6;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1B2E83568();
  uint64_t v11 = v10;
  uint64_t v15 = v9;
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2C62E24(&qword_1EB7E2BC8);
  swift_bridgeObjectRetain();
  sub_1B2E83548();
  uint64_t v12 = sub_1B2C646DC();
  v13(v12);
  swift_bridgeObjectRetain();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v16;
  a2[1] = v8;
  a2[2] = v15;
  a2[3] = v11;
  a2[4] = v17;
  return result;
}

uint64_t sub_1B2C63520@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return InferenceServiceConfig.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1B2C63540(void *a1, uint64_t a2)
{
  return InferenceServiceConfig.encode(to:)(a1, a2);
}

uint64_t sub_1B2C63558(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1B2C635B8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B2C63660(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 40) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v11 = *v12;
    v11[1] = v12[1];
    uint64_t v13 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v13 = *v14;
    uint64_t v15 = ((unint64_t)v13 + v6 + 8) & ~v6;
    uint64_t v16 = ((unint64_t)v14 + v6 + 8) & ~v6;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v15, v16, v4);
  }
  return a1;
}

uint64_t sub_1B2C637BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_1B2C63850(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = (void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v12 = ((unint64_t)v7 + v11 + 8) & ~v11;
  uint64_t v13 = ((unint64_t)v8 + v11 + 8) & ~v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v12, v13, v9);
  return a1;
}

void *sub_1B2C63930(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v8 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 24))(((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

_OWORD *sub_1B2C63A28(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  unint64_t v6 = (void *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

void *sub_1B2C63AC0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 40))(((unint64_t)v9 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), ((unint64_t)v10 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_1B2C63B90(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 40) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0) {
        return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7, v6, v4);
      }
      unint64_t v16 = *((void *)a1 + 1);
      if (v16 >= 0xFFFFFFFF) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_1B2C63D30(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 40) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1B2C63F8CLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v20 = (((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10;
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v20, a2, v8, v6);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

unsigned char *sub_1B2C63FB4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C64080);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1B2C640A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C640C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C640E0()
{
  return swift_getWitnessTable();
}

uint64_t destroy for ExecStep()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ExecStep(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InferenceServiceConfigBase(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExecStep(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InferenceServiceConfigBase()
{
  return &type metadata for InferenceServiceConfigBase;
}

uint64_t sub_1B2C64288()
{
  return sub_1B2C6309C(*v0);
}

uint64_t sub_1B2C64290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C62F28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C642B8(uint64_t a1)
{
  unint64_t v2 = sub_1B2C64434();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C642F4(uint64_t a1)
{
  unint64_t v2 = sub_1B2C64434();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B2C64334@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B2C63298(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B2C6437C(void *a1)
{
  return sub_1B2C63104(a1);
}

unint64_t sub_1B2C643B8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B2C5F544();
  unint64_t result = sub_1B2C643E8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B2C643E8()
{
  unint64_t result = qword_1E9C41898;
  if (!qword_1E9C41898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41898);
  }
  return result;
}

unint64_t sub_1B2C64434()
{
  unint64_t result = qword_1E9C376B8;
  if (!qword_1E9C376B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C376B8);
  }
  return result;
}

uint64_t sub_1B2C64480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C418A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for InferenceServiceConfigBase.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C645B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceServiceConfigBase.CodingKeys()
{
  return &type metadata for InferenceServiceConfigBase.CodingKeys;
}

unint64_t sub_1B2C645F0()
{
  unint64_t result = qword_1E9C418B0;
  if (!qword_1E9C418B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C418B0);
  }
  return result;
}

unint64_t sub_1B2C64640()
{
  unint64_t result = qword_1E9C376C8;
  if (!qword_1E9C376C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C376C8);
  }
  return result;
}

unint64_t sub_1B2C64690()
{
  unint64_t result = qword_1E9C376C0;
  if (!qword_1E9C376C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C376C0);
  }
  return result;
}

uint64_t sub_1B2C646DC()
{
  return v0;
}

uint64_t sub_1B2C646F4()
{
  return sub_1B2E83688();
}

uint64_t InferenceServiceContextProtocol.model(for:in:configuration:)()
{
  sub_1B299B3BC();
  v1[8] = v2;
  v1[9] = v0;
  v1[6] = v3;
  v1[7] = v4;
  v1[4] = v5;
  v1[5] = v6;
  v1[2] = v7;
  v1[3] = v8;
  v1[10] = *(void *)(v4 - 8);
  v1[11] = sub_1B29A4C44();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B2C647C4()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v5 = (void *)v0[6];
  uint64_t v4 = v0[7];
  sub_1B2C652CC(v4, v0[8]);
  type metadata accessor for InferenceMLModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[12] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1B2C648E4;
  return InferenceMLModel.__allocating_init<A>(domainId:assetId:configuration:context:)();
}

uint64_t sub_1B2C648E4(uint64_t a1)
{
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *id v6 = v5;
  uint64_t v7 = *v2;
  sub_1B299F388();
  *uint64_t v8 = v7;
  *(void *)(v5 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1B299F2A4();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
  else
  {
    swift_task_dealloc();
    char v12 = *(uint64_t (**)(uint64_t))(v7 + 8);
    return v12(a1);
  }
}

uint64_t sub_1B2C64A0C()
{
  sub_1B299B3BC();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

uint64_t InferenceServiceRunContext.run<A>(with:on:interface:parentEventId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 120) = a8;
  *(void *)(v9 + 128) = v8;
  *(void *)(v9 + 104) = a5;
  *(void *)(v9 + 112) = a7;
  *(unsigned char *)(v9 + 304) = a6;
  *(void *)(v9 + 88) = a2;
  *(void *)(v9 + 96) = a4;
  *(void *)(v9 + 80) = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v9 + 136) = AssociatedTypeWitness;
  *(void *)(v9 + 144) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v9 + 152) = sub_1B29A4C44();
  uint64_t v12 = type metadata accessor for InferenceMessageRequest();
  *(void *)(v9 + 160) = v12;
  sub_1B299D2A8(v12);
  *(void *)(v9 + 168) = v13;
  *(void *)(v9 + 176) = sub_1B29A4C44();
  *(void *)(v9 + 184) = swift_getAssociatedTypeWitness();
  uint64_t v14 = type metadata accessor for InferenceMessageResponse();
  *(void *)(v9 + 192) = v14;
  sub_1B299D2A8(v14);
  *(void *)(v9 + 200) = v15;
  *(void *)(v9 + 208) = swift_task_alloc();
  *(void *)(v9 + 216) = swift_task_alloc();
  *(_OWORD *)(v9 + 224) = *(_OWORD *)a3;
  *(void *)(v9 + 240) = *(void *)(a3 + 16);
  *(_OWORD *)(v9 + 248) = *(_OWORD *)(a3 + 24);
  *(void *)(v9 + 264) = *(void *)(a3 + 40);
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v16, v17, v18);
}

uint64_t sub_1B2C64C2C()
{
  char v1 = *(unsigned char *)(v0 + 304);
  sub_1B2C6522C();
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v2 = (uint64_t *)(v3 + 24);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(v0 + 104);
    uint64_t v3 = *(void *)(v0 + 128);
  }
  uint64_t v18 = *v2;
  uint64_t v5 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 264);
  long long v13 = *(_OWORD *)(v0 + 224);
  long long v14 = *(_OWORD *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v7 = *(void *)(v0 + 152);
  uint64_t v8 = *(void *)(v0 + 136);
  uint64_t v17 = *(void *)(v0 + 120);
  uint64_t v15 = *(void *)(v0 + 176);
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v9 = *(void *)(v0 + 88);
  *(void *)(v0 + 272) = *(void *)(*(void *)(v3 + 16) + 16);
  swift_unownedRetainStrong();
  *(_OWORD *)(v0 + 16) = v13;
  *(_OWORD *)(v0 + 32) = v14;
  *(void *)(v0 + 48) = v5;
  *(void *)(v0 + 56) = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, v9, v8);
  sub_1B2C4E428(v7, v18, 0, v8, v16, v17, v15);
  sub_1B2C65218((void *)(v0 + 64));
  uint64_t v10 = *(void *)(v0 + 64);
  *(void *)(v0 + 280) = v10;
  *(void *)(v0 + 72) = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1B2C64DD8;
  return sub_1B2C58E80();
}

uint64_t sub_1B2C64DD8()
{
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v3 = v2;
  uint64_t v5 = v4[22];
  uint64_t v6 = v4[21];
  uint64_t v7 = v4[20];
  uint64_t v8 = *v1;
  sub_1B299F388();
  *uint64_t v9 = v8;
  *(void *)(v10 + 296) = v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1B2C64F58()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[25];
  uint64_t v5 = v0[23];
  uint64_t v6 = v0[10];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  sub_1B2C707A0(v1, v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v7();
}

uint64_t sub_1B2C65044()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

void sub_1B2C650CC(char a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(os_unfair_lock_s **)(v3 + 24);
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  *(unsigned char *)(*(void *)(v3 + 16) + 16) = a1;
  os_unfair_lock_unlock(v4);
}

uint64_t sub_1B2C65130(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1[1];
  *(void *)(v1 + 16) = *a1;
  *(void *)(v1 + 24) = v3;
  swift_unownedRetain();
  swift_release();
  type metadata accessor for InferenceServiceContextMemberVariables.BoolClass();
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = 1;
  sub_1B29A3EB4(&qword_1E9C372C8);
  swift_allocObject();
  *(void *)(v2 + 32) = sub_1B29E5380(v4);
  return v2;
}

uint64_t InferenceServiceContextMemberVariables.deinit()
{
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t InferenceServiceContextMemberVariables.__deallocating_deinit()
{
  InferenceServiceContextMemberVariables.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2C65218@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + 16) + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C6522C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 32);
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 24);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1B299F8B0();
  LODWORD(v1) = *(unsigned __int8 *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_unlock(v2);
  uint64_t result = swift_release();
  if (v1 != 1)
  {
    uint64_t result = sub_1B29A1DAC();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B2C652CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((*(uint64_t (**)(void))(a2 + 8))() + 32);
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + 24);
  os_unfair_lock_lock(v3);
  sub_1B299F8B0();
  LODWORD(v2) = *(unsigned __int8 *)(*(void *)(v2 + 16) + 16);
  os_unfair_lock_unlock(v3);
  uint64_t result = swift_release();
  if (v2 != 1)
  {
    uint64_t result = sub_1B29A1DAC();
    __break(1u);
  }
  return result;
}

uint64_t InferenceServiceContextProtocol.viewService()()
{
  if (qword_1EB7E3F60 != -1) {
    swift_once();
  }
  return qword_1EB7E5290();
}

uint64_t InferenceServiceContextProtocol.asset(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[18] = a7;
  v8[19] = v7;
  v8[16] = a5;
  v8[17] = a6;
  v8[14] = a3;
  v8[15] = a4;
  v8[12] = a1;
  v8[13] = a2;
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B2C65410()
{
  uint64_t v16 = v0;
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[17];
  uint64_t v3 = type metadata accessor for AssetRegistry();
  uint64_t v4 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v1) + 16);
  swift_unownedRetainStrong();
  swift_release();
  sub_1B29C3B84(v4 + 32, (uint64_t)(v0 + 2));
  swift_release();
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = sub_1B29AEC7C(v0 + 2, v5);
  v0[10] = v5;
  uint64_t v8 = *(void *)(v6 + 8);
  v0[11] = v8;
  uint64_t v9 = sub_1B29D1C70(v0 + 7);
  uint64_t v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16);
  v10(v9, v7, v5);
  v14[0] = (uint64_t)sub_1B29D5F00;
  v14[1] = 0;
  char v15 = 0;
  uint64_t v11 = sub_1B29A4C44();
  v10((uint64_t *)v11, v9, v5);
  v0[20] = sub_1B29E50B4(v11, v14, v3, v5, v8);
  swift_task_dealloc();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)(v0 + 7));
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)(v0 + 2));
  uint64_t v12 = (void *)swift_task_alloc();
  v0[21] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1B2C65600;
  return AssetRegistry.asset(for:in:)();
}

uint64_t sub_1B2C65600()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1B299F2A4();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_release();
    sub_1B299AD7C();
    return v10();
  }
}

uint64_t sub_1B2C65704()
{
  sub_1B299B3BC();
  swift_release();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2C65760(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1[1];
  v6[0] = *a1;
  v6[1] = v3;
  type metadata accessor for InferenceServiceContextMemberVariables();
  uint64_t v4 = swift_allocObject();
  sub_1B2C65130(v6);
  *(void *)(v2 + 16) = v4;
  return v2;
}

uint64_t InferenceServiceInitContext.__deallocating_deinit()
{
  return sub_1B2C65928();
}

uint64_t InferenceServiceRunContext._vars.getter()
{
  return swift_retain();
}

uint64_t sub_1B2C657C4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1[1];
  v8[0] = *a1;
  v8[1] = v5;
  type metadata accessor for InferenceServiceContextMemberVariables();
  uint64_t v6 = swift_allocObject();
  sub_1B2C65130(v8);
  *(void *)(v3 + 16) = v6;
  *(void *)(v3 + 24) = a2;
  return v3;
}

uint64_t InferenceServiceRunContext.parentEventId.getter()
{
  return *(void *)(v0 + 24);
}

void InferenceServiceRunContext.provide<A>(feedback:for:using:)(void *a1, uint64_t a2)
{
  sub_1B2C6522C();
  id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedbackService()), sel_init);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  FeedbackService.record<A>(feedback:for:)(a1, a2, 0);
}

uint64_t InferenceServiceRunContext.deinit()
{
  swift_release();
  return v0;
}

uint64_t InferenceServiceRunContext.__deallocating_deinit()
{
  return sub_1B2C65928();
}

uint64_t sub_1B2C65928()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2C6596C()
{
  return InferenceServiceRunContext._vars.getter();
}

uint64_t type metadata accessor for InferenceServiceContextMemberVariables()
{
  return self;
}

uint64_t method lookup function for InferenceServiceContextMemberVariables(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceServiceContextMemberVariables);
}

uint64_t type metadata accessor for InferenceServiceContextMemberVariables.BoolClass()
{
  return self;
}

uint64_t dispatch thunk of InferenceServiceContextProtocol._vars.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for InferenceServiceInitContext()
{
  return self;
}

uint64_t method lookup function for InferenceServiceInitContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceServiceInitContext);
}

uint64_t type metadata accessor for InferenceServiceRunContext()
{
  return self;
}

uint64_t method lookup function for InferenceServiceRunContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceServiceRunContext);
}

ValueMetadata *type metadata accessor for InferenceServiceRunContextMemberVariables()
{
  return &type metadata for InferenceServiceRunContextMemberVariables;
}

uint64_t dispatch thunk of static InferenceServiceDefinition.definitionId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of static InferenceServiceDefinition.buildRunner(config:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 64) + **(int **)(a5 + 64));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1B2B3D97C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t static InferenceServiceDefinitionList.definitions.getter()
{
  sub_1B29A3EB4((uint64_t *)&unk_1E9C37B80);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B2EC89A0;
  uint64_t v1 = sub_1B29A3EB4(&qword_1E9C378B0);
  uint64_t v2 = sub_1B299DB98();
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = sub_1B2C65C94();
  *(void *)(v0 + 32) = v2;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C378D0);
  uint64_t v4 = sub_1B299DB98();
  *(void *)(v0 + 96) = v3;
  *(void *)(v0 + 104) = sub_1B2C65F80();
  *(void *)(v0 + 72) = v4;
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C378C0);
  uint64_t v6 = sub_1B299DB98();
  *(void *)(v0 + 136) = v5;
  *(void *)(v0 + 144) = sub_1B2C662B0();
  *(void *)(v0 + 112) = v6;
  return v0;
}

unint64_t sub_1B2C65C94()
{
  unint64_t result = qword_1E9C378A8;
  if (!qword_1E9C378A8)
  {
    sub_1B29C3588(&qword_1E9C378B0);
    sub_1B2C65DB8();
    sub_1B2C65E04();
    sub_1B2C6646C(&qword_1E9C377F8, (void (*)(uint64_t))type metadata accessor for PersonMatcherInferenceInterface.Output);
    sub_1B2C6646C(&qword_1E9C377F0, (void (*)(uint64_t))type metadata accessor for PersonMatcherInferenceInterface.Output);
    sub_1B2C65E50();
    sub_1B2C65E9C();
    sub_1B2C65EE8();
    sub_1B2C65F34();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C378A8);
  }
  return result;
}

unint64_t sub_1B2C65DB8()
{
  unint64_t result = qword_1E9C377C8;
  if (!qword_1E9C377C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C377C8);
  }
  return result;
}

unint64_t sub_1B2C65E04()
{
  unint64_t result = qword_1E9C377C0;
  if (!qword_1E9C377C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C377C0);
  }
  return result;
}

unint64_t sub_1B2C65E50()
{
  unint64_t result = qword_1E9C377E8;
  if (!qword_1E9C377E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C377E8);
  }
  return result;
}

unint64_t sub_1B2C65E9C()
{
  unint64_t result = qword_1E9C377E0;
  if (!qword_1E9C377E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C377E0);
  }
  return result;
}

unint64_t sub_1B2C65EE8()
{
  unint64_t result = qword_1E9C377D8;
  if (!qword_1E9C377D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C377D8);
  }
  return result;
}

unint64_t sub_1B2C65F34()
{
  unint64_t result = qword_1E9C377D0;
  if (!qword_1E9C377D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C377D0);
  }
  return result;
}

unint64_t sub_1B2C65F80()
{
  unint64_t result = qword_1E9C378C8;
  if (!qword_1E9C378C8)
  {
    sub_1B29C3588(&qword_1E9C378D0);
    sub_1B2C66050();
    sub_1B2C6609C();
    sub_1B2C660E8();
    sub_1B2C66134();
    sub_1B2C66180();
    sub_1B2C661CC();
    sub_1B2C66218();
    sub_1B2C66264();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C378C8);
  }
  return result;
}

unint64_t sub_1B2C66050()
{
  unint64_t result = qword_1E9C37700;
  if (!qword_1E9C37700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37700);
  }
  return result;
}

unint64_t sub_1B2C6609C()
{
  unint64_t result = qword_1E9C376F8;
  if (!qword_1E9C376F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C376F8);
  }
  return result;
}

unint64_t sub_1B2C660E8()
{
  unint64_t result = qword_1E9C37730[0];
  if (!qword_1E9C37730[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C37730);
  }
  return result;
}

unint64_t sub_1B2C66134()
{
  unint64_t result = qword_1E9C37728;
  if (!qword_1E9C37728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37728);
  }
  return result;
}

unint64_t sub_1B2C66180()
{
  unint64_t result = qword_1E9C37720;
  if (!qword_1E9C37720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37720);
  }
  return result;
}

unint64_t sub_1B2C661CC()
{
  unint64_t result = qword_1E9C37718;
  if (!qword_1E9C37718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37718);
  }
  return result;
}

unint64_t sub_1B2C66218()
{
  unint64_t result = qword_1E9C37710;
  if (!qword_1E9C37710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37710);
  }
  return result;
}

unint64_t sub_1B2C66264()
{
  unint64_t result = qword_1E9C37708;
  if (!qword_1E9C37708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37708);
  }
  return result;
}

unint64_t sub_1B2C662B0()
{
  unint64_t result = qword_1E9C378B8;
  if (!qword_1E9C378B8)
  {
    sub_1B29C3588(&qword_1E9C378C0);
    sub_1B2C663D4();
    sub_1B2C66420();
    sub_1B2C6646C(&qword_1E9C37940, (void (*)(uint64_t))type metadata accessor for LocationEmbedderInferenceInterface.Output);
    sub_1B2C6646C(&qword_1E9C37938, (void (*)(uint64_t))type metadata accessor for LocationEmbedderInferenceInterface.Output);
    sub_1B2C664B4();
    sub_1B2C66500();
    sub_1B2C6654C();
    sub_1B2C66598();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C378B8);
  }
  return result;
}

unint64_t sub_1B2C663D4()
{
  unint64_t result = qword_1E9C37910;
  if (!qword_1E9C37910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37910);
  }
  return result;
}

unint64_t sub_1B2C66420()
{
  unint64_t result = qword_1E9C37908;
  if (!qword_1E9C37908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37908);
  }
  return result;
}

uint64_t sub_1B2C6646C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2C664B4()
{
  unint64_t result = qword_1E9C37930;
  if (!qword_1E9C37930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37930);
  }
  return result;
}

unint64_t sub_1B2C66500()
{
  unint64_t result = qword_1E9C37928;
  if (!qword_1E9C37928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37928);
  }
  return result;
}

unint64_t sub_1B2C6654C()
{
  unint64_t result = qword_1E9C37920;
  if (!qword_1E9C37920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37920);
  }
  return result;
}

unint64_t sub_1B2C66598()
{
  unint64_t result = qword_1E9C37918;
  if (!qword_1E9C37918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37918);
  }
  return result;
}

uint64_t static InferenceServiceDefinitionList.localOnlyDefinitions.getter()
{
  sub_1B29A3EB4(&qword_1E9C37B78);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B2EC89A0;
  uint64_t v1 = sub_1B29A3EB4(&qword_1E9C378F0);
  uint64_t v2 = sub_1B299DB98();
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = sub_1B2C666DC(&qword_1E9C378E8, &qword_1E9C378F0);
  *(void *)(v0 + 32) = v2;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C37900);
  uint64_t v4 = sub_1B299DB98();
  *(void *)(v0 + 96) = v3;
  *(void *)(v0 + 104) = sub_1B2C666DC(&qword_1E9C378F8, &qword_1E9C37900);
  *(void *)(v0 + 72) = v4;
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C378E0);
  uint64_t v6 = sub_1B299DB98();
  *(void *)(v0 + 136) = v5;
  *(void *)(v0 + 144) = sub_1B2C666DC(&qword_1E9C378D8, &qword_1E9C378E0);
  *(void *)(v0 + 112) = v6;
  return v0;
}

uint64_t sub_1B2C666DC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceServiceDefinitionList()
{
  return &type metadata for InferenceServiceDefinitionList;
}

uint64_t dispatch thunk of static InferenceServiceDefinitionListProtocol.definitions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static InferenceServiceDefinitionListProtocol.localOnlyDefinitions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1B2C6676C(uint64_t a1, uint64_t a2)
{
  if (*(void *)((*(uint64_t (**)(void))(a2 + 8))() + 16))
  {
    sub_1B2C669BC(MEMORY[0x1E4FBC860]);
    sub_1B29C0988();
    sub_1B29A1DD4();
    do
    {
      sub_1B29C3B84(v2, (uint64_t)&v19);
      sub_1B29AEC7C(&v19, v21);
      *(void *)&long long v23 = sub_1B2C669FC();
      *((void *)&v23 + 1) = v5;
      sub_1B29D1D20(&v19, v3);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v26 = v4;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B29A2DF0();
        sub_1B29C0988();
        uint64_t v4 = v26;
      }
      unint64_t v15 = *(void *)(v4 + 24);
      if (*(void *)(v4 + 16) >= v15 >> 1)
      {
        sub_1B2C669D4(v15);
        sub_1B29C0988();
        uint64_t v4 = v26;
      }
      sub_1B299DBB0(isUniquelyReferenced_nonNull_native, v7, v8, v9, v10, v11, v12, v13, v18, v19, *((uint64_t *)&v19 + 1), v20, v21, v22, v14, v23, v24, v25);
    }
    while (!v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  return sub_1B2AF8AF0(v4);
}

uint64_t sub_1B2C66894(uint64_t a1, uint64_t a2)
{
  if (*(void *)((*(uint64_t (**)(void))(a2 + 16))() + 16))
  {
    sub_1B2C669BC(MEMORY[0x1E4FBC860]);
    sub_1B29C09C4();
    sub_1B29A1DD4();
    do
    {
      sub_1B29C3B84(v2, (uint64_t)&v19);
      sub_1B29AEC7C(&v19, v21);
      *(void *)&long long v23 = sub_1B2C669FC();
      *((void *)&v23 + 1) = v5;
      sub_1B29D1D20(&v19, v3);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v26 = v4;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B29A2DF0();
        sub_1B29C09C4();
        uint64_t v4 = v26;
      }
      unint64_t v15 = *(void *)(v4 + 24);
      if (*(void *)(v4 + 16) >= v15 >> 1)
      {
        sub_1B2C669D4(v15);
        sub_1B29C09C4();
        uint64_t v4 = v26;
      }
      sub_1B299DBB0(isUniquelyReferenced_nonNull_native, v7, v8, v9, v10, v11, v12, v13, v18, v19, *((uint64_t *)&v19 + 1), v20, v21, v22, v14, v23, v24, v25);
    }
    while (!v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  return sub_1B2AF8B10(v4);
}

uint64_t sub_1B2C669BC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 88) = a1;
  return 0;
}

BOOL sub_1B2C669D4@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t InferenceServiceDefinitionWrapper.__allocating_init(definitionType:)()
{
  return swift_allocObject();
}

uint64_t sub_1B2C669FC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t InferenceServiceDefinitionWrapper.init(definitionType:)()
{
  return v0;
}

uint64_t InferenceServiceDefinitionWrapper.deinit()
{
  return v0;
}

uint64_t InferenceServiceDefinitionWrapper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B2C66AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 24);
}

uint64_t sub_1B2C66AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 32);
}

uint64_t sub_1B2C66AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 40);
}

uint64_t sub_1B2C66AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 48);
}

uint64_t sub_1B2C66AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 56);
}

uint64_t sub_1B2C66AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 64);
}

uint64_t sub_1B2C66AD8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2C66B14()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InferenceServiceDefinitionWrapper()
{
  return sub_1B29A1278();
}

uint64_t method lookup function for InferenceServiceDefinitionWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceServiceDefinitionWrapper);
}

uint64_t dispatch thunk of InferenceServiceDefinitionWrapper.__allocating_init(definitionType:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void __swiftcall InferenceServiceInstanceQualifiedID.init(service:asset:domain:)(IntelligencePlatform::InferenceServiceInstanceQualifiedID *__return_ptr retstr, Swift::String service, Swift::String asset, Swift::String domain)
{
  retstr->serviceInstanceId = service;
  retstr->assetRegistryAssetId = asset;
  retstr->assetRegistryAssetDomain = domain;
}

uint64_t sub_1B2C66BA0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & result;
  return result;
}

BOOL sub_1B2C66BB0(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_1B2C66BBC(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

uint64_t InferenceServiceInstanceQualifiedID.serviceInstanceId.getter()
{
  return sub_1B2999874();
}

uint64_t InferenceServiceInstanceQualifiedID.assetRegistryAssetId.getter()
{
  return sub_1B2999874();
}

uint64_t InferenceServiceInstanceQualifiedID.assetRegistryAssetDomain.getter()
{
  return sub_1B2999874();
}

uint64_t InferenceServiceInstanceQualifiedID.description.getter()
{
  sub_1B2C6FC54();
  sub_1B2C6F990();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2C6F990();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t InferenceServiceInstanceQualifiedID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1B2C6FC74();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t static InferenceServiceInstanceQualifiedID.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  BOOL v10 = *a1 == *a2 && a1[1] == a2[1];
  if (v10 || (char v11 = sub_1B2E837A8(), result = 0, (v11 & 1) != 0))
  {
    BOOL v13 = v2 == v6 && v4 == v7;
    if (v13 || (v14 = sub_1B2E837A8(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
      {
        return 1;
      }
      else
      {
        sub_1B2999874();
        return sub_1B2E837A8();
      }
    }
  }
  return result;
}

uint64_t sub_1B2C66E74(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001B2E9E230 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001B2E98F60 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001B2E9E250)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1B2C66FB8(char a1)
{
  unint64_t result = 0xD000000000000011;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD000000000000014;
    }
    else {
      return 0xD000000000000018;
    }
  }
  return result;
}

unint64_t sub_1B2C67018()
{
  return sub_1B2C66FB8(*v0);
}

uint64_t sub_1B2C67020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C66E74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C67048(uint64_t a1)
{
  unint64_t v2 = sub_1B2C67238();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C67084(uint64_t a1)
{
  unint64_t v2 = sub_1B2C67238();

  return MEMORY[0x1F41862B0](a1, v2);
}

void InferenceServiceInstanceQualifiedID.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C389C8);
  sub_1B299D31C();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2C67238();
  sub_1B2E83A38();
  sub_1B2E83688();
  if (!v0)
  {
    sub_1B2E83688();
    sub_1B2E83688();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  sub_1B29998C8();
}

unint64_t sub_1B2C67238()
{
  unint64_t result = qword_1E9C38788;
  if (!qword_1E9C38788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38788);
  }
  return result;
}

uint64_t InferenceServiceInstanceQualifiedID.hashValue.getter()
{
  return sub_1B2E839E8();
}

void InferenceServiceInstanceQualifiedID.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C418D8);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2C67238();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_1B2E83568();
    uint64_t v8 = v7;
    uint64_t v19 = v6;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B2E83568();
    uint64_t v11 = v10;
    uint64_t v17 = v9;
    swift_bridgeObjectRetain();
    uint64_t v18 = v11;
    uint64_t v12 = sub_1B2E83568();
    uint64_t v14 = v13;
    uint64_t v15 = v12;
    sub_1B29A15FC();
    v16();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v4 = v19;
    v4[1] = v8;
    v4[2] = v17;
    v4[3] = v18;
    v4[4] = v15;
    v4[5] = v14;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

uint64_t sub_1B2C67584(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001B2E9E270)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1B2C6760C()
{
  return 0xD000000000000014;
}

uint64_t sub_1B2C67628(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001B2E9E290 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001B2E9E2B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1B2C67714(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000010;
  }
}

void sub_1B2C67754()
{
}

void sub_1B2C6776C()
{
}

uint64_t sub_1B2C6778C()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2C6783C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C67584(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2C67868(uint64_t a1)
{
  unint64_t v2 = sub_1B2C67B3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C678A4(uint64_t a1)
{
  unint64_t v2 = sub_1B2C67B3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1B2C678E0()
{
  return sub_1B2C67714(*v0);
}

uint64_t sub_1B2C678E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C67628(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2C67910(uint64_t a1)
{
  unint64_t v2 = sub_1B2C67B88();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C6794C(uint64_t a1)
{
  unint64_t v2 = sub_1B2C67B88();

  return MEMORY[0x1F41862B0](a1, v2);
}

void InferenceServiceInstanceRequestError.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C418E0);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v3);
  sub_1B299ADB4();
  sub_1B29A3EB4(&qword_1E9C418E8);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v4);
  sub_1B299B3C8();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2C67B3C();
  sub_1B2E83A38();
  sub_1B2C67B88();
  sub_1B2E83618();
  sub_1B2E83688();
  if (!v0) {
    sub_1B2E83688();
  }
  sub_1B299B798();
  v5();
  sub_1B299B798();
  v6();
  sub_1B2C37CD8();
  sub_1B29998C8();
}

unint64_t sub_1B2C67B3C()
{
  unint64_t result = qword_1E9C418F0;
  if (!qword_1E9C418F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C418F0);
  }
  return result;
}

unint64_t sub_1B2C67B88()
{
  unint64_t result = qword_1E9C418F8;
  if (!qword_1E9C418F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C418F8);
  }
  return result;
}

void InferenceServiceInstanceRequestError.init(from:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v30 = v4;
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C41900);
  sub_1B299D31C();
  uint64_t v31 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1B299ADB4();
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C41908);
  sub_1B299D31C();
  uint64_t v32 = v9;
  MEMORY[0x1F4188790](v10);
  sub_1B299E4A0();
  uint64_t v13 = v12 - v11;
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2C67B3C();
  sub_1B2E83A18();
  if (v0) {
    goto LABEL_6;
  }
  if (!*(void *)(sub_1B2E835F8() + 16)
    || (sub_1B29B142C(1), uint64_t v15 = v14, v17 = v16, swift_bridgeObjectRelease(), v15 != v17 >> 1))
  {
    sub_1B2E83288();
    swift_allocError();
    uint64_t v21 = v20;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v21 = &type metadata for InferenceServiceInstanceRequestError;
    sub_1B2E834F8();
    sub_1B2E83278();
    sub_1B299B3B0();
    (*(void (**)(void *))(v22 + 104))(v21);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v13, v8);
LABEL_6:
    uint64_t v28 = (uint64_t)v3;
    goto LABEL_7;
  }
  sub_1B2C67B88();
  uint64_t v18 = v1;
  sub_1B2E834E8();
  uint64_t v19 = sub_1B2E83568();
  uint64_t v24 = v23;
  uint64_t v29 = v19;
  uint64_t v25 = sub_1B2E83568();
  uint64_t v33 = v26;
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v18, v5);
  swift_unknownObjectRelease();
  sub_1B29A08B0();
  v27();
  uint64_t v28 = (uint64_t)v3;
  uint64_t *v30 = v29;
  v30[1] = v24;
  v30[2] = v25;
  void v30[3] = v33;
LABEL_7:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v28);
  sub_1B2C37CD8();
  sub_1B29998C8();
}

uint64_t sub_1B2C67F9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = 0;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void sub_1B2C67FE4()
{
}

void sub_1B2C67FFC()
{
}

unint64_t static InferenceServiceInstanceRunEvent.type.getter()
{
  return 0xD000000000000035;
}

uint64_t InferenceServiceInstanceRunEvent.instanceQualifiedId.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t InferenceServiceInstanceRunEvent.variant.getter()
{
  sub_1B2C6FC54();
  sub_1B2C6F990();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2C6F990();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B2C68110(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001B2E9E1D0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1B2C68198()
{
  return 0xD000000000000013;
}

uint64_t sub_1B2C681B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2C68110(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2C681E4(uint64_t a1)
{
  unint64_t v2 = sub_1B2C6E754();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C68220(uint64_t a1)
{
  unint64_t v2 = sub_1B2C6E754();

  return MEMORY[0x1F41862B0](a1, v2);
}

void InferenceServiceInstanceRunEvent.encode(to:)()
{
  sub_1B299F300();
  uint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1E9C389C0);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v2);
  sub_1B299E4A0();
  sub_1B29AEC7C(v1, v1[3]);
  sub_1B2C6E754();
  sub_1B2E83A38();
  sub_1B2C6E7A0();
  sub_1B2E836D8();
  sub_1B2A99BB0();
  v3();
  sub_1B29998C8();
}

void InferenceServiceInstanceRunEvent.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C41910);
  sub_1B299D31C();
  MEMORY[0x1F4188790](v5);
  sub_1B299B3C8();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2C6E754();
  sub_1B2E83A18();
  if (!v0)
  {
    sub_1B2C6E7EC();
    sub_1B2E835B8();
    sub_1B29A15FC();
    v6();
    *(_OWORD *)uint64_t v4 = v7;
    *(_OWORD *)(v4 + 16) = v8;
    *(void *)(v4 + 32) = v9;
    *(void *)(v4 + 40) = v10;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  sub_1B2C37CD8();
  sub_1B29998C8();
}

unint64_t sub_1B2C684A8()
{
  return 0xD000000000000035;
}

void sub_1B2C684CC()
{
}

void sub_1B2C684E4()
{
}

uint64_t sub_1B2C684FC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B2C6FB10();
  uint64_t v5 = type metadata accessor for InferenceServiceInstance();
  sub_1B2C5CE50(a1, (uint64_t)v9);
  uint64_t v8 = sub_1B2C68758(AssociatedTypeWitness, v9);
  a2[3] = v5;
  swift_getAssociatedTypeWitness();
  sub_1B2C6FC48();
  swift_getAssociatedConformanceWitness();
  sub_1B2C6F9E4();
  sub_1B2C6F948();
  sub_1B2C6F948();
  sub_1B2C6F9E4();
  sub_1B2C6F948();
  sub_1B2C6F948();
  sub_1B2C6F9E4();
  swift_getAssociatedConformanceWitness();
  sub_1B299AF64();
  sub_1B2C6FC80();
  sub_1B2C6FC80();
  sub_1B299AF64();
  sub_1B2C6FCA0();
  sub_1B2C6FCA0();
  uint64_t result = swift_getWitnessTable();
  a2[4] = result;
  *a2 = v8;
  return result;
}

uint64_t sub_1B2C68758(uint64_t a1, void *a2)
{
  uint64_t v3 = swift_allocObject();
  sub_1B2C68A8C(v3, a2);
  return v3;
}

uint64_t sub_1B2C68798@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B2999874();
  swift_getAssociatedConformanceWitness();
  sub_1B29A41B0();
  uint64_t v5 = type metadata accessor for InferenceServiceInstance();
  sub_1B2C5CE50(a1, (uint64_t)v7);
  uint64_t result = sub_1B2C68758(AssociatedTypeWitness, v7);
  a2[3] = v5;
  a2[4] = (uint64_t)&off_1F0ACFEF0;
  *a2 = result;
  return result;
}

uint64_t sub_1B2C68850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = *(void *)(*(void *)v1 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B2E82F38();
  sub_1B299D31C();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v21 - v5;
  sub_1B299D31C();
  MEMORY[0x1F4188790](v7);
  sub_1B299D804();
  sub_1B29A080C();
  v9(v8);
  int v10 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, AssociatedTypeWitness);
  if (v10 == 1)
  {
    sub_1B2A99BB0();
    uint64_t result = v12(v11);
    uint64_t v14 = 0;
    char v15 = 0;
  }
  else
  {
    sub_1B29F83D8();
    v17(v16);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(&v22, AssociatedTypeWitness, AssociatedConformanceWitness);
    sub_1B29A15FC();
    uint64_t result = v20(v19);
    uint64_t v14 = v22;
    char v15 = v23;
  }
  *(void *)a1 = v14;
  *(unsigned char *)(a1 + 8) = v15;
  *(unsigned char *)(a1 + 9) = v10 == 1;
  return result;
}

void *sub_1B2C68A8C(uint64_t a1, void *a2)
{
  sub_1B2C6FA04();
  uint64_t v5 = (uint64_t)v2 + *(void *)(v4 + 120);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B2C6FCE0(v5, v7, v8, AssociatedTypeWitness);
  *(void *)((char *)v2 + *(void *)(*v2 + 128)) = 0;
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  uint64_t v13 = a2[5];
  v2[2] = *a2;
  v2[3] = v9;
  v2[4] = v10;
  v2[5] = v11;
  v2[6] = v12;
  v2[7] = v13;
  sub_1B2B11010((uint64_t)(a2 + 6), (uint64_t)(v2 + 8));
  v2[13] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2C6B95C();
  sub_1B2C5CEAC((uint64_t)a2);
  return v2;
}

uint64_t sub_1B2C68BC8()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2C68C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(void *)(v9 + 72) = a7;
  *(void *)(v9 + 80) = v8;
  *(unsigned char *)(v9 + 300) = a8;
  *(void *)(v9 + 56) = a5;
  *(void *)(v9 + 64) = a6;
  *(void *)(v9 + 40) = a2;
  *(void *)(v9 + 48) = a4;
  *(void *)(v9 + 32) = a1;
  uint64_t v10 = *v8;
  sub_1B2C6FAD0();
  *(void *)(v9 + 88) = type metadata accessor for InferenceMessageResponse();
  uint64_t v11 = sub_1B2E82F38();
  *(void *)(v9 + 96) = v11;
  sub_1B299D2A8(v11);
  *(void *)(v9 + 104) = v12;
  *(void *)(v9 + 112) = sub_1B29A4C44();
  *(void *)(v9 + 120) = *(void *)(v10 + 88);
  *(void *)(v9 + 128) = *(void *)(v10 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1B2C6FAAC();
  *(void *)(v9 + 136) = type metadata accessor for InferenceMessageResponse();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(void *)(v9 + 144) = TupleTypeMetadata2;
  sub_1B299D2A8(TupleTypeMetadata2);
  *(void *)(v9 + 152) = v14;
  *(void *)(v9 + 160) = swift_task_alloc();
  *(void *)(v9 + 168) = swift_task_alloc();
  *(void *)(v9 + 176) = swift_task_alloc();
  sub_1B2C6FAAC();
  *(void *)(v9 + 184) = type metadata accessor for InferenceMessageRequest();
  uint64_t v15 = sub_1B2E82F38();
  *(void *)(v9 + 192) = v15;
  sub_1B299D2A8(v15);
  *(void *)(v9 + 200) = v16;
  *(void *)(v9 + 208) = sub_1B29A4C44();
  sub_1B2C6FAD0();
  uint64_t v17 = sub_1B2C6FC10();
  *(void *)(v9 + 216) = v17;
  sub_1B299D2A8(v17);
  *(void *)(v9 + 224) = v18;
  *(void *)(v9 + 232) = sub_1B29A4C44();
  sub_1B2C6F930();
  *(void *)(v9 + 240) = v19;
  uint64_t v20 = sub_1B29A4C44();
  uint64_t v21 = *v26;
  uint64_t v22 = v26[1];
  *(void *)(v9 + 248) = v20;
  *(void *)(v9 + 256) = v21;
  *(void *)(v9 + 264) = v22;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_1E9C372C0;
  *(void *)(v9 + 272) = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C68EE4, v23, 0);
}

uint64_t sub_1B2C68EE4()
{
  sub_1B2C6B2FC();
  sub_1B299BBB4();
  v1();
  if (sub_1B2C6FB4C())
  {
    uint64_t v5 = *(void *)(v0 + 256);
    uint64_t v4 = *(void *)(v0 + 264);
    uint64_t v7 = *(void *)(v0 + 240);
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v8 = *(void *)(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 184);
    uint64_t v10 = *(void *)(v0 + 144);
    sub_1B2C6FAF4(v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v8, v9);
    *(_DWORD *)(v0 + 296) = *(_DWORD *)(v10 + 48);
    *(void *)(v0 + 16) = v5;
    *(void *)(v0 + 24) = v4;
    swift_task_alloc();
    sub_1B2B1DB0C();
    *(void *)(v0 + 280) = v11;
    *uint64_t v11 = v12;
    v11[1] = sub_1B2C69114;
    return sub_1B2C695A0();
  }
  else
  {
    sub_1B2C6FCE0(*(void *)(v0 + 208), v2, v3, *(void *)(v0 + 184));
    uint64_t v14 = sub_1B2C6F968();
    v15(v14);
    type metadata accessor for InferenceServiceInstance.RunErrorLocalConversion();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v16 = 0;
    swift_willThrow();
    sub_1B2C6FA74();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B299AD7C();
    return v17();
  }
}

uint64_t sub_1B2C69114()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B29A0B54();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 288) = v0;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v3 + 272);
  if (v0) {
    uint64_t v8 = sub_1B2C694F0;
  }
  else {
    uint64_t v8 = sub_1B2C691F8;
  }
  return MEMORY[0x1F4188298](v8, v7, 0);
}

uint64_t sub_1B2C691F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B2999B8C();
  sub_1B2C6FBA4();
  uint64_t v21 = *(void *)(v20 + 168);
  uint64_t v22 = *(void *)(v20 + 176) + *(int *)(v20 + 296);
  uint64_t v23 = v21 + *(int *)(*(void *)(v20 + 144) + 48);
  sub_1B299D31C();
  (*(void (**)(uint64_t))(v24 + 16))(v21);
  char v25 = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v23 = *(void *)v22;
  *(unsigned char *)(v23 + 8) = v25;
  if (sub_1B2C6FB4C())
  {
    uint64_t v28 = *(void *)(v20 + 240);
    uint64_t v29 = *(void *)(v20 + 248);
    a13 = *(int *)(v20 + 296);
    a14 = *(void *)(v20 + 232);
    uint64_t v30 = *(void *)(v20 + 184);
    uint64_t v31 = *(void *)(v20 + 160);
    uint64_t v57 = *(void *)(v20 + 208);
    uint64_t v58 = *(void *)(v20 + 168);
    a11 = *(void *)(v20 + 136);
    a12 = *(void *)(v20 + 176);
    uint64_t v32 = *(void *)(v20 + 112);
    uint64_t v33 = *(void *)(v20 + 88);
    uint64_t v34 = *(void *)(v20 + 40);
    a9 = *(void *)(v20 + 32);
    a10 = *(void *)(v20 + 144);
    sub_1B2C6FAF4(v32);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v30);
    sub_1B299B3B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(a9, v32, v33);
    uint64_t v36 = v31 + *(int *)(a10 + 48);
    sub_1B29F83D8();
    v37();
    uint64_t v38 = *(void *)(a12 + a13);
    char v39 = *(unsigned char *)(v22 + 8);
    *(void *)uint64_t v36 = v38;
    *(unsigned char *)(v36 + 8) = v39;
    *(void *)uint64_t v34 = v38;
    *(unsigned char *)(v34 + 8) = v39;
    sub_1B29A08B0();
    v40();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B2999AB8();
  }
  else
  {
    uint64_t v57 = *(void *)(v20 + 184);
    uint64_t v58 = *(void *)(v20 + 248);
    uint64_t v41 = *(void *)(v20 + 104);
    uint64_t v42 = *(void *)(v20 + 112);
    uint64_t v43 = *(void *)(v20 + 96);
    sub_1B2C6FCE0(v42, v26, v27, *(void *)(v20 + 88));
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
    type metadata accessor for InferenceServiceInstance.RunErrorLocalConversion();
    swift_getWitnessTable();
    swift_allocError();
    *long long v44 = 1;
    swift_willThrow();
    uint64_t v45 = sub_1B2C6FC48();
    v46(v45);
    sub_1B29A15FC();
    v47();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B299AD7C();
  }
  sub_1B2C6F9A8();
  return v49(v48, v49, v50, v51, v52, v53, v54, v55, a9, a10, a11, a12, a13, a14, v57, v58, a17, a18, a19, a20);
}

uint64_t sub_1B2C694F0()
{
  sub_1B2AEC410();
  sub_1B2C6F980();
  v0();
  sub_1B2C6FA74();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2C695A0()
{
  sub_1B2AEC410();
  uint64_t v3 = v2;
  v1[20] = v4;
  v1[21] = v0;
  v1[18] = v5;
  v1[19] = v6;
  sub_1B2C6FA04();
  v1[22] = sub_1B2C6FBD0();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1B29A4CBC();
  v1[23] = swift_getAssociatedConformanceWitness();
  v1[24] = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1B2E82F38();
  v1[25] = v7;
  sub_1B299D2A8(v7);
  v1[26] = v8;
  v1[27] = sub_1B29A4C44();
  sub_1B2C6F930();
  v1[28] = v9;
  v1[29] = sub_1B29A4C44();
  uint64_t v10 = swift_checkMetadataState();
  v1[30] = v10;
  sub_1B299D2A8(v10);
  v1[31] = v11;
  v1[32] = sub_1B299E508();
  v1[33] = swift_task_alloc();
  v1[34] = sub_1B2C6FBD0();
  v1[35] = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[36] = AssociatedTypeWitness;
  sub_1B299D2A8(AssociatedTypeWitness);
  v1[37] = v13;
  v1[38] = sub_1B299E508();
  v1[39] = swift_task_alloc();
  uint64_t v14 = sub_1B2E80668();
  v1[40] = v14;
  sub_1B299D2A8(v14);
  v1[41] = v15;
  v1[42] = sub_1B29A4C44();
  uint64_t v16 = sub_1B2E82F38();
  v1[43] = v16;
  sub_1B299D2A8(v16);
  v1[44] = v17;
  uint64_t v18 = sub_1B29A4C44();
  uint64_t v19 = *v3;
  uint64_t v20 = v3[1];
  v1[45] = v18;
  v1[46] = v19;
  v1[47] = v20;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_1E9C372C0;
  v1[48] = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C698B0, v21, 0);
}

uint64_t sub_1B2C698B0()
{
  uint64_t v1 = v0[45];
  uint64_t v2 = v0[22];
  sub_1B299D804();
  sub_1B299BBB4();
  v3();
  LODWORD(v2) = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v2);
  uint64_t v4 = sub_1B2C6F968();
  v5(v4);
  if (v2 == 1)
  {
    sub_1B2C6F314();
    swift_allocError();
    swift_willThrow();
    sub_1B2C6F8EC();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B299AD7C();
    return v6();
  }
  else
  {
    uint64_t v34 = v0 + 2;
    uint64_t v35 = v0 + 7;
    uint64_t v8 = v0[20];
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B2C6F990();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2C6F990();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    swift_getAssociatedTypeWitness();
    uint64_t v9 = v8 + *(int *)(sub_1B2C6FC10() + 28);
    uint64_t v33 = *(void *)(v9 + 16);
    int v32 = *(unsigned __int8 *)(v9 + 24);
    if (qword_1EB7D8A90 != -1) {
      swift_once();
    }
    uint64_t v31 = v0[42];
    sub_1B299D804();
    sub_1B2B11010((uint64_t)&qword_1EB7E2988, (uint64_t)v34);
    uint64_t v11 = v0[5];
    uint64_t v10 = v0[6];
    sub_1B29AEC7C(v34, v11);
    uint64_t v12 = *(uint64_t (**)(ValueMetadata *, unint64_t, unint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v10 + 8);
    unint64_t v13 = sub_1B2C6F360();
    uint64_t v14 = v12(&type metadata for InferenceServiceInstanceRunEvent, 0xD000000000000019, 0x80000001B2E9E2F0, &type metadata for InferenceServiceInstanceRunEvent, v13, v11, v10);
    v0[49] = v14;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v34);
    sub_1B2B11010((uint64_t)&qword_1EB7E2988, (uint64_t)v35);
    uint64_t v15 = v0[10];
    uint64_t v16 = v0[11];
    sub_1B29AEC7C(v35, v15);
    sub_1B2E80628();
    if (v32) {
      uint64_t v17 = 0;
    }
    else {
      uint64_t v17 = v33;
    }
    uint64_t v18 = sub_1B2B3499C(v17);
    (*(void (**)(ValueMetadata *, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v16 + 16))(&type metadata for InferenceServiceInstanceRunEvent, v31, v14, 0xD000000000000019, 0x80000001B2E9E2F0, v18, &type metadata for InferenceServiceInstanceRunEvent, v13, v15, v16);
    sub_1B299B798();
    v19();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v35);
    swift_bridgeObjectRelease();
    if (swift_dynamicCastMetatype())
    {
      swift_task_alloc();
      sub_1B2B1DB0C();
      v0[54] = v20;
      *uint64_t v20 = v21;
      v20[1] = sub_1B2C6A238;
      uint64_t v22 = v0[46];
      uint64_t v23 = v0[47];
      uint64_t v24 = v0[32];
      uint64_t v26 = v0[20];
      char v25 = (uint64_t *)v0[21];
      uint64_t v27 = v14;
    }
    else
    {
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1B2C6F990();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2C6F990();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      sub_1B29998FC();
      v0[50] = swift_getAssociatedConformanceWitness();
      static EventLogger.startInterval<A>(ofType:named:parent:)();
      uint64_t v29 = v28;
      v0[51] = v28;
      swift_bridgeObjectRelease();
      uint64_t v30 = (void *)swift_task_alloc();
      v0[52] = v30;
      void *v30 = v0;
      v30[1] = sub_1B2C69EBC;
      uint64_t v22 = v0[46];
      uint64_t v23 = v0[47];
      uint64_t v24 = v0[33];
      uint64_t v26 = v0[20];
      char v25 = (uint64_t *)v0[21];
      uint64_t v27 = v29;
    }
    return sub_1B2C6A790(v24, v27, v22, v23, v25, v26);
  }
}

uint64_t sub_1B2C69EBC()
{
  sub_1B299F394();
  sub_1B29A19D4();
  sub_1B29A0B54();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 424) = v0;
  swift_task_dealloc();
  sub_1B299B24C();
  sub_1B2C6FB98();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1B2C69FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B2999B8C();
  sub_1B2C6FBA4();
  uint64_t v22 = v20[27];
  uint64_t v23 = v20[24];
  (*(void (**)(void))(v20[23] + 40))(v20[30]);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v22, 1, v23) == 1)
  {
    sub_1B2C6F980();
    v24();
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1B2E81FB8();
    sub_1B29A4B98(v25, (uint64_t)qword_1EB7E5AC0);
    uint64_t v26 = sub_1B2E81F98();
    os_log_type_t v27 = sub_1B2E82DC8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_1B2996000, v26, v27, "InferenceServiceInstance: runHelper: shouldLogCustomEvent but result.runEvent is nil", v28, 2u);
      MEMORY[0x1B3EB30C0](v28, -1, -1);
    }
  }
  else
  {
    uint64_t v30 = v20[28];
    uint64_t v29 = v20[29];
    uint64_t v31 = v20[24];
    sub_1B29F83D8();
    v32();
    static EventLogger.endInterval<A>(with:_:)();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  }
  uint64_t v33 = sub_1B2C6FA34();
  v34(v33);
  uint64_t v35 = sub_1B2C6FA54();
  v36(v35);
  uint64_t v37 = sub_1B2C6FB80();
  v38(v37);
  HIDWORD(a9) = a17;
  uint64_t v39 = v20[51];
  uint64_t v40 = v20[49];
  uint64_t v55 = v20[45];
  uint64_t v56 = v20[42];
  uint64_t v41 = v20[38];
  uint64_t v42 = v20[36];
  sub_1B2C6FA14();
  uint64_t v44 = v20[18];
  uint64_t v43 = v20[19];
  sub_1B29998FC();
  sub_1B29F83D8();
  v45();
  sub_1B2C50438(v41, v39, v42, v44);
  *(void *)uint64_t v43 = a16;
  *(unsigned char *)(v43 + 8) = a17;
  sub_1B2C6A5B8(v40, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B2999AB8();
  sub_1B2C6F9A8();
  return v47(v46, v47, v48, v49, v50, v51, v52, v53, a9, v55, v56, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1B2C6A238()
{
  sub_1B299F394();
  sub_1B29A19D4();
  sub_1B29A0B54();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 440) = v0;
  swift_task_dealloc();
  sub_1B299B24C();
  sub_1B2C6FB98();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1B2C6A32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B2999B8C();
  sub_1B2C6FBA4();
  uint64_t v22 = sub_1B2C6FA34();
  v23(v22);
  uint64_t v24 = sub_1B2C6FA54();
  v25(v24);
  uint64_t v26 = sub_1B2C6FB80();
  v27(v26);
  uint64_t v28 = v20[49];
  uint64_t v43 = v20[45];
  uint64_t v44 = v20[42];
  uint64_t v29 = v20[38];
  uint64_t v30 = v20[36];
  sub_1B2C6FA14();
  uint64_t v32 = v20[18];
  uint64_t v31 = v20[19];
  sub_1B29F83D8();
  v33();
  sub_1B2C50438(v29, v28, v30, v32);
  *(void *)uint64_t v31 = a16;
  *(unsigned char *)(v31 + 8) = a17;
  sub_1B2C6A5B8(v28, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B2999AB8();
  sub_1B2C6F9A8();
  return v35(v34, v35, v36, v37, v38, v39, v40, v41, a9, v43, v44, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1B2C6A450()
{
  sub_1B2AEC410();
  sub_1B2C6A5B8(*(void *)(v0 + 392), *(void **)(v0 + 168));
  sub_1B2C6F8EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2C6A504()
{
  sub_1B2AEC410();
  sub_1B2C6A5B8(*(void *)(v0 + 392), *(void **)(v0 + 168));
  sub_1B2C6F8EC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2C6A5B8(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1B2E80668();
  uint64_t v19 = *(void *)(v4 - 8);
  uint64_t v20 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v12 = a2[7];
  v24[0] = v7;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v11;
  v24[5] = v12;
  uint64_t v13 = qword_1EB7D8A90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_1B2B11010((uint64_t)&qword_1EB7E2988, (uint64_t)v21);
  uint64_t v15 = v22;
  uint64_t v14 = v23;
  sub_1B29AEC7C(v21, v22);
  sub_1B2E80628();
  uint64_t v16 = *(void (**)(uint64_t, char *, void *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v14 + 24);
  unint64_t v17 = sub_1B2C6F360();
  v16(a1, v6, v24, &type metadata for InferenceServiceInstanceRunEvent, v17, v15, v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C6A790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  v6[102] = a6;
  v6[101] = a5;
  v6[100] = a4;
  v6[99] = a3;
  v6[93] = a2;
  v6[87] = a1;
  uint64_t v7 = *a5;
  v6[103] = *(void *)(*a5 + 88);
  v6[104] = *(void *)(v7 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v8 = type metadata accessor for InferenceMessageRequest();
  v6[105] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[106] = v9;
  v6[107] = *(void *)(v9 + 64);
  v6[108] = swift_task_alloc();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[109] = AssociatedTypeWitness;
  v6[110] = *(void *)(AssociatedTypeWitness - 8);
  v6[111] = swift_task_alloc();
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1E9C372C0;
  v6[112] = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C6A9F8, v11, 0);
}

uint64_t sub_1B2C6A9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28)
{
  sub_1B2999B8C();
  a27 = v29;
  a28 = v30;
  sub_1B2C6FBA4();
  a26 = v28;
  uint64_t v31 = v28[108];
  uint64_t v32 = v28[106];
  uint64_t v33 = v28[105];
  uint64_t v49 = v28[104];
  uint64_t v47 = v28[107];
  uint64_t v48 = v28[103];
  uint64_t v34 = v28[101];
  uint64_t v35 = v28[100];
  uint64_t v36 = v28[93];
  a16 = v28[99];
  a17 = v35;
  type metadata accessor for InferenceServiceRunContext();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v37 = sub_1B2C657C4(&a16, v36);
  v28[113] = v37;
  sub_1B29A080C();
  v38();
  unint64_t v39 = (*(unsigned __int8 *)(v32 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v40 = (char *)swift_allocObject();
  v28[114] = v40;
  *((void *)v40 + 2) = v49;
  *((void *)v40 + 3) = v48;
  *((void *)v40 + 4) = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(&v40[v39], v31, v33);
  *(void *)&v40[(v47 + v39 + 7) & 0xFFFFFFFFFFFFFFF8] = v37;
  swift_retain();
  swift_retain();
  swift_asyncLet_begin();
  sub_1B2C6F9A8();
  return MEMORY[0x1F41881E0](v41, v42, v43, v44);
}

uint64_t sub_1B2C6ABB0()
{
  v1[115] = v0;
  if (v0) {
    return MEMORY[0x1F41881D0](v1 + 2, v1[111], sub_1B2C6AD28, v1 + 88);
  }
  else {
    return sub_1B29A0798((uint64_t)sub_1B2C6ABF0, v1[112]);
  }
}

uint64_t sub_1B2C6ABF0()
{
  sub_1B299F394();
  sub_1B29A080C();
  v1();
  swift_retain();
  sub_1B2C650CC(0);
  swift_release();
  uint64_t v2 = *(void *)(v0 + 888);
  return MEMORY[0x1F41881D0](v0 + 16, v2, sub_1B2C6AC9C, v0 + 752);
}

uint64_t sub_1B2C6AC9C()
{
  return sub_1B29A0798((uint64_t)sub_1B2C6ACB4, *(void *)(v0 + 896));
}

uint64_t sub_1B2C6ACB4()
{
  sub_1B299F394();
  sub_1B2C6FC28();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B2999AB8();
  return v0();
}

uint64_t sub_1B2C6AD28()
{
  return sub_1B29A0798((uint64_t)sub_1B2C6AD40, *(void *)(v0 + 896));
}

uint64_t sub_1B2C6AD40()
{
  sub_1B299F394();
  sub_1B2C6FC28();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2C6ADB8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = *a2;
  v4[9] = *(void *)(*a2 + 88);
  v4[10] = *(void *)(v5 + 80);
  v4[11] = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1B2E82F38();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B2C6AED4, 0, 0);
}

uint64_t sub_1B2C6AED4()
{
  sub_1B299B3BC();
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C6AF64, v0, 0);
}

uint64_t sub_1B2C6AF64()
{
  sub_1B299F394();
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[6] + *(void *)(*(void *)v0[6] + 120);
  sub_1B299D804();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  return MEMORY[0x1F4188298](sub_1B2C6B014, 0, 0);
}

uint64_t sub_1B2C6B014()
{
  sub_1B299F394();
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v0[14], 1, v0[11]);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness
                                                                                         + 64)
                                                                             + **(int **)(AssociatedConformanceWitness
                                                                                        + 64));
    swift_task_alloc();
    sub_1B2B1DB0C();
    v0[15] = v3;
    *uint64_t v3 = v4;
    v3[1] = sub_1B2C6B144;
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[7];
    uint64_t v7 = v0[8];
    uint64_t v8 = v0[5];
    return v9(v8, v6, v7, v5, AssociatedConformanceWitness);
  }
  return result;
}

uint64_t sub_1B2C6B144()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B29A0B54();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1B2C6B274, 0, 0);
  }
  else
  {
    sub_1B299B3B0();
    sub_1B299B798();
    v7();
    swift_task_dealloc();
    sub_1B2999AB8();
    return v8();
  }
}

uint64_t sub_1B2C6B274()
{
  sub_1B299B3BC();
  sub_1B299B3B0();
  sub_1B299B798();
  v0();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v1();
}

void sub_1B2C6B2FC()
{
  sub_1B299F300();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_1B2C6FA04();
  swift_getAssociatedTypeWitness();
  sub_1B2C6FC48();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(swift_getAssociatedConformanceWitness() + 56);
  uint64_t v5 = sub_1B2C6FCF8();
  if (v4(v5) == v3 && v6 == v1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1B2C6FCF8();
      uint64_t v10 = v4(v9);
      uint64_t v12 = v11;
      sub_1B2C6E8B0();
      swift_allocError();
      *uint64_t v13 = v3;
      v13[1] = v1;
      void v13[2] = v10;
      v13[3] = v12;
      swift_willThrow();
    }
  }
  sub_1B29998C8();
}

uint64_t sub_1B2C6B43C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 104) + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = 32;
    do
    {
      swift_unknownObjectRetain();
      sub_1B2C6B518();
      swift_unknownObjectRelease();
      v2 += 16;
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2C6B518()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2C68850((uint64_t)&v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C6B59C()
{
  sub_1B299B3BC();
  uint64_t v3 = v2;
  *(void *)(v1 + 24) = v4;
  *(void *)(v1 + 32) = v0;
  *(void *)(v1 + 16) = v5;
  uint64_t v6 = sub_1B2E806B8();
  *(void *)(v1 + 40) = v6;
  sub_1B299D2A8(v6);
  *(void *)(v1 + 48) = v7;
  *(void *)(v1 + 56) = sub_1B29A4C44();
  *(_OWORD *)(v1 + 64) = *(_OWORD *)v3;
  *(void *)(v1 + 80) = *(void *)(v3 + 16);
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1E9C372C0;
  *(void *)(v1 + 88) = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C6B67C, v8, 0);
}

uint64_t sub_1B2C6B67C()
{
  sub_1B299B3BC();
  uint64_t v1 = *(int **)(v0 + 16);
  sub_1B2E806A8();
  uint64_t v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1B2C6B750;
  return v4();
}

uint64_t sub_1B2C6B750()
{
  sub_1B299F394();
  sub_1B29A19D4();
  sub_1B29A0B54();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 104) = v0;
  swift_task_dealloc();
  sub_1B299B24C();
  sub_1B2C6FB98();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1B2C6B844()
{
  sub_1B2AEC410();
  sub_1B2C6B43C();
  uint64_t v0 = sub_1B2C6FC74();
  v1(v0);
  swift_task_dealloc();
  sub_1B2999AB8();
  return v2();
}

uint64_t sub_1B2C6B8E4()
{
  sub_1B299B3BC();
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  swift_task_dealloc();
  sub_1B299AD7C();
  return v1();
}

void sub_1B2C6B95C()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  sub_1B2E806B8();
  sub_1B299D31C();
  MEMORY[0x1F4188790](v3);
  sub_1B299ADB4();
  uint64_t v4 = sub_1B2E806A8();
  v2(v4);
  if (!v0) {
    sub_1B2C6B43C();
  }
  sub_1B2A99BB0();
  v5();
  sub_1B2C37CD8();
  sub_1B29998C8();
}

uint64_t sub_1B2C6BA38()
{
  sub_1B299B3BC();
  v1[7] = v2;
  v1[8] = v0;
  uint64_t v4 = v3[1];
  v1[9] = *v3;
  v1[10] = v4;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1E9C372C0;
  v1[11] = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C6BAD8, v5, 0);
}

uint64_t sub_1B2C6BAD8()
{
  sub_1B299B9B8();
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  sub_1B2C68850(v0 + 40);
  uint64_t v5 = 256;
  if (!*(unsigned char *)(v0 + 49)) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v5 | *(unsigned __int8 *)(v0 + 48);
  *(void *)(v0 + 16) = *(void *)(v0 + 40);
  *(void *)(v0 + 24) = v6;
  *(void *)(v0 + 32) = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v7;
  _OWORD v7[2] = v3;
  v7[3] = v4;
  v7[4] = v2;
  v7[5] = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1B2C6BBE0;
  return sub_1B2C6B59C();
}

uint64_t sub_1B2C6BBE0()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B29A0B54();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 88);
    return MEMORY[0x1F4188298](sub_1B2C6BCE4, v7, 0);
  }
  else
  {
    swift_task_dealloc();
    sub_1B299AD7C();
    return v8();
  }
}

uint64_t sub_1B2C6BCE4()
{
  sub_1B299B3BC();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2C6BD40(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *a1;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1E9C372C0;
  v4[10] = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C6BE08, v5, 0);
}

uint64_t sub_1B2C6BE08()
{
  sub_1B299B3BC();
  v0[4] = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v2 = type metadata accessor for InferenceServiceInstance();
  if (sub_1B2C72C38(v2, (uint64_t)&off_1F0ACFEF0))
  {
    if ((v1 & 1) == 0) {
      sub_1B2C6CF40();
    }
  }
  else if (v1)
  {
    uint64_t v3 = v0[8];
    v0[2] = v0[7];
    v0[3] = v3;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[11] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1B2C6BF14;
    return sub_1B2C6C02C();
  }
  sub_1B2999AB8();
  return v6();
}

uint64_t sub_1B2C6BF14()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B29A0B54();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 80);
    return MEMORY[0x1F4188298](sub_1B2C6C010, v7, 0);
  }
  else
  {
    sub_1B299AD7C();
    return v8();
  }
}

uint64_t sub_1B2C6C010()
{
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2C6C02C()
{
  sub_1B299B9B8();
  uint64_t v3 = v2;
  v1[5] = v0;
  uint64_t v4 = *v0;
  sub_1B29A3EB4(&qword_1EB7E2778);
  v1[6] = sub_1B29A4C44();
  v1[7] = *(void *)(v4 + 88);
  v1[8] = *(void *)(v4 + 80);
  sub_1B2C6FBF0();
  sub_1B2C6FC74();
  swift_getAssociatedConformanceWitness();
  sub_1B29A41B0();
  uint64_t v5 = type metadata accessor for InferenceServiceConfig();
  v1[9] = v5;
  sub_1B299D2A8(v5);
  v1[10] = v6;
  v1[11] = *(void *)(v7 + 64);
  v1[12] = sub_1B299E508();
  v1[13] = swift_task_alloc();
  v1[14] = sub_1B2C6FBF0();
  uint64_t v8 = sub_1B2E82F38();
  v1[15] = v8;
  sub_1B299D2A8(v8);
  v1[16] = v9;
  uint64_t v10 = sub_1B29A4C44();
  uint64_t v11 = *v3;
  uint64_t v12 = v3[1];
  v1[17] = v10;
  v1[18] = v11;
  v1[19] = v12;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1E9C372C0;
  v1[20] = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C6C1F8, v13, 0);
}

uint64_t sub_1B2C6C1F8()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 112);
  sub_1B299D804();
  sub_1B299BBB4();
  v3();
  LODWORD(v2) = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v2);
  uint64_t v4 = sub_1B2C6F968();
  v5(v4);
  if (v2 == 1)
  {
    sub_1B29AEC7C((void *)(*(void *)(v0 + 40) + 64), *(void *)(*(void *)(v0 + 40) + 88));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2C5EA10();
    uint64_t v6 = *(void *)(v0 + 40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)(*(void *)v6 + 128);
    *(void *)(v0 + 168) = v7;
    uint64_t v8 = *(void *)(v6 + v7);
    if (v8) {
      goto LABEL_4;
    }
    uint64_t v32 = *(void *)(v0 + 144);
    uint64_t v33 = *(void *)(v0 + 152);
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v29 = *(void *)(v0 + 72);
    uint64_t v30 = *(void *)(v0 + 96);
    uint64_t v11 = *(void *)(v0 + 40);
    uint64_t v10 = *(void *)(v0 + 48);
    uint64_t v34 = v10;
    uint64_t v12 = sub_1B2E82A08();
    int8x16_t v31 = *(int8x16_t *)(v0 + 56);
    sub_1B2C6FCE0(v10, v13, v14, v12);
    sub_1B29A080C();
    v15();
    uint64_t v16 = qword_1E9C372C0;
    unint64_t v17 = sub_1B2C5CB74();
    unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v19 = (int8x16_t *)swift_allocObject();
    v19[1].i64[0] = v16;
    v19[1].i64[1] = v17;
    v19[2] = vextq_s8(v31, v31, 8uLL);
    v19[3].i64[0] = v32;
    v19[3].i64[1] = v33;
    v19[4].i64[0] = v11;
    (*(void (**)(__int8 *, uint64_t, uint64_t))(v9 + 32))(&v19->i8[v18], v30, v29);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    *(void *)(v6 + v7) = sub_1B29A3F20(v34, (uint64_t)&unk_1E9C419C0, (uint64_t)v19);
    swift_release();
    uint64_t v8 = *(void *)(v6 + v7);
    if (v8)
    {
LABEL_4:
      *(void *)(v0 + 176) = v8;
      swift_retain();
      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v20;
      uint64_t v21 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
      *uint64_t v20 = v0;
      v20[1] = sub_1B2C6C5EC;
      uint64_t v22 = MEMORY[0x1E4FBC848] + 8;
      uint64_t v23 = MEMORY[0x1E4FBC0F0];
      return MEMORY[0x1F4187D90](v21, v8, v22, v21, v23);
    }
    uint64_t v24 = *(void *)(v0 + 168);
    uint64_t v25 = *(void *)(v0 + 40);
    sub_1B2C6F980();
    v26();
    *(void *)(v25 + v24) = 0;
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B2999AB8();
  return v27();
}

uint64_t sub_1B2C6C5EC()
{
  sub_1B299F394();
  uint64_t v2 = *v1;
  sub_1B29A0B54();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 192) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v2 + 160);
  swift_release();
  if (v0) {
    uint64_t v6 = sub_1B2C6C7CC;
  }
  else {
    uint64_t v6 = sub_1B2C6C728;
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

uint64_t sub_1B2C6C728()
{
  sub_1B299F394();
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_1B2C6F980();
  v3();
  *(void *)(v2 + v1) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B2999AB8();
  return v4();
}

uint64_t sub_1B2C6C7CC()
{
  sub_1B299F394();
  sub_1B2C6F980();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2C6C860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  uint64_t v8 = *a6;
  v7[9] = *(void *)(*a6 + 88);
  v7[10] = *(void *)(v8 + 80);
  v7[11] = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1B2E82F38();
  void v7[12] = v9;
  v7[13] = *(void *)(v9 - 8);
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  v7[16] = swift_task_alloc();
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1E9C372C0;
  v7[17] = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C6C9CC, v10, 0);
}

uint64_t sub_1B2C6C9CC()
{
  sub_1B2AEC410();
  uint64_t v11 = v0;
  uint64_t v1 = v0[6];
  uint64_t v9 = v0[9];
  v10[0] = v0[5];
  v10[1] = v1;
  type metadata accessor for InferenceServiceInitContext();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v2 = sub_1B2C65760(v10);
  v0[18] = v2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 64) + **(int **)(v9 + 64));
  swift_task_alloc();
  sub_1B2B1DB0C();
  v0[19] = v3;
  *uint64_t v3 = v4;
  v3[1] = sub_1B2C6CB0C;
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[8];
  return v8(v5, v6, v2);
}

uint64_t sub_1B2C6CB0C()
{
  sub_1B299F394();
  sub_1B29A19D4();
  sub_1B29A0B54();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 160) = v0;
  swift_task_dealloc();
  sub_1B299B24C();
  sub_1B2C6FB98();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1B2C6CC00()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[7];
  sub_1B2C6FAF4(v0[16]);
  sub_1B29998FC();
  sub_1B29F83D8();
  v6();
  uint64_t v7 = v5 + *(void *)(*(void *)v5 + 120);
  swift_beginAccess();
  uint64_t v8 = sub_1B2C6FC48();
  v9(v8);
  swift_endAccess();
  swift_retain();
  sub_1B2C650CC(0);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7, v4);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v3))
  {
    swift_release();
    uint64_t v10 = sub_1B29A4CBC();
    v11(v10);
  }
  else
  {
    uint64_t v12 = v0[13];
    uint64_t v13 = v0[11];
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v13, AssociatedConformanceWitness);
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v12 + 8);
    uint64_t v17 = v0[14];
    uint64_t v18 = v0[12];
    if (v15)
    {
      uint64_t v19 = v0[7];
      sub_1B29A08B0();
      v20();
      swift_retain();
      sub_1B2C6E744((uint64_t)sub_1B2C6F268, v19);
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
      (*v16)(v17, v18);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B2999AB8();
  return v21();
}

uint64_t sub_1B2C6CE54()
{
  sub_1B299F394();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

void sub_1B2C6CED8()
{
}

uint64_t sub_1B2C6CF40()
{
  uint64_t v1 = *v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v16[-v10];
  uint64_t v12 = (char *)v0 + *(void *)(v1 + 120);
  sub_1B299D804();
  sub_1B299BBB4();
  v13();
  int v14 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v11, 1, AssociatedTypeWitness);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v11, v3);
  if (v14 != 1)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v9, 1, 1, AssociatedTypeWitness);
    swift_beginAccess();
    (*(void (**)(char *, unsigned char *, uint64_t))(v5 + 40))(v12, v9, v3);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1B2C6D0FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 64);
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  sub_1B2E82F38();
  sub_1B299B3B0();
  sub_1B299B798();
  v1();
  swift_release();
  return v0;
}

uint64_t sub_1B2C6D200()
{
  sub_1B2C6D0FC();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2C6D258@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2C68850(a1);
}

uint64_t sub_1B2C6D27C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B2AEC1EC;
  return sub_1B2C6BA38();
}

void sub_1B2C6D324()
{
}

uint64_t sub_1B2C6D348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char v13 = a8 & 1;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v15;
  *uint64_t v15 = v8;
  v15[1] = sub_1B2AEC1EC;
  return sub_1B2C68C08(a1, a2, v14, a4, a5, a6, a7, v13);
}

uint64_t sub_1B2C6D440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t *a8)
{
  *(void *)(v9 + 224) = v36;
  *(void *)(v9 + 232) = v8;
  *(void *)(v9 + 208) = v34;
  *(void *)(v9 + 216) = v35;
  *(void *)(v9 + 192) = v32;
  *(void *)(v9 + 200) = v33;
  *(void *)(v9 + 176) = v30;
  *(void *)(v9 + 184) = v31;
  *(void *)(v9 + 168) = v29;
  *(_OWORD *)(v9 + 152) = v28;
  *(unsigned char *)(v9 + 424) = a7;
  *(void *)(v9 + 136) = a5;
  *(void *)(v9 + 144) = a6;
  *(void *)(v9 + 120) = a3;
  *(void *)(v9 + 128) = a4;
  *(void *)(v9 + 104) = a1;
  *(void *)(v9 + 112) = a2;
  sub_1B2C6FA04();
  *(void *)(v9 + 240) = *(void *)(v10 + 88);
  *(void *)(v9 + 248) = *(void *)(v11 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = sub_1B2C6F9C4();
  *(void *)(v9 + 256) = type metadata accessor for InferenceMessageResponse();
  *(void *)(v9 + 264) = swift_getTupleTypeMetadata2();
  sub_1B299B3B0();
  *(void *)(v9 + 272) = sub_1B299E508();
  *(void *)(v9 + 280) = swift_task_alloc();
  uint64_t v13 = sub_1B2C6F9C4();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)(v9 + 16) = v12;
  *(void *)(v9 + 24) = v13;
  *(void *)(v9 + 32) = v31;
  *(void *)(v9 + 40) = v32;
  *(void *)(v9 + 48) = AssociatedConformanceWitness;
  *(void *)(v9 + 56) = v33;
  *(void *)(v9 + 64) = v34;
  *(void *)(v9 + 72) = v35;
  *(void *)(v9 + 80) = v36;
  uint64_t v15 = type metadata accessor for InferenceMessageRemoteServerResponse();
  *(void *)(v9 + 288) = v15;
  sub_1B299D2A8(v15);
  *(void *)(v9 + 296) = v16;
  *(void *)(v9 + 304) = sub_1B29A4C44();
  *(void *)(v9 + 312) = type metadata accessor for InferenceMessageResponseError();
  swift_getWitnessTable();
  uint64_t v17 = sub_1B2E83A08();
  *(void *)(v9 + 320) = v17;
  sub_1B299D2A8(v17);
  *(void *)(v9 + 328) = v18;
  *(void *)(v9 + 336) = sub_1B299E508();
  *(void *)(v9 + 344) = swift_task_alloc();
  *(void *)(v9 + 352) = swift_task_alloc();
  sub_1B2C6F9C4();
  uint64_t v19 = sub_1B2C6FC10();
  *(void *)(v9 + 360) = v19;
  sub_1B299D2A8(v19);
  *(void *)(v9 + 368) = v20;
  uint64_t v21 = sub_1B29A4C44();
  uint64_t v22 = *a8;
  uint64_t v23 = a8[1];
  *(void *)(v9 + 376) = v21;
  *(void *)(v9 + 384) = v22;
  *(void *)(v9 + 392) = v23;
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_1E9C372C0;
  *(void *)(v9 + 400) = qword_1E9C372C0;
  return MEMORY[0x1F4188298](sub_1B2C6D7A4, v24, 0);
}

uint64_t sub_1B2C6D7A4()
{
  sub_1B2C6B2FC();
  uint64_t v7 = (void *)MEMORY[0x1B3EB2480]();
  sub_1B2C6DEA0();
  v0[51] = 0;
  uint64_t v2 = v0[48];
  uint64_t v1 = v0[49];
  v0[11] = v2;
  v0[12] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[52] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1B2C6D99C;
  uint64_t v4 = v0[47];
  uint64_t v5 = v0[44];
  return sub_1B2C6DFC0(v5, v4, v0 + 11);
}

uint64_t sub_1B2C6D99C()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v2 = *(void *)(v1 + 400);
  uint64_t v3 = *v0;
  sub_1B299F388();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1B2C6DA80, v2, 0);
}

uint64_t sub_1B2C6DA80()
{
  sub_1B299BBB4();
  v1();
  sub_1B29A4CBC();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B299B3B0();
    (*(void (**)(void))(v2 + 32))();
  }
  else
  {
    uint64_t v3 = *(int *)(v0[33] + 48);
    uint64_t v4 = v0[35] + v3;
    uint64_t v5 = v0[43] + v3;
    sub_1B299B3B0();
    uint64_t v7 = *(void (**)(void))(v6 + 32);
    sub_1B2C6FA9C();
    v7();
    char v8 = *(unsigned char *)(v5 + 8);
    *(void *)uint64_t v4 = *(void *)v5;
    *(unsigned char *)(v4 + 8) = v8;
    sub_1B2C6FA9C();
    v7();
    sub_1B2C6FA9C();
    v7();
  }
  uint64_t v60 = v0[51];
  uint64_t v9 = swift_storeEnumTagMultiPayload();
  uint64_t v58 = (void *)MEMORY[0x1B3EB2480](v9);
  sub_1B29A4CBC();
  sub_1B2C6E4A0(v10);
  uint64_t v11 = v0[44];
  if (v60)
  {
    sub_1B2999874();
    sub_1B29A15FC();
    v16(v12, v13, v14, v15);
    sub_1B2A99BB0();
    v21(v17, v18, v19, v20);
    sub_1B29A08B0();
    v26(v22, v23, v24, v25);
    sub_1B2C6FB28();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B299AD7C();
  }
  else
  {
    uint64_t v29 = v0[41];
    uint64_t v28 = v0[42];
    uint64_t v30 = v0[40];
    sub_1B2A99BB0();
    v35(v31, v32, v33, v34);
    sub_1B29A08B0();
    v40(v36, v37, v38, v39);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, v11, v30);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v42 = v0[42];
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v43 = v0[40];
      uint64_t v44 = v0[41];
      uint64_t v45 = v0[13];
      *(void *)uint64_t v45 = v62;
      *(void *)(v45 + 8) = v63;
      *(void *)(v45 + 16) = 0;
      *(unsigned char *)(v45 + 24) = 0x80;
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    }
    else
    {
      uint64_t v46 = v0[35];
      uint64_t v61 = v0[34];
      uint64_t v47 = v0[32];
      uint64_t v59 = v0[33];
      uint64_t v48 = v0[13];
      uint64_t v49 = *(int *)(v59 + 48);
      uint64_t v50 = v46 + v49;
      uint64_t v51 = (uint64_t *)(v42 + v49);
      uint64_t v52 = *(void *)(v47 - 8);
      uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32);
      v53(v46, v42, v47);
      uint64_t v54 = *v51;
      LOBYTE(v51) = *((unsigned char *)v51 + 8);
      *(void *)uint64_t v50 = v54;
      *(unsigned char *)(v50 + 8) = (_BYTE)v51;
      uint64_t v55 = v61 + *(int *)(v59 + 48);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v53)(v61, v46, v47, v56);
      *(void *)uint64_t v55 = v54;
      *(unsigned char *)(v55 + 8) = (_BYTE)v51;
      *(void *)uint64_t v48 = v62;
      *(void *)(v48 + 8) = v63;
      *(void *)(v48 + 16) = v54;
      *(unsigned char *)(v48 + 24) = (_BYTE)v51;
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v61, v47);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B2999AB8();
  }
  return v27();
}

uint64_t sub_1B2C6DEA0()
{
  return sub_1B2E7FF78();
}

uint64_t sub_1B2C6DFC0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  v3[4] = a1;
  uint64_t v4 = *a3;
  uint64_t v5 = a3[1];
  if (qword_1EB7D8B08 != -1) {
    swift_once();
  }
  v3[5] = qword_1E9C372C0;
  v3[6] = swift_getAssociatedTypeWitness();
  v3[7] = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for InferenceMessageResponse();
  v3[8] = swift_getTupleTypeMetadata2();
  v3[2] = v4;
  v3[3] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v3[9] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1B2C6E1B0;
  return sub_1B2C695A0();
}

uint64_t sub_1B2C6E1B0()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v3 = v2;
  sub_1B29A0B54();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v3 + 40);
  if (v0) {
    uint64_t v8 = sub_1B2C6E380;
  }
  else {
    uint64_t v8 = sub_1B2C6E294;
  }
  return MEMORY[0x1F4188298](v8, v7, 0);
}

uint64_t sub_1B2C6E294()
{
  sub_1B299B9B8();
  swift_getAssociatedTypeWitness();
  sub_1B2C6FB10();
  type metadata accessor for InferenceMessageResponseError();
  swift_getWitnessTable();
  sub_1B2C6FCC0();
  swift_storeEnumTagMultiPayload();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2C6E380()
{
  sub_1B299B9B8();
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = *(uint64_t **)(v0 + 32);
  swift_checkMetadataState();
  sub_1B2C48AA4(v1, v2);

  swift_getAssociatedTypeWitness();
  sub_1B2C6FB10();
  type metadata accessor for InferenceMessageResponseError();
  swift_getWitnessTable();
  sub_1B2C6FCC0();
  swift_storeEnumTagMultiPayload();
  sub_1B299AD7C();
  return v3();
}

uint64_t sub_1B2C6E4A0@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for InferenceMessageRemoteServerResponse();
  swift_getWitnessTable();
  uint64_t result = sub_1B2E7FFD8();
  if (!v4)
  {
    *a1 = result;
    a1[1] = v2;
  }
  return result;
}

uint64_t sub_1B2C6E618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t *a8)
{
  char v12 = a7 & 1;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_1B2A14584;
  return sub_1B2C6D440(a1, a2, a3, a4, a5, a6, v12, a8);
}

uint64_t sub_1B2C6E744(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_release();
}

unint64_t sub_1B2C6E754()
{
  unint64_t result = qword_1E9C38768;
  if (!qword_1E9C38768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38768);
  }
  return result;
}

unint64_t sub_1B2C6E7A0()
{
  unint64_t result = qword_1E9C387A0;
  if (!qword_1E9C387A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C387A0);
  }
  return result;
}

unint64_t sub_1B2C6E7EC()
{
  unint64_t result = qword_1E9C41918;
  if (!qword_1E9C41918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41918);
  }
  return result;
}

unint64_t sub_1B2C6E83C()
{
  unint64_t result = qword_1EB7E48E0;
  if (!qword_1EB7E48E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E48E0);
  }
  return result;
}

unint64_t sub_1B2C6E888(uint64_t a1)
{
  unint64_t result = sub_1B2C6E8B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2C6E8B0()
{
  unint64_t result = qword_1E9C41920;
  if (!qword_1E9C41920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9C41920);
  }
  return result;
}

unint64_t sub_1B2C6E8FC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B2C6E92C();
  unint64_t result = sub_1B2C6E978();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B2C6E92C()
{
  unint64_t result = qword_1E9C37818;
  if (!qword_1E9C37818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37818);
  }
  return result;
}

unint64_t sub_1B2C6E978()
{
  unint64_t result = qword_1E9C37810;
  if (!qword_1E9C37810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37810);
  }
  return result;
}

void type metadata accessor for InferenceServiceInstanceQualifiedID()
{
}

void type metadata accessor for InferenceServiceInstanceRequestError()
{
}

void type metadata accessor for InferenceServiceInstanceRunEvent()
{
}

uint64_t sub_1B2C6EA00()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_1B2E82F38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for InferenceServiceInstance()
{
  return sub_1B29A1278();
}

ValueMetadata *type metadata accessor for InferenceServiceInstanceRunEvent.CodingKeys()
{
  return &type metadata for InferenceServiceInstanceRunEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceServiceInstanceRequestError.CodingKeys()
{
  return &type metadata for InferenceServiceInstanceRequestError.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceServiceInstanceRequestError.IncorrectInterfaceIdCodingKeys()
{
  return &type metadata for InferenceServiceInstanceRequestError.IncorrectInterfaceIdCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InferenceServiceInstanceQualifiedID.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C6EBF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceServiceInstanceQualifiedID.CodingKeys()
{
  return &type metadata for InferenceServiceInstanceQualifiedID.CodingKeys;
}

unint64_t sub_1B2C6EC34()
{
  unint64_t result = qword_1E9C41950;
  if (!qword_1E9C41950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41950);
  }
  return result;
}

unint64_t sub_1B2C6EC84()
{
  unint64_t result = qword_1E9C41958;
  if (!qword_1E9C41958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41958);
  }
  return result;
}

unint64_t sub_1B2C6ECD4()
{
  unint64_t result = qword_1E9C41960;
  if (!qword_1E9C41960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41960);
  }
  return result;
}

unint64_t sub_1B2C6ED24()
{
  unint64_t result = qword_1E9C41968[0];
  if (!qword_1E9C41968[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C41968);
  }
  return result;
}

unint64_t sub_1B2C6ED74()
{
  unint64_t result = qword_1E9C38778;
  if (!qword_1E9C38778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38778);
  }
  return result;
}

unint64_t sub_1B2C6EDC4()
{
  unint64_t result = qword_1E9C38770;
  if (!qword_1E9C38770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38770);
  }
  return result;
}

unint64_t sub_1B2C6EE14()
{
  unint64_t result = qword_1E9C41988;
  if (!qword_1E9C41988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41988);
  }
  return result;
}

unint64_t sub_1B2C6EE64()
{
  unint64_t result = qword_1E9C41990;
  if (!qword_1E9C41990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41990);
  }
  return result;
}

unint64_t sub_1B2C6EEB4()
{
  unint64_t result = qword_1E9C41998;
  if (!qword_1E9C41998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41998);
  }
  return result;
}

unint64_t sub_1B2C6EF04()
{
  unint64_t result = qword_1E9C419A0;
  if (!qword_1E9C419A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9C419A0);
  }
  return result;
}

unint64_t sub_1B2C6EF54()
{
  unint64_t result = qword_1E9C38798;
  if (!qword_1E9C38798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38798);
  }
  return result;
}

unint64_t sub_1B2C6EFA4()
{
  unint64_t result = qword_1E9C38790;
  if (!qword_1E9C38790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38790);
  }
  return result;
}

uint64_t sub_1B2C6EFF0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1B29A41B0();
  type metadata accessor for InferenceServiceConfig();
  sub_1B2C6F914();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 72) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B299B3B0();
  sub_1B299B798();
  v8();

  return MEMORY[0x1F4186498](v0, v6, v7);
}

uint64_t sub_1B2C6F124()
{
  sub_1B2AEC410();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B2C6FBB0();
  sub_1B2C6FB10();
  sub_1B29A41B0();
  uint64_t v5 = *(void *)(type metadata accessor for InferenceServiceConfig() - 8);
  uint64_t v6 = v0[2];
  uint64_t v7 = v0[3];
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[7];
  uint64_t v10 = (uint64_t *)v0[8];
  uint64_t v11 = (uint64_t)v0 + ((*(unsigned __int8 *)(v5 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  char v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *char v12 = v2;
  v12[1] = sub_1B2A14584;
  return sub_1B2C6C860(v4, v6, v7, v8, v9, v10, v11);
}

void sub_1B2C6F268()
{
}

uint64_t sub_1B2C6F270()
{
  sub_1B299F394();
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1B2AEC1EC;
  uint64_t v5 = (void *)sub_1B2C6FC74();
  return sub_1B2C6BD40(v5, v6, v3, v2);
}

unint64_t sub_1B2C6F314()
{
  unint64_t result = qword_1E9C419D8;
  if (!qword_1E9C419D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9C419D8);
  }
  return result;
}

unint64_t sub_1B2C6F360()
{
  unint64_t result = qword_1E9C37820[0];
  if (!qword_1E9C37820[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C37820);
  }
  return result;
}

uint64_t sub_1B2C6F3AC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for InferenceMessageRequest();
  sub_1B2C6F914();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((*(void *)(v4 + 64) + ((v5 + 40) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  sub_1B299B3B0();
  sub_1B299B798();
  v8();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, v7, v6);
}

uint64_t sub_1B2C6F4FC()
{
  sub_1B299B9B8();
  uint64_t v3 = v2;
  sub_1B2C6FBB0();
  sub_1B2C6FB10();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1B2C6FC10();
  sub_1B299D2A8(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(uint64_t **)(v0 + 32);
  uint64_t v11 = v0 + v9;
  uint64_t v12 = *(void *)(v0 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  swift_task_alloc();
  sub_1B2B1DB0C();
  *(void *)(v1 + 16) = v13;
  *uint64_t v13 = v14;
  v13[1] = sub_1B2AEC1EC;
  return sub_1B2C6ADB8(v3, v10, v11, v12);
}

uint64_t type metadata accessor for InferenceServiceInstance.RunErrorLocalConversion()
{
  return sub_1B29A1278();
}

unsigned char *_s20IntelligencePlatform36InferenceServiceInstanceRequestErrorO30IncorrectInterfaceIdCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C6F720);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *_s20IntelligencePlatform32InferenceServiceInstanceRunEventV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2C6F7E4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for InferenceServiceInstanceRunnerError()
{
}

unint64_t sub_1B2C6F818(uint64_t a1)
{
  unint64_t result = sub_1B2C6F314();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2C6F844()
{
  unint64_t result = qword_1E9C41A78;
  if (!qword_1E9C41A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41A78);
  }
  return result;
}

uint64_t sub_1B2C6F890(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2C6F8CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C6F8EC()
{
  return swift_task_dealloc();
}

uint64_t sub_1B2C6F948()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B2C6F968()
{
  return v0;
}

uint64_t sub_1B2C6F990()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2C6F9C4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B2C6F9E4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B2C6FA34()
{
  return v0;
}

uint64_t sub_1B2C6FA54()
{
  return v0;
}

uint64_t sub_1B2C6FA74()
{
  return swift_task_dealloc();
}

uint64_t sub_1B2C6FAAC()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B2C6FAD0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B2C6FAF4(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 0, 1, v1);
}

uint64_t sub_1B2C6FB10()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B2C6FB28()
{
  return swift_task_dealloc();
}

uint64_t sub_1B2C6FB4C()
{
  return swift_dynamicCast();
}

uint64_t sub_1B2C6FB70(uint64_t result)
{
  *v1 &= result;
  return result;
}

uint64_t sub_1B2C6FB80()
{
  return v0;
}

uint64_t sub_1B2C6FBB0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B2C6FBD0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B2C6FBF0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B2C6FC10()
{
  return type metadata accessor for InferenceMessageRequest();
}

uint64_t sub_1B2C6FC28()
{
  return swift_release();
}

uint64_t sub_1B2C6FC48()
{
  return v0;
}

uint64_t sub_1B2C6FC54()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C6FC74()
{
  return v0;
}

uint64_t sub_1B2C6FC80()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B2C6FCA0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B2C6FCC0()
{
  return sub_1B2E83A08();
}

uint64_t sub_1B2C6FCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 1, 1, a4);
}

uint64_t sub_1B2C6FCF8()
{
  return v0;
}

double sub_1B2C6FD0C@<D0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  sub_1B2C66894(a1, a2);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1B29A2E08();
  sub_1B29B2CA4(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
    sub_1B29D1D20(&v8, (uint64_t)v10);
    sub_1B29AEC7C(v10, v10[3]);
    sub_1B299DBDC();
    sub_1B2C68798(v5, v6);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
  }
  else
  {
    sub_1B2A10B50((uint64_t)&v8, &qword_1E9C41A80);
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_1B2C6FDE0@<D0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  sub_1B2C6676C(a1, a2);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1B29A2E08();
  sub_1B29B2CA4(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
    sub_1B29D1D20(&v8, (uint64_t)v10);
    sub_1B29AEC7C(v10, v10[3]);
    sub_1B299DBDC();
    sub_1B2C684FC(v5, v6);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
  }
  else
  {
    sub_1B2A10B50((uint64_t)&v8, &qword_1E9C379E0);
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceServiceInstanceBuilderError()
{
  return &type metadata for InferenceServiceInstanceBuilderError;
}

uint64_t destroy for InferenceServiceInstanceBuilderParameters(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1 + 48);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InferenceServiceInstanceBuilderParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = a2 + 48;
  long long v8 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(a1 + 48, v7, v9);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InferenceServiceInstanceBuilderParameters(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1B2B385E4(a1 + 6, a2 + 6);
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InferenceServiceInstanceBuilderParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1 + 48);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InferenceServiceInstanceBuilderParameters()
{
  return &type metadata for InferenceServiceInstanceBuilderParameters;
}

unint64_t sub_1B2C7011C(uint64_t a1)
{
  unint64_t result = sub_1B2C5CF00();
  *(void *)(a1 + 8) = result;
  return result;
}

void InferenceServiceInstanceClient.unsafeSyncRun(with:parentEventId:)(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v61 = a4;
  int v57 = a3;
  uint64_t v55 = a2;
  uint64_t v53 = a1;
  uint64_t v5 = *(void *)(*(void *)v4 + 88);
  uint64_t v6 = *(void *)(*(void *)v4 + 80);
  swift_getAssociatedTypeWitness();
  type metadata accessor for InferenceOutput();
  sub_1B29C3588((uint64_t *)&unk_1EB7E3A10);
  uint64_t v51 = sub_1B2E83A08();
  uint64_t v56 = sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v52 = v7;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (char *)&v45 - v9;
  sub_1B299D31C();
  uint64_t v60 = v10;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v58 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v59 = (char *)&v45 - v14;
  uint64_t v47 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B299D31C();
  uint64_t v16 = v15;
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v45 - v20;
  uint64_t v22 = sub_1B29A3EB4(&qword_1EB7E2778);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v24;
  dispatch_semaphore_t v48 = dispatch_semaphore_create(0);
  type metadata accessor for InferenceServiceInstanceClient._UnsafeOutputClass();
  uint64_t v25 = sub_1B2C710B0();
  uint64_t v26 = sub_1B2E82A08();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v24, 1, 1, v26);
  sub_1B29A080C();
  v27();
  unint64_t v28 = (*(unsigned __int8 *)(v16 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v29 = (v28 + v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = 0;
  *((void *)v30 + 3) = 0;
  uint64_t v31 = AssociatedTypeWitness;
  *((void *)v30 + 4) = v47;
  *((void *)v30 + 5) = v5;
  dispatch_semaphore_t v32 = v48;
  uint64_t v33 = v54;
  *((void *)v30 + 6) = v48;
  *((void *)v30 + 7) = v33;
  uint64_t v34 = v21;
  uint64_t v35 = (uint64_t)v50;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v30[v28], v34, v31);
  uint64_t v36 = &v30[(v28 + v18 + 7) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v37 = v51;
  *(void *)uint64_t v36 = v55;
  v36[8] = v57 & 1;
  *(void *)&v30[v29] = v25;
  uint64_t v38 = v32;
  swift_retain();
  swift_retain();
  sub_1B2C718CC((uint64_t)v49, (uint64_t)&unk_1E9C41A90, (uint64_t)v30);
  swift_release();
  sub_1B2E82E88();
  swift_beginAccess();
  sub_1B29A080C();
  v39();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v35, 1, v37) == 1)
  {
    sub_1B29A0B64();
    v44();
    sub_1B2E83418();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v59, v35, v37);
    sub_1B29A080C();
    v40();
    uint64_t v41 = v62;
    sub_1B2C70680(v37, (uint64_t)&v63, v61);
    if (v41)
    {
      sub_1B29A0B64();
      v42();
      swift_release();
    }
    else
    {
      sub_1B29A0B64();
      v43();
      swift_release();
    }
  }
}

uint64_t type metadata accessor for InferenceOutput()
{
  return sub_1B29A1278();
}

uint64_t type metadata accessor for InferenceServiceInstanceClient._UnsafeOutputClass()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2C70680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = *(void *)(a1 + 24);
    sub_1B299B3B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a2, v3, v7);
    return swift_willThrowTypedImpl();
  }
  else
  {
    sub_1B299B3B0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(a3, v3);
  }
}

uint64_t sub_1B2C70748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1B2C708B0(a1, a2, a3);
  return v6;
}

uint64_t sub_1B2C707A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1B299B3B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a3, a1, a2);
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for InferenceMessageResponse() + 28));
  sub_1B299B3B0();
  (*(void (**)(uint64_t))(v8 + 8))(a1);
  uint64_t result = type metadata accessor for InferenceOutput();
  *(void *)(a3 + *(int *)(result + 28)) = v7;
  return result;
}

uint64_t InferenceServiceInstanceClient.instanceQualifiedId.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_1B29AEC7C(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t *sub_1B2C708B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  sub_1B29D1C70(v3 + 2);
  sub_1B299B3B0();
  (*(void (**)(void))(v4 + 32))();
  return v3;
}

uint64_t InferenceServiceInstanceClient.run(with:parentEventId:)()
{
  sub_1B299F394();
  *(unsigned char *)(v1 + 144) = v2;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v0;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  uint64_t v6 = *v0;
  *(void *)(v1 + 48) = *(void *)(*v0 + 88);
  *(void *)(v1 + 56) = *(void *)(v6 + 80);
  *(void *)(v1 + 64) = swift_getAssociatedTypeWitness();
  sub_1B299D31C();
  *(void *)(v1 + 72) = v7;
  *(void *)(v1 + 80) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for InferenceMessageRequest();
  *(void *)(v1 + 88) = v8;
  sub_1B299D2A8(v8);
  *(void *)(v1 + 96) = v9;
  *(void *)(v1 + 104) = swift_task_alloc();
  *(void *)(v1 + 112) = swift_getAssociatedTypeWitness();
  type metadata accessor for InferenceMessageResponse();
  *(void *)(v1 + 120) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B2C70AA4, 0, 0);
}

uint64_t sub_1B2C70AA4()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v17 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v6 = *(void **)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 24);
  char v9 = *(unsigned char *)(v0 + 144) & 1;
  uint64_t v10 = v6[6];
  uint64_t v18 = v6[5];
  sub_1B29AEC7C(v6 + 2, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v8, v4);
  sub_1B2C4E428(v3, v7, v9, v4, v5, v17, v1);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 32)
                                                                            + **(int **)(v10 + 32));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1B2C70C30;
  uint64_t v12 = *(void *)(v0 + 120);
  uint64_t v13 = *(void *)(v0 + 104);
  uint64_t v14 = *(void *)(v0 + 56);
  return v16(v12, v13, v14, v18, v10);
}

uint64_t sub_1B2C70C30()
{
  sub_1B299F394();
  sub_1B299B708();
  uint64_t v2 = *v1;
  sub_1B299B0E0();
  *uint64_t v3 = v2;
  *(void *)(v4 + 136) = v0;
  swift_task_dealloc();
  sub_1B29A0B64();
  v5();
  if (v0) {
    uint64_t v6 = sub_1B2C70DFC;
  }
  else {
    uint64_t v6 = sub_1B2C70D6C;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1B2C70D6C()
{
  sub_1B299F394();
  sub_1B2C707A0(v0[15], v0[14], v0[2]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1B2C70DFC()
{
  sub_1B299B3BC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

void InferenceServiceInstanceClient.provide(feedback:for:)(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedbackService()), sel_init);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  FeedbackService.record<A>(feedback:for:)(a1, a2, 0);
}

uint64_t sub_1B2C70F68()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  swift_getAssociatedTypeWitness();
  type metadata accessor for InferenceOutput();
  sub_1B29C3588((uint64_t *)&unk_1EB7E3A10);
  sub_1B2E83A08();
  uint64_t v2 = sub_1B2E82F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1B2C7105C()
{
  sub_1B2C70F68();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2C710B0()
{
  return sub_1B2C710E4();
}

uint64_t sub_1B2C710E4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  swift_getAssociatedTypeWitness();
  type metadata accessor for InferenceOutput();
  sub_1B29C3588((uint64_t *)&unk_1EB7E3A10);
  uint64_t v2 = sub_1B2E83A08();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, v2);
  return v0;
}

uint64_t sub_1B2C711B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  v4[9] = v10;
  swift_getAssociatedTypeWitness();
  uint64_t v5 = type metadata accessor for InferenceOutput();
  v4[10] = v5;
  sub_1B29C3588((uint64_t *)&unk_1EB7E3A10);
  v4[11] = sub_1B2E83A08();
  uint64_t v6 = sub_1B2E82F38();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v4[18] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1B2C713C0;
  return InferenceServiceInstanceClient.run(with:parentEventId:)();
}

uint64_t sub_1B2C713C0()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v2 = *v1;
  sub_1B299B0E0();
  *uint64_t v3 = v2;
  *(void *)(v4 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_1B2C715A4;
  }
  else {
    uint64_t v5 = sub_1B2C714A4;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1B2C714A4()
{
  (*(void (**)(void, void, void))(v0[16] + 32))(v0[15], v0[17], v0[10]);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = sub_1B2C7282C();
  v2(v1);
  sub_1B29A4678();
  uint64_t v3 = sub_1B299F8D0();
  v4(v3);
  swift_endAccess();
  sub_1B2E82E98();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v5();
}

uint64_t sub_1B2C715A4()
{
  **(void **)(v0 + 120) = *(void *)(v0 + 152);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = sub_1B2C7282C();
  v2(v1);
  sub_1B29A4678();
  uint64_t v3 = sub_1B299F8D0();
  v4(v3);
  swift_endAccess();
  sub_1B2E82E98();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v5();
}

uint64_t sub_1B2C71694()
{
  swift_getAssociatedTypeWitness();
  sub_1B299D31C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((*(void *)(v4 + 64) + ((v5 + 64) & ~v5) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();

  swift_release();
  sub_1B29A0B64();
  v8();
  swift_release();

  return MEMORY[0x1F4186498](v0, v7, v6);
}

uint64_t sub_1B2C71778(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B299D2A8(AssociatedTypeWitness);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1B299ACAC;
  return sub_1B2C711B0(a1, v6, v7, v8);
}

uint64_t sub_1B2C718CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E82A08();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v6) == 1)
  {
    sub_1B29A407C(a1);
  }
  else
  {
    sub_1B2E829F8();
    sub_1B299B3B0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B2E829B8();
    swift_unknownObjectRelease();
  }
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t InferenceServiceInstanceClient.deinit()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  return v0;
}

uint64_t InferenceServiceInstanceClient.__deallocating_deinit()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t InferenceOutput.output.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t InferenceOutput.eventId.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_1B2C71AC8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2C71B1C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t InferenceOutput<>.encode(to:)(void *a1)
{
  type metadata accessor for InferenceOutput.CodingKeys();
  swift_getWitnessTable();
  sub_1B2E83718();
  sub_1B299D31C();
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v2);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2E83A38();
  sub_1B2E836D8();
  if (!v6) {
    sub_1B2E836F8();
  }
  sub_1B29A0B64();
  return v4(v3);
}

uint64_t type metadata accessor for InferenceOutput.CodingKeys()
{
  return sub_1B29A1278();
}

uint64_t InferenceOutput<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v27[1] = a3;
  sub_1B299D31C();
  uint64_t v28 = v6;
  uint64_t v29 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v30 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for InferenceOutput.CodingKeys();
  swift_getWitnessTable();
  sub_1B2E83608();
  sub_1B299D31C();
  uint64_t v31 = v10;
  uint64_t v32 = v9;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = type metadata accessor for InferenceOutput();
  sub_1B299D31C();
  v27[0] = v13;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v27 - v15;
  sub_1B29AEC7C(a1, a1[3]);
  uint64_t v17 = v33;
  sub_1B2E83A18();
  if (v17) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  uint64_t v18 = v28;
  char v35 = 0;
  uint64_t v19 = v30;
  sub_1B2E835B8();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v33 = v16;
  v20(v16, v19, a2);
  char v34 = 1;
  uint64_t v21 = sub_1B2E835D8();
  sub_1B29A0B64();
  v22();
  uint64_t v23 = v33;
  *(void *)&v33[*(int *)(v12 + 28)] = v21;
  uint64_t v24 = v27[0];
  sub_1B29A080C();
  v25();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v23, v12);
}

uint64_t sub_1B2C71FE8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return InferenceOutput<>.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1B2C72008(void *a1)
{
  return InferenceOutput<>.encode(to:)(a1);
}

uint64_t sub_1B2C72024()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InferenceServiceInstanceClient()
{
  return sub_1B29A1278();
}

uint64_t method lookup function for InferenceServiceInstanceClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceServiceInstanceClient);
}

uint64_t sub_1B2C72098()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for InferenceOutput();
  sub_1B29C3588((uint64_t *)&unk_1EB7E3A10);
  sub_1B2E83A08();
  uint64_t result = sub_1B2E82F38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B2C7217C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B2C72280);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, v5, v4);
  }
  else {
    return 0;
  }
}

void sub_1B2C72294(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = ((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
  }
  else
  {
    int v9 = a3 - v7;
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
  }
  if (a2 > v7)
  {
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v13 = a2 - v7;
    }
    else {
      int v13 = 1;
    }
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v14 = ~v7 + a2;
      bzero(a1, v8);
      *(_DWORD *)a1 = v14;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1B2C7242CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

unsigned char *sub_1B2C72454(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C72520);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1B2C72548()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C72564()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C72580()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2C7259C(uint64_t a1, int *a2)
{
  unsigned int v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_1B2C72678;
  return v6(a1);
}

uint64_t sub_1B2C72678()
{
  sub_1B299B3BC();
  sub_1B299B708();
  uint64_t v1 = *v0;
  sub_1B299B0E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  int v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1B2C72740()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B2C72778()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  unsigned int v4 = *(int **)(v0 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1B299ACAC;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E9C41B20 + dword_1E9C41B20);
  return v6(v3, v4);
}

uint64_t sub_1B2C7282C()
{
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 0, 1, v2);
  return v1;
}

uint64_t initializeWithCopy for InferenceServiceInstanceEnum(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    char v5 = 1;
  }
  else
  {
    char v5 = 0;
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
  }
  (**(void (***)(uint64_t))(v4 - 8))(a1);
  *(unsigned char *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for InferenceServiceInstanceEnum(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a2 + 2;
    }
    if (v4 == 1)
    {
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = v6;
  }
  return a1;
}

__n128 initializeWithTake for InferenceServiceInstanceEnum(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InferenceServiceInstanceEnum(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a2 + 2;
    }
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = v4 == 1;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceServiceInstanceEnum(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for InferenceServiceInstanceEnum(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B2C72AC0(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1B2C72ADC(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for InferenceServiceInstanceEnum()
{
  return &type metadata for InferenceServiceInstanceEnum;
}

uint64_t sub_1B2C72B18@<X0>(uint64_t *a1@<X8>)
{
  sub_1B29C3BE8(v1, (uint64_t)v11);
  if ((v12 & 1) == 0) {
    return sub_1B29D1D20(v11, (uint64_t)a1);
  }
  sub_1B29D1D20(v11, (uint64_t)v8);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  long long v5 = sub_1B29AEC7C(v8, v9);
  a1[3] = v3;
  a1[4] = *(void *)(v4 + 8);
  char v6 = sub_1B29D1C70(a1);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(v6, v5, v3);
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v8);
}

uint64_t sub_1B2C72BD8@<X0>(uint64_t a1@<X8>)
{
  sub_1B29C3BE8(v1, (uint64_t)v4);
  if (v5) {
    return sub_1B29D1D20(v4, a1);
  }
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return sub_1B2C5CF4C((uint64_t)v4);
}

uint64_t sub_1B2C72C38(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(a2 + 24))(&v3);
  return ~v4 & 1;
}

void InferenceServiceRunnerCost.init(retentionCachePolicy:)(uint64_t a1@<X8>)
{
}

uint64_t InferenceServiceRunnerExtendedResponseWithEvent.init(output:runEvent:resultCachePolicy:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a2;
  char v8 = *((unsigned char *)a2 + 8);
  sub_1B299B3B0();
  (*(void (**)(uint64_t))(v9 + 32))(a4);
  uint64_t v10 = type metadata accessor for InferenceServiceRunnerExtendedResponseWithEvent();
  uint64_t v11 = a4 + *(int *)(v10 + 44);
  sub_1B299B3B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v11, a1, a3);
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v11, 0, 1, a3);
  uint64_t v14 = a4 + *(int *)(v10 + 48);
  *(void *)uint64_t v14 = v7;
  *(unsigned char *)(v14 + 8) = v8;
  return result;
}

uint64_t type metadata accessor for InferenceServiceRunnerExtendedResponseWithEvent()
{
  return sub_1B29A1278();
}

uint64_t InferenceServiceRunnerFixedCost.wrappedCost.getter()
{
  return 0;
}

uint64_t (*sub_1B2C72DA4(void *a1))()
{
  *a1 = 0;
  return j_j__s20IntelligencePlatform17TrialAssetManagerC13RefreshPolicyOwxx;
}

uint64_t (*InferenceServiceRunnerFixedCost.wrappedCost.modify(void *a1))()
{
  *a1 = 0;
  return j__s20IntelligencePlatform17TrialAssetManagerC13RefreshPolicyOwxx;
}

unint64_t static _InferenceServiceRunnerNoEventLog.type.getter()
{
  return 0xD000000000000036;
}

uint64_t sub_1B2C72E08(uint64_t a1)
{
  unint64_t v2 = sub_1B2C72F6C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2C72E44(uint64_t a1)
{
  unint64_t v2 = sub_1B2C72F6C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t _InferenceServiceRunnerNoEventLog.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C41B30);
  sub_1B299D31C();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2C72F6C();
  sub_1B2E83A38();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

unint64_t sub_1B2C72F6C()
{
  unint64_t result = qword_1E9C41B38;
  if (!qword_1E9C41B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41B38);
  }
  return result;
}

uint64_t _InferenceServiceRunnerNoEventLog.init(from:)(uint64_t a1)
{
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
}

unint64_t sub_1B2C72FE0()
{
  return 0xD000000000000036;
}

uint64_t sub_1B2C73000(uint64_t a1)
{
  return _InferenceServiceRunnerNoEventLog.init(from:)(a1);
}

uint64_t sub_1B2C73018(void *a1)
{
  return _InferenceServiceRunnerNoEventLog.encode(to:)(a1);
}

uint64_t InferenceServiceRunnerExtendedResponse.init(output:resultCachePolicy:)@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  sub_1B299B3B0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, v6);
  uint64_t result = type metadata accessor for InferenceServiceRunnerExtendedResponse();
  uint64_t v8 = a2 + *(int *)(result + 28);
  *(void *)uint64_t v8 = v3;
  *(unsigned char *)(v8 + 8) = v4;
  return result;
}

uint64_t type metadata accessor for InferenceServiceRunnerExtendedResponse()
{
  return sub_1B29A1278();
}

void InferenceServiceRunnerExtendedResponse.runEvent.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void InferenceServiceRunnerExtendedResponse.resultCachePolicy.getter(uint64_t a1@<X8>)
{
}

void sub_1B2C730E4(unsigned char *a1@<X8>)
{
}

uint64_t InferenceServiceRunnerExtendedResponseWithEvent.runEvent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 44);
  sub_1B2E82F38();
  sub_1B299B3B0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);

  return v7(a2, v4, v5);
}

void InferenceServiceRunnerExtendedResponseWithEvent.resultCachePolicy.getter(uint64_t a1@<X8>)
{
}

void InferenceServiceRunnerCost.retentionCachePolicy.getter(uint64_t a1@<X8>)
{
}

uint64_t static InferenceServiceRunnerCost.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    if (v2 == 0.0)
    {
      if (*(unsigned char *)(a2 + 8)) {
        return *(void *)&v3 == 0;
      }
    }
    else if (*(unsigned char *)(a2 + 8))
    {
      return *(void *)&v3 != 0;
    }
  }
  else
  {
    if (v2 == v3) {
      char v5 = *(unsigned char *)(a2 + 8);
    }
    else {
      char v5 = 1;
    }
    if ((v5 & 1) == 0) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1B2C731F4()
{
  uint64_t v0 = swift_retain();
  return InferenceServiceRunnerFixedCost.wrappedCost.setter(v0);
}

uint64_t InferenceServiceRunnerDynamicCost.setCost(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)a1;
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 40))(a2);
  if (result)
  {
    sub_1B2C73498(v3, v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B2C73298(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  double v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return sub_1B2C734F8(v2);
}

uint64_t sub_1B2C73358(uint64_t a1, char a2)
{
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  uint64_t v3 = *(void (**)(uint64_t *))(v2 + 32);
  swift_retain();
  v3(&v5);

  return swift_release();
}

uint64_t sub_1B2C733B4(uint64_t a1)
{
  uint64_t v2 = (void (*)(uint64_t))sub_1B2C73830();
  v2(a1);

  return swift_release();
}

uint64_t sub_1B2C73400@<X0>(uint64_t a1@<X8>)
{
  sub_1B29A1C7C();
  uint64_t v4 = v1 + *(void *)(v3 + 88);
  swift_beginAccess();
  sub_1B29A1C7C();
  sub_1B299B3B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
}

uint64_t sub_1B2C73498(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  char v6 = *(unsigned char *)(v2 + 24);
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return sub_1B2C73358(v5, v6);
}

uint64_t sub_1B2C734F8(unsigned char *a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  char v6 = &v11[-v5];
  uint64_t v8 = v1 + *(void *)(v7 + 88);
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 24))(v8, a1, v3);
  swift_endAccess();
  sub_1B2C733B4((uint64_t)v6);
  uint64_t v9 = *(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8);
  v9(a1, v3);
  return v9(v6, v3);
}

void (*sub_1B2C7366C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 80);
  v3[4] = v5;
  sub_1B299D31C();
  uint64_t v7 = v6;
  *(void *)(v8 + 40) = v6;
  size_t v10 = *(void *)(v9 + 64);
  v3[6] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v3[7] = v11;
  uint64_t v12 = (uint64_t)v1 + *(void *)(v4 + 88);
  swift_beginAccess();
  int v13 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 16);
  v3[8] = v13;
  v3[9] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v11, v12, v5);
  return sub_1B2C73784;
}

void sub_1B2C73784(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = *(unsigned char **)(*a1 + 48);
  uint64_t v3 = *(void **)(*a1 + 56);
  if (a2)
  {
    uint64_t v5 = *(void *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 40);
    (*(void (**)(void, void, uint64_t))(v2 + 64))(*(void *)(v2 + 48), *(void *)(v2 + 56), v5);
    sub_1B2C734F8(v4);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  else
  {
    sub_1B2C734F8(*(unsigned char **)(v2 + 56));
  }
  free(v3);
  free(v4);

  free((void *)v2);
}

uint64_t sub_1B2C73830()
{
  uint64_t v1 = *(void *)(v0 + *(void *)(*(void *)v0 + 96));
  swift_retain();
  return v1;
}

uint64_t InferenceServiceDidSet.__allocating_init(wrappedValue:)()
{
  uint64_t v0 = swift_allocObject();
  InferenceServiceDidSet.init(wrappedValue:)();
  return v0;
}

uint64_t InferenceServiceDidSet.init(wrappedValue:)()
{
  sub_1B29A1C7C();
  uint64_t v2 = (void *)(v0 + *(void *)(v1 + 96));
  swift_allocObject();
  sub_1B29A1C7C();
  *(void *)(v4 + 16) = *(void *)(v3 + 80);
  *uint64_t v2 = nullsub_1;
  v2[1] = v4;
  sub_1B299B3B0();
  (*(void (**)(void))(v5 + 32))();
  return v0;
}

uint64_t sub_1B2C73978()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t InferenceServiceDidSet.deinit()
{
  sub_1B299B3B0();
  (*(void (**)(void))(v1 + 8))();
  swift_release();
  return v0;
}

uint64_t InferenceServiceDidSet.__deallocating_deinit()
{
  InferenceServiceDidSet.deinit();

  return swift_deallocClassInstance();
}

unint64_t sub_1B2C73A6C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B2C73A9C();
  unint64_t result = sub_1B2C73AE8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B2C73A9C()
{
  unint64_t result = qword_1E9C41B40;
  if (!qword_1E9C41B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41B40);
  }
  return result;
}

unint64_t sub_1B2C73AE8()
{
  unint64_t result = qword_1E9C41B48;
  if (!qword_1E9C41B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41B48);
  }
  return result;
}

unint64_t sub_1B2C73B38()
{
  unint64_t result = qword_1E9C41B50;
  if (!qword_1E9C41B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41B50);
  }
  return result;
}

uint64_t sub_1B2C73B84(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

void sub_1B2C73B8C(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1B2C73B98()
{
  return 16;
}

__n128 sub_1B2C73BA4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B2C73BB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2C73400(a1);
}

uint64_t sub_1B2C73BD8()
{
  return 8;
}

void *sub_1B2C73BE4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

ValueMetadata *type metadata accessor for _InferenceServiceRunnerNoEventLog()
{
  return &type metadata for _InferenceServiceRunnerNoEventLog;
}

uint64_t dispatch thunk of InferenceServiceRunner.cost.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of InferenceServiceRunner.wrappedCost.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of InferenceServiceRunner.wrappedCost.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of InferenceServiceRunner.wrappedCost.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of InferenceServiceRunner.run(input:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 64) + **(int **)(a5 + 64));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1B2B3D97C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of InferenceServiceRunnerExtendedResponseProtocol.output.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of InferenceServiceRunnerExtendedResponseProtocol.runEvent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of InferenceServiceRunnerExtendedResponseProtocol.resultCachePolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1B2C73DAC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B2C73E44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    char v11 = *(unsigned char *)(v10 + 8);
    unint64_t v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v12 = *(void *)v10;
    *(unsigned char *)(v12 + 8) = v11;
  }
  return v4;
}

uint64_t sub_1B2C73F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1B2C73FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1B2C7404C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1B2C740D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1B2C74154(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v7 = (a2 - v5 + 255) >> (8 * v6);
    if (v6 < 4) {
      unsigned int v8 = v7 + 1;
    }
    else {
      unsigned int v8 = 2;
    }
    if (v8 >= 0x10000) {
      unsigned int v9 = 4;
    }
    else {
      unsigned int v9 = 2;
    }
    if (v8 < 0x100) {
      unsigned int v9 = 1;
    }
    if (v8 >= 2) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    switch(v10)
    {
      case 1:
        int v11 = a1[v6];
        if (!a1[v6]) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v11 = *(unsigned __int16 *)&a1[v6];
        if (*(_WORD *)&a1[v6]) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B2C74274);
      case 4:
        int v11 = *(_DWORD *)&a1[v6];
        if (!v11) {
          break;
        }
LABEL_18:
        int v12 = (v11 - 1) << (8 * v6);
        if (v6 >= 4) {
          int v12 = 0;
        }
        if (((*(_DWORD *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v13 = *a1;
        }
        else {
          int v13 = *(_DWORD *)a1;
        }
        return v5 + (v13 | v12) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, v5, v4);
  }
  else {
    return 0;
  }
}

void sub_1B2C74288(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = ((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v9 = 8 * v8;
  if (v7 >= a3)
  {
    int v13 = 0;
  }
  else
  {
    unsigned int v10 = (a3 - v7 + 255) >> v9;
    if (v8 <= 3) {
      unsigned int v11 = v10 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
  }
  if (v7 < a2)
  {
    unsigned int v14 = (~v7 + a2) >> v9;
    if (v8 < 4) {
      int v15 = v14 + 1;
    }
    else {
      int v15 = 1;
    }
    if (v8 >= 4) {
      int v16 = ~v7 + a2;
    }
    else {
      int v16 = (~(_BYTE)v7 + a2);
    }
    bzero(a1, v8);
    if (v8 == 1) {
      *a1 = v16;
    }
    else {
      *(_DWORD *)a1 = v16;
    }
    switch(v13)
    {
      case 1:
        a1[v8] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v15;
        return;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v8] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 3:
LABEL_38:
      __break(1u);
      JUMPOUT(0x1B2C74448);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_30;
    default:
LABEL_30:
      if (a2)
      {
LABEL_31:
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t sub_1B2C74470()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1B2E82F38();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1B2C74548(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  int v9 = *(_DWORD *)(v7 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v5 + 64) + v9;
  if (*(_DWORD *)(v7 + 84)) {
    size_t v12 = *(void *)(v7 + 64);
  }
  else {
    size_t v12 = *(void *)(v7 + 64) + 1;
  }
  unint64_t v13 = ((v12 + (v11 & ~(unint64_t)v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  unsigned int v14 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  int v15 = (*(_DWORD *)(v5 + 80) | v9) & 0x100000;
  if (v14 > 7 || v15 != 0 || v13 > 0x18)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v19 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v20 = (const void *)(((unint64_t)a2 + v11) & v19);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v20, 1, v6))
    {
      memcpy((void *)(((unint64_t)v4 + v11) & v19), v20, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)v4 + v11) & v19, v20, v6);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(((unint64_t)v4 + v11) & v19, 0, 1, v6);
    }
    unint64_t v22 = ((unint64_t)v20 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = *(void *)v22;
    unint64_t v24 = ((((unint64_t)v4 + v11) & v19) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)(v24 + 8) = *(unsigned char *)(v22 + 8);
    *(void *)unint64_t v24 = v23;
  }
  return v4;
}

uint64_t sub_1B2C74734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(v5 - 8);
  unint64_t v6 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v6, 1, v5);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, v5);
  }
  return result;
}

uint64_t sub_1B2C74828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  size_t v12 = (void *)((v11 + a1) & ~v10);
  unint64_t v13 = (const void *)((v11 + a2) & ~v10);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v8))
  {
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v12, v13, v16);
  }
  else
  {
    uint64_t v18 = *(void (**)(void *, const void *, uint64_t))(v9 + 16);
    uint64_t v17 = v9 + 16;
    v18(v12, v13, v8);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v8);
    int v14 = *(_DWORD *)(v17 + 68);
    size_t v15 = *(void *)(v17 + 48);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  uint64_t v20 = (uint64_t)v12 + v19 + 7;
  unint64_t v21 = ((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)v21;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v20 = v22;
  return a1;
}

uint64_t sub_1B2C74978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (void *)((v10 + a1) & ~v9);
  size_t v12 = (const void *)((v10 + a2) & ~v9);
  int v13 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v11, 1, v7);
  int v14 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v12, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v11, v12, v7);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 0, 1, v7);
      goto LABEL_12;
    }
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v11, v12, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  if (v15) {
    size_t v17 = v16;
  }
  else {
    size_t v17 = v16 + 1;
  }
  memcpy(v11, v12, v17);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v18 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v19 = (uint64_t)v11 + v18 + 7;
  unint64_t v20 = ((unint64_t)v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v21 = *(unsigned char *)(v20 + 8);
  v19 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = v21;
  return a1;
}

uint64_t sub_1B2C74B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  size_t v12 = (void *)((v11 + a1) & ~v10);
  int v13 = (const void *)((v11 + a2) & ~v10);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v8))
  {
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v12, v13, v16);
  }
  else
  {
    uint64_t v18 = *(void (**)(void *, const void *, uint64_t))(v9 + 32);
    uint64_t v17 = v9 + 32;
    v18(v12, v13, v8);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v8);
    int v14 = *(_DWORD *)(v17 + 52);
    size_t v15 = *(void *)(v17 + 32);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  uint64_t v20 = (uint64_t)v12 + v19 + 7;
  unint64_t v21 = ((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)v21;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v20 = v22;
  return a1;
}

uint64_t sub_1B2C74C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (void *)((v10 + a1) & ~v9);
  size_t v12 = (const void *)((v10 + a2) & ~v9);
  int v13 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v11, 1, v7);
  int v14 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v12, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v11, v12, v7);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 0, 1, v7);
      goto LABEL_12;
    }
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v11, v12, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  if (v15) {
    size_t v17 = v16;
  }
  else {
    size_t v17 = v16 + 1;
  }
  memcpy(v11, v12, v17);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v18 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v19 = (uint64_t)v11 + v18 + 7;
  unint64_t v20 = ((unint64_t)v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v21 = *(unsigned char *)(v20 + 8);
  v19 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = v21;
  return a1;
}

uint64_t sub_1B2C74E40(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= v6) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  if (v9) {
    uint64_t v13 = 7;
  }
  else {
    uint64_t v13 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = *(void *)(*(void *)(v5 - 8) + 64) + v12;
  if (v11 < a2)
  {
    unint64_t v15 = ((v13 + *(void *)(*(void *)(v7 - 8) + 64) + (v14 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v16 = (a2 - v11 + 255) >> (8 * v15);
    if (v15 < 4) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      LODWORD(v18) = 4;
    }
    else {
      LODWORD(v18) = 2;
    }
    if (v17 < 0x100) {
      LODWORD(v18) = 1;
    }
    if (v17 >= 2) {
      uint64_t v18 = v18;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = a1[v15];
        if (!a1[v15]) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v19 = *(unsigned __int16 *)&a1[v15];
        if (*(_WORD *)&a1[v15]) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B2C75030);
      case 4:
        int v19 = *(_DWORD *)&a1[v15];
        if (!v19) {
          break;
        }
LABEL_27:
        int v20 = (v19 - 1) << (8 * v15);
        if (v15 >= 4) {
          int v20 = 0;
        }
        if (v15 == 1) {
          int v21 = *a1;
        }
        else {
          int v21 = *(_DWORD *)a1;
        }
        return v11 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  if (!v11) {
    return 0;
  }
  if (v6 >= v10)
  {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, v6, v5);
  }
  else
  {
    unsigned int v22 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((unint64_t)&a1[v14] & ~v12, v9, v7);
    if (v22 >= 2) {
      return v22 - 1;
    }
    else {
      return 0;
    }
  }
}

void sub_1B2C75044(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(a4 + 24);
  uint64_t v9 = *(unsigned int *)(*(void *)(v8 - 8) + 84);
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  unsigned int v12 = v11 - 1;
  if (!v11) {
    unsigned int v12 = 0;
  }
  if (v12 <= v9) {
    unsigned int v13 = *(_DWORD *)(*(void *)(v8 - 8) + 84);
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(*(void *)(v8 - 8) + 64) + v14;
  size_t v16 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v11) {
    ++v16;
  }
  size_t v17 = ((v16 + (v15 & ~v14) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v18 = 8 * v17;
  if (v13 < a3)
  {
    unsigned int v19 = (a3 - v13 + 255) >> v18;
    if (v17 <= 3) {
      unsigned int v20 = v19 + 1;
    }
    else {
      unsigned int v20 = 2;
    }
    if (v20 >= 0x10000) {
      int v21 = 4;
    }
    else {
      int v21 = 2;
    }
    if (v20 < 0x100) {
      int v21 = 1;
    }
    if (v20 >= 2) {
      int v6 = v21;
    }
    else {
      int v6 = 0;
    }
  }
  if (v13 < a2)
  {
    if (v17 < 4) {
      unsigned int v22 = ((~v13 + a2) >> v18) + 1;
    }
    else {
      unsigned int v22 = 1;
    }
    if (v17 >= 4) {
      int v23 = ~v13 + a2;
    }
    else {
      int v23 = (~(_BYTE)v13 + a2);
    }
    bzero(a1, v17);
    if (v17 == 1) {
      *a1 = v23;
    }
    else {
      *(_DWORD *)a1 = v23;
    }
    switch(v6)
    {
      case 1:
        a1[v17] = v22;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v22;
        return;
      case 3:
        goto LABEL_61;
      case 4:
        *(_DWORD *)&a1[v17] = v22;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 3:
LABEL_61:
      __break(1u);
      JUMPOUT(0x1B2C75328);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_36;
    default:
LABEL_36:
      if (!a2) {
        return;
      }
LABEL_37:
      if (v9 >= v12)
      {
        uint64_t v28 = (uint64_t)a1;
        uint64_t v11 = v9;
        uint64_t v7 = v8;
      }
      else
      {
        unint64_t v24 = (unsigned char *)((unint64_t)&a1[v15] & ~v14);
        if (v12 < a2)
        {
          if (v16 <= 3) {
            int v25 = ~(-1 << (8 * v16));
          }
          else {
            int v25 = -1;
          }
          if (v16)
          {
            int v26 = v25 & (~v12 + a2);
            if (v16 <= 3) {
              int v27 = v16;
            }
            else {
              int v27 = 4;
            }
            bzero(v24, v16);
            switch(v27)
            {
              case 2:
                *(_WORD *)unint64_t v24 = v26;
                break;
              case 3:
                *(_WORD *)unint64_t v24 = v26;
                v24[2] = BYTE2(v26);
                break;
              case 4:
                *(_DWORD *)unint64_t v24 = v26;
                break;
              default:
                *unint64_t v24 = v26;
                break;
            }
          }
          return;
        }
        a2 = (a2 + 1);
        uint64_t v28 = (uint64_t)v24;
      }
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v28, a2, v11, v7);
      return;
  }
}

uint64_t storeEnumTagSinglePayload for InferenceServiceRunnerCost(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for InferenceServiceRunnerCost()
{
  return &type metadata for InferenceServiceRunnerCost;
}

uint64_t sub_1B2C7539C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for InferenceServiceDidSet()
{
  return sub_1B29A1278();
}

uint64_t method lookup function for InferenceServiceDidSet(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferenceServiceDidSet);
}

uint64_t dispatch thunk of InferenceServiceDidSet.wrappedValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of InferenceServiceDidSet.wrappedValue.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of InferenceServiceDidSet.wrappedValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of InferenceServiceDidSet.__allocating_init(wrappedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

ValueMetadata *type metadata accessor for _InferenceServiceRunnerNoEventLog.CodingKeys()
{
  return &type metadata for _InferenceServiceRunnerNoEventLog.CodingKeys;
}

unint64_t sub_1B2C75500()
{
  unint64_t result = qword_1E9C41C60;
  if (!qword_1E9C41C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41C60);
  }
  return result;
}

unint64_t sub_1B2C75550()
{
  unint64_t result = qword_1E9C41C68;
  if (!qword_1E9C41C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41C68);
  }
  return result;
}

uint64_t sub_1B2C7559C()
{
  return sub_1B2B38F4C();
}

uint64_t (*sub_1B2C755C0(void *a1))()
{
  *a1 = 0;
  return j__s20IntelligencePlatform17TrialAssetManagerC13RefreshPolicyOwxx;
}

uint64_t InferenceSupportRemoteBackendType.hash(into:)()
{
  return sub_1B2E83998();
}

BOOL static InferenceSupportRemoteBackendType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t InferenceSupportRemoteBackendType.hashValue.getter()
{
  return sub_1B2E839E8();
}

void *static InferenceSupportRemoteBackend.assetRegistryRemoteBackendType.getter@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(a1 + 24))(&v4);
  *a2 = v4;
  return result;
}

unint64_t sub_1B2C756CC()
{
  unint64_t result = qword_1E9C41C70;
  if (!qword_1E9C41C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41C70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InferenceSupportRemoteBackendType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C757E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceSupportRemoteBackendType()
{
  return &type metadata for InferenceSupportRemoteBackendType;
}

uint64_t dispatch thunk of static InferenceSupportRemoteBackend.inferenceSupportRemoteBackendType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1B2C75830@<X0>(unsigned __int8 *a1@<X1>, uint64_t *a2@<X8>)
{
  unsigned __int8 v3 = *a1;
  uint64_t v4 = type metadata accessor for InferenceSupportRemoteBackendXPC();
  unsigned __int8 v6 = v3;
  uint64_t result = sub_1B2C762AC(v4, &v6);
  *a2 = result;
  return result;
}

uint64_t sub_1B2C75880()
{
  return static ViewService.clientService.getter();
}

void *InferenceSupportBackendHelper.CreateBackend.init<A>(createRemoteBackend:getViewService:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 24))(&v16, a5, a6);
  char v14 = v16;
  uint64_t result = (void *)swift_allocObject();
  result[2] = a5;
  result[3] = a6;
  result[4] = a1;
  result[5] = a2;
  *(unsigned char *)a7 = v14;
  *(void *)(a7 + 8) = sub_1B2C75F94;
  *(void *)(a7 + 16) = result;
  *(void *)(a7 + 24) = a3;
  *(void *)(a7 + 32) = a4;
  return result;
}

uint64_t sub_1B2C7596C()
{
  void (*v2)(char *__return_ptr);

  if (qword_1EB7E3F58 != -1) {
    swift_once();
  }
  uint64_t v0 = off_1EB7E5270;
  unint64_t v1 = (os_unfair_lock_s *)*((void *)off_1EB7E5270 + 3);
  os_unfair_lock_lock(v1);
  sub_1B299D804();
  unint64_t v2 = *(void (**)(char *__return_ptr))(v0[2] + 16);
  swift_retain();
  os_unfair_lock_unlock(v1);
  v2(&byte_1EB7E5278);
  return swift_release();
}

uint64_t static InferenceSupportBackendHelper.createCreateBackend.getter()
{
  if (qword_1EB7E3F58 != -1) {
    swift_once();
  }
  uint64_t v0 = off_1EB7E5270;
  unint64_t v1 = (os_unfair_lock_s *)*((void *)off_1EB7E5270 + 3);
  os_unfair_lock_lock(v1);
  sub_1B299D804();
  uint64_t v2 = *(void *)(v0[2] + 16);
  swift_retain();
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t static InferenceSupportBackendHelper.createBackend.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB7E3F60 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EB7E5280;
  uint64_t v3 = qword_1EB7E5298;
  *(unsigned char *)a1 = byte_1EB7E5278;
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = unk_1EB7E5288;
  *(void *)(a1 + 32) = v3;
  swift_retain();

  return swift_retain();
}

void *sub_1B2C75B48()
{
  type metadata accessor for InferenceSupportBackendHelper._CreateCreateBackend();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1B2C75BBC;
  *(void *)(v0 + 24) = 0;
  sub_1B29A3EB4(qword_1EB7E51E8);
  swift_allocObject();
  uint64_t result = (void *)sub_1B29E5380(v0);
  off_1EB7E5270 = result;
  return result;
}

void sub_1B2C75BBC(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = sub_1B2C76140;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = sub_1B2C75880;
  *(void *)(a1 + 32) = 0;
}

uint64_t static InferenceSupportBackendHelper.createCreateBackend.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EB7E3F58 != -1) {
    swift_once();
  }
  uint64_t v4 = off_1EB7E5270;
  uint64_t v5 = (os_unfair_lock_s *)*((void *)off_1EB7E5270 + 3);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1B299D804();
  uint64_t v6 = v4[2];
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_retain();
  swift_release();
  os_unfair_lock_unlock(v5);
  return swift_release_n();
}

void (*static InferenceSupportBackendHelper.createCreateBackend.modify(void *a1))(void **a1, char a2)
{
  uint64_t v2 = malloc(0x58uLL);
  *a1 = v2;
  if (qword_1EB7E3F58 != -1) {
    swift_once();
  }
  uint64_t v3 = off_1EB7E5270;
  uint64_t v4 = (os_unfair_lock_s *)*((void *)off_1EB7E5270 + 3);
  os_unfair_lock_lock(v4);
  sub_1B299D804();
  uint64_t v5 = v3[2];
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v6 = *(void *)(v5 + 24);
  swift_retain();
  os_unfair_lock_unlock(v4);
  v2[9] = v7;
  v2[10] = v6;
  return sub_1B2C75D78;
}

void sub_1B2C75D78(void **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (os_unfair_lock_s *)*((void *)off_1EB7E5270 + 3);
  swift_retain();
  if (a2)
  {
    swift_retain();
    os_unfair_lock_lock(v4);
    sub_1B299D804();
    sub_1B29A2E34();
    swift_release();
    os_unfair_lock_unlock(v4);
    swift_release_n();
  }
  else
  {
    os_unfair_lock_lock(v4);
    sub_1B299D804();
    sub_1B29A2E34();
    swift_release();
    os_unfair_lock_unlock(v4);
    swift_release();
  }
  swift_release();

  free(v3);
}

void InferenceSupportBackendHelper.CreateBackend.remoteBackendType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1B2C75E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v12(v9);
  if (!v4)
  {
    a4[3] = a2;
    a4[4] = a3;
    char v14 = sub_1B29D1C70(a4);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v8 + 32))(v14, v11, a2);
  }
  return result;
}

uint64_t sub_1B2C75F5C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B2C75F94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2C75E74(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

ValueMetadata *type metadata accessor for InferenceSupportBackendHelper()
{
  return &type metadata for InferenceSupportBackendHelper;
}

uint64_t type metadata accessor for InferenceSupportBackendHelper._CreateCreateBackend()
{
  return self;
}

uint64_t destroy for InferenceSupportBackendHelper.CreateBackend()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for InferenceSupportBackendHelper.CreateBackend(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InferenceSupportBackendHelper.CreateBackend(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for InferenceSupportBackendHelper.CreateBackend(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for InferenceSupportBackendHelper.CreateBackend()
{
  return &type metadata for InferenceSupportBackendHelper.CreateBackend;
}

uint64_t sub_1B2C76140@<X0>(unsigned __int8 *a1@<X1>, void *a2@<X8>)
{
  unsigned __int8 v6 = *a1;
  uint64_t result = sub_1B2C75830(&v6, &v5);
  if (!v2)
  {
    uint64_t result = type metadata accessor for InferenceSupportRemoteBackendXPC();
    a2[3] = result;
    a2[4] = &off_1F0AD56E0;
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B2C761A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = type metadata accessor for AssetRegistryLocalBackendBasic();
  uint64_t v8 = sub_1B29F2C38(v7, a3);
  if (v4) {
    swift_deallocPartialClassInstance();
  }
  else {
    *(void *)(v5 + 16) = v8;
  }
  return v5;
}

uint64_t sub_1B2C76240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1B29F2CDC(a1, a2, a3, a4, a5);
}

uint64_t type metadata accessor for InferenceSupportLocalBackendBasic()
{
  return self;
}

uint64_t sub_1B2C76288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1B2C76240(a1, a2, a3, a4, a5);
}

uint64_t sub_1B2C762AC(uint64_t a1, unsigned __int8 *a2)
{
  unsigned __int8 v7 = *a2;
  id v2 = objc_msgSend(objc_allocWithZone((Class)GDXPCInferenceSupportService), sel_init);
  sub_1B2E7FFF8();
  swift_allocObject();
  uint64_t v3 = sub_1B2E7FFE8();
  sub_1B2E7FF98();
  swift_allocObject();
  uint64_t v4 = sub_1B2E7FF88();
  uint64_t v5 = swift_allocObject();
  sub_1B2C76808(v5, &v7, v2, v3, v4);
  return v5;
}

void sub_1B2C76370(uint64_t a1@<X8>)
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)MEMORY[0x1B3EB2480]();
  LOBYTE(v50) = *(unsigned char *)(v1 + 24);
  sub_1B29E1C94();
  uint64_t v5 = sub_1B2E7FFD8();
  if (v2)
  {
    return;
  }
  uint64_t v47 = a1;
  uint64_t v7 = v5;
  uint64_t v8 = v4;
  unint64_t v9 = v6;
  uint64_t v10 = *(void **)(v1 + 16);
  unint64_t v11 = v9;
  unsigned int v12 = (void *)sub_1B2E82348();
  unsigned int v13 = (void *)sub_1B2E82348();
  char v14 = (void *)sub_1B2E80568();
  *(void *)&long long v50 = 0;
  id v15 = objc_msgSend(v10, sel_assetEntryResultDataForAssetId_inDomainId_remoteOptionsData_error_, v12, v13, v14, &v50);

  id v16 = (id)v50;
  if (!v15)
  {
    unsigned int v22 = v16;
    int v23 = (void *)sub_1B2E80388();

    swift_willThrow();
    sub_1B29F4F30();
    swift_allocError();
    *unint64_t v24 = v23;
    id v25 = v23;
    swift_willThrow();
    sub_1B29C34DC(v7, v11);

    return;
  }
  uint64_t v48 = v7;
  unint64_t v49 = v11;
  uint64_t v17 = sub_1B2E80588();
  unint64_t v19 = v18;

  sub_1B29F4F7C(v17, v19);
  uint64_t v20 = swift_retain();
  int v21 = (void *)MEMORY[0x1B3EB2480](v20);
  sub_1B29A3EB4(&qword_1E9C3AD78);
  sub_1B2C76964();
  sub_1B2E7FF78();
  long long v26 = v50;
  uint64_t v27 = v51;
  uint64_t v28 = v53;
  uint64_t v29 = v54;
  int v46 = v52;
  if (v55)
  {
    uint64_t v44 = v53;
    swift_release();
    sub_1B29C34DC(v17, v19);
    long long v50 = v26;
    LOBYTE(v51) = v27;
    sub_1B29EEC9C(v26, *((uint64_t *)&v26 + 1), v27);
    sub_1B29EEC9C(v26, *((uint64_t *)&v26 + 1), v27);
    sub_1B29ECB4C();
    if (sub_1B2E83768())
    {
      uint64_t v30 = v44;
      char v31 = v46;
      sub_1B29F2ED0(v26, *((uint64_t *)&v26 + 1), v27, v46, v44, v29, 1);
    }
    else
    {
      swift_allocError();
      char v33 = v51;
      *(_OWORD *)uint64_t v34 = v50;
      *(unsigned char *)(v34 + 16) = v33;
      uint64_t v30 = v44;
      char v31 = v46;
    }
    swift_willThrow();
    sub_1B29F2ED0(v26, *((uint64_t *)&v26 + 1), v27, v31, v30, v29, 1);
    sub_1B29C34DC(v17, v19);
    sub_1B29C34DC(v48, v49);
    uint64_t v36 = *((void *)&v26 + 1);
    uint64_t v35 = v26;
    uint64_t v37 = v27;
    char v38 = v31;
    uint64_t v39 = v30;
    uint64_t v40 = v29;
    char v41 = 1;
  }
  else
  {
    if ((v52 & 0x80) != 0)
    {
      swift_release();
      sub_1B29C34DC(v17, v19);
    }
    else
    {
      uint64_t v43 = v54;
      uint64_t v45 = v53;
      uint64_t v42 = v51;
      LOBYTE(v52) = v52 & 1;
      AssetRegistryAssetLocation.LocalAsset.verifyValidity()();
      swift_release();
      sub_1B29C34DC(v17, v19);
      if (v32)
      {
        sub_1B29F2ED0(v26, *((uint64_t *)&v26 + 1), v42, v46, v45, v43, 0);
        sub_1B29C34DC(v17, v19);
        sub_1B29C34DC(v48, v11);
        return;
      }
      uint64_t v29 = v43;
      uint64_t v28 = v45;
    }
    *(_OWORD *)uint64_t v47 = v26;
    *(void *)(v47 + 16) = v27;
    *(_WORD *)(v47 + 24) = v46;
    *(unsigned char *)(v47 + 26) = BYTE2(v46);
    *(void *)(v47 + 32) = v28;
    *(void *)(v47 + 40) = v29;
    sub_1B29DABBC(v26, *((uint64_t *)&v26 + 1), v27, v46);
    swift_bridgeObjectRetain();
    sub_1B29C34DC(v17, v19);
    sub_1B29C34DC(v48, v11);
    uint64_t v36 = *((void *)&v26 + 1);
    uint64_t v35 = v26;
    uint64_t v37 = v27;
    char v38 = v46;
    uint64_t v39 = v28;
    uint64_t v40 = v29;
    char v41 = 0;
  }
  sub_1B29F2ED0(v35, v36, v37, v38, v39, v40, v41);
}

void *sub_1B2C76808(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = v5;
  uint64_t v10 = *a2;
  void v6[2] = a3;
  sub_1B29A3EB4((uint64_t *)&unk_1E9C38350);
  swift_allocObject();
  v6[3] = sub_1B29F4594(v10, a3, a4, a5);
  v6[4] = a5;
  id v11 = a3;
  swift_retain();
  return v6;
}

void sub_1B2C76894(uint64_t a1@<X8>)
{
}

uint64_t sub_1B2C768B8()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B2C768E8()
{
  sub_1B2C768B8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InferenceSupportRemoteBackendXPC()
{
  return self;
}

void sub_1B2C76940(uint64_t a1@<X8>)
{
}

unint64_t sub_1B2C76964()
{
  unint64_t result = qword_1E9C3AD80;
  if (!qword_1E9C3AD80)
  {
    sub_1B29C3588(&qword_1E9C3AD78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C3AD80);
  }
  return result;
}

uint64_t InitializationResourcesManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1B2E82148();
  return v0;
}

uint64_t sub_1B2C76A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1B2E82F38();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned int v12 = (char *)&v17 - v11;
  swift_beginAccess();
  sub_1B29B2584();
  uint64_t v13 = v22;
  sub_1B2A23938((uint64_t)v21);
  if (!v13)
  {
    uint64_t v18 = v10;
    uint64_t v19 = v9;
    uint64_t v14 = a4;
    id v15 = *(void (**)(uint64_t, uint64_t))(a3 + 40);
    uint64_t v22 = AssociatedTypeWitness;
    sub_1B29D1C70(v21);
    v15(a2, a3);
    a4 = v14;
    uint64_t v10 = v18;
    uint64_t v9 = v19;
    swift_beginAccess();
    sub_1B2C45568((uint64_t)v21, a1);
    swift_endAccess();
  }
  sub_1B29B2584();
  sub_1B2C76D04((uint64_t)v21, (uint64_t)v20);
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E6270);
  if (swift_dynamicCast())
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, AssociatedTypeWitness);
    sub_1B2A23938((uint64_t)v21);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a4, v12, AssociatedTypeWitness);
  }
  else
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t result = sub_1B2E83418();
    __break(1u);
  }
  return result;
}

uint64_t InitializationResourcesManager.init()()
{
  *(void *)(v0 + 16) = sub_1B2E82148();
  return v0;
}

uint64_t sub_1B2C76D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E6270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t InitializationResourcesManager.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InitializationResourcesManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InitializationResourcesManager()
{
  return self;
}

uint64_t method lookup function for InitializationResourcesManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InitializationResourcesManager);
}

uint64_t dispatch thunk of InitializationResourcesManager.getOrInit<A>(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of InitializationResourcesManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

ValueMetadata *type metadata accessor for IntentArgContextGenerator()
{
  return &type metadata for IntentArgContextGenerator;
}

uint64_t sub_1B2C76E48()
{
  static EntityPredicate.name.getter();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1E9CAF8B8 = v1;
  unk_1E9CAF8C0 = v2;
  return result;
}

uint64_t sub_1B2C76E8C(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC870];
  if (!*(void *)(a2 + 8)) {
    return result;
  }
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v25 = MEMORY[0x1E4FBC870];
  uint64_t v4 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v3 + 56);
  int64_t v21 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v22 = v3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  int64_t v23 = v7;
  for (unint64_t i = v8 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v22 + 48) + 32 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = qword_1E9C38C60;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    if (v17 != -1) {
      swift_once();
    }
    v24[0] = v15;
    v24[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    sub_1B299DC00();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B299DC00();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B299DC00();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A016A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v7 = v23;
    if (v6) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v21) {
      goto LABEL_24;
    }
    unint64_t v11 = *(void *)(v20 + 8 * v10);
    int64_t v12 = v7 + 1;
    if (!v11)
    {
      int64_t v12 = v7 + 2;
      if (v7 + 2 >= v21) {
        goto LABEL_24;
      }
      unint64_t v11 = *(void *)(v20 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v7 + 3;
        if (v7 + 3 >= v21) {
          goto LABEL_24;
        }
        unint64_t v11 = *(void *)(v20 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v23 = v12;
  }
  uint64_t v13 = v7 + 4;
  if (v7 + 4 >= v21)
  {
LABEL_24:
    swift_release();
    v24[0] = *(void *)(v22 + 16);
    uint64_t v18 = sub_1B2E83748();
    KnosisInternalFact.init(sid:pid:oid:)(0x746E65746E69, 0xE600000000000000, 0x746E756F43677261, 0xE800000000000000, v18, v19, v24);
    sub_1B2A016A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v25;
  }
  unint64_t v11 = *(void *)(v20 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v7 + 4;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v21) {
      goto LABEL_24;
    }
    unint64_t v11 = *(void *)(v20 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_19;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B2C77228(uint64_t a1, uint64_t a2)
{
  return sub_1B2C76E8C(a1, a2);
}

double IPFastEnumerationIterator.init(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 81) = 0u;
  return result;
}

void IPFastEnumerationIterator.next()(uint64_t a1@<X8>)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(v1 + 80);
  if (__OFADD__(v3, 1)) {
    __break(1u);
  }
  if (*(void *)(v1 + 88) >= v3 + 1)
  {
    if ((*(unsigned char *)(v1 + 96) & 1) == 0)
    {
      int64_t v10 = *(uint64_t **)(v1 + 24);
LABEL_18:
      if (v10)
      {
        uint64_t v16 = v10[v3];
        if (v16)
        {
          swift_unknownObjectRetain();
          *(void *)(a1 + 24) = swift_getObjectType();
          *(void *)a1 = v16;
        }
        else
        {
          *(_OWORD *)a1 = 0u;
          *(_OWORD *)(a1 + 16) = 0u;
        }
        uint64_t v15 = v3 + 1;
        goto LABEL_24;
      }
      goto LABEL_28;
    }
    if (v3)
    {
LABEL_29:
      sub_1B2E83418();
      __break(1u);
      return;
    }
    uint64_t v14 = *(void *)(v1 + 8);
  }
  else
  {
    *(void *)(v1 + 80) = 0;
    long long v4 = *(_OWORD *)(v1 + 32);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)&v18[16] = v4;
    long long v5 = *(_OWORD *)(v1 + 64);
    *(_OWORD *)&v18[32] = *(_OWORD *)(v1 + 48);
    *(_OWORD *)&v18[48] = v5;
    unint64_t v6 = *(void **)v1;
    uint64_t v17 = *(void *)(v1 + 8);
    id v7 = objc_msgSend(v6, sel_countByEnumeratingWithState_objects_count_, v18, &v17, 1);
    *(void *)(v1 + 88) = v7;
    uint64_t v8 = *(void *)&v18[56];
    uint64_t v9 = *(uint64_t **)&v18[8];
    *(_OWORD *)(v1 + 24) = *(_OWORD *)&v18[8];
    int64_t v10 = v9;
    if (v9) {
      BOOL v11 = &v17 == v9;
    }
    else {
      BOOL v11 = 0;
    }
    char v12 = v11;
    *(unsigned char *)(v1 + 96) = v12;
    *(_OWORD *)(v1 + 40) = *(_OWORD *)&v18[24];
    *(_OWORD *)(v1 + 56) = *(_OWORD *)&v18[40];
    *(void *)(v1 + 72) = v8;
    uint64_t v14 = v17;
    uint64_t v13 = *(void *)v18;
    *(void *)(v1 + 8) = v17;
    *(void *)(v1 + 16) = v13;
    if (!v7)
    {
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      return;
    }
    if ((v12 & 1) == 0)
    {
      uint64_t v3 = 0;
      goto LABEL_18;
    }
  }
  if (!v14)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  swift_unknownObjectRetain();
  *(void *)(a1 + 24) = swift_getObjectType();
  *(void *)a1 = v14;
  uint64_t v15 = 1;
LABEL_24:
  *(void *)(v1 + 80) = v15;
}

id NSEnumerator.makeIPFastEnumerationIterator()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = v1;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 81) = 0u;
  return v1;
}

uint64_t initializeWithCopy for IPFastEnumerationIterator(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IPFastEnumerationIterator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t assignWithTake for IPFastEnumerationIterator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for IPFastEnumerationIterator(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 97))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IPFastEnumerationIterator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IPFastEnumerationIterator()
{
  return &type metadata for IPFastEnumerationIterator;
}

uint64_t sub_1B2C7766C(long long *a1, uint64_t a2, _OWORD *a3, id a4)
{
  long long v14 = *a1;
  uint64_t v8 = *((void *)a1 + 2);
  uint64_t v9 = *((void *)a1 + 3);
  char v10 = *((unsigned char *)a1 + 32);
  sub_1B29A3EB4(&qword_1EB7E34A8);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B2EE3D60;
  static EntityPredicate.isA.getter();
  static EntityPredicate.name.getter();
  static EntityPredicate.url.getter();
  static EntityPredicate.lastUpdated.getter();
  static EntityPredicate.sameAs.getter();
  static EntityPredicate.creationDate.getter();
  static EntityPredicate.imputedCreationDate.getter();
  static EntityPredicate.imputedLastUpdated.getter();
  static EntityPredicate.identifierId.getter();
  static EntityPredicate.identifierType.getter();
  static EntityPredicate.relationshipLabel.getter();
  static EntityPredicate.locationLabel.getter();
  *(void *)(v4 + 80) = v8;
  *(void *)(v4 + 88) = v9;
  *(unsigned char *)(v4 + 96) = v10;
  *(void *)(v4 + 16) = v11;
  *(void *)(v4 + 24) = a2;
  long long v12 = a3[1];
  *(_OWORD *)(v4 + 32) = *a3;
  *(_OWORD *)(v4 + 48) = v12;
  *(_OWORD *)(v4 + 64) = v14;
  if (!a4) {
    a4 = (id)v12;
  }
  *(void *)(v4 + 104) = a4;
  return v4;
}

uint64_t sub_1B2C77780()
{
  sub_1B29A3EB4(&qword_1EB7E34A8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B2EC00A0;
  static EntityPredicate.isA.getter();
  return v0;
}

uint64_t sub_1B2C777D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_1B29AEC7C(a1, v4);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1B29D1C70(v26);
  v6(v4, v5);
  BaseEntityFactObjectProtocol.asDouble.getter();
  if (v7)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v26);
    if (qword_1E9C38C28 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1B2E81FB8();
    sub_1B29A4B98(v9, (uint64_t)qword_1E9C3EBA8);
    sub_1B29C3B84((uint64_t)a1, (uint64_t)v26);
    char v10 = sub_1B2E81F98();
    os_log_type_t v11 = sub_1B2E82DB8();
    if (os_log_type_enabled(v10, v11))
    {
      long long v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)long long v12 = 136642819;
      sub_1B29C3B84((uint64_t)v26, (uint64_t)v24);
      sub_1B29A3EB4((uint64_t *)&unk_1E9C3D688);
      uint64_t v13 = sub_1B2E82408();
      sub_1B29BF6BC(v13, v14, (uint64_t)&v25, v15, v16, v17, v18, v19, v23, v24[0], v24[1], v24[2], v24[3], v24[4], v25, v26[0], v26[1], v26[2], AssociatedTypeWitness,
        AssociatedConformanceWitness);
      v24[0] = v20;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v26);
      _os_log_impl(&dword_1B2996000, v10, v11, "Failed to parse %{sensitive}s.", v12, 0xCu);
      swift_arrayDestroy();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v26);
    }

    uint64_t v8 = 1;
  }
  else
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v26);
    sub_1B2E805B8();
    uint64_t v8 = 0;
  }
  uint64_t v21 = sub_1B2E80668();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a2, v8, 1, v21);
}

uint64_t sub_1B2C77A74()
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v3 = sub_1B299B0F0(v2);
  MEMORY[0x1F4188790](v3);
  sub_1B2C79B90();
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = (void *)sub_1B2C79B70();
  sub_1B2C777D0(v5, v6);
  sub_1B2A10CA0(v1);
  if (v7)
  {
    sub_1B2A10B50(v1, &qword_1EB7D87C0);
    return 0;
  }
  else
  {
    uint64_t v8 = sub_1B2C79B00();
    v9(v8);
    char v10 = *(void **)(v0 + 40);
    os_log_type_t v11 = (void *)sub_1B2E805E8();
    id v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

    uint64_t v13 = sub_1B2E82378();
    uint64_t v14 = sub_1B2C79C08();
    v15(v14);
  }
  return v13;
}

uint64_t sub_1B2C77BA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v4 = sub_1B299B0F0(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_1B29AEC7C(a1, v7);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v35[3] = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v35[4] = AssociatedConformanceWitness;
  sub_1B29D1C70(v35);
  v9(v7, v8);
  BaseEntityFactObjectProtocol.asDateFromJSON(decodeWith:)(*(void *)(v31 + 32), AssociatedTypeWitness, AssociatedConformanceWitness, (uint64_t)v6);
  uint64_t v12 = sub_1B2E80668();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v12) == 1)
  {
    uint64_t v13 = v32;
    sub_1B2A10B50((uint64_t)v6, &qword_1EB7D87C0);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v35);
    if (qword_1E9C38C28 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1B2E81FB8();
    sub_1B29A4B98(v14, (uint64_t)qword_1E9C3EBA8);
    sub_1B29C3B84((uint64_t)a1, (uint64_t)v35);
    uint64_t v15 = sub_1B2E81F98();
    os_log_type_t v16 = sub_1B2E82DB8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136642819;
      sub_1B29C3B84((uint64_t)v35, (uint64_t)v33);
      sub_1B29A3EB4((uint64_t *)&unk_1E9C3D688);
      uint64_t v18 = sub_1B2E82408();
      sub_1B29BF6BC(v18, v19, (uint64_t)&v34, v20, v21, v22, v23, v24, v30, v31, v32, v33[0], v33[1], v33[2], v33[3], v33[4], v34, v35[0], v35[1],
        v35[2]);
      v33[0] = v25;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v35);
      _os_log_impl(&dword_1B2996000, v15, v16, "Failed to parse %{sensitive}s.", v17, 0xCu);
      swift_arrayDestroy();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v35);
    }

    uint64_t v28 = v13;
    uint64_t v27 = 1;
  }
  else
  {
    uint64_t v26 = v32;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v32, v6, v12);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v35);
    uint64_t v27 = 0;
    uint64_t v28 = v26;
  }
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v28, v27, 1, v12);
}

uint64_t sub_1B2C77EE8(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_1B29AEC7C(a1, v2);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 32);
  v12[3] = swift_getAssociatedTypeWitness();
  v12[4] = swift_getAssociatedConformanceWitness();
  sub_1B29D1C70(v12);
  v4(v2, v3);
  uint64_t v5 = BaseEntityFactObjectProtocol.asDouble.getter();
  if (v6)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
    return 0;
  }
  double v7 = *(double *)&v5;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
  id v8 = objc_msgSend(*(id *)(v1 + 56), sel_stringFromTimeInterval_, v7);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1B2E82378();

  return v10;
}

uint64_t sub_1B2C78034()
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v3 = sub_1B299B0F0(v2);
  MEMORY[0x1F4188790](v3);
  sub_1B2C79B90();
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = (void *)sub_1B2C79B70();
  sub_1B2C77BA4(v5, v6);
  sub_1B2A10CA0(v1);
  if (v7)
  {
    sub_1B2A10B50(v1, &qword_1EB7D87C0);
    return 0;
  }
  else
  {
    uint64_t v8 = sub_1B2C79B00();
    v9(v8);
    uint64_t v10 = *(void **)(v0 + 40);
    os_log_type_t v11 = (void *)sub_1B2E805E8();
    id v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

    uint64_t v13 = sub_1B2E82378();
    uint64_t v14 = sub_1B2C79C08();
    v15(v14);
  }
  return v13;
}

void sub_1B2C78164(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v5 = sub_1B299B0F0(v4);
  MEMORY[0x1F4188790](v5);
  sub_1B2999940();
  uint64_t v155 = v6;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v7);
  sub_1B29A43C0();
  uint64_t v154 = v8;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v9);
  sub_1B29A43C0();
  uint64_t v152 = v10;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v11);
  sub_1B29A43C0();
  uint64_t v156 = v12;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v13);
  sub_1B29A43C0();
  uint64_t v158 = v14;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v15);
  uint64_t v157 = (uint64_t)&v150 - v16;
  sub_1B2E80668();
  sub_1B299D278();
  uint64_t v160 = v18;
  uint64_t v161 = v17;
  MEMORY[0x1F4188790](v17);
  sub_1B2999940();
  uint64_t v153 = v19;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v20);
  uint64_t v159 = (uint64_t)&v150 - v21;
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  sub_1B29AEC7C(a1, v22);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v23 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v167 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v168 = AssociatedConformanceWitness;
  uint64_t v27 = sub_1B29D1C70(&v165);
  v24(v22, v23);
  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
  if (!v29)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v165);
    uint64_t v38 = type metadata accessor for K2TTextualization();
    uint64_t v39 = (uint64_t)a2;
LABEL_75:
    uint64_t v57 = 1;
    goto LABEL_76;
  }
  uint64_t v30 = v28;
  uint64_t v31 = v29;
  uint64_t v32 = a2;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v165);
  uint64_t v33 = sub_1B2C79A54();
  v34(v33);
  uint64_t v36 = v165;
  uint64_t v35 = v166;
  static EntityPredicate.dateOfBirth.getter();
  sub_1B29A1DEC();
  BOOL v37 = v37 && AssociatedTypeWitness == (void)v35;
  if (v37) {
    goto LABEL_35;
  }
  sub_1B299D7AC();
  sub_1B29A460C();
  swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  static EntityPredicate.dateOfDeath.getter();
  sub_1B29A1DEC();
  if (v37 && AssociatedTypeWitness == (void)v35) {
    goto LABEL_35;
  }
  sub_1B299D7AC();
  sub_1B29A460C();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_7;
  }
  static EntityPredicate.nonGregorianBirthday.getter();
  sub_1B29A1DEC();
  if (v37 && AssociatedTypeWitness == (void)v35) {
    goto LABEL_35;
  }
  sub_1B299D7AC();
  sub_1B29A460C();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_7;
  }
  static EntityPredicate.anniversary.getter();
  sub_1B29A1DEC();
  if (v37 && AssociatedTypeWitness == (void)v35) {
    goto LABEL_35;
  }
  sub_1B299D7AC();
  sub_1B29A460C();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_7;
  }
  static EntityPredicate.inferredBirthday.getter();
  sub_1B29A1DEC();
  if (v37 && AssociatedTypeWitness == (void)v35)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B299F268();
LABEL_36:
    uint64_t v45 = sub_1B2C78034();
    if (v46)
    {
LABEL_37:
      uint64_t v47 = v45;
      uint64_t v48 = v46;
      unint64_t v49 = (int *)type metadata accessor for K2TTextualization();
      uint64_t v50 = sub_1B2C79B20(v49[5]);
      uint64_t v51 = v161;
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v50, v52, v53, v161);
      uint64_t v54 = sub_1B2C79B20(v49[6]);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v54, v55, v56, v51);
      *a2 = v47;
      a2[1] = v48;
LABEL_38:
      *(uint64_t *)((char *)v32 + v49[7]) = MEMORY[0x1E4FBC860];
      uint64_t v39 = (uint64_t)v32;
      uint64_t v57 = 0;
      uint64_t v38 = (uint64_t)v49;
LABEL_76:
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v39, v57, 1, v38);
      return;
    }
    goto LABEL_74;
  }
  sub_1B299D7AC();
  sub_1B29A460C();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_7;
  }
  static EntityPredicate.duration.getter();
  sub_1B29A1DEC();
  if (v37 && AssociatedTypeWitness == (void)v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B299F268();
LABEL_40:
    uint64_t v45 = sub_1B2C77EE8(a1);
    if (v46) {
      goto LABEL_37;
    }
    goto LABEL_74;
  }
  sub_1B299D7AC();
  sub_1B29A460C();
  swift_bridgeObjectRelease();
  if (v27)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  static EntityPredicate.startTime.getter();
  sub_1B29A1DEC();
  if (v37 && AssociatedTypeWitness == (void)v35) {
    goto LABEL_69;
  }
  uint64_t v151 = v30;
  sub_1B299D7AC();
  sub_1B29A460C();
  swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_70:
    uint64_t v64 = v161;
    uint64_t v65 = v162;
    uint64_t v66 = v157;
    sub_1B2C77BA4(a1, v157);
    sub_1B2A10CA0(v66);
    if (!v37)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 32))(v159, v66, v64);
      uint64_t v68 = *(void **)(v65 + 104);
      uint64_t v69 = (void *)sub_1B2E805E8();
      id v70 = objc_msgSend(v68, sel_stringFromDate_, v69);

      uint64_t v71 = sub_1B2E82378();
      uint64_t v73 = v72;

      uint64_t v74 = sub_1B2C79A54();
      v75(v74);
      uint64_t v76 = v165;
      uint64_t v77 = v166;
      static EntityPredicate.startTime.getter();
      if (v76 == v163 && v77 == v164)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B299F268();
      }
      else
      {
        char v79 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v79 & 1) == 0)
        {
          uint64_t v80 = 1;
          uint64_t v81 = v161;
          goto LABEL_85;
        }
      }
      uint64_t v81 = v161;
      sub_1B29A080C();
      v82();
      uint64_t v80 = 0;
LABEL_85:
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v158, v80, 1, v81);
      uint64_t v83 = sub_1B2C79A54();
      v84(v83);
      uint64_t v85 = v165;
      uint64_t v86 = v166;
      static EntityPredicate.endTime.getter();
      if (v85 == v163 && v86 == v164)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B299F268();
      }
      else
      {
        char v88 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v88 & 1) == 0)
        {
          uint64_t v89 = 1;
          uint64_t v90 = v161;
          uint64_t v91 = v156;
LABEL_93:
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v91, v89, 1, v90);
          (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v159, v90);
          *uint64_t v32 = v71;
          v32[1] = v73;
          unint64_t v49 = (int *)type metadata accessor for K2TTextualization();
          uint64_t v93 = (uint64_t)v32 + v49[5];
          uint64_t v94 = v158;
LABEL_94:
          sub_1B29CA4E0(v94, v93);
          sub_1B29CA4E0(v91, (uint64_t)v32 + v49[6]);
          goto LABEL_38;
        }
      }
      uint64_t v91 = v156;
      uint64_t v90 = v161;
      sub_1B29A080C();
      v92();
      uint64_t v89 = 0;
      goto LABEL_93;
    }
    uint64_t v67 = v66;
    goto LABEL_73;
  }
  static EntityPredicate.endTime.getter();
  sub_1B29A1DEC();
  if (v37 && AssociatedTypeWitness == (void)v35) {
    goto LABEL_69;
  }
  sub_1B299D7AC();
  sub_1B29A460C();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_47;
  }
  static EntityPredicate.occurrenceDate.getter();
  sub_1B29A1DEC();
  if (v37 && AssociatedTypeWitness == (void)v35)
  {
LABEL_69:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_70;
  }
  sub_1B299D7AC();
  sub_1B29A460C();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_47;
  }
  if (!_Records_GDEntityPredicate_records) {
    goto LABEL_217;
  }
  uint64_t v61 = *((void *)_Records_GDEntityPredicate_records + 466);
  uint64_t v159 = 2674;
  if (v61 >= 2674)
  {
    __break(1u);
    goto LABEL_205;
  }
  uint64_t v62 = *((void *)_Records_GDEntityPredicate_records + 467);
  uint64_t v158 = 3558;
  if (v62 >= 3558)
  {
LABEL_205:
    __break(1u);
    __break(1u);
LABEL_206:
    __break(1u);
LABEL_207:
    __break(1u);
LABEL_172:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B299F268();
LABEL_173:
    uint64_t v116 = v152;
    sub_1B2C777D0(a1, v152);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v116, 1, v161) == 1)
    {
      uint64_t v67 = v152;
LABEL_73:
      sub_1B2A10B50(v67, &qword_1EB7D87C0);
LABEL_74:
      uint64_t v38 = type metadata accessor for K2TTextualization();
      uint64_t v39 = (uint64_t)a2;
      goto LABEL_75;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 32))(v153, v152, v161);
    uint64_t v117 = *(void **)(v162 + 104);
    uint64_t v118 = (void *)sub_1B2E805E8();
    id v119 = objc_msgSend(v117, sel_stringFromDate_, v118);

    uint64_t v120 = sub_1B2E82378();
    uint64_t v162 = v121;

    uint64_t v122 = sub_1B2C79AB4();
    v123(v122);
    if (!_Records_GDEntityPredicate_records) {
      goto LABEL_237;
    }
    sub_1B2C79AF4();
    if (v95 == v96) {
      goto LABEL_214;
    }
    if (*(void *)(v124 + 3664) >= v158)
    {
LABEL_215:
      __break(1u);
LABEL_216:
      __break(1u);
LABEL_217:
      __break(1u);
      goto LABEL_218;
    }
    if (!_Records_GDEntityPredicate_predicateIds)
    {
LABEL_238:
      __break(1u);
      goto LABEL_239;
    }
    uint64_t v126 = v165;
    uint64_t v125 = v166;
    uint64_t v127 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels)
    {
LABEL_239:
      __break(1u);
      goto LABEL_240;
    }
    uint64_t v129 = v127;
    uint64_t v130 = v128;
    sub_1B2E82538();
    if (v126 == v129 && v125 == v130)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B299F268();
    }
    else
    {
      char v132 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v132 & 1) == 0)
      {
        uint64_t v133 = 1;
        goto LABEL_189;
      }
    }
    sub_1B29A080C();
    v134();
    uint64_t v133 = 0;
LABEL_189:
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v154, v133, 1, v161);
    uint64_t v135 = sub_1B2C79AB4();
    v136(v135);
    if (!_Records_GDEntityPredicate_records)
    {
LABEL_240:
      __break(1u);
      goto LABEL_241;
    }
    sub_1B2C79AF4();
    if (v95 == v96) {
      goto LABEL_216;
    }
    if (*(void *)(v137 + 3688) >= v158)
    {
LABEL_218:
      __break(1u);
      goto LABEL_219;
    }
    if (!_Records_GDEntityPredicate_predicateIds)
    {
LABEL_241:
      __break(1u);
      goto LABEL_242;
    }
    uint64_t v139 = v165;
    uint64_t v138 = v166;
    uint64_t v140 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels)
    {
LABEL_242:
      __break(1u);
      goto LABEL_243;
    }
    uint64_t v142 = v140;
    uint64_t v143 = v141;
    sub_1B2E82538();
    if (v139 == v142 && v138 == v143)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B299F268();
    }
    else
    {
      char v145 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v145 & 1) == 0)
      {
        uint64_t v146 = 1;
LABEL_203:
        uint64_t v91 = v155;
        uint64_t v148 = v161;
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v155, v146, 1, v161);
        (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v153, v148);
        uint64_t v149 = v162;
        *a2 = v120;
        a2[1] = v149;
        unint64_t v49 = (int *)type metadata accessor for K2TTextualization();
        uint64_t v93 = (uint64_t)a2 + v49[5];
        uint64_t v94 = v154;
        goto LABEL_94;
      }
    }
    sub_1B29A080C();
    v147();
    uint64_t v146 = 0;
    goto LABEL_203;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_219:
    __break(1u);
    goto LABEL_220;
  }
  sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_220:
    __break(1u);
LABEL_221:
    __break(1u);
LABEL_222:
    __break(1u);
LABEL_223:
    __break(1u);
    goto LABEL_224;
  }
  sub_1B29A50B8();
  sub_1B2C79BD0();
  if (v37 && v27 == v35) {
    goto LABEL_145;
  }
  sub_1B299D7AC();
  sub_1B2C79BB8();
  swift_bridgeObjectRelease();
  if (v30)
  {
LABEL_68:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_146;
  }
  if (!_Records_GDEntityPredicate_records) {
    goto LABEL_223;
  }
  sub_1B2C79AF4();
  if (v95 == v96) {
    goto LABEL_206;
  }
  sub_1B2C79BDC();
  if (v95 == v96) {
    goto LABEL_207;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_224:
    __break(1u);
    goto LABEL_225;
  }
  sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_225:
    __break(1u);
LABEL_226:
    __break(1u);
    goto LABEL_227;
  }
  sub_1B29A50B8();
  sub_1B2C79BD0();
  if (v37 && v27 == v35) {
    goto LABEL_145;
  }
  sub_1B299D7AC();
  sub_1B2C79BB8();
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_68;
  }
  if (!_Records_GDEntityPredicate_records) {
    goto LABEL_228;
  }
  sub_1B2C79AF4();
  if (v95 == v96)
  {
    __break(1u);
LABEL_209:
    __break(1u);
    __break(1u);
LABEL_210:
    __break(1u);
LABEL_211:
    __break(1u);
LABEL_212:
    __break(1u);
LABEL_213:
    __break(1u);
LABEL_214:
    __break(1u);
    goto LABEL_215;
  }
  sub_1B2C79BDC();
  if (v95 == v96) {
    goto LABEL_209;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_229:
    __break(1u);
    goto LABEL_230;
  }
  sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_230:
    __break(1u);
LABEL_231:
    __break(1u);
    goto LABEL_232;
  }
  sub_1B29A50B8();
  sub_1B2C79BD0();
  if (v37 && v27 == v35) {
    goto LABEL_145;
  }
  sub_1B299D7AC();
  sub_1B2C79BB8();
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_68;
  }
  if (!_Records_GDEntityPredicate_records) {
    goto LABEL_231;
  }
  sub_1B2C79AF4();
  if (v95 == v96) {
    goto LABEL_210;
  }
  sub_1B2C79BDC();
  if (v95 == v96) {
    goto LABEL_211;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_232:
    __break(1u);
    goto LABEL_233;
  }
  sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_233:
    __break(1u);
LABEL_234:
    __break(1u);
    goto LABEL_235;
  }
  sub_1B29A50B8();
  sub_1B2C79BD0();
  if (v37 && v27 == v35)
  {
LABEL_145:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B299F268();
LABEL_146:
    uint64_t v45 = sub_1B2C77A74();
    if (v46) {
      goto LABEL_37;
    }
    goto LABEL_74;
  }
  sub_1B299D7AC();
  sub_1B2C79BB8();
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_68;
  }
  if (!_Records_GDEntityPredicate_records) {
    goto LABEL_234;
  }
  sub_1B2C79AF4();
  if (v95 == v96) {
    goto LABEL_212;
  }
  sub_1B2C79BDC();
  if (v95 == v96) {
    goto LABEL_213;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_235:
    __break(1u);
    goto LABEL_236;
  }
  sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_236:
    __break(1u);
LABEL_237:
    __break(1u);
    goto LABEL_238;
  }
  sub_1B29A50B8();
  sub_1B2C79BD0();
  if (v37 && v27 == v35) {
    goto LABEL_172;
  }
  sub_1B299D7AC();
  sub_1B2C79BB8();
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_143;
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_243:
    __break(1u);
    goto LABEL_244;
  }
  sub_1B2C79AF4();
  if (v95 == v96) {
    goto LABEL_221;
  }
  sub_1B2C79BDC();
  if (v95 == v96) {
    goto LABEL_222;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_244:
    __break(1u);
    goto LABEL_245;
  }
  sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_245:
    __break(1u);
    goto LABEL_246;
  }
  sub_1B29A50B8();
  sub_1B2C79BD0();
  if (v37 && v27 == v35) {
    goto LABEL_172;
  }
  sub_1B299D7AC();
  sub_1B2C79BB8();
  swift_bridgeObjectRelease();
  if (v30)
  {
LABEL_143:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_144;
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_246:
    __break(1u);
    goto LABEL_247;
  }
  sub_1B2C79AF4();
  if (v95 == v96) {
    goto LABEL_226;
  }
  if (*(void *)(v102 + 3712) >= v158)
  {
LABEL_227:
    __break(1u);
LABEL_228:
    __break(1u);
    goto LABEL_229;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_247:
    __break(1u);
    goto LABEL_248;
  }
  uint64_t v103 = sub_1B2E82538();
  if (_Records_GDEntityPredicate_labels)
  {
    uint64_t v105 = v103;
    uint64_t v106 = v104;
    sub_1B2E82538();
    if (v105 == v36 && v106 == v35) {
      goto LABEL_172;
    }
    char v108 = sub_1B299D7AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v108 & 1) == 0)
    {
      unint64_t v49 = (int *)type metadata accessor for K2TTextualization();
      uint64_t v109 = sub_1B2C79B20(v49[5]);
      uint64_t v110 = v161;
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v109, v111, v112, v161);
      uint64_t v113 = sub_1B2C79B20(v49[6]);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v113, v114, v115, v110);
      *a2 = v151;
      a2[1] = v31;
      goto LABEL_38;
    }
LABEL_144:
    swift_bridgeObjectRelease();
    goto LABEL_173;
  }
LABEL_248:
  __break(1u);
}

void sub_1B2C79178(void *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  void (*v10)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t);
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90[5];

  uint64_t v4 = v3;
  if (a2)
  {
    swift_beginAccess();
    uint64_t v7 = v3[2];
    uint64_t v8 = a1[3];
    uint64_t v9 = a1[4];
    sub_1B29AEC7C(a1, v8);
    uint64_t v10 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v9 + 24);
    swift_bridgeObjectRetain();
    v10(v90, v8, v9);
    uint64_t v11 = sub_1B2A1BBB8(v90, v7);
    sub_1B29C5E2C((uint64_t)v90);
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_1B29AEC7C(a1, v12);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 24))(&v85, v12, v13);
  if (!_Records_GDEntityPredicate_records) {
    goto LABEL_26;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 40) >= 2674)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 41) >= 3558)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v15 = v85;
  uint64_t v14 = v86;
  uint64_t v16 = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_28:
    __break(1u);
    return;
  }
  uint64_t v18 = v16;
  uint64_t v19 = v17;
  sub_1B2E82538();
  if (v15 == v18 && v14 == v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_18;
  }
  uint64_t v21 = sub_1B2E837A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_18:
    uint64_t v60 = v4[10];
    uint64_t v59 = v4[11];
    uint64_t v61 = (int *)type metadata accessor for K2TTextualization();
    uint64_t v62 = (uint64_t)a3 + v61[5];
    uint64_t v63 = sub_1B2E80668();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v62, 1, 1, v63);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a3 + v61[6], 1, 1, v63);
    *a3 = v60;
    a3[1] = v59;
    *(uint64_t *)((char *)a3 + v61[7]) = MEMORY[0x1E4FBC860];
    sub_1B2C79BE8();
    swift_bridgeObjectRetain();
    return;
  }
  sub_1B29A0B70();
  uint64_t v22 = sub_1B2C79B30();
  char v88 = v22;
  uint64_t v23 = sub_1B2C79B50();
  sub_1B299E8A8(v23, v24, v25, v26, v27, v28, v29, v30, v75, v77, v79, v81, v83, v84, v85, v86, v87, v88, v89);
  uint64_t v31 = sub_1B2C79A94();
  v32(v31);
  uint64_t v33 = sub_1B2A10048(v22, (uint64_t)&protocol requirements base descriptor for BaseEntityFactProtocol);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v85);
  if (!v33) {
    goto LABEL_15;
  }
  sub_1B29A0B70();
  uint64_t v34 = sub_1B2C79B30();
  char v88 = v34;
  uint64_t v35 = sub_1B2C79B50();
  sub_1B299E8A8(v35, v36, v37, v38, v39, v40, v41, v42, v76, v78, v80, v82, v83, v84, v85, v86, v87, v88, v89);
  uint64_t v43 = sub_1B2C79A94();
  v44(v43);
  MEMORY[0xAC6F0012](&v83, v34, &protocol requirements base descriptor for BaseEntityFactProtocol);
  uint64_t v45 = v83;
  uint64_t v46 = v84;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v85);
  if (v46)
  {
LABEL_15:
    sub_1B29A0B70();
    uint64_t v47 = sub_1B2C79B30();
    char v88 = v47;
    uint64_t v48 = sub_1B2C79B50();
    sub_1B299E8A8(v48, v49, v50, v51, v52, v53, v54, v55, v76, v78, v80, v82, v83, v84, v85, v86, v87, v88, v89);
    uint64_t v56 = sub_1B2C79A94();
    v57(v56);
    uint64_t v58 = sub_1B2A10000(v47, (uint64_t)&protocol requirements base descriptor for BaseEntityFactProtocol);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v85);
    if (v58)
    {
      sub_1B2C78164(a1, a3);
      return;
    }
    goto LABEL_21;
  }
  uint64_t v64 = sub_1B29B2368(v45, v4[3]);
  if (!v65)
  {
LABEL_21:
    uint64_t v74 = type metadata accessor for K2TTextualization();
    uint64_t v72 = (uint64_t)a3;
    uint64_t v73 = 1;
    goto LABEL_22;
  }
  uint64_t v66 = v64;
  uint64_t v67 = v65;
  uint64_t v68 = (int *)type metadata accessor for K2TTextualization();
  uint64_t v69 = (uint64_t)a3 + v68[5];
  id v70 = sub_1B2E80668();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v69, 1, 1, v70);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a3 + v68[6], 1, 1, v70);
  sub_1B29A3EB4(&qword_1EB7D98E0);
  uint64_t v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = xmmword_1B2EC00A0;
  *(void *)(v71 + 32) = v45;
  *a3 = v66;
  a3[1] = v67;
  *(uint64_t *)((char *)a3 + v68[7]) = v71;
  uint64_t v72 = (uint64_t)a3;
  uint64_t v73 = 0;
  uint64_t v74 = (uint64_t)v68;
LABEL_22:
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v72, v73, 1, v74);
}

uint64_t sub_1B2C795F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v11 = sub_1B29A3EB4(&qword_1E9C41C78);
  uint64_t v12 = sub_1B299B0F0(v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for K2TTextualization();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B2C79178(a3, a4, v14);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, v15) == 1)
  {
    sub_1B2A10B50((uint64_t)v14, &qword_1E9C41C78);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a6, 1, 1, v15);
  }
  else
  {
    sub_1B2C79920((uint64_t)v14, (uint64_t)v17);
    if (a5)
    {
      uint64_t v19 = *v17;
      uint64_t v20 = v17[1];
      sub_1B2C79A44((uint64_t)a5);
      swift_bridgeObjectRetain();
      uint64_t v21 = a5(a1, v36, v19, v20);
      uint64_t v23 = v22;
      sub_1B2AF182C((uint64_t)a5);
    }
    else
    {
      uint64_t v24 = a3[3];
      uint64_t v25 = a3[4];
      sub_1B29AEC7C(a3, v24);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v25 + 24))(v37, v24, v25);
      uint64_t v27 = v37[0];
      uint64_t v26 = v37[1];
      uint64_t v29 = v37[2];
      uint64_t v28 = v37[3];
      __int16 v30 = v38;
      type metadata accessor for K2TTripleTextualizer();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = v27;
      *(void *)(inited + 24) = v26;
      *(void *)(inited + 32) = v29;
      *(void *)(inited + 40) = v28;
      *(_WORD *)(inited + 48) = v30;
      uint64_t v32 = *v17;
      uint64_t v33 = v17[1];
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1B2C8BF58(a1, v36, v32, v33);
      uint64_t v23 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease_n();
    *uint64_t v17 = v21;
    v17[1] = v23;
    sub_1B2C79984((uint64_t)v17, a6);
    sub_1B2C79BE8();
    return sub_1B2C799E8((uint64_t)v17);
  }
}

uint64_t sub_1B2C79858()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void **)(v0 + 48);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1B2C798C8()
{
  sub_1B2C79858();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for K2TBaseEntityTextualizer()
{
  return self;
}

uint64_t sub_1B2C79920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for K2TTextualization();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2C79984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for K2TTextualization();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2C799E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for K2TTextualization();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B2C79A44(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B2C79A54()
{
  uint64_t v1 = v0[3];
  sub_1B29AEC7C(v0, v1);
  return v1;
}

uint64_t sub_1B2C79A94()
{
  return v0;
}

uint64_t sub_1B2C79AB4()
{
  uint64_t v1 = v0[3];
  sub_1B29AEC7C(v0, v1);
  return v1;
}

uint64_t sub_1B2C79B00()
{
  return v0;
}

uint64_t sub_1B2C79B20@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_1B2C79B30()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1B2C79B50()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B2C79B70()
{
  return v0;
}

uint64_t sub_1B2C79B90()
{
  return sub_1B2E80668();
}

uint64_t sub_1B2C79BB8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C79BE8()
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 0, 1, v1);
}

uint64_t sub_1B2C79C08()
{
  return v0;
}

uint64_t sub_1B2C79C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = sub_1B2E80788();
  uint64_t v4 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v63 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C37280);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B2E80218();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v71 = (char *)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v70 = (char *)v62 - v13;
  uint64_t v14 = sub_1B2E823C8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v79 = (char *)v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v69 = (uint64_t)v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v68 = (char *)v62 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v81 = (char *)v62 - v22;
  uint64_t v84 = sub_1B2E80668();
  uint64_t v23 = MEMORY[0x1F4188790](v84);
  uint64_t v78 = (char *)v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v76 = (char *)v62 - v26;
  uint64_t v27 = *(void *)(a1 + 16);
  if (!v27)
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v73 = v9;
  uint64_t v74 = v8;
  uint64_t v80 = a2;
  uint64_t v77 = (void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v66 = (void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v67 = (void (**)(char *, uint64_t, uint64_t))(v10 + 32);
  uint64_t v65 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v75 = v25;
  uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v25 + 32);
  v62[0] = v4 + 8;
  swift_bridgeObjectRetain();
  v62[1] = a1;
  uint64_t v28 = (unsigned char *)(a1 + 88);
  uint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t v30 = (uint64_t)v81;
  uint64_t v31 = v84;
  uint64_t v72 = v14;
  do
  {
    if (*v28)
    {
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v30, 1, 1, v31);
LABEL_13:
      sub_1B2A0EA40(v30, &qword_1EB7D87C0);
      goto LABEL_19;
    }
    uint64_t v87 = v29;
    uint64_t v32 = *((void *)v28 - 4);
    uint64_t v34 = *((void *)v28 - 2);
    uint64_t v33 = *((void *)v28 - 1);
    uint64_t v86 = *((void *)v28 - 6);
    swift_bridgeObjectRetain();
    uint64_t v85 = v32;
    swift_bridgeObjectRetain();
    sub_1B2A53708(v34, v33, 0);
    sub_1B2A53708(v34, v33, 0);
    uint64_t v35 = v79;
    sub_1B2E823B8();
    uint64_t v36 = sub_1B2E82388();
    unint64_t v38 = v37;
    (*v77)(v35, v14);
    if (v38 >> 60 == 15)
    {
      uint64_t v39 = 1;
      uint64_t v30 = (uint64_t)v81;
      uint64_t v31 = v84;
      goto LABEL_11;
    }
    sub_1B2A10B00();
    uint64_t v41 = v73;
    uint64_t v40 = (uint64_t)v74;
    uint64_t v42 = v83;
    sub_1B2E7FF78();
    if (v42)
    {

      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v40, 1, 1, v41);
      uint64_t v83 = 0;
LABEL_10:
      sub_1B29F869C(v36, v38);
      sub_1B2A0EA40(v40, &qword_1E9C37280);
      uint64_t v39 = 1;
      uint64_t v14 = v72;
      uint64_t v30 = (uint64_t)v81;
      uint64_t v31 = v84;
      goto LABEL_11;
    }
    uint64_t v83 = 0;
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v40, 0, 1, v41);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v40, 1, v41) == 1) {
      goto LABEL_10;
    }
    uint64_t v48 = v70;
    (*v67)(v70, v40, v41);
    uint64_t v49 = v69;
    sub_1B2E801D8();
    (*v66)(v71, v48, v41);
    int v50 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v49, 1, v84);
    v62[2] = (unint64_t)v82 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    if (v50 == 1)
    {
      uint64_t v51 = v71;
      uint64_t v52 = v63;
      sub_1B2E80768();
      sub_1B2E80738();
      sub_1B29F869C(v36, v38);
      (*(void (**)(char *, uint64_t))v62[0])(v52, v64);
      uint64_t v53 = *v65;
      (*v65)(v51, v41);
      uint64_t v54 = (uint64_t)v68;
      v53(v70, v41);
      sub_1B2A0EA40(v69, &qword_1EB7D87C0);
      uint64_t v31 = v84;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v54, 1, v84) == 1) {
        goto LABEL_25;
      }
      uint64_t v55 = *v82;
    }
    else
    {
      unint64_t v56 = v38;
      uint64_t v57 = v82;
      sub_1B29F869C(v36, v56);
      uint64_t v58 = *v65;
      (*v65)(v71, v41);
      v58(v70, v41);
      uint64_t v55 = *v57;
      uint64_t v54 = (uint64_t)v68;
      uint64_t v59 = v84;
      (*v57)(v68, v69, v84);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v54, 0, 1, v59);
      uint64_t v31 = v59;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v54, 1, v59) == 1)
      {
LABEL_25:
        sub_1B2A0EA40(v54, &qword_1EB7D87C0);
        uint64_t v39 = 1;
        uint64_t v14 = v72;
        uint64_t v30 = (uint64_t)v81;
        goto LABEL_11;
      }
    }
    uint64_t v14 = v72;
    uint64_t v30 = (uint64_t)v81;
    v55(v81, (uint64_t)v68, v31);
    uint64_t v39 = 0;
LABEL_11:
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v30, v39, 1, v31);
    sub_1B2A53718(v34, v33, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A53718(v34, v33, 0);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v30, 1, v31) == 1)
    {
      uint64_t v29 = v87;
      goto LABEL_13;
    }
    uint64_t v43 = *v82;
    uint64_t v44 = v76;
    (*v82)(v76, v30, v31);
    v43(v78, (uint64_t)v44, v31);
    uint64_t v29 = v87;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v29 = sub_1B29B7DD8(0, *(void *)(v29 + 16) + 1, 1, v29);
    }
    unint64_t v46 = *(void *)(v29 + 16);
    unint64_t v45 = *(void *)(v29 + 24);
    uint64_t v47 = v75;
    if (v46 >= v45 >> 1)
    {
      uint64_t v60 = sub_1B29B7DD8(v45 > 1, v46 + 1, 1, v29);
      uint64_t v47 = v75;
      uint64_t v29 = v60;
    }
    *(void *)(v29 + 16) = v46 + 1;
    v43((char *)(v29+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v46), (uint64_t)v78, v31);
LABEL_19:
    v28 += 64;
    --v27;
  }
  while (v27);
  swift_release();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1B2C7A51C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = MEMORY[0x1E4FBC860];
    do
    {
      if (*(void *)(v3 + 16))
      {
        unint64_t v6 = sub_1B29DAE70();
        if (v7)
        {
          uint64_t v8 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v6);
          uint64_t v9 = *v8;
          uint64_t v10 = v8[1];
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2C83B00();
            sub_1B29B7048();
            uint64_t v5 = v13;
          }
          unint64_t v11 = *(void *)(v5 + 16);
          if (v11 >= *(void *)(v5 + 24) >> 1)
          {
            sub_1B29B7048();
            uint64_t v5 = v14;
          }
          *(void *)(v5 + 16) = v11 + 1;
          uint64_t v12 = v5 + 16 * v11;
          *(void *)(v12 + 32) = v9;
          *(void *)(v12 + 40) = v10;
        }
      }
      ++v4;
    }
    while (v2 != v4);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  return v5;
}

void sub_1B2C7A65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B2B1D124(v28, a1);
  uint64_t v5 = v28[0];
  int64_t v6 = v28[3];
  unint64_t v7 = v28[4];
  uint64_t v26 = v28[1];
  int64_t v27 = (unint64_t)(v28[2] + 64) >> 6;
  uint64_t v29 = a3;
  uint64_t v25 = (uint64_t *)(a3 + 32);
  swift_bridgeObjectRetain();
  uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_2:
  while (v7)
  {
    unint64_t v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v10 = v9 | (v6 << 6);
LABEL_20:
    uint64_t v15 = *(void *)(*(void *)(v5 + 48) + 8 * v10);
    uint64_t v16 = *(void *)(a2 + 16);
    uint64_t v17 = (uint64_t *)(a2 + 32);
    if (v16)
    {
      while (1)
      {
        uint64_t v18 = *v17++;
        if (v18 == v15) {
          break;
        }
        if (!--v16) {
          goto LABEL_23;
        }
      }
LABEL_28:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B7148();
        uint64_t v8 = v23;
      }
      unint64_t v22 = *(void *)(v8 + 16);
      if (v22 >= *(void *)(v8 + 24) >> 1)
      {
        sub_1B29B7148();
        uint64_t v8 = v24;
      }
      *(void *)(v8 + 16) = v22 + 1;
      *(void *)(v8 + 8 * v22 + 32) = v15;
    }
    else
    {
LABEL_23:
      uint64_t v19 = *(void *)(v29 + 16);
      if (v19)
      {
        uint64_t v20 = v25;
        while (1)
        {
          uint64_t v21 = *v20++;
          if (v21 == v15) {
            goto LABEL_28;
          }
          if (!--v19) {
            goto LABEL_2;
          }
        }
      }
    }
  }
  int64_t v11 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v11 >= v27) {
      goto LABEL_33;
    }
    unint64_t v12 = *(void *)(v26 + 8 * v11);
    int64_t v13 = v6 + 1;
    if (!v12)
    {
      int64_t v13 = v6 + 2;
      if (v6 + 2 >= v27) {
        goto LABEL_33;
      }
      unint64_t v12 = *(void *)(v26 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v6 + 3;
        if (v6 + 3 >= v27) {
          goto LABEL_33;
        }
        unint64_t v12 = *(void *)(v26 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v6 + 4;
          if (v6 + 4 >= v27) {
            goto LABEL_33;
          }
          unint64_t v12 = *(void *)(v26 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v6 + 5;
            if (v6 + 5 >= v27) {
              goto LABEL_33;
            }
            unint64_t v12 = *(void *)(v26 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v6 + 6;
              while (v14 < v27)
              {
                unint64_t v12 = *(void *)(v26 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_19;
                }
              }
LABEL_33:
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v6 = v13;
    goto LABEL_20;
  }
  __break(1u);
}

uint64_t sub_1B2C7A8BC()
{
  uint64_t v1 = v0;
  sub_1B2C83530(v0, (uint64_t)v7, &qword_1E9C409A0);
  uint64_t v2 = v7[0];
  uint64_t v3 = v7[1];
  sub_1B2C83530(v1, (uint64_t)v8, &qword_1E9C409A0);
  if (v8[57]) {
    return 2;
  }
  if (v2 == 49 && v3 == 0xE100000000000000) {
    return 1;
  }
  sub_1B2999874();
  if (sub_1B2C83AD0()) {
    return 1;
  }
  if (v2 == 48 && v3 == 0xE100000000000000) {
    return 0;
  }
  sub_1B2999874();
  if (sub_1B2C83AD0()) {
    return 0;
  }
  else {
    return 2;
  }
}

void sub_1B2C7A980()
{
  sub_1B299B720();
  uint64_t v1 = v0;
  uint64_t v67 = v2;
  uint64_t v70 = v3;
  sub_1B2C83530(v0, (uint64_t)v71, &qword_1E9C409A0);
  uint64_t v68 = v71[1];
  uint64_t v69 = v71[0];
  uint64_t v62 = sub_1B2E80788();
  sub_1B299D278();
  uint64_t v64 = v4;
  MEMORY[0x1F4188790](v5);
  sub_1B299B6D0();
  uint64_t v63 = v6;
  uint64_t v7 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2999940();
  sub_1B299B810();
  MEMORY[0x1F4188790](v9);
  int64_t v11 = (char *)&v59 - v10;
  uint64_t v12 = sub_1B29A3EB4(&qword_1E9C37280);
  uint64_t v13 = sub_1B299B0F0(v12);
  MEMORY[0x1F4188790](v13);
  sub_1B299E4A0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_1B2E80218();
  sub_1B299D278();
  uint64_t v65 = v18;
  MEMORY[0x1F4188790](v19);
  sub_1B299B860();
  uint64_t v22 = v20 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v59 - v24;
  uint64_t v26 = sub_1B2E823C8();
  sub_1B299D278();
  uint64_t v28 = v27;
  MEMORY[0x1F4188790](v29);
  sub_1B299E4A0();
  uint64_t v32 = v31 - v30;
  sub_1B2C83530(v1, (uint64_t)v72, &qword_1E9C409A0);
  if (!v72[57])
  {
    uint64_t v60 = v22;
    uint64_t v61 = v25;
    swift_bridgeObjectRetain();
    sub_1B2E823B8();
    uint64_t v33 = sub_1B2E82388();
    unint64_t v35 = v34;
    sub_1B2C83674(v1);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v26);
    if (v35 >> 60 != 15)
    {
      sub_1B2A10B00();
      uint64_t v36 = v16;
      uint64_t v37 = v17;
      uint64_t v38 = v33;
      sub_1B2E7FF78();
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v36, 0, 1, v17);
      sub_1B2C36828(v36, 1, v17);
      if (v52)
      {
        sub_1B29F869C(v33, v35);
        uint64_t v39 = &qword_1E9C37280;
        uint64_t v40 = v36;
      }
      else
      {
        uint64_t v45 = v65;
        unint64_t v46 = v61;
        sub_1B2C39188();
        v47();
        uint64_t v48 = v66;
        sub_1B2E801D8();
        (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v60, v46, v37);
        uint64_t v49 = sub_1B2E80668();
        uint64_t v50 = v48;
        uint64_t v51 = v49;
        sub_1B2C36828(v50, 1, v49);
        if (v52)
        {
          sub_1B2E80768();
          sub_1B2E80738();
          sub_1B29F869C(v38, v35);
          sub_1B299B798();
          v53();
          uint64_t v54 = *(void (**)(void))(v45 + 8);
          sub_1B2A10C90();
          v54();
          sub_1B2A10C90();
          v54();
          sub_1B2A0EA40(v66, &qword_1EB7D87C0);
          sub_1B2C36828((uint64_t)v11, 1, v51);
          if (!v52)
          {
LABEL_16:
            sub_1B2C83AA4();
            v58();
            sub_1B2C83BA0();
            goto LABEL_8;
          }
        }
        else
        {
          sub_1B29F869C(v38, v35);
          uint64_t v55 = *(void (**)(void))(v45 + 8);
          sub_1B2A10C90();
          v55();
          sub_1B2A10C90();
          v55();
          sub_1B2C84050();
          sub_1B2C83AA4();
          v56();
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 0, 1, v51);
          sub_1B2C36828((uint64_t)v11, 1, v51);
          if (!v57) {
            goto LABEL_16;
          }
        }
        uint64_t v39 = &qword_1EB7D87C0;
        uint64_t v40 = (uint64_t)v11;
      }
      sub_1B2A0EA40(v40, v39);
    }
  }
  sub_1B2E80668();
  sub_1B2C83F2C();
LABEL_8:
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v41, v42, v43, v44);
  sub_1B299B738();
}

void sub_1B2C7AE98()
{
  sub_1B299B720();
  char v2 = v1;
  unint64_t v63 = v3;
  sub_1B2E80788();
  sub_1B299D278();
  v58[2] = v5;
  v58[3] = v4;
  MEMORY[0x1F4188790](v4);
  sub_1B299B6D0();
  v58[1] = v6;
  uint64_t v7 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2999940();
  uint64_t v62 = v9;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v10);
  sub_1B2AD0E78();
  uint64_t v59 = v11;
  uint64_t v12 = sub_1B29A3EB4(&qword_1E9C37280);
  uint64_t v13 = sub_1B299B0F0(v12);
  MEMORY[0x1F4188790](v13);
  sub_1B299E4A0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_1B2E80218();
  sub_1B299D278();
  uint64_t v61 = v18;
  MEMORY[0x1F4188790](v19);
  sub_1B2999940();
  uint64_t v60 = v20;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v58 - v22;
  uint64_t v24 = sub_1B2E823C8();
  sub_1B299D278();
  uint64_t v26 = v25;
  MEMORY[0x1F4188790](v27);
  sub_1B299ADB4();
  if ((v2 & 1) == 0)
  {
    v58[0] = v23;
    swift_bridgeObjectRetain();
    sub_1B2E823B8();
    uint64_t v28 = sub_1B2E82388();
    unint64_t v30 = v29;
    uint64_t v31 = sub_1B2C5D1A8();
    sub_1B2A53718(v31, v32, 0);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v0, v24);
    if (v30 >> 60 != 15)
    {
      sub_1B2A10B00();
      sub_1B2E7FF78();
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v16, 0, 1, v17);
      sub_1B2C36828(v16, 1, v17);
      if (v38)
      {
        sub_1B29F869C(v28, v30);
        uint64_t v39 = &qword_1E9C37280;
        uint64_t v40 = v16;
      }
      else
      {
        unint64_t v63 = v30;
        uint64_t v45 = v61;
        uint64_t v46 = v58[0];
        sub_1B2C39188();
        v47();
        uint64_t v48 = v62;
        sub_1B2E801D8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v60, v46, v17);
        uint64_t v49 = sub_1B2E80668();
        sub_1B2C36828(v48, 1, v49);
        if (v50)
        {
          sub_1B2E80768();
          uint64_t v54 = v59;
          sub_1B2E80738();
          sub_1B29F869C(v28, v63);
          sub_1B299B798();
          v51();
          char v52 = *(void (**)(void))(v45 + 8);
          sub_1B2A10C90();
          v52();
          sub_1B2A10C90();
          v52();
          sub_1B2A0EA40(v48, &qword_1EB7D87C0);
          sub_1B2C36828(v54, 1, v49);
          if (!v38)
          {
LABEL_20:
            sub_1B2C83AA4();
            v57();
            sub_1B2C83BA0();
            goto LABEL_12;
          }
        }
        else
        {
          sub_1B29F869C(v28, v63);
          uint64_t v53 = *(void (**)(void))(v45 + 8);
          sub_1B2A10C90();
          v53();
          sub_1B2A10C90();
          v53();
          sub_1B2C84050();
          uint64_t v54 = v59;
          sub_1B2C83AA4();
          v55();
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v54, 0, 1, v49);
          sub_1B2C36828(v54, 1, v49);
          if (!v56) {
            goto LABEL_20;
          }
        }
        uint64_t v39 = &qword_1EB7D87C0;
        uint64_t v40 = v54;
      }
      sub_1B2A0EA40(v40, v39);
    }
    sub_1B2E80668();
    sub_1B2C83F2C();
LABEL_12:
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v41, v42, v43, v44);
    sub_1B299B738();
    return;
  }
  sub_1B2E80668();
  sub_1B2C83F2C();
  sub_1B299B738();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v33, v34, v35, v36);
}

void sub_1B2C7B34C(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  unint64_t v3 = 0;
  uint64_t v25 = *(void *)(a1 + 16);
  uint64_t v19 = MEMORY[0x1E4FBC860];
LABEL_2:
  uint64_t v4 = v3 << 6;
  while (1)
  {
    if (v25 == v3)
    {
      swift_bridgeObjectRelease();
      sub_1B29C5E2C((uint64_t)a2);
      return;
    }
    unint64_t v5 = v3;
    if (v3 >= *(void *)(v2 + 16)) {
      break;
    }
    uint64_t v6 = *(void *)(v2 + v4 + 32);
    uint64_t v7 = *(void *)(v2 + v4 + 40);
    uint64_t v8 = *(void *)(v2 + v4 + 56);
    uint64_t v22 = *(void *)(v2 + v4 + 48);
    __int16 v21 = *(_WORD *)(v2 + v4 + 64);
    uint64_t v9 = *(void *)(v2 + v4 + 72);
    uint64_t v10 = *(void *)(v2 + v4 + 80);
    char v11 = *(unsigned char *)(v2 + v4 + 88);
    if (v6 != *a2 || v7 != a2[1])
    {
      v4 += 64;
      ++v3;
      char v13 = sub_1B2E837A8();
      uint64_t v2 = a1;
      if ((v13 & 1) == 0) {
        continue;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2A53708(v9, v10, v11);
    uint64_t v14 = v19;
    uint64_t v26 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B2C83B00();
      sub_1B29BFF10();
      uint64_t v14 = v19;
    }
    unint64_t v15 = *(void *)(v14 + 16);
    unint64_t v16 = v15 + 1;
    uint64_t v2 = a1;
    if (v15 >= *(void *)(v14 + 24) >> 1)
    {
      unint64_t v18 = v15 + 1;
      unint64_t v20 = *(void *)(v14 + 16);
      sub_1B29BFF10();
      unint64_t v16 = v18;
      unint64_t v15 = v20;
      uint64_t v2 = a1;
      uint64_t v14 = v26;
    }
    unint64_t v3 = v5 + 1;
    *(void *)(v14 + 16) = v16;
    uint64_t v19 = v14;
    uint64_t v17 = v14 + (v15 << 6);
    *(void *)(v17 + 32) = v6;
    *(void *)(v17 + 40) = v7;
    *(void *)(v17 + 48) = v22;
    *(void *)(v17 + 56) = v8;
    *(_WORD *)(v17 + 64) = v21;
    *(void *)(v17 + 72) = v9;
    *(void *)(v17 + 80) = v10;
    *(unsigned char *)(v17 + 88) = v11;
    goto LABEL_2;
  }
  __break(1u);
}

uint64_t sub_1B2C7B504(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2DCA610();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1B2C829FC(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1B2C7B570(uint64_t a1, unint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = a1;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B2E83448();
  swift_bridgeObjectRelease();
LABEL_4:
  uint64_t result = sub_1B2D2E698(0, v3, v5, v2);
  if (v7) {
    uint64_t v8 = v5;
  }
  else {
    uint64_t v8 = result;
  }
  if (v8 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B2E83448();
    uint64_t result = swift_bridgeObjectRelease();
    if (v10 < 0)
    {
LABEL_25:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B2E83448();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9 < v8)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((v2 & 0xC000000000000001) != 0 && v8)
  {
    type metadata accessor for EntityResolutionRankingService.RankedEntities.ScoredEntity();
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = v11 + 1;
      sub_1B2E83238();
      uint64_t v11 = v12;
    }
    while (v8 != v12);
  }
  if (!v4) {
    return v2 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1B2E83458();
  sub_1B2C83A40();
  return v13;
}

uint64_t sub_1B2C7B708(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1B2E824D8();
    sub_1B2E82628();
    swift_bridgeObjectRelease();
    return sub_1B2C5D1A8();
  }
  return result;
}

uint64_t sub_1B2C7B7C4(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1B2D2E698(0, result, *(void *)(a2 + 16), a2);
  if (v4) {
    unint64_t v5 = v3;
  }
  else {
    unint64_t v5 = result;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5) {
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1B2C7B834(uint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  char v12 = *(unsigned char *)(a1 + 48);
  *(void *)(v4 + 112) = *(void *)a1;
  *(void *)(v4 + 120) = v7;
  *(void *)(v4 + 128) = v9;
  *(void *)(v4 + 136) = v8;
  *(void *)(v4 + 144) = v10;
  *(void *)(v4 + 152) = v11;
  *(unsigned char *)(v4 + 160) = v12;
  *(void *)&long long v16 = v9;
  *((void *)&v16 + 1) = v8;
  uint64_t v17 = v10;
  uint64_t v18 = v11;
  char v19 = v12;
  long long v13 = a3[1];
  v15[0] = *a3;
  v15[1] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1B2C7766C(&v16, a2, v15, a4);
}

__n128 *sub_1B2C7B8C0()
{
  sub_1B29A3EB4(&qword_1EB7E34A8);
  uint64_t v0 = (__n128 *)swift_allocObject();
  sub_1B2A6BC14(v0, (__n128)xmmword_1B2EC00A0);
  static EntityPredicate.isA.getter();
  uint64_t inited = (__n128 *)swift_initStackObject();
  sub_1B2A6BC14(inited, (__n128)xmmword_1B2EC00A0);
  static EntityPredicate.name.getter();
  sub_1B2AD2FD0();
  return v0;
}

void sub_1B2C7B948()
{
  sub_1B299B720();
  uint64_t v60 = sub_1B2E800E8();
  sub_1B299D278();
  unint64_t v59 = v2;
  MEMORY[0x1F4188790](v3);
  sub_1B299B6D0();
  uint64_t v58 = v4;
  uint64_t v5 = *(void *)(*(void *)(v0 + 120) + 16);
  if (!v5)
  {
    uint64_t v33 = MEMORY[0x1E4FBC860];
LABEL_27:
    uint64_t v34 = *(void *)(v33 + 16);
    if (v34)
    {
      swift_retain();
      uint64_t v35 = v33 + 72;
      uint64_t v1 = MEMORY[0x1E4FBC860];
      do
      {
        if (!*(unsigned char *)(v35 + 57))
        {
          uint64_t v37 = *(void *)v35;
          uint64_t v36 = *(void *)(v35 + 8);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2C83BE4();
            uint64_t v1 = v41;
          }
          unint64_t v39 = *(void *)(v1 + 16);
          unint64_t v38 = *(void *)(v1 + 24);
          if (v39 >= v38 >> 1)
          {
            sub_1B29999F8(v38);
            sub_1B29B7048();
            uint64_t v1 = v42;
          }
          *(void *)(v1 + 16) = v39 + 1;
          unint64_t v40 = v1 + 16 * v39;
          *(void *)(v40 + 32) = v37;
          *(void *)(v40 + 40) = v36;
        }
        v35 += 104;
        --v34;
      }
      while (v34);
      swift_release();
    }
    else
    {
      uint64_t v1 = MEMORY[0x1E4FBC860];
    }
    swift_release();
    unint64_t v43 = *(void *)(v1 + 16);
    if (v43 > 1)
    {
      if (qword_1E9C38C28 != -1) {
LABEL_48:
      }
        swift_once();
      uint64_t v44 = sub_1B2E81FB8();
      uint64_t v45 = (_DWORD *)sub_1B29A4B98(v44, (uint64_t)qword_1E9C3EBA8);
      swift_retain_n();
      uint64_t v46 = (void *)sub_1B2E81F98();
      os_log_type_t v47 = sub_1B2E82DB8();
      if (sub_1B2C839C8(v47))
      {
        sub_1B2C83BB0();
        uint64_t v75 = sub_1B2C839E4();
        *uint64_t v45 = 136642819;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_1B2E82408();
        sub_1B29BF6BC(v48, v49, (uint64_t)&v75, v50, v51, v52, v53, v54, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68,
          v69);
        sub_1B2E82FB8();
        swift_release_n();
        swift_bridgeObjectRelease();
        sub_1B2C83868(&dword_1B2996000, v55, v56, "Multiple names found for entity %{sensitive}s.");
        sub_1B2C8399C();
        sub_1B299B750();
        sub_1B299B750();
      }
      else
      {

        swift_release_n();
      }
      unint64_t v43 = *(void *)(v1 + 16);
    }
    if (v43)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1B2E800B8();
      sub_1B29C3640();
      sub_1B2E83008();
      sub_1B299B798();
      v57();
    }
    swift_bridgeObjectRelease();
    sub_1B2999874();
    sub_1B299B738();
    return;
  }
  uint64_t v66 = 233;
  uint64_t v65 = 2674;
  uint64_t v64 = 3558;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v61 = MEMORY[0x1E4FBC860];
  uint64_t v62 = v0;
  uint64_t v63 = v6;
  while (_Records_GDEntityPredicate_records)
  {
    sub_1B299E8C4();
    if (v7 == v8)
    {
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    sub_1B2C83954();
    if (v7 == v8) {
      goto LABEL_47;
    }
    uint64_t v73 = v5;
    if (!_Records_GDEntityPredicate_predicateIds) {
      goto LABEL_50;
    }
    uint64_t v10 = sub_1B2C83B0C(v9);
    uint64_t v72 = v11;
    uint64_t v74 = v10;
    uint64_t v13 = *(void *)(v12 + 56);
    uint64_t v67 = *(void *)(v12 + 48);
    LODWORD(v68) = *(unsigned __int16 *)(v12 + 64);
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v14 = *(void *)(v12 + 80);
    uint64_t v16 = *(void *)(v12 + 88);
    uint64_t v17 = *(void *)(v12 + 96);
    uint64_t v19 = *(void *)(v12 + 104);
    uint64_t v18 = *(void *)(v12 + 112);
    uint64_t v20 = *(void *)(v12 + 120);
    uint64_t v21 = *(unsigned __int8 *)(v12 + 128);
    int v22 = *(unsigned __int8 *)(v12 + 129);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    HIDWORD(v68) = v22;
    uint64_t v69 = v15;
    uint64_t v70 = v14;
    unsigned int v71 = v21;
    sub_1B2A53774(v15, v14, v16, v17, v19, v18, v20, v21, v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels) {
      goto LABEL_51;
    }
    uint64_t v25 = v23;
    uint64_t v26 = v24;
    sub_1B2E82538();
    uint64_t v1 = v27;
    if (v72 == v25 && v74 == v26)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v29 = sub_1B299BBC4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0) {
        goto LABEL_18;
      }
    }
    if (!HIDWORD(v68))
    {
      if ((sub_1B2C83B18() & 1) == 0) {
        sub_1B299F8EC();
      }
      uint64_t v1 = v67;
      unint64_t v30 = *(void *)(HIDWORD(v68) + 0x10);
      if (v30 >= *(void *)(HIDWORD(v68) + 0x18) >> 1) {
        sub_1B29BFED4();
      }
      *(void *)(HIDWORD(v68) + 0x10) = v30 + 1;
      uint64_t v61 = HIDWORD(v68);
      uint64_t v31 = (void *)(HIDWORD(v68) + 104 * v30);
      v31[4] = v72;
      v31[5] = v74;
      uint64_t v31[6] = v67;
      v31[7] = v13;
      sub_1B2C83A14((uint64_t)v31);
      *(void *)(v32 + 72) = v15;
      *(void *)(v32 + 80) = v70;
      *(void *)(v32 + 88) = v16;
      *(void *)(v32 + 96) = v17;
      *(void *)(v32 + 104) = v19;
      *(void *)(v32 + 112) = v18;
      *(void *)(v32 + 120) = v20;
      *(_WORD *)(v32 + 128) = v71;
      goto LABEL_24;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A5347C(v15, v70, v16, v17, v19, v18, v20, v71, SBYTE4(v68));
LABEL_24:
    uint64_t v5 = v73 - 1;
    if (v73 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = v61;
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
}

void sub_1B2C7BFF8()
{
  sub_1B299B720();
  unint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_1B29A3EB4(&qword_1E9C41C78);
  uint64_t v12 = sub_1B299B0F0(v11);
  MEMORY[0x1F4188790](v12);
  sub_1B299E4A0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for K2TTextualization();
  sub_1B2999864();
  MEMORY[0x1F4188790](v17);
  sub_1B299ADB4();
  memcpy(v63, v6, sizeof(v63));
  uint64_t v50 = v10;
  if (v63[97] == 1)
  {
    uint64_t v18 = *(void *)&v63[56];
    uint64_t v19 = *(void *)&v63[72];
    uint64_t v20 = *(void *)&v63[88];
    uint64_t v21 = v63[96];
    uint64_t v46 = *(void *)&v63[40];
    uint64_t v47 = *(void *)&v63[48];
    long long v60 = *(_OWORD *)&v63[40];
    long long v61 = *(_OWORD *)&v63[56];
    uint64_t v48 = *(void *)&v63[64];
    uint64_t v49 = *(void *)&v63[80];
    v62[0] = *(_OWORD *)&v63[72];
    *(void *)&v62[1] = *(void *)&v63[88];
    BYTE8(v62[1]) = v63[96];
    if (*(void *)(v4 + 24))
    {
      sub_1B29C3B84(v4, (uint64_t)&v57);
    }
    else
    {
      long long v22 = *(_OWORD *)(v4 + 16);
      long long v57 = *(_OWORD *)v4;
      long long v58 = v22;
      uint64_t v59 = *(void *)(v4 + 32);
    }
    uint64_t v43 = v8;
    uint64_t v44 = v19;
    uint64_t v45 = v20;
    if (*((void *)&v58 + 1))
    {
      sub_1B29D1D20(&v57, (uint64_t)&v54);
      uint64_t v42 = *(void *)&v56[0];
      uint64_t v23 = sub_1B29AEC7C(&v54, *((uint64_t *)&v55 + 1));
      uint64_t v41 = (uint64_t)&v41;
      MEMORY[0x1F4188790](v23);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_1B2E82748() & 1) == 0)
      {
        sub_1B2A5347C(v46, v47, v18, v48, v44, v49, v45, v21, 1);
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v54);
        goto LABEL_19;
      }
      LODWORD(v42) = v21;
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v54);
    }
    else
    {
      LODWORD(v42) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    long long v54 = v60;
    long long v55 = v61;
    v56[0] = v62[0];
    *(_OWORD *)((char *)v56 + 9) = *(_OWORD *)((char *)v62 + 9);
    v64[0] = *(_OWORD *)v63;
    v64[1] = *(_OWORD *)&v63[16];
    __int16 v65 = *(_WORD *)&v63[32];
    v52[0] = *(_OWORD *)v63;
    v52[1] = *(_OWORD *)&v63[16];
    __int16 v53 = *(_WORD *)&v63[32];
    uint64_t v29 = v2[3];
    unint64_t v30 = (void *)v2[5];
    uint64_t v31 = (void *)v2[6];
    uint64_t v32 = (void *)v2[7];
    v51[0] = v2[4];
    v51[1] = (uint64_t)v30;
    v51[2] = (uint64_t)v31;
    void v51[3] = (uint64_t)v32;
    uint64_t v33 = (void *)v2[13];
    sub_1B29E52BC((uint64_t)v64);
    swift_retain();
    id v34 = v30;
    id v35 = v31;
    id v36 = v32;
    sub_1B2C8CFF0((uint64_t)&v54, v50, v43, (uint64_t)v52, v29, v51, v33, (uint64_t *)&v57);

    swift_release();
    sub_1B29C5E2C((uint64_t)v64);
    sub_1B2A5347C(v46, v47, v18, v48, v44, v49, v45, v42, 1);
    uint64_t v37 = *((void *)&v58 + 1);
    uint64_t v38 = v59;
    sub_1B29AEC7C(&v57, *((uint64_t *)&v58 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v4, v37, v38);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v57);
  }
  else
  {
    if (*(void *)(v4 + 24))
    {
      sub_1B29C3B84(v4, (uint64_t)&v54);
    }
    else
    {
      long long v24 = *(_OWORD *)(v4 + 16);
      long long v54 = *(_OWORD *)v4;
      long long v55 = v24;
      *(void *)&v56[0] = *(void *)(v4 + 32);
    }
    if (!*((void *)&v55 + 1)
      || (sub_1B29D1D20(&v54, (uint64_t)&v60),
          uint64_t v25 = sub_1B29AEC7C(&v60, *((uint64_t *)&v61 + 1)),
          MEMORY[0x1F4188790](v25),
          char v26 = sub_1B2E82748(),
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v60),
          (v26 & 1) != 0))
    {
      *((void *)&v61 + 1) = sub_1B29A3EB4(&qword_1E9C38920);
      *(void *)&v62[0] = sub_1B29D22C4(&qword_1E9C3C0B8, &qword_1E9C38920);
      *(void *)&long long v60 = sub_1B2C8402C();
      memcpy((void *)(v60 + 16), v63, 0x62uLL);
      char v27 = *(void *)(v4 + 24) == 0;
      sub_1B2C339E4((uint64_t)v63);
      sub_1B2C795F8(v50, v8, &v60, v27, 0, v15);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v60);
      sub_1B2C36828(v15, 1, v16);
      if (v28)
      {
        sub_1B2A0EA40(v15, &qword_1E9C41C78);
      }
      else
      {
        sub_1B2C79920(v15, (uint64_t)v1);
        sub_1B29A3EB4(&qword_1EB7E5B00);
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_1B2EC00A0;
        uint64_t v40 = v1[1];
        *(void *)(v39 + 32) = *v1;
        *(void *)(v39 + 40) = v40;
        swift_bridgeObjectRetain();
        sub_1B2C799E8((uint64_t)v1);
      }
    }
  }
LABEL_19:
  sub_1B299B738();
}

BOOL sub_1B2C7C540(void *a1, void *a2, void *a3)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v3 = a1[6];
  uint64_t v4 = a2[1];
  if (a1[1] == *a3 && a1[2] == a3[1]) {
    return v3 == v4;
  }
  char v6 = sub_1B2E837A8();
  BOOL result = 0;
  if (v6) {
    return v3 == v4;
  }
  return result;
}

uint64_t sub_1B2C7C5D0(void *a1, uint64_t a2, void *a3)
{
  if (*a1 != *(void *)(a2 + 112)) {
    return 0;
  }
  if (a1[1] == *a3 && a1[2] == a3[1]) {
    return 1;
  }
  else {
    return sub_1B2E837A8() & 1;
  }
}

uint64_t sub_1B2C7C644()
{
  sub_1B299F5F0();
  (*(void (**)(void))(v0 + 272))();
  sub_1B2C7C6B8();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  return v2;
}

void sub_1B2C7C6B8()
{
  sub_1B299B720();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_1B299F5F0();
  (*(void (**)(void))(v4 + 272))();
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v44 = *(void *)(v5 + 16);
  if (!v44)
  {
    swift_bridgeObjectRelease();
LABEL_36:
    sub_1B299B738();
    return;
  }
  uint64_t v43 = v5 + 32;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v39 = v0;
  uint64_t v42 = v3;
  uint64_t v38 = v5;
  while (v6 < *(void *)(v5 + 16))
  {
    memcpy(v57, (const void *)(v43 + 104 * v6), 0x62uLL);
    if (*(void *)(v3 + 24))
    {
      sub_1B2C339E4((uint64_t)v57);
    }
    else
    {
      uint64_t v8 = *(void *)(v1 + 120);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v40 = v7;
        unint64_t v41 = v6;
        sub_1B2C339E4((uint64_t)v57);
        sub_1B2C339E4((uint64_t)v57);
        uint64_t v56 = MEMORY[0x1E4FBC860];
        uint64_t v45 = v8;
        swift_bridgeObjectRetain();
        sub_1B29BFE34();
        uint64_t v10 = 0;
        uint64_t v11 = v56;
        do
        {
          uint64_t v50 = v10;
          uint64_t v51 = v9;
          uint64_t v48 = *(void *)(v45 + v10 + 32);
          uint64_t v49 = v11;
          uint64_t v12 = *(void *)(v45 + v10 + 56);
          uint64_t v47 = *(void *)(v45 + v10 + 48);
          __int16 v46 = *(_WORD *)(v45 + v10 + 64);
          uint64_t v14 = *(void *)(v45 + v10 + 72);
          uint64_t v13 = *(void *)(v45 + v10 + 80);
          uint64_t v15 = *(void *)(v45 + v10 + 88);
          uint64_t v16 = *(void *)(v45 + v10 + 96);
          uint64_t v18 = *(void *)(v45 + v10 + 104);
          uint64_t v17 = *(void *)(v45 + v10 + 112);
          uint64_t v19 = *(void *)(v45 + v10 + 120);
          uint64_t v20 = *(unsigned __int8 *)(v45 + v10 + 128);
          char v21 = *(unsigned char *)(v45 + v10 + 129);
          uint64_t v54 = *(void *)(v45 + v10 + 40);
          swift_bridgeObjectRetain();
          uint64_t v53 = v12;
          swift_bridgeObjectRetain();
          uint64_t v52 = v13;
          uint64_t v22 = v13;
          uint64_t v11 = v49;
          sub_1B2A53774(v14, v22, v15, v16, v18, v17, v19, v20, v21);
          uint64_t v56 = v49;
          unint64_t v24 = *(void *)(v49 + 16);
          unint64_t v23 = *(void *)(v49 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_1B299B984(v23);
            sub_1B29BFE34();
            uint64_t v11 = v56;
          }
          *(void *)&__dst[24] = sub_1B29A3EB4(&qword_1E9C38920);
          *(void *)&__dst[32] = sub_1B29D22C4(&qword_1E9C3C0B8, &qword_1E9C38920);
          uint64_t v25 = sub_1B2C8402C();
          *(void *)__dst = v25;
          *(void *)(v25 + 16) = v48;
          *(void *)(v25 + 24) = v54;
          *(void *)(v25 + 32) = v47;
          *(void *)(v25 + 40) = v53;
          *(_WORD *)(v25 + 48) = v46;
          *(void *)(v25 + 56) = v14;
          *(void *)(v25 + 64) = v52;
          *(void *)(v25 + 72) = v15;
          *(void *)(v25 + 80) = v16;
          *(void *)(v25 + 88) = v18;
          *(void *)(v25 + 96) = v17;
          *(void *)(v25 + 104) = v19;
          *(unsigned char *)(v25 + 112) = v20;
          *(unsigned char *)(v25 + 113) = v21;
          *(void *)(v11 + 16) = v24 + 1;
          sub_1B29D1D20((long long *)__dst, v11 + 40 * v24 + 32);
          uint64_t v10 = v50 + 104;
          uint64_t v9 = v51 - 1;
        }
        while (v51 != 1);
        swift_bridgeObjectRelease();
        uint64_t v1 = v39;
        unint64_t v6 = v41;
        uint64_t v3 = v42;
        uint64_t v5 = v38;
        uint64_t v7 = v40;
      }
      else
      {
        sub_1B2C339E4((uint64_t)v57);
        sub_1B2C339E4((uint64_t)v57);
        uint64_t v11 = MEMORY[0x1E4FBC860];
      }
      char v26 = sub_1B2C8B02C((uint64_t)v57, v11);
      swift_bridgeObjectRelease();
      sub_1B2C33A88((uint64_t)v57);
      if (v26)
      {
        sub_1B2C33A88((uint64_t)v57);
        goto LABEL_33;
      }
    }
    memcpy(__dst, v57, sizeof(__dst));
    sub_1B2C7BFF8();
    uint64_t v28 = v27;
    sub_1B2C33A88((uint64_t)v57);
    *(void *)__dst = v7;
    uint64_t v56 = v28;
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B29D22C4(&qword_1E9C41C88, &qword_1EB7E3B30);
    if (sub_1B2E82BE8())
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = *(void *)(v28 + 16);
      uint64_t v30 = *(void *)(v7 + 16);
      if (__OFADD__(v30, v29)) {
        goto LABEL_38;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v30 + v29 > *(void *)(v7 + 24) >> 1)
      {
        sub_1B29B7048();
        uint64_t v7 = v31;
      }
      if (*(void *)(v28 + 16))
      {
        uint64_t v32 = *(void *)(v7 + 16);
        if ((*(void *)(v7 + 24) >> 1) - v32 < v29) {
          goto LABEL_40;
        }
        unint64_t v33 = v7 + 16 * v32 + 32;
        if (v28 + 32 < v33 + 16 * v29 && v33 < v28 + 32 + 16 * v29) {
          goto LABEL_42;
        }
        swift_arrayInitWithCopy();
        if (v29)
        {
          uint64_t v35 = *(void *)(v7 + 16);
          BOOL v36 = __OFADD__(v35, v29);
          uint64_t v37 = v35 + v29;
          if (v36) {
            goto LABEL_41;
          }
          *(void *)(v7 + 16) = v37;
        }
      }
      else if (v29)
      {
        goto LABEL_39;
      }
      swift_bridgeObjectRelease();
      uint64_t v3 = v42;
    }
LABEL_33:
    if (++v6 == v44)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  sub_1B2E834A8();
  __break(1u);
}

uint64_t sub_1B2C7CC0C()
{
  sub_1B299F5F0();
  (*(void (**)(void))(v0 + 272))();
  sub_1B299F5F0();
  (*(void (**)(void))(v1 + 312))();

  return swift_bridgeObjectRelease();
}

void sub_1B2C7CCBC()
{
  sub_1B299B720();
  uint64_t v124 = v1;
  uint64_t v125 = v2;
  uint64_t v4 = v3;
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C41C78);
  uint64_t v6 = sub_1B299B0F0(v5);
  MEMORY[0x1F4188790](v6);
  sub_1B299B860();
  uint64_t v9 = (uint64_t *)(v7 - v8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v118 - v11;
  uint64_t v126 = type metadata accessor for K2TTextualization();
  sub_1B299D278();
  uint64_t v123 = v13;
  MEMORY[0x1F4188790](v14);
  sub_1B2999940();
  uint64_t v133 = (uint64_t *)v15;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v16);
  sub_1B29A43C0();
  uint64_t v118 = v17;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v18);
  sub_1B29A43C0();
  uint64_t v121 = v19;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v20);
  sub_1B29A43C0();
  uint64_t v120 = v21;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v22);
  sub_1B2AD0E78();
  uint64_t v127 = v23;
  char v132 = v0;
  v163[0] = v0[15];
  swift_bridgeObjectRetain_n();
  sub_1B2C7B504(v163);
  swift_bridgeObjectRelease();
  uint64_t v24 = v163[0];
  uint64_t v25 = *(void *)(v163[0] + 16);
  uint64_t v26 = MEMORY[0x1E4FBC860];
  uint64_t v128 = v4;
  uint64_t v131 = v25;
  if (v25)
  {
    uint64_t v122 = v12;
    id v119 = v9;
    unint64_t v27 = 0;
    uint64_t v129 = v163[0] + 32;
    uint64_t v130 = v163[0];
    uint64_t v28 = v132;
    while (1)
    {
      if (v27 >= *(void *)(v24 + 16))
      {
        __break(1u);
        swift_release();
        __break(1u);
        return;
      }
      uint64_t v134 = v27;
      uint64_t v135 = v26;
      uint64_t v29 = (long long *)(v129 + 104 * v27);
      memcpy(v163, v29, 0x62uLL);
      uint64_t v30 = v163[5];
      uint64_t v31 = v163[8];
      uint64_t v32 = v163[9];
      uint64_t v33 = v163[10];
      uint64_t v34 = LOBYTE(v163[12]);
      __int16 v35 = *((_WORD *)v29 + 16);
      long long v36 = v29[1];
      long long v164 = *v29;
      long long v165 = v36;
      __int16 v166 = v35;
      if (BYTE1(v163[12]) == 1) {
        break;
      }
      long long v58 = (void *)v28[15];
      uint64_t v59 = (char *)v58[2];
      if (v59)
      {
        sub_1B2C339E4((uint64_t)v163);
        sub_1B2C339E4((uint64_t)v163);
        v160[0] = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1B29BFE34();
        long long v60 = 0;
        uint64_t v61 = v160[0];
        uint64_t v136 = v58;
        do
        {
          uint64_t v142 = v61;
          uint64_t v143 = v60;
          uint64_t v144 = v59;
          uint64_t v62 = &v60[(void)v58];
          uint64_t v64 = *((void *)v62 + 4);
          uint64_t v63 = *((void *)v62 + 5);
          uint64_t v65 = *((void *)v62 + 7);
          uint64_t v139 = *((void *)v62 + 6);
          uint64_t v140 = v64;
          int v138 = *((unsigned __int16 *)v62 + 32);
          uint64_t v66 = (void *)*((void *)v62 + 9);
          uint64_t v137 = *((void *)v62 + 10);
          uint64_t v68 = *((void *)v62 + 11);
          uint64_t v67 = *((void *)v62 + 12);
          uint64_t v69 = *((void *)v62 + 13);
          uint64_t v70 = *((void *)v62 + 14);
          uint64_t v71 = *((void *)v62 + 15);
          uint64_t v72 = v62[128];
          int v73 = v62[129];
          uint64_t v149 = v63;
          swift_bridgeObjectRetain();
          uint64_t v148 = v65;
          swift_bridgeObjectRetain();
          int v141 = v73;
          char v117 = v73;
          char v145 = v66;
          uint64_t v146 = v70;
          uint64_t v74 = (uint64_t)v66;
          uint64_t v75 = v67;
          uint64_t v76 = v137;
          uint64_t v61 = v142;
          uint64_t v147 = v69;
          sub_1B2A53774(v74, v137, v68, v75, v69, v70, v71, v72, v117);
          v160[0] = v61;
          unint64_t v78 = *(void *)(v61 + 16);
          unint64_t v77 = *(void *)(v61 + 24);
          if (v78 >= v77 >> 1)
          {
            sub_1B299B984(v77);
            sub_1B29BFE34();
            uint64_t v61 = v160[0];
          }
          uint64_t v155 = sub_1B29A3EB4(&qword_1E9C38920);
          uint64_t v156 = sub_1B29D22C4(&qword_1E9C3C0B8, &qword_1E9C38920);
          uint64_t v79 = sub_1B2C8402C();
          *(void *)&long long v153 = v79;
          uint64_t v80 = v149;
          *(void *)(v79 + 16) = v140;
          *(void *)(v79 + 24) = v80;
          uint64_t v81 = v148;
          *(void *)(v79 + 32) = v139;
          *(void *)(v79 + 40) = v81;
          *(_WORD *)(v79 + 48) = v138;
          *(void *)(v79 + 56) = v145;
          *(void *)(v79 + 64) = v76;
          *(void *)(v79 + 72) = v68;
          *(void *)(v79 + 80) = v75;
          uint64_t v82 = v146;
          *(void *)(v79 + 88) = v147;
          *(void *)(v79 + 96) = v82;
          *(void *)(v79 + 104) = v71;
          *(unsigned char *)(v79 + 112) = v72;
          *(unsigned char *)(v79 + 113) = v141;
          *(void *)(v61 + 16) = v78 + 1;
          sub_1B29D1D20(&v153, v61 + 40 * v78 + 32);
          long long v60 = v143 + 104;
          uint64_t v59 = v144 - 1;
          long long v58 = v136;
        }
        while (v144 != (char *)1);
        swift_bridgeObjectRelease();
        uint64_t v4 = v128;
        uint64_t v28 = v132;
      }
      else
      {
        sub_1B2C339E4((uint64_t)v163);
        sub_1B2C339E4((uint64_t)v163);
        uint64_t v61 = MEMORY[0x1E4FBC860];
      }
      uint64_t v89 = v28;
      char v90 = sub_1B2C8B02C((uint64_t)v163, v61);
      swift_bridgeObjectRelease();
      sub_1B2C33A88((uint64_t)v163);
      uint64_t v26 = v135;
      if (v90)
      {
        sub_1B2C33A88((uint64_t)v163);
        uint64_t v28 = v89;
      }
      else
      {
        uint64_t v155 = sub_1B29A3EB4(&qword_1E9C38920);
        uint64_t v156 = sub_1B29D22C4(&qword_1E9C3C0B8, &qword_1E9C38920);
        *(void *)&long long v153 = sub_1B2C8402C();
        memcpy((void *)(v153 + 16), v163, 0x62uLL);
        sub_1B2C339E4((uint64_t)v163);
        uint64_t v91 = v119;
        sub_1B2C79178(&v153, 1, v119);
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v153);
        sub_1B2C36828((uint64_t)v91, 1, v126);
        if (!v85)
        {
          uint64_t v92 = (uint64_t)v91;
          uint64_t v57 = v121;
          sub_1B2C79920(v92, v121);
          *(void *)&long long v153 = 40;
          *((void *)&v153 + 1) = 0xE100000000000000;
          sub_1B2C5D1A8();
          sub_1B2E823F8();
          sub_1B2C33A88((uint64_t)v163);
          sub_1B2C83A58();
          swift_bridgeObjectRelease();
          sub_1B2E82518();
          swift_bridgeObjectRetain();
          sub_1B2C83A58();
          swift_bridgeObjectRelease();
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          long long v93 = v153;
          *(_OWORD *)uint64_t v57 = v153;
          uint64_t v4 = *(void *)(v26 + 16);
          if (v4)
          {
            sub_1B2C8398C();
            sub_1B2C83F18();
            while (1)
            {
              BOOL v94 = *(v58 - 1) == (void)v93 && *v58 == *((void *)&v93 + 1);
              if (v94 || (sub_1B2E837A8() & 1) != 0) {
                break;
              }
              long long v58 = (void *)((char *)v58 + v57);
              if (!--v59) {
                goto LABEL_42;
              }
            }
            uint64_t v4 = v128;
            uint64_t v57 = v134;
          }
          else
          {
LABEL_42:
            sub_1B2C79984(v121, v118);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v26 = sub_1B2C84094();
            }
            sub_1B2C83C74();
            if (v87) {
              uint64_t v26 = sub_1B2C83C8C(v95);
            }
            sub_1B2999BA8();
            sub_1B2C79920(v118, v96);
          }
          sub_1B2C799E8(v121);
          goto LABEL_49;
        }
        uint64_t v28 = v89;
        sub_1B2C33A88((uint64_t)v163);
        sub_1B2A0EA40((uint64_t)v91, &qword_1E9C41C78);
      }
      uint64_t v24 = v130;
      uint64_t v57 = v134;
LABEL_50:
      unint64_t v27 = v57 + 1;
      if (v27 == v131) {
        goto LABEL_54;
      }
    }
    long long v153 = *(_OWORD *)&v163[5];
    uint64_t v154 = v163[7];
    uint64_t v155 = v163[8];
    uint64_t v156 = v163[9];
    uint64_t v157 = v163[10];
    uint64_t v158 = v163[11];
    char v159 = v163[12];
    v151[0] = v164;
    v151[1] = v165;
    __int16 v152 = v166;
    uint64_t v37 = v28[3];
    uint64_t v39 = (void *)v28[5];
    uint64_t v38 = (char *)v28[6];
    uint64_t v142 = v28[4];
    uint64_t v143 = v38;
    uint64_t v144 = (char *)v28[7];
    v150[0] = v142;
    v150[1] = (uint64_t)v39;
    v150[2] = (uint64_t)v38;
    v150[3] = (uint64_t)v144;
    char v145 = (void *)v28[13];
    uint64_t v146 = v37;
    uint64_t v147 = v163[6];
    uint64_t v40 = v163[6];
    uint64_t v148 = v163[5];
    uint64_t v149 = v163[8];
    uint64_t v41 = v163[7];
    uint64_t v42 = v163[11];
    sub_1B2C339E4((uint64_t)v163);
    uint64_t v43 = v30;
    uint64_t v44 = v31;
    uint64_t v45 = v32;
    uint64_t v46 = v32;
    uint64_t v47 = v33;
    uint64_t v48 = v33;
    uint64_t v49 = v42;
    uint64_t v50 = (void *)v34;
    sub_1B2A53774(v43, v40, v41, v44, v45, v47, v42, v34, 1);
    sub_1B29E52BC((uint64_t)&v164);
    uint64_t v51 = v142;
    swift_retain();
    id v52 = v39;
    uint64_t v53 = v143;
    uint64_t v54 = v144;
    sub_1B2C8CFF0((uint64_t)&v153, v124, v125, (uint64_t)v151, v146, v150, v145, v160);
    sub_1B2C33A88((uint64_t)v163);

    swift_release();
    sub_1B29C5E2C((uint64_t)&v164);
    sub_1B2A5347C(v148, v147, v41, v149, v46, v48, v49, (uint64_t)v50, 1);
    uint64_t v55 = v161;
    uint64_t v56 = v162;
    sub_1B29AEC7C(v160, v161);
    uint64_t v57 = (uint64_t)v122;
    (*(void (**)(uint64_t, uint64_t))(v56 + 40))(v55, v56);
    sub_1B2C36828(v57, 1, v126);
    if (v85)
    {
      sub_1B2A0EA40(v57, &qword_1E9C41C78);
      uint64_t v4 = v128;
      uint64_t v57 = v134;
      uint64_t v26 = v135;
    }
    else
    {
      sub_1B2C79920(v57, (uint64_t)v127);
      uint64_t v26 = v135;
      uint64_t v4 = *(void *)(v135 + 16);
      if (v4)
      {
        sub_1B2C8398C();
        uint64_t v83 = *v127;
        uint64_t v84 = v127[1];
        sub_1B2C83F18();
        while (1)
        {
          BOOL v85 = *(v50 - 1) == v83 && *v50 == v84;
          if (v85 || (sub_1B2E837A8() & 1) != 0) {
            break;
          }
          uint64_t v50 = (void *)((char *)v50 + v57);
          if (!--v51) {
            goto LABEL_22;
          }
        }
        sub_1B2C799E8((uint64_t)v127);
        uint64_t v4 = v128;
        uint64_t v57 = v134;
      }
      else
      {
LABEL_22:
        sub_1B2C79984((uint64_t)v127, v120);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = sub_1B2C84094();
        }
        sub_1B2C83C74();
        if (v87) {
          uint64_t v26 = sub_1B2C83C8C(v86);
        }
        sub_1B2999BA8();
        sub_1B2C79920(v120, v88);
        sub_1B2C799E8((uint64_t)v127);
      }
    }
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v160);
LABEL_49:
    uint64_t v28 = v132;
    uint64_t v24 = v130;
    goto LABEL_50;
  }
LABEL_54:
  swift_release();
  uint64_t v97 = *(void *)(v26 + 16);
  if (v97)
  {
    *(void *)&long long v153 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B29BFD80();
    sub_1B2C8398C();
    uint64_t v135 = v26;
    uint64_t v99 = v26 + v98;
    uint64_t v101 = *(void *)(v100 + 72);
    do
    {
      uint64_t v102 = v133;
      sub_1B2C79984(v99, (uint64_t)v133);
      uint64_t v104 = *v102;
      uint64_t v103 = v102[1];
      swift_bridgeObjectRetain();
      sub_1B2C799E8((uint64_t)v102);
      uint64_t v105 = v153;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B2C83B00();
        sub_1B29BFD80();
        uint64_t v105 = v153;
      }
      unint64_t v107 = *(void *)(v105 + 16);
      unint64_t v106 = *(void *)(v105 + 24);
      if (v107 >= v106 >> 1)
      {
        sub_1B299B984(v106);
        sub_1B29BFD80();
        uint64_t v105 = v153;
      }
      *(void *)(v105 + 16) = v107 + 1;
      uint64_t v108 = v105 + 16 * v107;
      *(void *)(v108 + 32) = v104;
      *(void *)(v108 + 40) = v103;
      v99 += v101;
      --v97;
    }
    while (v97);
    uint64_t v109 = v135;
    swift_bridgeObjectRelease();
    *(void *)&long long v153 = v105;
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B29D22C4((unint64_t *)&qword_1EB7E2800, &qword_1EB7E3B30);
    sub_1B2E822D8();
    swift_release();
    *(void *)&long long v153 = 0;
    *((void *)&v153 + 1) = 0xE000000000000000;
    sub_1B2E831F8();
    uint64_t v110 = v125;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v153 = v124;
    *((void *)&v153 + 1) = v110;
    sub_1B2E82518();
    sub_1B2C83A58();
    swift_bridgeObjectRelease();
    sub_1B29A3EB4(&qword_1EB7D98E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
    *(void *)(inited + 32) = v132[14];
    uint64_t v4 = v128;
    uint64_t v112 = sub_1B2C5D1A8();
    sub_1B2C8E4D0(v112, v113, v109, v114, v115);
    uint64_t v116 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v116 = 1;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v4, v116, 1, v126);
  sub_1B299B738();
}

uint64_t sub_1B2C7D7C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for K2TEntityTextualizer()
{
  return self;
}

uint64_t sub_1B2C7D840()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 272))();
}

uint64_t sub_1B2C7D88C()
{
  return sub_1B2C7C644();
}

uint64_t sub_1B2C7D8B0()
{
  return sub_1B2C7CC0C();
}

__n128 *sub_1B2C7D8D4()
{
  return sub_1B2C7E414((uint64_t (*)(__n128 *))static EntityPredicate.firstName.getter, (void (*)(uint64_t))static EntityPredicate.familyName.getter);
}

uint64_t sub_1B2C7D900(uint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  long long v6 = *(_OWORD *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  char v9 = *(unsigned char *)(a1 + 48);
  v15[0] = *(_OWORD *)a1;
  v15[1] = v6;
  uint64_t v16 = v7;
  uint64_t v17 = v8;
  char v18 = v9;
  long long v10 = a3[1];
  v14[0] = *a3;
  v14[1] = v10;
  id v11 = a4;
  uint64_t v12 = sub_1B2C7B834((uint64_t)v15, a2, v14, a4);
  sub_1B29A3EB4(&qword_1EB7E34A8);
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_1B2EBFA40;
  swift_retain();
  static EntityPredicate.firstName.getter();
  static EntityPredicate.familyName.getter();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1B2AD2FD0();
  swift_endAccess();
  swift_release();

  swift_setDeallocating();
  sub_1B2D98ED0();
  return v12;
}

void sub_1B2C7DA0C()
{
  sub_1B299B720();
  unint64_t v3 = v0;
  uint64_t v4 = sub_1B2E800E8();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B2C83D88();
  if (v8)
  {
LABEL_2:
    sub_1B299B738();
    return;
  }
  uint64_t v100 = v1;
  uint64_t v101 = v6;
  uint64_t v108 = v4;
  uint64_t v9 = *(void *)(*(void *)(v0 + 120) + 16);
  if (!v9)
  {
    uint64_t v109 = (void *)MEMORY[0x1E4FBC860];
LABEL_30:
    if (v109[2])
    {
      uint64_t v33 = swift_retain() + 72;
      uint64_t v34 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        if (!*(unsigned char *)(v33 + 57))
        {
          uint64_t v36 = *(void *)v33;
          uint64_t v35 = *(void *)(v33 + 8);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B299AF84();
            uint64_t v34 = v39;
          }
          sub_1B2C839B8();
          if (v37)
          {
            sub_1B2C83CD4();
            uint64_t v34 = v40;
          }
          v34[2] = v0;
          uint64_t v38 = &v34[2 * v2];
          v38[4] = v36;
          v38[5] = v35;
        }
        sub_1B2C83F4C();
      }
      while (!v28);
      swift_release();
    }
    else
    {
      uint64_t v34 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_release();
    if (v34[2])
    {
      uint64_t v42 = v34[4];
      uint64_t v41 = v34[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v123 = v42;
      uint64_t v124 = v41;
      sub_1B2E800B8();
      sub_1B29C3640();
      uint64_t v98 = sub_1B2E83008();
      uint64_t v99 = v43;
      uint64_t v44 = v108;
      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v100, v108);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v98 = 0;
      uint64_t v99 = 0;
      uint64_t v44 = v108;
    }
    uint64_t v45 = *(void *)(*(void *)(v3 + 120) + 16);
    if (!v45)
    {
      uint64_t v46 = MEMORY[0x1E4FBC860];
LABEL_73:
      if (*(void *)(v46 + 16))
      {
        swift_retain();
        char v87 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if (!*(unsigned char *)(v46 + 129))
          {
            uint64_t v89 = *(void *)(v46 + 72);
            uint64_t v88 = *(void *)(v46 + 80);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B299AF84();
              char v87 = v91;
            }
            sub_1B2C839B8();
            if (v37)
            {
              sub_1B2C83CD4();
              char v87 = v92;
            }
            v87[2] = v44;
            char v90 = &v87[2 * v2];
            v90[4] = v89;
            v90[5] = v88;
            uint64_t v44 = v108;
          }
          sub_1B2C83F4C();
        }
        while (!v28);
        swift_release();
      }
      else
      {
        char v87 = (void *)MEMORY[0x1E4FBC860];
      }
      swift_release();
      if (v87[2])
      {
        uint64_t v94 = v87[4];
        uint64_t v93 = v87[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v123 = v94;
        uint64_t v124 = v93;
        sub_1B2E800B8();
        sub_1B29C3640();
        sub_1B2E83008();
        uint64_t v96 = v95;
        sub_1B299B798();
        v97();
        swift_bridgeObjectRelease();
        if (v99)
        {
          if (v96)
          {
            uint64_t v123 = v98;
            uint64_t v124 = v99;
            sub_1B2E82518();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      goto LABEL_2;
    }
    sub_1B2C83908(&_Records_GDEntityPredicate_records_count);
    uint64_t v46 = MEMORY[0x1E4FBC860];
    while (1)
    {
      if (v103 < 64) {
        goto LABEL_95;
      }
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_101;
      }
      sub_1B299E8C4();
      if (v10 == v11) {
        goto LABEL_96;
      }
      sub_1B2C83954();
      if (v10 == v11) {
        goto LABEL_97;
      }
      uint64_t v122 = v45;
      uint64_t v118 = v46;
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_102;
      }
      uint64_t v48 = sub_1B2C83B0C(v47);
      uint64_t v116 = v49;
      uint64_t v51 = *(void *)(v50 + 56);
      uint64_t v107 = *(void *)(v50 + 48);
      __int16 v105 = *(_WORD *)(v50 + 64);
      uint64_t v52 = *(void *)(v50 + 72);
      uint64_t v53 = *(void *)(v50 + 80);
      uint64_t v2 = *(void *)(v50 + 88);
      uint64_t v54 = *(void *)(v50 + 96);
      uint64_t v55 = *(void *)(v50 + 104);
      uint64_t v56 = *(void *)(v50 + 112);
      uint64_t v57 = *(void *)(v50 + 120);
      uint64_t v58 = *(unsigned __int8 *)(v50 + 128);
      uint64_t v120 = v48;
      int v59 = *(unsigned __int8 *)(v50 + 129);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v110 = v52;
      uint64_t v112 = v53;
      uint64_t v60 = sub_1B2999874();
      unsigned __int8 v114 = v58;
      sub_1B2A53774(v60, v61, v2, v54, v55, v56, v57, v58, v59);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_103;
      }
      uint64_t v64 = v62;
      uint64_t v65 = v63;
      sub_1B2E82538();
      if (v116 == v64 && v120 == v65)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2C84064();
      }
      else
      {
        char v67 = sub_1B299BBC4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v67 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v68 = swift_bridgeObjectRelease();
          sub_1B299B258(v68, v69, v70, v71, v72, v73, v74, v75, v59);
          uint64_t v44 = v108;
          goto LABEL_64;
        }
      }
      uint64_t v44 = v108;
      if (!v59)
      {
        uint64_t v46 = v118;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v123 = v118;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1B2C8393C();
          uint64_t v44 = v108;
          uint64_t v46 = v123;
        }
        unint64_t v85 = *(void *)(v46 + 16);
        if (v85 >= *(void *)(v46 + 24) >> 1)
        {
          sub_1B29BFED4();
          uint64_t v44 = v108;
          uint64_t v46 = v123;
        }
        *(void *)(v46 + 16) = v85 + 1;
        uint64_t v86 = v46 + 104 * v85;
        *(void *)(v86 + 32) = v116;
        *(void *)(v86 + 40) = v120;
        *(void *)(v86 + 48) = v107;
        *(void *)(v86 + 56) = v51;
        *(_WORD *)(v86 + 64) = v105;
        *(void *)(v86 + 72) = v110;
        *(void *)(v86 + 80) = v112;
        *(void *)(v86 + 88) = v2;
        *(void *)(v86 + 96) = v54;
        *(void *)(v86 + 104) = v55;
        *(void *)(v86 + 112) = v56;
        *(void *)(v86 + 120) = v57;
        *(_WORD *)(v86 + 128) = v114;
        goto LABEL_70;
      }
      swift_bridgeObjectRelease();
      uint64_t v76 = swift_bridgeObjectRelease();
      sub_1B299B258(v76, v77, v78, v79, v80, v81, v82, v83, v59);
LABEL_64:
      uint64_t v46 = v118;
LABEL_70:
      uint64_t v45 = v122 - 1;
      if (v122 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
    }
  }
  sub_1B2C83908(&_Records_GDEntityPredicate_records_count);
  uint64_t v109 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v102 = v0;
  while (v103 >= 62)
  {
    if (!_Records_GDEntityPredicate_records) {
      goto LABEL_98;
    }
    sub_1B299E8C4();
    if (v10 == v11) {
      goto LABEL_93;
    }
    sub_1B2C83954();
    if (v10 == v11) {
      goto LABEL_94;
    }
    uint64_t v121 = v9;
    if (!_Records_GDEntityPredicate_predicateIds) {
      goto LABEL_99;
    }
    uint64_t v13 = sub_1B2C83B0C(v12);
    uint64_t v117 = v14;
    uint64_t v119 = v13;
    uint64_t v16 = *(void *)(v15 + 56);
    uint64_t v106 = *(void *)(v15 + 48);
    __int16 v104 = *(_WORD *)(v15 + 64);
    uint64_t v18 = *(void *)(v15 + 72);
    uint64_t v17 = *(void *)(v15 + 80);
    uint64_t v19 = *(void *)(v15 + 88);
    uint64_t v2 = *(void *)(v15 + 96);
    uint64_t v21 = *(void *)(v15 + 104);
    uint64_t v20 = *(void *)(v15 + 112);
    uint64_t v22 = *(void *)(v15 + 120);
    uint64_t v23 = *(unsigned __int8 *)(v15 + 128);
    unsigned int v24 = *(unsigned __int8 *)(v15 + 129);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v111 = v18;
    uint64_t v113 = v17;
    unsigned int v115 = v23;
    sub_1B2A53774(v18, v17, v19, v2, v21, v20, v22, v23, v24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels) {
      goto LABEL_100;
    }
    uint64_t v27 = v25;
    unint64_t v0 = (unint64_t)v26;
    sub_1B2E82538();
    BOOL v28 = v117 == v27 && v119 == v0;
    if (v28)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v29 = sub_1B299BBC4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0) {
        goto LABEL_21;
      }
    }
    unint64_t v0 = v24;
    if (!v24)
    {
      unint64_t v0 = (unint64_t)v109;
      char v30 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v123 = (uint64_t)v109;
      if ((v30 & 1) == 0)
      {
        unint64_t v0 = (unint64_t)&v123;
        sub_1B2C8393C();
        uint64_t v109 = (void *)v123;
      }
      unint64_t v3 = v102;
      unint64_t v31 = v109[2];
      if (v31 >= v109[3] >> 1)
      {
        unint64_t v0 = (unint64_t)&v123;
        sub_1B29BFED4();
        uint64_t v109 = (void *)v123;
      }
      v109[2] = v31 + 1;
      uint64_t v32 = &v109[13 * v31];
      v32[4] = v117;
      v32[5] = v119;
      v32[6] = v106;
      void v32[7] = v16;
      *((_WORD *)v32 + 32) = v104;
      v32[9] = v111;
      v32[10] = v113;
      v32[11] = v19;
      v32[12] = v2;
      v32[13] = v21;
      v32[14] = v20;
      v32[15] = v22;
      *((_WORD *)v32 + 64) = v115;
      goto LABEL_27;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A5347C(v18, v113, v19, v2, v21, v20, v22, v115, v24);
    unint64_t v3 = v102;
LABEL_27:
    uint64_t v9 = v121 - 1;
    if (v121 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
}

uint64_t type metadata accessor for K2TPersonTextualizer()
{
  return self;
}

__n128 *sub_1B2C7E3E8()
{
  return sub_1B2C7E414((uint64_t (*)(__n128 *))static EntityPredicate.hasAddress.getter, (void (*)(uint64_t))static EntityPredicate.thoroughfare.getter);
}

__n128 *sub_1B2C7E414(uint64_t (*a1)(__n128 *), void (*a2)(uint64_t))
{
  uint64_t v4 = sub_1B2C7B8C0();
  sub_1B29A3EB4(&qword_1EB7E34A8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  uint64_t v6 = sub_1B2A6BC14(inited, (__n128)xmmword_1B2EBFA40);
  uint64_t v7 = a1(v6);
  a2(v7);
  sub_1B2AD2FD0();
  return v4;
}

void sub_1B2C7E49C()
{
  sub_1B299B720();
  uint64_t v5 = sub_1B2E800E8();
  sub_1B299D278();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1B2C83D88();
  if (v9) {
    goto LABEL_2;
  }
  uint64_t v191 = v1;
  uint64_t v10 = *(void *)(*(void *)(v0 + 120) + 16);
  uint64_t v210 = v5;
  uint64_t v189 = v7;
  unint64_t v188 = v0;
  if (v10)
  {
    uint64_t v195 = 233;
    sub_1B2C389D4(2674);
    sub_1B2C392B4(*v11);
    swift_bridgeObjectRetain();
    sub_1B2B70AE8(MEMORY[0x1E4FBC860]);
    uint64_t v192 = v12;
    while (1)
    {
      if (!_Records_GDEntityPredicate_records)
      {
        __break(1u);
LABEL_203:
        __break(1u);
LABEL_204:
        __break(1u);
LABEL_205:
        __break(1u);
LABEL_206:
        __break(1u);
LABEL_207:
        __break(1u);
LABEL_208:
        __break(1u);
LABEL_209:
        __break(1u);
LABEL_210:
        __break(1u);
        return;
      }
      sub_1B299E8C4();
      if (v13 == v14)
      {
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        swift_once();
LABEL_82:
        uint64_t v85 = sub_1B2E81FB8();
        sub_1B29A4B98(v85, (uint64_t)qword_1E9C3EBA8);
        sub_1B2C83C08();
        uint64_t v86 = (void *)sub_1B2E81F98();
        os_log_type_t v87 = sub_1B2E82DB8();
        if (sub_1B2C839C8(v87))
        {
          sub_1B2C83BB0();
          uint64_t v1 = sub_1B2C839E4();
          v226[0] = v1;
          sub_1B2C83784(4.9654e-34);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v4 = &v219;
          uint64_t v88 = sub_1B2E82408();
          sub_1B29BF6BC(v88, v89, (uint64_t)v226, v90, v91, v92, v93, v94, v187, v188, v189, v191, v192, v193, v194, v195, v196, v197, v198,
            v199);
          sub_1B2C83960(v95);
          sub_1B2C8407C();
          swift_bridgeObjectRelease();
          sub_1B2C83868(&dword_1B2996000, v96, v97, "Multiple names found in address for entity %{sensitive}s.");
          sub_1B2C8399C();
          sub_1B299B750();
          sub_1B299B750();
        }
        else
        {

          sub_1B2C8407C();
        }
        unint64_t v84 = *(void *)(v3 + 16);
        goto LABEL_86;
      }
      sub_1B2C83954();
      if (v13 == v14) {
        goto LABEL_188;
      }
      uint64_t v215 = v10;
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_203;
      }
      uint64_t v16 = sub_1B2C83B0C(v15);
      uint64_t v198 = v17;
      uint64_t v213 = v16;
      uint64_t v19 = *(void *)(v18 + 56);
      sub_1B2C83E04();
      uint64_t v21 = *(void *)(v20 + 72);
      uint64_t v22 = *(void *)(v20 + 80);
      uint64_t v23 = *(void *)(v20 + 88);
      uint64_t v3 = *(void *)(v20 + 96);
      uint64_t v25 = *(void *)(v20 + 104);
      uint64_t v24 = *(void *)(v20 + 112);
      uint64_t v4 = *(uint64_t **)(v20 + 120);
      uint64_t v26 = *(unsigned __int8 *)(v20 + 128);
      int v27 = *(unsigned __int8 *)(v20 + 129);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LODWORD(v199) = v27;
      uint64_t v201 = v22;
      uint64_t v203 = v23;
      uint64_t v28 = v23;
      uint64_t v29 = v19;
      unsigned int v211 = v26;
      sub_1B2A53774(v21, v22, v28, v3, v25, v24, (uint64_t)v4, v26, v27);
      sub_1B2C83DC8();
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_204;
      }
      uint64_t v32 = v30;
      uint64_t v33 = v31;
      sub_1B2C83E1C();
      uint64_t v1 = v34;
      BOOL v35 = v198 == v32 && v213 == v33;
      if (v35) {
        break;
      }
      unint64_t v2 = sub_1B299BBC4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v2) {
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2A5347C(v21, v201, v203, v3, v25, v24, (uint64_t)v4, v211, v27);
LABEL_24:
      uint64_t v10 = v215 - 1;
      uint64_t v5 = v210;
      if (v215 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2C83A40();
LABEL_19:
    uint64_t v219 = v33;
    if ((sub_1B2C83B18() & 1) == 0)
    {
      sub_1B2C83B4C();
      sub_1B2C8393C();
      sub_1B2B70AE8(v219);
    }
    sub_1B2C83B4C();
    unint64_t v2 = *(void *)(v36 + 16);
    uint64_t v1 = v2 + 1;
    if (v2 >= *(void *)(v36 + 24) >> 1)
    {
      sub_1B29BFED4();
      sub_1B2B70AE8(v219);
    }
    sub_1B2C83B4C();
    *(void *)(v37 + 16) = v1;
    uint64_t v38 = (void *)(v37 + 104 * v2);
    v38[4] = v198;
    v38[5] = v213;
    v38[6] = v197;
    v38[7] = v29;
    sub_1B2C83A14((uint64_t)v38);
    *(void *)(v39 + 72) = v21;
    *(void *)(v39 + 80) = v201;
    *(void *)(v39 + 88) = v203;
    *(void *)(v39 + 96) = v3;
    *(void *)(v39 + 104) = v25;
    *(void *)(v39 + 112) = v24;
    *(void *)(v39 + 120) = v4;
    *(unsigned char *)(v39 + 128) = v211;
    *(unsigned char *)(v39 + 129) = v27;
    goto LABEL_24;
  }
  sub_1B2B70AE8(MEMORY[0x1E4FBC860]);
LABEL_27:
  sub_1B2C83B4C();
  unint64_t v2 = *(void *)(v40 + 16);
  uint64_t v41 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    swift_retain();
    uint64_t v42 = 0;
    uint64_t v43 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1B2C83B4C();
      uint64_t v45 = v44 + v42;
      if (*(unsigned char *)(v45 + 129) == 1)
      {
        long long v216 = *(_OWORD *)(v45 + 72);
        uint64_t v3 = *(unsigned __int8 *)(v45 + 128);
        uint64_t v4 = *(uint64_t **)(v45 + 112);
        uint64_t v46 = *(void *)(v45 + 120);
        uint64_t v5 = *(void *)(v45 + 96);
        uint64_t v47 = *(void *)(v45 + 104);
        uint64_t v1 = *(void *)(v45 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2C83E7C();
          sub_1B29B7288();
          uint64_t v43 = v52;
        }
        unint64_t v49 = *(void *)(v43 + 16);
        unint64_t v48 = *(void *)(v43 + 24);
        uint64_t v50 = v43;
        if (v49 >= v48 >> 1)
        {
          sub_1B29999F8(v48);
          sub_1B29B7288();
          uint64_t v50 = v53;
        }
        *(void *)(v50 + 16) = v49 + 1;
        uint64_t v43 = v50;
        unint64_t v51 = v50 + (v49 << 6);
        *(_OWORD *)(v51 + 32) = v216;
        *(void *)(v51 + 48) = v1;
        *(void *)(v51 + 56) = v5;
        *(void *)(v51 + 64) = v47;
        *(void *)(v51 + 72) = v4;
        *(void *)(v51 + 80) = v46;
        *(unsigned char *)(v51 + 88) = v3;
        sub_1B2C83F0C();
      }
      v42 += 104;
      --v2;
    }
    while (v2);
    swift_release();
    uint64_t v41 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v43 = MEMORY[0x1E4FBC860];
  }
  swift_release();
  uint64_t v219 = v41;
  uint64_t v204 = *(void *)(v43 + 16);
  if (!v204)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x1E4FBC860];
LABEL_80:
    unint64_t v84 = *(void *)(v3 + 16);
    if (v84 > 1)
    {
      if (qword_1E9C38C28 != -1) {
        goto LABEL_194;
      }
      goto LABEL_82;
    }
LABEL_86:
    if (!v84)
    {
      swift_release();
      goto LABEL_2;
    }
    uint64_t v98 = *(void *)(v3 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v99 = *(void *)(v98 + 16);
    uint64_t v208 = v98;
    uint64_t v214 = v99;
    if (v99)
    {
      swift_bridgeObjectRetain();
      uint64_t v100 = v98 + 48;
      uint64_t v101 = MEMORY[0x1E4FBC860];
      while (1)
      {
        if (!_Records_GDEntityPredicate_records) {
          goto LABEL_205;
        }
        sub_1B299E8C4();
        if (v13 == v14) {
          goto LABEL_190;
        }
        if (*(uint64_t *)(v102 + 40) >= 3558) {
          goto LABEL_191;
        }
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_206;
        }
        sub_1B2C83EDC();
        sub_1B2C83E94();
        swift_bridgeObjectRetain();
        unint64_t v217 = v2;
        sub_1B2A53708(v99, v2, v5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v103 = sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_207;
        }
        __int16 v105 = (uint64_t *)v103;
        unint64_t v2 = v104;
        sub_1B2E82538();
        if (v4 == v105 && v1 == v2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B2C84064();
        }
        else
        {
          char v107 = sub_1B2C83B7C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v107 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v108 = v99;
            uint64_t v109 = v217;
            char v110 = v5;
            goto LABEL_104;
          }
        }
        if ((v5 & 1) == 0)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v219 = v101;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1B2C83E58();
            sub_1B2C83EF4();
          }
          sub_1B2C83BCC();
          uint64_t v5 = v210;
          if (v112)
          {
            sub_1B2C83D64();
            sub_1B2C83EF4();
          }
          sub_1B2C840B4();
          sub_1B2C83A14(v113);
          *(void *)(v114 + 72) = v99;
          *(void *)(v114 + 80) = v217;
          *(unsigned char *)(v114 + 88) = 0;
          goto LABEL_110;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v108 = v99;
        uint64_t v109 = v217;
        char v110 = 1;
LABEL_104:
        sub_1B2A53718(v108, v109, v110);
        sub_1B2C83F0C();
LABEL_110:
        v100 += 64;
        sub_1B2C83F00();
        if (v35)
        {
          swift_bridgeObjectRelease();
          goto LABEL_115;
        }
      }
    }
    uint64_t v101 = MEMORY[0x1E4FBC860];
LABEL_115:
    uint64_t v1 = *(void *)(v101 + 16);
    if (v1)
    {
      swift_retain();
      unsigned int v115 = (unsigned char *)(v101 + 88);
      uint64_t v3 = MEMORY[0x1E4FBC860];
      do
      {
        if ((*v115 & 1) == 0)
        {
          unint64_t v2 = *((void *)v115 - 2);
          uint64_t v116 = *((void *)v115 - 1);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2C83C2C();
            sub_1B29B7048();
            uint64_t v3 = v120;
          }
          unint64_t v118 = *(void *)(v3 + 16);
          unint64_t v117 = *(void *)(v3 + 24);
          if (v118 >= v117 >> 1)
          {
            sub_1B2C83FCC(v117);
            sub_1B29B7048();
            uint64_t v3 = v121;
          }
          *(void *)(v3 + 16) = v118 + 1;
          uint64_t v119 = v3 + 16 * v118;
          *(void *)(v119 + 32) = v2;
          *(void *)(v119 + 40) = v116;
        }
        v115 += 64;
        --v1;
      }
      while (v1);
      swift_release();
    }
    else
    {
      uint64_t v3 = MEMORY[0x1E4FBC860];
    }
    swift_release();
    unint64_t v122 = *(void *)(v3 + 16);
    uint64_t v123 = v189;
    if (v122 <= 1)
    {
      uint64_t v137 = v208;
      uint64_t v138 = v214;
      if (v122 == 1)
      {
        sub_1B2C84014();
        sub_1B2C83AE8();
        swift_bridgeObjectRelease();
        if (*(void *)(v3 + 16))
        {
          uint64_t v140 = *(void *)(v3 + 32);
          uint64_t v139 = *(void *)(v3 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v219 = v140;
          uint64_t v220 = v139;
          sub_1B2E800B8();
          sub_1B29C3640();
          sub_1B2E83008();
          (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v191, v5);
        }
        goto LABEL_182;
      }
    }
    else
    {
      if (qword_1E9C38C28 != -1) {
        swift_once();
      }
      uint64_t v124 = sub_1B2E81FB8();
      sub_1B29A4B98(v124, (uint64_t)qword_1E9C3EBA8);
      sub_1B2C83C08();
      uint64_t v125 = (void *)sub_1B2E81F98();
      os_log_type_t v126 = sub_1B2E82DB8();
      if (sub_1B2C839C8(v126))
      {
        sub_1B2C83BB0();
        uint64_t v1 = sub_1B2C839E4();
        v226[0] = v1;
        sub_1B2C83784(4.9654e-34);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v4 = &v219;
        uint64_t v127 = sub_1B2E82408();
        sub_1B29BF6BC(v127, v128, (uint64_t)v226, v129, v130, v131, v132, v133, v187, v188, v189, v191, v192, v193, v194, v195, v196, v197, v198,
          v199);
        sub_1B2C83960(v134);
        sub_1B2C8407C();
        swift_bridgeObjectRelease();
        sub_1B2C83868(&dword_1B2996000, v135, v136, "Multiple names found in address for entity %{sensitive}s.");
        sub_1B2C8399C();
        sub_1B299B750();
        sub_1B299B750();
      }
      else
      {

        sub_1B2C8407C();
      }
      uint64_t v137 = v208;
      uint64_t v138 = v214;
    }
    swift_bridgeObjectRelease();
    if (!v138)
    {
      sub_1B2C84014();
      sub_1B2C83AE8();
      swift_bridgeObjectRelease();
      uint64_t v142 = MEMORY[0x1E4FBC860];
      uint64_t v123 = v191;
LABEL_163:
      uint64_t v155 = *(void *)(v142 + 16);
      if (v155)
      {
        swift_retain();
        uint64_t v156 = (unsigned char *)(v142 + 88);
        uint64_t v57 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if ((*v156 & 1) == 0)
          {
            uint64_t v158 = *((void *)v156 - 2);
            uint64_t v157 = *((void *)v156 - 1);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B2C83BE4();
              uint64_t v57 = v162;
            }
            unint64_t v160 = v57[2];
            unint64_t v159 = v57[3];
            if (v160 >= v159 >> 1)
            {
              sub_1B2C83FCC(v159);
              sub_1B29B7048();
              uint64_t v57 = v163;
            }
            v57[2] = v160 + 1;
            uint64_t v161 = &v57[2 * v160];
            v161[4] = v158;
            v161[5] = v157;
            uint64_t v123 = v191;
          }
          v156 += 64;
          --v155;
        }
        while (v155);
        swift_release();
      }
      else
      {
        uint64_t v57 = (void *)MEMORY[0x1E4FBC860];
      }
      swift_release();
      unint64_t v164 = v57[2];
      uint64_t v1 = v189;
      if (v164 > 1)
      {
        if (qword_1E9C38C28 != -1) {
          goto LABEL_201;
        }
        goto LABEL_176;
      }
      goto LABEL_180;
    }
    swift_bridgeObjectRetain();
    uint64_t v141 = v137 + 48;
    uint64_t v142 = MEMORY[0x1E4FBC860];
    while (1)
    {
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_208;
      }
      sub_1B299E8C4();
      if (v13 == v14) {
        goto LABEL_192;
      }
      if (*(uint64_t *)(v143 + 712) >= 3558) {
        goto LABEL_193;
      }
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_209;
      }
      sub_1B2C83EDC();
      sub_1B2C83E94();
      swift_bridgeObjectRetain();
      unint64_t v218 = v2;
      sub_1B2A53708(v123, v2, v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v144 = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_210;
      }
      uint64_t v146 = (uint64_t *)v144;
      unint64_t v2 = v145;
      sub_1B2E82538();
      if (v4 == v146 && v1 == v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2C84064();
      }
      else
      {
        char v148 = sub_1B2C83B7C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v148 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v149 = v123;
          uint64_t v150 = v218;
          char v151 = v5;
          goto LABEL_153;
        }
      }
      if ((v5 & 1) == 0)
      {
        char v152 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v219 = v142;
        if ((v152 & 1) == 0)
        {
          sub_1B2C83E58();
          sub_1B2C83EF4();
        }
        sub_1B2C83BCC();
        uint64_t v5 = v210;
        if (v112)
        {
          sub_1B2C83D64();
          sub_1B2C83EF4();
        }
        sub_1B2C840B4();
        sub_1B2C83A14(v153);
        *(void *)(v154 + 72) = v123;
        *(void *)(v154 + 80) = v218;
        *(unsigned char *)(v154 + 88) = 0;
        goto LABEL_159;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v149 = v123;
      uint64_t v150 = v218;
      char v151 = 1;
LABEL_153:
      sub_1B2A53718(v149, v150, v151);
      sub_1B2C83F0C();
LABEL_159:
      v141 += 64;
      BOOL v35 = v214-- == 1;
      uint64_t v123 = v191;
      if (v35)
      {
        sub_1B2C84014();
        sub_1B2C83AE8();
        swift_bridgeObjectRelease_n();
        goto LABEL_163;
      }
    }
  }
  unint64_t v54 = 0;
  uint64_t v202 = v43 + 32;
  uint64_t v195 = MEMORY[0x1E4FBC860];
  uint64_t v196 = v43;
LABEL_40:
  if (v54 >= *(void *)(v43 + 16)) {
    goto LABEL_189;
  }
  uint64_t v55 = (long long *)(v202 + (v54 << 6));
  uint64_t v56 = *((void *)v55 + 2);
  uint64_t v57 = *(void **)(v56 + 16);
  if (!v57) {
    goto LABEL_77;
  }
  unint64_t v209 = v54;
  long long v200 = *v55;
  uint64_t v58 = *((void *)v55 + 4);
  uint64_t v199 = *((void *)v55 + 3);
  uint64_t v59 = *((void *)v55 + 6);
  uint64_t v198 = *((void *)v55 + 5);
  LODWORD(v197) = *((unsigned __int8 *)v55 + 56);
  swift_bridgeObjectRetain_n();
  uint64_t v206 = v58;
  swift_bridgeObjectRetain();
  uint64_t v205 = v59;
  swift_bridgeObjectRetain();
  uint64_t v207 = v56;
  unint64_t v2 = v56 + 88;
  while (1)
  {
    uint64_t v3 = *(void *)(v2 - 56);
    uint64_t v1 = *(void *)(v2 - 48);
    sub_1B2B70AE8(*(void *)(v2 - 32));
    uint64_t v60 = *(void *)(v2 - 16);
    uint64_t v61 = *(void *)(v2 - 8);
    uint64_t v5 = *(unsigned __int8 *)v2;
    sub_1B29A3EB4(&qword_1EB7E34A8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B2EBFA40;
    if (!_Records_GDEntityPredicate_records) {
      break;
    }
    uint64_t v63 = *((void *)_Records_GDEntityPredicate_records + 4);
    if (v63 >= 2674)
    {
      __break(1u);
LABEL_185:
      __break(1u);
      __break(1u);
LABEL_186:
      __break(1u);
      goto LABEL_182;
    }
    if (*((uint64_t *)_Records_GDEntityPredicate_records + 5) >= 3558) {
      goto LABEL_185;
    }
    v212 = v57;
    if (!_Records_GDEntityPredicate_predicateIds) {
      goto LABEL_196;
    }
    uint64_t v4 = (uint64_t *)inited;
    __int16 v64 = _Records_GDEntityPredicate_records[12];
    uint64_t v57 = (void *)((char *)_Records_GDEntityPredicate_predicateIds + v63);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2A53708(v60, v61, v5);
    uint64_t v65 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels) {
      goto LABEL_197;
    }
    uint64_t v57 = (void *)v65;
    uint64_t v67 = v66;
    uint64_t v68 = sub_1B2E82538();
    v4[4] = (uint64_t)v57;
    v4[5] = v67;
    v4[6] = v68;
    v4[7] = v69;
    *((_WORD *)v4 + 32) = v64;
    if (!_Records_GDEntityPredicate_records) {
      goto LABEL_198;
    }
    if (*((uint64_t *)_Records_GDEntityPredicate_records + 88) >= 2674
      || *((void *)_Records_GDEntityPredicate_records + 89) >= 3558)
    {
      goto LABEL_186;
    }
    if (!_Records_GDEntityPredicate_predicateIds) {
      goto LABEL_199;
    }
    __int16 v71 = _Records_GDEntityPredicate_records[348];
    uint64_t v72 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels) {
      goto LABEL_200;
    }
    uint64_t v74 = v72;
    uint64_t v75 = v73;
    uint64_t v76 = sub_1B2E82538();
    v4[9] = v74;
    v4[10] = v75;
    v4[11] = v76;
    v4[12] = v77;
    *((_WORD *)v4 + 52) = v71;
    BOOL v78 = v4[4] == v3 && v4[5] == v1;
    if (v78 || (sub_1B2E837A8() & 1) != 0 || (v4[9] == v3 ? (BOOL v79 = v4[10] == v1) : (BOOL v79 = 0), v79))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v80 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if ((v80 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2C83F58();
        goto LABEL_69;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2C83F58();
    if (!v5)
    {
      uint64_t v1 = v207;
      sub_1B2C84064();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B2C83B00();
        sub_1B29BFF4C();
      }
      uint64_t v81 = v219;
      unint64_t v82 = *(void *)(v219 + 16);
      uint64_t v5 = v210;
      uint64_t v43 = v196;
      if (v82 >= *(void *)(v219 + 24) >> 1)
      {
        sub_1B29BFF4C();
        uint64_t v43 = v196;
        uint64_t v81 = v219;
      }
      *(void *)(v81 + 16) = v82 + 1;
      uint64_t v195 = v81;
      uint64_t v83 = v81 + (v82 << 6);
      *(_OWORD *)(v83 + 32) = v200;
      *(void *)(v83 + 48) = v207;
      *(void *)(v83 + 56) = v199;
      *(void *)(v83 + 64) = v206;
      *(void *)(v83 + 72) = v198;
      *(void *)(v83 + 80) = v205;
      *(unsigned char *)(v83 + 88) = v197;
LABEL_76:
      unint64_t v54 = v209;
LABEL_77:
      if (++v54 == v204)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v219;
        goto LABEL_80;
      }
      goto LABEL_40;
    }
LABEL_69:
    v2 += 64;
    uint64_t v57 = (void *)((char *)v212 - 1);
    if (v212 == (void *)1)
    {
      sub_1B2C84014();
      sub_1B2C83AE8();
      swift_bridgeObjectRelease_n();
      sub_1B2C83F0C();
      uint64_t v43 = v196;
      goto LABEL_76;
    }
  }
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  swift_once();
LABEL_176:
  uint64_t v165 = sub_1B2E81FB8();
  __int16 v166 = (_DWORD *)sub_1B29A4B98(v165, (uint64_t)qword_1E9C3EBA8);
  swift_retain_n();
  uint64_t v167 = (void *)sub_1B2E81F98();
  os_log_type_t v168 = sub_1B2E82DB8();
  if (sub_1B2C839C8(v168))
  {
    swift_slowAlloc();
    v226[0] = sub_1B2C839E4();
    *__int16 v166 = 136642819;
    sub_1B2B70AE8((uint64_t)(v166 + 1));
    uint64_t v169 = *(void *)(v188 + 120);
    uint64_t v170 = *(void *)(v188 + 128);
    uint64_t v171 = *(void *)(v188 + 136);
    uint64_t v172 = *(void *)(v188 + 144);
    uint64_t v173 = *(void *)(v188 + 152);
    char v174 = *(unsigned char *)(v188 + 160);
    uint64_t v219 = *(void *)(v188 + 112);
    uint64_t v220 = v169;
    uint64_t v221 = v170;
    uint64_t v222 = v171;
    uint64_t v223 = v172;
    uint64_t v224 = v173;
    char v225 = v174;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v175 = sub_1B2E82408();
    sub_1B29BF6BC(v175, v176, (uint64_t)v226, v177, v178, v179, v180, v181, v187, v188, v189, v191, v192, v193, v194, v195, v196, v197, v198,
      v199);
    uint64_t v219 = v182;
    sub_1B2E82FB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    sub_1B2C83868(&dword_1B2996000, v183, v184, "Multiple full street names found in address for entity %{sensitive}s.");
    sub_1B2C8399C();
    uint64_t v1 = v190;
    sub_1B299B750();
    sub_1B299B750();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v123 = v191;
  unint64_t v164 = v57[2];
LABEL_180:
  if (v164)
  {
    uint64_t v186 = v57[4];
    uint64_t v185 = v57[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v219 = v186;
    uint64_t v220 = v185;
    sub_1B2E800B8();
    sub_1B29C3640();
    sub_1B2E83008();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v123, v5);
  }
LABEL_182:
  swift_bridgeObjectRelease();
LABEL_2:
  sub_1B299B738();
}

uint64_t sub_1B2C7FA90(uint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 48);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  uint64_t v12 = v5;
  uint64_t v13 = v6;
  char v14 = v7;
  long long v8 = a3[1];
  v10[0] = *a3;
  v10[1] = v8;
  return sub_1B2C7B834((uint64_t)v11, a2, v10, a4);
}

uint64_t type metadata accessor for K2TLocationTextualizer()
{
  return self;
}

void sub_1B2C7FB00(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = a1[1];
  uint64_t v50 = a1[2];
  uint64_t v51 = *a1;
  uint64_t v48 = a1[4];
  uint64_t v49 = a1[3];
  uint64_t v47 = a1[5];
  char v46 = *((unsigned char *)a1 + 48);
  long long v53 = *(_OWORD *)(a3 + 1);
  uint64_t v44 = a3[3];
  uint64_t v45 = *a3;
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
LABEL_23:
    if (*(void *)(v7 + 16))
    {
      swift_retain();
      uint64_t v31 = (uint64_t *)(v7 + 72);
      uint64_t v32 = MEMORY[0x1E4FBC860];
      while (*((unsigned char *)v31 + 57))
      {
LABEL_36:
        sub_1B2C83F4C();
        if (v26)
        {
          swift_release();
          goto LABEL_47;
        }
      }
      uint64_t v33 = v7;
      uint64_t v34 = *v31;
      uint64_t v35 = v31[1];
      BOOL v36 = *v31 == 49 && v35 == 0xE100000000000000;
      if (v36 || (sub_1B2C83AD0() & 1) != 0)
      {
        char v37 = 1;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_32;
        }
      }
      else
      {
        BOOL v38 = v34 == 48 && v35 == 0xE100000000000000;
        if (!v38 && (sub_1B2C83AD0() & 1) == 0) {
          goto LABEL_35;
        }
        char v37 = 0;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
LABEL_32:
          sub_1B2C839B8();
          if (v29)
          {
            sub_1B2C83CB0();
            uint64_t v32 = v40;
          }
          *(void *)(v32 + 16) = v34;
          *(unsigned char *)(v32 + v3 + 32) = v37;
LABEL_35:
          uint64_t v7 = v33;
          goto LABEL_36;
        }
      }
      sub_1B2C83B58();
      uint64_t v32 = v39;
      goto LABEL_32;
    }
    uint64_t v32 = MEMORY[0x1E4FBC860];
LABEL_47:
    swift_release();
    if (*(void *)(v32 + 16))
    {
      char v41 = *(unsigned char *)(v32 + 32);
      swift_bridgeObjectRelease();
      if (v41)
      {
        uint64_t v42 = (void *)v53;
        id v43 = (id)v53;
LABEL_52:
        v68[0] = v51;
        v68[1] = v4;
        v68[2] = v50;
        v68[3] = v49;
        v68[4] = v48;
        v68[5] = v47;
        char v69 = v46;
        uint64_t v65 = v45;
        long long v66 = v53;
        uint64_t v67 = v44;
        sub_1B2C7B834((uint64_t)v68, a2, &v65, v42);
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v42 = 0;
    goto LABEL_52;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v54 = v4;
  while (1)
  {
    if (!_Records_GDEntityPredicate_records) {
      goto LABEL_55;
    }
    if (*((uint64_t *)_Records_GDEntityPredicate_records + 331) >= 2674) {
      break;
    }
    if (*((uint64_t *)_Records_GDEntityPredicate_records + 332) >= 3558) {
      goto LABEL_54;
    }
    uint64_t v62 = v5;
    uint64_t v63 = v7;
    if (!_Records_GDEntityPredicate_predicateIds) {
      goto LABEL_56;
    }
    uint64_t v61 = v6;
    uint64_t v8 = v4 + v6;
    uint64_t v60 = *(void *)(v4 + v6 + 32);
    uint64_t v64 = *(void *)(v4 + v6 + 40);
    uint64_t v9 = *(void *)(v4 + v6 + 56);
    uint64_t v56 = *(void *)(v4 + v6 + 48);
    __int16 v55 = *(_WORD *)(v4 + v6 + 64);
    uint64_t v11 = *(void *)(v4 + v6 + 72);
    uint64_t v10 = *(void *)(v4 + v6 + 80);
    uint64_t v12 = *(void *)(v4 + v6 + 88);
    uint64_t v13 = *(void *)(v4 + v6 + 96);
    uint64_t v15 = *(void *)(v4 + v6 + 104);
    uint64_t v14 = *(void *)(v4 + v6 + 112);
    uint64_t v16 = *(void *)(v4 + v6 + 120);
    uint64_t v17 = *(unsigned __int8 *)(v4 + v6 + 128);
    char v18 = *(unsigned char *)(v8 + 129);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v57 = v10;
    uint64_t v58 = v15;
    uint64_t v19 = v15;
    uint64_t v20 = v9;
    unsigned int v59 = v17;
    sub_1B2A53774(v11, v10, v12, v13, v19, v14, v16, v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels) {
      goto LABEL_57;
    }
    uint64_t v23 = v21;
    uint64_t v24 = v22;
    sub_1B2E82538();
    uint64_t v3 = v25;
    BOOL v26 = v60 == v23 && v64 == v24;
    if (v26)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2C83A40();
LABEL_15:
      uint64_t v7 = v63;
      v68[0] = v63;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B2C8393C();
        uint64_t v7 = v68[0];
      }
      sub_1B2C83C54();
      if (v29)
      {
        sub_1B299B984(v28);
        sub_1B29BFED4();
        uint64_t v7 = v68[0];
      }
      sub_1B2C83A00();
      *(void *)(v30 + 48) = v56;
      *(void *)(v30 + 56) = v20;
      *(_WORD *)(v30 + 64) = v55;
      *(void *)(v30 + 72) = v11;
      *(void *)(v30 + 80) = v57;
      *(void *)(v30 + 88) = v12;
      *(void *)(v30 + 96) = v13;
      *(void *)(v30 + 104) = v58;
      *(void *)(v30 + 112) = v14;
      *(void *)(v30 + 120) = v16;
      *(unsigned char *)(v30 + 128) = v59;
      *(unsigned char *)(v30 + 129) = v18;
      goto LABEL_20;
    }
    char v27 = sub_1B299BBC4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A5347C(v11, v57, v12, v13, v58, v14, v16, v59, v18);
    uint64_t v7 = v63;
LABEL_20:
    uint64_t v6 = v61 + 104;
    uint64_t v5 = v62 - 1;
    uint64_t v4 = v54;
    if (v62 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

__n128 *sub_1B2C7FFE8()
{
  unint64_t v0 = sub_1B2C7B8C0();
  sub_1B29A3EB4(&qword_1EB7E34A8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  sub_1B2A6BC14(inited, (__n128)xmmword_1B2EC00A0);
  static EntityPredicate.isAllDay.getter();
  sub_1B2AD2FD0();
  return v0;
}

uint64_t sub_1B2C80058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1B2999940();
  uint64_t v76 = v14;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v15);
  sub_1B2AD0E78();
  uint64_t v74 = v16;
  uint64_t v17 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v18 = sub_1B299B0F0(v17);
  MEMORY[0x1F4188790](v18);
  sub_1B299B860();
  uint64_t v21 = v19 - v20;
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v68 - v24;
  MEMORY[0x1F4188790](v23);
  long long v26 = *(_OWORD *)(a2 + 16);
  v83[0] = *(_OWORD *)a2;
  v83[1] = v26;
  __int16 v27 = *(_WORD *)(a2 + 32);
  char v29 = (char *)&v68 - v28;
  __int16 v84 = v27;
  long long v30 = *(_OWORD *)(a3 + 16);
  v81[0] = *(_OWORD *)a3;
  v81[1] = v30;
  __int16 v82 = *(_WORD *)(a3 + 32);
  sub_1B29E52BC((uint64_t)v83);
  uint64_t v31 = swift_bridgeObjectRetain();
  sub_1B2C7B34C(v31, v83);
  uint64_t v33 = v32;
  swift_retain();
  sub_1B2C79C1C(v33, v5);
  swift_bridgeObjectRelease();
  sub_1B2A174C0();
  swift_bridgeObjectRelease();
  sub_1B29C8A80((uint64_t)v29, (uint64_t)v25);
  sub_1B2C36828((uint64_t)v25, 1, v10);
  if (!v34)
  {
    sub_1B2A0EA40((uint64_t)v29, &qword_1EB7D87C0);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v25, v10);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a4, 0, 1, v10);
  }
  uint64_t v73 = v12;
  uint64_t v71 = a4;
  sub_1B2A0EA40((uint64_t)v25, &qword_1EB7D87C0);
  swift_bridgeObjectRetain();
  sub_1B29E52BC((uint64_t)v81);
  sub_1B2C7B34C(a1, v81);
  uint64_t v36 = *(void *)(v35 + 16);
  uint64_t v70 = v29;
  uint64_t v72 = v35;
  if (v36)
  {
    uint64_t v68 = 0;
    char v37 = (unsigned char *)(v35 + 88);
    uint64_t v38 = MEMORY[0x1E4FBC860];
    while ((*v37 & 1) != 0)
    {
LABEL_25:
      v37 += 64;
      if (!--v36) {
        goto LABEL_37;
      }
    }
    uint64_t v39 = *((void *)v37 - 6);
    uint64_t v40 = *((void *)v37 - 2);
    uint64_t v41 = *((void *)v37 - 1);
    uint64_t v80 = 0;
    uint64_t v42 = MEMORY[0x1F4188790](v39);
    *(&v68 - 2) = (uint64_t)&v80;
    if ((v41 & 0x1000000000000000) != 0 || !(v41 & 0x2000000000000000 | v40 & 0x1000000000000000))
    {
      uint64_t v69 = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B29A1DFC();
      uint64_t v49 = v68;
      sub_1B2E831C8();
      uint64_t v68 = v49;
      sub_1B2C83DAC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v75 = &v68;
      if ((v41 & 0x2000000000000000) != 0)
      {
        uint64_t v77 = v40;
        uint64_t v78 = v41 & 0xFFFFFFFFFFFFFFLL;
        switch((char)v40)
        {
          case 0:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
            goto LABEL_16;
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
            goto LABEL_31;
          default:
            if (v40 == 32)
            {
LABEL_16:
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1B29A1DFC();
LABEL_17:
              char v45 = 0;
              goto LABEL_18;
            }
LABEL_31:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1B29A1DFC();
            if (!_swift_stdlib_strtod_clocale()) {
              goto LABEL_17;
            }
            sub_1B29A2504();
LABEL_18:
            char v79 = v45;
            sub_1B2A53718(v40, v41, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B2C83DAC();
            break;
        }
        goto LABEL_19;
      }
      if ((v40 & 0x1000000000000000) != 0)
      {
        id v43 = (unsigned char *)((v41 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        uint64_t v69 = v42;
        id v43 = (unsigned char *)sub_1B2E83298();
        uint64_t v42 = v69;
      }
      switch(*v43)
      {
        case 0:
        case 9:
        case 0xA:
        case 0xB:
        case 0xC:
        case 0xD:
          goto LABEL_12;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
          goto LABEL_28;
        default:
          if (*v43 == 32)
          {
LABEL_12:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1B29A1DFC();
            char v44 = 0;
          }
          else
          {
LABEL_28:
            uint64_t v69 = v42;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1B29A1DFC();
            if (_swift_stdlib_strtod_clocale()) {
              sub_1B29A2504();
            }
            else {
              char v44 = 0;
            }
          }
          char v79 = v44;
          sub_1B2A53718(v40, v41, 0);
          swift_bridgeObjectRelease();
          break;
      }
    }
    swift_bridgeObjectRelease();
    sub_1B2C83DAC();
LABEL_19:
    if (v79)
    {
      uint64_t v46 = v80;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B2C83C2C();
        sub_1B29B7848();
        uint64_t v38 = v50;
      }
      unint64_t v48 = *(void *)(v38 + 16);
      unint64_t v47 = *(void *)(v38 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_1B2A9100C(v47);
        sub_1B29B7848();
        uint64_t v38 = v51;
      }
      *(void *)(v38 + 16) = v48 + 1;
      *(void *)(v38 + 8 * v48 + 32) = v46;
    }
    goto LABEL_25;
  }
  uint64_t v38 = MEMORY[0x1E4FBC860];
LABEL_37:
  swift_bridgeObjectRelease();
  uint64_t v53 = *(void *)(v38 + 16);
  if (v53)
  {
    uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32);
    swift_bridgeObjectRetain();
    uint64_t v55 = 0;
    uint64_t v56 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1B2E805B8();
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v21, 0, 1, v10);
      sub_1B2C36828(v21, 1, v10);
      if (v34)
      {
        sub_1B2A0EA40(v21, &qword_1EB7D87C0);
      }
      else
      {
        uint64_t v57 = *v54;
        uint64_t v58 = v74;
        (*v54)(v74, v21, v10);
        v57(v76, v58, v10);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v56 = sub_1B29B7DD8(0, *(void *)(v56 + 16) + 1, 1, v56);
        }
        unint64_t v61 = *(void *)(v56 + 16);
        unint64_t v60 = *(void *)(v56 + 24);
        if (v61 >= v60 >> 1)
        {
          char v64 = sub_1B2C83FB8(v60);
          uint64_t v56 = sub_1B29B7DD8(v64, v65, v66, v56);
        }
        *(void *)(v56 + 16) = v61 + 1;
        sub_1B2C8398C();
        v57(v56 + v62 + *(void *)(v63 + 72) * v61, v76, v10);
      }
      ++v55;
    }
    while (v53 != v55);
    swift_bridgeObjectRelease();
  }
  uint64_t v67 = (uint64_t)v70;
  swift_bridgeObjectRelease();
  sub_1B2A174C0();
  swift_bridgeObjectRelease();
  return sub_1B2A0EA40(v67, &qword_1EB7D87C0);
}

void sub_1B2C807DC()
{
  sub_1B299B720();
  uint64_t v3 = v2;
  unint64_t v5 = v4;
  v280 = v6;
  uint64_t v284 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v281 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1B2999940();
  sub_1B299B810();
  MEMORY[0x1F4188790](v9);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v273 - v11;
  uint64_t v13 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v14 = sub_1B299B0F0(v13);
  MEMORY[0x1F4188790](v14);
  sub_1B2999940();
  sub_1B299B810();
  MEMORY[0x1F4188790](v15);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v16);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v17);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v18);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v19);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v20);
  sub_1B2AD0E78();
  uint64_t v288 = v21;
  unint64_t v320 = 0;
  unint64_t v321 = 0xE000000000000000;
  uint64_t v23 = v0[9];
  uint64_t v22 = v0[10];
  v289 = v0;
  unint64_t v24 = v0[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static EntityClass.calendarEvent.getter();
  uint64_t v25 = v317[1];
  unint64_t v26 = v319;
  BOOL v27 = v22 == v318 && v24 == v319;
  if (v27)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1B2999874();
  char v28 = sub_1B2E837A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v28)
  {
LABEL_8:
    swift_bridgeObjectRetain_n();
    sub_1B2C7B708(1);
    uint64_t v25 = sub_1B2E82F48();
    unint64_t v26 = v29;
    swift_bridgeObjectRelease();
    unint64_t v30 = sub_1B2A6FFBC(1uLL, v22, v24);
    uint64_t v313 = v25;
    unint64_t v314 = v26;
    v317[0] = v30;
    v317[1] = v31;
    uint64_t v318 = v32;
    unint64_t v319 = v33;
    LOBYTE(v23) = sub_1B2C83484();
    swift_bridgeObjectRetain();
    sub_1B2E824F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v317[0] = v313;
    v317[1] = v314;
    sub_1B2E82518();
    sub_1B2C8381C();
    swift_bridgeObjectRelease();
  }
  sub_1B2E82518();
  sub_1B2C83A90();
  v312 = v12;
  if (!v3)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
LABEL_34:
    uint64_t v64 = *(void *)(v35 + 16);
    uint64_t v65 = MEMORY[0x1E4FBC860];
    if (v64)
    {
      swift_retain();
      unint64_t v1 = 0;
      uint64_t v34 = MEMORY[0x1E4FBC860];
      *(void *)&long long v311 = v35;
      do
      {
        sub_1B2C83C64();
        if (v27)
        {
          sub_1B2C83888(v66);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2C838C0();
            uint64_t v34 = v67;
          }
          sub_1B2C83C44();
          if (v59)
          {
            sub_1B2C838E4();
            uint64_t v34 = v68;
          }
          sub_1B2C83744();
        }
        v1 += 104;
        --v64;
      }
      while (v64);
      swift_release();
      uint64_t v65 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v34 = MEMORY[0x1E4FBC860];
    }
    swift_release();
    v317[0] = v65;
    if (*(void *)(v34 + 16))
    {
      swift_bridgeObjectRetain();
      LOBYTE(v23) = 48;
      do
      {
        swift_bridgeObjectRetain();
        sub_1B2AD3CD0();
        sub_1B2C83F8C();
      }
      while (!v27);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1B2C83F78();
    if (v70)
    {
      uint64_t v307 = 2674;
      uint64_t v306 = 3558;
      uint64_t v71 = (uint64_t *)(v69 + 48);
      uint64_t v72 = MEMORY[0x1E4FBC860];
      while (1)
      {
        if (!_Records_GDEntityPredicate_records) {
          goto LABEL_300;
        }
        if (*((void *)_Records_GDEntityPredicate_records + 154) >= v307) {
          goto LABEL_284;
        }
        if (*((void *)_Records_GDEntityPredicate_records + 155) >= v306) {
          goto LABEL_285;
        }
        *(void *)&long long v311 = v70;
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_301;
        }
        unint64_t v1 = *(v71 - 2);
        unint64_t v26 = *(v71 - 1);
        uint64_t v64 = v71[1];
        uint64_t v309 = *v71;
        sub_1B2C83EB8();
        swift_bridgeObjectRetain();
        uint64_t v310 = v5;
        sub_1B2A53708(v25, v5, v23);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v73 = sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_302;
        }
        uint64_t v75 = v73;
        unint64_t v5 = v74;
        sub_1B2E82538();
        uint64_t v12 = v76;
        if (v1 == v75 && v26 == v5) {
          break;
        }
        uint64_t v34 = sub_1B2C83DE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v34) {
          goto LABEL_65;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2A53718(v25, v310, v23);
        sub_1B2C840C8();
LABEL_70:
        v71 += 8;
        uint64_t v70 = v311 - 1;
        if ((void)v311 == 1) {
          goto LABEL_73;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_65:
      swift_isUniquelyReferenced_nonNull_native();
      v317[0] = v72;
      sub_1B2C840C8();
      if ((v78 & 1) == 0)
      {
        sub_1B2C83E34();
        uint64_t v72 = v317[0];
      }
      unint64_t v5 = *(void *)(v72 + 16);
      uint64_t v34 = v5 + 1;
      if (v5 >= *(void *)(v72 + 24) >> 1)
      {
        sub_1B2C83D1C();
        uint64_t v72 = v317[0];
      }
      *(void *)(v72 + 16) = v34;
      char v79 = (void *)(v72 + (v5 << 6));
      v79[4] = v1;
      v79[5] = v26;
      v79[6] = v309;
      v79[7] = v64;
      sub_1B2C83A14((uint64_t)v79);
      uint64_t v80 = v310;
      *(void *)(v81 + 72) = v25;
      *(void *)(v81 + 80) = v80;
      *(unsigned char *)(v81 + 88) = v23;
      goto LABEL_70;
    }
    uint64_t v72 = MEMORY[0x1E4FBC860];
LABEL_73:
    sub_1B2C83AE8();
    if (*(void *)(v72 + 16))
    {
      swift_retain();
      uint64_t v82 = MEMORY[0x1E4FBC860];
      do
      {
        if (*(unsigned char *)(v72 + 88) == 1)
        {
          uint64_t v25 = *(void *)(v72 + 72);
          uint64_t v83 = v82;
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            uint64_t v84 = v83;
          }
          else
          {
            sub_1B2C83B00();
            sub_1B29B7148();
            uint64_t v84 = v86;
          }
          unint64_t v26 = *(void *)(v84 + 16);
          unint64_t v85 = *(void *)(v84 + 24);
          if (v26 >= v85 >> 1)
          {
            sub_1B2A9100C(v85);
            sub_1B29B7148();
            uint64_t v84 = v87;
          }
          *(void *)(v84 + 16) = v26 + 1;
          *(void *)(v84 + 8 * v26 + 32) = v25;
        }
        sub_1B2C83F8C();
      }
      while (!v27);
      uint64_t v88 = v82;
      swift_release();
    }
    else
    {
      uint64_t v88 = MEMORY[0x1E4FBC860];
    }
    swift_release();
    uint64_t v89 = (uint64_t)v289;
    swift_retain();
    uint64_t v278 = v88;
    uint64_t v90 = v88;
    uint64_t v91 = 0;
    uint64_t v92 = sub_1B2C7A51C(v90, v89);
    uint64_t v93 = v92;
    uint64_t v279 = 0;
    uint64_t v94 = *(void *)(v92 + 16);
    if (v94)
    {
      if (v94 == 1)
      {
        int v283 = 1;
        sub_1B2B47524(0, 1, v92);
        uint64_t v91 = *(void *)(v93 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1B2A14400(15);
        swift_bridgeObjectRelease();
        sub_1B2C83AB4();
        sub_1B2C83A20(v95);
        swift_bridgeObjectRelease();
        sub_1B2C8381C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v317[0] = v92;
        sub_1B29A3EB4(&qword_1EB7E3B30);
        sub_1B29D22C4(&qword_1E9C383D0, &qword_1EB7E3B30);
        uint64_t v91 = sub_1B2E82638();
        swift_bridgeObjectRelease();
        sub_1B2A14400(16);
        swift_bridgeObjectRelease();
        sub_1B2C83AB4();
        v317[0] = v97;
        v317[1] = v96 | 0xEE00207300000000;
        sub_1B2C83A58();
        swift_bridgeObjectRelease();
        sub_1B2C8381C();
        swift_bridgeObjectRelease();
        int v283 = 1;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      int v283 = 0;
    }
    uint64_t v34 = *(void *)(v289[15] + 16);
    if (v34)
    {
      sub_1B2C389D4(233);
      sub_1B2C392B4(2674);
      uint64_t v291 = 3558;
      uint64_t v98 = swift_bridgeObjectRetain();
      uint64_t v99 = 0;
      unint64_t v100 = MEMORY[0x1E4FBC860];
      uint64_t v290 = v98;
      while (1)
      {
        if (v293 < 111) {
          goto LABEL_286;
        }
        if (!_Records_GDEntityPredicate_records) {
          goto LABEL_303;
        }
        sub_1B299E8C4();
        if (v37 == v38) {
          goto LABEL_287;
        }
        sub_1B2C83954();
        if (v37 == v38) {
          goto LABEL_288;
        }
        uint64_t v310 = v102;
        *(void *)&long long v311 = v34;
        uint64_t v309 = v100;
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_304;
        }
        sub_1B2C83704(v101);
        uint64_t v104 = *(void *)(v103 + 88);
        uint64_t v64 = *(void *)(v103 + 96);
        sub_1B2C83B30(v105);
        int v107 = *(unsigned __int8 *)(v106 + 129);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        LODWORD(v296) = v107;
        char v270 = v107;
        uint64_t v91 = v1;
        uint64_t v108 = sub_1B2C83A70();
        *(void *)(v109 - 256) = v104;
        uint64_t v110 = v104;
        uint64_t v111 = v307;
        sub_1B2C837D0(v108, v112, v110, v113, v114, v115, v116, v117, v270);
        sub_1B2C83DC8();
        swift_bridgeObjectRetain();
        sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_305;
        }
        unint64_t v100 = v118;
        sub_1B2C83E1C();
        sub_1B2C83F38();
        if (v27 && v111 == v100) {
          break;
        }
        uint64_t v25 = sub_1B299BBC4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2C84044();
        if (v25) {
          goto LABEL_108;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2C836C0(v297, (uint64_t)&v315, v296);
        unint64_t v100 = v309;
LABEL_113:
        v99 += 104;
        uint64_t v34 = v311 - 1;
        if ((void)v311 == 1)
        {
          swift_bridgeObjectRelease();
          sub_1B2C840C8();
          goto LABEL_116;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2C83A40();
      sub_1B2C84044();
LABEL_108:
      char v120 = sub_1B2C83B18();
      v317[0] = v100;
      if ((v120 & 1) == 0)
      {
        sub_1B299F8EC();
        unint64_t v100 = v317[0];
      }
      unint64_t v1 = *(void *)(v100 + 16);
      uint64_t v25 = v1 + 1;
      if (v1 >= *(void *)(v100 + 24) >> 1)
      {
        sub_1B2C83D40();
        unint64_t v100 = v317[0];
      }
      sub_1B29A2E54();
      goto LABEL_113;
    }
    unint64_t v100 = MEMORY[0x1E4FBC860];
LABEL_116:
    uint64_t v121 = *(void *)(v100 + 16);
    if (v121)
    {
      swift_retain();
      uint64_t v25 = v100 + 72;
      uint64_t v122 = MEMORY[0x1E4FBC860];
      unint64_t v26 = 0xE100000000000000;
      while (*(unsigned char *)(v25 + 57))
      {
LABEL_129:
        sub_1B2C83F4C();
        if (v27)
        {
          swift_release();
          goto LABEL_140;
        }
      }
      unint64_t v1 = v100;
      uint64_t v123 = *(void *)v25;
      uint64_t v91 = *(void *)(v25 + 8);
      BOOL v124 = *(void *)v25 == 49 && v91 == 0xE100000000000000;
      if (v124 || (sub_1B2C83AD0() & 1) != 0)
      {
        uint64_t v91 = 1;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_125;
        }
      }
      else
      {
        BOOL v125 = v123 == 48 && v91 == 0xE100000000000000;
        if (!v125 && (sub_1B2C83AD0() & 1) == 0)
        {
LABEL_128:
          unint64_t v100 = v1;
          goto LABEL_129;
        }
        uint64_t v91 = 0;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
LABEL_125:
          sub_1B2C839B8();
          if (v59)
          {
            sub_1B2C83CB0();
            uint64_t v122 = v127;
          }
          *(void *)(v122 + 16) = v123;
          *(unsigned char *)(v122 + v64 + 32) = v91;
          goto LABEL_128;
        }
      }
      sub_1B2C83B58();
      uint64_t v122 = v126;
      goto LABEL_125;
    }
    uint64_t v122 = MEMORY[0x1E4FBC860];
LABEL_140:
    swift_release();
    if (*(void *)(v122 + 16))
    {
      sub_1B2B47524(0, 1, v122);
      LODWORD(v290) = *(unsigned __int8 *)(v122 + 32);
    }
    else
    {
      LODWORD(v290) = 0;
    }
    swift_bridgeObjectRelease();
    sub_1B2C83A90();
    if (v91)
    {
      uint64_t v34 = 233;
      swift_bridgeObjectRetain();
      uint64_t v128 = 0;
      sub_1B2C389D4(2674);
      sub_1B2C392B4(3558);
      uint64_t v129 = MEMORY[0x1E4FBC860];
      uint64_t v291 = v130;
      while (1)
      {
        if (!_Records_GDEntityPredicate_records) {
          goto LABEL_306;
        }
        sub_1B299E8C4();
        if (v37 == v38) {
          goto LABEL_289;
        }
        sub_1B2C83954();
        if (v37 == v38) {
          goto LABEL_290;
        }
        uint64_t v309 = v132;
        uint64_t v310 = v91;
        *(void *)&long long v311 = v129;
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_307;
        }
        sub_1B2C83704(v131);
        uint64_t v134 = *(void *)(v133 + 88);
        sub_1B2C83B30(v135);
        int v137 = *(unsigned __int8 *)(v136 + 129);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        LODWORD(v296) = v137;
        char v271 = v137;
        uint64_t v34 = v307;
        uint64_t v138 = sub_1B2C83A70();
        *(void *)(v139 - 256) = v134;
        uint64_t v140 = v134;
        uint64_t v91 = v1;
        sub_1B2C837D0(v138, v141, v140, v142, v143, v144, v145, v146, v271);
        sub_1B2C83DC8();
        swift_bridgeObjectRetain();
        sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_308;
        }
        uint64_t v129 = v147;
        sub_1B2C83E1C();
        sub_1B2C83F38();
        if (v27 && v34 == v129) {
          break;
        }
        uint64_t v25 = sub_1B299BBC4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2C84044();
        if (v25) {
          goto LABEL_159;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2C836C0(v297, (uint64_t)&v315, v296);
        uint64_t v129 = v311;
LABEL_164:
        v128 += 104;
        sub_1B2C83F00();
        if (v27)
        {
          swift_bridgeObjectRelease();
          sub_1B2C840C8();
          goto LABEL_168;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2C83A40();
      sub_1B2C84044();
LABEL_159:
      char v149 = sub_1B2C83B18();
      v317[0] = v129;
      if ((v149 & 1) == 0)
      {
        sub_1B299F8EC();
        uint64_t v129 = v317[0];
      }
      unint64_t v1 = *(void *)(v129 + 16);
      uint64_t v25 = v1 + 1;
      if (v1 >= *(void *)(v129 + 24) >> 1)
      {
        sub_1B2C83D40();
        uint64_t v129 = v317[0];
      }
      sub_1B29A2E54();
      goto LABEL_164;
    }
    uint64_t v129 = MEMORY[0x1E4FBC860];
LABEL_168:
    uint64_t v150 = *(void *)(v129 + 16);
    uint64_t v151 = MEMORY[0x1E4FBC860];
    if (v150)
    {
      swift_retain();
      uint64_t v152 = 0;
      uint64_t v153 = MEMORY[0x1E4FBC860];
      *(void *)&long long v311 = v129;
      do
      {
        sub_1B2C83C64();
        if (v27)
        {
          sub_1B2C83888(v154);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2C838C0();
            uint64_t v153 = v155;
          }
          sub_1B2C83C44();
          if (v59)
          {
            sub_1B2C838E4();
            uint64_t v153 = v156;
          }
          sub_1B2C83744();
        }
        v152 += 104;
        --v150;
      }
      while (v150);
      swift_release();
      uint64_t v151 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v153 = MEMORY[0x1E4FBC860];
    }
    swift_release();
    v317[0] = v151;
    if (*(void *)(v153 + 16))
    {
      swift_bridgeObjectRetain();
      LOBYTE(v121) = 48;
      do
      {
        swift_bridgeObjectRetain();
        sub_1B2AD3CD0();
        sub_1B2C83F8C();
      }
      while (!v27);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v157 = v317[0];
    static EntityPredicate.startTime.getter();
    sub_1B299B5A0();
    static EntityPredicate.imputedStartTime.getter();
    sub_1B2C83838();
    uint64_t v158 = v288;
    unint64_t v159 = v289;
    sub_1B2C80058(v157, v160, v161, v288);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    static EntityPredicate.endTime.getter();
    sub_1B299B5A0();
    static EntityPredicate.imputedEndTime.getter();
    sub_1B2C83838();
    unint64_t v162 = v287;
    sub_1B2C80058(v157, v163, v164, v287);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v165 = 6;
    if (v290) {
      uint64_t v165 = 5;
    }
    __int16 v166 = (void *)v159[v165];
    uint64_t v167 = v282;
    sub_1B29C8A80(v158, v282);
    uint64_t v25 = v284;
    int v168 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v167, 1, v284);
    uint64_t v169 = 0x1F6957000;
    uint64_t v291 = (uint64_t)v166;
    if (v168 == 1)
    {
      id v170 = v166;
      sub_1B2A0EA40(v167, &qword_1EB7D87C0);
      uint64_t v171 = v276;
      sub_1B29C8A80(v162, v276);
      sub_1B2C36828(v171, 1, v25);
      uint64_t v172 = v281;
      if (v27)
      {
        sub_1B2A0EA40(v171, &qword_1EB7D87C0);
        goto LABEL_195;
      }
      unint64_t v26 = v274;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v281 + 32))(v274, v171, v25);
      uint64_t v179 = sub_1B2E805E8();
      id v180 = sub_1B2C83F98(v179);

      uint64_t v169 = sub_1B2E82378();
      LOBYTE(v121) = v181;

      sub_1B2C83A20(0x646E652073616820);
      swift_bridgeObjectRelease();
      sub_1B2C8381C();
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v172 + 8))(v26, v25);
    }
    else
    {
      unint64_t v26 = (unint64_t)v12;
      uint64_t v173 = v281;
      char v174 = *(void (**)(void))(v281 + 32);
      sub_1B2C83FE0();
      v174();
      id v175 = v166;
      uint64_t v176 = sub_1B2E805E8();
      id v177 = sub_1B2C83F98(v176);

      LOBYTE(v121) = sub_1B2E82378();
      strcpy((char *)v317, " has start on ");
      HIBYTE(v317[1]) = -18;
      sub_1B2E82518();
      uint64_t v25 = v284;
      swift_bridgeObjectRelease();
      uint64_t v169 = v317[1];
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      uint64_t v178 = v277;
      sub_1B29C8A80(v162, v277);
      sub_1B2C36828(v178, 1, v25);
      if (v27)
      {
        (*(void (**)(unint64_t, uint64_t))(v173 + 8))(v26, v25);
        sub_1B2A0EA40(v178, &qword_1EB7D87C0);
      }
      else
      {
        unint64_t v162 = v275;
        sub_1B2C83FE0();
        v174();
        uint64_t v182 = (void *)sub_1B2E805E8();
        id v183 = objc_msgSend(v175, sel_stringFromDate_, v182);

        uint64_t v169 = sub_1B2E82378();
        LOBYTE(v121) = v184;

        sub_1B2C83A20(0x206C69746E7520);
        swift_bridgeObjectRelease();
        sub_1B2C8381C();
        swift_bridgeObjectRelease();
        uint64_t v185 = *(void (**)(unint64_t, uint64_t))(v173 + 8);
        v185(v162, v25);
        v185(v26, v25);
      }
    }
    int v283 = 1;
LABEL_195:
    sub_1B2C83A90();
    if (v169)
    {
      uint64_t v34 = 233;
      swift_bridgeObjectRetain();
      uint64_t v294 = 2674;
      sub_1B2C389D4(3558);
      uint64_t v186 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v292 = v187;
      while (1)
      {
        if (!_Records_GDEntityPredicate_records) {
          goto LABEL_309;
        }
        sub_1B299E8C4();
        if (v37 == v38) {
          goto LABEL_291;
        }
        sub_1B2C83954();
        if (v37 == v38) {
          goto LABEL_292;
        }
        uint64_t v310 = v189;
        *(void *)&long long v311 = v169;
        v312 = v186;
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_310;
        }
        uint64_t v307 = v190;
        uint64_t v191 = sub_1B2C83B0C(v188);
        uint64_t v306 = v192;
        uint64_t v308 = v191;
        uint64_t v194 = *(void *)(v193 + 56);
        sub_1B2C83E04();
        uint64_t v197 = *(void *)(v195 + 72);
        uint64_t v196 = *(void *)(v195 + 80);
        uint64_t v25 = *(void *)(v195 + 88);
        unint64_t v26 = *(void *)(v195 + 96);
        uint64_t v198 = *(void *)(v195 + 104);
        uint64_t v199 = *(void *)(v195 + 112);
        unint64_t v162 = *(void *)(v195 + 120);
        uint64_t v200 = *(unsigned __int8 *)(v195 + 128);
        uint64_t v309 = v202 + v201;
        int v203 = *(unsigned __int8 *)(v195 + 129);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        LODWORD(v297) = v203;
        char v272 = v203;
        uint64_t v34 = v308;
        uint64_t v298 = v197;
        uint64_t v299 = v196;
        uint64_t v300 = v25;
        uint64_t v301 = v26;
        uint64_t v302 = v198;
        uint64_t v204 = v198;
        uint64_t v169 = v194;
        uint64_t v303 = v199;
        unint64_t v304 = v162;
        LODWORD(v305) = v200;
        sub_1B2A53774(v197, v196, v25, v26, v204, v199, v162, v200, v272);
        sub_1B2C83DC8();
        swift_bridgeObjectRetain();
        uint64_t v205 = sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_311;
        }
        uint64_t v207 = v205;
        uint64_t v186 = v206;
        sub_1B2C83E1C();
        LOBYTE(v121) = v306;
        if (v306 == v207 && v34 == (void)v186) {
          break;
        }
        char v209 = sub_1B299BBC4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v209) {
          goto LABEL_211;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2C836C0(v298, (uint64_t)&v316, v297);
        uint64_t v186 = v312;
LABEL_216:
        sub_1B2C83F00();
        if (v27)
        {
          swift_bridgeObjectRelease();
          goto LABEL_220;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2C83A40();
LABEL_211:
      char v210 = sub_1B2C83B18();
      v317[0] = v186;
      if ((v210 & 1) == 0)
      {
        sub_1B299F8EC();
        uint64_t v186 = (char *)v317[0];
      }
      sub_1B2C83C54();
      if (v59)
      {
        sub_1B2C83CF8();
        uint64_t v186 = (char *)v317[0];
      }
      sub_1B2C83A00();
      *(void *)(v211 + 48) = v296;
      *(void *)(v211 + 56) = v194;
      sub_1B2C83A14(v211);
      uint64_t v212 = v299;
      *(void *)(v213 + 72) = v298;
      *(void *)(v213 + 80) = v212;
      uint64_t v214 = v301;
      *(void *)(v213 + 88) = v300;
      *(void *)(v213 + 96) = v214;
      uint64_t v215 = v303;
      *(void *)(v213 + 104) = v302;
      *(void *)(v213 + 112) = v215;
      *(void *)(v213 + 120) = v304;
      *(unsigned char *)(v213 + 128) = v305;
      *(unsigned char *)(v213 + 129) = v297;
      goto LABEL_216;
    }
    uint64_t v186 = (char *)MEMORY[0x1E4FBC860];
LABEL_220:
    uint64_t v216 = *((void *)v186 + 2);
    uint64_t v217 = MEMORY[0x1E4FBC860];
    if (v216)
    {
      swift_retain();
      uint64_t v218 = 0;
      uint64_t v34 = MEMORY[0x1E4FBC860];
      v312 = v186;
      do
      {
        sub_1B2C83C64();
        if (v27)
        {
          long long v311 = *(_OWORD *)(v219 + 72);
          char v220 = *(unsigned char *)(v219 + 128);
          unint64_t v26 = *(void *)(v219 + 112);
          uint64_t v221 = *(void *)(v219 + 120);
          uint64_t v222 = *(void *)(v219 + 96);
          uint64_t v121 = *(void *)(v219 + 104);
          uint64_t v25 = *(void *)(v219 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v310 = v222;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1B2C838C0();
            uint64_t v34 = v226;
          }
          sub_1B2C83C44();
          if (v59)
          {
            sub_1B2C838E4();
            uint64_t v34 = v227;
          }
          *(void *)(v34 + 16) = v222;
          unint64_t v224 = v34 + (v162 << 6);
          *(_OWORD *)(v224 + 32) = v311;
          uint64_t v225 = v310;
          *(void *)(v224 + 48) = v25;
          *(void *)(v224 + 56) = v225;
          *(void *)(v224 + 64) = v121;
          *(void *)(v224 + 72) = v26;
          *(void *)(v224 + 80) = v221;
          *(unsigned char *)(v224 + 88) = v220;
        }
        v218 += 104;
        --v216;
      }
      while (v216);
      swift_release();
      uint64_t v217 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v34 = MEMORY[0x1E4FBC860];
    }
    swift_release();
    v317[0] = v217;
    if (*(void *)(v34 + 16))
    {
      swift_bridgeObjectRetain();
      LOBYTE(v121) = 48;
      do
      {
        swift_bridgeObjectRetain();
        sub_1B2AD3CD0();
        sub_1B2C83F8C();
      }
      while (!v27);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1B2C83F78();
    if (v229)
    {
      uint64_t v308 = 233;
      uint64_t v307 = 2674;
      uint64_t v306 = 3558;
      v230 = (uint64_t *)(v228 + 48);
      uint64_t v231 = MEMORY[0x1E4FBC860];
      while (1)
      {
        if (v308 < 28) {
          goto LABEL_293;
        }
        if (!_Records_GDEntityPredicate_records) {
          goto LABEL_312;
        }
        if (*((void *)_Records_GDEntityPredicate_records + 82) >= v307) {
          goto LABEL_294;
        }
        if (*((void *)_Records_GDEntityPredicate_records + 83) >= v306) {
          goto LABEL_295;
        }
        v312 = v229;
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_313;
        }
        uint64_t v232 = *(v230 - 2);
        unint64_t v26 = *(v230 - 1);
        uint64_t v233 = v230[1];
        uint64_t v310 = *v230;
        sub_1B2C83EB8();
        swift_bridgeObjectRetain();
        *(void *)&long long v311 = v162;
        sub_1B2A53708(v25, v162, v121);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v234 = sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_314;
        }
        uint64_t v236 = v234;
        unint64_t v162 = v235;
        sub_1B2E82538();
        if (v232 == v236 && v26 == v162) {
          break;
        }
        uint64_t v34 = sub_1B2C83DE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v34) {
          goto LABEL_252;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2A53718(v25, v311, v121);
LABEL_257:
        v230 += 8;
        v229 = v312 - 1;
        if (v312 == (char *)1) {
          goto LABEL_260;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_252:
      char v238 = swift_isUniquelyReferenced_nonNull_native();
      v317[0] = v231;
      if ((v238 & 1) == 0)
      {
        sub_1B2C83E34();
        uint64_t v231 = v317[0];
      }
      unint64_t v162 = *(void *)(v231 + 16);
      uint64_t v34 = v162 + 1;
      if (v162 >= *(void *)(v231 + 24) >> 1)
      {
        sub_1B2C83D1C();
        uint64_t v231 = v317[0];
      }
      *(void *)(v231 + 16) = v34;
      v239 = (void *)(v231 + (v162 << 6));
      v239[4] = v232;
      v239[5] = v26;
      v239[6] = v310;
      v239[7] = v233;
      sub_1B2C83A14((uint64_t)v239);
      uint64_t v240 = v311;
      *(void *)(v241 + 72) = v25;
      *(void *)(v241 + 80) = v240;
      *(unsigned char *)(v241 + 88) = v121;
      goto LABEL_257;
    }
    uint64_t v231 = MEMORY[0x1E4FBC860];
LABEL_260:
    sub_1B2C83AE8();
    uint64_t v242 = *(void *)(v231 + 16);
    if (v242)
    {
      swift_retain();
      v243 = (unsigned char *)(v231 + 88);
      uint64_t v244 = MEMORY[0x1E4FBC860];
      do
      {
        if (*v243 == 1)
        {
          uint64_t v245 = *((void *)v243 - 2);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2C83B00();
            sub_1B29B7148();
            uint64_t v244 = v248;
          }
          unint64_t v247 = *(void *)(v244 + 16);
          unint64_t v246 = *(void *)(v244 + 24);
          if (v247 >= v246 >> 1)
          {
            sub_1B2A9100C(v246);
            sub_1B29B7148();
            uint64_t v244 = v249;
          }
          *(void *)(v244 + 16) = v247 + 1;
          *(void *)(v244 + 8 * v247 + 32) = v245;
        }
        v243 += 64;
        --v242;
      }
      while (v242);
      swift_release();
    }
    else
    {
      uint64_t v244 = MEMORY[0x1E4FBC860];
    }
    swift_release();
    uint64_t v250 = (uint64_t)v289;
    swift_retain();
    uint64_t v251 = sub_1B2C7A51C(v244, v250);
    uint64_t v252 = *(void *)(v251 + 16);
    if (v252)
    {
      if (v252 == 1)
      {
        sub_1B2B47524(0, 1, v251);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1B2A14400(17);
        swift_bridgeObjectRelease();
        v317[0] = 0x7461206874697720;
        v317[1] = 0xEF206565646E6574;
      }
      else
      {
        v317[0] = v251;
        sub_1B29A3EB4(&qword_1EB7E3B30);
        sub_1B29D22C4(&qword_1E9C383D0, &qword_1EB7E3B30);
        sub_1B2E82638();
        swift_bridgeObjectRelease();
        sub_1B2A14400(18);
        swift_bridgeObjectRelease();
        v317[0] = 0xD000000000000010;
        v317[1] = 0x80000001B2E9E710;
      }
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2C8381C();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      if ((v283 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1B2A0EA40(v287, &qword_1EB7D87C0);
        sub_1B2A0EA40(v288, &qword_1EB7D87C0);
        swift_bridgeObjectRelease();
        type metadata accessor for K2TTextualization();
        sub_1B2C83F2C();
LABEL_282:
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v253, v254, v255, v256);
        sub_1B299B738();
        return;
      }
    }
    unint64_t v26 = v320;
    uint64_t v34 = v321;
    sub_1B29C8A80(v288, v285);
    sub_1B29C8A80(v287, v286);
    v257 = v289;
    uint64_t v258 = v278;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v259 = swift_bridgeObjectRetain();
    sub_1B2C7A65C(v259, v258, v244);
    unint64_t v261 = v260;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v257[14];
    swift_bridgeObjectRetain();
    unint64_t v262 = v261;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
LABEL_296:
      sub_1B2C83E7C();
      sub_1B29B7148();
      unint64_t v262 = v267;
    }
    unint64_t v264 = *(void *)(v262 + 16);
    unint64_t v263 = *(void *)(v262 + 24);
    if (v264 >= v263 >> 1)
    {
      sub_1B2C83FB8(v263);
      sub_1B29B7148();
      unint64_t v262 = v268;
    }
    *(void *)(v262 + 16) = v264 + 1;
    *(void *)(v262 + 8 * v264 + 32) = v25;
    swift_bridgeObjectRelease();

    sub_1B2A0EA40(v287, &qword_1EB7D87C0);
    sub_1B2A0EA40(v288, &qword_1EB7D87C0);
    v265 = v280;
    unint64_t *v280 = v26;
    v265[1] = v34;
    v266 = (int *)type metadata accessor for K2TTextualization();
    sub_1B2C83530(v285, (uint64_t)v265 + v266[5], &qword_1EB7D87C0);
    sub_1B2C83530(v286, (uint64_t)v265 + v266[6], &qword_1EB7D87C0);
    *(unint64_t *)((char *)v265 + v266[7]) = v262;
    sub_1B2C83BA0();
    goto LABEL_282;
  }
  uint64_t v34 = 233;
  swift_bridgeObjectRetain();
  sub_1B2C389D4(2674);
  sub_1B2C392B4(3558);
  uint64_t v35 = MEMORY[0x1E4FBC860];
  uint64_t v291 = v36;
  while (_Records_GDEntityPredicate_records)
  {
    sub_1B299E8C4();
    if (v37 == v38)
    {
      __break(1u);
LABEL_283:
      __break(1u);
LABEL_284:
      __break(1u);
LABEL_285:
      __break(1u);
LABEL_286:
      __break(1u);
LABEL_287:
      __break(1u);
LABEL_288:
      __break(1u);
LABEL_289:
      __break(1u);
LABEL_290:
      __break(1u);
LABEL_291:
      __break(1u);
LABEL_292:
      __break(1u);
LABEL_293:
      __break(1u);
LABEL_294:
      __break(1u);
LABEL_295:
      __break(1u);
      goto LABEL_296;
    }
    sub_1B2C83954();
    if (v37 == v38) {
      goto LABEL_283;
    }
    uint64_t v307 = v40;
    uint64_t v308 = v3;
    *(void *)&long long v311 = v35;
    if (!_Records_GDEntityPredicate_predicateIds) {
      goto LABEL_298;
    }
    uint64_t v306 = v41;
    uint64_t v42 = sub_1B2C83B0C(v39);
    uint64_t v305 = v43;
    uint64_t v309 = v42;
    uint64_t v45 = *(void *)(v44 + 56);
    uint64_t v295 = *(void *)(v44 + 48);
    LODWORD(v294) = *(unsigned __int16 *)(v44 + 64);
    uint64_t v46 = *(void *)(v44 + 72);
    uint64_t v47 = *(void *)(v44 + 80);
    uint64_t v48 = *(void *)(v44 + 88);
    unint64_t v5 = *(void *)(v44 + 96);
    uint64_t v49 = *(void *)(v44 + 104);
    uint64_t v25 = *(void *)(v44 + 112);
    unint64_t v26 = *(void *)(v44 + 120);
    uint64_t v50 = *(unsigned __int8 *)(v44 + 128);
    uint64_t v310 = v52 + v51;
    int v53 = *(unsigned __int8 *)(v44 + 129);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v296) = v53;
    char v269 = v53;
    uint64_t v3 = v45;
    uint64_t v297 = v46;
    uint64_t v54 = v46;
    uint64_t v34 = v309;
    uint64_t v298 = v47;
    uint64_t v299 = v48;
    uint64_t v300 = v5;
    uint64_t v301 = v49;
    uint64_t v302 = v25;
    uint64_t v303 = v26;
    LODWORD(v304) = v50;
    sub_1B2A53774(v54, v47, v48, v5, v49, v25, v26, v50, v269);
    sub_1B2C83DC8();
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels) {
      goto LABEL_299;
    }
    unint64_t v1 = v55;
    uint64_t v35 = v56;
    sub_1B2C83E1C();
    LOBYTE(v23) = v305;
    if (v305 == v1 && v34 == v35)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2C83A40();
LABEL_25:
      char v58 = sub_1B2C83B18();
      v317[0] = v35;
      if ((v58 & 1) == 0)
      {
        sub_1B299F8EC();
        uint64_t v35 = v317[0];
      }
      sub_1B2C83C54();
      if (v59)
      {
        sub_1B2C83CF8();
        uint64_t v35 = v317[0];
      }
      sub_1B2C83A00();
      *(void *)(v60 + 48) = v295;
      *(void *)(v60 + 56) = v45;
      *(_WORD *)(v60 + 64) = v294;
      uint64_t v61 = v298;
      *(void *)(v60 + 72) = v297;
      *(void *)(v60 + 80) = v61;
      uint64_t v62 = v300;
      *(void *)(v60 + 88) = v299;
      *(void *)(v60 + 96) = v62;
      uint64_t v63 = v302;
      *(void *)(v60 + 104) = v301;
      *(void *)(v60 + 112) = v63;
      *(void *)(v60 + 120) = v303;
      *(unsigned char *)(v60 + 128) = v304;
      *(unsigned char *)(v60 + 129) = v296;
      goto LABEL_30;
    }
    unint64_t v1 = sub_1B299BBC4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A5347C(v297, v298, v299, v300, v301, v302, v303, v304, v296);
    uint64_t v35 = v311;
LABEL_30:
    sub_1B2C83F00();
    uint64_t v12 = v312;
    if (v27)
    {
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_298:
  __break(1u);
LABEL_299:
  __break(1u);
LABEL_300:
  __break(1u);
LABEL_301:
  __break(1u);
LABEL_302:
  __break(1u);
LABEL_303:
  __break(1u);
LABEL_304:
  __break(1u);
LABEL_305:
  __break(1u);
LABEL_306:
  __break(1u);
LABEL_307:
  __break(1u);
LABEL_308:
  __break(1u);
LABEL_309:
  __break(1u);
LABEL_310:
  __break(1u);
LABEL_311:
  __break(1u);
LABEL_312:
  __break(1u);
LABEL_313:
  __break(1u);
LABEL_314:
  __break(1u);
}

uint64_t sub_1B2C8290C()
{
  sub_1B2C79858();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for K2TEventTextualizer()
{
  return self;
}

void sub_1B2C82998(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v3 = *a1;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  if (v6 && _swift_stdlib_strtod_clocale()) {
    sub_1B29A2504();
  }
  else {
    char v7 = 0;
  }
  *a2 = v7;
}

uint64_t sub_1B2C829FC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1B2C83184(0, v3, 1, a1);
      }
      return result;
    }
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1B29B69D4(v3 / 2);
  uint64_t v101 = result;
  uint64_t v110 = v6;
  uint64_t v107 = v3;
  uint64_t v99 = a1;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    unint64_t v43 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_110:
    if (v43 < 2)
    {
LABEL_125:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v101 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
      return result;
    }
    uint64_t v91 = *v99;
    while (1)
    {
      unint64_t v92 = v43 - 2;
      if (v43 < 2) {
        break;
      }
      if (!v91) {
        goto LABEL_157;
      }
      uint64_t v93 = *(void *)(v9 + 32 + 16 * v92);
      uint64_t v94 = *(void *)(v9 + 32 + 16 * (v43 - 1) + 8);
      uint64_t result = sub_1B2C832C0((char *)(v91 + 104 * v93), (char *)(v91 + 104 * *(void *)(v9 + 32 + 16 * (v43 - 1))), v91 + 104 * v94, v110);
      if (v1) {
        goto LABEL_122;
      }
      if (v94 < v93) {
        goto LABEL_143;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B2DCA54C();
        uint64_t v9 = result;
      }
      if (v92 >= *(void *)(v9 + 16)) {
        goto LABEL_144;
      }
      uint64_t v95 = (void *)(v9 + 32 + 16 * v92);
      *uint64_t v95 = v93;
      v95[1] = v94;
      unint64_t v96 = *(void *)(v9 + 16);
      if (v43 > v96) {
        goto LABEL_145;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v43 - 1)), (const void *)(v9 + 32 + 16 * v43), 16 * (v96 - v43));
      *(void *)(v9 + 16) = v96 - 1;
      unint64_t v43 = v96 - 1;
      uint64_t v3 = v107;
      if (v96 <= 2) {
        goto LABEL_125;
      }
    }
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
    goto LABEL_148;
  }
  uint64_t v100 = v5;
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v97 = *a1 - 104;
  uint64_t v98 = *a1 + 8;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v10 = v7 + 1;
    uint64_t v106 = v7;
    if (v7 + 1 >= v3) {
      goto LABEL_36;
    }
    uint64_t v11 = v7 + 1;
    uint64_t v12 = (uint64_t *)(v8 + 104 * v10);
    uint64_t result = *v12;
    uint64_t v13 = v12[1];
    uint64_t v14 = (void *)(v8 + 104 * v7);
    if (result == *v14 && v13 == v14[1])
    {
      uint64_t v17 = v7 + 2;
      if (v7 + 2 >= v3) {
        goto LABEL_35;
      }
      int v16 = 0;
    }
    else
    {
      uint64_t result = sub_1B2E837A8();
      int v16 = result;
      uint64_t v17 = v7 + 2;
      if (v7 + 2 >= v3) {
        goto LABEL_24;
      }
    }
    uint64_t v18 = (void *)(v98 + 104 * v17);
    uint64_t v19 = v11;
    do
    {
      uint64_t result = *(v18 - 1);
      uint64_t v20 = (void *)(v8 + 104 * v19);
      if (result == *v20 && *v18 == v20[1])
      {
        if ((v16 & 1) == 0) {
          goto LABEL_21;
        }
        uint64_t v7 = v106;
        uint64_t v3 = v107;
LABEL_27:
        if (v17 >= v7)
        {
          if (v7 < v17)
          {
            uint64_t v120 = v8;
            uint64_t v23 = v7;
            uint64_t v24 = 104 * v17;
            uint64_t v25 = v17;
            uint64_t v26 = v23;
            uint64_t v27 = 104 * v23;
            do
            {
              if (v26 != --v25)
              {
                if (!v120) {
                  goto LABEL_156;
                }
                long long v113 = *(_OWORD *)(v120 + v27);
                uint64_t v28 = v120 + v24;
                uint64_t v29 = *(void *)(v120 + v27 + 16);
                uint64_t v30 = *(void *)(v120 + v27 + 24);
                __int16 v111 = *(_WORD *)(v120 + v27 + 32);
                uint64_t v117 = *(void *)(v120 + v27 + 88);
                __int16 v115 = *(_WORD *)(v120 + v27 + 96);
                long long v108 = *(_OWORD *)(v120 + v27 + 40);
                long long v102 = *(_OWORD *)(v120 + v27 + 72);
                long long v104 = *(_OWORD *)(v120 + v27 + 56);
                uint64_t result = (uint64_t)memmove((void *)(v120 + v27), (const void *)(v120 + v24 - 104), 0x68uLL);
                *(_OWORD *)(v28 - 104) = v113;
                *(void *)(v28 - 88) = v29;
                *(void *)(v28 - 80) = v30;
                *(_WORD *)(v28 - 72) = v111;
                *(_OWORD *)(v28 - 64) = v108;
                *(_OWORD *)(v28 - 48) = v104;
                *(_OWORD *)(v28 - 32) = v102;
                *(void *)(v28 - 16) = v117;
                *(_WORD *)(v28 - 8) = v115;
              }
              ++v26;
              v24 -= 104;
              v27 += 104;
            }
            while (v26 < v25);
            uint64_t v10 = v17;
            uint64_t v7 = v106;
            uint64_t v3 = v107;
            uint64_t v8 = v120;
            goto LABEL_36;
          }
LABEL_35:
          uint64_t v10 = v17;
          goto LABEL_36;
        }
        goto LABEL_152;
      }
      uint64_t result = sub_1B2E837A8();
      if ((v16 ^ result)) {
        goto LABEL_23;
      }
LABEL_21:
      v18 += 13;
      uint64_t v22 = v17 + 1;
      uint64_t v19 = v17;
      uint64_t v17 = v22;
    }
    while (v22 < v107);
    uint64_t v17 = v22;
LABEL_23:
    uint64_t v7 = v106;
    uint64_t v3 = v107;
LABEL_24:
    uint64_t v10 = v17;
    if (v16) {
      goto LABEL_27;
    }
LABEL_36:
    uint64_t v31 = v10;
    if (v10 >= v3) {
      goto LABEL_56;
    }
    uint64_t v32 = v10 - v7;
    if (__OFSUB__(v31, v7)) {
      goto LABEL_147;
    }
    if (v32 >= v100) {
      goto LABEL_56;
    }
    if (__OFADD__(v7, v100)) {
      goto LABEL_150;
    }
    if (v7 + v100 >= v3) {
      uint64_t v33 = v3;
    }
    else {
      uint64_t v33 = v7 + v100;
    }
    if (v33 < v7) {
      goto LABEL_151;
    }
    if (v31 != v33)
    {
      uint64_t v121 = v8;
      uint64_t v103 = v9;
      uint64_t v34 = v97 + 104 * v31;
      uint64_t v105 = v33;
      do
      {
        uint64_t v109 = v34;
        do
        {
          uint64_t result = *(void *)(v34 + 104);
          if (result == *(void *)v34 && *(void *)(v34 + 112) == *(void *)(v34 + 8)) {
            break;
          }
          uint64_t result = sub_1B2E837A8();
          if ((result & 1) == 0) {
            break;
          }
          if (!v121) {
            goto LABEL_154;
          }
          uint64_t v36 = *(void *)(v34 + 120);
          uint64_t v37 = *(void *)(v34 + 128);
          __int16 v38 = *(_WORD *)(v34 + 136);
          uint64_t v39 = *(void *)(v34 + 192);
          __int16 v40 = *(_WORD *)(v34 + 200);
          long long v116 = *(_OWORD *)(v34 + 144);
          long long v118 = *(_OWORD *)(v34 + 104);
          long long v112 = *(_OWORD *)(v34 + 176);
          long long v114 = *(_OWORD *)(v34 + 160);
          uint64_t result = (uint64_t)memcpy((void *)(v34 + 104), (const void *)v34, 0x68uLL);
          *(_OWORD *)uint64_t v34 = v118;
          *(void *)(v34 + 16) = v36;
          *(void *)(v34 + 24) = v37;
          *(_WORD *)(v34 + 32) = v38;
          *(_OWORD *)(v34 + 40) = v116;
          *(_OWORD *)(v34 + 56) = v114;
          *(_OWORD *)(v34 + 72) = v112;
          *(void *)(v34 + 88) = v39;
          *(_WORD *)(v34 + 96) = v40;
          v34 -= 104;
          ++v7;
        }
        while (v31 != v7);
        ++v31;
        uint64_t v34 = v109 + 104;
        uint64_t v7 = v106;
      }
      while (v31 != v105);
      uint64_t v31 = v105;
      uint64_t v9 = v103;
      uint64_t v8 = v121;
    }
LABEL_56:
    if (v31 < v7) {
      goto LABEL_146;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v42 = *(void *)(v9 + 16);
    unint64_t v41 = *(void *)(v9 + 24);
    unint64_t v43 = v42 + 1;
    uint64_t v119 = v31;
    if (v42 >= v41 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454((char *)(v41 > 1), v42 + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v43;
    uint64_t v44 = v9 + 32;
    uint64_t v45 = (uint64_t *)(v9 + 32 + 16 * v42);
    *uint64_t v45 = v7;
    v45[1] = v119;
    if (v42) {
      break;
    }
    unint64_t v43 = 1;
LABEL_104:
    uint64_t v3 = v107;
    uint64_t v7 = v119;
    if (v119 >= v107) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v46 = v43 - 1;
    if (v43 >= 4)
    {
      unint64_t v51 = v44 + 16 * v43;
      uint64_t v52 = *(void *)(v51 - 64);
      uint64_t v53 = *(void *)(v51 - 56);
      BOOL v57 = __OFSUB__(v53, v52);
      uint64_t v54 = v53 - v52;
      if (v57) {
        goto LABEL_131;
      }
      uint64_t v56 = *(void *)(v51 - 48);
      uint64_t v55 = *(void *)(v51 - 40);
      BOOL v57 = __OFSUB__(v55, v56);
      uint64_t v49 = v55 - v56;
      char v50 = v57;
      if (v57) {
        goto LABEL_132;
      }
      unint64_t v58 = v43 - 2;
      char v59 = (uint64_t *)(v44 + 16 * (v43 - 2));
      uint64_t v61 = *v59;
      uint64_t v60 = v59[1];
      BOOL v57 = __OFSUB__(v60, v61);
      uint64_t v62 = v60 - v61;
      if (v57) {
        goto LABEL_133;
      }
      BOOL v57 = __OFADD__(v49, v62);
      uint64_t v63 = v49 + v62;
      if (v57) {
        goto LABEL_135;
      }
      if (v63 >= v54)
      {
        uint64_t v81 = (uint64_t *)(v44 + 16 * v46);
        uint64_t v83 = *v81;
        uint64_t v82 = v81[1];
        BOOL v57 = __OFSUB__(v82, v83);
        uint64_t v84 = v82 - v83;
        if (v57) {
          goto LABEL_141;
        }
        BOOL v74 = v49 < v84;
        goto LABEL_93;
      }
    }
    else
    {
      if (v43 != 3)
      {
        uint64_t v75 = *(void *)(v9 + 32);
        uint64_t v76 = *(void *)(v9 + 40);
        BOOL v57 = __OFSUB__(v76, v75);
        uint64_t v68 = v76 - v75;
        char v69 = v57;
        goto LABEL_87;
      }
      uint64_t v48 = *(void *)(v9 + 32);
      uint64_t v47 = *(void *)(v9 + 40);
      BOOL v57 = __OFSUB__(v47, v48);
      uint64_t v49 = v47 - v48;
      char v50 = v57;
    }
    if (v50) {
      goto LABEL_134;
    }
    unint64_t v58 = v43 - 2;
    uint64_t v64 = (uint64_t *)(v44 + 16 * (v43 - 2));
    uint64_t v66 = *v64;
    uint64_t v65 = v64[1];
    BOOL v67 = __OFSUB__(v65, v66);
    uint64_t v68 = v65 - v66;
    char v69 = v67;
    if (v67) {
      goto LABEL_136;
    }
    uint64_t v70 = (uint64_t *)(v44 + 16 * v46);
    uint64_t v72 = *v70;
    uint64_t v71 = v70[1];
    BOOL v57 = __OFSUB__(v71, v72);
    uint64_t v73 = v71 - v72;
    if (v57) {
      goto LABEL_138;
    }
    if (__OFADD__(v68, v73)) {
      goto LABEL_140;
    }
    if (v68 + v73 >= v49)
    {
      BOOL v74 = v49 < v73;
LABEL_93:
      if (v74) {
        unint64_t v46 = v58;
      }
      goto LABEL_95;
    }
LABEL_87:
    if (v69) {
      goto LABEL_137;
    }
    uint64_t v77 = (uint64_t *)(v44 + 16 * v46);
    uint64_t v79 = *v77;
    uint64_t v78 = v77[1];
    BOOL v57 = __OFSUB__(v78, v79);
    uint64_t v80 = v78 - v79;
    if (v57) {
      goto LABEL_139;
    }
    if (v80 < v68) {
      goto LABEL_104;
    }
LABEL_95:
    unint64_t v85 = v46 - 1;
    if (v46 - 1 >= v43)
    {
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
      goto LABEL_142;
    }
    if (!v8) {
      goto LABEL_155;
    }
    uint64_t v86 = (uint64_t *)(v44 + 16 * v85);
    uint64_t v87 = *v86;
    uint64_t v88 = (void *)(v44 + 16 * v46);
    uint64_t v89 = v88[1];
    uint64_t result = sub_1B2C832C0((char *)(v8 + 104 * *v86), (char *)(v8 + 104 * *v88), v8 + 104 * v89, v110);
    if (v1) {
      break;
    }
    if (v89 < v87) {
      goto LABEL_128;
    }
    if (v46 > *(void *)(v9 + 16)) {
      goto LABEL_129;
    }
    *uint64_t v86 = v87;
    *(void *)(v44 + 16 * v85 + 8) = v89;
    unint64_t v90 = *(void *)(v9 + 16);
    if (v46 >= v90) {
      goto LABEL_130;
    }
    unint64_t v43 = v90 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v44 + 16 * v46), v88 + 2, 16 * (v90 - 1 - v46));
    *(void *)(v9 + 16) = v90 - 1;
    if (v90 <= 2) {
      goto LABEL_104;
    }
  }
LABEL_122:
  uint64_t result = swift_bridgeObjectRelease();
  if (v107 < -1) {
    goto LABEL_149;
  }
  *(void *)(v101 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C83184(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v14 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v20 = *a4;
    uint64_t v5 = *a4 + 104 * a3 - 104;
    while (2)
    {
      uint64_t v6 = v14;
      uint64_t v15 = v5;
      do
      {
        uint64_t result = *(void *)(v5 + 104);
        if (result == *(void *)v5 && *(void *)(v5 + 112) == *(void *)(v5 + 8)) {
          break;
        }
        uint64_t result = sub_1B2E837A8();
        if ((result & 1) == 0) {
          break;
        }
        if (!v20)
        {
          __break(1u);
          return result;
        }
        uint64_t v8 = *(void *)(v5 + 120);
        uint64_t v9 = *(void *)(v5 + 128);
        __int16 v10 = *(_WORD *)(v5 + 136);
        uint64_t v11 = *(void *)(v5 + 192);
        __int16 v12 = *(_WORD *)(v5 + 200);
        long long v18 = *(_OWORD *)(v5 + 144);
        long long v19 = *(_OWORD *)(v5 + 104);
        long long v16 = *(_OWORD *)(v5 + 176);
        long long v17 = *(_OWORD *)(v5 + 160);
        uint64_t result = (uint64_t)memcpy((void *)(v5 + 104), (const void *)v5, 0x68uLL);
        *(_OWORD *)uint64_t v5 = v19;
        *(void *)(v5 + 16) = v8;
        *(void *)(v5 + 24) = v9;
        *(_WORD *)(v5 + 32) = v10;
        *(_OWORD *)(v5 + 40) = v18;
        *(_OWORD *)(v5 + 56) = v17;
        *(_OWORD *)(v5 + 72) = v16;
        *(void *)(v5 + 88) = v11;
        *(_WORD *)(v5 + 96) = v12;
        v5 -= 104;
        ++v6;
      }
      while (v4 != v6);
      ++v4;
      uint64_t v5 = v15 + 104;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1B2C832C0(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 104;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 104;
  if (v9 >= v11)
  {
    sub_1B29BE120(a2, (uint64_t)(a3 - (void)a2) / 104, a4);
    unint64_t v12 = (unint64_t)&v4[104 * v11];
    if (v7 >= v6 || v10 < 104) {
      goto LABEL_43;
    }
    long long v16 = (char *)(a3 - 104);
    while (1)
    {
      long long v17 = v16 + 104;
      long long v18 = (char *)(v12 - 104);
      BOOL v19 = *(void *)(v12 - 104) == *((void *)v6 - 13) && *(void *)(v12 - 96) == *((void *)v6 - 12);
      if (v19 || (sub_1B2E837A8() & 1) == 0)
      {
        BOOL v21 = v17 != (char *)v12 || (unint64_t)v16 >= v12;
        v12 -= 104;
        if (!v21) {
          goto LABEL_39;
        }
      }
      else
      {
        BOOL v20 = v17 != v6 || v16 >= v6;
        long long v18 = v6 - 104;
        v6 -= 104;
        if (!v20) {
          goto LABEL_39;
        }
      }
      memmove(v16, v18, 0x68uLL);
LABEL_39:
      v16 -= 104;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_43;
      }
    }
  }
  sub_1B29BE120(a1, (a2 - a1) / 104, a4);
  unint64_t v12 = (unint64_t)&v4[104 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 104)
  {
    while (1)
    {
      BOOL v13 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v13 && (sub_1B2E837A8() & 1) != 0) {
        break;
      }
      uint64_t v14 = v4;
      BOOL v13 = v7 == v4;
      v4 += 104;
      if (!v13) {
        goto LABEL_13;
      }
LABEL_14:
      v7 += 104;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    uint64_t v14 = v6;
    BOOL v13 = v7 == v6;
    v6 += 104;
    if (v13) {
      goto LABEL_14;
    }
LABEL_13:
    memmove(v7, v14, 0x68uLL);
    goto LABEL_14;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_43:
  sub_1B29BE120(v4, (uint64_t)(v12 - (void)v4) / 104, v6);
  return 1;
}

unint64_t sub_1B2C83484()
{
  unint64_t result = qword_1E9C41C80;
  if (!qword_1E9C41C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41C80);
  }
  return result;
}

uint64_t sub_1B2C834D0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

uint64_t sub_1B2C83530(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1B29A3EB4(a3);
  sub_1B2999864();
  uint64_t v4 = sub_1B2999874();
  v5(v4);
  return a2;
}

void *sub_1B2C83588@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X2>, unsigned char *a2@<X8>)
{
  unint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1B2C835CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2A5347C(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(unsigned __int8 *)(v0 + 112), *(unsigned char *)(v0 + 113));

  return MEMORY[0x1F4186498](v0, 114, 7);
}

uint64_t sub_1B2C83634(void *a1)
{
  return sub_1B2C7C5D0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24)) & 1;
}

BOOL sub_1B2C83654(void *a1)
{
  return sub_1B2C7C540(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1B2C83674(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2C836C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, char a3)
{
  uint64_t v5 = *(void *)(a2 - 256);
  uint64_t v6 = *(void *)(v3 - 408);
  uint64_t v7 = *(void *)(v3 - 400);
  uint64_t v8 = *(void *)(v3 - 392);
  uint64_t v9 = *(void *)(v3 - 384);
  uint64_t v10 = *(void *)(v3 - 376);
  uint64_t v11 = *(unsigned int *)(v3 - 368);
  return sub_1B2A5347C(a1, v5, v6, v7, v8, v9, v10, v11, a3);
}

uint64_t sub_1B2C83704(uint64_t a1)
{
  *(void *)(v2 - 416) = v1;
  uint64_t v3 = a1 + v1;
  uint64_t v5 = *(void *)(a1 + v1 + 32);
  uint64_t result = *(void *)(a1 + v1 + 40);
  *(void *)(v2 - 360) = v5;
  *(void *)(v2 - 352) = result;
  *(void *)(v2 - 448) = *(void *)(v3 + 48);
  *(_DWORD *)(v2 - 456) = *(unsigned __int16 *)(v3 + 64);
  return result;
}

__n128 sub_1B2C83744()
{
  *(void *)(v0 + 16) = v1;
  uint64_t v9 = (__n128 *)(v0 + (v6 << 6));
  __n128 result = *(__n128 *)(v8 - 336);
  _OWORD v9[2] = result;
  v9[3].n128_u64[0] = v4;
  v9[3].n128_u64[1] = v5;
  v9[4].n128_u64[0] = v3;
  v9[4].n128_u64[1] = v7;
  v9[5].n128_u64[0] = v2;
  v9[5].n128_u8[8] = *(_DWORD *)(v8 - 312);
  return result;
}

uint64_t sub_1B2C83784(float a1)
{
  *uint64_t v1 = a1;
  *(void *)(v3 - 272) = v1 + 1;
  uint64_t v5 = *(void *)(v2 + 120);
  uint64_t v6 = *(void *)(v2 + 128);
  uint64_t v7 = *(void *)(v2 + 136);
  uint64_t v8 = *(void *)(v2 + 144);
  uint64_t v9 = *(void *)(v2 + 152);
  char v10 = *(unsigned char *)(v2 + 160);
  *(void *)(v3 - 264) = *(void *)(v2 + 112);
  *(void *)(v3 - 256) = v5;
  *(void *)(v3 - 248) = v6;
  *(void *)(v3 - 240) = v7;
  *(void *)(v3 - 232) = v8;
  *(void *)(v3 - 224) = v9;
  *(unsigned char *)(v3 - 216) = v10;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C837D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  *(void *)(v14 - 400) = v11;
  *(void *)(v14 - 392) = v10;
  *(void *)(v14 - 384) = v13;
  *(void *)(v14 - 376) = v12;
  *(_DWORD *)(v14 - 368) = v9;
  return sub_1B2A53774(a1, a2, a3, v11, v10, v13, v12, v9, a9);
}

uint64_t sub_1B2C8381C()
{
  return sub_1B2E82518();
}

void sub_1B2C83838()
{
  uint64_t v1 = *(void *)(v0 - 224);
  uint64_t v2 = *(void *)(v0 - 216);
  uint64_t v3 = *(void *)(v0 - 208);
  __int16 v4 = *(_WORD *)(v0 - 200);
  *(void *)(v0 - 272) = *(void *)(v0 - 232);
  *(void *)(v0 - 264) = v1;
  *(void *)(v0 - 256) = v2;
  *(void *)(v0 - 248) = v3;
  *(_WORD *)(v0 - 240) = v4;
}

void sub_1B2C83868(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1B2C83888@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(v1 - 336) = *(_OWORD *)(a1 + 72);
  *(_DWORD *)(v1 - 312) = *(unsigned __int8 *)(a1 + 128);
  return swift_bridgeObjectRetain();
}

void sub_1B2C838C0()
{
  sub_1B29B7288();
}

void sub_1B2C838E4()
{
  sub_1B29B7288();
}

uint64_t sub_1B2C83908@<X0>(void *a1@<X8>)
{
  *(void *)(v3 - 264) = *a1;
  *(void *)(v3 - 272) = *v1;
  *(void *)(v3 - 280) = *v2;
  return swift_bridgeObjectRetain();
}

void sub_1B2C8393C()
{
  sub_1B29BFED4();
}

uint64_t sub_1B2C83960(uint64_t a1)
{
  *(void *)(v1 - 264) = a1;
  return sub_1B2E82FB8();
}

uint64_t sub_1B2C8399C()
{
  return swift_arrayDestroy();
}

BOOL sub_1B2C839C8(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1B2C839E4()
{
  return swift_slowAlloc();
}

void sub_1B2C83A00()
{
  *(void *)(v1 + 16) = v3;
  uint64_t v5 = v1 + 104 * v4;
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v0;
}

void sub_1B2C83A14(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 64) = *(_DWORD *)(v1 - 256);
}

uint64_t sub_1B2C83A20@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 152) = a1;
  *(void *)(v2 - 144) = v1;
  return sub_1B2E82518();
}

uint64_t sub_1B2C83A40()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B2C83A58()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2C83A70()
{
  *(void *)(v2 - 432) = v1;
  uint64_t result = v1;
  *(void *)(v2 - 424) = v0;
  return result;
}

uint64_t sub_1B2C83A90()
{
  return *(void *)(*(void *)(v0 - 496) + 120);
}

uint64_t sub_1B2C83AD0()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2C83AE8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C83B00()
{
  return 0;
}

uint64_t sub_1B2C83B0C(uint64_t a1)
{
  return *(void *)(a1 + v1 + 40);
}

uint64_t sub_1B2C83B18()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_1B2C83B30(uint64_t a1@<X8>)
{
  *(void *)(v2 - 344) = v1 + a1;
}

void sub_1B2C83B58()
{
  sub_1B29B71B0();
}

uint64_t sub_1B2C83B7C()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2C83BB0()
{
  return swift_slowAlloc();
}

void sub_1B2C83BE4()
{
  sub_1B29B7048();
}

uint64_t sub_1B2C83C08()
{
  return swift_retain_n();
}

uint64_t sub_1B2C83C2C()
{
  return 0;
}

uint64_t sub_1B2C83C8C@<X0>(unint64_t a1@<X8>)
{
  return sub_1B29B9368(a1 > 1, v1, 1, v2);
}

void sub_1B2C83CB0()
{
  sub_1B29B71B0();
}

void sub_1B2C83CD4()
{
  sub_1B29B7048();
}

void sub_1B2C83CF8()
{
  sub_1B29BFED4();
}

void sub_1B2C83D1C()
{
  sub_1B29BFF10();
}

void sub_1B2C83D40()
{
  sub_1B29BFED4();
}

void sub_1B2C83D64()
{
  sub_1B29BFF10();
}

void sub_1B2C83D88()
{
  sub_1B2C7B948();
}

uint64_t sub_1B2C83DAC()
{
  return sub_1B2A53718(v0, v1, 0);
}

uint64_t sub_1B2C83DC8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C83DE0()
{
  return sub_1B2E837A8();
}

void sub_1B2C83E04()
{
  *(void *)(v2 - 440) = v1;
  *(_DWORD *)(v2 - 448) = *(unsigned __int16 *)(v0 + 64);
}

uint64_t sub_1B2C83E1C()
{
  return sub_1B2E82538();
}

void sub_1B2C83E34()
{
  sub_1B29BFF10();
}

void sub_1B2C83E58()
{
  sub_1B29BFF10();
}

uint64_t sub_1B2C83E7C()
{
  return 0;
}

uint64_t sub_1B2C83E94()
{
  *(_DWORD *)(v1 - 256) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C83EB8()
{
  *(_DWORD *)(v1 - 256) = v0;
  return swift_bridgeObjectRetain();
}

void sub_1B2C83EDC()
{
  *(void *)(v1 - 304) = *v0;
}

uint64_t sub_1B2C83F58()
{
  uint64_t v4 = *(void *)(v2 - 312);
  return sub_1B2A53718(v4, v0, v1);
}

void sub_1B2C83F78()
{
  *(void *)(v0 - 368) = *(void *)(v0 - 152);
}

id sub_1B2C83F98(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 2968), a1);
}

BOOL sub_1B2C83FB8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

BOOL sub_1B2C83FCC@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1B2C83FF4()
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 1, 1, v1);
}

uint64_t sub_1B2C84014()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C8402C()
{
  return swift_allocObject();
}

uint64_t sub_1B2C84064()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B2C8407C()
{
  return swift_release_n();
}

uint64_t sub_1B2C84094()
{
  return sub_1B29B9368(0, v0 + 1, 1, v1);
}

void sub_1B2C840B4()
{
  *(void *)(v0 + 16) = v2;
  uint64_t v7 = (void *)(v0 + (v3 << 6));
  v7[4] = v6;
  v7[5] = v1;
  v7[6] = v4;
  v7[7] = v5;
}

uint64_t sub_1B2C840D4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  sub_1B2A4B170();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v79 = sub_1B2E82148();
  uint64_t v3 = v1[2];
  if (!v3)
  {
LABEL_24:
    uint64_t v19 = v72[5];
    uint64_t v77 = (void *)v72[6];
    uint64_t v78 = sub_1B29AEC7C(v72 + 2, v19);
    uint64_t v94 = v2;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v21 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v23 = swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    v88[0] = AssociatedTypeWitness;
    v88[1] = v21;
    v88[2] = AssociatedConformanceWitness;
    uint64_t v89 = v23;
    uint64_t v90 = swift_getAssociatedConformanceWitness();
    uint64_t v83 = type metadata accessor for EntitySequence();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_1B29D1C70((uint64_t *)&v80);
    sub_1B29A3EB4(&qword_1E9C38970);
    sub_1B2C84F88();
    GraphObjectBareContextProtocol.entities<A>(for:)();
    if (v76)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1B2C84FDC((uint64_t)&v80);
    }
    uint64_t v73 = 0;
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_1B29AEC7C(&v80, v83);
    MEMORY[0x1F4188790](v25);
    (*(void (**)(char *))(v27 + 16))((char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v92 = swift_getAssociatedTypeWitness();
    uint64_t v93 = swift_getAssociatedConformanceWitness();
    sub_1B29D1C70(v91);
    sub_1B2E82668();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v80);
    unint64_t v70 = (unint64_t)"nProcessService";
    unint64_t v69 = 0x80000001B2E9E790;
    while (1)
    {
      while (1)
      {
        sub_1B2A49CD8((uint64_t)v91, v92);
        sub_1B2E82FA8();
        uint64_t v28 = v87;
        if ((v87 & 0xFF00) == 0xFE00)
        {
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v91);
          return v79;
        }
        uint64_t v30 = (uint64_t)v80;
        uint64_t v29 = v81;
        uint64_t v31 = v82;
        uint64_t v32 = v83;
        uint64_t v34 = WitnessTable;
        uint64_t v33 = v85;
        uint64_t v35 = v86;
        uint64_t v77 = (void *)v85;
        uint64_t v78 = v81;
        uint64_t v76 = v86;
        uint64_t v75 = WitnessTable;
        uint64_t v74 = v83;
        if (HIBYTE(v87) <= 0xFEu) {
          break;
        }
LABEL_39:
        uint64_t v52 = v79;
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v80 = (void *)v52;
        unint64_t v53 = sub_1B29DAE70();
        if (__OFADD__(*(void *)(v52 + 16), (v54 & 1) == 0)) {
          goto LABEL_55;
        }
        unint64_t v55 = v53;
        char v56 = v54;
        sub_1B29A3EB4(&qword_1E9C41C98);
        if (sub_1B2E83398())
        {
          unint64_t v57 = sub_1B29DAE70();
          if ((v56 & 1) != (v58 & 1)) {
            goto LABEL_59;
          }
          unint64_t v55 = v57;
        }
        char v59 = v80;
        uint64_t v79 = (uint64_t)v80;
        if (v56)
        {
          uint64_t v60 = (void *)(v80[7] + 16 * v55);
          *uint64_t v60 = 0xD000000000000011;
          v60[1] = v69;
          swift_bridgeObjectRelease();
        }
        else
        {
          v80[(v55 >> 6) + 8] |= 1 << v55;
          *(void *)(v59[6] + 8 * v55) = v30;
          uint64_t v61 = (void *)(v59[7] + 16 * v55);
          unint64_t v62 = v70 | 0x8000000000000000;
          *uint64_t v61 = 0xD000000000000011;
          v61[1] = v62;
          uint64_t v63 = v59[2];
          BOOL v64 = __OFADD__(v63, 1);
          uint64_t v65 = v63 + 1;
          if (v64) {
            goto LABEL_56;
          }
          v59[2] = v65;
        }
        swift_bridgeObjectRelease();
        sub_1B2C85030(v30, v78, v31, v74, v75, (uint64_t)v77, v76, v28);
      }
      if ((v87 & 0x100) != 0)
      {
        uint64_t v80 = v81;
        sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
        swift_willThrowTypedImpl();
        swift_bridgeObjectRelease();
        return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v91);
      }
      uint64_t v80 = v81;
      uint64_t v81 = (void *)v82;
      uint64_t v82 = v83;
      uint64_t v83 = WitnessTable;
      uint64_t WitnessTable = v85;
      uint64_t v85 = v86;
      LOBYTE(v86) = v87;
      sub_1B2C85064(v29, v31, v32, v34, v33, v35, v87);
      uint64_t v36 = v73;
      sub_1B2C84A5C(v88, &v80, 0);
      if (v36)
      {
        swift_bridgeObjectRelease();
        sub_1B2C85030(v30, v29, v31, v32, v34, v33, v35, v28);
        sub_1B2C85030(v30, v29, v31, v32, v34, v33, v35, v28);
        return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v91);
      }
      uint64_t v73 = 0;
      sub_1B2C85030(v30, v29, v31, v32, v34, v33, v35, v28);
      uint64_t v37 = v89;
      uint64_t v38 = v90;
      sub_1B29AEC7C(v88, v89);
      uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
      if (!v40)
      {
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v88);
        goto LABEL_39;
      }
      uint64_t v41 = v40;
      uint64_t v71 = v31;
      uint64_t v42 = v39;
      uint64_t v43 = v79;
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v80 = (void *)v43;
      unint64_t v44 = sub_1B29DAE70();
      if (__OFADD__(*(void *)(v43 + 16), (v45 & 1) == 0)) {
        goto LABEL_57;
      }
      unint64_t v46 = v44;
      char v47 = v45;
      sub_1B29A3EB4(&qword_1E9C41C98);
      if (sub_1B2E83398())
      {
        unint64_t v48 = sub_1B29DAE70();
        if ((v47 & 1) != (v49 & 1)) {
          goto LABEL_59;
        }
        unint64_t v46 = v48;
      }
      char v50 = v80;
      uint64_t v79 = (uint64_t)v80;
      if (v47)
      {
        unint64_t v51 = (uint64_t *)(v80[7] + 16 * v46);
        uint64_t *v51 = v42;
        v51[1] = v41;
        swift_bridgeObjectRelease();
      }
      else
      {
        v80[(v46 >> 6) + 8] |= 1 << v46;
        *(void *)(v50[6] + 8 * v46) = v30;
        uint64_t v66 = (uint64_t *)(v50[7] + 16 * v46);
        *uint64_t v66 = v42;
        v66[1] = v41;
        uint64_t v67 = v50[2];
        BOOL v64 = __OFADD__(v67, 1);
        uint64_t v68 = v67 + 1;
        if (v64) {
          goto LABEL_58;
        }
        v50[2] = v68;
      }
      swift_bridgeObjectRelease();
      sub_1B2C85030(v30, v78, v71, v74, v75, (uint64_t)v77, v76, v28);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v88);
    }
  }
  uint64_t v4 = (uint64_t)(v1 + 4);
  swift_bridgeObjectRetain();
  unint64_t v5 = 0;
  uint64_t v77 = v1 + 4;
  uint64_t v78 = v1;
  while (v5 < v1[2])
  {
    uint64_t v6 = v4 + 104 * v5;
    int v7 = *(unsigned __int8 *)(v6 + 97);
    if (v7 == 1)
    {
      uint64_t v10 = *(void *)(v6 + 56);
      uint64_t v11 = *(void *)(v10 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = (unsigned char *)(v10 + 88);
        do
        {
          if (*v12)
          {
            uint64_t v13 = *((void *)v12 - 2);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B29B7148();
              uint64_t v2 = v15;
            }
            unint64_t v14 = *(void *)(v2 + 16);
            if (v14 >= *(void *)(v2 + 24) >> 1)
            {
              sub_1B29B7148();
              uint64_t v2 = v16;
            }
            *(void *)(v2 + 16) = v14 + 1;
            *(void *)(v2 + 8 * v14 + 32) = v13;
          }
          v12 += 64;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease();
      }
      uint64_t v4 = (uint64_t)v77;
      uint64_t v1 = v78;
    }
    else if (v7 == 2)
    {
      uint64_t v8 = *(void *)(v6 + 40);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B7148();
        uint64_t v2 = v17;
      }
      unint64_t v9 = *(void *)(v2 + 16);
      if (v9 >= *(void *)(v2 + 24) >> 1)
      {
        sub_1B29B7148();
        uint64_t v2 = v18;
      }
      *(void *)(v2 + 16) = v9 + 1;
      *(void *)(v2 + 8 * v9 + 32) = v8;
    }
    if (++v5 == v3)
    {
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2C84A5C@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v9 = a1[5];
  char v11 = *((unsigned char *)a1 + 48);
  if (a2)
  {
    uint64_t v20 = *a1;
    uint64_t v21 = v6;
    uint64_t v22 = v7;
    uint64_t v23 = v8;
    uint64_t v24 = v10;
    uint64_t v25 = v9;
    char v26 = v11;
    uint64_t result = sub_1B2C840D4((uint64_t)&v20);
    if (v4) {
      return result;
    }
  }
  else
  {
    sub_1B2A4B170();
    sub_1B2E82148();
  }
  uint64_t v20 = v5;
  uint64_t v21 = v6;
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  uint64_t v24 = v10;
  uint64_t v25 = v9;
  char v26 = v11;
  uint64_t v13 = (void *)v3[8];
  unint64_t v14 = (void *)v3[9];
  uint64_t v15 = (void *)v3[10];
  v19[0] = v3[7];
  v19[1] = v13;
  v19[2] = v14;
  void v19[3] = v15;
  swift_retain();
  id v16 = v13;
  id v17 = v14;
  id v18 = v15;
  sub_1B2C8D630((uint64_t)&v20, (uint64_t)v19, v27);

  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1B2C84B80(uint64_t *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *a1;
  sub_1B29AEC7C((void *)(v3 + 16), *(void *)(v3 + 40));
  uint64_t v13 = v7;
  GraphObjectBareContextProtocol.entity(for:)();
  if (!v4)
  {
    uint64_t v8 = v12;
    if (v12)
    {
      uint64_t v9 = v11;
      sub_1B2C84A5C(&v11, a2 & 1, a3);
      sub_1B2C84F38(v9, v8);
    }
    else
    {
      sub_1B2C84EEC();
      swift_allocError();
      *uint64_t v10 = 0;
      swift_willThrow();
    }
  }
}

uint64_t sub_1B2C84CB4(uint64_t *a1)
{
  uint64_t v6 = *a1;
  sub_1B2C84B80(&v6, 0, v7);
  if (!v2)
  {
    uint64_t v3 = v8;
    uint64_t v4 = v9;
    sub_1B29AEC7C(v7, v8);
    uint64_t v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v7);
  }
  return v1;
}

uint64_t sub_1B2C84D50(void *a1, uint64_t a2)
{
  sub_1B299DC1C(a1, a2);
  if (!v3)
  {
    uint64_t v5 = v9;
    uint64_t v6 = v10;
    sub_1B29AEC7C(v8, v9);
    uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(a2, v5, v6);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v8);
  }
  return v2;
}

void sub_1B2C84DE0(void *a1, uint64_t a2)
{
  sub_1B299DC1C(a1, a2);
  if (!v2)
  {
    uint64_t v3 = v6;
    uint64_t v4 = v7;
    sub_1B29AEC7C(v5, v6);
    (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v5);
  }
}

uint64_t sub_1B2C84E64()
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = *(void **)(v0 + 72);

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for K2TInProcessService()
{
  return self;
}

unint64_t sub_1B2C84EEC()
{
  unint64_t result = qword_1E9C41C90;
  if (!qword_1E9C41C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41C90);
  }
  return result;
}

uint64_t sub_1B2C84F38(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1B2C84F88()
{
  unint64_t result = qword_1E9C38978;
  if (!qword_1E9C38978)
  {
    sub_1B29C3588(&qword_1E9C38970);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38978);
  }
  return result;
}

uint64_t sub_1B2C84FDC(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x1B3EB30C0);
  }
  return result;
}

void sub_1B2C85030(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a8 & 0xFF00) != 0xFE00) {
    sub_1B2B877C8(a2, a3, a4, a5, a6, a7, a8);
  }
}

id sub_1B2C85064(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (BYTE1(a7) != 255) {
    return sub_1B2C8507C(result, a2, a3, a4, a5, a6, a7, BYTE1(a7) & 1);
  }
  return result;
}

id sub_1B2C8507C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8)
  {
    return a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_1B2C850D8(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v8 = sub_1B29D1C70((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v8, a1, a4);
  uint64_t v9 = swift_allocObject();
  sub_1B29D1D20(&v12, v9 + 16);
  long long v10 = a2[1];
  *(_OWORD *)(v9 + 56) = *a2;
  *(_OWORD *)(v9 + 72) = v10;
  return v9;
}

uint64_t sub_1B2C85180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v6 = sub_1B29D1C70(v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v6, a1, a3);
  uint64_t v7 = sub_1B29AEC7C(v39, v40);
  MEMORY[0x1F4188790](v7);
  (*(void (**)(char *))(v9 + 16))((char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1B29D1C70(v36);
  sub_1B2E82668();
  sub_1B2A49CD8((uint64_t)v36, AssociatedTypeWitness);
  sub_1B2E82FA8();
  if (v35)
  {
    uint64_t v11 = MEMORY[0x1E4FBC868];
LABEL_17:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v36);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v39);
    return v11;
  }
  else
  {
    uint64_t v11 = MEMORY[0x1E4FBC868];
    uint64_t v12 = (uint64_t)v34;
    *(void *)&long long v10 = 136315138;
    long long v33 = v10;
    v32[1] = MEMORY[0x1E4FBC840] + 8;
    while (1)
    {
      v32[0] = v11;
      while (1)
      {
        uint64_t v34 = (void *)v12;
        uint64_t v13 = sub_1B2C84CB4((uint64_t *)&v34);
        uint64_t v15 = v14;
        if (v14) {
          break;
        }
        sub_1B2A49CD8((uint64_t)v36, AssociatedTypeWitness);
        sub_1B2E82FA8();
        uint64_t v12 = (uint64_t)v34;
        if (v35)
        {
          uint64_t v11 = v32[0];
          goto LABEL_17;
        }
      }
      uint64_t v16 = v13;
      uint64_t v17 = v32[0];
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = (void *)v17;
      unint64_t v18 = sub_1B29DAE70();
      if (__OFADD__(*(void *)(v17 + 16), (v19 & 1) == 0)) {
        break;
      }
      unint64_t v20 = v18;
      char v21 = v19;
      sub_1B29A3EB4(&qword_1E9C41C98);
      if (sub_1B2E83398())
      {
        unint64_t v22 = sub_1B29DAE70();
        if ((v21 & 1) != (v23 & 1)) {
          goto LABEL_20;
        }
        unint64_t v20 = v22;
      }
      uint64_t v24 = v34;
      if (v21)
      {
        uint64_t v25 = (uint64_t)v34;
        char v26 = (uint64_t *)(v34[7] + 16 * v20);
        *char v26 = v16;
        v26[1] = v15;
        swift_bridgeObjectRelease();
      }
      else
      {
        v34[(v20 >> 6) + 8] |= 1 << v20;
        *(void *)(v24[6] + 8 * v20) = v12;
        uint64_t v27 = (uint64_t *)(v24[7] + 16 * v20);
        *uint64_t v27 = v16;
        v27[1] = v15;
        uint64_t v28 = v24[2];
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29) {
          goto LABEL_19;
        }
        uint64_t v25 = (uint64_t)v24;
        v24[2] = v30;
      }
      swift_bridgeObjectRelease();
      sub_1B2A49CD8((uint64_t)v36, AssociatedTypeWitness);
      sub_1B2E82FA8();
      uint64_t v12 = (uint64_t)v34;
      uint64_t v11 = v25;
      if (v35) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_1B2E83858();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B2C856B0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2DCA600();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1B2C896FC(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1B2C8571C(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, _OWORD *a6, void *a7)
{
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  char v15 = *(unsigned char *)(a1 + 56);
  long long v16 = *a4;
  uint64_t v17 = *((void *)a4 + 2);
  uint64_t v18 = *((void *)a4 + 3);
  __int16 v19 = *((_WORD *)a4 + 16);
  *(_OWORD *)(v7 + 112) = *(_OWORD *)a1;
  *(void *)(v7 + 128) = v10;
  *(void *)(v7 + 136) = v11;
  *(void *)(v7 + 144) = v12;
  *(void *)(v7 + 152) = v13;
  *(void *)(v7 + 160) = v14;
  *(unsigned char *)(v7 + 168) = v15;
  *(void *)(v7 + 176) = a2;
  *(void *)(v7 + 184) = a3;
  *(_OWORD *)(v7 + 192) = v16;
  *(void *)(v7 + 208) = v17;
  *(void *)(v7 + 216) = v18;
  *(_WORD *)(v7 + 224) = v19;
  *(void *)&long long v23 = v11;
  *((void *)&v23 + 1) = v12;
  uint64_t v24 = v13;
  uint64_t v25 = v14;
  char v26 = v15;
  long long v20 = a6[1];
  v22[0] = *a6;
  v22[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1B2C7766C(&v23, a5, v22, a7);
}

void sub_1B2C857CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B299B720();
  a19 = v21;
  a20 = v22;
  long long v23 = v20;
  uint64_t v25 = v24;
  uint64_t v26 = sub_1B29A3EB4(&qword_1E9C41C78);
  uint64_t v27 = sub_1B299B0F0(v26);
  MEMORY[0x1F4188790](v27);
  BOOL v29 = (char *)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v30 = type metadata accessor for K2TTextualization();
  MEMORY[0x1F4188790](v30);
  sub_1B299B6D0();
  sub_1B29B1A48(v31);
  uint64_t v32 = v20[16];
  uint64_t v33 = *(void *)(v32 + 16);
  if (!v33)
  {
LABEL_58:
    sub_1B299B738();
    return;
  }
  uint64_t v34 = v97;
  uint64_t v85 = v32 + 32;
  char v35 = (void *)MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  unint64_t v36 = 0;
  uint64_t v86 = 0;
  uint64_t v84 = v35;
  unint64_t v79 = v30;
  uint64_t v80 = v32;
  uint64_t v78 = v20;
  uint64_t v77 = v25;
  uint64_t v76 = v29;
  uint64_t v81 = v33;
  while (1)
  {
    if (v36 >= *(void *)(v32 + 16))
    {
      __break(1u);
      goto LABEL_60;
    }
    uint64_t v37 = (long long *)(v85 + (v36 << 6));
    long long v38 = *v37;
    long long v39 = v37[1];
    long long v40 = v37[2];
    *(_OWORD *)((char *)v34 + 41) = *(long long *)((char *)v37 + 41);
    v97[1] = v39;
    v97[2] = v40;
    v97[0] = v38;
    uint64_t v41 = *(void *)(v25 + 24);
    unint64_t v87 = v36;
    if (v41) {
      break;
    }
    uint64_t v42 = v23[16];
    uint64_t v43 = *(void *)(v42 + 16);
    if (v43)
    {
      sub_1B2C33B50((uint64_t)v97);
      sub_1B2C33B50((uint64_t)v97);
      *(void *)&long long v91 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B29BFE34();
      uint64_t v44 = v91;
      uint64_t v82 = v42;
      uint64_t v34 = (_OWORD *)(v42 + 48);
      do
      {
        uint64_t v45 = *((void *)v34 - 1);
        uint64_t v90 = *((void *)v34 - 2);
        uint64_t v46 = *((void *)v34 + 1);
        uint64_t v89 = *(void *)v34;
        int v88 = *((unsigned __int16 *)v34 + 8);
        uint64_t v32 = *((void *)v34 + 3);
        uint64_t v47 = *((void *)v34 + 4);
        char v48 = *((unsigned char *)v34 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B2A53708(v32, v47, v48);
        *(void *)&long long v91 = v44;
        unint64_t v30 = *(void *)(v44 + 16);
        unint64_t v49 = *(void *)(v44 + 24);
        if (v30 >= v49 >> 1)
        {
          sub_1B299B984(v49);
          sub_1B29BFE34();
          uint64_t v44 = v91;
        }
        uint64_t v95 = &type metadata for Subfact;
        unint64_t v96 = &protocol witness table for Subfact;
        uint64_t v50 = sub_1B2C8BC40();
        *(void *)&long long v94 = v50;
        *(void *)(v50 + 16) = v90;
        *(void *)(v50 + 24) = v45;
        sub_1B2C8BDFC();
        *(void *)(v51 + 32) = v52;
        *(void *)(v51 + 40) = v46;
        *(_WORD *)(v51 + 48) = v88;
        *(void *)(v51 + 56) = v32;
        *(void *)(v51 + 64) = v47;
        *(unsigned char *)(v51 + 72) = v48;
        *(void *)(v44 + 16) = v30 + 1;
        sub_1B29D1D20(&v94, v44 + 40 * v30 + 32);
        v34 += 4;
        --v43;
      }
      while (v43);
      swift_bridgeObjectRelease();
      long long v23 = v78;
      uint64_t v25 = v77;
      BOOL v29 = v76;
      sub_1B2C8BE94();
    }
    else
    {
      sub_1B2C33B50((uint64_t)v97);
      sub_1B2C33B50((uint64_t)v97);
      uint64_t v44 = MEMORY[0x1E4FBC860];
    }
    char v53 = sub_1B2C8A0DC((uint64_t)v97, v44);
    swift_bridgeObjectRelease();
    sub_1B2C33BB0((uint64_t)v97);
    uint64_t v33 = v81;
    if ((v53 & 1) == 0) {
      goto LABEL_15;
    }
    sub_1B2C33BB0((uint64_t)v97);
LABEL_38:
    unint64_t v36 = v87 + 1;
    if (v87 + 1 == v33)
    {
      swift_bridgeObjectRelease();
      sub_1B299B27C();
      goto LABEL_58;
    }
  }
  sub_1B2C33B50((uint64_t)v97);
LABEL_15:
  if (*(void *)(v25 + 24))
  {
    sub_1B29C3B84(v25, (uint64_t)&v91);
  }
  else
  {
    long long v54 = *(_OWORD *)(v25 + 16);
    long long v91 = *(_OWORD *)v25;
    long long v92 = v54;
    uint64_t v93 = *(void *)(v25 + 32);
  }
  if (*((void *)&v92 + 1))
  {
    sub_1B29D1D20(&v91, (uint64_t)&v94);
    sub_1B29AEC7C(&v94, (uint64_t)v95);
    sub_1B2C8BEAC();
    MEMORY[0x1F4188790](v55);
    sub_1B2C8BE84();
    *(void *)(v56 - 16) = v23;
    *(void *)(v56 - 8) = v34;
    sub_1B2C8BE40();
    uint64_t v57 = v86;
    char v58 = sub_1B2E82748();
    uint64_t v86 = v57;
    if ((v58 & 1) == 0)
    {
      sub_1B2C33BB0((uint64_t)v97);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v94);
LABEL_37:
      uint64_t v34 = v97;
      goto LABEL_38;
    }
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v94);
    uint64_t v34 = v97;
  }
  uint64_t v59 = v23[22];
  uint64_t v60 = v23[23];
  uint64_t v95 = &type metadata for Subfact;
  unint64_t v96 = &protocol witness table for Subfact;
  *(void *)&long long v94 = sub_1B2C8BC40();
  sub_1B2C8BF18(v94);
  *(_OWORD *)(v61 + 57) = *(_OWORD *)((char *)v34 + 41);
  char v62 = *(void *)(v25 + 24) == 0;
  swift_bridgeObjectRetain();
  sub_1B2C795F8(v59, v60, &v94, v62, 0, (uint64_t)v29);
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v94);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v29, 1, v30) == 1)
  {
    sub_1B2C8969C((uint64_t)v29);
    goto LABEL_38;
  }
  uint64_t v63 = v83;
  sub_1B2C79920((uint64_t)v29, (uint64_t)v83);
  uint64_t v64 = *v63;
  uint64_t v65 = v63[1];
  uint64_t v66 = v84[2];
  if (!v66) {
    goto LABEL_32;
  }
  BOOL v67 = v84[4] == v64 && v84[5] == v65;
  if (v67 || (sub_1B2C8BCEC() & 1) != 0) {
    goto LABEL_29;
  }
  if (v66 == 1) {
    goto LABEL_32;
  }
  sub_1B2C8BE30((uint64_t)&a13);
  BOOL v72 = v67 && v71 == v65;
  if (v72 || (sub_1B2C8BCEC() & 1) != 0)
  {
LABEL_29:
    sub_1B2C799E8((uint64_t)v83);
    goto LABEL_38;
  }
  if (v66 == 2)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    sub_1B299B27C();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v32 = v80;
      uint64_t v68 = v84;
    }
    else
    {
      sub_1B2C83B00();
      sub_1B29B7048();
      uint64_t v68 = v74;
      uint64_t v32 = v80;
    }
    unint64_t v69 = v68[2];
    if (v69 >= v68[3] >> 1)
    {
      sub_1B2C8BC08();
      uint64_t v68 = v75;
    }
    v68[2] = v69 + 1;
    uint64_t v84 = v68;
    unint64_t v70 = &v68[2 * v69];
    v70[4] = v64;
    v70[5] = v65;
    sub_1B2C799E8((uint64_t)v83);
    goto LABEL_37;
  }
  uint64_t v34 = v84 + 9;
  uint64_t v32 = 2;
  while (1)
  {
    unint64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    BOOL v73 = *((void *)v34 - 1) == v64 && *(void *)v34 == v65;
    if (v73 || (sub_1B2C8BCEC() & 1) != 0)
    {
      sub_1B2C8BE94();
      goto LABEL_29;
    }
    ++v34;
    ++v32;
    BOOL v67 = v30 == v66;
    unint64_t v30 = v79;
    if (v67) {
      goto LABEL_32;
    }
  }
LABEL_60:
  __break(1u);
}

void sub_1B2C85DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B299B720();
  a19 = v21;
  a20 = v22;
  uint64_t v23 = v20;
  v93[0] = v24;
  uint64_t v25 = sub_1B29A3EB4(&qword_1E9C41C78);
  uint64_t v26 = sub_1B299B0F0(v25);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (uint64_t *)((char *)v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = type metadata accessor for K2TTextualization();
  uint64_t v30 = sub_1B299DB5C(v29, (uint64_t)&a10);
  v93[2] = v31;
  MEMORY[0x1F4188790](v30);
  sub_1B2999940();
  sub_1B299B810();
  MEMORY[0x1F4188790](v32);
  sub_1B299B810();
  MEMORY[0x1F4188790](v33);
  sub_1B2AD0E78();
  sub_1B29B1A48(v34);
  *(void *)&v111[0] = *(void *)(v20 + 128);
  sub_1B2C8BC58();
  sub_1B2C856B0((uint64_t *)v111);
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)&v111[0];
  uint64_t v36 = MEMORY[0x1E4FBC860];
  uint64_t v99 = *(void *)(*(void *)&v111[0] + 16);
  if (v99)
  {
    unint64_t v37 = 0;
    uint64_t v98 = *(void *)&v111[0] + 32;
    uint64_t v38 = MEMORY[0x1E4FBC860];
    uint64_t v97 = *(void *)&v111[0];
    uint64_t v95 = v20;
    long long v94 = v28;
    while (v37 < *(void *)(v35 + 16))
    {
      long long v39 = (long long *)(v98 + (v37 << 6));
      long long v40 = *v39;
      long long v41 = v39[1];
      long long v42 = v39[2];
      *(_OWORD *)&v112[9] = *(long long *)((char *)v39 + 41);
      v111[1] = v41;
      *(_OWORD *)long long v112 = v42;
      v111[0] = v40;
      uint64_t v43 = *(void *)(v23 + 128);
      uint64_t v44 = *(void *)(v43 + 16);
      if (v44)
      {
        unint64_t v102 = v37;
        uint64_t v103 = v38;
        sub_1B2C33B50((uint64_t)v111);
        sub_1B2C33B50((uint64_t)v111);
        uint64_t v110 = v36;
        swift_bridgeObjectRetain();
        sub_1B29BFE34();
        uint64_t v45 = v110;
        uint64_t v101 = v43;
        uint64_t v46 = (uint64_t *)(v43 + 48);
        do
        {
          uint64_t v47 = *(v46 - 2);
          uint64_t v48 = *(v46 - 1);
          uint64_t v49 = v46[1];
          uint64_t v105 = *v46;
          uint64_t v106 = v47;
          int v104 = *((unsigned __int16 *)v46 + 8);
          uint64_t v50 = v46[3];
          uint64_t v51 = v46[4];
          char v52 = *((unsigned char *)v46 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2A53708(v50, v51, v52);
          uint64_t v110 = v45;
          unint64_t v54 = *(void *)(v45 + 16);
          unint64_t v53 = *(void *)(v45 + 24);
          if (v54 >= v53 >> 1)
          {
            sub_1B299B984(v53);
            sub_1B29BFE34();
            uint64_t v45 = v110;
          }
          long long v108 = &type metadata for Subfact;
          uint64_t v109 = &protocol witness table for Subfact;
          uint64_t v55 = sub_1B2C8BC40();
          *(void *)&long long v107 = v55;
          *(void *)(v55 + 16) = v106;
          *(void *)(v55 + 24) = v48;
          *(void *)(v55 + 32) = v105;
          *(void *)(v55 + 40) = v49;
          *(_WORD *)(v55 + 48) = v104;
          *(void *)(v55 + 56) = v50;
          *(void *)(v55 + 64) = v51;
          *(unsigned char *)(v55 + 72) = v52;
          *(void *)(v45 + 16) = v54 + 1;
          sub_1B29D1D20(&v107, v45 + 40 * v54 + 32);
          v46 += 8;
          --v44;
        }
        while (v44);
        sub_1B2C8BF0C();
        swift_bridgeObjectRelease();
        uint64_t v23 = v95;
        unint64_t v37 = v102;
        uint64_t v38 = v103;
        uint64_t v28 = v94;
        uint64_t v36 = MEMORY[0x1E4FBC860];
        uint64_t v35 = v97;
      }
      else
      {
        sub_1B2C33B50((uint64_t)v111);
        sub_1B2C33B50((uint64_t)v111);
        uint64_t v45 = v36;
      }
      char v56 = sub_1B2C8A0DC((uint64_t)v111, v45);
      swift_bridgeObjectRelease();
      sub_1B2C33BB0((uint64_t)v111);
      if (v56)
      {
        sub_1B2C33BB0((uint64_t)v111);
      }
      else
      {
        long long v108 = &type metadata for Subfact;
        uint64_t v109 = &protocol witness table for Subfact;
        *(void *)&long long v107 = sub_1B2C8BC40();
        sub_1B2C8BF18(v107);
        *(_OWORD *)(v57 + 57) = *(_OWORD *)&v112[9];
        sub_1B2C33B50((uint64_t)v111);
        sub_1B2C79178(&v107, 1, v28);
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v107);
        sub_1B2C8BD60((uint64_t)v28, 1, (uint64_t)&a10);
        if (v66)
        {
          sub_1B2C33BB0((uint64_t)v111);
          sub_1B2C8969C((uint64_t)v28);
        }
        else
        {
          unint64_t v58 = v37;
          uint64_t v59 = v96;
          sub_1B2C79920((uint64_t)v28, (uint64_t)v96);
          uint64_t v60 = v59[1];
          *(void *)&long long v107 = *v59;
          *((void *)&v107 + 1) = v60;
          swift_bridgeObjectRetain();
          sub_1B2E82518();
          swift_bridgeObjectRetain();
          sub_1B2C8BE08();
          sub_1B2C33BB0((uint64_t)v111);
          swift_bridgeObjectRelease();
          sub_1B2C8BCB4();
          swift_bridgeObjectRelease();
          long long v61 = v107;
          *(_OWORD *)uint64_t v59 = v107;
          uint64_t v62 = *(void *)(v38 + 16);
          if (v62)
          {
            sub_1B2C8BC28();
            uint64_t v64 = (void *)(v38 + v63 + 8);
            uint64_t v65 = v62;
            while (1)
            {
              BOOL v66 = *(v64 - 1) == (void)v61 && *v64 == *((void *)&v61 + 1);
              if (v66 || (sub_1B299BBC4() & 1) != 0) {
                break;
              }
              uint64_t v64 = (void *)((char *)v64 + v60);
              if (!--v65) {
                goto LABEL_24;
              }
            }
            uint64_t v36 = MEMORY[0x1E4FBC860];
            uint64_t v35 = v97;
            unint64_t v37 = v58;
          }
          else
          {
LABEL_24:
            uint64_t v67 = sub_1B299B27C();
            sub_1B2C79984(v67, (uint64_t)v93[1]);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              char v72 = sub_1B2C83B00();
              uint64_t v38 = sub_1B29B9368(v72, v73, v74, v38);
            }
            uint64_t v36 = MEMORY[0x1E4FBC860];
            uint64_t v35 = v97;
            unint64_t v37 = v58;
            unint64_t v69 = *(void *)(v38 + 16);
            unint64_t v68 = *(void *)(v38 + 24);
            if (v69 >= v68 >> 1)
            {
              char v75 = sub_1B2A9100C(v68);
              uint64_t v38 = sub_1B29B9368(v75, v76, v77, v38);
            }
            *(void *)(v38 + 16) = v69 + 1;
            sub_1B2B70F5C();
            sub_1B299AFA8(v38 + v70);
          }
          uint64_t v71 = sub_1B299B27C();
          sub_1B2C799E8(v71);
        }
      }
      if (++v37 == v99)
      {
        swift_release();
        goto LABEL_34;
      }
    }
    __break(1u);
    swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    uint64_t v38 = MEMORY[0x1E4FBC860];
LABEL_34:
    uint64_t v78 = *(void *)(v38 + 16);
    if (v78)
    {
      *(void *)&long long v107 = v36;
      swift_bridgeObjectRetain();
      sub_1B299B5C0();
      sub_1B2B70F5C();
      uint64_t v103 = v38;
      uint64_t v80 = v38 + v79;
      uint64_t v82 = *(void *)(v81 + 72);
      do
      {
        uint64_t v83 = v100;
        sub_1B2C79984(v80, (uint64_t)v100);
        uint64_t v85 = *v83;
        uint64_t v84 = v83[1];
        swift_bridgeObjectRetain();
        sub_1B2C799E8((uint64_t)v83);
        uint64_t v86 = v107;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29BFD80();
          uint64_t v86 = v107;
        }
        unint64_t v88 = *(void *)(v86 + 16);
        unint64_t v87 = *(void *)(v86 + 24);
        if (v88 >= v87 >> 1)
        {
          sub_1B299B984(v87);
          sub_1B29BFD80();
          uint64_t v86 = v107;
        }
        *(void *)(v86 + 16) = v88 + 1;
        uint64_t v89 = v86 + 16 * v88;
        *(void *)(v89 + 32) = v85;
        *(void *)(v89 + 40) = v84;
        v80 += v82;
        --v78;
      }
      while (v78);
      uint64_t v90 = v103;
      swift_bridgeObjectRelease();
      *(void *)&long long v107 = v86;
      sub_1B29A3EB4(&qword_1EB7E3B30);
      sub_1B2A20660();
      sub_1B2C8BE50();
      swift_release();
      *(void *)&long long v107 = 40;
      *((void *)&v107 + 1) = 0xE100000000000000;
      sub_1B2E823F8();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      sub_1B2C8BE08();
      swift_bridgeObjectRelease();
      sub_1B2C8BCB4();
      long long v91 = v93[0];
      sub_1B2C8E4D0(v107, *((uint64_t *)&v107 + 1), v90, MEMORY[0x1E4FBC860], v93[0]);
      uint64_t v92 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v92 = 1;
      long long v91 = v93[0];
    }
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v91, v92, 1, (uint64_t)v93[3]);
    sub_1B299B738();
  }
}

uint64_t sub_1B2C864F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C86560()
{
  uint64_t v0 = sub_1B2C79858();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B2C865CC()
{
  sub_1B2C86560();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for K2TSubEntityTextualizer()
{
  return self;
}

uint64_t sub_1B2C86620()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 336))();
}

uint64_t sub_1B2C8666C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 344))();
}

uint64_t sub_1B2C866B8()
{
  return sub_1B2C87F58(static EntityPredicate.relationshipLabel.getter);
}

void sub_1B2C866D0()
{
  sub_1B299B720();
  uint64_t v114 = v2;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C41C78);
  uint64_t v4 = sub_1B299B0F0(v3);
  MEMORY[0x1F4188790](v4);
  sub_1B2999940();
  sub_1B299B810();
  MEMORY[0x1F4188790](v5);
  sub_1B2AD0E78();
  uint64_t v106 = sub_1B2C8BD7C(v6);
  MEMORY[0x1F4188790](v106);
  sub_1B2999940();
  sub_1B299B810();
  MEMORY[0x1F4188790](v7);
  sub_1B2AD0E78();
  sub_1B29B1A48(v8);
  long long v118 = v0;
  uint64_t v116 = v0[16];
  uint64_t v9 = *(void *)(v116 + 16);
  if (!v9)
  {
    uint64_t v23 = 0;
    goto LABEL_22;
  }
  uint64_t v120 = 233;
  uint64_t v119 = 2674;
  uint64_t v117 = 3558;
  sub_1B2C8BC58();
  while (1)
  {
    if (!_Records_GDEntityPredicate_records) {
      goto LABEL_163;
    }
    sub_1B299E8C4();
    if (v11 == v12) {
      break;
    }
    if (*(void *)(v10 + 808) >= v117) {
      goto LABEL_154;
    }
    uint64_t v121 = v9;
    if (!_Records_GDEntityPredicate_predicateIds) {
      goto LABEL_164;
    }
    uint64_t v13 = *(void *)(v116 + 32);
    uint64_t v14 = *(void *)(v116 + 40);
    uint64_t v15 = *(void *)(v116 + 72);
    uint64_t v9 = *(void *)(v116 + 80);
    uint64_t v1 = *(unsigned __int8 *)(v116 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = v15;
    uint64_t v122 = v9;
    sub_1B2A53708(v15, v9, v1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels) {
      goto LABEL_168;
    }
    uint64_t v19 = v17;
    uint64_t v20 = v18;
    sub_1B2E82538();
    BOOL v21 = v13 == v19 && v14 == v20;
    if (v21)
    {
      sub_1B2C8BBB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v116 = v14;
LABEL_19:
      sub_1B2C8BBB8();
      sub_1B2A53708(v16, v122, v1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2A53718(v16, v122, v1);
      if (v1)
      {
        uint64_t v23 = 0;
        uint64_t v9 = 0;
      }
      else
      {
        uint64_t v23 = sub_1B2E823F8();
        uint64_t v9 = v24;
        sub_1B2A53718(v16, v122, 0);
      }
LABEL_22:
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v23;
      *(void *)(v25 + 24) = v9;
      uint64_t v26 = v25;
      uint64_t v27 = v118;
      *(void *)(v26 + 32) = v118;
      uint64_t v28 = v27[16];
      uint64_t v112 = *(void *)(v28 + 16);
      if (!v112)
      {
        swift_retain();
        swift_release();
LABEL_145:
        sub_1B299B738();
        return;
      }
      uint64_t v111 = v28 + 32;
      uint64_t v110 = 233;
      uint64_t v121 = 2674;
      uint64_t v120 = 3558;
      uint64_t v113 = v28;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v29 = v113;
      unint64_t v30 = 0;
      uint64_t v108 = 0;
      uint64_t v107 = MEMORY[0x1E4FBC860];
      uint64_t v115 = v26;
LABEL_24:
      if (v30 >= *(void *)(v29 + 16))
      {
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
        __break(1u);
        break;
      }
      sub_1B299E8D0((uint64_t)&v132);
      if (v110 < 34) {
        goto LABEL_148;
      }
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_160;
      }
      if (*((void *)_Records_GDEntityPredicate_records + 100) >= v121) {
        goto LABEL_149;
      }
      if (*((void *)_Records_GDEntityPredicate_records + 101) >= v120) {
        goto LABEL_150;
      }
      uint64_t v119 = v32;
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_161;
      }
      sub_1B2C8BD14(v31);
      sub_1B29E52BC((uint64_t)&v131);
      uint64_t v33 = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_162;
      }
      uint64_t v35 = v33;
      uint64_t v36 = v34;
      uint64_t v38 = v131;
      uint64_t v37 = v132;
      sub_1B2E82538();
      BOOL v39 = v38 == v35 && v37 == v36;
      uint64_t v117 = v37;
      uint64_t v116 = v38;
      if (v39)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B29C5E2C((uint64_t)&v131);
      }
      else
      {
        char v40 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B29C5E2C((uint64_t)&v131);
        if ((v40 & 1) == 0) {
          goto LABEL_53;
        }
      }
      uint64_t v41 = v118[16];
      uint64_t v42 = *(void *)(v41 + 16);
      if (v42)
      {
        sub_1B2C8BC58();
        uint64_t v109 = v41;
        uint64_t v43 = (unsigned __int8 *)(v41 + 88);
        while (_Records_GDEntityPredicate_records)
        {
          sub_1B299E8C4();
          if (v11 == v12)
          {
            __break(1u);
LABEL_146:
            __break(1u);
            goto LABEL_147;
          }
          if (*(void *)(v44 + 784) >= v120) {
            goto LABEL_146;
          }
          uint64_t v122 = v42;
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_157;
          }
          uint64_t v45 = *((void *)v43 - 7);
          uint64_t v46 = *((void *)v43 - 6);
          uint64_t v37 = *((void *)v43 - 4);
          uint64_t v47 = *((void *)v43 - 2);
          uint64_t v48 = *((void *)v43 - 1);
          uint64_t v38 = *v43;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2A53708(v47, v48, v38);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v49 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_158;
          }
          uint64_t v51 = v49;
          uint64_t v52 = v50;
          sub_1B2E82538();
          uint64_t v1 = v53;
          if (v45 == v51 && v46 == v52)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            sub_1B2A53718(v47, v48, v38);
LABEL_93:
            sub_1B2C8BBB8();
            sub_1B2C33BB0((uint64_t)v127);
            goto LABEL_108;
          }
          char v55 = sub_1B2E837A8();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B2A53718(v47, v48, v38);
          if (v55) {
            goto LABEL_93;
          }
          v43 += 64;
          uint64_t v42 = v122 - 1;
          if (v122 == 1)
          {
            sub_1B2C8BBB8();
            goto LABEL_53;
          }
        }
        goto LABEL_156;
      }
LABEL_53:
      if (*(void *)(v114 + 24)) {
        sub_1B29C3B84(v114, (uint64_t)v123);
      }
      else {
        sub_1B2C8BCCC(v114);
      }
      sub_1B2C8BDFC();
      if (v56)
      {
        sub_1B29D1D20(v123, (uint64_t)v124);
        sub_1B29AEC7C(v124, (uint64_t)v125);
        sub_1B2C8BEAC();
        MEMORY[0x1F4188790](v57);
        sub_1B2C8BE84();
        *(void *)(v58 - 16) = v118;
        *(void *)(v58 - 8) = v127;
        sub_1B2C8BE40();
        uint64_t v59 = v108;
        char v60 = sub_1B2E82748();
        uint64_t v108 = v59;
        if (v60)
        {
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v124);
          goto LABEL_59;
        }
        sub_1B2C33BB0((uint64_t)v127);
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v124);
LABEL_108:
        unint64_t v30 = v119 + 1;
        uint64_t v29 = v113;
        if (v119 + 1 == v112)
        {
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_145;
        }
        goto LABEL_24;
      }
LABEL_59:
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_165;
      }
      sub_1B299E8C4();
      if (v11 == v12) {
        goto LABEL_151;
      }
      if (*(void *)(v61 + 784) >= v120) {
        goto LABEL_152;
      }
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_166;
      }
      sub_1B29E52BC((uint64_t)&v131);
      uint64_t v62 = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_167;
      }
      uint64_t v64 = v62;
      uint64_t v65 = v63;
      sub_1B2E82538();
      if (sub_1B2C8BF2C() == v64 && v117 == v65)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B29C5E2C((uint64_t)&v131);
      }
      else
      {
        char v67 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B29C5E2C((uint64_t)&v131);
        if ((v67 & 1) == 0)
        {
          unint64_t v68 = v118;
          uint64_t v69 = v118[22];
          uint64_t v70 = (void *)v118[23];
          BOOL v125 = &type metadata for Subfact;
          uint64_t v126 = &protocol witness table for Subfact;
          uint64_t v71 = (_OWORD *)sub_1B2C8BC40();
          sub_1B29A50D4(v71);
          uint64_t v72 = v69;
          uint64_t v73 = v104;
          sub_1B2C795F8(v72, (uint64_t)v70, v124, v37, 0, v104);
          swift_bridgeObjectRelease();
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v124);
          sub_1B2C8BD60(v73, 1, (uint64_t)&v129);
          if (!v21)
          {
            uint64_t v91 = v73;
            uint64_t v92 = v103;
            sub_1B2C79920(v91, v103);
            sub_1B2C8BEE4();
            if (!v92) {
              goto LABEL_101;
            }
            BOOL v94 = *(void **)(v93 + 32) == v68 && *(void *)(v93 + 40) == v1;
            if (!v94 && (sub_1B2A0F238() & 1) == 0)
            {
              if (v92 == 1) {
                goto LABEL_101;
              }
              sub_1B2C8BE30((uint64_t)v130);
              BOOL v101 = v21 && v100 == v1;
              if (!v101 && (sub_1B2A0F238() & 1) == 0)
              {
                if (v92 != 2)
                {
                  sub_1B2C8BE20();
                  while (!__OFADD__(v37, 1))
                  {
                    BOOL v102 = (void *)*(v70 - 1) == v68 && *v70 == v1;
                    if (v102 || (sub_1B2A0F238() & 1) != 0) {
                      goto LABEL_106;
                    }
                    sub_1B2C8BDEC();
                    if (v21) {
                      goto LABEL_101;
                    }
                  }
                  goto LABEL_159;
                }
LABEL_101:
                swift_bridgeObjectRetain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  sub_1B2C8BDC8();
                }
                sub_1B2C8BC88();
                if (v88) {
                  sub_1B2C8BC08();
                }
                else {
                  uint64_t v96 = v95;
                }
                sub_1B2C8BDB0(v96);
              }
            }
LABEL_106:
            uint64_t v90 = (uint64_t *)v127;
LABEL_107:
            sub_1B2C799E8(*(v90 - 32));
            goto LABEL_108;
          }
          uint64_t v74 = v73;
LABEL_77:
          sub_1B2C8969C(v74);
          goto LABEL_108;
        }
      }
      char v75 = v118;
      uint64_t v76 = (void *)v118[23];
      BOOL v125 = &type metadata for Subfact;
      uint64_t v126 = &protocol witness table for Subfact;
      char v77 = (_OWORD *)sub_1B2C8BC40();
      sub_1B29A50D4(v77);
      swift_retain();
      uint64_t v78 = sub_1B2C8BD98();
      sub_1B2C795F8(v78, v79, v80, v81, v82, v83);
      swift_release();
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v124);
      sub_1B2C8BD60(v38, 1, (uint64_t)&v129);
      if (v21)
      {
        uint64_t v74 = v38;
        goto LABEL_77;
      }
      uint64_t v84 = v105;
      sub_1B2C79920(v38, v105);
      sub_1B2C8BEE4();
      if (v84)
      {
        BOOL v86 = *(void **)(v85 + 32) == v75 && *(void *)(v85 + 40) == v1;
        if (!v86 && (sub_1B2A0F238() & 1) == 0)
        {
          if (v84 == 1) {
            goto LABEL_86;
          }
          sub_1B2C8BE30((uint64_t)v130);
          BOOL v98 = v21 && v97 == v1;
          if (!v98 && (sub_1B2A0F238() & 1) == 0)
          {
            if (v84 != 2)
            {
              sub_1B2C8BE20();
              while (!__OFADD__(v37, 1))
              {
                BOOL v99 = (void *)*(v76 - 1) == v75 && *v76 == v1;
                if (v99 || (sub_1B2A0F238() & 1) != 0) {
                  goto LABEL_91;
                }
                sub_1B2C8BDEC();
                if (v21) {
                  goto LABEL_86;
                }
              }
              goto LABEL_155;
            }
            goto LABEL_86;
          }
        }
      }
      else
      {
LABEL_86:
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1B2C8BDC8();
        }
        sub_1B2C8BC88();
        if (v88) {
          sub_1B2C8BC08();
        }
        else {
          uint64_t v89 = v87;
        }
        sub_1B2C8BDB0(v89);
      }
LABEL_91:
      uint64_t v90 = &v128;
      goto LABEL_107;
    }
    char v22 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A53718(v16, v122, v1);
    sub_1B2C8BEF8();
    if (v21)
    {
      sub_1B2C8BBB8();
      uint64_t v23 = 0;
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1B2C872FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    sub_1B2E82518();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
  }
  sub_1B2E82518();
  sub_1B2E82518();
}

void sub_1B2C873F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B299B720();
  a19 = v21;
  a20 = v22;
  uint64_t v23 = v20;
  uint64_t v115 = v24;
  uint64_t v25 = sub_1B29A3EB4(&qword_1E9C41C78);
  uint64_t v26 = sub_1B299B0F0(v25);
  MEMORY[0x1F4188790](v26);
  sub_1B299B6D0();
  uint64_t v28 = sub_1B2C8BD7C(v27);
  uint64_t v29 = sub_1B299DB5C(v28, (uint64_t)&a13);
  uint64_t v118 = v30;
  MEMORY[0x1F4188790](v29);
  sub_1B2999940();
  uint64_t v129 = v31;
  MEMORY[0x1F4188790](v32);
  sub_1B299B810();
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (uint64_t *)((char *)&v114 - v34);
  uint64_t v36 = *(void *)(v20 + 128);
  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v124 = v20;
  uint64_t v123 = (char *)&v114 - v34;
  if (!v37)
  {
    sub_1B2C8BD40();
    goto LABEL_23;
  }
  uint64_t v139 = 2674;
  uint64_t v140 = 233;
  uint64_t v138 = 3558;
  swift_bridgeObjectRetain_n();
  uint64_t v137 = v36;
  uint64_t v38 = (char *)(v36 + 88);
  while (1)
  {
    if (v140 < 34)
    {
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
      swift_release();
      __break(1u);
      return;
    }
    if (!_Records_GDEntityPredicate_records) {
      goto LABEL_103;
    }
    if (*((void *)_Records_GDEntityPredicate_records + 100) >= v139) {
      goto LABEL_95;
    }
    if (*((void *)_Records_GDEntityPredicate_records + 101) >= v138) {
      goto LABEL_96;
    }
    uint64_t v141 = v37;
    if (!_Records_GDEntityPredicate_predicateIds) {
      goto LABEL_104;
    }
    uint64_t v39 = *((void *)v38 - 7);
    uint64_t v40 = *((void *)v38 - 6);
    uint64_t v42 = *((void *)v38 - 2);
    uint64_t v41 = *((void *)v38 - 1);
    char v43 = *v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v44 = v42;
    uint64_t v142 = v41;
    sub_1B2A53708(v42, v41, v43);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels) {
      goto LABEL_105;
    }
    uint64_t v47 = v45;
    uint64_t v48 = v46;
    sub_1B2E82538();
    BOOL v49 = v39 == v47 && v40 == v48;
    if (v49)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = v123;
      goto LABEL_19;
    }
    char v50 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v50) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A53718(v44, v142, v43);
    v38 += 64;
    uint64_t v37 = v141 - 1;
    uint64_t v23 = v124;
    uint64_t v35 = v123;
    if (v141 == 1)
    {
      swift_bridgeObjectRelease_n();
      sub_1B2C8BD40();
      goto LABEL_23;
    }
  }
  uint64_t v35 = v123;
LABEL_19:
  uint64_t v51 = v142;
  swift_bridgeObjectRelease_n();
  sub_1B2A53708(v44, v51, v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2A53718(v44, v51, v43);
  if (v43)
  {
    sub_1B2C8BD40();
  }
  else
  {
    uint64_t v116 = sub_1B2E823F8();
    uint64_t v119 = v52;
    sub_1B2A53718(v44, v51, 0);
  }
  uint64_t v23 = v124;
LABEL_23:
  uint64_t v143 = *(void *)(v23 + 128);
  sub_1B2C8BC58();
  sub_1B2C856B0(&v143);
  swift_bridgeObjectRelease();
  uint64_t v53 = v143;
  uint64_t v128 = *(void *)(v143 + 16);
  if (v128)
  {
    unint64_t v54 = 0;
    uint64_t v126 = v143 + 32;
    uint64_t v127 = 233;
    uint64_t v141 = 2674;
    uint64_t v140 = 3558;
    uint64_t v130 = MEMORY[0x1E4FBC860];
    uint64_t v125 = v143;
    while (1)
    {
      if (v54 >= *(void *)(v53 + 16))
      {
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      sub_1B2C8BDFC();
      if (v56 < 34) {
        goto LABEL_91;
      }
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_100;
      }
      if (*((void *)_Records_GDEntityPredicate_records + 100) >= v141) {
        goto LABEL_92;
      }
      if (*((void *)_Records_GDEntityPredicate_records + 101) >= v140) {
        goto LABEL_93;
      }
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_101;
      }
      uint64_t v138 = v55;
      uint64_t v57 = (uint64_t *)(v126 + (v55 << 6));
      uint64_t v59 = *v57;
      uint64_t v58 = v57[1];
      uint64_t v60 = v57[3];
      uint64_t v133 = v57[2];
      int v132 = *((unsigned __int16 *)v57 + 16);
      uint64_t v62 = v57[5];
      uint64_t v61 = v57[6];
      int v63 = *((unsigned __int8 *)v57 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v135 = v62;
      uint64_t v137 = v61;
      int v136 = v63;
      sub_1B2A53708(v62, v61, v63);
      swift_bridgeObjectRetain();
      uint64_t v139 = v60;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_102;
      }
      uint64_t v66 = v64;
      uint64_t v67 = v65;
      sub_1B2E82538();
      BOOL v68 = v59 == v66 && v58 == v67;
      uint64_t v134 = v58;
      uint64_t v131 = v59;
      if (v68)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v69 = sub_1B299BBC4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v69 & 1) == 0) {
          goto LABEL_55;
        }
      }
      uint64_t v70 = *(void *)(*(void *)(v23 + 128) + 16);
      if (v70)
      {
        uint64_t v71 = *(void *)(v23 + 128);
        swift_bridgeObjectRetain_n();
        uint64_t v121 = v71;
        uint64_t v23 = v71 + 88;
        while (_Records_GDEntityPredicate_records)
        {
          if (*((void *)_Records_GDEntityPredicate_records + 100) >= v141)
          {
            __break(1u);
LABEL_89:
            __break(1u);
            goto LABEL_90;
          }
          if (*((void *)_Records_GDEntityPredicate_records + 101) >= v140) {
            goto LABEL_89;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_98;
          }
          uint64_t v142 = v70;
          uint64_t v66 = *(void *)(v23 - 56);
          uint64_t v72 = *(void *)(v23 - 48);
          uint64_t v35 = *(void **)(v23 - 16);
          uint64_t v73 = *(void *)(v23 - 8);
          char v74 = *(unsigned char *)v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2A53708((uint64_t)v35, v73, v74);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v75 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_99;
          }
          uint64_t v77 = v75;
          uint64_t v78 = v76;
          sub_1B2E82538();
          if (v66 == v77 && v72 == v78)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            sub_1B2A53718((uint64_t)v35, v73, v74);
          }
          else
          {
            char v80 = sub_1B2E837A8();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B2A53718((uint64_t)v35, v73, v74);
            if ((v80 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B2C8BBB8();
              sub_1B2A53718(v135, v137, v136);
              sub_1B2C8BEBC();
              goto LABEL_74;
            }
          }
          v23 += 64;
          uint64_t v70 = v142 - 1;
          if (v142 == 1)
          {
            sub_1B2C8BBB8();
            sub_1B2C8BEBC();
            goto LABEL_55;
          }
        }
        goto LABEL_97;
      }
LABEL_55:
      uint64_t v145 = &type metadata for Subfact;
      uint64_t v146 = &protocol witness table for Subfact;
      uint64_t v81 = sub_1B2C8BC40();
      uint64_t v143 = v81;
      uint64_t v82 = v134;
      *(void *)(v81 + 16) = v131;
      *(void *)(v81 + 24) = v82;
      uint64_t v83 = v139;
      *(void *)(v81 + 32) = v133;
      *(void *)(v81 + 40) = v83;
      *(_WORD *)(v81 + 48) = v132;
      uint64_t v84 = v137;
      *(void *)(v81 + 56) = v135;
      *(void *)(v81 + 64) = v84;
      *(unsigned char *)(v81 + 72) = v136;
      uint64_t v85 = v120;
      sub_1B2C79178(&v143, 1, v120);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v143);
      sub_1B2C8BD60((uint64_t)v85, 1, (uint64_t)&a13);
      if (v49)
      {
        sub_1B2C8969C((uint64_t)v85);
      }
      else
      {
        sub_1B2C79920((uint64_t)v85, (uint64_t)v35);
        uint64_t v86 = sub_1B2C8BF2C();
        uint64_t v87 = v119;
        if (!v119) {
          uint64_t v86 = sub_1B2E823F8();
        }
        uint64_t v143 = v86;
        uint64_t v144 = v87;
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        swift_bridgeObjectRetain();
        sub_1B2C8BE08();
        swift_bridgeObjectRelease_n();
        uint64_t v88 = v143;
        uint64_t v89 = v144;
        *uint64_t v35 = v143;
        v35[1] = v89;
        uint64_t v90 = *(void *)(v130 + 16);
        if (v90)
        {
          sub_1B2C8BC28();
          uint64_t v92 = (void *)(v130 + v91 + 8);
          uint64_t v93 = v90;
          while (1)
          {
            BOOL v94 = *(v92 - 1) == v88 && *v92 == v89;
            if (v94 || (sub_1B299BBC4() & 1) != 0) {
              break;
            }
            uint64_t v92 = (void *)((char *)v92 + v66);
            if (!--v93) {
              goto LABEL_68;
            }
          }
        }
        else
        {
LABEL_68:
          sub_1B2C79984((uint64_t)v35, v117);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            char v99 = sub_1B2C83B00();
            uint64_t v130 = sub_1B29B9368(v99, v100, v101, v130);
          }
          unint64_t v96 = *(void *)(v130 + 16);
          unint64_t v95 = *(void *)(v130 + 24);
          if (v96 >= v95 >> 1)
          {
            char v102 = sub_1B2A9100C(v95);
            uint64_t v130 = sub_1B29B9368(v102, v103, v104, v130);
          }
          *(void *)(v130 + 16) = v96 + 1;
          sub_1B2B70F5C();
          sub_1B299AFA8(v98 + v97);
        }
        sub_1B2C799E8((uint64_t)v35);
      }
LABEL_74:
      uint64_t v53 = v125;
      unint64_t v54 = v138 + 1;
      if (v138 + 1 == v128)
      {
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v105 = v130;
        goto LABEL_77;
      }
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v105 = MEMORY[0x1E4FBC860];
LABEL_77:
  if (*(void *)(v105 + 16))
  {
    uint64_t v143 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B299B5C0();
    sub_1B2B70F5C();
    uint64_t v106 = v105;
    uint64_t v108 = v105 + v107;
    do
    {
      uint64_t v109 = v129;
      sub_1B2C79984(v108, v129);
      swift_bridgeObjectRetain();
      sub_1B2C799E8(v109);
      uint64_t v110 = v143;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29BFD80();
        uint64_t v110 = v143;
      }
      unint64_t v111 = *(void *)(v110 + 24);
      if (*(void *)(v110 + 16) >= v111 >> 1)
      {
        sub_1B299B984(v111);
        sub_1B29BFD80();
        uint64_t v110 = v143;
      }
      sub_1B2C8BE6C();
    }
    while (!v49);
    swift_bridgeObjectRelease();
    uint64_t v143 = v110;
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2A20660();
    sub_1B2C8BE50();
    swift_release();
    uint64_t v143 = 40;
    uint64_t v144 = 0xE100000000000000;
    sub_1B2C8BE08();
    swift_bridgeObjectRelease();
    sub_1B2C8BCB4();
    uint64_t v112 = v115;
    sub_1B2C8E4D0(v143, v144, v106, MEMORY[0x1E4FBC860], v115);
    uint64_t v113 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v113 = 1;
    uint64_t v112 = v115;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v112, v113, 1, v122);
  sub_1B299B738();
}

uint64_t type metadata accessor for K2TAgentAffiliationRelationshipTextualizer()
{
  return self;
}

uint64_t sub_1B2C87F40()
{
  return sub_1B2C87F58(static EntityPredicate.locationLabel.getter);
}

uint64_t sub_1B2C87F58(void (*a1)(void))
{
  sub_1B29A3EB4(&qword_1EB7E34A8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B2EC00A0;
  static EntityPredicate.isA.getter();
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_1B2EC00A0;
  a1();
  sub_1B2AD2FD0();
  return v2;
}

void sub_1B2C87FF8()
{
  sub_1B299B720();
  uint64_t v73 = v1;
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C41C78);
  uint64_t v3 = sub_1B299B0F0(v2);
  MEMORY[0x1F4188790](v3);
  sub_1B299B6D0();
  sub_1B29B1A48(v4);
  uint64_t v74 = v0;
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    uint64_t v22 = 0;
    goto LABEL_21;
  }
  sub_1B2C8BC58();
  uint64_t v7 = (unsigned __int8 *)(v5 + 88);
  while (1)
  {
    if (!_Records_GDEntityPredicate_records) {
      goto LABEL_113;
    }
    sub_1B299E8C4();
    if (v9 == v10) {
      break;
    }
    if (*(uint64_t *)(v8 + 2248) >= 3558) {
      goto LABEL_105;
    }
    if (!_Records_GDEntityPredicate_predicateIds) {
      goto LABEL_114;
    }
    uint64_t v12 = *((void *)v7 - 7);
    uint64_t v11 = *((void *)v7 - 6);
    uint64_t v14 = *((void *)v7 - 2);
    uint64_t v13 = *((void *)v7 - 1);
    int v15 = *v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v76 = v13;
    sub_1B2A53708(v14, v13, v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels) {
      goto LABEL_115;
    }
    uint64_t v18 = v16;
    uint64_t v19 = v17;
    sub_1B2E82538();
    BOOL v20 = v12 == v18 && v11 == v19;
    if (v20)
    {
      sub_1B2C8BBB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease_n();
      sub_1B2A53708(v14, v76, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2A53718(v14, v76, v15);
      if (v15) {
        uint64_t v22 = 0;
      }
      else {
        uint64_t v22 = v76;
      }
LABEL_21:
      uint64_t v23 = *(void *)(v74 + 128);
      uint64_t v72 = *(void *)(v23 + 16);
      if (!v72)
      {
        swift_bridgeObjectRelease();
LABEL_99:
        sub_1B299B738();
        return;
      }
      swift_bridgeObjectRetain();
      unint64_t v24 = 0;
      uint64_t v70 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v71 = v23;
LABEL_23:
      if (v24 >= *(void *)(v23 + 16))
      {
LABEL_101:
        __break(1u);
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
        __break(1u);
        break;
      }
      sub_1B299E8D0((uint64_t)&v85);
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_110;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 280) >= 2674) {
        goto LABEL_102;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 281) >= 3558) {
        goto LABEL_103;
      }
      uint64_t v75 = v26;
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_111;
      }
      sub_1B2C8BD14(v25);
      sub_1B29E52BC((uint64_t)v84);
      uint64_t v27 = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_112;
      }
      uint64_t v29 = v27;
      uint64_t v30 = v28;
      uint64_t v31 = v84[0];
      uint64_t v32 = (void *)v84[1];
      sub_1B2E82538();
      if (v31 == v29 && v32 == v30)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B29C5E2C((uint64_t)v84);
      }
      else
      {
        char v34 = sub_1B299BBC4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B29C5E2C((uint64_t)v84);
        if ((v34 & 1) == 0) {
          goto LABEL_54;
        }
      }
      uint64_t v35 = *(void *)(v74 + 128);
      if (*(void *)(v35 + 16))
      {
        sub_1B2C8BC58();
        while (_Records_GDEntityPredicate_records)
        {
          sub_1B299E8C4();
          if (v9 == v10)
          {
            __break(1u);
LABEL_100:
            __break(1u);
            goto LABEL_101;
          }
          if (*(uint64_t *)(v36 + 2248) >= 3558) {
            goto LABEL_100;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_108;
          }
          uint64_t v32 = *(void **)(v35 + 32);
          uint64_t v37 = *(void *)(v35 + 40);
          uint64_t v38 = *(void *)(v35 + 72);
          uint64_t v39 = *(void *)(v35 + 80);
          char v40 = *(unsigned char *)(v35 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2A53708(v38, v39, v40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v41 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_109;
          }
          char v43 = (void *)v41;
          uint64_t v44 = v42;
          sub_1B2E82538();
          if (v32 == v43 && v37 == v44)
          {
            sub_1B2AD0E60();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            sub_1B2C8BF38();
          }
          else
          {
            char v46 = sub_1B2C8BCEC();
            sub_1B2AD0E60();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B2C8BF38();
            if ((v46 & 1) == 0)
            {
              sub_1B2C8BBB8();
              sub_1B2C33BB0((uint64_t)v82);
              goto LABEL_78;
            }
          }
          sub_1B2C8BEF8();
          if (v20)
          {
            sub_1B2C8BBB8();
            goto LABEL_54;
          }
        }
        goto LABEL_107;
      }
LABEL_54:
      uint64_t v47 = sub_1B2C8BF2C();
      if (*(void *)(v47 + 24)) {
        sub_1B29C3B84(v47, (uint64_t)v77);
      }
      else {
        sub_1B2C8BCCC(v47);
      }
      sub_1B2C8BDFC();
      if (v48)
      {
        sub_1B29D1D20(v77, (uint64_t)&v78);
        sub_1B29AEC7C(&v78, (uint64_t)v80);
        sub_1B2C8BEAC();
        MEMORY[0x1F4188790](v49);
        sub_1B2C8BE84();
        *(void *)(v50 - 16) = v74;
        *(void *)(v50 - 8) = v82;
        sub_1B2C8BE40();
        if (sub_1B2E82748())
        {
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v78);
          goto LABEL_60;
        }
        sub_1B2C33BB0((uint64_t)v82);
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v78);
LABEL_78:
        uint64_t v23 = v71;
        unint64_t v24 = v75 + 1;
        if (v75 + 1 == v72)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_99;
        }
        goto LABEL_23;
      }
LABEL_60:
      char v80 = &type metadata for Subfact;
      uint64_t v81 = &protocol witness table for Subfact;
      uint64_t v51 = (_OWORD *)sub_1B2C8BC40();
      uint64_t v78 = v51;
      long long v52 = v82[1];
      v51[1] = v82[0];
      v51[2] = v52;
      void v51[3] = *(_OWORD *)v83;
      *(_OWORD *)((char *)v51 + 57) = *(_OWORD *)&v83[9];
      BOOL v53 = *(void *)(v73 + 24) == 0;
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_1B2C8BD98();
      sub_1B2C795F8(v54, v55, v56, v57, 0, v58);
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v78);
      uint64_t v59 = type metadata accessor for K2TTextualization();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v32, 1, v59) == 1)
      {
        sub_1B2C8969C((uint64_t)v32);
        goto LABEL_78;
      }
      uint64_t v61 = (_OWORD *)*v32;
      uint64_t v60 = v32[1];
      swift_bridgeObjectRetain();
      sub_1B2C799E8((uint64_t)v32);
      if (v22)
      {
        uint64_t v78 = v61;
        uint64_t v79 = v60;
        sub_1B2E82518();
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2C8BCB4();
        uint64_t v61 = v78;
        uint64_t v60 = v79;
      }
      uint64_t v62 = v70[2];
      if (v62)
      {
        BOOL v63 = (_OWORD *)v70[4] == v61 && v70[5] == v60;
        if (v63 || (sub_1B299BBC4() & 1) != 0) {
          goto LABEL_70;
        }
        if (v62 != 1)
        {
          BOOL v68 = (_OWORD *)v70[6] == v61 && v70[7] == v60;
          if (v68 || (sub_1B299BBC4() & 1) != 0)
          {
LABEL_70:
            swift_bridgeObjectRelease();
            goto LABEL_78;
          }
          if (v62 != 2)
          {
            sub_1B2C8BE20();
            while (!__OFADD__(v53, 1))
            {
              BOOL v69 = *(_OWORD **)(v22 - 8) == v61 && *(void *)v22 == v60;
              if (v69 || (sub_1B299BBC4() & 1) != 0) {
                goto LABEL_70;
              }
              sub_1B2C8BDEC();
              if (v20) {
                goto LABEL_73;
              }
            }
            goto LABEL_106;
          }
        }
      }
LABEL_73:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B2C83B00();
        sub_1B29B7048();
      }
      sub_1B2C8BC88();
      if (v65) {
        sub_1B2C8BC08();
      }
      else {
        uint64_t v66 = v64;
      }
      v66[2] = v62;
      uint64_t v70 = v66;
      uint64_t v67 = &v66[2 * v22];
      v67[4] = v61;
      v67[5] = v60;
      goto LABEL_78;
    }
    char v21 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A53718(v14, v76, v15);
    v7 += 64;
    if (!--v6)
    {
      sub_1B2C8BBB8();
      uint64_t v22 = 0;
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
}

uint64_t sub_1B2C88970(void *a1, void *a2, void *a3)
{
  if (*a1 != a2[14]) {
    return 0;
  }
  uint64_t v6 = a1[6];
  uint64_t v5 = a1[7];
  uint64_t v7 = a1[8];
  BOOL v8 = a1[1] == a2[24] && a1[2] == a2[25];
  if (v8 || (char v9 = sub_1B2E837A8(), result = 0, (v9 & 1) != 0))
  {
    if (v6 == a2[15])
    {
      if (v5 == *a3 && v7 == a3[1]) {
        return 1;
      }
      else {
        return sub_1B2E837A8() & 1;
      }
    }
    return 0;
  }
  return result;
}

void sub_1B2C88A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B299B720();
  a19 = v21;
  a20 = v22;
  uint64_t v113 = v23;
  uint64_t v24 = sub_1B29A3EB4(&qword_1E9C41C78);
  uint64_t v25 = sub_1B299B0F0(v24);
  MEMORY[0x1F4188790](v25);
  sub_1B299B6D0();
  uint64_t v27 = sub_1B2C8BD7C(v26);
  uint64_t v28 = sub_1B299DB5C(v27, (uint64_t)&a12);
  MEMORY[0x1F4188790](v28);
  sub_1B2999940();
  sub_1B299B810();
  MEMORY[0x1F4188790](v29);
  sub_1B299B810();
  MEMORY[0x1F4188790](v30);
  sub_1B2AD0E78();
  sub_1B29B1A48(v31);
  uint64_t v122 = v20;
  uint64_t v32 = *(void *)(v20 + 128);
  uint64_t v33 = *(void *)(v32 + 16);
  if (!v33)
  {
    sub_1B2C8BED0();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain_n();
  char v34 = (unsigned __int8 *)(v32 + 88);
  while (1)
  {
    if (!_Records_GDEntityPredicate_records) {
      goto LABEL_102;
    }
    if (*((uint64_t *)_Records_GDEntityPredicate_records + 280) >= 2674)
    {
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      swift_release();
      __break(1u);
      return;
    }
    if (*((uint64_t *)_Records_GDEntityPredicate_records + 281) >= 3558) {
      goto LABEL_95;
    }
    uint64_t v131 = v33;
    if (!_Records_GDEntityPredicate_predicateIds) {
      goto LABEL_103;
    }
    uint64_t v36 = *((void *)v34 - 7);
    uint64_t v35 = *((void *)v34 - 6);
    uint64_t v37 = *((void *)v34 - 2);
    uint64_t v38 = *((void *)v34 - 1);
    int v39 = *v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = v37;
    uint64_t v41 = v37;
    uint64_t v42 = v38;
    sub_1B2A53708(v41, v38, v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels) {
      goto LABEL_104;
    }
    uint64_t v45 = v43;
    uint64_t v46 = v44;
    sub_1B2E82538();
    BOOL v47 = v36 == v45 && v35 == v46;
    if (v47) {
      break;
    }
    sub_1B2E837A8();
    sub_1B29A40EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36) {
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A53718(v40, v42, v39);
    v34 += 64;
    uint64_t v33 = v131 - 1;
    if (v131 == 1)
    {
      swift_bridgeObjectRelease_n();
      sub_1B2C8BED0();
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_17:
  swift_bridgeObjectRelease_n();
  sub_1B2A53708(v40, v42, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2A53718(v40, v42, v39);
  if (v39) {
    uint64_t v48 = 0;
  }
  else {
    uint64_t v48 = v42;
  }
  uint64_t v112 = v48;
LABEL_21:
  uint64_t v134 = *(void *)(v122 + 128);
  sub_1B2C8BC58();
  sub_1B2C856B0(&v134);
  swift_bridgeObjectRelease();
  uint64_t v49 = v134;
  uint64_t v119 = *(void *)(v134 + 16);
  if (v119)
  {
    unint64_t v50 = 0;
    uint64_t v118 = v134 + 32;
    uint64_t v121 = MEMORY[0x1E4FBC860];
    while (1)
    {
      if (v50 >= *(void *)(v49 + 16))
      {
LABEL_91:
        __break(1u);
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        __break(1u);
        goto LABEL_94;
      }
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_99;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 280) >= 2674) {
        goto LABEL_92;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 281) >= 3558) {
        goto LABEL_93;
      }
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_100;
      }
      unint64_t v125 = v50;
      uint64_t v51 = (uint64_t *)(v118 + (v50 << 6));
      uint64_t v52 = *v51;
      uint64_t v53 = v51[1];
      uint64_t v55 = v51[2];
      uint64_t v54 = v51[3];
      __int16 v124 = *((_WORD *)v51 + 16);
      uint64_t v57 = v51[5];
      uint64_t v56 = v51[6];
      char v58 = *((unsigned char *)v51 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2A53708(v57, v56, v58);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_101;
      }
      uint64_t v61 = v59;
      uint64_t v62 = v60;
      sub_1B2E82538();
      BOOL v63 = v52 == v61 && v53 == v62;
      uint64_t v123 = v52;
      if (v63)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v64 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v64 & 1) == 0) {
          goto LABEL_52;
        }
      }
      uint64_t v65 = *(void *)(v122 + 128);
      uint64_t v66 = *(void *)(v65 + 16);
      if (v66)
      {
        sub_1B2C8BC58();
        uint64_t v67 = (char *)(v65 + 88);
        char v130 = v58;
        uint64_t v128 = v57;
        uint64_t v129 = v56;
        uint64_t v126 = v55;
        uint64_t v127 = v54;
        while (_Records_GDEntityPredicate_records)
        {
          if (*((uint64_t *)_Records_GDEntityPredicate_records + 280) >= 2674)
          {
            __break(1u);
LABEL_90:
            __break(1u);
            goto LABEL_91;
          }
          if (*((uint64_t *)_Records_GDEntityPredicate_records + 281) >= 3558) {
            goto LABEL_90;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_97;
          }
          uint64_t v132 = v66;
          uint64_t v68 = *((void *)v67 - 7);
          uint64_t v69 = *((void *)v67 - 6);
          uint64_t v70 = *((void *)v67 - 2);
          uint64_t v71 = *((void *)v67 - 1);
          char v72 = *v67;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2A53708(v70, v71, v72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v73 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_98;
          }
          uint64_t v75 = v73;
          uint64_t v76 = v74;
          sub_1B2E82538();
          if (v68 == v75 && v69 == v76)
          {
            sub_1B2AD0E60();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            sub_1B2A53718(v70, v71, v72);
          }
          else
          {
            char v78 = sub_1B2E837A8();
            sub_1B2AD0E60();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B2A53718(v70, v71, v72);
            if ((v78 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B2C8BBB8();
              sub_1B2A53718(v128, v129, v130);
              goto LABEL_69;
            }
          }
          v67 += 64;
          uint64_t v66 = v132 - 1;
          char v58 = v130;
          uint64_t v57 = v128;
          uint64_t v56 = v129;
          uint64_t v55 = v126;
          uint64_t v54 = v127;
          if (v132 == 1)
          {
            sub_1B2C8BBB8();
            goto LABEL_52;
          }
        }
        goto LABEL_96;
      }
LABEL_52:
      int v136 = &type metadata for Subfact;
      uint64_t v137 = &protocol witness table for Subfact;
      uint64_t v79 = sub_1B2C8BC40();
      uint64_t v134 = v79;
      *(void *)(v79 + 16) = v123;
      *(void *)(v79 + 24) = v53;
      *(void *)(v79 + 32) = v55;
      *(void *)(v79 + 40) = v54;
      *(_WORD *)(v79 + 48) = v124;
      *(void *)(v79 + 56) = v57;
      *(void *)(v79 + 64) = v56;
      *(unsigned char *)(v79 + 72) = v58;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2A53708(v57, v56, v58);
      sub_1B2C79178(&v134, 1, v116);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v134);
      sub_1B2C8BD60((uint64_t)v116, 1, (uint64_t)&a12);
      if (v47)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2A53718(v57, v56, v58);
        sub_1B2C8969C((uint64_t)v116);
      }
      else
      {
        sub_1B2C79920((uint64_t)v116, (uint64_t)v120);
        uint64_t v80 = v120[1];
        uint64_t v134 = *v120;
        uint64_t v135 = v80;
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2A53718(v57, v56, v58);
        swift_bridgeObjectRelease();
        sub_1B2C8BCB4();
        swift_bridgeObjectRelease();
        uint64_t v81 = v134;
        uint64_t v82 = v135;
        *uint64_t v120 = v134;
        v120[1] = v82;
        sub_1B2C8BDFC();
        uint64_t v84 = *(void *)(v83 + 16);
        if (v84)
        {
          sub_1B2C8BC28();
          uint64_t v86 = (void *)(v121 + v85 + 8);
          uint64_t v87 = v84;
          while (1)
          {
            BOOL v88 = *(v86 - 1) == v81 && *v86 == v82;
            if (v88 || (sub_1B299BBC4() & 1) != 0) {
              break;
            }
            uint64_t v86 = (void *)((char *)v86 + v53);
            if (!--v87) {
              goto LABEL_63;
            }
          }
        }
        else
        {
LABEL_63:
          sub_1B2C79984((uint64_t)v120, v114);
          sub_1B2C8BF0C();
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            uint64_t v89 = sub_1B2C8BF0C();
          }
          else
          {
            char v95 = sub_1B2C83B00();
            uint64_t v89 = sub_1B29B9368(v95, v96, v97, v121);
          }
          unint64_t v91 = *(void *)(v89 + 16);
          unint64_t v90 = *(void *)(v89 + 24);
          if (v91 >= v90 >> 1)
          {
            char v98 = sub_1B2A9100C(v90);
            uint64_t v89 = sub_1B29B9368(v98, v99, v100, v101);
          }
          *(void *)(v89 + 16) = v91 + 1;
          sub_1B2B70F5C();
          uint64_t v121 = v92;
          uint64_t v93 = sub_1B2C8BF2C();
          sub_1B2C79920(v93, v94);
        }
        sub_1B2C799E8((uint64_t)v120);
      }
LABEL_69:
      uint64_t v49 = sub_1B299B27C();
      unint64_t v50 = v125 + 1;
      if (v125 + 1 == v119)
      {
        swift_release();
        uint64_t v102 = sub_1B2C8BF0C();
        goto LABEL_73;
      }
    }
  }
  swift_release();
  uint64_t v102 = MEMORY[0x1E4FBC860];
LABEL_73:
  if (*(void *)(v102 + 16))
  {
    uint64_t v103 = v102;
    uint64_t v134 = sub_1B2E823F8();
    uint64_t v135 = v104;
    if (v112)
    {
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2C8BCB4();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v103 + 16))
    {
      uint64_t v133 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B299B5C0();
      sub_1B2B70F5C();
      uint64_t v106 = v103 + v105;
      do
      {
        sub_1B2C79984(v106, v115);
        swift_bridgeObjectRetain();
        sub_1B2C799E8(v115);
        uint64_t v107 = v133;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29BFD80();
          uint64_t v107 = v133;
        }
        unint64_t v108 = *(void *)(v107 + 24);
        if (*(void *)(v107 + 16) >= v108 >> 1)
        {
          sub_1B299B984(v108);
          sub_1B29BFD80();
        }
        sub_1B2C8BE6C();
      }
      while (!v47);
      uint64_t v109 = v103;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v109 = v103;
    }
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2A20660();
    sub_1B2C8BE50();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2C8BE08();
    swift_bridgeObjectRelease();
    sub_1B2C8BCB4();
    sub_1B2C8E4D0(40, 0xE100000000000000, v109, MEMORY[0x1E4FBC860], v113);
    uint64_t v110 = (uint64_t)v113;
    uint64_t v111 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v110 = (uint64_t)v113;
    uint64_t v111 = 1;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v110, v111, 1, v117);
  sub_1B299B738();
}

uint64_t sub_1B2C895C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, void *a7)
{
  long long v8 = *(_OWORD *)(a1 + 16);
  long long v7 = *(_OWORD *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 48);
  char v10 = *(unsigned char *)(a1 + 56);
  long long v11 = *(_OWORD *)a4;
  uint64_t v12 = *(void *)(a4 + 16);
  uint64_t v13 = *(void *)(a4 + 24);
  __int16 v14 = *(_WORD *)(a4 + 32);
  v22[0] = *(_OWORD *)a1;
  v22[1] = v8;
  _OWORD v22[2] = v7;
  uint64_t v23 = v9;
  char v24 = v10;
  long long v18 = v11;
  uint64_t v19 = v12;
  uint64_t v20 = v13;
  __int16 v21 = v14;
  long long v15 = a6[1];
  v17[0] = *a6;
  v17[1] = v15;
  return sub_1B2C8571C((uint64_t)v22, a2, a3, &v18, a5, v17, a7);
}

uint64_t type metadata accessor for K2TAddressAndLocationRelationshipTextualizer()
{
  return self;
}

uint64_t sub_1B2C89650()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2A53718(*(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));

  return MEMORY[0x1F4186498](v0, 73, 7);
}

uint64_t sub_1B2C8969C(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C41C78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B2C896FC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1B2C89DDC(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_150;
  }
  uint64_t v5 = result;
  uint64_t v123 = v1;
  uint64_t result = sub_1B29B69C8(v3 / 2);
  uint64_t v118 = result;
  uint64_t v119 = v3;
  uint64_t v121 = v6;
  uint64_t v116 = a1;
  if (v3 <= 0)
  {
    uint64_t v122 = MEMORY[0x1E4FBC860];
    unint64_t v41 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_116:
    if (v41 < 2)
    {
LABEL_127:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v118 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_155;
    }
    uint64_t v107 = *v116;
    while (1)
    {
      unint64_t v108 = v41 - 2;
      if (v41 < 2) {
        break;
      }
      if (!v107) {
        goto LABEL_159;
      }
      uint64_t v109 = v122;
      uint64_t v110 = *(void *)(v122 + 32 + 16 * v108);
      uint64_t v111 = *(void *)(v122 + 32 + 16 * (v41 - 1) + 8);
      uint64_t result = sub_1B2C89ED0((char *)(v107 + (v110 << 6)), (char *)(v107 + (*(void *)(v122 + 32 + 16 * (v41 - 1)) << 6)), v107 + (v111 << 6), v121);
      if (v123) {
        goto LABEL_112;
      }
      if (v111 < v110) {
        goto LABEL_145;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B2DCA54C();
        uint64_t v109 = result;
      }
      if (v108 >= *(void *)(v109 + 16)) {
        goto LABEL_146;
      }
      uint64_t v112 = (void *)(v109 + 32 + 16 * v108);
      *uint64_t v112 = v110;
      v112[1] = v111;
      unint64_t v113 = *(void *)(v109 + 16);
      if (v41 > v113) {
        goto LABEL_147;
      }
      uint64_t result = (uint64_t)memmove((void *)(v109 + 32 + 16 * (v41 - 1)), (const void *)(v109 + 32 + 16 * v41), 16 * (v113 - v41));
      uint64_t v122 = v109;
      *(void *)(v109 + 16) = v113 - 1;
      unint64_t v41 = v113 - 1;
      uint64_t v3 = v119;
      if (v113 <= 2) {
        goto LABEL_127;
      }
    }
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
    return result;
  }
  uint64_t v117 = v5;
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v114 = *a1 + 56;
  uint64_t v115 = *a1 + 8;
  uint64_t v122 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_38;
    }
    char v10 = (uint64_t *)(v8 + (v7 << 6));
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v8 + (v9 << 6));
    if (result == *v12 && v11 == v12[1])
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_37;
      }
      int v14 = 0;
LABEL_13:
      uint64_t v16 = (void *)(v115 + (v15 << 6));
      do
      {
        uint64_t result = *(v16 - 1);
        uint64_t v17 = (void *)(v8 + (v7 << 6));
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = sub_1B2E837A8();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 8;
        uint64_t v19 = v15 + 1;
        uint64_t v7 = v15;
        uint64_t v15 = v19;
      }
      while (v19 < v3);
      uint64_t v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = sub_1B2E837A8();
    int v14 = result;
    uint64_t v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    uint64_t v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_38;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_154;
    }
    if (v9 < v15)
    {
      uint64_t v20 = (v15 << 6) - 64;
      uint64_t v21 = v9 << 6;
      uint64_t v22 = v15;
      uint64_t v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_158;
          }
          unint64_t v24 = v8 + v21;
          uint64_t v25 = v8 + v20;
          uint64_t v26 = *(void *)(v8 + v21);
          uint64_t v27 = *(void *)(v8 + v21 + 8);
          uint64_t v28 = *(void *)(v8 + v21 + 16);
          uint64_t v29 = *(void *)(v8 + v21 + 24);
          __int16 v30 = *(_WORD *)(v8 + v21 + 32);
          long long v31 = *(_OWORD *)(v8 + v21 + 40);
          BOOL v32 = v21 != v20 || v24 >= v8 + v20 + 64;
          uint64_t result = *(unsigned __int8 *)(v24 + 56);
          if (v32)
          {
            long long v33 = *(_OWORD *)v25;
            long long v34 = *(_OWORD *)(v25 + 16);
            long long v35 = *(_OWORD *)(v25 + 48);
            *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
            *(_OWORD *)(v24 + 48) = v35;
            *(_OWORD *)unint64_t v24 = v33;
            *(_OWORD *)(v24 + 16) = v34;
          }
          *(void *)uint64_t v25 = v26;
          *(void *)(v25 + 8) = v27;
          *(void *)(v25 + 16) = v28;
          *(void *)(v25 + 24) = v29;
          *(_WORD *)(v25 + 32) = v30;
          *(_OWORD *)(v25 + 40) = v31;
          *(unsigned char *)(v25 + 56) = result;
        }
        ++v23;
        v20 -= 64;
        v21 += 64;
      }
      while (v23 < v22);
    }
LABEL_37:
    uint64_t v7 = v15;
LABEL_38:
    if (v7 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_149;
    }
    if (v7 - v9 >= v117) {
      goto LABEL_47;
    }
    if (__OFADD__(v9, v117)) {
      goto LABEL_152;
    }
    if (v9 + v117 >= v3) {
      uint64_t v36 = v3;
    }
    else {
      uint64_t v36 = v9 + v117;
    }
    if (v36 < v9) {
      goto LABEL_153;
    }
    if (v7 == v36)
    {
LABEL_47:
      uint64_t v37 = v122;
    }
    else
    {
      uint64_t v89 = v114 + (v7 << 6);
      uint64_t v37 = v122;
      uint64_t v120 = v9;
      do
      {
        uint64_t v90 = v9;
        uint64_t v91 = v89;
        do
        {
          uint64_t result = *(void *)(v91 - 56);
          uint64_t v92 = (_OWORD *)(v91 - 56);
          uint64_t v93 = (_OWORD *)(v91 - 120);
          if (result == *(void *)(v91 - 120) && *(void *)(v91 - 48) == *(void *)(v91 - 112)) {
            break;
          }
          uint64_t result = sub_1B2E837A8();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_156;
          }
          long long v96 = *(_OWORD *)(v91 - 88);
          long long v95 = *(_OWORD *)(v91 - 72);
          *(unsigned char *)(v91 - 64) = *(unsigned char *)v91;
          v91 -= 64;
          uint64_t v97 = *(void *)(v91 + 8);
          uint64_t v98 = *(void *)(v91 + 16);
          uint64_t v99 = *(void *)(v91 + 24);
          uint64_t v100 = *(void *)(v91 + 32);
          __int16 v101 = *(_WORD *)(v91 + 40);
          long long v102 = v93[1];
          *uint64_t v92 = *v93;
          v92[1] = v102;
          long long v103 = *(_OWORD *)(v91 + 48);
          v92[2] = v96;
          v92[3] = v95;
          *(void *)(v91 - 56) = v97;
          *(void *)(v91 - 48) = v98;
          *(void *)(v91 - 40) = v99;
          *(void *)(v91 - 32) = v100;
          *(_WORD *)(v91 - 24) = v101;
          ++v90;
          *(_OWORD *)(v91 - 16) = v103;
        }
        while (v7 != v90);
        ++v7;
        v89 += 64;
        uint64_t v9 = v120;
      }
      while (v7 != v36);
      uint64_t v7 = v36;
    }
    if (v7 < v9) {
      goto LABEL_148;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = v9;
    if ((result & 1) == 0)
    {
      uint64_t v104 = (char *)sub_1B2C83B00();
      uint64_t result = (uint64_t)sub_1B2DCA454(v104, v105, v106, (char *)v37);
      uint64_t v37 = result;
    }
    unint64_t v40 = *(void *)(v37 + 16);
    unint64_t v39 = *(void *)(v37 + 24);
    unint64_t v41 = v40 + 1;
    if (v40 >= v39 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454((char *)(v39 > 1), v40 + 1, 1, (char *)v37);
      uint64_t v37 = result;
    }
    *(void *)(v37 + 16) = v41;
    uint64_t v42 = v37 + 32;
    uint64_t v43 = (uint64_t *)(v37 + 32 + 16 * v40);
    *uint64_t v43 = v38;
    v43[1] = v7;
    uint64_t v122 = v37;
    if (v40) {
      break;
    }
    unint64_t v41 = 1;
LABEL_96:
    uint64_t v3 = v119;
    if (v7 >= v119) {
      goto LABEL_116;
    }
  }
  while (1)
  {
    unint64_t v44 = v41 - 1;
    if (v41 >= 4)
    {
      unint64_t v49 = v42 + 16 * v41;
      uint64_t v50 = *(void *)(v49 - 64);
      uint64_t v51 = *(void *)(v49 - 56);
      BOOL v55 = __OFSUB__(v51, v50);
      uint64_t v52 = v51 - v50;
      if (v55) {
        goto LABEL_133;
      }
      uint64_t v54 = *(void *)(v49 - 48);
      uint64_t v53 = *(void *)(v49 - 40);
      BOOL v55 = __OFSUB__(v53, v54);
      uint64_t v47 = v53 - v54;
      char v48 = v55;
      if (v55) {
        goto LABEL_134;
      }
      unint64_t v56 = v41 - 2;
      uint64_t v57 = (uint64_t *)(v42 + 16 * (v41 - 2));
      uint64_t v59 = *v57;
      uint64_t v58 = v57[1];
      BOOL v55 = __OFSUB__(v58, v59);
      uint64_t v60 = v58 - v59;
      if (v55) {
        goto LABEL_135;
      }
      BOOL v55 = __OFADD__(v47, v60);
      uint64_t v61 = v47 + v60;
      if (v55) {
        goto LABEL_137;
      }
      if (v61 >= v52)
      {
        uint64_t v79 = (uint64_t *)(v42 + 16 * v44);
        uint64_t v81 = *v79;
        uint64_t v80 = v79[1];
        BOOL v55 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v55) {
          goto LABEL_143;
        }
        BOOL v72 = v47 < v82;
        goto LABEL_85;
      }
    }
    else
    {
      if (v41 != 3)
      {
        uint64_t v73 = *(void *)(v37 + 32);
        uint64_t v74 = *(void *)(v37 + 40);
        BOOL v55 = __OFSUB__(v74, v73);
        uint64_t v66 = v74 - v73;
        char v67 = v55;
        goto LABEL_79;
      }
      uint64_t v46 = *(void *)(v37 + 32);
      uint64_t v45 = *(void *)(v37 + 40);
      BOOL v55 = __OFSUB__(v45, v46);
      uint64_t v47 = v45 - v46;
      char v48 = v55;
    }
    if (v48) {
      goto LABEL_136;
    }
    unint64_t v56 = v41 - 2;
    uint64_t v62 = (uint64_t *)(v42 + 16 * (v41 - 2));
    uint64_t v64 = *v62;
    uint64_t v63 = v62[1];
    BOOL v65 = __OFSUB__(v63, v64);
    uint64_t v66 = v63 - v64;
    char v67 = v65;
    if (v65) {
      goto LABEL_138;
    }
    uint64_t v68 = (uint64_t *)(v42 + 16 * v44);
    uint64_t v70 = *v68;
    uint64_t v69 = v68[1];
    BOOL v55 = __OFSUB__(v69, v70);
    uint64_t v71 = v69 - v70;
    if (v55) {
      goto LABEL_140;
    }
    if (__OFADD__(v66, v71)) {
      goto LABEL_142;
    }
    if (v66 + v71 >= v47)
    {
      BOOL v72 = v47 < v71;
LABEL_85:
      if (v72) {
        unint64_t v44 = v56;
      }
      goto LABEL_87;
    }
LABEL_79:
    if (v67) {
      goto LABEL_139;
    }
    uint64_t v75 = (uint64_t *)(v42 + 16 * v44);
    uint64_t v77 = *v75;
    uint64_t v76 = v75[1];
    BOOL v55 = __OFSUB__(v76, v77);
    uint64_t v78 = v76 - v77;
    if (v55) {
      goto LABEL_141;
    }
    if (v78 < v66) {
      goto LABEL_96;
    }
LABEL_87:
    unint64_t v83 = v44 - 1;
    if (v44 - 1 >= v41)
    {
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
      goto LABEL_144;
    }
    if (!v8) {
      goto LABEL_157;
    }
    uint64_t v84 = (uint64_t *)(v42 + 16 * v83);
    uint64_t v85 = *v84;
    uint64_t v86 = (void *)(v42 + 16 * v44);
    uint64_t v87 = v86[1];
    uint64_t result = sub_1B2C89ED0((char *)(v8 + (*v84 << 6)), (char *)(v8 + (*v86 << 6)), v8 + (v87 << 6), v121);
    if (v123) {
      break;
    }
    if (v87 < v85) {
      goto LABEL_130;
    }
    if (v44 > *(void *)(v122 + 16)) {
      goto LABEL_131;
    }
    *uint64_t v84 = v85;
    *(void *)(v42 + 16 * v83 + 8) = v87;
    unint64_t v88 = *(void *)(v122 + 16);
    if (v44 >= v88) {
      goto LABEL_132;
    }
    uint64_t v37 = v122;
    unint64_t v41 = v88 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v42 + 16 * v44), v86 + 2, 16 * (v88 - 1 - v44));
    *(void *)(v122 + 16) = v88 - 1;
    if (v88 <= 2) {
      goto LABEL_96;
    }
  }
LABEL_112:
  uint64_t result = swift_bridgeObjectRelease();
  if (v119 < -1) {
    goto LABEL_151;
  }
  *(void *)(v118 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C89DDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + (a3 << 6) + 56;
    while (2)
    {
      uint64_t v9 = v6;
      uint64_t v10 = v8;
      do
      {
        uint64_t result = *(void *)(v10 - 56);
        uint64_t v11 = (_OWORD *)(v10 - 56);
        uint64_t v12 = (_OWORD *)(v10 - 120);
        if (result == *(void *)(v10 - 120) && *(void *)(v10 - 48) == *(void *)(v10 - 112)) {
          break;
        }
        uint64_t result = sub_1B2E837A8();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        long long v15 = *(_OWORD *)(v10 - 88);
        long long v14 = *(_OWORD *)(v10 - 72);
        *(unsigned char *)(v10 - 64) = *(unsigned char *)v10;
        v10 -= 64;
        uint64_t v16 = *(void *)(v10 + 8);
        uint64_t v17 = *(void *)(v10 + 16);
        uint64_t v18 = *(void *)(v10 + 24);
        uint64_t v19 = *(void *)(v10 + 32);
        __int16 v20 = *(_WORD *)(v10 + 40);
        long long v21 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v21;
        long long v22 = *(_OWORD *)(v10 + 48);
        _OWORD v11[2] = v15;
        v11[3] = v14;
        *(void *)(v10 - 56) = v16;
        *(void *)(v10 - 48) = v17;
        *(void *)(v10 - 40) = v18;
        *(void *)(v10 - 32) = v19;
        *(_WORD *)(v10 - 24) = v20;
        ++v9;
        *(_OWORD *)(v10 - 16) = v22;
      }
      while (v4 != v9);
      ++v4;
      v8 += 64;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1B2C89ED0(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 64;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 64;
  if (v9 >= v11)
  {
    sub_1B29BE08C(a2, (uint64_t)(a3 - (void)a2) / 64, a4);
    unint64_t v12 = (unint64_t)&v4[64 * v11];
    if (v7 >= v6 || v10 < 64) {
      goto LABEL_43;
    }
    uint64_t v19 = (char *)(a3 - 64);
    while (1)
    {
      __int16 v20 = v19 + 64;
      long long v21 = (char *)(v12 - 64);
      BOOL v22 = *(void *)(v12 - 64) == *((void *)v6 - 8) && *(void *)(v12 - 56) == *((void *)v6 - 7);
      if (v22 || (sub_1B2E837A8() & 1) == 0)
      {
        BOOL v24 = v20 != (char *)v12 || (unint64_t)v19 >= v12;
        v12 -= 64;
        if (!v24) {
          goto LABEL_39;
        }
      }
      else
      {
        BOOL v23 = v20 != v6 || v19 >= v6;
        long long v21 = v6 - 64;
        v6 -= 64;
        if (!v23) {
          goto LABEL_39;
        }
      }
      long long v25 = *(_OWORD *)v21;
      long long v26 = *((_OWORD *)v21 + 1);
      long long v27 = *((_OWORD *)v21 + 3);
      *((_OWORD *)v19 + 2) = *((_OWORD *)v21 + 2);
      *((_OWORD *)v19 + 3) = v27;
      *(_OWORD *)uint64_t v19 = v25;
      *((_OWORD *)v19 + 1) = v26;
LABEL_39:
      v19 -= 64;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_43;
      }
    }
  }
  sub_1B29BE08C(a1, (a2 - a1) / 64, a4);
  unint64_t v12 = (unint64_t)&v4[64 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 64)
  {
    while (1)
    {
      BOOL v13 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v13 && (sub_1B2E837A8() & 1) != 0) {
        break;
      }
      long long v14 = v4;
      BOOL v13 = v7 == v4;
      v4 += 64;
      if (!v13) {
        goto LABEL_13;
      }
LABEL_14:
      v7 += 64;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    long long v14 = v6;
    BOOL v13 = v7 == v6;
    v6 += 64;
    if (v13) {
      goto LABEL_14;
    }
LABEL_13:
    long long v15 = *(_OWORD *)v14;
    long long v16 = *((_OWORD *)v14 + 1);
    long long v17 = *((_OWORD *)v14 + 3);
    *((_OWORD *)v7 + 2) = *((_OWORD *)v14 + 2);
    *((_OWORD *)v7 + 3) = v17;
    *(_OWORD *)uint64_t v7 = v15;
    *((_OWORD *)v7 + 1) = v16;
    goto LABEL_14;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_43:
  sub_1B29BE08C(v4, (uint64_t)(v12 - (void)v4) / 64, v6);
  return 1;
}

uint64_t sub_1B2C8A090()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B2C8A0D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B2C872FC(result, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
  return result;
}

uint64_t sub_1B2C8A0DC(uint64_t result, uint64_t a2)
{
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_208:
    __break(1u);
    goto LABEL_209;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 466) >= 2674)
  {
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  uint64_t v2 = 3558;
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 467) >= 3558)
  {
LABEL_152:
    __break(1u);
LABEL_153:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_154;
  }
  uint64_t v118 = a2;
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_209:
    __break(1u);
    goto LABEL_210;
  }
  long long v3 = *(_OWORD *)(result + 16);
  v124[0] = *(_OWORD *)result;
  v124[1] = v3;
  __int16 v125 = *(_WORD *)(result + 32);
  uint64_t v117 = result;
  sub_1B2C33B50(result);
  sub_1B29E52BC((uint64_t)v124);
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_210:
    __break(1u);
LABEL_211:
    __break(1u);
LABEL_212:
    __break(1u);
LABEL_213:
    __break(1u);
    goto LABEL_214;
  }
  uint64_t v5 = result;
  uint64_t v6 = v4;
  sub_1B2E82538();
  long long v7 = v124[0];
  if (v5 == *(void *)&v124[0] && v6 == *((void *)&v124[0] + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_73;
  }
  char v9 = sub_1B2E837A8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_73:
    sub_1B29C5E2C((uint64_t)v124);
    uint64_t v40 = *(void *)(v118 + 16);
    if (!v40) {
      goto LABEL_187;
    }
    uint64_t v41 = v118 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1B29C3B84(v41, (uint64_t)v121);
      uint64_t v42 = v122;
      uint64_t v43 = v123;
      sub_1B29AEC7C(v121, v122);
      uint64_t result = (uint64_t)(*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v43 + 24))(&v119, v42, v43);
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_198;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 175) >= 2674)
      {
        __break(1u);
LABEL_133:
        __break(1u);
        goto LABEL_134;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 176) >= 3558) {
        goto LABEL_133;
      }
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_199;
      }
      uint64_t v45 = v119;
      uint64_t v44 = v120;
      uint64_t result = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_200;
      }
      uint64_t v47 = result;
      uint64_t v48 = v46;
      sub_1B2E82538();
      if (v45 == v47 && v44 == v48)
      {
LABEL_188:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v121);
LABEL_189:
        swift_bridgeObjectRelease();
        sub_1B2C33BB0(v117);
        return 1;
      }
      char v50 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v121);
      if (v50) {
        goto LABEL_189;
      }
      v41 += 40;
      if (!--v40)
      {
LABEL_86:
        swift_bridgeObjectRelease();
        goto LABEL_187;
      }
    }
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_218:
    __break(1u);
    goto LABEL_219;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 472) >= 2674)
  {
LABEL_170:
    __break(1u);
    goto LABEL_171;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 473) >= 3558)
  {
LABEL_171:
    __break(1u);
    goto LABEL_172;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_219:
    __break(1u);
    goto LABEL_220;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_220:
    __break(1u);
LABEL_221:
    __break(1u);
    goto LABEL_222;
  }
  uint64_t v11 = result;
  uint64_t v12 = v10;
  sub_1B2E82538();
  if (v11 == (void)v7 && v12 == *((void *)&v7 + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_88;
  }
  char v14 = sub_1B2E837A8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_88:
    sub_1B29C5E2C((uint64_t)v124);
    uint64_t v51 = *(void *)(v118 + 16);
    if (!v51) {
      goto LABEL_187;
    }
    uint64_t v52 = v118 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1B29C3B84(v52, (uint64_t)v121);
      uint64_t v53 = v122;
      uint64_t v54 = v123;
      sub_1B29AEC7C(v121, v122);
      uint64_t result = (uint64_t)(*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v54 + 24))(&v119, v53, v54);
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_205;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 220) >= 2674)
      {
        __break(1u);
LABEL_150:
        __break(1u);
        __break(1u);
        goto LABEL_151;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 221) >= 3558) {
        goto LABEL_150;
      }
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_206;
      }
      uint64_t v56 = v119;
      uint64_t v55 = v120;
      uint64_t result = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_207;
      }
      uint64_t v58 = result;
      uint64_t v59 = v57;
      sub_1B2E82538();
      if (v56 == v58 && v55 == v59) {
        goto LABEL_188;
      }
      char v61 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v121);
      if (v61) {
        goto LABEL_189;
      }
      v52 += 40;
      if (!--v51) {
        goto LABEL_86;
      }
    }
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_226:
    __break(1u);
    goto LABEL_227;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 469) >= 2674)
  {
LABEL_192:
    __break(1u);
    goto LABEL_193;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 470) >= 3558)
  {
LABEL_193:
    __break(1u);
LABEL_194:
    __break(1u);
LABEL_195:
    __break(1u);
    __break(1u);
LABEL_196:
    __break(1u);
    goto LABEL_197;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_227:
    __break(1u);
    goto LABEL_228;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_228:
    __break(1u);
LABEL_229:
    __break(1u);
LABEL_230:
    __break(1u);
LABEL_231:
    __break(1u);
    goto LABEL_232;
  }
  uint64_t v16 = result;
  uint64_t v17 = v15;
  sub_1B2E82538();
  if (v16 == (void)v7 && v17 == *((void *)&v7 + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_103;
  }
  char v19 = sub_1B2E837A8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_103:
    sub_1B29C5E2C((uint64_t)v124);
    uint64_t v62 = *(void *)(v118 + 16);
    if (!v62) {
      goto LABEL_187;
    }
    uint64_t v63 = v118 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1B29C3B84(v63, (uint64_t)v121);
      uint64_t v64 = v122;
      uint64_t v65 = v123;
      sub_1B29AEC7C(v121, v122);
      uint64_t result = (uint64_t)(*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v65 + 24))(&v119, v64, v65);
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_215;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 469) >= 2674)
      {
        __break(1u);
LABEL_169:
        __break(1u);
        __break(1u);
        goto LABEL_170;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 470) >= 3558) {
        goto LABEL_169;
      }
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_216;
      }
      uint64_t v67 = v119;
      uint64_t v66 = v120;
      uint64_t result = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_217;
      }
      uint64_t v69 = result;
      uint64_t v70 = v68;
      sub_1B2E82538();
      if (v67 == v69 && v66 == v70) {
        goto LABEL_188;
      }
      char v72 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v121);
      if (v72) {
        goto LABEL_189;
      }
      v63 += 40;
      if (!--v62) {
        goto LABEL_86;
      }
    }
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_232:
    __break(1u);
    goto LABEL_233;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 541) >= 2674) {
    goto LABEL_196;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 542) >= 3558)
  {
LABEL_197:
    __break(1u);
LABEL_198:
    __break(1u);
LABEL_199:
    __break(1u);
LABEL_200:
    __break(1u);
LABEL_201:
    __break(1u);
LABEL_202:
    __break(1u);
LABEL_203:
    __break(1u);
    goto LABEL_204;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_233:
    __break(1u);
    goto LABEL_234;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_234:
    __break(1u);
LABEL_235:
    __break(1u);
LABEL_236:
    __break(1u);
LABEL_237:
    __break(1u);
    goto LABEL_238;
  }
  uint64_t v21 = result;
  uint64_t v22 = v20;
  sub_1B2E82538();
  if (v21 == (void)v7 && v22 == *((void *)&v7 + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_118;
  }
  char v24 = sub_1B2E837A8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v24)
  {
LABEL_118:
    sub_1B29C5E2C((uint64_t)v124);
    uint64_t v73 = *(void *)(v118 + 16);
    if (!v73) {
      goto LABEL_187;
    }
    uint64_t v74 = v118 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1B29C3B84(v74, (uint64_t)v121);
      uint64_t v75 = v122;
      uint64_t v76 = v123;
      sub_1B29AEC7C(v121, v122);
      uint64_t result = (uint64_t)(*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v76 + 24))(&v119, v75, v76);
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_223;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 538) >= 2674)
      {
        __break(1u);
LABEL_191:
        __break(1u);
        goto LABEL_192;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 539) >= 3558) {
        goto LABEL_191;
      }
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_224;
      }
      uint64_t v78 = v119;
      uint64_t v77 = v120;
      uint64_t result = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_225;
      }
      uint64_t v80 = result;
      uint64_t v81 = v79;
      sub_1B2E82538();
      if (v78 == v80 && v77 == v81) {
        goto LABEL_188;
      }
      char v83 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v121);
      if (v83) {
        goto LABEL_189;
      }
      v74 += 40;
      if (!--v73) {
        goto LABEL_86;
      }
    }
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_238:
    __break(1u);
    goto LABEL_239;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 457) >= 2674) {
    goto LABEL_203;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 458) >= 3558)
  {
LABEL_204:
    __break(1u);
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
LABEL_207:
    __break(1u);
    goto LABEL_208;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_239:
    __break(1u);
    goto LABEL_240;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_240:
    __break(1u);
LABEL_241:
    __break(1u);
LABEL_242:
    __break(1u);
LABEL_243:
    __break(1u);
    goto LABEL_244;
  }
  uint64_t v26 = result;
  uint64_t v27 = v25;
  sub_1B2E82538();
  if (v26 == (void)v7 && v27 == *((void *)&v7 + 1))
  {
LABEL_134:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_135;
  }
  char v29 = sub_1B2E837A8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v29)
  {
LABEL_135:
    sub_1B29C5E2C((uint64_t)v124);
    uint64_t v84 = *(void *)(v118 + 16);
    if (!v84) {
      goto LABEL_187;
    }
    uint64_t v85 = v118 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1B29C3B84(v85, (uint64_t)v121);
      uint64_t v86 = v122;
      uint64_t v87 = v123;
      sub_1B29AEC7C(v121, v122);
      uint64_t result = (uint64_t)(*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v87 + 24))(&v119, v86, v87);
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_229;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 7) >= 2674) {
        goto LABEL_194;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 8) >= 3558) {
        goto LABEL_195;
      }
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_230;
      }
      uint64_t v89 = v119;
      uint64_t v88 = v120;
      uint64_t result = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_231;
      }
      uint64_t v91 = result;
      uint64_t v92 = v90;
      sub_1B2E82538();
      if (v89 == v91 && v88 == v92) {
        goto LABEL_188;
      }
      char v94 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v121);
      if (v94) {
        goto LABEL_189;
      }
      v85 += 40;
      if (!--v84) {
        goto LABEL_86;
      }
    }
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_244:
    __break(1u);
    goto LABEL_245;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 460) >= 2674) {
    goto LABEL_213;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 461) >= 3558)
  {
LABEL_214:
    __break(1u);
LABEL_215:
    __break(1u);
LABEL_216:
    __break(1u);
LABEL_217:
    __break(1u);
    goto LABEL_218;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_245:
    __break(1u);
    goto LABEL_246;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_246:
    __break(1u);
    goto LABEL_247;
  }
  uint64_t v31 = result;
  uint64_t v32 = v30;
  sub_1B2E82538();
  if (v31 == (void)v7 && v32 == *((void *)&v7 + 1)) {
    goto LABEL_153;
  }
  char v34 = sub_1B2E837A8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v34)
  {
LABEL_154:
    sub_1B29C5E2C((uint64_t)v124);
    uint64_t v95 = *(void *)(v118 + 16);
    if (!v95) {
      goto LABEL_187;
    }
    uint64_t v96 = v118 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1B29C3B84(v96, (uint64_t)v121);
      uint64_t v97 = v122;
      uint64_t v98 = v123;
      sub_1B29AEC7C(v121, v122);
      uint64_t result = (uint64_t)(*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v98 + 24))(&v119, v97, v98);
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_235;
      }
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 388) >= 2674) {
        goto LABEL_201;
      }
      if (*((void *)_Records_GDEntityPredicate_records + 389) >= v2) {
        goto LABEL_202;
      }
      if (!_Records_GDEntityPredicate_predicateIds) {
        goto LABEL_236;
      }
      uint64_t v100 = v119;
      uint64_t v99 = v120;
      uint64_t result = sub_1B2E82538();
      if (!_Records_GDEntityPredicate_labels) {
        goto LABEL_237;
      }
      uint64_t v102 = result;
      uint64_t v103 = v101;
      sub_1B2E82538();
      if (v100 == v102 && v99 == v103) {
        goto LABEL_188;
      }
      char v105 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v121);
      if (v105) {
        goto LABEL_189;
      }
      v96 += 40;
      if (!--v95) {
        goto LABEL_86;
      }
    }
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_247:
    __break(1u);
    goto LABEL_248;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 463) >= 2674) {
    goto LABEL_221;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 464) >= 3558)
  {
LABEL_222:
    __break(1u);
LABEL_223:
    __break(1u);
LABEL_224:
    __break(1u);
LABEL_225:
    __break(1u);
    goto LABEL_226;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_248:
    __break(1u);
    goto LABEL_249;
  }
  uint64_t result = sub_1B2E82538();
  if (_Records_GDEntityPredicate_labels)
  {
    uint64_t v36 = result;
    uint64_t v37 = v35;
    sub_1B2E82538();
    if (v36 != (void)v7 || v37 != *((void *)&v7 + 1))
    {
      char v39 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B29C5E2C((uint64_t)v124);
      if ((v39 & 1) == 0) {
        goto LABEL_187;
      }
LABEL_173:
      uint64_t v106 = *(void *)(v118 + 16);
      if (v106)
      {
        uint64_t v107 = v118 + 32;
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_1B29C3B84(v107, (uint64_t)v121);
          uint64_t v108 = v122;
          uint64_t v109 = v123;
          sub_1B29AEC7C(v121, v122);
          uint64_t result = (uint64_t)(*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v109 + 24))(&v119, v108, v109);
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_241;
          }
          if (*((uint64_t *)_Records_GDEntityPredicate_records + 334) >= 2674) {
            goto LABEL_211;
          }
          if (*((uint64_t *)_Records_GDEntityPredicate_records + 335) >= 3558) {
            goto LABEL_212;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_242;
          }
          uint64_t v111 = v119;
          uint64_t v110 = v120;
          uint64_t result = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_243;
          }
          uint64_t v113 = result;
          uint64_t v114 = v112;
          sub_1B2E82538();
          if (v111 == v113 && v110 == v114) {
            goto LABEL_188;
          }
          char v116 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v121);
          if (v116) {
            goto LABEL_189;
          }
          v107 += 40;
          if (!--v106) {
            goto LABEL_86;
          }
        }
      }
LABEL_187:
      sub_1B2C33BB0(v117);
      return 0;
    }
LABEL_172:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B29C5E2C((uint64_t)v124);
    goto LABEL_173;
  }
LABEL_249:
  __break(1u);
  return result;
}

uint64_t sub_1B2C8B00C(void *a1)
{
  return sub_1B2C88970(a1, *(void **)(v1 + 16), *(void **)(v1 + 24)) & 1;
}

uint64_t sub_1B2C8B02C(uint64_t result, uint64_t a2)
{
  if (!_Records_GDEntityPredicate_records) {
    goto LABEL_187;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 466) >= 2674)
  {
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  uint64_t v2 = *((void *)_Records_GDEntityPredicate_records + 467);
  uint64_t v4 = 3558;
  if (v2 >= 3558)
  {
LABEL_137:
    __break(1u);
LABEL_138:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_139:
    uint64_t v123 = sub_1B29C5E2C((uint64_t)v157);
    sub_1B2999BCC(v123, v124, v125, v126, v127, v128, v129, v130, v153, v154);
    if (!v2) {
      goto LABEL_166;
    }
    uint64_t v131 = swift_bridgeObjectRetain();
    sub_1B2C8BC9C(v131, v132, v133, v134, v135, v136, v137);
    uint64_t v138 = v156;
    sub_1B29AEC7C(v155, v156);
    uint64_t v139 = sub_1B299DC40();
    uint64_t result = v140(v139);
    if (!_Records_GDEntityPredicate_records)
    {
LABEL_214:
      __break(1u);
      goto LABEL_215;
    }
    if (*((uint64_t *)_Records_GDEntityPredicate_records + 388) < 2674)
    {
      if (*((void *)_Records_GDEntityPredicate_records + 389) < v4)
      {
        if (_Records_GDEntityPredicate_predicateIds)
        {
          uint64_t result = sub_1B29A469C();
          if (_Records_GDEntityPredicate_labels)
          {
            sub_1B2C8BBD0();
            sub_1B2C8BD08();
            if (!v11 || v3 != v138) {
              goto LABEL_165;
            }
            goto LABEL_167;
          }
          goto LABEL_216;
        }
LABEL_215:
        __break(1u);
LABEL_216:
        __break(1u);
        goto LABEL_217;
      }
      goto LABEL_181;
    }
LABEL_180:
    __break(1u);
LABEL_181:
    __break(1u);
LABEL_182:
    __break(1u);
    goto LABEL_183;
  }
  uint64_t v154 = a2;
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_188:
    __break(1u);
    goto LABEL_189;
  }
  long long v5 = *(_OWORD *)(result + 16);
  v157[0] = *(_OWORD *)result;
  v157[1] = v5;
  __int16 v158 = *(_WORD *)(result + 32);
  uint64_t v153 = result;
  sub_1B2C339E4(result);
  sub_1B29E52BC((uint64_t)v157);
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_189:
    __break(1u);
    goto LABEL_190;
  }
  uint64_t v7 = result;
  uint64_t v8 = v6;
  sub_1B2E82538();
  char v10 = v9;
  uint64_t v3 = *((void *)&v157[0] + 1);
  BOOL v11 = v7 == *(void *)&v157[0] && v8 == *((void *)&v157[0] + 1);
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_73;
  }
  char v12 = sub_1B299BBC4();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v12)
  {
LABEL_73:
    uint64_t v28 = sub_1B29C5E2C((uint64_t)v157);
    sub_1B2999BCC(v28, v29, v30, v31, v32, v33, v34, v35, v153, v154);
    if (!v2) {
      goto LABEL_166;
    }
    uint64_t v36 = swift_bridgeObjectRetain();
    sub_1B2C8BC9C(v36, v37, v38, v39, v40, v41, v42);
    uint64_t v43 = v156;
    sub_1B29AEC7C(v155, v156);
    uint64_t v44 = sub_1B299DC40();
    uint64_t result = v45(v44);
    if (!_Records_GDEntityPredicate_records) {
      goto LABEL_177;
    }
    if (*((uint64_t *)_Records_GDEntityPredicate_records + 175) >= 2674)
    {
      __break(1u);
    }
    else if (*((uint64_t *)_Records_GDEntityPredicate_records + 176) < 3558)
    {
      if (_Records_GDEntityPredicate_predicateIds)
      {
        uint64_t result = sub_1B29A469C();
        if (_Records_GDEntityPredicate_labels)
        {
          sub_1B2C8BBD0();
          sub_1B2C8BD08();
          if (!v11 || v3 != v43) {
            goto LABEL_165;
          }
          goto LABEL_167;
        }
        goto LABEL_179;
      }
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
      goto LABEL_180;
    }
    __break(1u);
    goto LABEL_122;
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_197:
    __break(1u);
    goto LABEL_198;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 472) >= 2674)
  {
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  uint64_t v2 = *((void *)_Records_GDEntityPredicate_records + 473);
  if (v2 >= 3558)
  {
LABEL_153:
    __break(1u);
    goto LABEL_154;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_198:
    __break(1u);
    goto LABEL_199;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_199:
    __break(1u);
LABEL_200:
    __break(1u);
    goto LABEL_201;
  }
  sub_1B2C8BBEC();
  sub_1B2C8BD54();
  if (v11 && v8 == v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_85;
  }
  sub_1B29A1E38();
  sub_1B29A40EC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_85:
    uint64_t v47 = sub_1B29C5E2C((uint64_t)v157);
    sub_1B2999BCC(v47, v48, v49, v50, v51, v52, v53, v54, v153, v154);
    if (!v2) {
      goto LABEL_166;
    }
    uint64_t v55 = swift_bridgeObjectRetain();
    sub_1B2C8BC9C(v55, v56, v57, v58, v59, v60, v61);
    uint64_t v62 = v156;
    sub_1B29AEC7C(v155, v156);
    uint64_t v63 = sub_1B299DC40();
    uint64_t result = v64(v63);
    if (!_Records_GDEntityPredicate_records) {
      goto LABEL_184;
    }
    if (*((uint64_t *)_Records_GDEntityPredicate_records + 220) >= 2674)
    {
      __break(1u);
    }
    else if (*((uint64_t *)_Records_GDEntityPredicate_records + 221) < 3558)
    {
      if (_Records_GDEntityPredicate_predicateIds)
      {
        uint64_t result = sub_1B29A469C();
        if (_Records_GDEntityPredicate_labels)
        {
          sub_1B2C8BBD0();
          sub_1B2C8BD08();
          if (!v11 || v3 != v62) {
            goto LABEL_165;
          }
          goto LABEL_167;
        }
        goto LABEL_186;
      }
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
      goto LABEL_188;
    }
    __break(1u);
    __break(1u);
    goto LABEL_136;
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_205:
    __break(1u);
    goto LABEL_206;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 469) >= 2674)
  {
LABEL_171:
    __break(1u);
    goto LABEL_172;
  }
  uint64_t v2 = *((void *)_Records_GDEntityPredicate_records + 470);
  if (v2 >= 3558)
  {
LABEL_172:
    __break(1u);
    goto LABEL_173;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_206:
    __break(1u);
    goto LABEL_207;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_207:
    __break(1u);
    goto LABEL_208;
  }
  sub_1B2C8BBEC();
  sub_1B2C8BD54();
  if (v11 && v8 == v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_97;
  }
  sub_1B29A1E38();
  sub_1B29A40EC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_97:
    uint64_t v66 = sub_1B29C5E2C((uint64_t)v157);
    sub_1B2999BCC(v66, v67, v68, v69, v70, v71, v72, v73, v153, v154);
    if (!v2) {
      goto LABEL_166;
    }
    uint64_t v74 = swift_bridgeObjectRetain();
    sub_1B2C8BC9C(v74, v75, v76, v77, v78, v79, v80);
    uint64_t v81 = v156;
    sub_1B29AEC7C(v155, v156);
    uint64_t v82 = sub_1B299DC40();
    uint64_t result = v83(v82);
    if (!_Records_GDEntityPredicate_records)
    {
LABEL_194:
      __break(1u);
      goto LABEL_195;
    }
    if (*((uint64_t *)_Records_GDEntityPredicate_records + 469) >= 2674)
    {
      __break(1u);
    }
    else if (*((uint64_t *)_Records_GDEntityPredicate_records + 470) < 3558)
    {
      if (_Records_GDEntityPredicate_predicateIds)
      {
        uint64_t result = sub_1B29A469C();
        if (_Records_GDEntityPredicate_labels)
        {
          sub_1B2C8BBD0();
          sub_1B2C8BD08();
          if (!v11 || v3 != v81) {
            goto LABEL_165;
          }
          goto LABEL_167;
        }
        goto LABEL_196;
      }
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
      goto LABEL_197;
    }
    __break(1u);
    __break(1u);
    goto LABEL_152;
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_211:
    __break(1u);
    goto LABEL_212;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 541) >= 2674) {
    goto LABEL_175;
  }
  uint64_t v15 = *((void *)_Records_GDEntityPredicate_records + 542);
  if (v15 >= 3558)
  {
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
    goto LABEL_178;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_212:
    __break(1u);
    goto LABEL_213;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_213:
    __break(1u);
    goto LABEL_214;
  }
  sub_1B2C8BBEC();
  sub_1B2C8BD54();
  if (v11 && v8 == v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_109;
  }
  sub_1B29A1E38();
  sub_1B29A40EC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_109:
    uint64_t v85 = sub_1B29C5E2C((uint64_t)v157);
    sub_1B2999BCC(v85, v86, v87, v88, v89, v90, v91, v92, v153, v154);
    if (!v15) {
      goto LABEL_166;
    }
    uint64_t v93 = swift_bridgeObjectRetain();
    sub_1B2C8BC9C(v93, v94, v95, v96, v97, v98, v99);
    uint64_t v100 = v156;
    sub_1B29AEC7C(v155, v156);
    uint64_t v101 = sub_1B299DC40();
    uint64_t result = v102(v101);
    if (!_Records_GDEntityPredicate_records)
    {
LABEL_202:
      __break(1u);
      goto LABEL_203;
    }
    if (*((uint64_t *)_Records_GDEntityPredicate_records + 538) >= 2674)
    {
      __break(1u);
    }
    else if (*((uint64_t *)_Records_GDEntityPredicate_records + 539) < 3558)
    {
      if (_Records_GDEntityPredicate_predicateIds)
      {
        uint64_t result = sub_1B29A469C();
        if (_Records_GDEntityPredicate_labels)
        {
          sub_1B2C8BBD0();
          sub_1B2C8BD08();
          if (!v11 || v3 != v100) {
            goto LABEL_165;
          }
          goto LABEL_167;
        }
        goto LABEL_204;
      }
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
      goto LABEL_205;
    }
    __break(1u);
    goto LABEL_171;
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_217:
    __break(1u);
    goto LABEL_218;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 457) >= 2674) {
    goto LABEL_182;
  }
  uint64_t v2 = *((void *)_Records_GDEntityPredicate_records + 458);
  if (v2 >= 3558)
  {
LABEL_183:
    __break(1u);
LABEL_184:
    __break(1u);
    goto LABEL_185;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_218:
    __break(1u);
    goto LABEL_219;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_219:
    __break(1u);
    goto LABEL_220;
  }
  sub_1B2C8BBEC();
  sub_1B2C8BD54();
  if (v11 && v8 == v3)
  {
LABEL_122:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_123:
    uint64_t v104 = sub_1B29C5E2C((uint64_t)v157);
    sub_1B2999BCC(v104, v105, v106, v107, v108, v109, v110, v111, v153, v154);
    if (!v2) {
      goto LABEL_166;
    }
    uint64_t v112 = swift_bridgeObjectRetain();
    sub_1B2C8BC9C(v112, v113, v114, v115, v116, v117, v118);
    uint64_t v119 = v156;
    sub_1B29AEC7C(v155, v156);
    uint64_t v120 = sub_1B299DC40();
    uint64_t result = v121(v120);
    if (!_Records_GDEntityPredicate_records)
    {
LABEL_208:
      __break(1u);
      goto LABEL_209;
    }
    if (*((uint64_t *)_Records_GDEntityPredicate_records + 7) < 2674)
    {
      if (*((uint64_t *)_Records_GDEntityPredicate_records + 8) < 3558)
      {
        if (_Records_GDEntityPredicate_predicateIds)
        {
          uint64_t result = sub_1B29A469C();
          if (_Records_GDEntityPredicate_labels)
          {
            sub_1B2C8BBD0();
            sub_1B2C8BD08();
            if (!v11 || v3 != v119) {
              goto LABEL_165;
            }
            goto LABEL_167;
          }
          goto LABEL_210;
        }
LABEL_209:
        __break(1u);
LABEL_210:
        __break(1u);
        goto LABEL_211;
      }
      goto LABEL_174;
    }
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
    __break(1u);
LABEL_175:
    __break(1u);
    goto LABEL_176;
  }
  sub_1B29A1E38();
  sub_1B29A40EC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10) {
    goto LABEL_123;
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_223:
    __break(1u);
    goto LABEL_224;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 460) >= 2674) {
    goto LABEL_192;
  }
  uint64_t v2 = *((void *)_Records_GDEntityPredicate_records + 461);
  if (v2 >= 3558)
  {
LABEL_193:
    __break(1u);
    goto LABEL_194;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_224:
    __break(1u);
    goto LABEL_225;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_225:
    __break(1u);
    goto LABEL_226;
  }
  sub_1B2C8BBEC();
  sub_1B2C8BD54();
  if (v11 && v8 == v3) {
    goto LABEL_138;
  }
  sub_1B29A1E38();
  sub_1B29A40EC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10) {
    goto LABEL_139;
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_226:
    __break(1u);
    goto LABEL_227;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 463) >= 2674) {
    goto LABEL_200;
  }
  uint64_t v2 = *((void *)_Records_GDEntityPredicate_records + 464);
  if (v2 >= 3558)
  {
LABEL_201:
    __break(1u);
    goto LABEL_202;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_227:
    __break(1u);
    goto LABEL_228;
  }
  uint64_t result = sub_1B2E82538();
  if (_Records_GDEntityPredicate_labels)
  {
    sub_1B2C8BBEC();
    sub_1B2C8BD54();
    if (!v11 || v8 != v3)
    {
      uint64_t v3 = sub_1B29A1E38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = sub_1B29C5E2C((uint64_t)v157);
      if ((v3 & 1) == 0) {
        goto LABEL_166;
      }
LABEL_155:
      sub_1B2999BCC(v20, v21, v22, v23, v24, v25, v26, v27, v153, v154);
      if (v2)
      {
        uint64_t v142 = swift_bridgeObjectRetain();
        sub_1B2C8BC9C(v142, v143, v144, v145, v146, v147, v148);
        uint64_t v149 = v156;
        sub_1B29AEC7C(v155, v156);
        uint64_t v150 = sub_1B299DC40();
        uint64_t result = v151(v150);
        if (!_Records_GDEntityPredicate_records)
        {
LABEL_220:
          __break(1u);
          goto LABEL_221;
        }
        if (*((uint64_t *)_Records_GDEntityPredicate_records + 334) < 2674)
        {
          if (*((uint64_t *)_Records_GDEntityPredicate_records + 335) < 3558)
          {
            if (_Records_GDEntityPredicate_predicateIds)
            {
              uint64_t result = sub_1B29A469C();
              if (_Records_GDEntityPredicate_labels)
              {
                sub_1B2C8BBD0();
                sub_1B2C8BD08();
                if (!v11 || v3 != v149)
                {
LABEL_165:
                  sub_1B29A2EE0();
                  sub_1B2C8BC70();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v155);
LABEL_168:
                  swift_bridgeObjectRelease();
                  sub_1B2C33A88(v153);
                  return 1;
                }
LABEL_167:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v155);
                goto LABEL_168;
              }
              goto LABEL_222;
            }
LABEL_221:
            __break(1u);
LABEL_222:
            __break(1u);
            goto LABEL_223;
          }
          goto LABEL_191;
        }
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
        goto LABEL_193;
      }
LABEL_166:
      sub_1B2C33A88(v153);
      return 0;
    }
LABEL_154:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_1B29C5E2C((uint64_t)v157);
    goto LABEL_155;
  }
LABEL_228:
  __break(1u);
  return result;
}

uint64_t sub_1B2C8BB9C(void *a1)
{
  return sub_1B2C8B00C(a1) & 1;
}

uint64_t sub_1B2C8BBB8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B2C8BBD0()
{
  return sub_1B2E82538();
}

uint64_t sub_1B2C8BBEC()
{
  return sub_1B2E82538();
}

void sub_1B2C8BC08()
{
  sub_1B29B7048();
}

uint64_t sub_1B2C8BC40()
{
  return swift_allocObject();
}

uint64_t sub_1B2C8BC58()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1B2C8BC70()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C8BC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  return sub_1B29C3B84(v7, (uint64_t)va);
}

uint64_t sub_1B2C8BCB4()
{
  return sub_1B2E82518();
}

__n128 sub_1B2C8BCCC(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 - 288) = *(_OWORD *)a1;
  *(_OWORD *)(v1 - 272) = v3;
  *(void *)(v1 - 256) = *(void *)(a1 + 32);
  return result;
}

uint64_t sub_1B2C8BCEC()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2C8BD14@<X0>(long long *a1@<X8>)
{
  long long v3 = *a1;
  long long v4 = a1[1];
  *(_WORD *)(v1 - 112) = *((_WORD *)a1 + 16);
  uint64_t v5 = v1 - 208;
  *(_OWORD *)(v5 + 64) = v3;
  *(_OWORD *)(v5 + 80) = v4;
  return sub_1B2C33B50(v1 - 208);
}

void sub_1B2C8BD40()
{
  *(void *)(v0 - 352) = 0;
  *(void *)(v0 - 328) = 0;
}

uint64_t sub_1B2C8BD60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, *(void *)(a3 - 256));
}

uint64_t sub_1B2C8BD7C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return type metadata accessor for K2TTextualization();
}

uint64_t sub_1B2C8BD98()
{
  return v0;
}

uint64_t sub_1B2C8BDB0(uint64_t result)
{
  *(void *)(result + 16) = v1;
  *(void *)(v5 - 424) = result;
  uint64_t v6 = result + 16 * v3;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v4;
  return result;
}

void sub_1B2C8BDC8()
{
  sub_1B29B7048();
}

uint64_t sub_1B2C8BE08()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2C8BE30@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(*(void *)(a1 - 256) + 48);
}

uint64_t sub_1B2C8BE50()
{
  return sub_1B2E822D8();
}

void sub_1B2C8BE6C()
{
  *(void *)(v0 + 16) = v2;
  uint64_t v5 = v0 + 16 * v4;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v1;
}

void sub_1B2C8BED0()
{
  *(void *)(v0 - 376) = 0;
  *(void *)(v0 - 368) = 0;
}

uint64_t sub_1B2C8BF0C()
{
  return *(void *)(v0 - 264);
}

__n128 sub_1B2C8BF18(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 - 144);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 160);
  *(_OWORD *)(a1 + 32) = v2;
  __n128 result = *(__n128 *)(v1 - 128);
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_1B2C8BF2C()
{
  return *(void *)(v0 - 352);
}

uint64_t sub_1B2C8BF38()
{
  uint64_t v4 = *(void *)(v2 - 304);
  return sub_1B2A53718(v4, v1, v0);
}

uint64_t sub_1B2C8BF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!_Records_GDEntityPredicate_records) {
    goto LABEL_151;
  }
  uint64_t v9 = *((void *)_Records_GDEntityPredicate_records + 4);
  if (v9 >= 2674)
  {
    __break(1u);
    goto LABEL_84;
  }
  uint64_t v8 = *((void *)_Records_GDEntityPredicate_records + 5);
  uint64_t v6 = 3558;
  if (v8 >= 3558)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  uint64_t v5 = *(void *)(v5 + 24);
  char v4 = (_BYTE)_Records_GDEntityPredicate_predicateIds + v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_153:
    __break(1u);
LABEL_154:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_155;
  }
  sub_1B2C8CF64();
  sub_1B2C8CF30();
  BOOL v10 = v10 && v7 == v5;
  if (v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  sub_1B299DAB0();
  sub_1B2C8CF4C();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v81 = a1;
    swift_bridgeObjectRetain();
LABEL_19:
    sub_1B2E82518();
LABEL_20:
    sub_1B2E82518();
    return v81;
  }
  static EntityPredicate.citizenOf.getter();
  sub_1B29A46B8(v11, v12, v13, v14, v15, v16, v17, v18, v72, a1, a2, a3, a4, v81);
  if (v10 && v8 == v5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_22;
  }
  sub_1B299DAB0();
  sub_1B2C8CF18();
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_22:
    sub_1B29A1E5C();
    sub_1B2E831F8();
    sub_1B29A2F04();
    swift_bridgeObjectRelease();
    uint64_t v81 = v73;
    sub_1B2C8CF80();
    goto LABEL_19;
  }
  if (!_Records_GDEntityPredicate_records) {
    goto LABEL_160;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 184) >= 2674)
  {
    __break(1u);
    goto LABEL_144;
  }
  uint64_t v8 = *((void *)_Records_GDEntityPredicate_records + 185);
  if (v8 >= 3558)
  {
LABEL_144:
    __break(1u);
LABEL_145:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_146;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_161:
    __break(1u);
    goto LABEL_162;
  }
  sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_162:
    __break(1u);
    __break(1u);
LABEL_163:
    __break(1u);
    goto LABEL_164;
  }
  sub_1B2C8CF64();
  sub_1B2C8CF30();
  if (v10 && v7 == v5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  sub_1B299DAB0();
  sub_1B2C8CF4C();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2C8CFB0();
    sub_1B29A2F04();
    swift_bridgeObjectRelease();
    uint64_t v81 = v73;
LABEL_56:
    sub_1B2C8CF3C();
    goto LABEL_19;
  }
  if (!_Records_GDEntityPredicate_records)
  {
    __break(1u);
    goto LABEL_168;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 190) >= 2674)
  {
    __break(1u);
    goto LABEL_148;
  }
  uint64_t v8 = *((void *)_Records_GDEntityPredicate_records + 191);
  if (v8 >= 3558)
  {
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_168:
    __break(1u);
    goto LABEL_169;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_169:
    __break(1u);
    goto LABEL_170;
  }
  sub_1B2C8CF64();
  sub_1B2C8CF30();
  if (v10 && v7 == v5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_58;
  }
  sub_1B299DAB0();
  sub_1B2C8CF4C();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_58:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2C8CFD0();
    sub_1B29A2F04();
    swift_bridgeObjectRelease();
    sub_1B29A0BA0();
    goto LABEL_56;
  }
  if (!_Records_GDEntityPredicate_records)
  {
    __break(1u);
    goto LABEL_191;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 175) >= 2674) {
    goto LABEL_149;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 176) >= 3558)
  {
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_191:
    __break(1u);
    goto LABEL_192;
  }
  sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_192:
    __break(1u);
LABEL_193:
    __break(1u);
    goto LABEL_194;
  }
  sub_1B2C8CEFC();
  sub_1B299F910();
  if (v10 && v8 == v5) {
    goto LABEL_80;
  }
  sub_1B299DAB0();
  sub_1B2C8CF18();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_53:
    uint64_t v24 = v73;
LABEL_81:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2C8CFD0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v81 = v24;
LABEL_82:
    sub_1B2C8CF3C();
    sub_1B2E82518();
    goto LABEL_20;
  }
  if (!_Records_GDEntityPredicate_records)
  {
    __break(1u);
    goto LABEL_203;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 466) >= 2674)
  {
    __break(1u);
    goto LABEL_157;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 467) >= 3558)
  {
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
    goto LABEL_159;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_203:
    __break(1u);
    goto LABEL_204;
  }
  sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_204:
    __break(1u);
    goto LABEL_205;
  }
  sub_1B2C8CEFC();
  sub_1B299F910();
  if (v10 && v8 == v5)
  {
LABEL_80:
    uint64_t v24 = v73;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_81;
  }
  sub_1B299DAB0();
  sub_1B2C8CF18();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4) {
    goto LABEL_53;
  }
  if (!_Records_GDEntityPredicate_records)
  {
    __break(1u);
    goto LABEL_217;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 241) >= 2674) {
    goto LABEL_158;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 242) >= 3558)
  {
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
    goto LABEL_161;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_217:
    __break(1u);
    goto LABEL_218;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_218:
    __break(1u);
    goto LABEL_219;
  }
  sub_1B2C8CEFC();
  sub_1B299F910();
  if (v10 && v8 == v5) {
    goto LABEL_141;
  }
  sub_1B299DAB0();
  sub_1B2C8CF18();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_79:
    uint64_t v27 = v73;
LABEL_142:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B29A1E5C();
    sub_1B2E831F8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v81 = v27;
    goto LABEL_82;
  }
LABEL_85:
  if (!_Records_GDEntityPredicate_records)
  {
    __break(1u);
    goto LABEL_245;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 469) >= 2674) {
    goto LABEL_163;
  }
  if (*((void *)_Records_GDEntityPredicate_records + 470) >= v6)
  {
LABEL_164:
    __break(1u);
LABEL_165:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_166;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_245:
    __break(1u);
    goto LABEL_246;
  }
  sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_246:
    __break(1u);
LABEL_247:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_215;
  }
  sub_1B2C8CEFC();
  sub_1B299F910();
  if (v10 && v8 == v5)
  {
LABEL_141:
    uint64_t v27 = v73;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_142;
  }
  sub_1B299DAB0();
  sub_1B2C8CF18();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4) {
    goto LABEL_79;
  }
  if (!_Records_GDEntityPredicate_records)
  {
    __break(1u);
    goto LABEL_250;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 7) >= 2674)
  {
    __break(1u);
    goto LABEL_187;
  }
  if (*((void *)_Records_GDEntityPredicate_records + 8) >= v6)
  {
LABEL_187:
    __break(1u);
LABEL_188:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_250:
    __break(1u);
    goto LABEL_251;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_251:
    __break(1u);
    __break(1u);
LABEL_252:
    __break(1u);
    goto LABEL_253;
  }
  sub_1B2C8CEFC();
  sub_1B299F910();
  if (v10 && v8 == v5) {
    goto LABEL_145;
  }
  sub_1B299DAB0();
  sub_1B2C8CF18();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_146:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2C8CF90();
    sub_1B29A2F04();
    swift_bridgeObjectRelease();
    sub_1B29A511C();
    goto LABEL_19;
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_254:
    __break(1u);
    goto LABEL_255;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 457) >= 2674) {
    goto LABEL_193;
  }
  if (*((void *)_Records_GDEntityPredicate_records + 458) >= v6)
  {
LABEL_194:
    __break(1u);
LABEL_195:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_196;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_255:
    __break(1u);
    goto LABEL_256;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_256:
    __break(1u);
    goto LABEL_257;
  }
  sub_1B2C8CEFC();
  sub_1B299F910();
  if (v10 && v8 == v5) {
    goto LABEL_145;
  }
  sub_1B299DAB0();
  sub_1B2C8CF18();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4) {
    goto LABEL_146;
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_257:
    __break(1u);
    goto LABEL_258;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 388) >= 2674)
  {
    __break(1u);
    goto LABEL_213;
  }
  if (*((void *)_Records_GDEntityPredicate_records + 389) >= v6)
  {
LABEL_213:
    __break(1u);
LABEL_214:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B299F268();
    goto LABEL_215;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_258:
    __break(1u);
    goto LABEL_259;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_259:
    __break(1u);
    goto LABEL_260;
  }
  sub_1B2C8CEFC();
  sub_1B299F910();
  if (v10 && v8 == v5) {
    goto LABEL_154;
  }
  sub_1B299DAB0();
  sub_1B2C8CF18();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_155:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B29A1E5C();
    sub_1B2E831F8();
    sub_1B29A2F04();
    swift_bridgeObjectRelease();
    sub_1B29A511C();
    goto LABEL_19;
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_260:
    __break(1u);
    goto LABEL_261;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 460) >= 2674)
  {
    __break(1u);
    goto LABEL_241;
  }
  if (*((void *)_Records_GDEntityPredicate_records + 461) >= v6)
  {
LABEL_241:
    __break(1u);
LABEL_242:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_243;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_261:
    __break(1u);
    goto LABEL_262;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_262:
    __break(1u);
LABEL_263:
    __break(1u);
    goto LABEL_264;
  }
  sub_1B2C8CEFC();
  sub_1B299F910();
  if (v10 && v8 == v5) {
    goto LABEL_154;
  }
  sub_1B299DAB0();
  sub_1B2C8CF18();
  swift_bridgeObjectRelease();
  if (v4) {
    goto LABEL_155;
  }
  static EntityPredicate.attendeeIdentifier.getter();
  sub_1B29A46B8(v33, v34, v35, v36, v37, v38, v39, v40, v72, v73, v75, v77, v79, v81);
  if (v10 && v8 == v5) {
    goto LABEL_165;
  }
  sub_1B299DAB0();
  sub_1B2C8CF18();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_166:
    sub_1B2C8CF90();
    sub_1B29A2F04();
    swift_bridgeObjectRelease();
    sub_1B29A511C();
    goto LABEL_19;
  }
LABEL_170:
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_267:
    __break(1u);
    goto LABEL_268;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 544) >= 2674) {
    goto LABEL_252;
  }
  if (*((void *)_Records_GDEntityPredicate_records + 545) >= v6)
  {
LABEL_253:
    __break(1u);
    goto LABEL_254;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_268:
    __break(1u);
    goto LABEL_269;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_269:
    __break(1u);
    goto LABEL_270;
  }
  char v4 = result;
  uint64_t v43 = v42;
  sub_1B2E82538();
  sub_1B2C8CF30();
  if (v10 && v43 == v5) {
    goto LABEL_188;
  }
  sub_1B299DAB0();
  sub_1B2C8CF4C();
  swift_bridgeObjectRelease();
  if (v4) {
    goto LABEL_55;
  }
  static EntityPredicate.isAllDay.getter();
  sub_1B29A46B8(v45, v46, v47, v48, v49, v50, v51, v52, v72, v73, v75, v77, v79, v81);
  if (v10 && v8 == v5) {
    goto LABEL_195;
  }
  sub_1B299DAB0();
  sub_1B2C8CF18();
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_196:
    BOOL v54 = v77 == 49 && v79 == 0xE100000000000000;
    if (v54 || (sub_1B2E837A8() & 1) != 0)
    {
      uint64_t v81 = v73;
      swift_bridgeObjectRetain();
      sub_1B2C8CF80();
    }
    else
    {
      sub_1B29A1E5C();
      sub_1B2E831F8();
      sub_1B29A2F04();
      swift_bridgeObjectRelease();
      uint64_t v81 = v73;
      sub_1B2C8CF80();
    }
    goto LABEL_20;
  }
LABEL_205:
  static EntityPredicate.phoneNumber.getter();
  sub_1B29A46B8(v55, v56, v57, v58, v59, v60, v61, v62, v72, v73, v75, v77, v79, v81);
  if (v10 && v8 == v5) {
    goto LABEL_214;
  }
  sub_1B299DAB0();
  sub_1B2C8CF18();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_215:
    sub_1B29A1E5C();
    sub_1B2E831F8();
    sub_1B29A2F04();
    swift_bridgeObjectRelease();
    sub_1B29A0BA0();
    goto LABEL_56;
  }
LABEL_219:
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_270:
    __break(1u);
    goto LABEL_271;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 280) >= 2674) {
    goto LABEL_263;
  }
  if (*((void *)_Records_GDEntityPredicate_records + 281) >= v6)
  {
LABEL_264:
    __break(1u);
LABEL_265:
    __break(1u);
    goto LABEL_266;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_271:
    __break(1u);
    goto LABEL_272;
  }
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityPredicate_labels)
  {
LABEL_272:
    __break(1u);
    goto LABEL_273;
  }
  char v65 = result;
  uint64_t v66 = v64;
  sub_1B2E82538();
  sub_1B2C8CF30();
  if (v10 && v66 == v5) {
    goto LABEL_242;
  }
  sub_1B299DAB0();
  sub_1B2C8CF4C();
  uint64_t result = swift_bridgeObjectRelease();
  if (v65)
  {
LABEL_243:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B29A1E5C();
    sub_1B2E831F8();
    sub_1B29A2F04();
    swift_bridgeObjectRelease();
    sub_1B29A0BA0();
    goto LABEL_56;
  }
  if (!_Records_GDEntityPredicate_records)
  {
LABEL_273:
    __break(1u);
    goto LABEL_274;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 100) >= 2674) {
    goto LABEL_265;
  }
  if (*((void *)_Records_GDEntityPredicate_records + 101) >= v6)
  {
LABEL_266:
    __break(1u);
    goto LABEL_267;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_274:
    __break(1u);
    goto LABEL_275;
  }
  uint64_t result = sub_1B2E82538();
  if (_Records_GDEntityPredicate_labels)
  {
    uint64_t v69 = v68;
    sub_1B2E82538();
    sub_1B2C8CF30();
    if (!v10 || v69 != v5)
    {
      char v71 = sub_1B299DAB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v71 & 1) == 0)
      {
        uint64_t v81 = v73;
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        sub_1B2E823F8();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      goto LABEL_215;
    }
    goto LABEL_247;
  }
LABEL_275:
  __break(1u);
  return result;
}

uint64_t sub_1B2C8CE8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for K2TTripleTextualizer()
{
  return self;
}

uint64_t sub_1B2C8CEFC()
{
  return sub_1B2E82538();
}

uint64_t sub_1B2C8CF18()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C8CF4C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C8CF64()
{
  return sub_1B2E82538();
}

uint64_t sub_1B2C8CF80()
{
  return 544434464;
}

uint64_t sub_1B2C8CF90()
{
  return sub_1B2E831F8();
}

uint64_t sub_1B2C8CFB0()
{
  return sub_1B2E831F8();
}

uint64_t sub_1B2C8CFD0()
{
  return sub_1B2E831F8();
}

uint64_t sub_1B2C8CFF0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  if (!_Records_GDEntityClass_records) {
    goto LABEL_47;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x4D0) >= 1336)
  {
    __break(1u);
    goto LABEL_42;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x4D8) >= 2889)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v76 = a8;
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v61 = *(void *)result;
  uint64_t v62 = *(void *)(result + 8);
  uint64_t v66 = *(void *)(result + 16);
  uint64_t v8 = *(void **)(result + 32);
  uint64_t v77 = *(void *)(result + 24);
  uint64_t v10 = *(void *)(result + 40);
  uint64_t v9 = *(void **)(result + 48);
  LODWORD(v78) = *(unsigned __int8 *)(result + 56);
  uint64_t v63 = *(void *)a4;
  uint64_t v67 = *(void *)(a4 + 8);
  uint64_t v64 = *(void *)(a4 + 16);
  uint64_t v68 = *(void *)(a4 + 24);
  HIDWORD(v65) = *(unsigned __int16 *)(a4 + 32);
  uint64_t v69 = *a6;
  uint64_t v70 = (void *)a6[1];
  char v71 = (void *)a6[2];
  uint64_t v72 = (void *)a6[3];
  char v11 = *(unsigned char *)(_Records_GDEntityClass_records + 0x4C8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v106 = result;
  uint64_t v107 = v12;
  uint64_t v108 = sub_1B2E82538();
  uint64_t v109 = v13;
  char v110 = v11;
  BOOL v14 = v108 == v10 && v13 == v9;
  if (v14 || (sub_1B29A46C8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t v88 = v61;
    uint64_t v89 = v62;
    uint64_t v90 = v66;
    uint64_t v91 = v77;
    uint64_t v92 = v8;
    uint64_t v93 = v10;
    uint64_t v94 = v9;
    char v95 = v78;
    uint64_t v101 = v69;
    uint64_t v102 = v70;
    uint64_t v103 = (uint64_t)v71;
    uint64_t v104 = v72;
    type metadata accessor for K2TAgentAffiliationRelationshipTextualizer();
    sub_1B2C8DF70();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v15 = v70;
    id v16 = v71;
    id v17 = v72;
    uint64_t result = sub_1B2C87F18(&v88);
LABEL_13:
    v76[3] = v78;
    v76[4] = (uint64_t)&off_1F0ABB418;
    *uint64_t v76 = result;
    return result;
  }
  uint64_t v88 = v77;
  uint64_t v89 = (uint64_t)v8;
  sub_1B2C8DF40();
  sub_1B29FB9A8();
  char v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_12;
  }
  if (!_Records_GDEntityClass_records) {
    goto LABEL_50;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x1A0) >= 1336) {
    goto LABEL_43;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x1A8) >= 2889)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v20 = (void *)*(unsigned __int8 *)(_Records_GDEntityClass_records + 0x198);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v22 = v21;
  uint64_t v101 = result;
  uint64_t v102 = v21;
  uint64_t v103 = sub_1B2E82538();
  uint64_t v104 = v23;
  char v105 = (char)v20;
  BOOL v24 = v103 == v10 && v23 == v9;
  if (v24 || (sub_1B29A46C8() & 1) != 0) {
    goto LABEL_39;
  }
  uint64_t v88 = v77;
  uint64_t v89 = (uint64_t)v8;
  sub_1B2C8DF40();
  sub_1B29FB9A8();
  uint64_t v20 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_40;
  }
  if (!_Records_GDEntityClass_records) {
    goto LABEL_53;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x218) >= 1336) {
    goto LABEL_45;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x220) >= 2889)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  char v26 = *(unsigned char *)(_Records_GDEntityClass_records + 0x210);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1B2E82538();
  if (_Records_GDEntityClass_labels)
  {
    uint64_t v96 = result;
    uint64_t v97 = v27;
    uint64_t v98 = sub_1B2E82538();
    uint64_t v99 = v28;
    char v100 = v26;
    BOOL v29 = v98 == v10 && v28 == v9;
    if (v29 || (sub_1B29A46C8() & 1) != 0)
    {
LABEL_39:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
    uint64_t v88 = v77;
    uint64_t v89 = (uint64_t)v8;
    sub_1B2C8DF40();
    sub_1B29FB9A8();
    uint64_t v20 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      sub_1B299DC64();
      type metadata accessor for K2TSubEntityTextualizer();
      sub_1B2C8DF70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      id v31 = v8;
      id v32 = v22;
      id v33 = v20;
      uint64_t v34 = a7;
      id v35 = a7;
      uint64_t v43 = sub_1B299F91C((uint64_t)v35, v36, v37, v38, v39, v40, v41, v42, (uint64_t)a7, v61, v62, v63, v64, v65, v66, v67, v68, v69, (uint64_t)v70,
              (uint64_t)v71,
              (uint64_t)v72,
              a2,
              a3,
              a5,
              (uint64_t)v76,
              v77,
              v78,
              v79,
              v80,
              v81,
              v82,
              v83,
              v84,
              v85,
              v86,
              v87,
              v88);
      uint64_t result = sub_1B2C8571C((uint64_t)v43, v44, v45, v46, v47, v48, v34);
      goto LABEL_13;
    }
LABEL_40:
    sub_1B299DC64();
    type metadata accessor for K2TAddressAndLocationRelationshipTextualizer();
    sub_1B2C8DF70();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v49 = v8;
    id v50 = v22;
    id v51 = v20;
    uint64_t v59 = sub_1B299F91C((uint64_t)v51, v52, v53, v54, v55, v56, v57, v58, (uint64_t)a7, v61, v62, v63, v64, v65, v66, v67, v68, v69, (uint64_t)v70,
            (uint64_t)v71,
            (uint64_t)v72,
            a2,
            a3,
            a5,
            (uint64_t)v76,
            v77,
            v78,
            v79,
            v80,
            v81,
            v82,
            v83,
            v84,
            v85,
            v86,
            v87,
            v88);
    uint64_t result = sub_1B2C87F18(v59);
    goto LABEL_13;
  }
LABEL_55:
  __break(1u);
  return result;
}

void sub_1B2C8D630(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (!_Records_GDEntityClass_records) {
    goto LABEL_51;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xB0) >= 1336)
  {
    __break(1u);
    goto LABEL_46;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xB8) >= 2889)
  {
LABEL_46:
    __break(1u);
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  unsigned int v44 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v41 = *(void **)(a2 + 16);
  uint64_t v42 = *(void **)(a2 + 24);
  char v5 = *(unsigned char *)(_Records_GDEntityClass_records + 0xA8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v8 = v7;
  uint64_t v55 = v6;
  uint64_t v56 = v7;
  uint64_t v57 = sub_1B2E82538();
  uint64_t v58 = v9;
  char v59 = v5;
  if (v57 == v4 && v9 == v3) {
    goto LABEL_12;
  }
  if (sub_1B29A0BB4())
  {
    sub_1B2C8DF60();
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1B29A1E6C();
    *(void *)&long long v51 = v8;
    *((void *)&v51 + 1) = 2889;
    uint64_t v52 = (uint64_t)v41;
    uint64_t v53 = v42;
    type metadata accessor for K2TLocationTextualizer();
    sub_1B29A5134();
    sub_1B2B716C8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2C8DF8C();
    swift_retain();
    id v11 = (id)0xB49;
    id v12 = v41;
    id v13 = v42;
    uint64_t v14 = sub_1B2C7FA90((uint64_t)v46, 1336, &v51, 0);
LABEL_14:
    a3[3] = v4;
    a3[4] = (uint64_t)&off_1F0ABA2D0;
    *a3 = v14;
    return;
  }
  sub_1B2C8DF1C();
  sub_1B29FB9A8();
  char v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16) {
    goto LABEL_13;
  }
  if (!_Records_GDEntityClass_records) {
    goto LABEL_54;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x278) >= 1336) {
    goto LABEL_47;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x280) >= 2889)
  {
LABEL_48:
    __break(1u);
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  char v17 = *(unsigned char *)(_Records_GDEntityClass_records + 0x270);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v20 = v19;
  *(void *)&long long v51 = v18;
  *((void *)&v51 + 1) = v19;
  uint64_t v52 = sub_1B2E82538();
  uint64_t v53 = v21;
  char v54 = v17;
  if (v52 == v4 && v21 == v3) {
    goto LABEL_27;
  }
  if (sub_1B29A0BB4())
  {
    sub_1B2C8DF60();
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_28:
    sub_1B29A1E6C();
    *(void *)&long long v47 = v20;
    *((void *)&v47 + 1) = 2889;
    uint64_t v48 = (uint64_t)v41;
    id v49 = v42;
    type metadata accessor for K2TPersonTextualizer();
    sub_1B29A5134();
    sub_1B2B716C8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2C8DF8C();
    swift_retain();
    id v23 = (id)0xB49;
    id v24 = v41;
    id v25 = v42;
    uint64_t v14 = sub_1B2C7D900((uint64_t)v46, 1336, &v47, 0);
    goto LABEL_14;
  }
  sub_1B2C8DF1C();
  sub_1B29FB9A8();
  char v27 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_28;
  }
  if (!_Records_GDEntityClass_records) {
    goto LABEL_57;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x380) >= 1336) {
    goto LABEL_49;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x388) >= 2889)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v28 = *(unsigned __int8 *)(_Records_GDEntityClass_records + 0x378);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B2E82538();
  if (_Records_GDEntityClass_labels)
  {
    *(void *)&long long v47 = v29;
    *((void *)&v47 + 1) = v30;
    uint64_t v48 = sub_1B2E82538();
    id v49 = v31;
    char v50 = v28;
    BOOL v32 = v48 == v4 && v31 == v3;
    id v33 = v3;
    if (!v32)
    {
      if ((sub_1B29A0BB4() & 1) == 0)
      {
        sub_1B2C8DF1C();
        sub_1B29FB9A8();
        id v33 = v37;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v33 & 1) == 0)
        {
          sub_1B29A2F20();
          type metadata accessor for K2TEntityTextualizer();
          sub_1B29A5134();
          sub_1B2B716C8();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2C8DF8C();
          swift_retain();
          id v38 = (id)0xB49;
          id v39 = v33;
          id v40 = (id)v44;
          uint64_t v14 = sub_1B2C7B834((uint64_t)v46, v28, v45, 0);
          goto LABEL_14;
        }
        goto LABEL_42;
      }
      sub_1B2C8DF60();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_42:
    sub_1B29A2F20();
    type metadata accessor for K2TEventTextualizer();
    sub_1B29A5134();
    sub_1B2B716C8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2C8DF8C();
    swift_retain();
    id v34 = (id)0xB49;
    id v35 = v33;
    id v36 = (id)v44;
    sub_1B2C7FB00(v46, v28, v45);
    goto LABEL_14;
  }
LABEL_59:
  __break(1u);
}

uint64_t sub_1B2C8DBF4()
{
  sub_1B2C8DECC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B2EC3C30;
  *(void *)(v0 + 32) = type metadata accessor for K2TEntityTextualizer();
  *(void *)(v0 + 40) = type metadata accessor for K2TPersonTextualizer();
  *(void *)(v0 + 48) = type metadata accessor for K2TLocationTextualizer();
  *(void *)(v0 + 56) = type metadata accessor for K2TEventTextualizer();
  *(void *)(v0 + 64) = type metadata accessor for K2TSubEntityTextualizer();
  *(void *)(v0 + 72) = type metadata accessor for K2TAgentAffiliationRelationshipTextualizer();
  uint64_t result = type metadata accessor for K2TAddressAndLocationRelationshipTextualizer();
  *(void *)(v0 + 80) = result;
  qword_1E9CAF8C8 = v0;
  return result;
}

uint64_t sub_1B2C8DC9C()
{
  if (qword_1E9C38C68 != -1) {
    goto LABEL_26;
  }
  while (1)
  {
    uint64_t v0 = qword_1E9CAF8C8;
    uint64_t v1 = *(void *)(qword_1E9CAF8C8 + 16);
    if (!v1) {
      break;
    }
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)(v0 + 8 * v3 + 32) + 152))(v2);
      uint64_t v6 = *(void *)(v5 + 16);
      uint64_t v7 = *(void *)(v4 + 16);
      if (__OFADD__(v7, v6)) {
        break;
      }
      uint64_t v8 = v5;
      if (!swift_isUniquelyReferenced_nonNull_native() || v7 + v6 > *(void *)(v4 + 24) >> 1)
      {
        sub_1B29B7260();
        uint64_t v4 = v9;
      }
      if (*(void *)(v8 + 16))
      {
        uint64_t v10 = *(void *)(v4 + 16);
        if ((*(void *)(v4 + 24) >> 1) - v10 < v6) {
          goto LABEL_24;
        }
        unint64_t v11 = v4 + 40 * v10 + 32;
        if (v8 + 32 < v11 + 40 * v6 && v11 < v8 + 32 + 40 * v6)
        {
          uint64_t result = sub_1B2E834A8();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        if (v6)
        {
          uint64_t v13 = *(void *)(v4 + 16);
          BOOL v14 = __OFADD__(v13, v6);
          uint64_t v15 = v13 + v6;
          if (v14) {
            goto LABEL_25;
          }
          *(void *)(v4 + 16) = v15;
        }
      }
      else if (v6)
      {
        goto LABEL_23;
      }
      uint64_t v2 = swift_bridgeObjectRelease();
      if (v1 == ++v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    swift_once();
  }
LABEL_21:
  sub_1B29A3EB4(&qword_1EB7E34A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
  static EntityPredicate.empty.getter(inited + 32);
  sub_1B2AD2FD0();
  return sub_1B2DDC5A4();
}

uint64_t sub_1B2C8DECC()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1E9C41CA0);
  if (sub_1B2B446B0(v0)) {
    uint64_t v1 = (uint64_t *)&unk_1E9C38A78;
  }
  else {
    uint64_t v1 = (uint64_t *)&unk_1E9C41CA8;
  }

  return sub_1B29A3EB4(v1);
}

void sub_1B2C8DF1C()
{
  EntityClass.ancestorClassesSet.getter();
}

void sub_1B2C8DF40()
{
  EntityClass.ancestorClassesSet.getter();
}

uint64_t sub_1B2C8DF70()
{
  return swift_allocObject();
}

uint64_t sub_1B2C8DF8C()
{
  return swift_bridgeObjectRetain();
}

uint64_t K2TClient.init(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v4, sel_setTimeStyle_, 0);
  objc_msgSend(v4, sel_setDateStyle_, 3);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v5, sel_setTimeStyle_, 2);
  objc_msgSend(v5, sel_setDateStyle_, 3);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C00]), sel_init);
  objc_msgSend(v6, sel_setUnitsStyle_, 3);
  objc_msgSend(v6, sel_setMaximumUnitCount_, 2);
  sub_1B2E7FF98();
  swift_allocObject();
  uint64_t v7 = sub_1B2E7FF88();
  uint64_t v8 = type metadata accessor for K2TInProcessService();
  sub_1B29C3B84(a1, (uint64_t)&v27);
  *(void *)&long long v24 = v7;
  *((void *)&v24 + 1) = v4;
  id v25 = v5;
  id v26 = v6;
  uint64_t v9 = v28;
  uint64_t v10 = (uint64_t)v29;
  uint64_t v11 = sub_1B2A49CD8((uint64_t)&v27, v28);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v13);
  uint64_t v15 = sub_1B2C850D8((uint64_t)v13, &v24, v8, v9, v10);
  id v16 = v4;
  id v17 = v5;
  id v18 = v6;
  swift_retain();
  id v19 = v16;
  id v20 = v17;
  id v21 = v18;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v27);
  uint64_t v28 = v8;
  uint64_t v29 = &off_1F0AB97D0;

  swift_release();
  *(void *)&long long v27 = v15;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
  return sub_1B29D1D20(&v27, a2);
}

uint64_t K2TClient.entityName(subjectId:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  sub_1B29AEC7C(v1, v1[3]);
  uint64_t v4 = v2;
  return sub_1B2C84CB4(&v4);
}

uint64_t K2TClient.entityNames(subjectIds:)(void *a1)
{
  uint64_t v3 = *sub_1B29AEC7C(v1, v1[3]);
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  id v6 = sub_1B29AEC7C(a1, v4);

  return sub_1B2C85180((uint64_t)v6, v3, v4, v5);
}

uint64_t K2TClient.factLevelSummaries(subjectId:renderTriples:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  sub_1B29AEC7C(v2, v2[3]);
  uint64_t v6 = v4;
  return sub_1B2C84D50(&v6, a2);
}

void K2TClient.entityLevelSummary(subjectId:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  sub_1B29AEC7C(v1, v1[3]);
  uint64_t v4 = v2;
  sub_1B2C84DE0(&v4, v3);
}

uint64_t initializeWithCopy for K2TClient(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for K2TClient(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for K2TClient(uint64_t a1, uint64_t a2)
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for K2TClient(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for K2TClient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for K2TClient()
{
  return &type metadata for K2TClient;
}

uint64_t sub_1B2C8E4D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v79 = a4;
  uint64_t v80 = a1;
  uint64_t v94 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1B2999940();
  uint64_t v92 = v11;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v12);
  uint64_t v87 = (char *)&v76 - v13;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v14);
  uint64_t v90 = (char *)&v76 - v15;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v16);
  uint64_t v86 = (char *)&v76 - v17;
  id v18 = (int *)type metadata accessor for K2TTextualization();
  sub_1B299D278();
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v21);
  sub_1B2999940();
  uint64_t v88 = v22;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v23);
  uint64_t v91 = (uint64_t)&v76 - v24;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v25);
  long long v27 = (char *)&v76 - v26;
  uint64_t v28 = sub_1B29A3EB4(&qword_1EB7D87C0);
  MEMORY[0x1F4188790](v28 - 8);
  sub_1B2999940();
  uint64_t v93 = v29;
  sub_1B299E6B8();
  uint64_t v31 = MEMORY[0x1F4188790](v30);
  id v33 = (char *)&v76 - v32;
  uint64_t v34 = MEMORY[0x1F4188790](v31);
  id v36 = (char *)&v76 - v35;
  MEMORY[0x1F4188790](v34);
  uint64_t v37 = *(void *)(a3 + 16);
  uint64_t v83 = (uint64_t)&v76 - v38;
  uint64_t v84 = a3;
  uint64_t v81 = v33;
  uint64_t v82 = a2;
  if (v37)
  {
    uint64_t v78 = a5;
    sub_1B2C8FECC();
    uint64_t v40 = a3 + v39;
    uint64_t v76 = v20;
    uint64_t v95 = *(void *)(v20 + 72);
    uint64_t v89 = v9;
    uint64_t v41 = (void (**)(void))(v9 + 32);
    swift_bridgeObjectRetain();
    uint64_t v42 = MEMORY[0x1E4FBC860];
    uint64_t v43 = v40;
    uint64_t v77 = v37;
    uint64_t v44 = v37;
    uint64_t v46 = v93;
    uint64_t v45 = v94;
    uint64_t v85 = v18;
    do
    {
      sub_1B2C79984(v43, (uint64_t)v27);
      sub_1B29C8A80((uint64_t)&v27[v18[5]], (uint64_t)v36);
      sub_1B2C799E8((uint64_t)v27);
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v36, 1, v45) == 1)
      {
        sub_1B2B2D5F8((uint64_t)v36);
      }
      else
      {
        long long v47 = *v41;
        sub_1B29A2F50();
        v47();
        sub_1B29A2F50();
        v47();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v42 = sub_1B29B7DD8(0, *(void *)(v42 + 16) + 1, 1, v42);
        }
        unint64_t v49 = *(void *)(v42 + 16);
        unint64_t v48 = *(void *)(v42 + 24);
        if (v49 >= v48 >> 1) {
          uint64_t v42 = sub_1B29B7DD8(v48 > 1, v49 + 1, 1, v42);
        }
        *(void *)(v42 + 16) = v49 + 1;
        sub_1B2C8FECC();
        uint64_t v45 = v94;
        sub_1B29A2F50();
        v47();
        id v18 = v85;
        uint64_t v46 = v93;
      }
      v43 += v95;
      --v44;
    }
    while (v44);
    swift_bridgeObjectRelease();
    sub_1B2A174C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v50 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v77;
    a5 = v78;
    uint64_t v52 = v77;
    do
    {
      uint64_t v53 = v91;
      sub_1B2C79984(v40, v91);
      sub_1B29C8A80(v53 + v18[6], v46);
      sub_1B2C799E8(v53);
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v46, 1, v45) == 1)
      {
        sub_1B2B2D5F8(v46);
      }
      else
      {
        char v54 = *v41;
        sub_1B29A2F50();
        v54();
        sub_1B29A2F50();
        v54();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v50 = sub_1B29B7DD8(0, *(void *)(v50 + 16) + 1, 1, v50);
        }
        unint64_t v56 = *(void *)(v50 + 16);
        unint64_t v55 = *(void *)(v50 + 24);
        if (v56 >= v55 >> 1) {
          uint64_t v50 = sub_1B29B7DD8(v55 > 1, v56 + 1, 1, v50);
        }
        *(void *)(v50 + 16) = v56 + 1;
        sub_1B2C8FECC();
        uint64_t v45 = v94;
        sub_1B29A2F50();
        v54();
        uint64_t v46 = v93;
      }
      v40 += v95;
      --v52;
    }
    while (v52);
    a3 = v84;
    swift_bridgeObjectRelease();
    id v33 = v81;
    a2 = v82;
    uint64_t v20 = v76;
  }
  else
  {
    sub_1B2A174C0();
    swift_bridgeObjectRelease();
    uint64_t v51 = 0;
  }
  sub_1B2A174C0();
  swift_bridgeObjectRelease();
  if (v51)
  {
    sub_1B2C8FECC();
    uint64_t v58 = a3 + v57;
    uint64_t v59 = *(void *)(v20 + 72);
    swift_bridgeObjectRetain();
    uint64_t v60 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v61 = v51;
      uint64_t v62 = v88;
      sub_1B2C79984(v58, v88);
      uint64_t v63 = *(void *)(v62 + v18[7]);
      swift_bridgeObjectRetain();
      sub_1B2C799E8(v62);
      uint64_t v64 = *(void *)(v63 + 16);
      uint64_t v65 = *(void *)(v60 + 16);
      if (__OFADD__(v65, v64)) {
        break;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v65 + v64 > *(void *)(v60 + 24) >> 1)
      {
        sub_1B29B7148();
        uint64_t v60 = v66;
      }
      if (*(void *)(v63 + 16))
      {
        uint64_t v67 = *(void *)(v60 + 16);
        if ((*(void *)(v60 + 24) >> 1) - v67 < v64) {
          goto LABEL_45;
        }
        uint64_t v68 = (void *)(v60 + 8 * v67 + 32);
        if (v63 + 32 < (unint64_t)v68 + 8 * v64 && (unint64_t)v68 < v63 + 32 + 8 * v64) {
          goto LABEL_47;
        }
        memcpy(v68, (const void *)(v63 + 32), 8 * v64);
        if (v64)
        {
          uint64_t v70 = *(void *)(v60 + 16);
          BOOL v71 = __OFADD__(v70, v64);
          uint64_t v72 = v70 + v64;
          if (v71) {
            goto LABEL_46;
          }
          *(void *)(v60 + 16) = v72;
        }
      }
      else if (v64)
      {
        goto LABEL_44;
      }
      swift_bridgeObjectRelease();
      v58 += v59;
      --v51;
      if (v61 == 1)
      {
        swift_bridgeObjectRelease();
        id v33 = v81;
        a2 = v82;
        goto LABEL_42;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    uint64_t result = sub_1B2E834A8();
    __break(1u);
  }
  else
  {
    uint64_t v60 = MEMORY[0x1E4FBC860];
LABEL_42:
    swift_bridgeObjectRelease();
    uint64_t v96 = v60;
    sub_1B2AD2E7C();
    sub_1B2DDC524();
    sub_1B2A469D0();
    uint64_t v74 = v73;
    swift_bridgeObjectRelease();
    *a5 = v80;
    a5[1] = a2;
    sub_1B29CA4E0(v83, (uint64_t)a5 + v18[5]);
    uint64_t result = sub_1B29CA4E0((uint64_t)v33, (uint64_t)a5 + v18[6]);
    *(void *)((char *)a5 + v18[7]) = v74;
  }
  return result;
}

BOOL static K2TError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t K2TError.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t K2TError.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t K2TTextualization.text.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t K2TTextualization.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*K2TTextualization.text.modify())(void)
{
  return nullsub_1;
}

uint64_t K2TTextualization.startTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for K2TTextualization() + 20);

  return sub_1B29C8A80(v3, a1);
}

uint64_t type metadata accessor for K2TTextualization()
{
  uint64_t result = qword_1E9C41CB8;
  if (!qword_1E9C41CB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t K2TTextualization.endTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for K2TTextualization() + 24);

  return sub_1B29C8A80(v3, a1);
}

uint64_t K2TTextualization.entityRelationships.getter()
{
  type metadata accessor for K2TTextualization();

  return swift_bridgeObjectRetain();
}

uint64_t static K2TTextualization.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1B2E837A8();
  }
}

unint64_t sub_1B2C8EE28()
{
  unint64_t result = qword_1E9C41CB0;
  if (!qword_1E9C41CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41CB0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for K2TError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2C8EF44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for K2TError()
{
  return &type metadata for K2TError;
}

void destroy for K2THelperObjects(uint64_t a1)
{
  swift_release();

  unint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for K2THelperObjects(void *a1, void *a2)
{
  int v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unsigned int v4 = (void *)a2[2];
  uint64_t v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void *assignWithCopy for K2THelperObjects(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  unsigned int v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  id v7 = (void *)a2[2];
  id v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  uint64_t v10 = (void *)a2[3];
  uint64_t v11 = (void *)a1[3];
  a1[3] = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for K2THelperObjects(uint64_t a1, _OWORD *a2)
{
  swift_release();
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for K2THelperObjects(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for K2THelperObjects(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for K2THelperObjects()
{
  return &type metadata for K2THelperObjects;
}

uint64_t *initializeBufferWithCopyOfBuffer for K2TTextualization(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1B2E80668();
    swift_bridgeObjectRetain();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_1B29A3EB4(&qword_1EB7D87C0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2 + v14, 1, v11))
    {
      uint64_t v17 = sub_1B29A3EB4(&qword_1EB7D87C0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v15, v16, v11);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v15, 0, 1, v11);
    }
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for K2TTextualization(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1B2E80668();
  if (!_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  if (!_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v6, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v6, v5);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for K2TTextualization(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  swift_bridgeObjectRetain();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_1B29A3EB4(&qword_1EB7D87C0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2 + v12, 1, v10))
  {
    uint64_t v15 = sub_1B29A3EB4(&qword_1EB7D87C0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v13, v14, v10);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 0, 1, v10);
  }
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for K2TTextualization(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E80668();
  int v10 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_1B29A3EB4(&qword_1EB7D87C0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  int v17 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1 + v14, 1, v9);
  int v18 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v16, 1, v9);
  if (!v17)
  {
    uint64_t v19 = *(void *)(v9 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v15, v16, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v9);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    uint64_t v20 = sub_1B29A3EB4(&qword_1EB7D87C0);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v15, v16, v9);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v15, 0, 1, v9);
LABEL_13:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for K2TTextualization(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E80668();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_1B29A3EB4(&qword_1EB7D87C0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2 + v11, 1, v9))
  {
    uint64_t v14 = sub_1B29A3EB4(&qword_1EB7D87C0);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v12, v13, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v9);
  }
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

void *assignWithTake for K2TTextualization(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  int v11 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_1B29A3EB4(&qword_1EB7D87C0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  int v17 = (char *)a2 + v15;
  int v18 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1 + v15, 1, v10);
  int v19 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v17, 1, v10);
  if (!v18)
  {
    uint64_t v20 = *(void *)(v10 - 8);
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v16, v17, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v10);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v21 = sub_1B29A3EB4(&qword_1EB7D87C0);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v16, v17, v10);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v16, 0, 1, v10);
LABEL_13:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for K2TTextualization(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2C8FD00);
}

uint64_t sub_1B2C8FD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1B29A3EB4(&qword_1EB7D87C0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for K2TTextualization(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2C8FDA0);
}

uint64_t sub_1B2C8FDA0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1B29A3EB4(&qword_1EB7D87C0);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v8, a2, a2, v7);
  }
  return result;
}

void sub_1B2C8FE24()
{
  sub_1B29CB028();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

#error "1B2C9022C: call analysis failed (funcsize=224)"

uint64_t sub_1B2C903C0()
{
  type metadata accessor for KnosisQueryParam();
  uint64_t v0 = sub_1B2E82148();
  type metadata accessor for QueryNode();
  swift_allocObject();
  sub_1B2DC3EA4(25965, 0xE200000000000000, v0);
  return 0;
}

uint64_t sub_1B2C9043C()
{
  return 0;
}

uint64_t sub_1B2C9044C()
{
  return sub_1B2C90484();
}

uint64_t sub_1B2C90484()
{
  uint64_t result = sub_1B2E805C8();
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 9.22337204e18) {
    return sub_1B2E83748();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1B2C90508()
{
  uint64_t v0 = sub_1B2E80788();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B2E80668();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for QueryContext();
  sub_1B2E80768();
  sub_1B2E80708();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = sub_1B2C90484();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_1B2C906A8(uint64_t a1)
{
  return sub_1B2C90B08(a1, sub_1B2C906C0);
}

void sub_1B2C906C0()
{
  sub_1B299B720();
  uint64_t v36 = v1;
  uint64_t v34 = v4;
  sub_1B2E80668();
  sub_1B299D278();
  uint64_t v37 = v6;
  uint64_t v38 = v5;
  MEMORY[0x1F4188790](v5);
  sub_1B299B6D0();
  uint64_t v35 = v7;
  uint64_t v8 = sub_1B2E80788();
  sub_1B299D278();
  uint64_t v10 = v9;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v18 = sub_1B299B0F0(v17);
  MEMORY[0x1F4188790](v18);
  sub_1B29A0480();
  uint64_t v19 = sub_1B29A3EB4(&qword_1E9C41CC8);
  uint64_t v20 = sub_1B299B0F0(v19);
  MEMORY[0x1F4188790](v20);
  sub_1B2999928();
  uint64_t v21 = sub_1B29A3EB4(&qword_1E9C41CD0);
  uint64_t v22 = sub_1B299B0F0(v21);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1B2E80218();
  sub_1B299D278();
  uint64_t v26 = v25;
  MEMORY[0x1F4188790](v27);
  sub_1B29A0658();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v24, 1, 1, v8);
  uint64_t v28 = sub_1B2E807B8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 1, 1, v28);
  sub_1B2C91A1C();
  sub_1B2E80208();
  sub_1B2E80768();
  sub_1B2E80768();
  sub_1B2E80708();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v10 + 8);
  v29(v14, v8);
  sub_1B2E80748();
  uint64_t v30 = v37;
  sub_1B2C919F4();
  uint64_t v31 = v38;
  sub_1B2C91A78();
  v32();
  v29(v16, v8);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v31) == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v3, v33);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v34, v2, v31);
    sub_1B299B738();
  }
}

uint64_t sub_1B2C90A1C()
{
  return sub_1B2C90A30();
}

uint64_t sub_1B2C90A30()
{
  uint64_t v1 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1B299E6C4();
  type metadata accessor for QueryContext();
  sub_1B2C90DE4();
  sub_1B2C90484();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return sub_1B299BBE8();
}

uint64_t sub_1B2C90AF0(uint64_t a1)
{
  return sub_1B2C90B08(a1, sub_1B2C90BC4);
}

uint64_t sub_1B2C90B08(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  type metadata accessor for QueryContext();
  a2();
  sub_1B2C90484();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
  return sub_1B299BBE8();
}

void sub_1B2C90BC4()
{
  sub_1B299B720();
  uint64_t v21 = v2;
  uint64_t v23 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1B299E6C4();
  uint64_t v6 = sub_1B2E80778();
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B2C919B0();
  uint64_t v22 = sub_1B2E80788();
  sub_1B299D278();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1B299B0C8();
  uint64_t v13 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v14 = sub_1B299B0F0(v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E80768();
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v0, *MEMORY[0x1E4F27BC0], v6);
  sub_1B2C90DE4();
  sub_1B2E80758();
  uint64_t v17 = v23;
  sub_1B2C91A78();
  v18();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v6);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v22);
  sub_1B2C91A30((uint64_t)v16);
  if (v19)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v21, v16, v17);
    sub_1B299B738();
  }
}

uint64_t sub_1B2C90DD0()
{
  return sub_1B2C90A30();
}

void sub_1B2C90DE4()
{
  sub_1B299B720();
  uint64_t v28 = v1;
  uint64_t v3 = v2;
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v5 = sub_1B299B0F0(v4);
  MEMORY[0x1F4188790](v5);
  sub_1B299B6D0();
  uint64_t v29 = v6;
  sub_1B2E80788();
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B2E80218();
  sub_1B299D278();
  uint64_t v26 = v11;
  uint64_t v27 = v10;
  MEMORY[0x1F4188790](v10);
  sub_1B29A0480();
  sub_1B2E80768();
  sub_1B29A3EB4(&qword_1E9C41CD8);
  uint64_t v12 = sub_1B2E80778();
  sub_1B299D278();
  uint64_t v14 = v13;
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B2EBFA40;
  unint64_t v19 = v18 + v17;
  uint64_t v20 = *(void (**)(unint64_t, void, uint64_t))(v14 + 104);
  v20(v19, *v3, v12);
  v20(v19 + v16, *v28, v12);
  sub_1B2A18CE8(v18);
  sub_1B2E80728();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void (**)(uint64_t))(v8 + 8);
  uint64_t v22 = sub_1B2C91A50();
  v21(v22);
  sub_1B2E80768();
  sub_1B2E80738();
  uint64_t v23 = sub_1B2C91A50();
  v21(v23);
  sub_1B2E80668();
  sub_1B2C91A30(v29);
  if (v24)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v0, v27);
    sub_1B2C91A84();
    v25();
    sub_1B299B738();
  }
}

uint64_t sub_1B2C91040(uint64_t a1)
{
  return sub_1B2C90B08(a1, sub_1B2C91058);
}

void sub_1B2C91058()
{
  sub_1B299B720();
  uint64_t v23 = v4;
  uint64_t v5 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v24 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C41CC8);
  uint64_t v9 = sub_1B299B0F0(v8);
  MEMORY[0x1F4188790](v9);
  sub_1B29A0480();
  uint64_t v10 = sub_1B29A3EB4(&qword_1E9C41CD0);
  uint64_t v11 = sub_1B299B0F0(v10);
  MEMORY[0x1F4188790](v11);
  sub_1B2999928();
  sub_1B2E80218();
  sub_1B299D278();
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = sub_1B2C919CC();
  sub_1B299D278();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B29A0658();
  uint64_t v17 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v18 = sub_1B299B0F0(v17);
  MEMORY[0x1F4188790](v18);
  sub_1B299B0C8();
  sub_1B2E80768();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 1, 1, v13);
  uint64_t v19 = sub_1B2E807B8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, v19);
  sub_1B29A2F60();
  sub_1B2C91A1C();
  sub_1B2E80208();
  sub_1B2C90DE4();
  sub_1B2C91A64();
  sub_1B2E80748();
  sub_1B2C919F4();
  sub_1B2C91A78();
  v20();
  uint64_t v21 = sub_1B2C91A04();
  v22(v21);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v3, v13);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v5) == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v23, v2, v5);
    sub_1B299B738();
  }
}

uint64_t sub_1B2C912D8(uint64_t a1)
{
  return sub_1B2C90B08(a1, sub_1B2C912F0);
}

void sub_1B2C912F0()
{
  sub_1B299B720();
  uint64_t v25 = v2;
  uint64_t v26 = v0;
  uint64_t v3 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v4 = sub_1B299B0F0(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E80788();
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B2C919B0();
  uint64_t v24 = sub_1B2E80218();
  sub_1B299D278();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1B29A0480();
  sub_1B2E80768();
  sub_1B29A3EB4(&qword_1E9C41CD8);
  uint64_t v13 = sub_1B2E80778();
  sub_1B299D278();
  uint64_t v15 = v14;
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B2EC00A0;
  (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x1E4F27C20], v13);
  sub_1B2A18CE8(v17);
  sub_1B2E80728();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void (**)(uint64_t))(v8 + 8);
  uint64_t v19 = sub_1B299E8F8();
  v18(v19);
  sub_1B2E80768();
  sub_1B2E80738();
  uint64_t v20 = sub_1B299E8F8();
  v18(v20);
  sub_1B2E80668();
  sub_1B2C91A30((uint64_t)v6);
  if (v21)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v24);
    sub_1B2C91A84();
    v22();
    sub_1B299B738();
  }
}

uint64_t sub_1B2C91520(uint64_t a1)
{
  return sub_1B2C90B08(a1, sub_1B2C91538);
}

void sub_1B2C91538()
{
  sub_1B299B720();
  uint64_t v22 = v4;
  sub_1B2E80668();
  sub_1B299D278();
  uint64_t v23 = v6;
  uint64_t v24 = v5;
  MEMORY[0x1F4188790](v5);
  sub_1B29A0498();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C41CC8);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B29A0480();
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C41CD0);
  uint64_t v10 = sub_1B299B0F0(v9);
  MEMORY[0x1F4188790](v10);
  sub_1B29A0658();
  sub_1B2E80218();
  sub_1B299D278();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = sub_1B2C919CC();
  sub_1B299D278();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  sub_1B2999928();
  uint64_t v16 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v17 = sub_1B299B0F0(v16);
  MEMORY[0x1F4188790](v17);
  sub_1B299B0C8();
  sub_1B2E80768();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v3, 1, 1, v12);
  uint64_t v18 = sub_1B2E807B8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, v18);
  sub_1B29A2F60();
  sub_1B2E80208();
  sub_1B2C912F0();
  sub_1B2C91A64();
  sub_1B2E80748();
  sub_1B2C919F4();
  sub_1B2C91A78();
  v19();
  uint64_t v20 = sub_1B2C91A04();
  v21(v20);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0, v12);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v24) == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v22, v2, v24);
    sub_1B299B738();
  }
}

uint64_t sub_1B2C917A4()
{
  return sub_1B2C917C8(86400.0);
}

uint64_t sub_1B2C917C8(double a1)
{
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a1 < 9.22337204e18) {
    return sub_1B2E83748();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1B2C91848()
{
  return sub_1B2C917C8(604800.0);
}

uint64_t sub_1B2C9186C()
{
  return sub_1B2C917C8(2592000.0);
}

uint64_t sub_1B2C91890()
{
  return sub_1B2C917C8(31536000.0);
}

uint64_t sub_1B2C918B4()
{
  return sub_1B2E82A88();
}

uint64_t sub_1B2C918FC()
{
  return sub_1B2E82A88();
}

uint64_t sub_1B2C91944()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B2C9197C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_1B2C919B0()
{
  return 0;
}

uint64_t sub_1B2C919CC()
{
  return sub_1B2E80788();
}

uint64_t sub_1B2C919F4()
{
  return v0;
}

uint64_t sub_1B2C91A04()
{
  return v0;
}

uint64_t sub_1B2C91A30(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t sub_1B2C91A50()
{
  return v0;
}

uint64_t sub_1B2C91A64()
{
  return v0;
}

uint64_t sub_1B2C91A98(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v1 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v1; uint64_t v1 = sub_1B2E83448())
  {
    uint64_t v2 = 0;
    uint64_t v25 = v1;
    while (1)
    {
      id v3 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1B3EB1A20](v2, a1) : *(id *)(a1 + 32 + 8 * v2);
      BOOL v4 = __OFADD__(v2, 1);
      uint64_t v5 = v2 + 1;
      if (v4) {
        break;
      }
      uint64_t v26 = v3;
      uint64_t v27 = v5;
      id v6 = objc_msgSend(v3, sel_rankedItems);
      sub_1B29C3CA0(0, &qword_1EB7D97B0);
      unint64_t v7 = sub_1B2E82838();

      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = sub_1B2E83448();
        if (v8)
        {
LABEL_10:
          uint64_t v9 = 4;
          while (1)
          {
            id v10 = (v7 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x1B3EB1A20](v9 - 4, v7)
                : *(id *)(v7 + 8 * v9);
            uint64_t v11 = v10;
            uint64_t v12 = v9 - 3;
            if (__OFADD__(v9 - 4, 1)) {
              break;
            }
            id v13 = objc_msgSend(v10, sel_entityID);
            unint64_t v14 = (unint64_t)objc_msgSend(v13, sel_intValue);

            uint64_t v15 = 3826797;
            if ((v14 & 0x80000000000000) == 0) {
              uint64_t v15 = 3828069;
            }
            uint64_t v28 = v15;
            uint64_t v29 = 0xE300000000000000;
            unint64_t v30 = v14;
            sub_1B2E83748();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2A00B00((uint64_t)&v28, v28, v29, v16, v17, v18, v19, v20, v22, v23);

            swift_bridgeObjectRelease();
            ++v9;
            if (v12 == v8) {
              goto LABEL_18;
            }
          }
          __break(1u);
          break;
        }
      }
      else
      {
        uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v8) {
          goto LABEL_10;
        }
      }
LABEL_18:
      swift_bridgeObjectRelease_n();

      uint64_t v2 = v27;
      if (v27 == v25) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2C91D08(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2DCA620();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1B2C9ADE8(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1B2C91D74()
{
  sub_1B299B3BC();
  v1[10] = v2;
  v1[11] = v0;
  v1[8] = v3;
  v1[9] = v4;
  sub_1B29A3EB4(&qword_1E9C41CE8);
  v1[12] = swift_task_alloc();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1B2C91E04()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 16);
  *(void *)(v0 + 104) = v1;
  if (!v1)
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
LABEL_17:
    if (*(void *)(v4 + 16) == 1)
    {
      sub_1B2B47524(0, 1, v4);
      unint64_t v11 = *(void *)(v4 + 32);
      swift_retain();
    }
    else
    {
      uint64_t v12 = sub_1B299D354();
      *(void *)(v12 + 16) = v4;
      unint64_t v11 = v12 | 0x3000000000000000;
      swift_bridgeObjectRetain();
    }
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v14 = *(void *)(v13 + 16);
    if (!v14) {
      goto LABEL_49;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v15 = v13 + 40;
    while (1)
    {
      uint64_t v16 = *(unsigned __int8 *)(v15 - 8);
      v15 += 24;
      switch(v16)
      {
        case 1:
          sub_1B2C9FA74();
          goto LABEL_46;
        case 2:
          sub_1B29A3014();
          goto LABEL_46;
        case 3:
          sub_1B2C9FA60();
          goto LABEL_46;
        case 4:
          sub_1B299DCD8();
          goto LABEL_46;
        case 5:
          sub_1B2C9FA4C();
          goto LABEL_46;
        case 6:
          sub_1B2C9FA28();
          goto LABEL_46;
        case 7:
          sub_1B2C9F9E8();
          goto LABEL_46;
        case 8:
          sub_1B2C9F9D4();
          goto LABEL_46;
        case 9:
          sub_1B2ABB5BC();
          goto LABEL_46;
        case 13:
          sub_1B29B1E20();
          goto LABEL_46;
        case 14:
          sub_1B29A1E9C();
          goto LABEL_46;
        case 16:
          sub_1B2C9F9C0();
          goto LABEL_46;
        case 17:
          sub_1B299E934();
          goto LABEL_46;
        case 18:
          sub_1B2C9F998();
          goto LABEL_46;
        case 21:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_53;
        case 22:
          sub_1B2C9F984();
          goto LABEL_46;
        case 23:
          sub_1B2C9F864();
          goto LABEL_46;
        case 24:
          sub_1B2C9FD30();
          goto LABEL_46;
        case 25:
          sub_1B2C9FD20();
          goto LABEL_46;
        default:
LABEL_46:
          char v17 = sub_1B2C9FCFC();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v17)
          {
LABEL_53:
            uint64_t v20 = *(void *)(v0 + 96);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B2A174D8();
            swift_bridgeObjectRelease();
            uint64_t v21 = type metadata accessor for KGQ.Value();
            int v22 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v20, 1, v21);
            uint64_t v23 = *(void *)(v0 + 96);
            if (v22 == 1)
            {
              sub_1B2C9F308(*(void *)(v0 + 96));
              goto LABEL_50;
            }
            uint64_t v24 = sub_1B2CA6944();
            uint64_t v26 = v25;
            sub_1B2C9F368(v23);
            if (!v26) {
              goto LABEL_50;
            }
            sub_1B2CA0254();
            if (v29)
            {
              if ((v26 & 0x1000000000000000) != 0)
              {
                uint64_t v23 = sub_1B2A71148(v24, v26, 10);
                LOBYTE(v24) = v56;
                goto LABEL_100;
              }
              if ((v26 & 0x2000000000000000) == 0)
              {
                if ((v24 & 0x1000000000000000) != 0) {
                  unint64_t v30 = (unsigned __int8 *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 32);
                }
                else {
                  unint64_t v30 = (unsigned __int8 *)sub_1B2E83298();
                }
                uint64_t v23 = (uint64_t)sub_1B2A71130(v30, v27);
                LOBYTE(v24) = v44 & 1;
                goto LABEL_100;
              }
              if (v24 == 43)
              {
                if (v28)
                {
                  if (v28 != 1)
                  {
                    sub_1B29A46E4();
                    if (!(!v43 & v8))
                    {
                      uint64_t v23 = v46;
                      if (v45 == 2) {
                        goto LABEL_99;
                      }
                      sub_1B2999BD8();
                      if (!(!v43 & v8))
                      {
                        sub_1B2CA010C();
                        if (!v43)
                        {
                          sub_1B2CA00CC();
                          while (1)
                          {
                            sub_1B299E61C();
                            if (!v43 & v8) {
                              goto LABEL_96;
                            }
                            sub_1B299F938();
                            if (!v43) {
                              goto LABEL_96;
                            }
                            uint64_t v23 = v48 + v47;
                            if (__OFADD__(v48, v47)) {
                              goto LABEL_96;
                            }
                            sub_1B29A1E8C();
                            if (v43) {
                              goto LABEL_100;
                            }
                          }
                        }
                        goto LABEL_99;
                      }
                    }
                  }
                  goto LABEL_96;
                }
              }
              else
              {
                if (v24 != 45)
                {
                  if (v28)
                  {
                    sub_1B2999BD8();
                    if (!(!v43 & v8))
                    {
                      uint64_t v23 = v50;
                      if (v49 == 1) {
                        goto LABEL_99;
                      }
                      sub_1B29A46E4();
                      if (!(!v43 & v8))
                      {
                        sub_1B2CA00F8();
                        if (!v43)
                        {
                          while (1)
                          {
                            sub_1B299E61C();
                            if (!v43 & v8) {
                              goto LABEL_96;
                            }
                            sub_1B299F938();
                            if (!v43) {
                              goto LABEL_96;
                            }
                            uint64_t v23 = v53 + v52;
                            if (__OFADD__(v53, v52)) {
                              goto LABEL_96;
                            }
                            sub_1B29A1E8C();
                            if (v43) {
                              goto LABEL_100;
                            }
                          }
                        }
                        goto LABEL_99;
                      }
                    }
                  }
LABEL_96:
                  uint64_t v23 = 0;
                  LOBYTE(v24) = 1;
                  goto LABEL_100;
                }
                if (v28)
                {
                  if (v28 != 1)
                  {
                    sub_1B29A46E4();
                    if (!(!v43 & v8))
                    {
                      if (v41 == 2)
                      {
                        LOBYTE(v24) = 0;
                        uint64_t v23 = -(uint64_t)v42;
LABEL_100:
                        swift_bridgeObjectRelease();
                        if ((v24 & 1) == 0)
                        {
                          uint64_t v51 = sub_1B29A2D00();
                          *(void *)(v51 + 16) = v11;
                          *(void *)(v51 + 24) = v23;
                          unint64_t v11 = v51 | 0xB000000000000004;
                        }
LABEL_50:
                        **(void **)(v0 + 64) = v11;
                        swift_task_dealloc();
                        sub_1B2999AB8();
                        sub_1B2A88440();
                        __asm { BRAA            X1, X16 }
                      }
                      sub_1B2CA0080();
                      if (!(!v43 & v8))
                      {
                        sub_1B2C9FDEC();
                        if (!v43)
                        {
                          sub_1B2CA00CC();
                          while (1)
                          {
                            sub_1B299E61C();
                            if (!v43 & v8) {
                              goto LABEL_96;
                            }
                            sub_1B299F938();
                            if (!v43) {
                              goto LABEL_96;
                            }
                            uint64_t v23 = v55 - v54;
                            if (__OFSUB__(v55, v54)) {
                              goto LABEL_96;
                            }
                            sub_1B29A1E8C();
                            if (v43) {
                              goto LABEL_100;
                            }
                          }
                        }
LABEL_99:
                        LOBYTE(v24) = 0;
                        goto LABEL_100;
                      }
                    }
                  }
                  goto LABEL_96;
                }
                __break(1u);
              }
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
              JUMPOUT(0x1B2C92658);
            }
LABEL_49:
            swift_bridgeObjectRelease();
            goto LABEL_50;
          }
          swift_bridgeObjectRelease();
          if (!--v14)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_49;
          }
          break;
      }
    }
  }
  uint64_t v2 = (uint64_t *)(v0 + 16);
  *(void *)(v0 + 112) = 162;
  *(void *)(v0 + 120) = 1336;
  *(void *)(v0 + 128) = 2889;
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  while (2)
  {
    *(void *)(v0 + 136) = v3;
    *(void *)(v0 + 144) = v4;
    switch(*(unsigned char *)(*(void *)(v0 + 72) + v3 + 32))
    {
      case 1:
        uint64_t v5 = *(void *)(v0 + 88);
        sub_1B2C94E68((unsigned char *)(v0 + 48));
        uint64_t v6 = *(void *)(v0 + 48);
        goto LABEL_10;
      case 2:
        uint64_t v5 = *(void *)(v0 + 88);
        sub_1B2C9799C(*(void *)(v0 + 80), v0 + 32);
        uint64_t v6 = *(void *)(v0 + 32);
        goto LABEL_10;
      case 3:
        uint64_t v5 = *(void *)(v0 + 88);
        sub_1B2C95B34(*(void *)(v0 + 80), v0 + 40);
        uint64_t v6 = *(void *)(v0 + 40);
        goto LABEL_10;
      case 4:
        uint64_t v5 = *(void *)(v0 + 88);
        sub_1B2C997A0();
        goto LABEL_9;
      case 5:
        uint64_t v5 = *(void *)(v0 + 88);
        uint64_t v2 = (uint64_t *)(v0 + 24);
        sub_1B2C9825C(*(void *)(v0 + 80), v0 + 24);
LABEL_9:
        uint64_t v6 = *v2;
LABEL_10:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2C9F8FC();
          uint64_t v4 = v9;
        }
        uint64_t v7 = *(void *)(v4 + 16);
        sub_1B2CA01AC();
        if (v8)
        {
          sub_1B2C9FE9C();
          uint64_t v4 = v10;
        }
        *(void *)(v4 + 16) = v5;
        *(void *)(v4 + 8 * v7 + 32) = v6;
        uint64_t v3 = *(void *)(v0 + 136) + 1;
        uint64_t v2 = (uint64_t *)(v0 + 16);
        if (v3 != *(void *)(v0 + 104)) {
          continue;
        }
        swift_bridgeObjectRelease();
        goto LABEL_17;
      default:
        uint64_t v31 = *(void *)(v0 + 112);
        sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
        *(_OWORD *)(sub_1B29A1824() + 16) = xmmword_1B2EC00A0;
        if (v31 < 27)
        {
          __break(1u);
LABEL_124:
          __break(1u);
          goto LABEL_125;
        }
        if (!_Records_GDEntityClass_records) {
          goto LABEL_130;
        }
        if (*(void *)(_Records_GDEntityClass_records + 0x278) >= *(void *)(v0 + 120)) {
          goto LABEL_124;
        }
        if (*(void *)(_Records_GDEntityClass_records + 0x280) >= *(void *)(v0 + 128))
        {
LABEL_125:
          __break(1u);
LABEL_126:
          sub_1B2CA0140();
          uint64_t v37 = v34;
          goto LABEL_69;
        }
        if (!_Records_GDEntityClass_classIds[0]) {
          goto LABEL_131;
        }
        sub_1B2E82538();
        if (!_Records_GDEntityClass_labels) {
          goto LABEL_132;
        }
        sub_1B2CA0280();
        sub_1B299D354();
        uint64_t v32 = sub_1B2CA0160();
        sub_1B2CA0210(v32, v33);
        sub_1B29B93B0();
        sub_1B2CA01F0();
        if (v8) {
          goto LABEL_126;
        }
LABEL_69:
        sub_1B2C9FC18(v34, v35, v36, v37);
        uint64_t v38 = (void *)swift_task_alloc();
        *(void *)(v0 + 160) = v38;
        *uint64_t v38 = v0;
        v38[1] = sub_1B2C926D8;
        sub_1B2A88440();
        return sub_1B2C93154();
    }
  }
}

uint64_t sub_1B2C926D8()
{
  sub_1B299F394();
  sub_1B2C9F848();
  uint64_t v4 = v3;
  uint64_t v5 = *v2;
  sub_1B299B0E0();
  *uint64_t v6 = v5;
  *(void *)(v4 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(v4 + 176) = v1;
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1B2C927E0()
{
  sub_1B2AD3D78();
  uint64_t v1 = sub_1B299D354();
  *(void *)(v1 + 16) = *(void *)(v0 + 56);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v3 = *(void **)(v0 + 144);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1B2C9F8FC();
    uint64_t v3 = v66;
  }
  unint64_t v4 = v3[2];
  if (v4 >= v3[3] >> 1)
  {
    sub_1B29B93B0();
    uint64_t v3 = v67;
  }
  sub_1B2C9FE14();
  v3[2] = v4 + 1;
  v3[v4 + 4] = v1 | v5;
  sub_1B2CA0178();
  if (v8)
  {
    uint64_t v9 = v7;
LABEL_8:
    swift_bridgeObjectRelease();
    if (v3[2] == 1)
    {
      sub_1B2B47524(0, 1, v3);
      unint64_t v10 = v3[4];
      swift_retain();
    }
    else
    {
      uint64_t v22 = sub_1B299D354();
      *(void *)(v22 + 16) = v3;
      unint64_t v10 = v22 | 0x3000000000000000;
      swift_bridgeObjectRetain();
    }
    uint64_t v23 = *(void *)(v0 + 80);
    uint64_t v24 = *(void *)(v23 + 16);
    if (!v24) {
      goto LABEL_58;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v25 = v23 + 40;
    while (1)
    {
      uint64_t v26 = *(unsigned __int8 *)(v25 - 8);
      v25 += 24;
      switch(v26)
      {
        case 1:
          sub_1B2C9FA74();
          goto LABEL_55;
        case 2:
          sub_1B29A3014();
          goto LABEL_55;
        case 3:
          sub_1B2C9FA60();
          goto LABEL_55;
        case 4:
          sub_1B299DCD8();
          goto LABEL_55;
        case 5:
          sub_1B2C9FA4C();
          goto LABEL_55;
        case 6:
          sub_1B2C9FA28();
          goto LABEL_55;
        case 7:
          sub_1B2C9F9E8();
          goto LABEL_55;
        case 8:
          sub_1B2C9F9D4();
          goto LABEL_55;
        case 9:
          sub_1B2ABB5BC();
          goto LABEL_55;
        case 13:
          sub_1B29B1E20();
          goto LABEL_55;
        case 14:
          sub_1B29A1E9C();
          goto LABEL_55;
        case 16:
          sub_1B2C9F9C0();
          goto LABEL_55;
        case 17:
          sub_1B299E934();
          goto LABEL_55;
        case 18:
          sub_1B2C9F998();
          goto LABEL_55;
        case 21:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_64;
        case 22:
          sub_1B2C9F984();
          goto LABEL_55;
        case 23:
          sub_1B2C9F864();
          goto LABEL_55;
        case 24:
          sub_1B2C9FD30();
          goto LABEL_55;
        case 25:
          sub_1B2C9FD20();
          goto LABEL_55;
        default:
LABEL_55:
          char v27 = sub_1B2C9FCFC();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v27)
          {
LABEL_64:
            uint64_t v30 = *(void *)(v0 + 96);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B2A174D8();
            swift_bridgeObjectRelease();
            uint64_t v31 = type metadata accessor for KGQ.Value();
            int v32 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v30, 1, v31);
            uint64_t v33 = *(void *)(v0 + 96);
            if (v32 == 1)
            {
              sub_1B2C9F308(*(void *)(v0 + 96));
              goto LABEL_59;
            }
            uint64_t v34 = sub_1B2CA6944();
            uint64_t v36 = v35;
            sub_1B2C9F368(v33);
            if (!v36) {
              goto LABEL_59;
            }
            sub_1B2CA0254();
            if (v39)
            {
              if ((v36 & 0x1000000000000000) != 0)
              {
                uint64_t v33 = sub_1B2A71148(v34, v36, 10);
                LOBYTE(v34) = v68;
                goto LABEL_113;
              }
              if ((v36 & 0x2000000000000000) == 0)
              {
                if ((v34 & 0x1000000000000000) != 0) {
                  uint64_t v40 = (unsigned __int8 *)((v36 & 0xFFFFFFFFFFFFFFFLL) + 32);
                }
                else {
                  uint64_t v40 = (unsigned __int8 *)sub_1B2E83298();
                }
                uint64_t v41 = sub_1B2A71130(v40, v37);
                if (v9)
                {
                  sub_1B2C9FF7C();
                  return;
                }
                uint64_t v33 = (uint64_t)v41;
                LOBYTE(v34) = v42 & 1;
LABEL_113:
                swift_bridgeObjectRelease();
                if ((v34 & 1) == 0)
                {
                  uint64_t v61 = sub_1B29A2D00();
                  *(void *)(v61 + 16) = v10;
                  *(void *)(v61 + 24) = v33;
                  unint64_t v10 = v61 | 0xB000000000000004;
                }
LABEL_59:
                **(void **)(v0 + 64) = v10;
                swift_task_dealloc();
                sub_1B2999AB8();
LABEL_61:
                sub_1B2C9FF7C();
                __asm { BRAA            X1, X16 }
              }
              if (v34 == 43)
              {
                if (v38)
                {
                  if (v38 != 1)
                  {
                    sub_1B29A46E4();
                    if (!(!v8 & v50))
                    {
                      uint64_t v33 = v56;
                      if (v55 == 2) {
                        goto LABEL_112;
                      }
                      sub_1B2999BD8();
                      if (!(!v8 & v50))
                      {
                        sub_1B2CA010C();
                        if (!v8)
                        {
                          sub_1B2CA00CC();
                          while (1)
                          {
                            sub_1B299E61C();
                            if (!v8 & v50) {
                              goto LABEL_109;
                            }
                            sub_1B299F938();
                            if (!v8) {
                              goto LABEL_109;
                            }
                            uint64_t v33 = v58 + v57;
                            if (__OFADD__(v58, v57)) {
                              goto LABEL_109;
                            }
                            sub_1B29A1E8C();
                            if (v8) {
                              goto LABEL_113;
                            }
                          }
                        }
                        goto LABEL_112;
                      }
                    }
                  }
                  goto LABEL_109;
                }
              }
              else
              {
                if (v34 != 45)
                {
                  if (v38)
                  {
                    sub_1B2999BD8();
                    if (!(!v8 & v50))
                    {
                      uint64_t v33 = v60;
                      if (v59 == 1) {
                        goto LABEL_112;
                      }
                      sub_1B29A46E4();
                      if (!(!v8 & v50))
                      {
                        sub_1B2CA00F8();
                        if (!v8)
                        {
                          while (1)
                          {
                            sub_1B299E61C();
                            if (!v8 & v50) {
                              goto LABEL_109;
                            }
                            sub_1B299F938();
                            if (!v8) {
                              goto LABEL_109;
                            }
                            uint64_t v33 = v63 + v62;
                            if (__OFADD__(v63, v62)) {
                              goto LABEL_109;
                            }
                            sub_1B29A1E8C();
                            if (v8) {
                              goto LABEL_113;
                            }
                          }
                        }
                        goto LABEL_112;
                      }
                    }
                  }
LABEL_109:
                  uint64_t v33 = 0;
                  LOBYTE(v34) = 1;
                  goto LABEL_113;
                }
                if (v38)
                {
                  if (v38 != 1)
                  {
                    sub_1B29A46E4();
                    if (!(!v8 & v50))
                    {
                      if (v53 == 2)
                      {
                        LOBYTE(v34) = 0;
                        uint64_t v33 = -(uint64_t)v54;
                        goto LABEL_113;
                      }
                      sub_1B2CA0080();
                      if (!(!v8 & v50))
                      {
                        sub_1B2C9FDEC();
                        if (!v8)
                        {
                          sub_1B2CA00CC();
                          while (1)
                          {
                            sub_1B299E61C();
                            if (!v8 & v50) {
                              goto LABEL_109;
                            }
                            sub_1B299F938();
                            if (!v8) {
                              goto LABEL_109;
                            }
                            uint64_t v33 = v65 - v64;
                            if (__OFSUB__(v65, v64)) {
                              goto LABEL_109;
                            }
                            sub_1B29A1E8C();
                            if (v8) {
                              goto LABEL_113;
                            }
                          }
                        }
LABEL_112:
                        LOBYTE(v34) = 0;
                        goto LABEL_113;
                      }
                    }
                  }
                  goto LABEL_109;
                }
                __break(1u);
              }
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              JUMPOUT(0x1B2C93078);
            }
LABEL_58:
            swift_bridgeObjectRelease();
            goto LABEL_59;
          }
          swift_bridgeObjectRelease();
          if (!--v24)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_58;
          }
          break;
      }
    }
  }
  uint64_t v11 = (uint64_t *)(v0 + 16);
  while (2)
  {
    *(void *)(v0 + 136) = v6;
    *(void *)(v0 + 144) = v3;
    switch(*(unsigned char *)(*(void *)(v0 + 72) + v6 + 32))
    {
      case 1:
        uint64_t v12 = v7;
        sub_1B2C94E68((unsigned char *)(v0 + 48));
        if (v12) {
          goto LABEL_60;
        }
        uint64_t v13 = *(void *)(v0 + 48);
        goto LABEL_21;
      case 2:
        uint64_t v15 = (uint64_t *)(v0 + 32);
        uint64_t v16 = v7;
        sub_1B2C9799C(*(void *)(v0 + 80), v0 + 32);
        if (v16) {
          goto LABEL_60;
        }
        goto LABEL_20;
      case 3:
        uint64_t v17 = v7;
        sub_1B2C95B34(*(void *)(v0 + 80), v0 + 40);
        if (v17) {
          goto LABEL_60;
        }
        uint64_t v13 = *(void *)(v0 + 40);
        goto LABEL_21;
      case 4:
        uint64_t v14 = v7;
        sub_1B2C997A0();
        if (v14) {
          goto LABEL_60;
        }
        uint64_t v13 = *v11;
        goto LABEL_21;
      case 5:
        uint64_t v15 = (uint64_t *)(v0 + 24);
        uint64_t v18 = v7;
        sub_1B2C9825C(*(void *)(v0 + 80), v0 + 24);
        if (v18)
        {
LABEL_60:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          goto LABEL_61;
        }
LABEL_20:
        uint64_t v13 = *v15;
LABEL_21:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2C9F8FC();
          uint64_t v3 = v20;
        }
        unint64_t v19 = v3[2];
        if (v19 >= v3[3] >> 1)
        {
          sub_1B2C9FE9C();
          uint64_t v3 = v21;
        }
        uint64_t v9 = 0;
        v3[2] = v19 + 1;
        v3[v19 + 4] = v13;
        sub_1B2CA0178();
        uint64_t v11 = (uint64_t *)(v0 + 16);
        if (!v8) {
          continue;
        }
        goto LABEL_8;
      default:
        uint64_t v43 = *(void *)(v0 + 112);
        sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
        *(_OWORD *)(sub_1B29A1824() + 16) = xmmword_1B2EC00A0;
        if (v43 < 27)
        {
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!_Records_GDEntityClass_records) {
          goto LABEL_143;
        }
        if (*(void *)(_Records_GDEntityClass_records + 0x278) >= *(void *)(v0 + 120)) {
          goto LABEL_137;
        }
        if (*(void *)(_Records_GDEntityClass_records + 0x280) >= *(void *)(v0 + 128))
        {
LABEL_138:
          __break(1u);
LABEL_139:
          sub_1B2CA0140();
          uint64_t v49 = v46;
          goto LABEL_81;
        }
        if (!_Records_GDEntityClass_classIds[0]) {
          goto LABEL_144;
        }
        sub_1B2E82538();
        if (!_Records_GDEntityClass_labels) {
          goto LABEL_145;
        }
        sub_1B2CA0280();
        sub_1B299D354();
        uint64_t v44 = sub_1B2CA0160();
        sub_1B2CA0210(v44, v45);
        sub_1B29B93B0();
        sub_1B2CA01F0();
        if (v50) {
          goto LABEL_139;
        }
LABEL_81:
        sub_1B2C9FC18(v46, v47, v48, v49);
        uint64_t v51 = (void *)swift_task_alloc();
        *(void *)(v0 + 160) = v51;
        void *v51 = v0;
        v51[1] = sub_1B2C926D8;
        sub_1B2C9FF7C();
        sub_1B2C93154();
        return;
    }
  }
}

uint64_t sub_1B2C930F8()
{
  sub_1B299B3BC();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2C93154()
{
  sub_1B299B3BC();
  v1[24] = v2;
  v1[25] = v0;
  uint64_t v3 = sub_1B2E80668();
  v1[26] = v3;
  sub_1B299D2A8(v3);
  v1[27] = v4;
  v1[28] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for KGQ.Value();
  v1[29] = v5;
  sub_1B299D2A8(v5);
  v1[30] = v6;
  v1[31] = swift_task_alloc();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1B2C93220()
{
  uint64_t v258 = v0;
  uint64_t v256 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  unint64_t v2 = 0;
  sub_1B2C91D08(&v256);
  uint64_t v251 = *(void *)(v256 + 16);
  if (!v251)
  {
    swift_release();
    uint64_t v5 = MEMORY[0x1E4FBC860];
    uint64_t v176 = MEMORY[0x1E4FBC860];
    goto LABEL_161;
  }
  uint64_t v3 = 0;
  uint64_t v198 = v0 + 16;
  uint64_t v200 = v0 + 40;
  uint64_t v238 = v0 + 72;
  uint64_t v240 = v0 + 56;
  uint64_t v206 = v0 + 112;
  uint64_t v208 = v0 + 104;
  uint64_t v202 = v0 + 128;
  uint64_t v204 = v0 + 120;
  uint64_t v216 = v0 + 144;
  uint64_t v218 = v0 + 136;
  uint64_t v228 = v0 + 160;
  uint64_t v230 = v0 + 152;
  uint64_t v226 = v0 + 168;
  uint64_t v234 = v0 + 184;
  uint64_t v236 = v0 + 88;
  uint64_t v212 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v210 = v256;
  uint64_t v250 = v256 + 32;
  uint64_t v232 = (void (**)(void, void, void))(v4 + 32);
  unint64_t v224 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v242 = MEMORY[0x1E4FBC860];
  uint64_t v214 = v0;
  while (2)
  {
    uint64_t v6 = (char *)(v250 + 24 * v3);
    uint64_t v7 = *((void *)v6 + 1);
    char v8 = *v6;
    switch(*v6)
    {
      case 0:
        uint64_t v252 = v5;
        uint64_t v9 = *(void *)(v7 + 16);
        if (v9)
        {
          uint64_t v246 = v3;
          sub_1B2C8398C();
          uint64_t v11 = v7 + v10;
          uint64_t v13 = *(void *)(v12 + 72);
          swift_bridgeObjectRetain_n();
          unint64_t v2 = MEMORY[0x1E4FBC860];
          while (1)
          {
            uint64_t v14 = *(void *)(v0 + 232);
            sub_1B2C9F51C(v11, *(void *)(v0 + 248));
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                sub_1B29A3004();
                if (v16)
                {
                  __break(1u);
LABEL_177:
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
LABEL_182:
                  __break(1u);
LABEL_183:
                  __break(1u);
LABEL_184:
                  __break(1u);
                  __break(1u);
                  __break(1u);
                  __break(1u);
                  __break(1u);
LABEL_185:
                  __break(1u);
LABEL_186:
                  __break(1u);
LABEL_187:
                  __break(1u);
LABEL_188:
                  __break(1u);
                  goto LABEL_189;
                }
                if (v15 <= -9.22337204e18) {
                  goto LABEL_179;
                }
                sub_1B299DCC8();
                if (!v18) {
                  goto LABEL_182;
                }
                uint64_t v19 = (uint64_t)v17;
                uint64_t v20 = (void *)v226;
LABEL_24:
                *uint64_t v20 = v19;
                uint64_t v14 = sub_1B2E83748();
                unint64_t v1 = v28;
LABEL_34:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1B299B8BC();
                  sub_1B29B7048();
                  unint64_t v2 = v38;
                }
                unint64_t v35 = *(void *)(v2 + 16);
                unint64_t v34 = *(void *)(v2 + 24);
                if (v35 >= v34 >> 1)
                {
                  sub_1B29999F8(v34);
                  sub_1B29B7048();
                  unint64_t v2 = v39;
                }
                *(void *)(v2 + 16) = v35 + 1;
                unint64_t v36 = v2 + 16 * v35;
                *(void *)(v36 + 32) = v14;
                *(void *)(v36 + 40) = v1;
                v11 += v13;
                if (!--v9)
                {
                  sub_1B2CA00B4();
                  uint64_t v3 = v246;
                  goto LABEL_119;
                }
                break;
              case 2u:
                (*v232)(*(void *)(v0 + 224), *(void *)(v0 + 248), *(void *)(v0 + 208));
                sub_1B2E805C8();
                sub_1B29A3004();
                if (v16) {
                  goto LABEL_177;
                }
                if (v21 <= -9.22337204e18) {
                  goto LABEL_180;
                }
                sub_1B299DCC8();
                if (!v18) {
                  goto LABEL_183;
                }
                uint64_t v23 = *(void *)(v0 + 224);
                uint64_t v24 = *(void *)(v0 + 208);
                *(void *)(v0 + 160) = (uint64_t)v22;
                uint64_t v14 = sub_1B2E83748();
                unint64_t v1 = v25;
                (*v224)(v23, v24);
                goto LABEL_34;
              case 3u:
                sub_1B29A3004();
                if (v16) {
                  goto LABEL_178;
                }
                if (v26 <= -9.22337204e18) {
                  goto LABEL_181;
                }
                sub_1B299DCC8();
                if (!v18) {
                  goto LABEL_184;
                }
                uint64_t v19 = (uint64_t)v27;
                uint64_t v20 = (void *)v230;
                goto LABEL_24;
              case 4u:
                if ((**(void **)(v0 + 248) & 0x80000000000000) != 0)
                {
                  sub_1B2CA0030();
                  uint64_t v256 = v33;
                  unint64_t v257 = 0xE300000000000000;
                  uint64_t v31 = (void *)v218;
                }
                else
                {
                  sub_1B2CA0030();
                  uint64_t v256 = v30 + 1272;
                  unint64_t v257 = 0xE300000000000000;
                  uint64_t v31 = (void *)v216;
                }
                *uint64_t v31 = v29;
                sub_1B2E83748();
                sub_1B2E82518();
                swift_bridgeObjectRelease();
                goto LABEL_33;
              case 5u:
                uint64_t v32 = **(void **)(v0 + 248);
                *(void *)(v0 + 88) = 0;
                *(void *)(v0 + 96) = 0xE000000000000000;
                sub_1B2E82298();
                *(void *)(v0 + 184) = v32;
                sub_1B2E83748();
                sub_1B2E82518();
                swift_bridgeObjectRelease();
                uint64_t v14 = *(void *)(v0 + 88);
                unint64_t v1 = *(void *)(v0 + 96);
                goto LABEL_34;
              case 6u:
                unint64_t v1 = 0xE400000000000000;
                uint64_t v14 = 1701667182;
                switch(**(unsigned char **)(v0 + 248))
                {
                  case 1:
                    uint64_t v14 = 0x6D614E7473726966;
                    goto LABEL_56;
                  case 2:
                    unint64_t v1 = 0xE800000000000000;
                    uint64_t v14 = 0x656D614E7473616CLL;
                    goto LABEL_34;
                  case 3:
                    unint64_t v1 = 0xE700000000000000;
                    uint64_t v14 = 0x73736572646461;
                    goto LABEL_34;
                  case 4:
                    unint64_t v1 = 0xE800000000000000;
                    uint64_t v14 = 0x7961646874726962;
                    goto LABEL_34;
                  case 5:
                    unint64_t v1 = 0xEB00000000726562;
                    uint64_t v14 = 0x6D754E656E6F6870;
                    goto LABEL_34;
                  case 6:
                    unint64_t v1 = 0xEC00000073736572;
                    uint64_t v14 = 0x6464416C69616D65;
                    goto LABEL_34;
                  case 7:
                    unint64_t v1 = 0xEC00000070696873;
                    unsigned int v37 = 1634493810;
                    goto LABEL_59;
                  case 8:
                    unint64_t v1 = 0xE800000000000000;
                    uint64_t v14 = 0x6565646E65747461;
                    goto LABEL_34;
                  case 9:
                    unint64_t v1 = 0xEB000000006F666ELL;
                    uint64_t v14 = 0x49746361746E6F63;
                    goto LABEL_34;
                  case 0xA:
                    unint64_t v1 = 0xE800000000000000;
                    unsigned int v37 = 1633906540;
                    goto LABEL_59;
                  case 0xB:
                    uint64_t v14 = 1836020326;
                    goto LABEL_34;
                  case 0xC:
                    unint64_t v1 = 0xE200000000000000;
                    uint64_t v14 = 28532;
                    goto LABEL_34;
                  case 0xD:
                    unint64_t v1 = 0x80000001B2E95700;
                    uint64_t v14 = 0xD000000000000010;
                    goto LABEL_34;
                  case 0xE:
                    unint64_t v1 = 0xE800000000000000;
                    uint64_t v14 = 0x7473657265746E69;
                    goto LABEL_34;
                  case 0xF:
                    unint64_t v1 = 0xE600000000000000;
                    uint64_t v14 = 0x6E6F73726570;
                    goto LABEL_34;
                  case 0x10:
                    unint64_t v1 = 0xEB0000000079726FLL;
                    uint64_t v14 = 0x6765746143707061;
                    goto LABEL_34;
                  case 0x11:
                    uint64_t v14 = 0x7461447472617473;
LABEL_56:
                    unint64_t v1 = 0xE900000000000065;
                    goto LABEL_34;
                  case 0x12:
                    unint64_t v1 = 0xE700000000000000;
                    uint64_t v14 = 0x65746144646E65;
                    goto LABEL_34;
                  case 0x13:
                    unint64_t v1 = 0xE800000000000000;
                    unsigned int v37 = 1634891108;
LABEL_59:
                    uint64_t v14 = v37 | 0x6E6F697400000000;
                    break;
                  case 0x14:
                    uint64_t v14 = 1701869940;
                    break;
                  case 0x15:
                    unint64_t v1 = 0xE500000000000000;
                    uint64_t v14 = 0x74696D696CLL;
                    break;
                  case 0x16:
                    unint64_t v1 = 0xE700000000000000;
                    uint64_t v14 = 0x63734174726F73;
                    break;
                  case 0x17:
                    unint64_t v1 = 0xE800000000000000;
                    uint64_t v14 = 0x6373654474726F73;
                    break;
                  case 0x18:
                    unint64_t v1 = 0xE600000000000000;
                    uint64_t v14 = 0x656372756F73;
                    break;
                  case 0x19:
                    unint64_t v1 = 0xE500000000000000;
                    uint64_t v14 = 0x65756C6176;
                    break;
                  default:
                    goto LABEL_34;
                }
                goto LABEL_34;
              case 7u:
                sub_1B2CA01B8();
                goto LABEL_34;
              default:
                sub_1B2CA01B8();
                *(void *)(v0 + 56) = v14;
                *(void *)(v0 + 64) = v1;
                *(void *)(v0 + 72) = 32;
                *(void *)(v0 + 80) = 0xE100000000000000;
                sub_1B29C3640();
                if ((sub_1B2E83038() & 1) == 0) {
                  goto LABEL_34;
                }
                uint64_t v256 = 39;
                unint64_t v257 = 0xE100000000000000;
                sub_1B2E82518();
                swift_bridgeObjectRelease();
                sub_1B2E82518();
LABEL_33:
                uint64_t v14 = v256;
                unint64_t v1 = v257;
                goto LABEL_34;
            }
          }
        }
        swift_bridgeObjectRetain();
        unint64_t v2 = MEMORY[0x1E4FBC860];
LABEL_119:
        uint64_t v140 = *(void *)(v2 + 16);
        uint64_t v141 = *(void *)(v242 + 16);
        unint64_t v1 = v141 + v140;
        uint64_t v5 = v252;
        if (__OFADD__(v141, v140)) {
          goto LABEL_193;
        }
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v143 = v242;
        if (!isUniquelyReferenced_nonNull_native || (int64_t)v1 > *(void *)(v242 + 24) >> 1)
        {
          sub_1B29B7048();
          uint64_t v143 = v144;
        }
        uint64_t v242 = v143;
        if (*(void *)(v2 + 16))
        {
          uint64_t v145 = *(void *)(v143 + 16);
          if ((*(void *)(v143 + 24) >> 1) - v145 < v140) {
            goto LABEL_195;
          }
          unint64_t v146 = v143 + 16 * v145 + 32;
          BOOL v147 = v2 + 32 >= v146 + 16 * v140 || v146 >= v2 + 32 + 16 * v140;
          if (!v147) {
            goto LABEL_197;
          }
          swift_arrayInitWithCopy();
          if (v140)
          {
            uint64_t v148 = *(void *)(v242 + 16);
            BOOL v41 = __OFADD__(v148, v140);
            uint64_t v149 = v148 + v140;
            if (v41) {
              goto LABEL_196;
            }
            *(void *)(v242 + 16) = v149;
          }
        }
        else if (v140)
        {
          goto LABEL_194;
        }
        swift_bridgeObjectRelease();
        goto LABEL_157;
      case 1:
        sub_1B29A3EB4(&qword_1EB7E34A8);
        *(_OWORD *)(sub_1B29A1824() + 16) = xmmword_1B2EC00A0;
        if (!_Records_GDEntityPredicate_records)
        {
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
          JUMPOUT(0x1B2C94AE4);
        }
        sub_1B2CA0224();
        if (v18 == v41) {
          goto LABEL_185;
        }
        if (*(uint64_t *)(v40 + 1480) < 3558)
        {
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_199;
          }
          uint64_t v42 = *(unsigned __int16 *)(v40 + 1464);
          swift_bridgeObjectRetain();
          sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_200;
          }
          sub_1B2CA0280();
          uint64_t v43 = *(void *)(v0 + 200);
          sub_1B2C9F70C();
          uint64_t v44 = sub_1B2CA0160();
          *(void *)(sub_1B2C9FC68(v44, v45) + 16) = v43;
          swift_bridgeObjectRetain();
          sub_1B2C9FA88((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4);
          if (v2)
          {
            sub_1B2CA00B4();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            swift_bridgeObjectRelease();
            swift_deallocUninitializedObject();
            goto LABEL_173;
          }
          sub_1B2C9FB18();
          sub_1B2CA01CC();
          if (v16)
          {
            uint64_t v52 = *(void *)(v1 + 32);
            unint64_t v53 = *(void *)(v1 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v0 = v214;
            goto LABEL_145;
          }
          uint64_t v0 = v214;
          if (v46)
          {
            sub_1B2C9F878();
            uint64_t v47 = (void *)v206;
LABEL_144:
            *uint64_t v47 = v1;
            sub_1B29A3EB4(&qword_1EB7E3B30);
            sub_1B2A20660();
            sub_1B2CA01FC();
            sub_1B2E822D8();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v52 = v256;
            unint64_t v53 = v257;
            goto LABEL_145;
          }
LABEL_85:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v52 = 0;
          unint64_t v53 = 0xE000000000000000;
LABEL_145:
          *(void *)(v42 + 24) = v52;
          *(void *)(v42 + 32) = v53;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2C9F73C();
            uint64_t v5 = v170;
          }
          unint64_t v2 = *(void *)(v5 + 16);
          sub_1B2CA01F0();
          if (v147)
          {
            sub_1B2C9F960();
            uint64_t v5 = v171;
          }
          *(void *)(v5 + 16) = v53;
          *(void *)(v5 + 8 * v2 + 32) = v42 | 0x5000000000000004;
          goto LABEL_157;
        }
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        __break(1u);
        __break(1u);
        __break(1u);
        __break(1u);
LABEL_195:
        __break(1u);
LABEL_196:
        __break(1u);
LABEL_197:
        sub_1B2E834A8();
        sub_1B299BBFC();
        return;
      case 2:
        sub_1B29A3EB4(&qword_1EB7E34A8);
        *(_OWORD *)(sub_1B29A1824() + 16) = xmmword_1B2EC00A0;
        if (!_Records_GDEntityPredicate_records) {
          goto LABEL_201;
        }
        sub_1B2CA0224();
        if (v18 == v41) {
          goto LABEL_186;
        }
        if (*(uint64_t *)(v48 + 1528) >= 3558) {
          goto LABEL_190;
        }
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_202;
        }
        uint64_t v42 = *(unsigned __int16 *)(v48 + 1512);
        swift_bridgeObjectRetain();
        sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_203;
        }
        sub_1B2CA0280();
        uint64_t v247 = *(void *)(v0 + 200);
        sub_1B2C9F70C();
        uint64_t v49 = sub_1B2CA0160();
        *(void *)(sub_1B2C9FC68(v49, v50) + 16) = v247;
        swift_bridgeObjectRetain();
        sub_1B2C9FA88((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4);
        if (v2)
        {
          sub_1B2CA00B4();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          swift_bridgeObjectRelease();
LABEL_172:
          swift_deallocUninitializedObject();
          goto LABEL_173;
        }
        sub_1B2C9FB18();
        sub_1B2CA01CC();
        if (v16)
        {
          uint64_t v52 = *(void *)(v1 + 32);
          unint64_t v53 = *(void *)(v1 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_145;
        }
        if (v51)
        {
          sub_1B2C9F878();
          uint64_t v47 = (void *)v208;
          goto LABEL_144;
        }
        goto LABEL_85;
      case 4:
        if (!_Records_GDEntityPredicate_records) {
          goto LABEL_204;
        }
        sub_1B2CA0224();
        if (v18 == v41) {
          goto LABEL_187;
        }
        if (*(uint64_t *)(v54 + 1408) >= 3558) {
          goto LABEL_191;
        }
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_205;
        }
        unint64_t v1 = *(unsigned __int16 *)(v54 + 1392);
        swift_bridgeObjectRetain();
        sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_206;
        }
        uint64_t v56 = v55;
        uint64_t v57 = *(void *)(v0 + 200);
        uint64_t v58 = swift_allocObject();
        uint64_t v59 = sub_1B2E82538();
        *(void *)(sub_1B2CA00D8(v59, v60) + 16) = v57;
        swift_bridgeObjectRetain();
        sub_1B2C9FA88((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4);
        if (v56) {
          goto LABEL_164;
        }
        sub_1B2C9FB18();
        sub_1B2CA01CC();
        if (v16) {
          goto LABEL_117;
        }
        if (!v61) {
          goto LABEL_107;
        }
        sub_1B2C9F878();
        unsigned __int8 v62 = (void *)v204;
        goto LABEL_151;
      case 7:
        swift_bridgeObjectRetain_n();
        uint64_t v63 = sub_1B2CA69D8(v7);
        swift_bridgeObjectRelease();
        if (!v63)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B2C9F3CC();
          swift_allocError();
          uint64_t v187 = 0xD000000000000037;
LABEL_168:
          sub_1B2C9FEC0(v186, v187);
LABEL_169:
          swift_willThrow();
          swift_bridgeObjectRelease();
LABEL_173:
          swift_task_dealloc();
          swift_task_dealloc();
          sub_1B299AD7C();
          sub_1B299BBFC();
          __asm { BRAA            X1, X16 }
        }
        uint64_t v64 = sub_1B2C387D4();
        unint64_t v244 = v7;
        uint64_t v248 = v3;
        sub_1B2A7C538(0x8BuLL, v64 + 16);
        sub_1B29A3EB4(&qword_1E9C39A58);
        uint64_t v65 = (__n128 *)sub_1B2C9F70C();
        sub_1B2C9F938(v65);
        uint64_t v221 = sub_1B299D354();
        uint64_t v66 = (__n128 *)sub_1B2C37E84();
        sub_1B2CA0094(v66, v67, v68, v69, v70, v71, v72, v73, v190, v192, v194, v196, v198, v200, v202, v204, v206, v208, v210,
          v212,
          v214,
          v216,
          v218,
          v221,
          (uint64_t)v224,
          v226,
          v228,
          v230,
          (uint64_t)v232,
          v234,
          v236,
          v238,
          v240,
          v242,
          v74);
        uint64_t v253 = v64;
        uint64_t v75 = sub_1B299D354();
        sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
        uint64_t v76 = (__n128 *)sub_1B29A1824();
        sub_1B2A6BC14(v76, (__n128)xmmword_1B2EC00A0);
        static EntityClass.agentAffiliationRelationshipType.getter();
        *(void *)(v75 + 16) = v76;
        v66[2].n128_u64[0] = v75 | 0x4000000000000000;
        uint64_t v77 = sub_1B2C387D4();
        static EntityPredicate.personIdentifier.getter();
        uint64_t v78 = (__n128 *)sub_1B2C9F70C();
        sub_1B2C9F938(v78);
        uint64_t v79 = sub_1B29A2D00();
        uint64_t v80 = v5;
        uint64_t v81 = sub_1B2CA1F54(v63);
        uint64_t v83 = v82;
        swift_bridgeObjectRelease();
        *(void *)(v79 + 16) = v81;
        *(void *)(v79 + 24) = v83;
        uint64_t v5 = v80;
        sub_1B2C9F954();
        v78[2].n128_u64[0] = v79 | v84;
        *(void *)(v77 + 56) = v78;
        uint64_t v85 = v77 | 4;
        uint64_t v86 = v253;
LABEL_110:
        v66[2].n128_u64[1] = v85;
        *(void *)(v220 + 16) = v66;
        v65[2].n128_u64[0] = v220 | 0x1000000000000004;
        *(void *)(v86 + 56) = v65;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2C9F73C();
          uint64_t v5 = v168;
        }
        unint64_t v2 = *(void *)(v5 + 16);
        unint64_t v1 = v244;
        uint64_t v3 = v248;
        if (v2 >= *(void *)(v5 + 24) >> 1)
        {
          sub_1B2C9F960();
          uint64_t v5 = v169;
        }
        *(void *)(v5 + 16) = v2 + 1;
        *(void *)(v5 + 8 * v2 + 32) = v86 | 4;
LABEL_157:
        swift_bridgeObjectRelease();
LABEL_158:
        if (++v3 == v251)
        {
          swift_release();
          uint64_t v176 = v242;
LABEL_161:
          *(void *)(v0 + 256) = v5;
          *(void *)(v0 + 264) = v176;
          id v177 = (void *)swift_task_alloc();
          *(void *)(v0 + 272) = v177;
          *id v177 = v0;
          v177[1] = sub_1B2C94BC4;
          sub_1B299BBFC();
          sub_1B2C9A810(v178, v179);
          return;
        }
        continue;
      case 9:
        if (!_Records_GDEntityPredicate_records) {
          goto LABEL_207;
        }
        sub_1B2CA0224();
        if (v18 == v41) {
          goto LABEL_188;
        }
        if (*(uint64_t *)(v87 + 3424) >= 3558) {
          goto LABEL_192;
        }
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_208;
        }
        unint64_t v1 = *(unsigned __int16 *)(v87 + 3408);
        swift_bridgeObjectRetain();
        sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_209;
        }
        uint64_t v89 = v88;
        uint64_t v90 = *(void *)(v0 + 200);
        uint64_t v58 = swift_allocObject();
        uint64_t v91 = sub_1B2E82538();
        *(void *)(sub_1B2CA00D8(v91, v92) + 16) = v90;
        swift_bridgeObjectRetain();
        sub_1B2C9FA88((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4);
        if (!v89)
        {
          sub_1B2C9FB18();
          sub_1B2CA01CC();
          if (v16)
          {
LABEL_117:
            uint64_t v94 = *(void *)(v1 + 32);
            unint64_t v95 = *(void *)(v1 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (v93)
          {
            sub_1B2C9F878();
            unsigned __int8 v62 = (void *)v202;
LABEL_151:
            *unsigned __int8 v62 = v1;
            sub_1B29A3EB4(&qword_1EB7E3B30);
            sub_1B2A20660();
            sub_1B2CA01FC();
            sub_1B2E822D8();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v94 = v256;
            unint64_t v95 = v257;
          }
          else
          {
LABEL_107:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v94 = 0;
            unint64_t v95 = 0xE000000000000000;
          }
          *(void *)(v58 + 56) = v94;
          *(void *)(v58 + 64) = v95;
          *(void *)(v58 + 72) = 0;
          *(void *)(v58 + 80) = 0;
          *(_DWORD *)(v58 + 87) = 0;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2C9F73C();
            uint64_t v5 = v172;
          }
          unint64_t v2 = *(void *)(v5 + 16);
          sub_1B2CA01F0();
          if (v147)
          {
            sub_1B2C9F960();
            uint64_t v5 = v173;
          }
          *(void *)(v5 + 16) = v95;
          *(void *)(v5 + 8 * v2 + 32) = v58;
          goto LABEL_157;
        }
LABEL_164:
        sub_1B2CA00B4();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_172;
      case 10:
        swift_bridgeObjectRetain_n();
        uint64_t v96 = sub_1B2CA69D8(v7);
        swift_bridgeObjectRelease();
        if (!v96)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B2C9F3CC();
          swift_allocError();
          uint64_t v187 = 0xD000000000000032;
          goto LABEL_168;
        }
        uint64_t v86 = sub_1B2C387D4();
        unint64_t v244 = v7;
        uint64_t v248 = v3;
        sub_1B2A7C538(0x5AuLL, v86 + 16);
        sub_1B29A3EB4(&qword_1E9C39A58);
        uint64_t v65 = (__n128 *)sub_1B2C9F70C();
        sub_1B2C9F938(v65);
        uint64_t v222 = sub_1B299D354();
        uint64_t v66 = (__n128 *)sub_1B2C37E84();
        sub_1B2CA0094(v66, v97, v98, v99, v100, v101, v102, v103, v190, v192, v194, v196, v198, v200, v202, v204, v206, v208, v210,
          v212,
          v214,
          v216,
          v218,
          v222,
          (uint64_t)v224,
          v226,
          v228,
          v230,
          (uint64_t)v232,
          v234,
          v236,
          v238,
          v240,
          v242,
          v104);
        uint64_t v105 = sub_1B299D354();
        sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
        uint64_t v254 = v5;
        uint64_t v106 = (__n128 *)sub_1B29A1824();
        sub_1B2A6BC14(v106, (__n128)xmmword_1B2EC00A0);
        static EntityClass.locationRelationshipType.getter();
        *(void *)(v105 + 16) = v106;
        v66[2].n128_u64[0] = v105 | 0x4000000000000000;
        uint64_t v107 = sub_1B2C387D4();
        sub_1B2A7C538(0x33uLL, v107 + 16);
        uint64_t v108 = (__n128 *)sub_1B2C9F70C();
        sub_1B2C9F938(v108);
        uint64_t v109 = sub_1B29A2D00();
        uint64_t v110 = sub_1B2CA1F54(v96);
        uint64_t v112 = v111;
        swift_bridgeObjectRelease();
        *(void *)(v109 + 16) = v110;
        *(void *)(v109 + 24) = v112;
        sub_1B2C9F954();
        v108[2].n128_u64[0] = v109 | v113;
        *(void *)(v107 + 56) = v108;
        uint64_t v5 = v254;
        uint64_t v85 = v107 | 4;
        goto LABEL_110;
      case 14:
        uint64_t v255 = v5;
        uint64_t v249 = v3;
        uint64_t v114 = *(void *)(v0 + 200);
        uint64_t v245 = sub_1B299D354();
        sub_1B29A3EB4(&qword_1E9C39A58);
        uint64_t v115 = (__n128 *)sub_1B2C37E84();
        sub_1B2CA0094(v115, v116, v117, v118, v119, v120, v121, v122, v190, v192, v194, v196, v198, v200, v202, v204, v206, v208, v210,
          v212,
          v214,
          v216,
          v218,
          v220,
          (uint64_t)v224,
          v226,
          v228,
          v230,
          (uint64_t)v232,
          v234,
          v236,
          v238,
          v240,
          v242,
          v123);
        uint64_t v124 = sub_1B299D354();
        sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
        uint64_t v125 = (__n128 *)sub_1B29A1824();
        sub_1B2C9F938(v125);
        swift_bridgeObjectRetain();
        static EntityClass.topic.getter();
        *(void *)(v124 + 16) = v125;
        v115[2].n128_u64[0] = v124 | 0x4000000000000000;
        uint64_t v126 = sub_1B29A2D00();
        uint64_t v127 = swift_task_alloc();
        *(void *)(v127 + 16) = v114;
        swift_bridgeObjectRetain();
        uint64_t v128 = sub_1B2DF42C8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F464, v127, v7);
        swift_task_dealloc();
        uint64_t v129 = sub_1B2CA1F54(v128);
        uint64_t v131 = v130;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(v126 + 16) = v129;
        *(void *)(v126 + 24) = v131;
        v115[2].n128_u64[1] = v126 | 0x5000000000000000;
        *(void *)(v245 + 16) = v115;
        uint64_t v132 = swift_bridgeObjectRetain();
        uint64_t v133 = sub_1B2CA69D8(v132);
        swift_bridgeObjectRelease();
        if (v133)
        {
          uint64_t v134 = sub_1B29A2D00();
          uint64_t v135 = sub_1B2CA1F54(v133);
          uint64_t v137 = v136;
          swift_release();
          swift_bridgeObjectRelease();
          *(void *)(v134 + 16) = v135;
          *(void *)(v134 + 24) = v137;
          sub_1B2C9F954();
          uint64_t v139 = v134 | v138;
        }
        else
        {
          sub_1B2C9FE14();
          uint64_t v139 = v245 | v150;
        }
        uint64_t v151 = sub_1B2C387D4();
        sub_1B2A7C538(0x5BuLL, v151 + 16);
        uint64_t v152 = (__n128 *)sub_1B2C9F70C();
        sub_1B2C9F938(v152);
        uint64_t v153 = sub_1B299D354();
        uint64_t v154 = (__n128 *)sub_1B2C37E84();
        sub_1B2CA0094(v154, v155, v156, v157, v158, v159, v160, v161, v191, v193, v195, v197, v199, v201, v203, v205, v207, v209, v211,
          v213,
          v215,
          v217,
          v219,
          v223,
          v225,
          v227,
          v229,
          v231,
          v233,
          v235,
          v237,
          v239,
          v241,
          v243,
          v162);
        uint64_t v163 = sub_1B299D354();
        uint64_t v164 = (__n128 *)sub_1B29A1824();
        sub_1B2A6BC14(v164, (__n128)xmmword_1B2EC00A0);
        static EntityClass.topicRelationshipType.getter();
        *(void *)(v163 + 16) = v164;
        v154[2].n128_u64[0] = v163 | 0x4000000000000000;
        uint64_t v165 = sub_1B2C387D4();
        sub_1B2A7C538(0x11uLL, v165 + 16);
        __int16 v166 = (__n128 *)sub_1B2C9F70C();
        sub_1B2C9F938(v166);
        *(void *)(v167 + 32) = v139;
        *(void *)(v165 + 56) = v167;
        v154[2].n128_u64[1] = v165 | 4;
        *(void *)(v153 + 16) = v154;
        v152[2].n128_u64[0] = v153 | 0x1000000000000004;
        *(void *)(v151 + 56) = v152;
        swift_retain();
        uint64_t v5 = v255;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2C9F73C();
          uint64_t v5 = v174;
        }
        uint64_t v3 = v249;
        unint64_t v1 = *(void *)(v5 + 16);
        unint64_t v2 = v1 + 1;
        if (v1 >= *(void *)(v5 + 24) >> 1)
        {
          sub_1B2C9F960();
          uint64_t v5 = v175;
        }
        *(void *)(v5 + 16) = v2;
        *(void *)(v5 + 8 * v1 + 32) = v151 | 4;
        swift_release();
        goto LABEL_157;
      case 21:
        goto LABEL_158;
      default:
        char v181 = v6[16];
        swift_bridgeObjectRetain();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v256 = 0;
        unint64_t v257 = 0xE000000000000000;
        sub_1B2E831F8();
        unint64_t v182 = v257;
        *(void *)(v0 + 40) = v256;
        *(void *)(v0 + 48) = v182;
        sub_1B2E82518();
        *(unsigned char *)(v0 + 16) = v8;
        *(void *)(v0 + 24) = v7;
        *(unsigned char *)(v0 + 32) = v181;
        sub_1B2E83388();
        sub_1B299B7D8();
        sub_1B29B1E20();
        sub_1B2E82518();
        uint64_t v184 = *(void *)(v0 + 40);
        uint64_t v183 = *(void *)(v0 + 48);
        sub_1B2C9F3CC();
        swift_allocError();
        *uint64_t v185 = v184;
        v185[1] = v183;
        goto LABEL_169;
    }
  }
}

uint64_t sub_1B2C94BC4()
{
  sub_1B299F394();
  uint64_t v2 = *v1;
  sub_1B299B0E0();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1B2C94CFC()
{
  sub_1B299F394();
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[32];
  if ((~v1 & 0xF000000000000007) != 0)
  {
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v2 = v0[32];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B299B8BC();
      sub_1B29B93B0();
      uint64_t v2 = v7;
    }
    unint64_t v4 = *(void *)(v2 + 16);
    if (v4 >= *(void *)(v2 + 24) >> 1)
    {
      sub_1B29B93B0();
      uint64_t v2 = v8;
    }
    *(void *)(v2 + 16) = v4 + 1;
    *(void *)(v2 + 8 * v4 + 32) = v1;
    sub_1B2C9F418(v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v2);
}

uint64_t sub_1B2C94E00()
{
  sub_1B299B3BC();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v0();
}

uint64_t sub_1B2C94E68@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for KGQ.Value();
  sub_1B299D278();
  uint64_t v133 = v4;
  uint64_t v134 = v3;
  MEMORY[0x1F4188790](v3);
  sub_1B2999940();
  uint64_t v124 = (void *)v5;
  MEMORY[0x1F4188790](v6);
  __n128 v123 = (void *)((char *)v122 - v7);
  uint64_t v8 = sub_1B299D354();
  uint64_t v135 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
  uint64_t v9 = (__n128 *)sub_1B29A1824();
  long long v140 = xmmword_1B2EC00A0;
  sub_1B2A6BC14(v9, (__n128)xmmword_1B2EC00A0);
  static EntityClass.agentAffiliationRelationshipType.getter();
  *(void *)(v8 + 16) = v9;
  sub_1B2C9F7DC();
  uint64_t v11 = v10;
  unint64_t v12 = *(void *)(v10 + 16);
  uint64_t v13 = v12 + 1;
  if (v12 >= *(void *)(v10 + 24) >> 1)
  {
LABEL_96:
    sub_1B2C9FAC4();
    uint64_t v11 = v121;
  }
  *(void *)(v11 + 16) = v13;
  sub_1B2C9FB34(v8 | 0x4000000000000000);
  sub_1B2C9FD80();
  if (v1)
  {
LABEL_109:
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v14 = *(void *)(v143 + 16);
    if (v14)
    {
      v122[0] = a1;
      unint64_t v148 = 0;
      v122[1] = v143;
      a1 = (unsigned char *)(v143 + 48);
      uint64_t v132 = 162;
      uint64_t v139 = 0xF000000000000007;
      uint64_t v130 = 1336;
      uint64_t v129 = 2889;
      uint64_t v137 = 2674;
      uint64_t v138 = 233;
      uint64_t v136 = 3558;
      long long v131 = xmmword_1B2EBFA40;
      while (1)
      {
        uint64_t v8 = *((void *)a1 - 1);
        int v15 = *(a1 - 16);
        switch(v15)
        {
          case 11:
            if (!*(void *)(v8 + 16))
            {
              swift_bridgeObjectRetain();
LABEL_57:
              sub_1B29A3EB4(&qword_1E9C39A58);
              uint64_t v128 = sub_1B2C37E84();
              *(_OWORD *)(v128 + 16) = v131;
              uint64_t v92 = (__n128 *)sub_1B29A1824();
              sub_1B2C9FFB0(v92);
              if (v34 != v35) {
                goto LABEL_87;
              }
              if (!_Records_GDEntityClass_records) {
                goto LABEL_101;
              }
              sub_1B2C9FC5C();
              if (v34 == v35) {
                goto LABEL_89;
              }
              uint64_t v142 = v11;
              if (*(void *)(v94 + 640) >= v129) {
                goto LABEL_92;
              }
              uint64_t v141 = v14;
              if (!_Records_GDEntityClass_classIds[0]) {
                goto LABEL_104;
              }
              uint64_t v95 = v93;
              char v96 = *(unsigned char *)(v94 + 624);
              uint64_t v97 = sub_1B2E82538();
              if (!_Records_GDEntityClass_labels) {
                goto LABEL_105;
              }
              uint64_t v13 = v97;
              uint64_t v99 = v98;
              uint64_t v127 = sub_1B299D354();
              uint64_t v100 = sub_1B299D354();
              uint64_t v101 = sub_1B2E82538();
              *(void *)(v95 + 32) = v13;
              *(void *)(v95 + 40) = v99;
              *(void *)(v95 + 48) = v101;
              *(void *)(v95 + 56) = v102;
              *(unsigned char *)(v95 + 64) = v96;
              *(void *)(v100 + 16) = v95;
              uint64_t v103 = v128;
              *(void *)(v128 + 32) = v100 | 0x4000000000000000;
              uint64_t v104 = sub_1B29A2D00();
              MEMORY[0x1F4188790](v104);
              sub_1B2C9F8B0();
              swift_bridgeObjectRetain();
              uint64_t v105 = sub_1B2C9FF48((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4);
              unint64_t v148 = v1;
              if (v1)
              {
                swift_bridgeObjectRelease();
                sub_1B2C37234();
                swift_bridgeObjectRelease();
                sub_1B2C9FBB0();
                sub_1B2CA0068();
                *(void *)(v103 + 16) = 0;
                swift_release();
                sub_1B2C9F418(v139);
                swift_bridgeObjectRelease();
                return swift_deallocUninitializedObject();
              }
              uint64_t v106 = v105;
              sub_1B2C9F88C();
              if (v51)
              {
                uint64_t v108 = *(void *)(v106 + 32);
                unint64_t v109 = *(void *)(v106 + 40);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v14 = v141;
              }
              else
              {
                uint64_t v14 = v141;
                if (v107)
                {
                  sub_1B2C9FAE4();
                  uint64_t v146 = v106;
                  sub_1B29A3EB4(&qword_1EB7E3B30);
                  sub_1B2A20660();
                  sub_1B299E90C();
                  sub_1B2C9FFC4();
                  swift_bridgeObjectRelease();
                  sub_1B2C9F760();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v108 = v143;
                  unint64_t v109 = v144;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v108 = 0;
                  unint64_t v109 = 0xE000000000000000;
                }
              }
              *(void *)(v104 + 16) = v108;
              *(void *)(v104 + 24) = v109;
              *(void *)(v103 + 40) = v104 | 0x5000000000000000;
              sub_1B2C9F418(v139);
              swift_bridgeObjectRelease();
              *(void *)(v127 + 16) = v103;
              sub_1B2C9FE20();
              uint64_t v139 = v110;
              uint64_t v11 = v142;
              break;
            }
            uint64_t v24 = sub_1B2C9F9AC(v133);
            unint64_t v25 = v124;
            sub_1B2C9F51C(v24, (uint64_t)v124);
            if (swift_getEnumCaseMultiPayload() != 7)
            {
              swift_bridgeObjectRetain();
              sub_1B2C9F368((uint64_t)v25);
              goto LABEL_57;
            }
            sub_1B2C9F418(v139);
            double v26 = v25;
            uint64_t v27 = *v25;
            uint64_t v28 = v26[1];
            uint64_t v29 = sub_1B29A2D00();
            *(void *)(v29 + 16) = v27;
            *(void *)(v29 + 24) = v28;
            uint64_t v139 = v29 | 0x4000000000000004;
            break;
          case 21:
            break;
          case 13:
            sub_1B29A3EB4(&qword_1EB7E34A8);
            uint64_t v30 = (__n128 *)sub_1B29A1824();
            sub_1B2C9FFA4(v30);
            if (v138 < 34)
            {
              __break(1u);
LABEL_85:
              __break(1u);
LABEL_86:
              __break(1u);
LABEL_87:
              __break(1u);
LABEL_88:
              __break(1u);
LABEL_89:
              __break(1u);
LABEL_90:
              __break(1u);
LABEL_91:
              __break(1u);
LABEL_92:
              __break(1u);
LABEL_93:
              __break(1u);
LABEL_94:
              __break(1u);
LABEL_95:
              __break(1u);
              goto LABEL_96;
            }
            if (!_Records_GDEntityPredicate_records)
            {
              __break(1u);
LABEL_98:
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
              goto LABEL_109;
            }
            sub_1B299B5DC();
            if (v34 == v35) {
              goto LABEL_85;
            }
            if (*(void *)(v32 + 808) >= v136) {
              goto LABEL_86;
            }
            uint64_t v141 = v14;
            uint64_t v142 = v11;
            if (!_Records_GDEntityPredicate_predicateIds) {
              goto LABEL_98;
            }
            uint64_t v36 = v31;
            unsigned int v37 = a1;
            __int16 v38 = *(_WORD *)(v32 + 792);
            unint64_t v39 = (char *)_Records_GDEntityPredicate_predicateIds + v33;
            swift_bridgeObjectRetain();
            uint64_t v40 = sub_1B2E82538();
            if (!_Records_GDEntityPredicate_labels) {
              goto LABEL_99;
            }
            uint64_t v42 = v40;
            uint64_t v43 = v41;
            uint64_t v44 = sub_1B2C9F70C();
            uint64_t v45 = sub_1B2E82538();
            *(void *)(v36 + 32) = v42;
            *(void *)(v36 + 40) = v43;
            *(void *)(v36 + 48) = v45;
            *(void *)(v36 + 56) = v46;
            *(_WORD *)(v36 + 64) = v38;
            *(void *)(v44 + 16) = v36;
            MEMORY[0x1F4188790](v45);
            sub_1B2C9F8B0();
            swift_bridgeObjectRetain();
            uint64_t v47 = (uint64_t)v39;
            uint64_t v13 = v8;
            unint64_t v1 = v148;
            uint64_t v48 = sub_1B2DF42C8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4, v47, v8);
            unint64_t v148 = v1;
            if (v1)
            {
              swift_bridgeObjectRelease();
              sub_1B2C9F418(v139);
              swift_bridgeObjectRelease();
              sub_1B2C37234();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return swift_deallocUninitializedObject();
            }
            uint64_t v49 = v48;
            sub_1B2C9F88C();
            if (v51)
            {
              uint64_t v53 = *(void *)(v49 + 32);
              unint64_t v54 = *(void *)(v49 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v14 = v141;
              uint64_t v52 = v44;
              uint64_t v11 = v142;
              a1 = v37;
            }
            else
            {
              uint64_t v14 = v141;
              uint64_t v52 = v44;
              a1 = v37;
              if (v50)
              {
                sub_1B2C9F724();
                sub_1B29A3EB4(&qword_1EB7E3B30);
                sub_1B2A20660();
                sub_1B299E90C();
                sub_1B2C9FFC4();
                swift_bridgeObjectRelease();
                sub_1B2C9F760();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v53 = v143;
                unint64_t v54 = v144;
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v53 = 0;
                unint64_t v54 = 0xE000000000000000;
              }
              uint64_t v11 = v142;
            }
            *(void *)(v52 + 24) = v53;
            *(void *)(v52 + 32) = v54;
            uint64_t v55 = *(void *)(v11 + 16);
            sub_1B2CA023C();
            if (v57)
            {
              sub_1B2C9FE6C(v56);
              sub_1B29B93B0();
              uint64_t v11 = v111;
            }
            sub_1B2C9FE04();
            *(void *)(v11 + 16) = v54;
            *(void *)(v11 + 8 * v55 + 32) = v58;
            goto LABEL_55;
          case 12:
            if (*(void *)(v8 + 16))
            {
              uint64_t v16 = sub_1B2C9F9AC(v133);
              double v17 = v123;
              sub_1B2C9F51C(v16, (uint64_t)v123);
              if (swift_getEnumCaseMultiPayload() == 7)
              {
                char v18 = v17;
                uint64_t v19 = *v17;
                uint64_t v20 = v18[1];
                uint64_t v21 = sub_1B29A2D00();
                *(void *)(v21 + 16) = v19;
                *(void *)(v21 + 24) = v20;
                unint64_t v22 = *(void *)(v11 + 16);
                unint64_t v1 = *(void *)(v11 + 24);
                uint64_t v13 = v22 + 1;
                swift_bridgeObjectRetain();
                if (v22 >= v1 >> 1)
                {
                  sub_1B2C9FAC4();
                  uint64_t v11 = v113;
                }
                sub_1B2C9F954();
                *(void *)(v11 + 16) = v13;
                *(void *)(v11 + 8 * v22 + 32) = v21 | v23;
LABEL_55:
                swift_bridgeObjectRelease();
                break;
              }
              swift_bridgeObjectRetain();
              sub_1B2C9F368((uint64_t)v17);
            }
            else
            {
              swift_bridgeObjectRetain();
            }
            if (v138 < 33) {
              goto LABEL_88;
            }
            if (!_Records_GDEntityPredicate_records) {
              goto LABEL_100;
            }
            sub_1B299B5DC();
            if (v34 == v35) {
              goto LABEL_90;
            }
            if (*(void *)(v59 + 784) >= v136) {
              goto LABEL_91;
            }
            uint64_t v128 = v8;
            if (!_Records_GDEntityPredicate_predicateIds) {
              goto LABEL_102;
            }
            uint64_t v142 = v11;
            __int16 v60 = *(_WORD *)(v59 + 768);
            uint64_t v61 = sub_1B2E82538();
            if (!_Records_GDEntityPredicate_labels) {
              goto LABEL_103;
            }
            uint64_t v63 = v61;
            uint64_t v8 = v62;
            uint64_t v64 = sub_1B2C387D4();
            uint64_t v65 = sub_1B2E82538();
            *(void *)(v64 + 16) = v63;
            *(void *)(v64 + 24) = v8;
            *(void *)(v64 + 32) = v65;
            *(void *)(v64 + 40) = v66;
            uint64_t v127 = v64;
            *(_WORD *)(v64 + 48) = v60;
            uint64_t v13 = sub_1B29A3EB4(&qword_1E9C39A58);
            uint64_t v67 = (__n128 *)sub_1B2C9F70C();
            sub_1B2C9FFA4(v67);
            uint64_t v68 = sub_1B2C37E84();
            *(_OWORD *)(v68 + 16) = v131;
            uint64_t v69 = (__n128 *)sub_1B29A1824();
            sub_1B2C9FFB0(v69);
            if (v34 != v35) {
              goto LABEL_93;
            }
            if (!_Records_GDEntityClass_records) {
              goto LABEL_106;
            }
            sub_1B2C9FC5C();
            if (v34 == v35) {
              goto LABEL_94;
            }
            if (*(void *)(v71 + 640) >= v129) {
              goto LABEL_95;
            }
            uint64_t v141 = v14;
            if (!_Records_GDEntityClass_classIds[0]) {
              goto LABEL_108;
            }
            uint64_t v72 = v70;
            uint64_t v126 = v67;
            char v73 = *(unsigned char *)(v71 + 624);
            uint64_t v74 = sub_1B2E82538();
            if (!_Records_GDEntityClass_labels) {
              goto LABEL_107;
            }
            uint64_t v76 = v74;
            uint64_t v77 = v75;
            uint64_t v125 = sub_1B299D354();
            uint64_t v78 = sub_1B299D354();
            uint64_t v79 = sub_1B2E82538();
            *(void *)(v72 + 32) = v76;
            *(void *)(v72 + 40) = v77;
            *(void *)(v72 + 48) = v79;
            *(void *)(v72 + 56) = v80;
            *(unsigned char *)(v72 + 64) = v73;
            *(void *)(v78 + 16) = v72;
            *(void *)(v68 + 32) = v78 | 0x4000000000000000;
            uint64_t v81 = sub_1B29A2D00();
            MEMORY[0x1F4188790](v81);
            sub_1B2C9F8B0();
            uint64_t v82 = v128;
            swift_bridgeObjectRetain();
            uint64_t v83 = v1;
            unint64_t v1 = v148;
            uint64_t v84 = sub_1B2DF42C8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4, v83, v82);
            unint64_t v148 = v1;
            if (v1)
            {
              swift_bridgeObjectRelease();
              sub_1B2C37234();
              swift_bridgeObjectRelease();
              sub_1B2C9FBB0();
              sub_1B2CA0068();
              *(void *)(v68 + 16) = 0;
              swift_release();
              swift_deallocUninitializedObject();
              v126[1].n128_u64[0] = 0;
              swift_release();
              sub_1B2C9F418(v139);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return swift_deallocUninitializedObject();
            }
            uint64_t v85 = sub_1B2CA1F54(v84);
            uint64_t v87 = v86;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)(v81 + 16) = v85;
            *(void *)(v81 + 24) = v87;
            *(void *)(v68 + 40) = v81 | 0x5000000000000000;
            *(void *)(v125 + 16) = v68;
            sub_1B2C9FE20();
            uint64_t v88 = v126;
            v126[2].n128_u64[0] = v89;
            uint64_t v90 = v127;
            *(void *)(v127 + 56) = v88;
            uint64_t v11 = v142;
            unint64_t v91 = *(void *)(v142 + 16);
            uint64_t v13 = v91 + 1;
            if (v91 >= *(void *)(v142 + 24) >> 1)
            {
              sub_1B2C9FAC4();
              uint64_t v11 = v112;
            }
            uint64_t v14 = v141;
            *(void *)(v11 + 16) = v13;
            *(void *)(v11 + 8 * v91 + 32) = v90 | 4;
            goto LABEL_55;
          default:
            char v117 = *a1;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_1B2C37234();
            sub_1B2C9FFFC();
            sub_1B29A2FC8();
            LOBYTE(v143) = v15;
            unint64_t v144 = v8;
            char v145 = v117;
            sub_1B2C9FB64();
            sub_1B299B7D8();
            sub_1B2E82518();
            uint64_t v118 = v146;
            uint64_t v119 = v147;
            sub_1B2C9F3CC();
            sub_1B299E4D4();
            *uint64_t v120 = v118;
            v120[1] = v119;
            swift_willThrow();
            sub_1B2C9F418(v139);
            return swift_bridgeObjectRelease();
        }
        a1 += 24;
        if (!--v14)
        {
          sub_1B2C37234();
          uint64_t v114 = v139;
          if ((~v139 & 0xF000000000000007) == 0)
          {
            a1 = (unsigned char *)v122[0];
            goto LABEL_76;
          }
          uint64_t result = sub_1B29A2D00();
          *(void *)(result + 16) = v114;
          *(void *)(result + 24) = v11;
          uint64_t v116 = 0x2000000000000000;
          a1 = (unsigned char *)v122[0];
          goto LABEL_78;
        }
      }
    }
    swift_release();
LABEL_76:
    uint64_t result = sub_1B299D354();
    *(void *)(result + 16) = v11;
    uint64_t v116 = 0x1000000000000004;
LABEL_78:
    *(void *)a1 = v116 | result;
  }
  return result;
}

void sub_1B2C95B34(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = v2;
  uint64_t v196 = a2;
  uint64_t v204 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  uint64_t v203 = v8;
  *(void *)&long long v229 = type metadata accessor for KGQ.Value();
  sub_1B299D278();
  uint64_t v201 = v9;
  MEMORY[0x1F4188790](v10);
  sub_1B2999940();
  unint64_t v216 = v11;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t)&v194 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (uint64_t)&v194 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v218 = (uint64_t *)((char *)&v194 - v19);
  uint64_t v20 = sub_1B299D354();
  uint64_t v202 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
  uint64_t v21 = (__n128 *)swift_allocObject();
  sub_1B2A6BC14(v21, (__n128)xmmword_1B2EE41B0);
  static EntityClass.event.getter();
  static EntityClass.calendarEvent.getter();
  static EntityClass.activityEvent.getter();
  static EntityClass.commuteActivity.getter();
  static EntityClass.transportationActivity.getter();
  static EntityClass.workingActivity.getter();
  static EntityClass.meetingActivity.getter();
  static EntityClass.eatingActivity.getter();
  static EntityClass.watchingTVActivity.getter();
  static EntityClass.communicatingActivity.getter();
  static EntityClass.shoppingActivity.getter();
  static EntityClass.mindfulnessActivity.getter();
  static EntityClass.sleepingActivity.getter();
  static EntityClass.travelingActivity.getter();
  static EntityClass.readingActivity.getter();
  static EntityClass.vacationingActivity.getter();
  static EntityClass.gamingActivity.getter();
  static EntityClass.socializingActivity.getter();
  static EntityClass.wakingUpActivity.getter();
  static EntityClass.goingToBedActivity.getter();
  static EntityClass.exercisingActivity.getter();
  static EntityClass.commuteActivity.getter();
  static EntityClass.diningActivity.getter();
  static EntityClass.attendingAPerformanceActivity.getter();
  static EntityClass.stationaryActivity.getter();
  static EntityClass.locationVisitActivity.getter();
  *(void *)(v20 + 16) = v21;
  sub_1B2C9F7DC();
  uint64_t v23 = sub_1B2C9FBA4(v22);
  unint64_t v24 = *(void *)(v23 + 16);
  uint64_t v25 = v24 + 1;
  if (v24 >= *(void *)(v23 + 24) >> 1) {
    goto LABEL_230;
  }
  while (2)
  {
    uint64_t v26 = v210;
    *(void *)(v210 + 16) = v25;
    *(void *)(v26 + 8 * v24 + 32) = v20 | 0x4000000000000000;
    uint64_t v230 = a1;
    swift_bridgeObjectRetain();
    sub_1B2C91D08(&v230);
    sub_1B2C9FF04();
    if (v3) {
      goto LABEL_258;
    }
    uint64_t v27 = v230;
    uint64_t v20 = (uint64_t)&unk_1B2EC0000;
    unint64_t v24 = v216;
    uint64_t v208 = *(void *)(v230 + 16);
    if (!v208)
    {
      swift_release();
      uint64_t v223 = 0;
      uint64_t v224 = 0;
      unint64_t v24 = 0;
      uint64_t v25 = 0;
      int v225 = 0;
      uint64_t v221 = 0;
      uint64_t v222 = 0;
      uint64_t v18 = 0;
      uint64_t v220 = 0;
      LOWORD(v28) = 0;
      uint64_t v159 = MEMORY[0x1E4FBC860];
      int v199 = 1;
LABEL_191:
      if (!*(void *)(v159 + 16))
      {
        swift_bridgeObjectRelease();
        uint64_t v169 = v210;
        __int16 v167 = v225;
        if (v18)
        {
LABEL_198:
          uint64_t v170 = v20;
          uint64_t v171 = v169;
          uint64_t v172 = sub_1B29A2D00();
          sub_1B29A3EB4(&qword_1E9C41D08);
          uint64_t v173 = sub_1B29A1824();
          long long v229 = *(_OWORD *)(v170 + 160);
          *(_OWORD *)(v173 + 16) = v229;
          *(void *)(v173 + 32) = v222;
          *(void *)(v173 + 40) = v18;
          uint64_t v174 = v221;
          *(void *)(v173 + 48) = v220;
          *(void *)(v173 + 56) = v174;
          *(_WORD *)(v173 + 64) = v28;
          *(void *)(v172 + 16) = v173;
          uint64_t v175 = (__n128 *)sub_1B29A1824();
          sub_1B2C9F938(v175);
          uint64_t v176 = v224;
          *(void *)(v177 + 32) = v223;
          *(void *)(v177 + 40) = v176;
          *(void *)(v177 + 48) = v24;
          *(void *)(v177 + 56) = v25;
          *(_WORD *)(v177 + 64) = v167;
          *(void *)(v172 + 24) = v177;
          unint64_t v178 = 0xB000000000000000;
          if (v199) {
            unint64_t v178 = 0xA000000000000004;
          }
          unint64_t v179 = v178 | v172;
          unint64_t v181 = *(void *)(v171 + 16);
          unint64_t v180 = *(void *)(v171 + 24);
          uint64_t v182 = v171;
          swift_retain();
          if (v181 >= v180 >> 1)
          {
            sub_1B29B93B0();
            uint64_t v182 = v192;
          }
          *(void *)(v182 + 16) = v181 + 1;
          *(void *)(v182 + 8 * v181 + 32) = v179;
          uint64_t v169 = v182;
          swift_release();
          goto LABEL_205;
        }
LABEL_204:
        sub_1B29D1EF4(v223, v224);
LABEL_205:
        uint64_t v183 = sub_1B299D354();
        *(void *)(v183 + 16) = v169;
        sub_1B2CA01A0(v183 | 0x2000000000000004);
        return;
      }
      uint64_t v15 = sub_1B299D354();
      uint64_t v160 = sub_1B29A1824();
      long long v229 = *(_OWORD *)(v20 + 160);
      *(_OWORD *)(v160 + 16) = v229;
      static EntityClass.dateRelationshipType.getter();
      *(void *)(v15 + 16) = v160;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_193:
        unint64_t v162 = *(void *)(v159 + 16);
        unint64_t v161 = *(void *)(v159 + 24);
        if (v162 >= v161 >> 1)
        {
          sub_1B2C9FE84(v161);
          sub_1B29B93B0();
          uint64_t v159 = v191;
        }
        *(void *)(v159 + 16) = v162 + 1;
        *(void *)(v159 + 8 * v162 + 32) = v15 | 0x4000000000000000;
        uint64_t v163 = sub_1B2C387D4();
        sub_1B2A7C538(0x91uLL, v163 + 16);
        sub_1B29A3EB4(&qword_1E9C39A58);
        uint64_t v164 = (__n128 *)sub_1B2C9F70C();
        sub_1B2C9F938(v164);
        *(void *)(sub_1B299D354() + 16) = v159;
        sub_1B2CA00A0();
        v164[2].n128_u64[0] = v165;
        *(void *)(v163 + 56) = v164;
        unint64_t v166 = *(void *)(v210 + 16);
        if (v166 >= *(void *)(v210 + 24) >> 1)
        {
          sub_1B2C9F8E0();
          sub_1B2C9FBA4(v193);
        }
        __int16 v167 = v225;
        uint64_t v168 = v163 | 4;
        uint64_t v169 = v210;
        *(void *)(v210 + 16) = v166 + 1;
        *(void *)(v169 + 8 * v166 + 32) = v168;
        if (v18) {
          goto LABEL_198;
        }
        goto LABEL_204;
      }
LABEL_239:
      sub_1B2C9FDD4();
      sub_1B29B93B0();
      uint64_t v159 = v190;
      goto LABEL_193;
    }
    uint64_t v195 = (uint64_t *)v18;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v25 = 0;
    uint64_t v18 = 0;
    int v225 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v28 = 0;
    unint64_t v29 = 0;
    uint64_t v209 = v230 + 32;
    uint64_t v228 = 233;
    uint64_t v227 = 2674;
    uint64_t v226 = 3558;
    uint64_t v198 = (void (**)(uint64_t, uint64_t *, uint64_t))(v6 + 32);
    uint64_t v197 = (void (**)(uint64_t, uint64_t))(v6 + 8);
    int v199 = 1;
    long long v200 = xmmword_1B2EBFA40;
    long long v206 = xmmword_1B2EC00A0;
    uint64_t v205 = MEMORY[0x1E4FBC860];
    uint64_t v207 = v230;
LABEL_5:
    if (v29 >= *(void *)(v27 + 16)) {
      goto LABEL_220;
    }
    uint64_t v30 = (unsigned __int8 *)(v209 + 24 * v29);
    a1 = *v30;
    unint64_t v31 = *((void *)v30 + 1);
    unsigned int v217 = v28;
    unint64_t v215 = v31;
    uint64_t v6 = 1;
    unint64_t v3 = 0xE700000000000000;
    switch((int)a1)
    {
      case 8:
        sub_1B2C9FAF8();
        uint64_t v32 = sub_1B299D354();
        uint64_t v25 = sub_1B29A3EB4(&qword_1E9C39A58);
        uint64_t v33 = (__n128 *)sub_1B2C37E84();
        sub_1B2C9F978(v33, (uint64_t)&v227);
        uint64_t v34 = sub_1B299D354();
        uint64_t v35 = sub_1B29A1824();
        sub_1B2C9FBC8(v35);
        static EntityClass.person.getter();
        *(void *)(v34 + 16) = v28;
        v33[2].n128_u64[0] = v34 | 0x4000000000000000;
        uint64_t v36 = sub_1B29A2D00();
        MEMORY[0x1F4188790](v36);
        sub_1B2C9F9FC();
        sub_1B2CA01D8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4, v27, v18);
        sub_1B2C9FF04();
        if (v27) {
          goto LABEL_206;
        }
        sub_1B2CA1F54(v37);
        sub_1B2CA0230();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(v36 + 16) = &v194;
        *(void *)(v36 + 24) = 0xE700000000000000;
        sub_1B2CA001C();
        sub_1B2C9FE14();
        uint64_t v20 = v32 | v38;
        if (*(void *)(v18 + 16))
        {
          unint64_t v39 = v195;
          sub_1B2C9F51C(v18 + ((*(unsigned __int8 *)(v201 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80)), (uint64_t)v195);
          if (swift_getEnumCaseMultiPayload() == 7)
          {
            swift_release();
            uint64_t v40 = *v39;
            uint64_t v41 = v39[1];
            uint64_t v42 = sub_1B29A2D00();
            *(void *)(v42 + 16) = v40;
            *(void *)(v42 + 24) = v41;
            sub_1B2C9F954();
            uint64_t v20 = v43 | v44;
          }
          else
          {
            sub_1B2C9F368((uint64_t)v39);
          }
          uint64_t v28 = v217;
        }
        else
        {
          uint64_t v28 = v217;
        }
        uint64_t v136 = swift_bridgeObjectRetain();
        uint64_t v137 = sub_1B2CA69D8(v136);
        swift_bridgeObjectRelease();
        if (v137)
        {
          uint64_t v138 = sub_1B29A2D00();
          uint64_t v139 = sub_1B2CA1F54(v137);
          uint64_t v141 = v140;
          swift_bridgeObjectRelease();
          swift_release();
          *(void *)(v138 + 16) = v139;
          *(void *)(v138 + 24) = v141;
          sub_1B2C9F954();
          uint64_t v20 = v138 | v142;
        }
        unint64_t v24 = (unint64_t)&unk_1F0AE1238;
        uint64_t v143 = sub_1B2C387D4();
        if (v228 < 117) {
          goto LABEL_238;
        }
        unint64_t v3 = v143;
        sub_1B2A7C538(0x74uLL, v143 + 16);
        unint64_t v144 = (__n128 *)sub_1B2C9F70C();
        sub_1B2C9F944(v144);
        a1 = sub_1B299D354();
        uint64_t v145 = sub_1B2C387D4();
        static EntityPredicate.attendeeIdentifier.getter();
        uint64_t v146 = (__n128 *)sub_1B2C9F70C();
        sub_1B2C9F944(v146);
        *(void *)(v147 + 32) = v20;
        *(void *)(v145 + 56) = v147;
        *(void *)(a1 + 16) = v145 | 4;
        v144[2].n128_u64[0] = a1 | 0x1000000000000000;
        *(void *)(v3 + 56) = v144;
        uint64_t v6 = v20 & 0xFFFFFFFFFFFFFFBLL;
        sub_1B2C9FD98();
        sub_1B2C9F8E0();
        sub_1B2C9FBA4(v151);
        goto LABEL_183;
      case 9:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 19:
      case 20:
        goto LABEL_209;
      case 10:
        sub_1B2C9FAF8();
        uint64_t v20 = sub_1B299D354();
        uint64_t v25 = sub_1B29A3EB4(&qword_1E9C39A58);
        uint64_t v33 = (__n128 *)sub_1B2C37E84();
        sub_1B2C9F978(v33, (uint64_t)&v227);
        uint64_t v75 = sub_1B299D354();
        uint64_t v76 = sub_1B29A1824();
        sub_1B2C9FBC8(v76);
        static EntityClass.place.getter();
        *(void *)(v75 + 16) = v28;
        v33[2].n128_u64[0] = v75 | 0x4000000000000000;
        uint64_t v77 = sub_1B29A2D00();
        MEMORY[0x1F4188790](v77);
        sub_1B2C9F9FC();
        sub_1B2CA01D8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4, v27, v18);
        sub_1B2C9FF04();
        if (!v27)
        {
          LOWORD(v28) = v78;
          uint64_t v79 = sub_1B2CA1F54(v78);
          uint64_t v81 = v80;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)(v77 + 16) = v79;
          *(void *)(v77 + 24) = v81;
          sub_1B2CA001C();
          uint64_t v82 = swift_bridgeObjectRetain();
          uint64_t v83 = sub_1B2CA69D8(v82);
          swift_bridgeObjectRelease();
          if (v83)
          {
            uint64_t v84 = sub_1B29A2D00();
            uint64_t v85 = sub_1B2CA1F54(v83);
            uint64_t v87 = v86;
            swift_bridgeObjectRelease();
            swift_release();
            *(void *)(v84 + 16) = v85;
            *(void *)(v84 + 24) = v87;
            sub_1B2C9F954();
            uint64_t v18 = v84 | v88;
          }
          else
          {
            sub_1B2C9FE14();
            uint64_t v18 = v20 | v127;
          }
          unint64_t v24 = (unint64_t)&unk_1F0AE1238;
          uint64_t v128 = sub_1B2C387D4();
          if (v228 >= 91)
          {
            unint64_t v3 = v128;
            sub_1B2A7C538(0x5AuLL, v128 + 16);
            a1 = sub_1B2C9F70C();
            sub_1B2C9F944((__n128 *)a1);
            uint64_t v214 = sub_1B299D354();
            uint64_t v129 = (__n128 *)sub_1B2C37E84();
            sub_1B2C9F978(v129, (uint64_t)&v227);
            uint64_t v130 = sub_1B299D354();
            long long v131 = (__n128 *)sub_1B29A1824();
            sub_1B2C9F944(v131);
            static EntityClass.locationRelationshipType.getter();
            *(void *)(v130 + 16) = v131;
            v129[2].n128_u64[0] = v130 | 0x4000000000000000;
            uint64_t v132 = sub_1B2C387D4();
            sub_1B2A7C538(0x33uLL, v132 + 16);
            uint64_t v133 = (__n128 *)sub_1B2C9F70C();
            sub_1B2C9F944(v133);
            *(void *)(v134 + 32) = v18;
            *(void *)(v132 + 56) = v134;
            v129[2].n128_u64[1] = v132 | 4;
            uint64_t v20 = v214;
            *(void *)(v214 + 16) = v129;
            *(void *)(a1 + 32) = v20 | 0x1000000000000004;
            *(void *)(v3 + 56) = a1;
            uint64_t v6 = v18 & 0xFFFFFFFFFFFFFFBLL;
            sub_1B2C9FD98();
            sub_1B2C9F8E0();
            sub_1B2C9FBA4(v150);
            uint64_t v28 = v217;
LABEL_183:
            unint64_t v24 = v216;
            uint64_t v148 = v210;
            *(void *)(v210 + 16) = a1;
            *(void *)(v148 + 8 * v20 + 32) = v3 | 4;
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v20 = (uint64_t)&unk_1B2EC0000;
LABEL_184:
            uint64_t v18 = v211;
LABEL_185:
            uint64_t v25 = v213;
            goto LABEL_186;
          }
          goto LABEL_237;
        }
LABEL_206:
        sub_1B2C37234();
        swift_bridgeObjectRelease();
        sub_1B2C9FCB8();
        sub_1B29D1EF4(v222, v219);
        sub_1B2CA0050();
        sub_1B2CA0268();
        sub_1B2C9FBB0();
        sub_1B2C9FEE8();
        v33[1].n128_u64[0] = 0;
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_208;
      case 17:
        if (v228 < 153)
        {
          __break(1u);
LABEL_232:
          __break(1u);
LABEL_233:
          __break(1u);
        }
        else
        {
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_252;
          }
          if (*((void *)_Records_GDEntityPredicate_records + 457) < v227)
          {
            uint64_t v20 = *((void *)_Records_GDEntityPredicate_records + 458);
            if (v20 < v226)
            {
              sub_1B2C9FCE0();
              if (!_Records_GDEntityPredicate_predicateIds) {
                goto LABEL_256;
              }
              unint64_t v91 = (char *)_Records_GDEntityPredicate_predicateIds + v90;
              unint64_t v3 = v89;
              swift_bridgeObjectRetain();
              sub_1B2E82538();
              if (!_Records_GDEntityPredicate_labels) {
                goto LABEL_257;
              }
              uint64_t v92 = sub_1B29A1824();
              uint64_t v93 = sub_1B2E82538();
              uint64_t v95 = sub_1B2C9FF64(v93, v94);
              MEMORY[0x1F4188790](v95);
              sub_1B299B288();
              sub_1B2CA01D8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4, (uint64_t)v91, v3);
              sub_1B2C9FF04();
              if (!v91)
              {
                a1 = v96;
                sub_1B2C9F88C();
                if (v51)
                {
                  uint64_t v98 = *(void *)(a1 + 32);
                  uint64_t v6 = *(void *)(a1 + 40);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                else if (v97)
                {
                  sub_1B2C9F724();
                  sub_1B29A3EB4(&qword_1EB7E3B30);
                  sub_1B2A20660();
                  sub_1B2C9F7F8();
                  sub_1B2E82518();
                  unint64_t v24 = v216;
                  swift_bridgeObjectRelease();
                  sub_1B2C9F760();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v98 = v230;
                  uint64_t v6 = v231;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v98 = 0;
                  uint64_t v6 = 0xE000000000000000;
                }
                *(void *)(v92 + 56) = v98;
                *(void *)(v92 + 64) = v6;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1B2C9FC90();
                  uint64_t v205 = v152;
                }
                uint64_t v20 = 0x1B2EC0000;
                sub_1B2C9FB50();
                if (v61)
                {
                  sub_1B2C9FBF0();
                  uint64_t v205 = v153;
                }
                uint64_t v135 = v92 | 0x6000000000000000;
LABEL_176:
                sub_1B2CA018C(v135);
                swift_bridgeObjectRelease();
                goto LABEL_184;
              }
LABEL_207:
              swift_bridgeObjectRelease();
              sub_1B2C9FCB8();
              sub_1B2C9FF10();
              sub_1B2CA0050();
              sub_1B2CA0268();
              sub_1B2C37234();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_208:
              swift_deallocUninitializedObject();
              return;
            }
LABEL_235:
            __break(1u);
LABEL_236:
            __break(1u);
LABEL_237:
            __break(1u);
LABEL_238:
            __break(1u);
            goto LABEL_239;
          }
        }
        __break(1u);
        goto LABEL_235;
      case 18:
        if (v228 < 154) {
          goto LABEL_232;
        }
        if (!_Records_GDEntityPredicate_records) {
          goto LABEL_253;
        }
        if (*((void *)_Records_GDEntityPredicate_records + 460) >= v227) {
          goto LABEL_233;
        }
        uint64_t v20 = *((void *)_Records_GDEntityPredicate_records + 461);
        if (v20 >= v226) {
          goto LABEL_236;
        }
        sub_1B2C9FCE0();
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_254;
        }
        uint64_t v101 = (char *)_Records_GDEntityPredicate_predicateIds + v100;
        unint64_t v3 = v99;
        swift_bridgeObjectRetain();
        sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_255;
        }
        uint64_t v102 = sub_1B29A1824();
        uint64_t v103 = sub_1B2E82538();
        uint64_t v105 = sub_1B2C9FF64(v103, v104);
        MEMORY[0x1F4188790](v105);
        sub_1B299B288();
        sub_1B2CA01D8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4, (uint64_t)v101, v3);
        sub_1B2C9FF04();
        if (v101) {
          goto LABEL_207;
        }
        a1 = v106;
        sub_1B2C9F88C();
        if (v51)
        {
          uint64_t v108 = *(void *)(a1 + 32);
          uint64_t v6 = *(void *)(a1 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else if (v107)
        {
          sub_1B2C9F724();
          sub_1B29A3EB4(&qword_1EB7E3B30);
          sub_1B2A20660();
          sub_1B2C9F7F8();
          sub_1B2E82518();
          unint64_t v24 = v216;
          swift_bridgeObjectRelease();
          sub_1B2C9F760();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v108 = v230;
          uint64_t v6 = v231;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v108 = 0;
          uint64_t v6 = 0xE000000000000000;
        }
        *(void *)(v102 + 56) = v108;
        *(void *)(v102 + 64) = v6;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2C9FC90();
          uint64_t v205 = v154;
        }
        uint64_t v20 = 0x1B2EC0000;
        sub_1B2C9FB50();
        if (v61)
        {
          sub_1B2C9FBF0();
          uint64_t v205 = v155;
        }
        uint64_t v135 = v102 | 0x6000000000000004;
        goto LABEL_176;
      case 21:
        goto LABEL_187;
      case 22:
        goto LABEL_74;
      case 23:
        sub_1B2C9F864();
        unint64_t v67 = v66;
        uint64_t v68 = sub_1B2E837A8();
        unint64_t v29 = v67;
        uint64_t v6 = v68;
LABEL_74:
        unint64_t v212 = v29;
        uint64_t v213 = v25;
        uint64_t v211 = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v69 = *(void *)(v215 + 16);
        if (v69)
        {
          uint64_t v70 = v201;
          uint64_t v71 = v215 + ((*(unsigned __int8 *)(v201 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80));
          swift_bridgeObjectRetain();
          uint64_t v72 = *(void *)(v70 + 72);
          unint64_t v3 = MEMORY[0x1E4FBC860];
          do
          {
            sub_1B2C9F51C(v71, v15);
            sub_1B2C9F51C(v15, v24);
            if (swift_getEnumCaseMultiPayload() == 6)
            {
              uint64_t v25 = *(unsigned __int8 *)v24;
              sub_1B2C9F368(v15);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1B299B8BC();
                sub_1B29B93E4();
                unint64_t v3 = v73;
              }
              uint64_t v18 = *(void *)(v3 + 16);
              if ((unint64_t)v18 >= *(void *)(v3 + 24) >> 1)
              {
                sub_1B29B93E4();
                unint64_t v3 = v74;
              }
              *(void *)(v3 + 16) = v18 + 1;
              *(unsigned char *)(v3 + v18 + 32) = v25;
              unint64_t v24 = v216;
            }
            else
            {
              sub_1B2C9F368(v24);
              sub_1B2C9F368(v15);
            }
            v71 += v72;
            --v69;
          }
          while (v69);
          swift_bridgeObjectRelease_n();
          uint64_t v28 = v217;
        }
        else
        {
          swift_bridgeObjectRelease();
          unint64_t v3 = MEMORY[0x1E4FBC860];
        }
        a1 = *(void *)(v3 + 16);
        if (!a1)
        {
          swift_bridgeObjectRelease();
          uint64_t v25 = v213;
          uint64_t v18 = v211;
          int v199 = v6;
          uint64_t v20 = 0x1B2EC0000;
          goto LABEL_186;
        }
        uint64_t v20 = 0;
LABEL_111:
        unint64_t v24 = *(unsigned __int8 *)(v3 + v20 + 32);
        sub_1B29D1EF4(v223, v224);
        sub_1B2C9FF10();
        if (v24 == 18)
        {
          if (v228 >= 146)
          {
            if (!_Records_GDEntityPredicate_records) {
              goto LABEL_241;
            }
            sub_1B2CA0248();
            if (v53 == v110) {
              goto LABEL_212;
            }
            uint64_t v18 = *(void *)(v118 + 3496);
            if (v18 >= v226) {
              goto LABEL_214;
            }
            if (!_Records_GDEntityPredicate_predicateIds) {
              goto LABEL_243;
            }
            uint64_t v28 = *(unsigned __int16 *)(v118 + 3480);
            uint64_t v222 = sub_1B2E82538();
            uint64_t v219 = v119;
            if (!_Records_GDEntityPredicate_labels) {
              goto LABEL_244;
            }
            uint64_t v120 = sub_1B2E82538();
            if ((unint64_t)v228 < 0x9A) {
              goto LABEL_217;
            }
            uint64_t v220 = v120;
            uint64_t v221 = v121;
            if (!_Records_GDEntityPredicate_records) {
              goto LABEL_247;
            }
            uint64_t v25 = *((void *)_Records_GDEntityPredicate_records + 461);
            sub_1B2CA0248();
            if (v53 == v110 || v25 >= v226) {
              goto LABEL_218;
            }
            if (!_Records_GDEntityPredicate_predicateIds) {
              goto LABEL_250;
            }
            uint64_t v18 = *(unsigned __int16 *)(v122 + 3672);
            uint64_t v116 = sub_1B2E82538();
            if (!_Records_GDEntityPredicate_labels) {
              goto LABEL_251;
            }
            goto LABEL_146;
          }
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          __break(1u);
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          __break(1u);
LABEL_218:
          __break(1u);
LABEL_219:
          __break(1u);
LABEL_220:
          __break(1u);
LABEL_221:
          __break(1u);
LABEL_222:
          __break(1u);
LABEL_223:
          __break(1u);
LABEL_224:
          __break(1u);
LABEL_225:
          __break(1u);
LABEL_226:
          __break(1u);
LABEL_227:
          __break(1u);
LABEL_228:
          __break(1u);
LABEL_229:
          __break(1u);
LABEL_230:
          sub_1B2C9F8E0();
          sub_1B2C9FBA4(v189);
          continue;
        }
        if (v24 == 17)
        {
          if (v228 < 146) {
            goto LABEL_211;
          }
          if (!_Records_GDEntityPredicate_records)
          {
            __break(1u);
LABEL_241:
            __break(1u);
LABEL_242:
            __break(1u);
LABEL_243:
            __break(1u);
LABEL_244:
            __break(1u);
LABEL_245:
            __break(1u);
LABEL_246:
            __break(1u);
LABEL_247:
            __break(1u);
LABEL_248:
            __break(1u);
LABEL_249:
            __break(1u);
LABEL_250:
            __break(1u);
LABEL_251:
            __break(1u);
LABEL_252:
            __break(1u);
LABEL_253:
            __break(1u);
LABEL_254:
            __break(1u);
LABEL_255:
            __break(1u);
LABEL_256:
            __break(1u);
LABEL_257:
            __break(1u);
LABEL_258:
            swift_release();
            __break(1u);
            JUMPOUT(0x1B2C978D4);
          }
          sub_1B2CA0248();
          if (v53 == v110) {
            goto LABEL_213;
          }
          uint64_t v18 = *(void *)(v109 + 3496);
          if (v18 >= v226) {
            goto LABEL_215;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_242;
          }
          uint64_t v28 = *(unsigned __int16 *)(v109 + 3480);
          uint64_t v222 = sub_1B2E82538();
          uint64_t v219 = v111;
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_245;
          }
          uint64_t v112 = sub_1B2E82538();
          if ((unint64_t)v228 < 0x99) {
            goto LABEL_216;
          }
          uint64_t v220 = v112;
          uint64_t v221 = v113;
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_246;
          }
          uint64_t v25 = *((void *)_Records_GDEntityPredicate_records + 458);
          sub_1B2CA0248();
          if (v53 == v110 || v25 >= v226) {
            goto LABEL_219;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_249;
          }
          uint64_t v18 = *(unsigned __int16 *)(v114 + 3648);
          uint64_t v116 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_248;
          }
LABEL_146:
          uint64_t v223 = v116;
          uint64_t v224 = v117;
          int v225 = v18;
          ++v20;
          uint64_t v125 = sub_1B2E82538();
          if (a1 == v20)
          {
            uint64_t v18 = v124;
            uint64_t v25 = v125;
            swift_bridgeObjectRelease();
            int v199 = v6;
            uint64_t v20 = 0x1B2EC0000;
            unint64_t v24 = v216;
LABEL_186:
            uint64_t v27 = v207;
            unint64_t v29 = v212;
LABEL_187:
            if (++v29 == v208)
            {
              unint64_t v24 = v25;
              swift_release();
              uint64_t v25 = v18;
              uint64_t v18 = v219;
              uint64_t v159 = v205;
              goto LABEL_191;
            }
            goto LABEL_5;
          }
          goto LABEL_111;
        }
        sub_1B2CA0050();
        sub_1B2CA0268();
        sub_1B2C37234();
        swift_bridgeObjectRelease();
        sub_1B2C9FD58();
        sub_1B2E831F8();
        sub_1B2E82518();
        LOBYTE(v233) = v24;
        sub_1B2E83388();
        sub_1B2E82518();
        uint64_t v156 = v230;
        unint64_t v157 = v231;
        sub_1B2C9F3CC();
        sub_1B299E4D4();
        *uint64_t v158 = v156;
        v158[1] = v157;
        swift_willThrow();
        return;
      default:
        if (a1)
        {
LABEL_209:
          unsigned __int8 v184 = v30[16];
          unint64_t v185 = v31;
          swift_bridgeObjectRetain();
          swift_release();
          sub_1B29D1EF4(v223, v224);
          sub_1B2C9FF10();
          sub_1B2CA0050();
          sub_1B2CA0268();
          sub_1B2C9FD58();
          sub_1B2E831F8();
          sub_1B29A2FC8();
          LOBYTE(v230) = a1;
          unint64_t v231 = v185;
          unsigned __int8 v232 = v184;
          sub_1B2C9FB64();
          sub_1B2E82518();
          uint64_t v186 = v233;
          unint64_t v187 = v234;
          sub_1B2C9F3CC();
          sub_1B299E4D4();
          *uint64_t v188 = v186;
          v188[1] = v187;
          swift_willThrow();
          swift_bridgeObjectRelease();
          return;
        }
        unint64_t v212 = v29;
        uint64_t v213 = v25;
        uint64_t v25 = v18;
        uint64_t v20 = *(void *)(v31 + 16);
        if (v20)
        {
          sub_1B2C8398C();
          unint64_t v3 = v45 + v46;
          uint64_t v214 = *(void *)(v47 + 72);
          swift_bridgeObjectRetain_n();
          unint64_t v24 = MEMORY[0x1E4FBC860];
          do
          {
            uint64_t v6 = (uint64_t)v218;
            sub_1B2C9F51C(v3, (uint64_t)v218);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                sub_1B29A3004();
                if (v51) {
                  goto LABEL_223;
                }
                if (v57 <= -9.22337204e18) {
                  goto LABEL_226;
                }
                sub_1B299DCC8();
                if (!v53) {
                  goto LABEL_229;
                }
                goto LABEL_33;
              case 2u:
                uint64_t v6 = v203;
                (*v198)(v203, v218, v204);
                sub_1B2E805C8();
                sub_1B29A3004();
                if (v51) {
                  goto LABEL_221;
                }
                if (v50 <= -9.22337204e18) {
                  goto LABEL_224;
                }
                sub_1B299DCC8();
                if (!v53) {
                  goto LABEL_227;
                }
                sub_1B2C9FA3C(v52);
                uint64_t v48 = sub_1B2E83748();
                a1 = v54;
                (*v197)(v203, v204);
                break;
              case 3u:
                sub_1B29A3004();
                if (v51) {
                  goto LABEL_222;
                }
                if (v55 <= -9.22337204e18) {
                  goto LABEL_225;
                }
                sub_1B299DCC8();
                if (!v53) {
                  goto LABEL_228;
                }
LABEL_33:
                sub_1B2C9FA3C(v56);
                uint64_t v48 = sub_1B2E83748();
                a1 = v58;
                break;
              case 4u:
                uint64_t v49 = *v218;
                if ((*v218 & 0x80000000000000) != 0) {
                  sub_1B2CA0030();
                }
                sub_1B2C9FE30(v49);
                goto LABEL_39;
              case 5u:
                uint64_t v59 = *v218;
                sub_1B2C9FD68();
                sub_1B2E82298();
                uint64_t v233 = v59;
LABEL_39:
                sub_1B2E83748();
                uint64_t v6 = (uint64_t)&v230;
                sub_1B2E82518();
                swift_bridgeObjectRelease();
                goto LABEL_40;
              case 6u:
                a1 = 0xE400000000000000;
                uint64_t v48 = 1701667182;
                switch(*(unsigned char *)v218)
                {
                  case 1:
                    uint64_t v48 = 0x6D614E7473726966;
                    goto LABEL_65;
                  case 2:
                    a1 = 0xE800000000000000;
                    uint64_t v48 = 0x656D614E7473616CLL;
                    goto LABEL_41;
                  case 3:
                    a1 = 0xE700000000000000;
                    uint64_t v48 = 0x73736572646461;
                    goto LABEL_41;
                  case 4:
                    a1 = 0xE800000000000000;
                    uint64_t v48 = 0x7961646874726962;
                    goto LABEL_41;
                  case 5:
                    a1 = 0xEB00000000726562;
                    uint64_t v48 = 0x6D754E656E6F6870;
                    goto LABEL_41;
                  case 6:
                    a1 = 0xEC00000073736572;
                    uint64_t v48 = 0x6464416C69616D65;
                    goto LABEL_41;
                  case 7:
                    a1 = 0xEC00000070696873;
                    unsigned int v63 = 1634493810;
                    goto LABEL_71;
                  case 8:
                    a1 = 0xE800000000000000;
                    uint64_t v48 = 0x6565646E65747461;
                    goto LABEL_41;
                  case 9:
                    a1 = 0xEB000000006F666ELL;
                    uint64_t v48 = 0x49746361746E6F63;
                    goto LABEL_41;
                  case 0xA:
                    a1 = 0xE800000000000000;
                    unsigned int v63 = 1633906540;
                    goto LABEL_71;
                  case 0xB:
                    uint64_t v48 = 1836020326;
                    goto LABEL_41;
                  case 0xC:
                    a1 = 0xE200000000000000;
                    uint64_t v48 = 28532;
                    goto LABEL_41;
                  case 0xD:
                    a1 = 0x80000001B2E95700;
                    uint64_t v48 = 0xD000000000000010;
                    goto LABEL_41;
                  case 0xE:
                    a1 = 0xE800000000000000;
                    uint64_t v48 = 0x7473657265746E69;
                    goto LABEL_41;
                  case 0xF:
                    a1 = 0xE600000000000000;
                    uint64_t v48 = 0x6E6F73726570;
                    goto LABEL_41;
                  case 0x10:
                    a1 = 0xEB0000000079726FLL;
                    uint64_t v48 = 0x6765746143707061;
                    goto LABEL_41;
                  case 0x11:
                    uint64_t v48 = 0x7461447472617473;
LABEL_65:
                    a1 = 0xE900000000000065;
                    goto LABEL_41;
                  case 0x12:
                    a1 = 0xE700000000000000;
                    uint64_t v48 = 0x65746144646E65;
                    goto LABEL_41;
                  case 0x13:
                    a1 = 0xE800000000000000;
                    unsigned int v63 = 1634891108;
LABEL_71:
                    uint64_t v48 = v63 | 0x6E6F697400000000;
                    break;
                  case 0x14:
                    uint64_t v48 = 1701869940;
                    break;
                  case 0x15:
                    a1 = 0xE500000000000000;
                    uint64_t v48 = 0x74696D696CLL;
                    break;
                  case 0x16:
                    a1 = 0xE700000000000000;
                    uint64_t v48 = 0x63734174726F73;
                    break;
                  case 0x17:
                    a1 = 0xE800000000000000;
                    uint64_t v48 = 0x6373654474726F73;
                    break;
                  case 0x18:
                    a1 = 0xE600000000000000;
                    uint64_t v48 = 0x656372756F73;
                    break;
                  case 0x19:
                    a1 = 0xE500000000000000;
                    uint64_t v48 = 0x65756C6176;
                    break;
                  default:
                    goto LABEL_41;
                }
                break;
              case 7u:
                uint64_t v48 = *v218;
                a1 = v218[1];
                break;
              default:
                uint64_t v48 = *v218;
                a1 = v218[1];
                uint64_t v230 = *v218;
                unint64_t v231 = a1;
                uint64_t v233 = 32;
                unint64_t v234 = 0xE100000000000000;
                sub_1B29C3640();
                uint64_t v6 = (uint64_t)&v230;
                if ((sub_1B2E83038() & 1) == 0) {
                  break;
                }
                uint64_t v230 = 39;
                unint64_t v231 = 0xE100000000000000;
                sub_1B2E82518();
                swift_bridgeObjectRelease();
                sub_1B2E82518();
LABEL_40:
                uint64_t v48 = v230;
                a1 = v231;
                break;
            }
LABEL_41:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B299B8BC();
              sub_1B29B7048();
              unint64_t v24 = v64;
            }
            uint64_t v18 = *(void *)(v24 + 16);
            sub_1B2CA01AC();
            if (v61)
            {
              sub_1B2C9FE6C(v60);
              sub_1B29B7048();
              unint64_t v24 = v65;
            }
            *(void *)(v24 + 16) = v6;
            unint64_t v62 = v24 + 16 * v18;
            *(void *)(v62 + 32) = v48;
            *(void *)(v62 + 40) = a1;
            v3 += v214;
            --v20;
            uint64_t v28 = v217;
          }
          while (v20);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain_n();
          unint64_t v24 = MEMORY[0x1E4FBC860];
        }
        uint64_t v126 = *(void *)(v24 + 16);
        uint64_t v20 = 0x1B2EC0000;
        if (v126 == 1)
        {
          a1 = *(void *)(v24 + 32);
          uint64_t v6 = *(void *)(v24 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else if (v126)
        {
          sub_1B2C9FAE4();
          uint64_t v233 = v24;
          sub_1B29A3EB4(&qword_1EB7E3B30);
          sub_1B2A20660();
          sub_1B2E822D8();
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          sub_1B2C9F760();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a1 = v230;
          uint64_t v6 = v231;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a1 = 0;
          uint64_t v6 = 0xE000000000000000;
        }
        unint64_t v3 = sub_1B29A2D00();
        *(void *)(v3 + 16) = a1;
        *(void *)(v3 + 24) = v6;
        sub_1B2C9FB50();
        unint64_t v24 = v216;
        if (v61)
        {
          sub_1B2C9F8E0();
          sub_1B2C9FBA4(v149);
        }
        sub_1B2CA018C(v3 | 0x5000000000000000);
        swift_bridgeObjectRelease();
        uint64_t v18 = v25;
        goto LABEL_185;
    }
  }
}

void sub_1B2C9799C(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v68[0] = a2;
  type metadata accessor for KGQ.Value();
  sub_1B299D278();
  uint64_t v74 = v5;
  uint64_t v75 = v4;
  MEMORY[0x1F4188790](v4);
  sub_1B299B6D0();
  uint64_t v73 = v6;
  uint64_t v7 = sub_1B299D354();
  uint64_t v76 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
  uint64_t v8 = (__n128 *)sub_1B29A1824();
  long long v83 = xmmword_1B2EC00A0;
  sub_1B2A6BC14(v8, (__n128)xmmword_1B2EC00A0);
  static EntityClass.addressRelationshipType.getter();
  *(void *)(v7 + 16) = v8;
  sub_1B2C9F7DC();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t v12 = v11 + 1;
  if ((unint64_t)v11 >= *(void *)(v9 + 24) >> 1)
  {
LABEL_55:
    sub_1B2CA0120();
    uint64_t v10 = v67;
  }
  *(void *)(v10 + 16) = v12;
  *(void *)(v10 + 8 * v11 + 32) = v7 | 0x4000000000000000;
  uint64_t v86 = v10;
  unint64_t v87 = a1;
  swift_bridgeObjectRetain();
  sub_1B2C9FD80();
  if (v2) {
    goto LABEL_62;
  }
  uint64_t v13 = *(void *)(v87 + 16);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    swift_release();
LABEL_46:
    sub_1B2C9F3CC();
    sub_1B299E4D4();
    sub_1B2C9FEC0(v60, 0xD000000000000021);
    swift_willThrow();
    return;
  }
  v68[1] = v87;
  uint64_t v14 = (unsigned char *)(v87 + 48);
  uint64_t v79 = 233;
  uint64_t v78 = 2674;
  uint64_t v85 = 0xF000000000000007;
  uint64_t v77 = 3558;
  uint64_t v72 = 162;
  uint64_t v70 = 1336;
  uint64_t v69 = 2889;
  long long v71 = xmmword_1B2EBFA40;
  while (1)
  {
    uint64_t v12 = *((void *)v14 - 1);
    uint64_t v7 = *(v14 - 16);
    if (!*(v14 - 16)) {
      break;
    }
    if (v7 != 21)
    {
      if (v7 != 15)
      {
        char v63 = *v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1B299F7F0();
        sub_1B2C9FD58();
        sub_1B2E831F8();
        sub_1B29A2FC8();
        LOBYTE(v87) = v7;
        unint64_t v88 = v12;
        char v89 = v63;
        sub_1B2C9FB64();
        sub_1B299B7D8();
        sub_1B2E82518();
        uint64_t v64 = v90;
        uint64_t v65 = v91;
        sub_1B2C9F3CC();
        sub_1B299E4D4();
        *unint64_t v66 = v64;
        v66[1] = v65;
        swift_willThrow();
        sub_1B2C9F418(v85);
        swift_bridgeObjectRelease();
        return;
      }
      if (*(void *)(v12 + 16))
      {
        uint64_t v7 = v73;
        uint64_t v15 = sub_1B2C9F9AC(v74);
        sub_1B2C9F51C(v15, v7);
        if (swift_getEnumCaseMultiPayload() == 7)
        {
          sub_1B2C9F418(v85);
          a1 = *(void *)v7;
          uint64_t v16 = *(void *)(v7 + 8);
          uint64_t v17 = sub_1B29A2D00();
          *(void *)(v17 + 16) = a1;
          *(void *)(v17 + 24) = v16;
          uint64_t v18 = v17 | 0x4000000000000004;
LABEL_40:
          uint64_t v85 = v18;
          goto LABEL_41;
        }
        swift_bridgeObjectRetain();
        sub_1B2C9F368(v7);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_1B29A3EB4(&qword_1E9C39A58);
      uint64_t v84 = sub_1B2C37E84();
      *(_OWORD *)(v84 + 16) = v71;
      uint64_t v38 = (__n128 *)sub_1B29A1824();
      sub_1B2C9FF98(v38);
      if (v72 < 27) {
        goto LABEL_52;
      }
      if (!_Records_GDEntityClass_records) {
        goto LABEL_59;
      }
      sub_1B2C9FC5C();
      if (v41 == v42) {
        goto LABEL_53;
      }
      uint64_t v11 = *(void *)(v40 + 640);
      if (v11 >= v69) {
        goto LABEL_54;
      }
      if (!_Records_GDEntityClass_classIds[0]) {
        goto LABEL_61;
      }
      uint64_t v43 = v39;
      uint64_t v92 = v13;
      uint64_t v81 = v12;
      char v44 = *(unsigned char *)(v40 + 624);
      uint64_t v45 = sub_1B2E82538();
      if (!_Records_GDEntityClass_labels) {
        goto LABEL_60;
      }
      uint64_t v47 = v45;
      uint64_t v48 = v46;
      uint64_t v80 = sub_1B299D354();
      uint64_t v49 = sub_1B299D354();
      uint64_t v50 = sub_1B2E82538();
      *(void *)(v43 + 32) = v47;
      *(void *)(v43 + 40) = v48;
      *(void *)(v43 + 48) = v50;
      *(void *)(v43 + 56) = v51;
      *(unsigned char *)(v43 + 64) = v44;
      *(void *)(v49 + 16) = v43;
      *(void *)(v84 + 32) = v49 | 0x4000000000000000;
      uint64_t v52 = sub_1B29A2D00();
      MEMORY[0x1F4188790](v52);
      uint64_t v11 = v81;
      v68[-2] = v82;
      swift_bridgeObjectRetain();
      uint64_t v2 = 0;
      uint64_t v53 = sub_1B2DF42C8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4, (uint64_t)&v68[-4], v11);
      sub_1B2C9F88C();
      if (v34)
      {
        unint64_t v55 = *(void *)(v53 + 32);
        unint64_t v56 = *(void *)(v53 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (v54)
      {
        sub_1B2C9FAE4();
        uint64_t v90 = v53;
        sub_1B29A3EB4(&qword_1EB7E3B30);
        sub_1B2A20660();
        sub_1B2C9F7F8();
        sub_1B2E82518();
        uint64_t v11 = v81;
        swift_bridgeObjectRelease();
        sub_1B2C9F760();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v55 = v87;
        unint64_t v56 = v88;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v55 = 0;
        unint64_t v56 = 0xE000000000000000;
      }
      uint64_t v13 = v92;
      *(void *)(v52 + 16) = v55;
      *(void *)(v52 + 24) = v56;
      a1 = v84;
      uint64_t v57 = v85;
      *(void *)(v84 + 40) = v52 | 0x5000000000000000;
      sub_1B2C9F418(v57);
      swift_bridgeObjectRelease();
      *(void *)(v80 + 16) = a1;
      sub_1B2C9FE20();
      goto LABEL_40;
    }
LABEL_41:
    v14 += 24;
    if (!--v13)
    {
      sub_1B299F7F0();
      uint64_t v59 = v85;
      if ((~v85 & 0xF000000000000007) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      uint64_t v61 = sub_1B29A2D00();
      uint64_t v62 = v86;
      *(void *)(v61 + 16) = v59;
      *(void *)(v61 + 24) = v62;
      sub_1B2CA01A0(v61 | 0x2000000000000000);
      return;
    }
  }
  sub_1B29A3EB4(&qword_1EB7E34A8);
  uint64_t v19 = (__n128 *)sub_1B29A1824();
  sub_1B2C9FF98(v19);
  if (v79 < 37)
  {
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (_Records_GDEntityPredicate_records)
  {
    if (*((void *)_Records_GDEntityPredicate_records + 109) >= v78) {
      goto LABEL_50;
    }
    if (*((void *)_Records_GDEntityPredicate_records + 110) >= v77) {
      goto LABEL_51;
    }
    uint64_t v92 = v13;
    if (!_Records_GDEntityPredicate_predicateIds) {
      goto LABEL_57;
    }
    uint64_t v21 = v20;
    uint64_t v84 = (uint64_t)v14;
    __int16 v22 = _Records_GDEntityPredicate_records[432];
    uint64_t v23 = v12;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1B2E82538();
    if (!_Records_GDEntityPredicate_labels) {
      goto LABEL_58;
    }
    uint64_t v26 = v24;
    uint64_t v27 = v25;
    uint64_t v28 = sub_1B2C9F70C();
    uint64_t v29 = sub_1B2E82538();
    *(void *)(v21 + 32) = v26;
    *(void *)(v21 + 40) = v27;
    *(void *)(v21 + 48) = v29;
    *(void *)(v21 + 56) = v30;
    *(_WORD *)(v21 + 64) = v22;
    uint64_t v31 = v28;
    *(void *)(v28 + 16) = v21;
    MEMORY[0x1F4188790](v29);
    v68[-2] = v82;
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    uint64_t v32 = sub_1B2DF42C8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4, (uint64_t)&v68[-4], v23);
    sub_1B2C9F88C();
    if (v34)
    {
      uint64_t v11 = *(void *)(v32 + 32);
      a1 = *(void *)(v32 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (unsigned char *)v84;
    }
    else
    {
      uint64_t v14 = (unsigned char *)v84;
      if (v33)
      {
        sub_1B2C9FED0();
        sub_1B29A3EB4(&qword_1EB7E3B30);
        sub_1B2A20660();
        sub_1B2C9FC34();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2C9F760();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = v87;
        a1 = v88;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = 0;
        a1 = 0xE000000000000000;
      }
    }
    *(void *)(v31 + 24) = v11;
    *(void *)(v31 + 32) = a1;
    uint64_t v35 = *(void *)(v86 + 16);
    sub_1B2CA01AC();
    if (v37)
    {
      sub_1B2CA0140();
      uint64_t v36 = v58;
    }
    *(void *)(v36 + 16) = a1;
    uint64_t v86 = v36;
    *(void *)(v36 + 8 * v35 + 32) = v31 | 0x5000000000000004;
    swift_bridgeObjectRelease();
    uint64_t v13 = v92;
    goto LABEL_41;
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  swift_release();
  __break(1u);
}

void sub_1B2C9825C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v147 = a2;
  uint64_t v159 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299B6D0();
  *(void *)&long long v158 = v7;
  uint64_t v161 = type metadata accessor for KGQ.Value();
  sub_1B299D278();
  uint64_t v149 = v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (void *)((char *)v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_28:
    uint64_t v15 = sub_1B299D354();
    sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
    uint64_t v16 = (__n128 *)sub_1B29A1824();
    long long v158 = xmmword_1B2EC00A0;
    sub_1B2A6BC14(v16, (__n128)xmmword_1B2EC00A0);
    static EntityClass.place.getter();
    *(void *)(v15 + 16) = v16;
    sub_1B2C9F7DC();
    uint64_t v18 = v17;
    unint64_t v19 = *(void *)(v17 + 16);
    uint64_t v20 = (void *)(v19 + 1);
    if (v19 < *(void *)(v17 + 24) >> 1) {
      goto LABEL_29;
    }
    goto LABEL_163;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = 32;
  while (2)
  {
    switch(*(unsigned char *)(a1 + v13))
    {
      case 1:
        sub_1B2C9FA74();
        goto LABEL_25;
      case 2:
        sub_1B29A3014();
        goto LABEL_25;
      case 3:
        sub_1B2C9FA60();
        goto LABEL_25;
      case 4:
        sub_1B299DCD8();
        goto LABEL_25;
      case 5:
        sub_1B2C9FA4C();
        goto LABEL_25;
      case 6:
        sub_1B2C9FA28();
        goto LABEL_25;
      case 7:
        sub_1B2C9F9E8();
        goto LABEL_25;
      case 8:
        sub_1B2C9F9D4();
        goto LABEL_25;
      case 9:
        sub_1B2ABB5BC();
        goto LABEL_25;
      case 0xD:
        sub_1B29B1E20();
        goto LABEL_25;
      case 0xE:
        sub_1B29A1E9C();
        goto LABEL_25;
      case 0xF:
        swift_bridgeObjectRelease();
        goto LABEL_40;
      case 0x10:
        sub_1B2C9F9C0();
        goto LABEL_25;
      case 0x11:
        sub_1B299E934();
        goto LABEL_25;
      case 0x12:
        sub_1B2C9F998();
        goto LABEL_25;
      case 0x16:
        sub_1B2C9F984();
        goto LABEL_25;
      case 0x17:
        sub_1B2C9F864();
        goto LABEL_25;
      case 0x18:
        sub_1B2C9FD30();
        goto LABEL_25;
      case 0x19:
        sub_1B2C9FD20();
        goto LABEL_25;
      default:
LABEL_25:
        char v14 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
        {
          v13 += 24;
          if (!--v12)
          {
            swift_bridgeObjectRelease();
            goto LABEL_28;
          }
          continue;
        }
LABEL_40:
        swift_bridgeObjectRelease();
        uint64_t v53 = sub_1B299D354();
        v142[2] = sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
        uint64_t v54 = sub_1B29A1824();
        __n128 v148 = (__n128)xmmword_1B2EC00A0;
        *(_OWORD *)(v54 + 16) = xmmword_1B2EC00A0;
        static EntityClass.locationRelationshipType.getter();
        *(void *)(v53 + 16) = v54;
        sub_1B2C9F7DC();
        uint64_t v56 = v55;
        unint64_t v57 = *(void *)(v55 + 16);
        uint64_t v15 = v57 + 1;
        if (v57 >= *(void *)(v55 + 24) >> 1)
        {
          sub_1B2CA0120();
          uint64_t v56 = v141;
        }
        *(void *)(v56 + 16) = v15;
        uint64_t v152 = v56;
        sub_1B2C9FB34(v53 | 0x4000000000000000);
        sub_1B2C9FD80();
        if (v2) {
          goto LABEL_168;
        }
        uint64_t v58 = *(void *)(v162 + 16);
        if (!v58)
        {
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_146;
        }
        uint64_t v160 = 0;
        uint64_t v145 = 0;
        unint64_t v59 = 0;
        uint64_t v60 = 0;
        v142[1] = v162;
        uint64_t v156 = v162 + 32;
        uint64_t v146 = 233;
        uint64_t v155 = v5 + 32;
        *(void *)&long long v154 = v5 + 8;
        uint64_t v144 = 2674;
        uint64_t v143 = 3558;
        uint64_t v150 = v58;
        while (2)
        {
          uint64_t v61 = (unsigned __int8 *)(v156 + 24 * v60);
          uint64_t v20 = (void *)*((void *)v61 + 1);
          int v62 = *v61;
          if (*v61)
          {
            if (v62 == 21) {
              goto LABEL_134;
            }
            if (v62 != 15)
            {
              unsigned __int8 v135 = v61[16];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              sub_1B2C9FFDC();
              sub_1B29A2FC8();
              LOBYTE(v162) = v62;
              unint64_t v163 = (unint64_t)v20;
              unsigned __int8 v164 = v135;
              sub_1B2C9FB64();
              sub_1B2E82518();
              uint64_t v136 = v165;
              unint64_t v137 = v166;
              sub_1B2C9F3CC();
              uint64_t v138 = sub_1B299E4D4();
              *uint64_t v139 = v136;
              v139[1] = v137;
              uint64_t v160 = v138;
              swift_willThrow();
LABEL_148:
              swift_bridgeObjectRelease();
              return;
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v15 = v20[2];
            v153.n128_u64[0] = (unint64_t)v20;
            if (v15)
            {
              uint64_t v157 = v60;
              sub_1B2C8398C();
              uint64_t v64 = (uint64_t)v20 + v63;
              uint64_t v66 = *(void *)(v65 + 72);
              swift_bridgeObjectRetain_n();
              uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
              while (1)
              {
                sub_1B2C9F51C(v64, (uint64_t)v11);
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    sub_1B29A3004();
                    if (v71)
                    {
                      __break(1u);
LABEL_152:
                      __break(1u);
LABEL_153:
                      __break(1u);
LABEL_154:
                      __break(1u);
LABEL_155:
                      __break(1u);
LABEL_156:
                      __break(1u);
LABEL_157:
                      __break(1u);
LABEL_158:
                      __break(1u);
LABEL_159:
                      __break(1u);
LABEL_160:
                      __break(1u);
LABEL_161:
                      __break(1u);
                      goto LABEL_162;
                    }
                    if (v77 <= -9.22337204e18) {
                      goto LABEL_155;
                    }
                    sub_1B299DCC8();
                    if (!v73) {
                      goto LABEL_159;
                    }
LABEL_69:
                    sub_1B2C9FA3C(v76);
                    uint64_t v68 = sub_1B2E83748();
                    unint64_t v67 = v78;
LABEL_77:
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      sub_1B2C9FDD4();
                      sub_1B29B7048();
                      uint64_t v20 = v86;
                    }
                    unint64_t v81 = v20[2];
                    unint64_t v80 = v20[3];
                    if (v81 >= v80 >> 1)
                    {
                      sub_1B2C9FE84(v80);
                      sub_1B29B7048();
                      uint64_t v20 = v87;
                    }
                    v20[2] = v81 + 1;
                    uint64_t v82 = &v20[2 * v81];
                    v82[4] = v68;
                    v82[5] = v67;
                    v64 += v66;
                    if (!--v15)
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v58 = v150;
                      uint64_t v60 = v157;
                      goto LABEL_123;
                    }
                    break;
                  case 2u:
                    (*(void (**)(void, uint64_t *, uint64_t))v155)(v158, v11, v159);
                    sub_1B2E805C8();
                    sub_1B29A3004();
                    if (v71) {
                      goto LABEL_152;
                    }
                    if (v70 <= -9.22337204e18) {
                      goto LABEL_156;
                    }
                    sub_1B299DCC8();
                    if (!v73) {
                      goto LABEL_157;
                    }
                    sub_1B2C9FA3C(v72);
                    uint64_t v68 = sub_1B2E83748();
                    unint64_t v67 = v74;
                    (*(void (**)(void, uint64_t))v154)(v158, v159);
                    goto LABEL_77;
                  case 3u:
                    sub_1B29A3004();
                    if (v71) {
                      goto LABEL_153;
                    }
                    if (v75 <= -9.22337204e18) {
                      goto LABEL_154;
                    }
                    sub_1B299DCC8();
                    if (!v73) {
                      goto LABEL_158;
                    }
                    goto LABEL_69;
                  case 4u:
                    uint64_t v69 = *v11;
                    if ((*v11 & 0x80000000000000) != 0) {
                      sub_1B2CA0030();
                    }
                    sub_1B2C9FE30(v69);
                    goto LABEL_75;
                  case 5u:
                    uint64_t v79 = *v11;
                    sub_1B2C9FD68();
                    sub_1B2E82298();
                    uint64_t v165 = v79;
LABEL_75:
                    sub_1B2E83748();
                    sub_1B2C9FFC4();
                    swift_bridgeObjectRelease();
                    goto LABEL_76;
                  case 6u:
                    unint64_t v67 = 0xE600000000000000;
                    uint64_t v68 = 0x6E6F73726570;
                    switch(*(unsigned char *)v11)
                    {
                      case 1:
                        uint64_t v68 = 0x6D614E7473726966;
                        goto LABEL_99;
                      case 2:
                        unint64_t v67 = 0xE800000000000000;
                        uint64_t v68 = 0x656D614E7473616CLL;
                        goto LABEL_77;
                      case 3:
                        unint64_t v67 = 0xE700000000000000;
                        uint64_t v68 = 0x73736572646461;
                        goto LABEL_77;
                      case 4:
                        unint64_t v67 = 0xE800000000000000;
                        uint64_t v68 = 0x7961646874726962;
                        goto LABEL_77;
                      case 5:
                        uint64_t v68 = 0x6D754E656E6F6870;
                        uint64_t v83 = 7497058;
                        goto LABEL_105;
                      case 6:
                        uint64_t v68 = 0x6464416C69616D65;
                        uint64_t v85 = 1936942450;
                        goto LABEL_103;
                      case 7:
                        uint64_t v68 = 0x6E6F6974616C6572;
                        uint64_t v85 = 1885956211;
LABEL_103:
                        unint64_t v67 = v85 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
                        goto LABEL_77;
                      case 8:
                        unint64_t v67 = 0xE800000000000000;
                        uint64_t v68 = 0x6565646E65747461;
                        goto LABEL_77;
                      case 9:
                        uint64_t v68 = 0x49746361746E6F63;
                        uint64_t v83 = 7300718;
                        goto LABEL_105;
                      case 0xA:
                        unint64_t v67 = 0xE800000000000000;
                        unsigned int v84 = 1633906540;
                        goto LABEL_109;
                      case 0xB:
                        unint64_t v67 = 0xE400000000000000;
                        uint64_t v68 = 1836020326;
                        goto LABEL_77;
                      case 0xC:
                        unint64_t v67 = 0xE200000000000000;
                        uint64_t v68 = 28532;
                        goto LABEL_77;
                      case 0xD:
                        unint64_t v67 = 0x80000001B2E95700;
                        uint64_t v68 = 0xD000000000000010;
                        goto LABEL_77;
                      case 0xE:
                        unint64_t v67 = 0xE800000000000000;
                        uint64_t v68 = 0x7473657265746E69;
                        goto LABEL_77;
                      case 0xF:
                        goto LABEL_77;
                      case 0x10:
                        uint64_t v68 = 0x6765746143707061;
                        uint64_t v83 = 7959151;
LABEL_105:
                        unint64_t v67 = v83 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
                        break;
                      case 0x11:
                        uint64_t v68 = 0x7461447472617473;
LABEL_99:
                        unint64_t v67 = 0xE900000000000065;
                        break;
                      case 0x12:
                        unint64_t v67 = 0xE700000000000000;
                        uint64_t v68 = 0x65746144646E65;
                        break;
                      case 0x13:
                        unint64_t v67 = 0xE800000000000000;
                        unsigned int v84 = 1634891108;
LABEL_109:
                        uint64_t v68 = v84 | 0x6E6F697400000000;
                        break;
                      case 0x14:
                        unint64_t v67 = 0xE400000000000000;
                        uint64_t v68 = 1701869940;
                        break;
                      case 0x15:
                        unint64_t v67 = 0xE500000000000000;
                        uint64_t v68 = 0x74696D696CLL;
                        break;
                      case 0x16:
                        unint64_t v67 = 0xE700000000000000;
                        uint64_t v68 = 0x63734174726F73;
                        break;
                      case 0x17:
                        unint64_t v67 = 0xE800000000000000;
                        uint64_t v68 = 0x6373654474726F73;
                        break;
                      case 0x18:
                        uint64_t v68 = 0x656372756F73;
                        break;
                      case 0x19:
                        unint64_t v67 = 0xE500000000000000;
                        uint64_t v68 = 0x65756C6176;
                        break;
                      default:
                        unint64_t v67 = 0xE400000000000000;
                        uint64_t v68 = 1701667182;
                        break;
                    }
                    goto LABEL_77;
                  case 7u:
                    uint64_t v68 = *v11;
                    unint64_t v67 = v11[1];
                    goto LABEL_77;
                  default:
                    uint64_t v68 = *v11;
                    unint64_t v67 = v11[1];
                    uint64_t v162 = *v11;
                    unint64_t v163 = v67;
                    uint64_t v165 = 32;
                    unint64_t v166 = 0xE100000000000000;
                    sub_1B29C3640();
                    if ((sub_1B2E83038() & 1) == 0) {
                      goto LABEL_77;
                    }
                    uint64_t v162 = 39;
                    unint64_t v163 = 0xE100000000000000;
                    sub_1B2E82518();
                    swift_bridgeObjectRelease();
                    sub_1B2E82518();
LABEL_76:
                    uint64_t v68 = v162;
                    unint64_t v67 = v163;
                    goto LABEL_77;
                }
              }
            }
            swift_bridgeObjectRetain();
            uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
LABEL_123:
            uint64_t v110 = v20[2];
            if (v110 != 1)
            {
              if (v110)
              {
                sub_1B2C9F724();
                sub_1B29A3EB4(&qword_1EB7E3B30);
                sub_1B2A20660();
                sub_1B299E90C();
                sub_1B2C9FFC4();
                swift_bridgeObjectRelease();
                sub_1B2C9F760();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                unint64_t v59 = v163;
                uint64_t v145 = v162;
              }
              else
              {
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                uint64_t v145 = 0;
                unint64_t v59 = 0xE000000000000000;
              }
LABEL_134:
              if (++v60 == v58)
              {
                swift_release();
                if (v59)
                {
                  uint64_t v116 = sub_1B299D354();
                  sub_1B29A3EB4(&qword_1E9C39A58);
                  uint64_t v117 = sub_1B2C37E84();
                  *(_OWORD *)(v117 + 16) = xmmword_1B2EBFA40;
                  uint64_t v118 = sub_1B299D354();
                  uint64_t v119 = (__n128 *)sub_1B29A1824();
                  sub_1B2A6BC14(v119, v148);
                  static EntityClass.person.getter();
                  *(void *)(v118 + 16) = v119;
                  *(void *)(v117 + 32) = v118 | 0x4000000000000000;
                  uint64_t v120 = sub_1B29A2D00();
                  *(void *)(v120 + 16) = v145;
                  *(void *)(v120 + 24) = v59;
                  *(void *)(v117 + 40) = v120 | 0x5000000000000000;
                  *(void *)(v116 + 16) = v117;
                  sub_1B2C9FE14();
                  uint64_t v122 = v116 | v121;
                  uint64_t v115 = swift_allocObject();
                  uint64_t v123 = sub_1B29A2D00();
                  uint64_t v124 = v152;
                  *(void *)(v123 + 16) = v122;
                  *(void *)(v123 + 24) = v124;
                  uint64_t v162 = v123 | 0x2000000000000000;
                  swift_retain();
                  uint64_t v125 = VOPBuilder.toString.getter();
                  uint64_t v127 = v126;
                  swift_release();
                  *(void *)(v115 + 16) = v125;
                  *(void *)(v115 + 24) = v127;
                  if (v146 >= 52)
                  {
                    sub_1B2A7C538(0x33uLL, v115 + 32);
                    swift_release();
                    unint64_t v114 = 0x8000000000000004;
LABEL_137:
                    sub_1B2CA01A0(v114 | v115);
                    return;
                  }
                  __break(1u);
LABEL_165:
                  __break(1u);
LABEL_166:
                  __break(1u);
LABEL_167:
                  __break(1u);
LABEL_168:
                  swift_release();
                  __break(1u);
                  JUMPOUT(0x1B2C996B0);
                }
                swift_bridgeObjectRelease();
LABEL_146:
                sub_1B2C9F3CC();
                sub_1B299E4D4();
                sub_1B2C9FEC0(v133, 0xD000000000000022);
                uint64_t v160 = v134;
                swift_willThrow();
                return;
              }
              continue;
            }
            unint64_t v59 = v20[5];
            uint64_t v145 = v20[4];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease_n();
LABEL_133:
            swift_bridgeObjectRelease();
            goto LABEL_134;
          }
          break;
        }
        sub_1B29A3EB4(&qword_1EB7E34A8);
        unint64_t v88 = (__n128 *)sub_1B29A1824();
        sub_1B2C9F978(v88, (uint64_t)&v167);
        if (v146 < 94) {
          goto LABEL_160;
        }
        if (!_Records_GDEntityPredicate_records) {
          goto LABEL_165;
        }
        sub_1B2C9FC5C();
        if (v73 == v92) {
          goto LABEL_161;
        }
        uint64_t v157 = v60;
        if (*(void *)(v90 + 2248) >= v143)
        {
LABEL_162:
          __break(1u);
LABEL_163:
          sub_1B29B93B0();
          uint64_t v18 = v140;
LABEL_29:
          *(void *)(v18 + 16) = v20;
          sub_1B2C9FB34(v15 | 0x4000000000000000);
          sub_1B2C9FD80();
          if (!v2)
          {
            uint64_t v160 = 0;
            uint64_t v21 = *(void *)(v162 + 16);
            if (v21)
            {
              uint64_t v152 = v162;
              __int16 v22 = (unsigned char *)(v162 + 48);
              long long v154 = xmmword_1B2EBFA40;
              __n128 v153 = (__n128)xmmword_1B2EC89C0;
              do
              {
                int v23 = *(v22 - 16);
                if (v23 != 21)
                {
                  uint64_t v24 = *((void *)v22 - 1);
                  if (*(v22 - 16))
                  {
                    unsigned __int8 v128 = *v22;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    swift_release();
                    sub_1B2C9FFDC();
                    sub_1B29A2FC8();
                    LOBYTE(v162) = v23;
                    unint64_t v163 = v24;
                    unsigned __int8 v164 = v128;
                    sub_1B2C9FB64();
                    sub_1B2E82518();
                    uint64_t v129 = v165;
                    unint64_t v130 = v166;
                    sub_1B2C9F3CC();
                    uint64_t v131 = sub_1B299E4D4();
                    *uint64_t v132 = v129;
                    v132[1] = v130;
                    uint64_t v160 = v131;
                    swift_willThrow();
                    goto LABEL_148;
                  }
                  uint64_t v156 = v21;
                  uint64_t v157 = sub_1B299D354();
                  sub_1B29A3EB4(&qword_1E9C39A58);
                  uint64_t v159 = sub_1B2C37E84();
                  *(_OWORD *)(v159 + 16) = v154;
                  uint64_t v25 = (void *)sub_1B2C9F70C();
                  sub_1B29A3EB4(&qword_1EB7E34A8);
                  uint64_t v26 = (__n128 *)sub_1B29A1824();
                  sub_1B2C9FF98(v26);
                  uint64_t v28 = v27 + 32;
                  swift_bridgeObjectRetain();
                  static EntityPredicate.name.getter();
                  v25[2] = v26;
                  MEMORY[0x1F4188790](v29);
                  sub_1B2C9F898();
                  swift_bridgeObjectRetain();
                  uint64_t v30 = v28;
                  uint64_t v31 = v160;
                  uint64_t v32 = sub_1B2DF42C8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4, v30, v24);
                  uint64_t v161 = v24;
                  if (v31)
                  {
                    uint64_t v160 = v31;
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_deallocUninitializedObject();
                    *(void *)(v159 + 16) = 0;
                    swift_bridgeObjectRelease();
                    swift_release();
                    goto LABEL_144;
                  }
                  uint64_t v155 = v18;
                  uint64_t v33 = sub_1B2CA1F54(v32);
                  uint64_t v35 = v34;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v25[3] = v33;
                  void v25[4] = v35;
                  sub_1B2C9FE04();
                  *(void *)(v159 + 32) = v36;
                  uint64_t v37 = sub_1B2C387D4();
                  static EntityPredicate.hasAddress.getter();
                  uint64_t v38 = (__n128 *)sub_1B2C9F70C();
                  sub_1B2C9FF98(v38);
                  uint64_t v39 = sub_1B299D354();
                  uint64_t v40 = (void *)sub_1B2C9F70C();
                  char v41 = (__n128 *)swift_allocObject();
                  sub_1B2A6BC14(v41, v153);
                  static EntityPredicate.thoroughfare.getter();
                  static EntityPredicate.locality.getter();
                  static EntityPredicate.administrativeArea.getter();
                  static EntityPredicate.subAdministrativeArea.getter();
                  v40[2] = v41;
                  MEMORY[0x1F4188790](v42);
                  sub_1B2C9F898();
                  uint64_t v43 = v161;
                  swift_bridgeObjectRetain();
                  uint64_t v44 = sub_1B2DF42C8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4, 0, v43);
                  uint64_t v160 = 0;
                  uint64_t v45 = sub_1B2CA1F54(v44);
                  uint64_t v47 = v46;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v40[3] = v45;
                  v40[4] = v47;
                  sub_1B2C9FE04();
                  *(void *)(v39 + 16) = v48;
                  v38[2].n128_u64[0] = v39 | 0x1000000000000000;
                  *(void *)(v37 + 56) = v38;
                  uint64_t v49 = v159;
                  *(void *)(v159 + 40) = v37 | 4;
                  uint64_t v50 = v157;
                  *(void *)(v157 + 16) = v49;
                  uint64_t v18 = v155;
                  unint64_t v51 = *(void *)(v155 + 16);
                  if (v51 >= *(void *)(v155 + 24) >> 1)
                  {
                    sub_1B29B93B0();
                    uint64_t v18 = v52;
                  }
                  uint64_t v21 = v156;
                  *(void *)(v18 + 16) = v51 + 1;
                  *(void *)(v18 + 8 * v51 + 32) = v50 | 0x3000000000000000;
                  swift_bridgeObjectRelease();
                }
                v22 += 24;
                --v21;
              }
              while (v21);
            }
            swift_release();
            unint64_t v114 = 0x2000000000000004;
            uint64_t v115 = sub_1B299D354();
            *(void *)(v115 + 16) = v18;
            goto LABEL_137;
          }
          goto LABEL_168;
        }
        unint64_t v151 = v59;
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_166;
        }
        uint64_t v93 = v89;
        __int16 v94 = *(_WORD *)(v90 + 2232);
        uint64_t v95 = (char *)_Records_GDEntityPredicate_predicateIds + v91;
        swift_bridgeObjectRetain();
        uint64_t v96 = sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_167;
        }
        uint64_t v98 = v96;
        uint64_t v99 = (uint64_t)v20;
        uint64_t v100 = v97;
        uint64_t v101 = sub_1B2C9F70C();
        uint64_t v102 = sub_1B2E82538();
        *(void *)(v93 + 32) = v98;
        *(void *)(v93 + 40) = v100;
        *(void *)(v93 + 48) = v102;
        *(void *)(v93 + 56) = v103;
        *(_WORD *)(v93 + 64) = v94;
        *(void *)(v101 + 16) = v93;
        MEMORY[0x1F4188790](v102);
        sub_1B2C9F898();
        swift_bridgeObjectRetain();
        uint64_t v104 = (uint64_t)v95;
        uint64_t v2 = v160;
        uint64_t v105 = sub_1B2DF42C8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4, v104, v99);
        uint64_t v160 = v2;
        if (!v2)
        {
          uint64_t v106 = v105;
          sub_1B2C9F88C();
          if (v71)
          {
            uint64_t v108 = *(void *)(v106 + 32);
            unint64_t v109 = *(void *)(v106 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v58 = v150;
            uint64_t v60 = v157;
          }
          else
          {
            uint64_t v58 = v150;
            uint64_t v60 = v157;
            if (v107)
            {
              sub_1B2C9FED0();
              sub_1B29A3EB4(&qword_1EB7E3B30);
              sub_1B2A20660();
              sub_1B2C9FC34();
              sub_1B2E82518();
              swift_bridgeObjectRelease();
              sub_1B2C9F760();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v108 = v162;
              unint64_t v109 = v163;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v108 = 0;
              unint64_t v109 = 0xE000000000000000;
            }
          }
          *(void *)(v101 + 24) = v108;
          *(void *)(v101 + 32) = v109;
          unint64_t v59 = v151;
          uint64_t v15 = *(void *)(v152 + 16);
          sub_1B2CA01AC();
          if (v112)
          {
            sub_1B2CA0140();
            uint64_t v111 = v113;
          }
          *(void *)(v111 + 16) = v109;
          uint64_t v152 = v111;
          *(void *)(v111 + 8 * v15 + 32) = v101 | 0x5000000000000004;
          goto LABEL_133;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_144:
        swift_deallocUninitializedObject();
        return;
    }
  }
}

void sub_1B2C997A0()
{
  uint64_t v1 = sub_1B299D354();
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
  uint64_t v2 = (__n128 *)sub_1B29A1824();
  sub_1B2A6BC14(v2, (__n128)xmmword_1B2EC00A0);
  static EntityClass.screenTimeSegment.getter();
  *(void *)(v1 + 16) = v2;
  sub_1B2C9F7DC();
  uint64_t v4 = v3;
  unint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = v5 + 1;
  if (v5 >= *(void *)(v3 + 24) >> 1) {
    goto LABEL_123;
  }
  while (1)
  {
    *(void *)(v4 + 16) = v6;
    sub_1B2C9FB34(v1 | 0x4000000000000000);
    sub_1B2C9FD80();
    if (v0) {
      goto LABEL_145;
    }
    uint64_t v7 = *(char **)(v117 + 16);
    if (!v7) {
      break;
    }
    uint64_t v6 = v117 + 48;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    while (2)
    {
      uint64_t v1 = *(unsigned __int8 *)(v6 - 16);
      switch(*(unsigned char *)(v6 - 16))
      {
        case 0xB:
        case 0xF:
          sub_1B29A3EB4(&qword_1E9C39A58);
          uint64_t v1 = sub_1B2C37E84();
          *(_OWORD *)(v1 + 16) = xmmword_1B2EBFA40;
          *(_OWORD *)(sub_1B29A1824() + 16) = xmmword_1B2EC00A0;
          if (!_Records_GDEntityClass_records)
          {
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            swift_release();
            __break(1u);
            JUMPOUT(0x1B2C9A7E4);
          }
          sub_1B2C9FC5C();
          if (v12 != v13)
          {
            if (*(uint64_t *)(v10 + 640) >= 2889) {
              goto LABEL_110;
            }
            uint64_t v115 = v6;
            if (!_Records_GDEntityClass_classIds[0]) {
              goto LABEL_126;
            }
            uint64_t v14 = v9;
            uint64_t v0 = &_Records_GDEntityClass_classIds[0][v11];
            swift_bridgeObjectRetain();
            uint64_t v15 = sub_1B2E82538();
            if (!_Records_GDEntityClass_labels) {
              goto LABEL_125;
            }
            uint64_t v17 = v15;
            uint64_t v18 = v16;
            sub_1B299D354();
            sub_1B299D354();
            uint64_t v19 = sub_1B2E82538();
            *(void *)(v14 + 32) = v17;
            *(void *)(v14 + 40) = v18;
            sub_1B2C9FDBC(v19, v20);
            uint64_t v21 = sub_1B29A2D00();
            MEMORY[0x1F4188790](v21);
            sub_1B2C9FB7C();
            uint64_t v22 = sub_1B2C9FF48((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4);
            if (v0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B2C379B4();
              swift_bridgeObjectRelease_n();
              sub_1B2C9FBB0();
              sub_1B2C9FEE8();
              *(void *)(v1 + 16) = 0;
              goto LABEL_109;
            }
            sub_1B2CA1F54(v22);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v23 = sub_1B299AFC8();
            uint64_t v6 = sub_1B2CA69D8(v23);
            swift_bridgeObjectRelease();
            if (v6)
            {
              sub_1B29A2D00();
              sub_1B2CA1F54(v6);
              swift_bridgeObjectRelease();
              swift_release();
              sub_1B2CA003C();
            }
            if (!_Records_GDEntityPredicate_records) {
              goto LABEL_127;
            }
            sub_1B299B5DC();
            if (v12 == v13) {
              goto LABEL_111;
            }
            if (*(uint64_t *)(v70 + 5368) >= 3558) {
              goto LABEL_112;
            }
            if (!_Records_GDEntityPredicate_predicateIds) {
              goto LABEL_128;
            }
            __int16 v71 = *(_WORD *)(v70 + 5352);
            uint64_t v72 = sub_1B2E82538();
            uint64_t v7 = _Records_GDEntityPredicate_labels;
            if (!_Records_GDEntityPredicate_labels) {
              goto LABEL_129;
            }
            uint64_t v74 = v72;
            uint64_t v8 = v73;
            uint64_t v75 = sub_1B2C387D4();
            uint64_t v76 = sub_1B2E82538();
            *(void *)(v75 + 16) = v74;
            *(void *)(v75 + 24) = v8;
            *(void *)(v75 + 32) = v76;
            *(void *)(v75 + 40) = v77;
            *(_WORD *)(v75 + 48) = v71;
            uint64_t v78 = sub_1B2C9F70C();
            sub_1B2C9F778(v78);
            sub_1B2C9FAA4();
            uint64_t v4 = v93;
            sub_1B2C9FD40();
LABEL_69:
            swift_release();
            uint64_t v6 = v115;
LABEL_91:
            v6 += 24;
            if (!--v7)
            {
              sub_1B2C379B4();
              goto LABEL_94;
            }
            continue;
          }
          __break(1u);
LABEL_110:
          __break(1u);
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
          __break(1u);
          __break(1u);
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          sub_1B2C9FAA4();
          uint64_t v4 = v111;
          break;
        case 0xC:
        case 0xD:
        case 0xE:
        case 0x13:
        case 0x14:
          goto LABEL_106;
        case 0x10:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_131;
          }
          sub_1B299B5DC();
          if (v12 == v13) {
            goto LABEL_114;
          }
          if (*(uint64_t *)(v49 + 5392) >= 3558) {
            goto LABEL_116;
          }
          uint64_t v116 = v7;
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_135;
          }
          uint64_t v0 = (char *)_Records_GDEntityPredicate_predicateIds + v50;
          swift_bridgeObjectRetain();
          sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_136;
          }
          sub_1B2CA0230();
          uint64_t v51 = swift_allocObject();
          uint64_t v52 = sub_1B2E82538();
          uint64_t v54 = sub_1B2C9F8C8(v52, v53);
          MEMORY[0x1F4188790](v54);
          sub_1B2C9F7B4();
          uint64_t v55 = sub_1B2C9FF2C((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4);
          if (v0) {
            goto LABEL_107;
          }
          uint64_t v56 = v55;
          sub_1B2C9F88C();
          if (v46)
          {
            uint64_t v58 = *(void *)(v56 + 32);
            unint64_t v59 = *(void *)(v56 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (v57)
          {
            sub_1B2C9F920();
            sub_1B29A3EB4(&qword_1EB7E3B30);
            sub_1B2A20660();
            sub_1B2C9F820();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2C9F760();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v58 = v117;
            unint64_t v59 = v118;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v58 = 0;
            unint64_t v59 = 0xE000000000000000;
          }
          *(void *)(v51 + 56) = v58;
          *(void *)(v51 + 64) = v59;
          *(void *)(v51 + 72) = 0;
          *(void *)(v51 + 80) = 0;
          *(_DWORD *)(v51 + 87) = 0;
          uint64_t v91 = *(void *)(v4 + 16);
          sub_1B2CA023C();
          if (v89)
          {
            sub_1B29999F8(v92);
            sub_1B29B93B0();
            uint64_t v4 = v96;
          }
          *(void *)(v4 + 16) = v59;
          *(void *)(v4 + 8 * v91 + 32) = v51;
          goto LABEL_90;
        case 0x11:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_132;
          }
          sub_1B299B5DC();
          if (v12 == v13) {
            goto LABEL_113;
          }
          if (*(uint64_t *)(v37 + 3664) >= 3558) {
            goto LABEL_117;
          }
          uint64_t v116 = v7;
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_133;
          }
          uint64_t v0 = (char *)_Records_GDEntityPredicate_predicateIds + v38;
          swift_bridgeObjectRetain();
          sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_134;
          }
          sub_1B2CA0230();
          uint64_t v39 = sub_1B29A1824();
          uint64_t v40 = sub_1B2E82538();
          uint64_t v42 = sub_1B2C9F8C8(v40, v41);
          MEMORY[0x1F4188790](v42);
          sub_1B2C9F7B4();
          uint64_t v43 = sub_1B2C9FF2C((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4);
          if (v0) {
            goto LABEL_107;
          }
          uint64_t v44 = v43;
          sub_1B2C9F88C();
          if (v46)
          {
            uint64_t v47 = *(void *)(v44 + 32);
            unint64_t v48 = *(void *)(v44 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (v45)
          {
            sub_1B2C9F920();
            sub_1B29A3EB4(&qword_1EB7E3B30);
            sub_1B2A20660();
            sub_1B2C9F820();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2C9F760();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v47 = v117;
            unint64_t v48 = v118;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v47 = 0;
            unint64_t v48 = 0xE000000000000000;
          }
          *(void *)(v39 + 56) = v47;
          *(void *)(v39 + 64) = v48;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2C9F73C();
            uint64_t v8 = v94;
          }
          uint64_t v88 = *(void *)(v8 + 16);
          sub_1B2CA023C();
          if (v89)
          {
            sub_1B2C9FE48();
            uint64_t v8 = v95;
          }
          uint64_t v90 = v39 | 0x6000000000000000;
          goto LABEL_89;
        case 0x12:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_130;
          }
          sub_1B299B5DC();
          if (v12 == v13) {
            goto LABEL_115;
          }
          if (*(uint64_t *)(v60 + 3688) >= 3558) {
            goto LABEL_118;
          }
          uint64_t v116 = v7;
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_137;
          }
          uint64_t v0 = (char *)_Records_GDEntityPredicate_predicateIds + v61;
          swift_bridgeObjectRetain();
          sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_138;
          }
          sub_1B2CA0230();
          uint64_t v62 = sub_1B29A1824();
          uint64_t v63 = sub_1B2E82538();
          uint64_t v65 = sub_1B2C9F8C8(v63, v64);
          MEMORY[0x1F4188790](v65);
          sub_1B2C9F7B4();
          uint64_t v66 = sub_1B2C9FF2C((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4);
          if (v0)
          {
LABEL_107:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B2C379B4();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_deallocUninitializedObject();
            return;
          }
          uint64_t v67 = v66;
          sub_1B2C9F88C();
          if (v46)
          {
            uint64_t v69 = *(void *)(v67 + 32);
            unint64_t v48 = *(void *)(v67 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (v68)
          {
            sub_1B2C9F920();
            sub_1B29A3EB4(&qword_1EB7E3B30);
            sub_1B2A20660();
            sub_1B2C9F820();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2C9F760();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v69 = v117;
            unint64_t v48 = v118;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v69 = 0;
            unint64_t v48 = 0xE000000000000000;
          }
          *(void *)(v62 + 56) = v69;
          *(void *)(v62 + 64) = v48;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2C9F73C();
            uint64_t v8 = v97;
          }
          uint64_t v88 = *(void *)(v8 + 16);
          sub_1B2CA023C();
          if (v89)
          {
            sub_1B2C9FE48();
            uint64_t v8 = v98;
          }
          uint64_t v90 = v62 | 0x6000000000000004;
LABEL_89:
          *(void *)(v8 + 16) = v48;
          *(void *)(v8 + 8 * v88 + 32) = v90;
LABEL_90:
          swift_bridgeObjectRelease();
          uint64_t v7 = v116;
          goto LABEL_91;
        case 0x15:
          goto LABEL_91;
        default:
          if (*(unsigned char *)(v6 - 16))
          {
LABEL_106:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B2C379B4();
            sub_1B2C9FFFC();
            sub_1B299B7D8();
            sub_1B2E82518();
            sub_1B2C9FB64();
            sub_1B2E82518();
            sub_1B2C9F3CC();
            sub_1B299E4D4();
            *uint64_t v110 = v117;
            v110[1] = v118;
            swift_willThrow();
            swift_bridgeObjectRelease();
            return;
          }
          sub_1B29A3EB4(&qword_1E9C39A58);
          uint64_t v1 = sub_1B2C37E84();
          *(_OWORD *)(v1 + 16) = xmmword_1B2EBFA40;
          *(_OWORD *)(sub_1B29A1824() + 16) = xmmword_1B2EC00A0;
          if (!_Records_GDEntityClass_records) {
            goto LABEL_139;
          }
          sub_1B2C9FC5C();
          if (v12 == v13) {
            goto LABEL_119;
          }
          if (*(uint64_t *)(v25 + 1144) >= 2889) {
            goto LABEL_120;
          }
          uint64_t v115 = v6;
          if (!_Records_GDEntityClass_classIds[0]) {
            goto LABEL_140;
          }
          uint64_t v27 = v24;
          uint64_t v0 = &_Records_GDEntityClass_classIds[0][v26];
          swift_bridgeObjectRetain();
          uint64_t v28 = sub_1B2E82538();
          if (!_Records_GDEntityClass_labels) {
            goto LABEL_141;
          }
          uint64_t v30 = v28;
          uint64_t v31 = v29;
          sub_1B299D354();
          sub_1B299D354();
          uint64_t v32 = sub_1B2E82538();
          *(void *)(v27 + 32) = v30;
          *(void *)(v27 + 40) = v31;
          sub_1B2C9FDBC(v32, v33);
          uint64_t v34 = sub_1B29A2D00();
          MEMORY[0x1F4188790](v34);
          sub_1B2C9FB7C();
          uint64_t v35 = sub_1B2C9FF48((void (*)(uint64_t *__return_ptr, uint64_t))sub_1B2C9F6F4);
          if (v0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B2C379B4();
            swift_bridgeObjectRelease();
            sub_1B2C9FBB0();
            sub_1B2C9FEE8();
            *(void *)(v1 + 16) = 0;
            swift_bridgeObjectRelease();
LABEL_109:
            swift_release();
            swift_deallocUninitializedObject();
            return;
          }
          sub_1B2CA1F54(v35);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B299AFC8();
          uint64_t v36 = swift_bridgeObjectRetain();
          uint64_t v6 = sub_1B2CA69D8(v36);
          swift_bridgeObjectRelease();
          if (v6)
          {
            sub_1B29A2D00();
            sub_1B2CA1F54(v6);
            swift_bridgeObjectRelease();
            swift_release();
            sub_1B2CA003C();
          }
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_142;
          }
          sub_1B299B5DC();
          if (v12 == v13) {
            goto LABEL_121;
          }
          if (*(uint64_t *)(v79 + 3520) >= 3558) {
            goto LABEL_122;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_143;
          }
          __int16 v80 = *(_WORD *)(v79 + 3504);
          uint64_t v81 = sub_1B2E82538();
          uint64_t v7 = _Records_GDEntityPredicate_labels;
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_144;
          }
          uint64_t v83 = v81;
          uint64_t v8 = v82;
          uint64_t v84 = sub_1B2C387D4();
          uint64_t v85 = sub_1B2E82538();
          *(void *)(v84 + 16) = v83;
          *(void *)(v84 + 24) = v8;
          *(void *)(v84 + 32) = v85;
          *(void *)(v84 + 40) = v86;
          *(_WORD *)(v84 + 48) = v80;
          uint64_t v87 = sub_1B2C9F70C();
          sub_1B2C9F778(v87);
          sub_1B2C9FAA4();
          uint64_t v4 = v99;
          sub_1B2C9FD40();
          swift_bridgeObjectRelease();
          goto LABEL_69;
      }
      break;
    }
  }
  swift_release();
  uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_94:
  if (*(void *)(v8 + 16))
  {
    uint64_t v100 = sub_1B299D354();
    uint64_t v101 = (__n128 *)sub_1B29A1824();
    sub_1B2C9FFA4(v101);
    static EntityClass.dateRelationshipType.getter();
    *(void *)(v100 + 16) = v101;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B2C9F73C();
      uint64_t v8 = v112;
    }
    unint64_t v103 = *(void *)(v8 + 16);
    unint64_t v102 = *(void *)(v8 + 24);
    if (v103 >= v102 >> 1)
    {
      sub_1B2C83FB8(v102);
      sub_1B29B93B0();
      uint64_t v8 = v113;
    }
    *(void *)(v8 + 16) = v103 + 1;
    *(void *)(v8 + 8 * v103 + 32) = v100 | 0x4000000000000000;
    uint64_t v104 = sub_1B2C387D4();
    sub_1B2A7C538(0x91uLL, v104 + 16);
    sub_1B29A3EB4(&qword_1E9C39A58);
    uint64_t v105 = (__n128 *)sub_1B2C9F70C();
    sub_1B2C9FFA4(v105);
    *(void *)(sub_1B299D354() + 16) = v8;
    sub_1B2CA00A0();
    v105[2].n128_u64[0] = v106;
    *(void *)(v104 + 56) = v105;
    unint64_t v108 = *(void *)(v4 + 16);
    unint64_t v107 = *(void *)(v4 + 24);
    if (v108 >= v107 >> 1)
    {
      sub_1B2C83FB8(v107);
      sub_1B29B93B0();
      uint64_t v4 = v114;
    }
    *(void *)(v4 + 16) = v108 + 1;
    *(void *)(v4 + 8 * v108 + 32) = v104 | 4;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v109 = sub_1B299D354();
  *(void *)(v109 + 16) = v4;
  sub_1B2CA01A0(v109 | 0x2000000000000004);
}

uint64_t sub_1B2C9A810(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1B2C9A838()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void **)(v0 + 40);
    *(void *)(v0 + 16) = v1;
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2A20660();
    uint64_t v3 = sub_1B2E822D8();
    uint64_t v5 = v4;
    sub_1B29A3EB4(&qword_1EB7E5B00);
    uint64_t v6 = sub_1B2C37E84();
    *(_OWORD *)(v6 + 16) = xmmword_1B2EC00A0;
    static EntityClass.person.getter();
    swift_bridgeObjectRelease();
    *(void *)(v6 + 32) = v15;
    *(void *)(v6 + 40) = v16;
    id v7 = objc_allocWithZone((Class)GDEntityResolutionRequest);
    id v8 = sub_1B2C9ACE8(v3, v5, v6, 0, 0, 0, 1);
    *(void *)(v0 + 48) = v8;
    uint64_t v9 = v2[4];
    uint64_t v10 = v2[5];
    sub_1B29AEC7C(v2 + 1, v9);
    uint64_t v14 = (uint64_t (*)(id, uint64_t, uint64_t))(*(void *)(v10 + 16) + **(int **)(v10 + 16));
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1B2C9AA50;
    return v14(v8, v9, v10);
  }
  else
  {
    **(void **)(v0 + 24) = 0xF000000000000007;
    sub_1B2999AB8();
    return v13();
  }
}

uint64_t sub_1B2C9AA50()
{
  sub_1B299F394();
  sub_1B2C9F848();
  uint64_t v4 = v3;
  uint64_t v5 = *v2;
  sub_1B299B0E0();
  *uint64_t v6 = v5;
  *(void *)(v4 + 64) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v4 + 72) = v1;
  }
  sub_1B299F2A4();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1B2C9AB40()
{
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = (void *)v0[6];
  uint64_t v3 = (uint64_t *)v0[3];
  id v4 = objc_msgSend(v1, sel_rankedResults, MEMORY[0x1E4FBC870]);
  sub_1B29C3CA0(0, &qword_1EB7D97B8);
  unint64_t v5 = sub_1B2E82838();

  sub_1B2C91A98(v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1B29A2D00();
  swift_bridgeObjectRetain();
  sub_1B2A43940();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1B2CA1F54(v8);
  uint64_t v11 = v10;
  swift_release();

  *(void *)(v6 + 16) = v9;
  *(void *)(v6 + 24) = v11;
  swift_bridgeObjectRelease();
  sub_1B2C9F954();
  *uint64_t v3 = v6 | v12;
  sub_1B2999AB8();
  return v13();
}

uint64_t sub_1B2C9AC8C()
{
  sub_1B299B3BC();

  sub_1B299AD7C();
  return v1();
}

id sub_1B2C9ACE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v14 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  if (!a3)
  {
    uint64_t v15 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v16 = 0;
    goto LABEL_6;
  }
  uint64_t v15 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1B29C3CA0(0, &qword_1E9C3C5C0);
  uint64_t v16 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
LABEL_6:
  id v17 = objc_msgSend(v8, sel_initWithText_entityClassFilter_spans_mode_constraint_includeInferredNames_, v14, v15, v16, a5, a6, a7 & 1);

  return v17;
}

uint64_t sub_1B2C9ADE8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result < v4)
  {
    uint64_t v6 = result;
    uint64_t v173 = sub_1B29B6B68(v4 / 2);
    unint64_t v180 = v7;
    uint64_t v177 = v4;
    uint64_t v171 = a1;
    if (v4 <= 0)
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      unint64_t v115 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      goto LABEL_378;
    }
    uint64_t v172 = v6;
    uint64_t v8 = 0;
    uint64_t v9 = *a1;
    uint64_t v170 = *a1 + 56;
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v183 = *a1;
    while (1)
    {
      uint64_t v11 = v8 + 1;
      uint64_t v179 = v8;
      if (v8 + 1 >= v4) {
        goto LABEL_232;
      }
      uint64_t v174 = v10;
      uint64_t v12 = v2;
      char v13 = (unsigned __int8 *)(v9 + 24 * v11);
      uint64_t v14 = *v13;
      uint64_t v15 = *((void *)v13 + 1);
      uint64_t v16 = v9 + 24 * v8;
      char v17 = *(unsigned char *)v16;
      uint64_t v18 = *(void *)(v16 + 8);
      unint64_t v19 = 0xE400000000000000;
      uint64_t v20 = 1701667182;
      switch(v14)
      {
        case 1:
          uint64_t v20 = 0x6D614E7473726966;
          goto LABEL_25;
        case 2:
          unint64_t v19 = 0xE800000000000000;
          uint64_t v20 = 0x656D614E7473616CLL;
          break;
        case 3:
          unint64_t v19 = 0xE700000000000000;
          uint64_t v20 = 0x73736572646461;
          break;
        case 4:
          unint64_t v19 = 0xE800000000000000;
          uint64_t v20 = 0x7961646874726962;
          break;
        case 5:
          uint64_t v20 = 0x6D754E656E6F6870;
          uint64_t v21 = 7497058;
          goto LABEL_23;
        case 6:
          uint64_t v20 = 0x6464416C69616D65;
          uint64_t v22 = 1936942450;
          goto LABEL_13;
        case 7:
          uint64_t v20 = 0x6E6F6974616C6572;
          uint64_t v22 = 1885956211;
LABEL_13:
          unint64_t v19 = v22 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8:
          unint64_t v19 = 0xE800000000000000;
          uint64_t v20 = 0x6565646E65747461;
          break;
        case 9:
          uint64_t v20 = 0x49746361746E6F63;
          uint64_t v21 = 7300718;
          goto LABEL_23;
        case 10:
          unint64_t v19 = 0xE800000000000000;
          unsigned int v23 = 1633906540;
          goto LABEL_28;
        case 11:
          uint64_t v20 = 1836020326;
          break;
        case 12:
          unint64_t v19 = 0xE200000000000000;
          uint64_t v20 = 28532;
          break;
        case 13:
          unint64_t v19 = 0x80000001B2E95700;
          uint64_t v20 = 0xD000000000000010;
          break;
        case 14:
          unint64_t v19 = 0xE800000000000000;
          uint64_t v20 = 0x7473657265746E69;
          break;
        case 15:
          unint64_t v19 = 0xE600000000000000;
          uint64_t v20 = 0x6E6F73726570;
          break;
        case 16:
          uint64_t v20 = 0x6765746143707061;
          uint64_t v21 = 7959151;
LABEL_23:
          unint64_t v19 = v21 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 17:
          uint64_t v20 = 0x7461447472617473;
LABEL_25:
          unint64_t v19 = 0xE900000000000065;
          break;
        case 18:
          unint64_t v19 = 0xE700000000000000;
          uint64_t v20 = 0x65746144646E65;
          break;
        case 19:
          unint64_t v19 = 0xE800000000000000;
          unsigned int v23 = 1634891108;
LABEL_28:
          uint64_t v20 = v23 | 0x6E6F697400000000;
          break;
        case 20:
          uint64_t v20 = 1701869940;
          break;
        case 21:
          unint64_t v19 = 0xE500000000000000;
          uint64_t v20 = 0x74696D696CLL;
          break;
        case 22:
          unint64_t v19 = 0xE700000000000000;
          uint64_t v20 = 0x63734174726F73;
          break;
        case 23:
          unint64_t v19 = 0xE800000000000000;
          uint64_t v20 = 0x6373654474726F73;
          break;
        case 24:
          unint64_t v19 = 0xE600000000000000;
          uint64_t v20 = 0x656372756F73;
          break;
        case 25:
          unint64_t v19 = 0xE500000000000000;
          uint64_t v20 = 0x65756C6176;
          break;
        default:
          break;
      }
      unint64_t v24 = 0xE400000000000000;
      uint64_t v25 = 1701667182;
      switch(*(unsigned char *)v16)
      {
        case 1:
          uint64_t v25 = 0x6D614E7473726966;
          goto LABEL_55;
        case 2:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x656D614E7473616CLL;
          break;
        case 3:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x73736572646461;
          break;
        case 4:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x7961646874726962;
          break;
        case 5:
          uint64_t v25 = 0x6D754E656E6F6870;
          uint64_t v26 = 7497058;
          goto LABEL_53;
        case 6:
          uint64_t v25 = 0x6464416C69616D65;
          uint64_t v27 = 1936942450;
          goto LABEL_43;
        case 7:
          uint64_t v25 = 0x6E6F6974616C6572;
          uint64_t v27 = 1885956211;
LABEL_43:
          unint64_t v24 = v27 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x6565646E65747461;
          break;
        case 9:
          uint64_t v25 = 0x49746361746E6F63;
          uint64_t v26 = 7300718;
          goto LABEL_53;
        case 0xA:
          unint64_t v24 = 0xE800000000000000;
          unsigned int v28 = 1633906540;
          goto LABEL_58;
        case 0xB:
          uint64_t v25 = 1836020326;
          break;
        case 0xC:
          unint64_t v24 = 0xE200000000000000;
          uint64_t v25 = 28532;
          break;
        case 0xD:
          unint64_t v24 = 0x80000001B2E95700;
          uint64_t v25 = 0xD000000000000010;
          break;
        case 0xE:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x7473657265746E69;
          break;
        case 0xF:
          unint64_t v24 = 0xE600000000000000;
          uint64_t v25 = 0x6E6F73726570;
          break;
        case 0x10:
          uint64_t v25 = 0x6765746143707061;
          uint64_t v26 = 7959151;
LABEL_53:
          unint64_t v24 = v26 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0x11:
          uint64_t v25 = 0x7461447472617473;
LABEL_55:
          unint64_t v24 = 0xE900000000000065;
          break;
        case 0x12:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x65746144646E65;
          break;
        case 0x13:
          unint64_t v24 = 0xE800000000000000;
          unsigned int v28 = 1634891108;
LABEL_58:
          uint64_t v25 = v28 | 0x6E6F697400000000;
          break;
        case 0x14:
          uint64_t v25 = 1701869940;
          break;
        case 0x15:
          unint64_t v24 = 0xE500000000000000;
          uint64_t v25 = 0x74696D696CLL;
          break;
        case 0x16:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x63734174726F73;
          break;
        case 0x17:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x6373654474726F73;
          break;
        case 0x18:
          unint64_t v24 = 0xE600000000000000;
          uint64_t v25 = 0x656372756F73;
          break;
        case 0x19:
          unint64_t v24 = 0xE500000000000000;
          uint64_t v25 = 0x65756C6176;
          break;
        default:
          break;
      }
      if (v20 == v25 && v19 == v24) {
        break;
      }
      char v30 = sub_1B2E837A8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30) {
        goto LABEL_76;
      }
      uint64_t v31 = sub_1B2CA6C38(v14);
      uint64_t v33 = v32;
      if (v31 == sub_1B2CA6C38(v17) && v33 == v34) {
        int v181 = 0;
      }
      else {
        int v181 = sub_1B2E837A8();
      }
      uint64_t v2 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_82:
      uint64_t v11 = v179 + 2;
      uint64_t v9 = v183;
      if (v179 + 2 >= v4) {
        goto LABEL_224;
      }
      uint64_t v40 = (uint64_t *)(v170 + 24 * v179);
      do
      {
        uint64_t v184 = v11;
        uint64_t v41 = *((unsigned __int8 *)v40 - 8);
        uint64_t v42 = *v40;
        uint64_t v43 = *((unsigned __int8 *)v40 - 32);
        uint64_t v44 = *(v40 - 3);
        v40 += 3;
        unint64_t v45 = 0xE400000000000000;
        uint64_t v46 = 1701667182;
        switch(v41)
        {
          case 1:
            uint64_t v46 = 0x6D614E7473726966;
            goto LABEL_104;
          case 2:
            unint64_t v45 = 0xE800000000000000;
            uint64_t v46 = 0x656D614E7473616CLL;
            break;
          case 3:
            unint64_t v45 = 0xE700000000000000;
            uint64_t v46 = 0x73736572646461;
            break;
          case 4:
            unint64_t v45 = 0xE800000000000000;
            uint64_t v46 = 0x7961646874726962;
            break;
          case 5:
            uint64_t v46 = 0x6D754E656E6F6870;
            uint64_t v47 = 7497058;
            goto LABEL_102;
          case 6:
            uint64_t v46 = 0x6464416C69616D65;
            uint64_t v48 = 1936942450;
            goto LABEL_92;
          case 7:
            uint64_t v46 = 0x6E6F6974616C6572;
            uint64_t v48 = 1885956211;
LABEL_92:
            unint64_t v45 = v48 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          case 8:
            unint64_t v45 = 0xE800000000000000;
            uint64_t v46 = 0x6565646E65747461;
            break;
          case 9:
            uint64_t v46 = 0x49746361746E6F63;
            uint64_t v47 = 7300718;
            goto LABEL_102;
          case 10:
            unint64_t v45 = 0xE800000000000000;
            unsigned int v49 = 1633906540;
            goto LABEL_107;
          case 11:
            uint64_t v46 = 1836020326;
            break;
          case 12:
            unint64_t v45 = 0xE200000000000000;
            uint64_t v46 = 28532;
            break;
          case 13:
            unint64_t v45 = 0x80000001B2E95700;
            uint64_t v46 = 0xD000000000000010;
            break;
          case 14:
            unint64_t v45 = 0xE800000000000000;
            uint64_t v46 = 0x7473657265746E69;
            break;
          case 15:
            unint64_t v45 = 0xE600000000000000;
            uint64_t v46 = 0x6E6F73726570;
            break;
          case 16:
            uint64_t v46 = 0x6765746143707061;
            uint64_t v47 = 7959151;
LABEL_102:
            unint64_t v45 = v47 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 17:
            uint64_t v46 = 0x7461447472617473;
LABEL_104:
            unint64_t v45 = 0xE900000000000065;
            break;
          case 18:
            unint64_t v45 = 0xE700000000000000;
            uint64_t v46 = 0x65746144646E65;
            break;
          case 19:
            unint64_t v45 = 0xE800000000000000;
            unsigned int v49 = 1634891108;
LABEL_107:
            uint64_t v46 = v49 | 0x6E6F697400000000;
            break;
          case 20:
            uint64_t v46 = 1701869940;
            break;
          case 21:
            unint64_t v45 = 0xE500000000000000;
            uint64_t v46 = 0x74696D696CLL;
            break;
          case 22:
            unint64_t v45 = 0xE700000000000000;
            uint64_t v46 = 0x63734174726F73;
            break;
          case 23:
            unint64_t v45 = 0xE800000000000000;
            uint64_t v46 = 0x6373654474726F73;
            break;
          case 24:
            unint64_t v45 = 0xE600000000000000;
            uint64_t v46 = 0x656372756F73;
            break;
          case 25:
            unint64_t v45 = 0xE500000000000000;
            uint64_t v46 = 0x65756C6176;
            break;
          default:
            break;
        }
        unint64_t v50 = 0xE400000000000000;
        uint64_t v51 = 1701667182;
        switch(v43)
        {
          case 1:
            uint64_t v51 = 0x6D614E7473726966;
            goto LABEL_134;
          case 2:
            unint64_t v50 = 0xE800000000000000;
            uint64_t v51 = 0x656D614E7473616CLL;
            break;
          case 3:
            unint64_t v50 = 0xE700000000000000;
            uint64_t v51 = 0x73736572646461;
            break;
          case 4:
            unint64_t v50 = 0xE800000000000000;
            uint64_t v51 = 0x7961646874726962;
            break;
          case 5:
            uint64_t v51 = 0x6D754E656E6F6870;
            uint64_t v52 = 7497058;
            goto LABEL_132;
          case 6:
            uint64_t v51 = 0x6464416C69616D65;
            uint64_t v53 = 1936942450;
            goto LABEL_122;
          case 7:
            uint64_t v51 = 0x6E6F6974616C6572;
            uint64_t v53 = 1885956211;
LABEL_122:
            unint64_t v50 = v53 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          case 8:
            unint64_t v50 = 0xE800000000000000;
            uint64_t v51 = 0x6565646E65747461;
            break;
          case 9:
            uint64_t v51 = 0x49746361746E6F63;
            uint64_t v52 = 7300718;
            goto LABEL_132;
          case 10:
            unint64_t v50 = 0xE800000000000000;
            unsigned int v54 = 1633906540;
            goto LABEL_137;
          case 11:
            uint64_t v51 = 1836020326;
            break;
          case 12:
            unint64_t v50 = 0xE200000000000000;
            uint64_t v51 = 28532;
            break;
          case 13:
            unint64_t v50 = 0x80000001B2E95700;
            uint64_t v51 = 0xD000000000000010;
            break;
          case 14:
            unint64_t v50 = 0xE800000000000000;
            uint64_t v51 = 0x7473657265746E69;
            break;
          case 15:
            unint64_t v50 = 0xE600000000000000;
            uint64_t v51 = 0x6E6F73726570;
            break;
          case 16:
            uint64_t v51 = 0x6765746143707061;
            uint64_t v52 = 7959151;
LABEL_132:
            unint64_t v50 = v52 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 17:
            uint64_t v51 = 0x7461447472617473;
LABEL_134:
            unint64_t v50 = 0xE900000000000065;
            break;
          case 18:
            unint64_t v50 = 0xE700000000000000;
            uint64_t v51 = 0x65746144646E65;
            break;
          case 19:
            unint64_t v50 = 0xE800000000000000;
            unsigned int v54 = 1634891108;
LABEL_137:
            uint64_t v51 = v54 | 0x6E6F697400000000;
            break;
          case 20:
            uint64_t v51 = 1701869940;
            break;
          case 21:
            unint64_t v50 = 0xE500000000000000;
            uint64_t v51 = 0x74696D696CLL;
            break;
          case 22:
            unint64_t v50 = 0xE700000000000000;
            uint64_t v51 = 0x63734174726F73;
            break;
          case 23:
            unint64_t v50 = 0xE800000000000000;
            uint64_t v51 = 0x6373654474726F73;
            break;
          case 24:
            unint64_t v50 = 0xE600000000000000;
            uint64_t v51 = 0x656372756F73;
            break;
          case 25:
            unint64_t v50 = 0xE500000000000000;
            uint64_t v51 = 0x65756C6176;
            break;
          default:
            break;
        }
        uint64_t v55 = v2;
        if (v46 == v51 && v45 == v50)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
LABEL_152:
          unint64_t v60 = *(void *)(v42 + 16);
          unint64_t v61 = *(void *)(v44 + 16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v38 = v60 >= v61;
          uint64_t v4 = v177;
          int v62 = !v38;
          uint64_t v2 = v55;
          goto LABEL_221;
        }
        char v57 = sub_1B2E837A8();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v57) {
          goto LABEL_152;
        }
        unint64_t v58 = 0xE400000000000000;
        uint64_t v59 = 1701667182;
        switch((int)v41)
        {
          case 1:
            uint64_t v59 = 0x6D614E7473726966;
            goto LABEL_174;
          case 2:
            unint64_t v58 = 0xE800000000000000;
            uint64_t v59 = 0x656D614E7473616CLL;
            break;
          case 3:
            unint64_t v58 = 0xE700000000000000;
            uint64_t v59 = 0x73736572646461;
            break;
          case 4:
            unint64_t v58 = 0xE800000000000000;
            uint64_t v59 = 0x7961646874726962;
            break;
          case 5:
            uint64_t v59 = 0x6D754E656E6F6870;
            uint64_t v63 = 7497058;
            goto LABEL_172;
          case 6:
            uint64_t v59 = 0x6464416C69616D65;
            uint64_t v64 = 1936942450;
            goto LABEL_162;
          case 7:
            uint64_t v59 = 0x6E6F6974616C6572;
            uint64_t v64 = 1885956211;
LABEL_162:
            unint64_t v58 = v64 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          case 8:
            unint64_t v58 = 0xE800000000000000;
            uint64_t v59 = 0x6565646E65747461;
            break;
          case 9:
            uint64_t v59 = 0x49746361746E6F63;
            uint64_t v63 = 7300718;
            goto LABEL_172;
          case 10:
            unint64_t v58 = 0xE800000000000000;
            unsigned int v65 = 1633906540;
            goto LABEL_177;
          case 11:
            uint64_t v59 = 1836020326;
            break;
          case 12:
            unint64_t v58 = 0xE200000000000000;
            uint64_t v59 = 28532;
            break;
          case 13:
            unint64_t v58 = 0x80000001B2E95700;
            uint64_t v59 = 0xD000000000000010;
            break;
          case 14:
            unint64_t v58 = 0xE800000000000000;
            uint64_t v59 = 0x7473657265746E69;
            break;
          case 15:
            unint64_t v58 = 0xE600000000000000;
            uint64_t v59 = 0x6E6F73726570;
            break;
          case 16:
            uint64_t v59 = 0x6765746143707061;
            uint64_t v63 = 7959151;
LABEL_172:
            unint64_t v58 = v63 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 17:
            uint64_t v59 = 0x7461447472617473;
LABEL_174:
            unint64_t v58 = 0xE900000000000065;
            break;
          case 18:
            unint64_t v58 = 0xE700000000000000;
            uint64_t v59 = 0x65746144646E65;
            break;
          case 19:
            unint64_t v58 = 0xE800000000000000;
            unsigned int v65 = 1634891108;
LABEL_177:
            uint64_t v59 = v65 | 0x6E6F697400000000;
            break;
          case 20:
            uint64_t v59 = 1701869940;
            break;
          case 21:
            unint64_t v58 = 0xE500000000000000;
            uint64_t v59 = 0x74696D696CLL;
            break;
          case 22:
            unint64_t v58 = 0xE700000000000000;
            uint64_t v59 = 0x63734174726F73;
            break;
          case 23:
            unint64_t v58 = 0xE800000000000000;
            uint64_t v59 = 0x6373654474726F73;
            break;
          case 24:
            unint64_t v58 = 0xE600000000000000;
            uint64_t v59 = 0x656372756F73;
            break;
          case 25:
            unint64_t v58 = 0xE500000000000000;
            uint64_t v59 = 0x65756C6176;
            break;
          default:
            break;
        }
        unint64_t v66 = 0xE400000000000000;
        uint64_t v67 = 1701667182;
        uint64_t v2 = v55;
        switch(v43)
        {
          case 1:
            uint64_t v67 = 0x6D614E7473726966;
            goto LABEL_204;
          case 2:
            unint64_t v66 = 0xE800000000000000;
            uint64_t v67 = 0x656D614E7473616CLL;
            break;
          case 3:
            unint64_t v66 = 0xE700000000000000;
            uint64_t v67 = 0x73736572646461;
            break;
          case 4:
            unint64_t v66 = 0xE800000000000000;
            uint64_t v67 = 0x7961646874726962;
            break;
          case 5:
            uint64_t v67 = 0x6D754E656E6F6870;
            uint64_t v68 = 7497058;
            goto LABEL_202;
          case 6:
            uint64_t v67 = 0x6464416C69616D65;
            uint64_t v69 = 1936942450;
            goto LABEL_192;
          case 7:
            uint64_t v67 = 0x6E6F6974616C6572;
            uint64_t v69 = 1885956211;
LABEL_192:
            unint64_t v66 = v69 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          case 8:
            unint64_t v66 = 0xE800000000000000;
            uint64_t v67 = 0x6565646E65747461;
            break;
          case 9:
            uint64_t v67 = 0x49746361746E6F63;
            uint64_t v68 = 7300718;
            goto LABEL_202;
          case 10:
            unint64_t v66 = 0xE800000000000000;
            unsigned int v70 = 1633906540;
            goto LABEL_207;
          case 11:
            uint64_t v67 = 1836020326;
            break;
          case 12:
            unint64_t v66 = 0xE200000000000000;
            uint64_t v67 = 28532;
            break;
          case 13:
            unint64_t v66 = 0x80000001B2E95700;
            uint64_t v67 = 0xD000000000000010;
            break;
          case 14:
            unint64_t v66 = 0xE800000000000000;
            uint64_t v67 = 0x7473657265746E69;
            break;
          case 15:
            unint64_t v66 = 0xE600000000000000;
            uint64_t v67 = 0x6E6F73726570;
            break;
          case 16:
            uint64_t v67 = 0x6765746143707061;
            uint64_t v68 = 7959151;
LABEL_202:
            unint64_t v66 = v68 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 17:
            uint64_t v67 = 0x7461447472617473;
LABEL_204:
            unint64_t v66 = 0xE900000000000065;
            break;
          case 18:
            unint64_t v66 = 0xE700000000000000;
            uint64_t v67 = 0x65746144646E65;
            break;
          case 19:
            unint64_t v66 = 0xE800000000000000;
            unsigned int v70 = 1634891108;
LABEL_207:
            uint64_t v67 = v70 | 0x6E6F697400000000;
            break;
          case 20:
            uint64_t v67 = 1701869940;
            break;
          case 21:
            unint64_t v66 = 0xE500000000000000;
            uint64_t v67 = 0x74696D696CLL;
            break;
          case 22:
            unint64_t v66 = 0xE700000000000000;
            uint64_t v67 = 0x63734174726F73;
            break;
          case 23:
            unint64_t v66 = 0xE800000000000000;
            uint64_t v67 = 0x6373654474726F73;
            break;
          case 24:
            unint64_t v66 = 0xE600000000000000;
            uint64_t v67 = 0x656372756F73;
            break;
          case 25:
            unint64_t v66 = 0xE500000000000000;
            uint64_t v67 = 0x65756C6176;
            break;
          default:
            break;
        }
        BOOL v71 = v59 == v67 && v58 == v66;
        uint64_t v4 = v177;
        if (v71) {
          int v62 = 0;
        }
        else {
          int v62 = sub_1B2E837A8();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_221:
        uint64_t v9 = v183;
        uint64_t v11 = v184;
        if ((v181 ^ v62)) {
          goto LABEL_224;
        }
        uint64_t v11 = v184 + 1;
      }
      while (v184 + 1 < v4);
      uint64_t v11 = v4;
LABEL_224:
      uint64_t v10 = v174;
      if (v181)
      {
        uint64_t v72 = v179;
        if (v11 >= v179)
        {
          if (v179 < v11)
          {
            uint64_t v73 = 24 * v11;
            uint64_t v74 = 24 * v179;
            uint64_t v75 = v11;
            do
            {
              if (v72 != --v75)
              {
                if (!v9) {
                  goto LABEL_423;
                }
                uint64_t v76 = v9 + v74;
                uint64_t v77 = v9 + v73;
                char v78 = *(unsigned char *)(v9 + v74);
                uint64_t v79 = *(void *)(v9 + v74 + 8);
                char v80 = *(unsigned char *)(v9 + v74 + 16);
                uint64_t v81 = *(void *)(v9 + v73 - 8);
                *(_OWORD *)uint64_t v76 = *(_OWORD *)(v9 + v73 - 24);
                *(void *)(v76 + 16) = v81;
                *(unsigned char *)(v77 - 24) = v78;
                *(void *)(v77 - 16) = v79;
                *(unsigned char *)(v77 - 8) = v80;
              }
              ++v72;
              v73 -= 24;
              v74 += 24;
            }
            while (v72 < v75);
          }
          goto LABEL_232;
        }
LABEL_417:
        __break(1u);
LABEL_418:
        __break(1u);
        goto LABEL_419;
      }
LABEL_232:
      if (v11 >= v4) {
        goto LABEL_323;
      }
      if (__OFSUB__(v11, v179)) {
        goto LABEL_415;
      }
      if (v11 - v179 < v172)
      {
        uint64_t v82 = v179;
        if (__OFADD__(v179, v172)) {
          goto LABEL_418;
        }
        if (v179 + v172 >= v4) {
          uint64_t v83 = v4;
        }
        else {
          uint64_t v83 = v179 + v172;
        }
        if (v83 < v179)
        {
LABEL_419:
          __break(1u);
          goto LABEL_420;
        }
        if (v11 == v83) {
          goto LABEL_324;
        }
        uint64_t v175 = v10;
        uint64_t v176 = v83;
        uint64_t v169 = v2;
        uint64_t v84 = v9 + 24 * v11;
        while (2)
        {
          uint64_t v178 = v84;
          uint64_t v185 = v11;
LABEL_243:
          char v85 = *(unsigned char *)v84;
          uint64_t v86 = *(void *)(v84 + 8);
          uint64_t v87 = v84 - 24;
          uint64_t v88 = *(void *)(v84 - 16);
          unint64_t v89 = 0xE400000000000000;
          uint64_t v90 = 1701667182;
          switch(*(unsigned char *)v84)
          {
            case 1:
              uint64_t v90 = 0x6D614E7473726966;
              goto LABEL_263;
            case 2:
              unint64_t v89 = 0xE800000000000000;
              uint64_t v90 = 0x656D614E7473616CLL;
              break;
            case 3:
              unint64_t v89 = 0xE700000000000000;
              uint64_t v90 = 0x73736572646461;
              break;
            case 4:
              unint64_t v89 = 0xE800000000000000;
              uint64_t v90 = 0x7961646874726962;
              break;
            case 5:
              uint64_t v90 = 0x6D754E656E6F6870;
              uint64_t v91 = 7497058;
              goto LABEL_261;
            case 6:
              uint64_t v90 = 0x6464416C69616D65;
              uint64_t v92 = 1936942450;
              goto LABEL_251;
            case 7:
              uint64_t v90 = 0x6E6F6974616C6572;
              uint64_t v92 = 1885956211;
LABEL_251:
              unint64_t v89 = v92 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
              break;
            case 8:
              unint64_t v89 = 0xE800000000000000;
              uint64_t v90 = 0x6565646E65747461;
              break;
            case 9:
              uint64_t v90 = 0x49746361746E6F63;
              uint64_t v91 = 7300718;
              goto LABEL_261;
            case 0xA:
              unint64_t v89 = 0xE800000000000000;
              unsigned int v93 = 1633906540;
              goto LABEL_266;
            case 0xB:
              uint64_t v90 = 1836020326;
              break;
            case 0xC:
              unint64_t v89 = 0xE200000000000000;
              uint64_t v90 = 28532;
              break;
            case 0xD:
              unint64_t v89 = 0x80000001B2E95700;
              uint64_t v90 = 0xD000000000000010;
              break;
            case 0xE:
              unint64_t v89 = 0xE800000000000000;
              uint64_t v90 = 0x7473657265746E69;
              break;
            case 0xF:
              unint64_t v89 = 0xE600000000000000;
              uint64_t v90 = 0x6E6F73726570;
              break;
            case 0x10:
              uint64_t v90 = 0x6765746143707061;
              uint64_t v91 = 7959151;
LABEL_261:
              unint64_t v89 = v91 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
              break;
            case 0x11:
              uint64_t v90 = 0x7461447472617473;
LABEL_263:
              unint64_t v89 = 0xE900000000000065;
              break;
            case 0x12:
              unint64_t v89 = 0xE700000000000000;
              uint64_t v90 = 0x65746144646E65;
              break;
            case 0x13:
              unint64_t v89 = 0xE800000000000000;
              unsigned int v93 = 1634891108;
LABEL_266:
              uint64_t v90 = v93 | 0x6E6F697400000000;
              break;
            case 0x14:
              uint64_t v90 = 1701869940;
              break;
            case 0x15:
              unint64_t v89 = 0xE500000000000000;
              uint64_t v90 = 0x74696D696CLL;
              break;
            case 0x16:
              unint64_t v89 = 0xE700000000000000;
              uint64_t v90 = 0x63734174726F73;
              break;
            case 0x17:
              unint64_t v89 = 0xE800000000000000;
              uint64_t v90 = 0x6373654474726F73;
              break;
            case 0x18:
              unint64_t v89 = 0xE600000000000000;
              uint64_t v90 = 0x656372756F73;
              break;
            case 0x19:
              unint64_t v89 = 0xE500000000000000;
              uint64_t v90 = 0x65756C6176;
              break;
            default:
              break;
          }
          unint64_t v94 = 0xE400000000000000;
          uint64_t v95 = 1701667182;
          switch(*(unsigned char *)(v84 - 24))
          {
            case 1:
              uint64_t v95 = 0x6D614E7473726966;
              goto LABEL_293;
            case 2:
              unint64_t v94 = 0xE800000000000000;
              uint64_t v95 = 0x656D614E7473616CLL;
              break;
            case 3:
              unint64_t v94 = 0xE700000000000000;
              uint64_t v95 = 0x73736572646461;
              break;
            case 4:
              unint64_t v94 = 0xE800000000000000;
              uint64_t v95 = 0x7961646874726962;
              break;
            case 5:
              uint64_t v95 = 0x6D754E656E6F6870;
              uint64_t v96 = 7497058;
              goto LABEL_291;
            case 6:
              uint64_t v95 = 0x6464416C69616D65;
              uint64_t v97 = 1936942450;
              goto LABEL_281;
            case 7:
              uint64_t v95 = 0x6E6F6974616C6572;
              uint64_t v97 = 1885956211;
LABEL_281:
              unint64_t v94 = v97 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
              break;
            case 8:
              unint64_t v94 = 0xE800000000000000;
              uint64_t v95 = 0x6565646E65747461;
              break;
            case 9:
              uint64_t v95 = 0x49746361746E6F63;
              uint64_t v96 = 7300718;
              goto LABEL_291;
            case 0xA:
              unint64_t v94 = 0xE800000000000000;
              unsigned int v98 = 1633906540;
              goto LABEL_296;
            case 0xB:
              uint64_t v95 = 1836020326;
              break;
            case 0xC:
              unint64_t v94 = 0xE200000000000000;
              uint64_t v95 = 28532;
              break;
            case 0xD:
              unint64_t v94 = 0x80000001B2E95700;
              uint64_t v95 = 0xD000000000000010;
              break;
            case 0xE:
              unint64_t v94 = 0xE800000000000000;
              uint64_t v95 = 0x7473657265746E69;
              break;
            case 0xF:
              unint64_t v94 = 0xE600000000000000;
              uint64_t v95 = 0x6E6F73726570;
              break;
            case 0x10:
              uint64_t v95 = 0x6765746143707061;
              uint64_t v96 = 7959151;
LABEL_291:
              unint64_t v94 = v96 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
              break;
            case 0x11:
              uint64_t v95 = 0x7461447472617473;
LABEL_293:
              unint64_t v94 = 0xE900000000000065;
              break;
            case 0x12:
              unint64_t v94 = 0xE700000000000000;
              uint64_t v95 = 0x65746144646E65;
              break;
            case 0x13:
              unint64_t v94 = 0xE800000000000000;
              unsigned int v98 = 1634891108;
LABEL_296:
              uint64_t v95 = v98 | 0x6E6F697400000000;
              break;
            case 0x14:
              uint64_t v95 = 1701869940;
              break;
            case 0x15:
              unint64_t v94 = 0xE500000000000000;
              uint64_t v95 = 0x74696D696CLL;
              break;
            case 0x16:
              unint64_t v94 = 0xE700000000000000;
              uint64_t v95 = 0x63734174726F73;
              break;
            case 0x17:
              unint64_t v94 = 0xE800000000000000;
              uint64_t v95 = 0x6373654474726F73;
              break;
            case 0x18:
              unint64_t v94 = 0xE600000000000000;
              uint64_t v95 = 0x656372756F73;
              break;
            case 0x19:
              unint64_t v94 = 0xE500000000000000;
              uint64_t v95 = 0x65756C6176;
              break;
            default:
              break;
          }
          if (v90 == v95 && v89 == v94)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v182 = *(unsigned char *)(v84 - 24);
            char v100 = sub_1B2E837A8();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v100 & 1) == 0)
            {
              uint64_t v101 = sub_1B2CA6C38(v85);
              uint64_t v103 = v102;
              if (v101 == sub_1B2CA6C38(v182) && v103 == v104)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
LABEL_320:
                uint64_t v109 = v185;
LABEL_321:
                uint64_t v11 = v109 + 1;
                uint64_t v82 = v179;
                uint64_t v84 = v178 + 24;
                if (v11 == v176)
                {
                  uint64_t v11 = v176;
                  uint64_t v2 = v169;
                  uint64_t v10 = v175;
                  goto LABEL_324;
                }
                continue;
              }
              char v106 = sub_1B2E837A8();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v87 = v84 - 24;
              if ((v106 & 1) == 0) {
                goto LABEL_320;
              }
              goto LABEL_316;
            }
          }
          break;
        }
        unint64_t v107 = *(void *)(v86 + 16);
        unint64_t v108 = *(void *)(v88 + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v107 >= v108) {
          goto LABEL_320;
        }
LABEL_316:
        uint64_t v109 = v185;
        if (!v183) {
          goto LABEL_421;
        }
        char v110 = *(unsigned char *)v84;
        uint64_t v111 = *(void *)(v84 + 8);
        char v112 = *(unsigned char *)(v84 + 16);
        *(_OWORD *)uint64_t v84 = *(_OWORD *)v87;
        *(void *)(v84 + 16) = *(void *)(v87 + 16);
        *(void *)(v84 - 16) = v111;
        *(unsigned char *)(v84 - 8) = v112;
        *(unsigned char *)(v84 - 24) = v110;
        v84 -= 24;
        if (v185 == ++v82) {
          goto LABEL_321;
        }
        goto LABEL_243;
      }
LABEL_323:
      uint64_t v82 = v179;
LABEL_324:
      if (v11 < v82)
      {
LABEL_414:
        __break(1u);
LABEL_415:
        __break(1u);
LABEL_416:
        __break(1u);
        goto LABEL_417;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_1B2DCA454(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v114 = *((void *)v10 + 2);
      unint64_t v113 = *((void *)v10 + 3);
      unint64_t v115 = v114 + 1;
      uint64_t v9 = v183;
      if (v114 >= v113 >> 1)
      {
        uint64_t v9 = v183;
        uint64_t v10 = sub_1B2DCA454((char *)(v113 > 1), v114 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v115;
      uint64_t v116 = v10 + 32;
      uint64_t v117 = &v10[16 * v114 + 32];
      *(void *)uint64_t v117 = v179;
      *((void *)v117 + 1) = v11;
      uint64_t v186 = v11;
      if (v114)
      {
        while (1)
        {
          unint64_t v118 = v115 - 1;
          if (v115 >= 4)
          {
            uint64_t v123 = &v116[16 * v115];
            uint64_t v124 = *((void *)v123 - 8);
            uint64_t v125 = *((void *)v123 - 7);
            BOOL v129 = __OFSUB__(v125, v124);
            uint64_t v126 = v125 - v124;
            if (v129) {
              goto LABEL_399;
            }
            uint64_t v128 = *((void *)v123 - 6);
            uint64_t v127 = *((void *)v123 - 5);
            BOOL v129 = __OFSUB__(v127, v128);
            uint64_t v121 = v127 - v128;
            char v122 = v129;
            if (v129) {
              goto LABEL_400;
            }
            unint64_t v130 = v115 - 2;
            uint64_t v131 = &v116[16 * v115 - 32];
            uint64_t v133 = *(void *)v131;
            uint64_t v132 = *((void *)v131 + 1);
            BOOL v129 = __OFSUB__(v132, v133);
            uint64_t v134 = v132 - v133;
            if (v129) {
              goto LABEL_401;
            }
            BOOL v129 = __OFADD__(v121, v134);
            uint64_t v135 = v121 + v134;
            if (v129) {
              goto LABEL_403;
            }
            if (v135 >= v126)
            {
              __n128 v153 = &v116[16 * v118];
              uint64_t v155 = *(void *)v153;
              uint64_t v154 = *((void *)v153 + 1);
              BOOL v129 = __OFSUB__(v154, v155);
              uint64_t v156 = v154 - v155;
              if (v129) {
                goto LABEL_409;
              }
              BOOL v146 = v121 < v156;
              goto LABEL_361;
            }
          }
          else
          {
            if (v115 != 3)
            {
              uint64_t v147 = *((void *)v10 + 4);
              uint64_t v148 = *((void *)v10 + 5);
              BOOL v129 = __OFSUB__(v148, v147);
              uint64_t v140 = v148 - v147;
              char v141 = v129;
              goto LABEL_355;
            }
            uint64_t v120 = *((void *)v10 + 4);
            uint64_t v119 = *((void *)v10 + 5);
            BOOL v129 = __OFSUB__(v119, v120);
            uint64_t v121 = v119 - v120;
            char v122 = v129;
          }
          if (v122) {
            goto LABEL_402;
          }
          unint64_t v130 = v115 - 2;
          uint64_t v136 = &v116[16 * v115 - 32];
          uint64_t v138 = *(void *)v136;
          uint64_t v137 = *((void *)v136 + 1);
          BOOL v139 = __OFSUB__(v137, v138);
          uint64_t v140 = v137 - v138;
          char v141 = v139;
          if (v139) {
            goto LABEL_404;
          }
          uint64_t v142 = &v116[16 * v118];
          uint64_t v144 = *(void *)v142;
          uint64_t v143 = *((void *)v142 + 1);
          BOOL v129 = __OFSUB__(v143, v144);
          uint64_t v145 = v143 - v144;
          if (v129) {
            goto LABEL_407;
          }
          if (__OFADD__(v140, v145)) {
            goto LABEL_408;
          }
          if (v140 + v145 >= v121)
          {
            BOOL v146 = v121 < v145;
LABEL_361:
            if (v146) {
              unint64_t v118 = v130;
            }
            goto LABEL_363;
          }
LABEL_355:
          if (v141) {
            goto LABEL_405;
          }
          uint64_t v149 = &v116[16 * v118];
          uint64_t v151 = *(void *)v149;
          uint64_t v150 = *((void *)v149 + 1);
          BOOL v129 = __OFSUB__(v150, v151);
          uint64_t v152 = v150 - v151;
          if (v129) {
            goto LABEL_406;
          }
          if (v152 < v140) {
            goto LABEL_372;
          }
LABEL_363:
          unint64_t v157 = v118 - 1;
          if (v118 - 1 >= v115)
          {
            __break(1u);
LABEL_396:
            __break(1u);
LABEL_397:
            __break(1u);
LABEL_398:
            __break(1u);
LABEL_399:
            __break(1u);
LABEL_400:
            __break(1u);
LABEL_401:
            __break(1u);
LABEL_402:
            __break(1u);
LABEL_403:
            __break(1u);
LABEL_404:
            __break(1u);
LABEL_405:
            __break(1u);
LABEL_406:
            __break(1u);
LABEL_407:
            __break(1u);
LABEL_408:
            __break(1u);
LABEL_409:
            __break(1u);
            goto LABEL_410;
          }
          if (!v9) {
            goto LABEL_422;
          }
          long long v158 = &v116[16 * v157];
          uint64_t v159 = *(void *)v158;
          uint64_t v160 = &v116[16 * v118];
          uint64_t v161 = *((void *)v160 + 1);
          sub_1B2C9DB1C((char *)(v9 + 24 * *(void *)v158), (char *)(v9 + 24 * *(void *)v160), v9 + 24 * v161, v180);
          if (v2)
          {
LABEL_390:
            swift_bridgeObjectRelease();
            if (v177 >= -1) {
              goto LABEL_393;
            }
            __break(1u);
LABEL_392:
            swift_bridgeObjectRelease();
            if (v177 >= -1)
            {
LABEL_393:
              *(void *)(v173 + 16) = 0;
              return swift_bridgeObjectRelease();
            }
LABEL_420:
            __break(1u);
LABEL_421:
            __break(1u);
LABEL_422:
            __break(1u);
LABEL_423:
            __break(1u);
LABEL_424:
            __break(1u);
            JUMPOUT(0x1B2C9CAC0);
          }
          if (v161 < v159) {
            goto LABEL_396;
          }
          if (v118 > *((void *)v10 + 2)) {
            goto LABEL_397;
          }
          *(void *)long long v158 = v159;
          *(void *)&v116[16 * v157 + 8] = v161;
          unint64_t v162 = *((void *)v10 + 2);
          if (v118 >= v162) {
            goto LABEL_398;
          }
          unint64_t v115 = v162 - 1;
          memmove(&v116[16 * v118], v160 + 16, 16 * (v162 - 1 - v118));
          *((void *)v10 + 2) = v162 - 1;
          uint64_t v9 = v183;
          if (v162 <= 2) {
            goto LABEL_372;
          }
        }
      }
      unint64_t v115 = 1;
LABEL_372:
      uint64_t v4 = v177;
      uint64_t v8 = v186;
      if (v186 >= v177)
      {
LABEL_378:
        if (v115 < 2) {
          goto LABEL_392;
        }
        uint64_t v163 = *v171;
        while (1)
        {
          unint64_t v164 = v115 - 2;
          if (v115 < 2) {
            break;
          }
          if (!v163) {
            goto LABEL_424;
          }
          uint64_t v165 = *(void *)&v10[16 * v164 + 32];
          uint64_t v166 = *(void *)&v10[16 * v115 + 24];
          sub_1B2C9DB1C((char *)(v163 + 24 * v165), (char *)(v163 + 24 * *(void *)&v10[16 * v115 + 16]), v163 + 24 * v166, v180);
          if (v2) {
            goto LABEL_390;
          }
          if (v166 < v165) {
            goto LABEL_411;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = sub_1B2DCA54C();
          }
          if (v164 >= *((void *)v10 + 2)) {
            goto LABEL_412;
          }
          uint64_t v167 = &v10[16 * v164 + 32];
          *(void *)uint64_t v167 = v165;
          *((void *)v167 + 1) = v166;
          unint64_t v168 = *((void *)v10 + 2);
          if (v115 > v168) {
            goto LABEL_413;
          }
          memmove(&v10[16 * v115 + 16], &v10[16 * v115 + 32], 16 * (v168 - v115));
          *((void *)v10 + 2) = v168 - 1;
          unint64_t v115 = v168 - 1;
          if (v168 <= 2) {
            goto LABEL_392;
          }
        }
LABEL_410:
        __break(1u);
LABEL_411:
        __break(1u);
LABEL_412:
        __break(1u);
LABEL_413:
        __break(1u);
        goto LABEL_414;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
LABEL_76:
    unint64_t v36 = *(void *)(v15 + 16);
    unint64_t v37 = *(void *)(v18 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v38 = v36 >= v37;
    uint64_t v4 = v177;
    int v39 = !v38;
    int v181 = v39;
    uint64_t v2 = v12;
    goto LABEL_82;
  }
  if (v4 < 0) {
    goto LABEL_416;
  }
  if (v4) {
    return sub_1B2C9CE00(0, v4, 1, a1);
  }
  return result;
}

uint64_t sub_1B2C9CE00(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v43 = a3;
  uint64_t v40 = result;
  if (a3 == a2) {
    return result;
  }
  uint64_t v42 = *a4;
  uint64_t v4 = (unsigned __int8 *)(*a4 + 24 * a3);
  do
  {
    uint64_t v5 = v40;
    uint64_t v41 = v4;
    while (1)
    {
      int v6 = *v4;
      uint64_t v7 = *((void *)v4 + 1);
      uint64_t v8 = *(v4 - 24);
      uint64_t v9 = *((void *)v4 - 2);
      unint64_t v10 = 0xE400000000000000;
      uint64_t v11 = 1701667182;
      switch(*v4)
      {
        case 1u:
          uint64_t v11 = 0x6D614E7473726966;
          goto LABEL_24;
        case 2u:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v11 = 0x656D614E7473616CLL;
          break;
        case 3u:
          unint64_t v10 = 0xE700000000000000;
          uint64_t v11 = 0x73736572646461;
          break;
        case 4u:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v11 = 0x7961646874726962;
          break;
        case 5u:
          uint64_t v11 = 0x6D754E656E6F6870;
          uint64_t v12 = 7497058;
          goto LABEL_22;
        case 6u:
          uint64_t v11 = 0x6464416C69616D65;
          uint64_t v13 = 1936942450;
          goto LABEL_12;
        case 7u:
          uint64_t v11 = 0x6E6F6974616C6572;
          uint64_t v13 = 1885956211;
LABEL_12:
          unint64_t v10 = v13 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8u:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v11 = 0x6565646E65747461;
          break;
        case 9u:
          uint64_t v11 = 0x49746361746E6F63;
          uint64_t v12 = 7300718;
          goto LABEL_22;
        case 0xAu:
          unint64_t v10 = 0xE800000000000000;
          unsigned int v14 = 1633906540;
          goto LABEL_27;
        case 0xBu:
          uint64_t v11 = 1836020326;
          break;
        case 0xCu:
          unint64_t v10 = 0xE200000000000000;
          uint64_t v11 = 28532;
          break;
        case 0xDu:
          unint64_t v10 = 0x80000001B2E95700;
          uint64_t v11 = 0xD000000000000010;
          break;
        case 0xEu:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v11 = 0x7473657265746E69;
          break;
        case 0xFu:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x6E6F73726570;
          break;
        case 0x10u:
          uint64_t v11 = 0x6765746143707061;
          uint64_t v12 = 7959151;
LABEL_22:
          unint64_t v10 = v12 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0x11u:
          uint64_t v11 = 0x7461447472617473;
LABEL_24:
          unint64_t v10 = 0xE900000000000065;
          break;
        case 0x12u:
          unint64_t v10 = 0xE700000000000000;
          uint64_t v11 = 0x65746144646E65;
          break;
        case 0x13u:
          unint64_t v10 = 0xE800000000000000;
          unsigned int v14 = 1634891108;
LABEL_27:
          uint64_t v11 = v14 | 0x6E6F697400000000;
          break;
        case 0x14u:
          uint64_t v11 = 1701869940;
          break;
        case 0x15u:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v11 = 0x74696D696CLL;
          break;
        case 0x16u:
          unint64_t v10 = 0xE700000000000000;
          uint64_t v11 = 0x63734174726F73;
          break;
        case 0x17u:
          unint64_t v10 = 0xE800000000000000;
          uint64_t v11 = 0x6373654474726F73;
          break;
        case 0x18u:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x656372756F73;
          break;
        case 0x19u:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v11 = 0x65756C6176;
          break;
        default:
          break;
      }
      unint64_t v15 = 0xE400000000000000;
      uint64_t v16 = 1701667182;
      switch(*(v4 - 24))
      {
        case 1u:
          uint64_t v16 = 0x6D614E7473726966;
          goto LABEL_54;
        case 2u:
          unint64_t v15 = 0xE800000000000000;
          uint64_t v16 = 0x656D614E7473616CLL;
          break;
        case 3u:
          unint64_t v15 = 0xE700000000000000;
          uint64_t v16 = 0x73736572646461;
          break;
        case 4u:
          unint64_t v15 = 0xE800000000000000;
          uint64_t v16 = 0x7961646874726962;
          break;
        case 5u:
          uint64_t v16 = 0x6D754E656E6F6870;
          uint64_t v17 = 7497058;
          goto LABEL_52;
        case 6u:
          uint64_t v16 = 0x6464416C69616D65;
          uint64_t v18 = 1936942450;
          goto LABEL_42;
        case 7u:
          uint64_t v16 = 0x6E6F6974616C6572;
          uint64_t v18 = 1885956211;
LABEL_42:
          unint64_t v15 = v18 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8u:
          unint64_t v15 = 0xE800000000000000;
          uint64_t v16 = 0x6565646E65747461;
          break;
        case 9u:
          uint64_t v16 = 0x49746361746E6F63;
          uint64_t v17 = 7300718;
          goto LABEL_52;
        case 0xAu:
          unint64_t v15 = 0xE800000000000000;
          unsigned int v19 = 1633906540;
          goto LABEL_57;
        case 0xBu:
          uint64_t v16 = 1836020326;
          break;
        case 0xCu:
          unint64_t v15 = 0xE200000000000000;
          uint64_t v16 = 28532;
          break;
        case 0xDu:
          unint64_t v15 = 0x80000001B2E95700;
          uint64_t v16 = 0xD000000000000010;
          break;
        case 0xEu:
          unint64_t v15 = 0xE800000000000000;
          uint64_t v16 = 0x7473657265746E69;
          break;
        case 0xFu:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v16 = 0x6E6F73726570;
          break;
        case 0x10u:
          uint64_t v16 = 0x6765746143707061;
          uint64_t v17 = 7959151;
LABEL_52:
          unint64_t v15 = v17 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0x11u:
          uint64_t v16 = 0x7461447472617473;
LABEL_54:
          unint64_t v15 = 0xE900000000000065;
          break;
        case 0x12u:
          unint64_t v15 = 0xE700000000000000;
          uint64_t v16 = 0x65746144646E65;
          break;
        case 0x13u:
          unint64_t v15 = 0xE800000000000000;
          unsigned int v19 = 1634891108;
LABEL_57:
          uint64_t v16 = v19 | 0x6E6F697400000000;
          break;
        case 0x14u:
          uint64_t v16 = 1701869940;
          break;
        case 0x15u:
          unint64_t v15 = 0xE500000000000000;
          uint64_t v16 = 0x74696D696CLL;
          break;
        case 0x16u:
          unint64_t v15 = 0xE700000000000000;
          uint64_t v16 = 0x63734174726F73;
          break;
        case 0x17u:
          unint64_t v15 = 0xE800000000000000;
          uint64_t v16 = 0x6373654474726F73;
          break;
        case 0x18u:
          unint64_t v15 = 0xE600000000000000;
          uint64_t v16 = 0x656372756F73;
          break;
        case 0x19u:
          unint64_t v15 = 0xE500000000000000;
          uint64_t v16 = 0x65756C6176;
          break;
        default:
          break;
      }
      if (v11 != v16 || v10 != v15) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
LABEL_72:
      unint64_t v24 = *(void *)(v7 + 16);
      unint64_t v25 = *(void *)(v9 + 16);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v24 >= v25) {
        goto LABEL_141;
      }
LABEL_137:
      if (!v42)
      {
        __break(1u);
        JUMPOUT(0x1B2C9D97CLL);
      }
      unsigned __int8 v36 = *v4;
      uint64_t v37 = *((void *)v4 + 1);
      unsigned __int8 v38 = v4[16];
      *(_OWORD *)uint64_t v4 = *(_OWORD *)(v4 - 24);
      *((void *)v4 + 2) = *((void *)v4 - 1);
      *((void *)v4 - 2) = v37;
      *(v4 - 8) = v38;
      *(v4 - 24) = v36;
      v4 -= 24;
      if (v43 == ++v5) {
        goto LABEL_141;
      }
    }
    char v21 = sub_1B2E837A8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_72;
    }
    unint64_t v22 = 0xE400000000000000;
    uint64_t v23 = 1701667182;
    switch(v6)
    {
      case 1:
        uint64_t v23 = 0x6D614E7473726966;
        goto LABEL_92;
      case 2:
        unint64_t v22 = 0xE800000000000000;
        uint64_t v23 = 0x656D614E7473616CLL;
        break;
      case 3:
        unint64_t v22 = 0xE700000000000000;
        uint64_t v23 = 0x73736572646461;
        break;
      case 4:
        unint64_t v22 = 0xE800000000000000;
        uint64_t v23 = 0x7961646874726962;
        break;
      case 5:
        uint64_t v23 = 0x6D754E656E6F6870;
        uint64_t v26 = 7497058;
        goto LABEL_90;
      case 6:
        uint64_t v23 = 0x6464416C69616D65;
        uint64_t v27 = 1936942450;
        goto LABEL_80;
      case 7:
        uint64_t v23 = 0x6E6F6974616C6572;
        uint64_t v27 = 1885956211;
LABEL_80:
        unint64_t v22 = v27 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
        break;
      case 8:
        unint64_t v22 = 0xE800000000000000;
        uint64_t v23 = 0x6565646E65747461;
        break;
      case 9:
        uint64_t v23 = 0x49746361746E6F63;
        uint64_t v26 = 7300718;
        goto LABEL_90;
      case 10:
        unint64_t v22 = 0xE800000000000000;
        unsigned int v28 = 1633906540;
        goto LABEL_95;
      case 11:
        uint64_t v23 = 1836020326;
        break;
      case 12:
        unint64_t v22 = 0xE200000000000000;
        uint64_t v23 = 28532;
        break;
      case 13:
        unint64_t v22 = 0x80000001B2E95700;
        uint64_t v23 = 0xD000000000000010;
        break;
      case 14:
        unint64_t v22 = 0xE800000000000000;
        uint64_t v23 = 0x7473657265746E69;
        break;
      case 15:
        unint64_t v22 = 0xE600000000000000;
        uint64_t v23 = 0x6E6F73726570;
        break;
      case 16:
        uint64_t v23 = 0x6765746143707061;
        uint64_t v26 = 7959151;
LABEL_90:
        unint64_t v22 = v26 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
        break;
      case 17:
        uint64_t v23 = 0x7461447472617473;
LABEL_92:
        unint64_t v22 = 0xE900000000000065;
        break;
      case 18:
        unint64_t v22 = 0xE700000000000000;
        uint64_t v23 = 0x65746144646E65;
        break;
      case 19:
        unint64_t v22 = 0xE800000000000000;
        unsigned int v28 = 1634891108;
LABEL_95:
        uint64_t v23 = v28 | 0x6E6F697400000000;
        break;
      case 20:
        uint64_t v23 = 1701869940;
        break;
      case 21:
        unint64_t v22 = 0xE500000000000000;
        uint64_t v23 = 0x74696D696CLL;
        break;
      case 22:
        unint64_t v22 = 0xE700000000000000;
        uint64_t v23 = 0x63734174726F73;
        break;
      case 23:
        unint64_t v22 = 0xE800000000000000;
        uint64_t v23 = 0x6373654474726F73;
        break;
      case 24:
        unint64_t v22 = 0xE600000000000000;
        uint64_t v23 = 0x656372756F73;
        break;
      case 25:
        unint64_t v22 = 0xE500000000000000;
        uint64_t v23 = 0x65756C6176;
        break;
      default:
        break;
    }
    unint64_t v29 = 0xE400000000000000;
    uint64_t v30 = 1701667182;
    switch(v8)
    {
      case 1:
        uint64_t v30 = 0x6D614E7473726966;
        goto LABEL_122;
      case 2:
        unint64_t v29 = 0xE800000000000000;
        uint64_t v30 = 0x656D614E7473616CLL;
        break;
      case 3:
        unint64_t v29 = 0xE700000000000000;
        uint64_t v30 = 0x73736572646461;
        break;
      case 4:
        unint64_t v29 = 0xE800000000000000;
        uint64_t v30 = 0x7961646874726962;
        break;
      case 5:
        uint64_t v30 = 0x6D754E656E6F6870;
        uint64_t v31 = 7497058;
        goto LABEL_120;
      case 6:
        uint64_t v30 = 0x6464416C69616D65;
        uint64_t v32 = 1936942450;
        goto LABEL_110;
      case 7:
        uint64_t v30 = 0x6E6F6974616C6572;
        uint64_t v32 = 1885956211;
LABEL_110:
        unint64_t v29 = v32 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
        break;
      case 8:
        unint64_t v29 = 0xE800000000000000;
        uint64_t v30 = 0x6565646E65747461;
        break;
      case 9:
        uint64_t v30 = 0x49746361746E6F63;
        uint64_t v31 = 7300718;
        goto LABEL_120;
      case 10:
        unint64_t v29 = 0xE800000000000000;
        unsigned int v33 = 1633906540;
        goto LABEL_125;
      case 11:
        uint64_t v30 = 1836020326;
        break;
      case 12:
        unint64_t v29 = 0xE200000000000000;
        uint64_t v30 = 28532;
        break;
      case 13:
        unint64_t v29 = 0x80000001B2E95700;
        uint64_t v30 = 0xD000000000000010;
        break;
      case 14:
        unint64_t v29 = 0xE800000000000000;
        uint64_t v30 = 0x7473657265746E69;
        break;
      case 15:
        unint64_t v29 = 0xE600000000000000;
        uint64_t v30 = 0x6E6F73726570;
        break;
      case 16:
        uint64_t v30 = 0x6765746143707061;
        uint64_t v31 = 7959151;
LABEL_120:
        unint64_t v29 = v31 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
        break;
      case 17:
        uint64_t v30 = 0x7461447472617473;
LABEL_122:
        unint64_t v29 = 0xE900000000000065;
        break;
      case 18:
        unint64_t v29 = 0xE700000000000000;
        uint64_t v30 = 0x65746144646E65;
        break;
      case 19:
        unint64_t v29 = 0xE800000000000000;
        unsigned int v33 = 1634891108;
LABEL_125:
        uint64_t v30 = v33 | 0x6E6F697400000000;
        break;
      case 20:
        uint64_t v30 = 1701869940;
        break;
      case 21:
        unint64_t v29 = 0xE500000000000000;
        uint64_t v30 = 0x74696D696CLL;
        break;
      case 22:
        unint64_t v29 = 0xE700000000000000;
        uint64_t v30 = 0x63734174726F73;
        break;
      case 23:
        unint64_t v29 = 0xE800000000000000;
        uint64_t v30 = 0x6373654474726F73;
        break;
      case 24:
        unint64_t v29 = 0xE600000000000000;
        uint64_t v30 = 0x656372756F73;
        break;
      case 25:
        unint64_t v29 = 0xE500000000000000;
        uint64_t v30 = 0x65756C6176;
        break;
      default:
        break;
    }
    if (v23 != v30 || v22 != v29)
    {
      char v35 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v35 & 1) == 0) {
        goto LABEL_141;
      }
      goto LABEL_137;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease_n();
LABEL_141:
    uint64_t v4 = v41 + 24;
    ++v43;
  }
  while (v43 != a2);
  return result;
}

uint64_t sub_1B2C9DB1C(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  unint64_t v5 = a3;
  int v6 = a2;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  if (v9 >= v11)
  {
    sub_1B29BEF54(a2, (uint64_t)(a3 - (void)a2) / 24, a4);
    uint64_t v12 = (unsigned __int8 *)&v4[24 * v11];
    uint64_t v87 = a1;
    if (a1 >= v6 || v10 < 24)
    {
      unsigned int v14 = v6;
      goto LABEL_281;
    }
    unsigned int v14 = v6;
    uint64_t v86 = v4;
    while (1)
    {
      unint64_t v89 = v5;
      unsigned int v49 = v12 - 24;
      int v50 = *(v12 - 24);
      uint64_t v51 = *((void *)v12 - 2);
      unsigned int v93 = v14;
      unsigned int v53 = *(v14 - 24);
      v14 -= 24;
      uint64_t v52 = v53;
      uint64_t v54 = *((void *)v14 + 1);
      unint64_t v55 = 0xE400000000000000;
      uint64_t v56 = 1701667182;
      switch(*(v12 - 24))
      {
        case 1u:
          uint64_t v56 = 0x6D614E7473726966;
          goto LABEL_177;
        case 2u:
          unint64_t v55 = 0xE800000000000000;
          uint64_t v56 = 0x656D614E7473616CLL;
          break;
        case 3u:
          unint64_t v55 = 0xE700000000000000;
          uint64_t v56 = 0x73736572646461;
          break;
        case 4u:
          unint64_t v55 = 0xE800000000000000;
          uint64_t v56 = 0x7961646874726962;
          break;
        case 5u:
          uint64_t v56 = 0x6D754E656E6F6870;
          uint64_t v57 = 7497058;
          goto LABEL_175;
        case 6u:
          uint64_t v56 = 0x6464416C69616D65;
          uint64_t v58 = 1936942450;
          goto LABEL_165;
        case 7u:
          uint64_t v56 = 0x6E6F6974616C6572;
          uint64_t v58 = 1885956211;
LABEL_165:
          unint64_t v55 = v58 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8u:
          unint64_t v55 = 0xE800000000000000;
          uint64_t v56 = 0x6565646E65747461;
          break;
        case 9u:
          uint64_t v56 = 0x49746361746E6F63;
          uint64_t v57 = 7300718;
          goto LABEL_175;
        case 0xAu:
          unint64_t v55 = 0xE800000000000000;
          unsigned int v59 = 1633906540;
          goto LABEL_180;
        case 0xBu:
          uint64_t v56 = 1836020326;
          break;
        case 0xCu:
          unint64_t v55 = 0xE200000000000000;
          uint64_t v56 = 28532;
          break;
        case 0xDu:
          unint64_t v55 = 0x80000001B2E95700;
          uint64_t v56 = 0xD000000000000010;
          break;
        case 0xEu:
          unint64_t v55 = 0xE800000000000000;
          uint64_t v56 = 0x7473657265746E69;
          break;
        case 0xFu:
          unint64_t v55 = 0xE600000000000000;
          uint64_t v56 = 0x6E6F73726570;
          break;
        case 0x10u:
          uint64_t v56 = 0x6765746143707061;
          uint64_t v57 = 7959151;
LABEL_175:
          unint64_t v55 = v57 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0x11u:
          uint64_t v56 = 0x7461447472617473;
LABEL_177:
          unint64_t v55 = 0xE900000000000065;
          break;
        case 0x12u:
          unint64_t v55 = 0xE700000000000000;
          uint64_t v56 = 0x65746144646E65;
          break;
        case 0x13u:
          unint64_t v55 = 0xE800000000000000;
          unsigned int v59 = 1634891108;
LABEL_180:
          uint64_t v56 = v59 | 0x6E6F697400000000;
          break;
        case 0x14u:
          uint64_t v56 = 1701869940;
          break;
        case 0x15u:
          unint64_t v55 = 0xE500000000000000;
          uint64_t v56 = 0x74696D696CLL;
          break;
        case 0x16u:
          unint64_t v55 = 0xE700000000000000;
          uint64_t v56 = 0x63734174726F73;
          break;
        case 0x17u:
          unint64_t v55 = 0xE800000000000000;
          uint64_t v56 = 0x6373654474726F73;
          break;
        case 0x18u:
          unint64_t v55 = 0xE600000000000000;
          uint64_t v56 = 0x656372756F73;
          break;
        case 0x19u:
          unint64_t v55 = 0xE500000000000000;
          uint64_t v56 = 0x65756C6176;
          break;
        default:
          break;
      }
      unint64_t v60 = 0xE400000000000000;
      uint64_t v61 = 1701667182;
      switch(v52)
      {
        case 1:
          uint64_t v61 = 0x6D614E7473726966;
          goto LABEL_207;
        case 2:
          unint64_t v60 = 0xE800000000000000;
          uint64_t v61 = 0x656D614E7473616CLL;
          break;
        case 3:
          unint64_t v60 = 0xE700000000000000;
          uint64_t v61 = 0x73736572646461;
          break;
        case 4:
          unint64_t v60 = 0xE800000000000000;
          uint64_t v61 = 0x7961646874726962;
          break;
        case 5:
          uint64_t v61 = 0x6D754E656E6F6870;
          uint64_t v62 = 7497058;
          goto LABEL_205;
        case 6:
          uint64_t v61 = 0x6464416C69616D65;
          uint64_t v63 = 1936942450;
          goto LABEL_195;
        case 7:
          uint64_t v61 = 0x6E6F6974616C6572;
          uint64_t v63 = 1885956211;
LABEL_195:
          unint64_t v60 = v63 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8:
          unint64_t v60 = 0xE800000000000000;
          uint64_t v61 = 0x6565646E65747461;
          break;
        case 9:
          uint64_t v61 = 0x49746361746E6F63;
          uint64_t v62 = 7300718;
          goto LABEL_205;
        case 10:
          unint64_t v60 = 0xE800000000000000;
          unsigned int v64 = 1633906540;
          goto LABEL_210;
        case 11:
          uint64_t v61 = 1836020326;
          break;
        case 12:
          unint64_t v60 = 0xE200000000000000;
          uint64_t v61 = 28532;
          break;
        case 13:
          unint64_t v60 = 0x80000001B2E95700;
          uint64_t v61 = 0xD000000000000010;
          break;
        case 14:
          unint64_t v60 = 0xE800000000000000;
          uint64_t v61 = 0x7473657265746E69;
          break;
        case 15:
          unint64_t v60 = 0xE600000000000000;
          uint64_t v61 = 0x6E6F73726570;
          break;
        case 16:
          uint64_t v61 = 0x6765746143707061;
          uint64_t v62 = 7959151;
LABEL_205:
          unint64_t v60 = v62 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 17:
          uint64_t v61 = 0x7461447472617473;
LABEL_207:
          unint64_t v60 = 0xE900000000000065;
          break;
        case 18:
          unint64_t v60 = 0xE700000000000000;
          uint64_t v61 = 0x65746144646E65;
          break;
        case 19:
          unint64_t v60 = 0xE800000000000000;
          unsigned int v64 = 1634891108;
LABEL_210:
          uint64_t v61 = v64 | 0x6E6F697400000000;
          break;
        case 20:
          uint64_t v61 = 1701869940;
          break;
        case 21:
          unint64_t v60 = 0xE500000000000000;
          uint64_t v61 = 0x74696D696CLL;
          break;
        case 22:
          unint64_t v60 = 0xE700000000000000;
          uint64_t v61 = 0x63734174726F73;
          break;
        case 23:
          unint64_t v60 = 0xE800000000000000;
          uint64_t v61 = 0x6373654474726F73;
          break;
        case 24:
          unint64_t v60 = 0xE600000000000000;
          uint64_t v61 = 0x656372756F73;
          break;
        case 25:
          unint64_t v60 = 0xE500000000000000;
          uint64_t v61 = 0x65756C6176;
          break;
        default:
          break;
      }
      uint64_t v91 = v12;
      if (v56 == v61 && v55 == v60) {
        break;
      }
      char v66 = sub_1B2E837A8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v66) {
        goto LABEL_225;
      }
      unint64_t v67 = 0xE400000000000000;
      uint64_t v68 = 1701667182;
      switch(v50)
      {
        case 1:
          uint64_t v68 = 0x6D614E7473726966;
          goto LABEL_251;
        case 2:
          unint64_t v67 = 0xE800000000000000;
          uint64_t v68 = 0x656D614E7473616CLL;
          break;
        case 3:
          unint64_t v67 = 0xE700000000000000;
          uint64_t v68 = 0x73736572646461;
          break;
        case 4:
          unint64_t v67 = 0xE800000000000000;
          uint64_t v68 = 0x7961646874726962;
          break;
        case 5:
          uint64_t v68 = 0x6D754E656E6F6870;
          uint64_t v75 = 7497058;
          goto LABEL_249;
        case 6:
          uint64_t v68 = 0x6464416C69616D65;
          uint64_t v76 = 1936942450;
          goto LABEL_239;
        case 7:
          uint64_t v68 = 0x6E6F6974616C6572;
          uint64_t v76 = 1885956211;
LABEL_239:
          unint64_t v67 = v76 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8:
          unint64_t v67 = 0xE800000000000000;
          uint64_t v68 = 0x6565646E65747461;
          break;
        case 9:
          uint64_t v68 = 0x49746361746E6F63;
          uint64_t v75 = 7300718;
          goto LABEL_249;
        case 10:
          unint64_t v67 = 0xE800000000000000;
          unsigned int v77 = 1633906540;
          goto LABEL_254;
        case 11:
          uint64_t v68 = 1836020326;
          break;
        case 12:
          unint64_t v67 = 0xE200000000000000;
          uint64_t v68 = 28532;
          break;
        case 13:
          unint64_t v67 = 0x80000001B2E95700;
          uint64_t v68 = 0xD000000000000010;
          break;
        case 14:
          unint64_t v67 = 0xE800000000000000;
          uint64_t v68 = 0x7473657265746E69;
          break;
        case 15:
          unint64_t v67 = 0xE600000000000000;
          uint64_t v68 = 0x6E6F73726570;
          break;
        case 16:
          uint64_t v68 = 0x6765746143707061;
          uint64_t v75 = 7959151;
LABEL_249:
          unint64_t v67 = v75 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 17:
          uint64_t v68 = 0x7461447472617473;
LABEL_251:
          unint64_t v67 = 0xE900000000000065;
          break;
        case 18:
          unint64_t v67 = 0xE700000000000000;
          uint64_t v68 = 0x65746144646E65;
          break;
        case 19:
          unint64_t v67 = 0xE800000000000000;
          unsigned int v77 = 1634891108;
LABEL_254:
          uint64_t v68 = v77 | 0x6E6F697400000000;
          break;
        case 20:
          uint64_t v68 = 1701869940;
          break;
        case 21:
          unint64_t v67 = 0xE500000000000000;
          uint64_t v68 = 0x74696D696CLL;
          break;
        case 22:
          unint64_t v67 = 0xE700000000000000;
          uint64_t v68 = 0x63734174726F73;
          break;
        case 23:
          unint64_t v67 = 0xE800000000000000;
          uint64_t v68 = 0x6373654474726F73;
          break;
        case 24:
          unint64_t v67 = 0xE600000000000000;
          uint64_t v68 = 0x656372756F73;
          break;
        case 25:
          unint64_t v67 = 0xE500000000000000;
          uint64_t v68 = 0x65756C6176;
          break;
        default:
          break;
      }
      BOOL v79 = v68 == sub_1B2CA6C38(v52) && v67 == v78;
      uint64_t v4 = v86;
      if (v79) {
        char v80 = 0;
      }
      else {
        char v80 = sub_1B2E837A8();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v71 = (unsigned __int8 *)v89;
      unint64_t v5 = v89 - 24;
      if (v80)
      {
LABEL_226:
        BOOL v72 = v71 < (unsigned __int8 *)v93 || v5 >= (unint64_t)v93;
        if (v72 || v71 != (unsigned __int8 *)v93)
        {
          long long v73 = *(_OWORD *)v14;
          *(void *)(v5 + 16) = *((void *)v14 + 2);
          *(_OWORD *)unint64_t v5 = v73;
        }
        uint64_t v74 = v87;
        uint64_t v12 = v91;
        goto LABEL_277;
      }
LABEL_268:
      if (v71 < v91 || v5 >= (unint64_t)v91)
      {
        long long v82 = *(_OWORD *)v49;
        *(void *)(v5 + 16) = *((void *)v49 + 2);
        *(_OWORD *)unint64_t v5 = v82;
        uint64_t v12 = v49;
        unsigned int v14 = v93;
        uint64_t v74 = v87;
      }
      else
      {
        BOOL v29 = v71 == v91;
        unsigned int v14 = v93;
        uint64_t v74 = v87;
        if (!v29)
        {
          long long v83 = *(_OWORD *)v49;
          *(void *)(v5 + 16) = *((void *)v49 + 2);
          *(_OWORD *)unint64_t v5 = v83;
        }
        uint64_t v12 = v49;
      }
LABEL_277:
      if (v14 <= v74 || v12 <= (unsigned __int8 *)v4) {
        goto LABEL_281;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
LABEL_225:
    unint64_t v69 = *(void *)(v51 + 16);
    unint64_t v70 = *(void *)(v54 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v71 = (unsigned __int8 *)v89;
    unint64_t v5 = v89 - 24;
    uint64_t v4 = v86;
    if (v69 < v70) {
      goto LABEL_226;
    }
    goto LABEL_268;
  }
  sub_1B29BEF54(a1, (a2 - a1) / 24, a4);
  uint64_t v12 = (unsigned __int8 *)&v4[24 * v9];
  BOOL v13 = (unint64_t)v6 >= v5 || v8 < 24;
  unsigned int v14 = a1;
  if (!v13)
  {
    unint64_t v88 = v5;
    uint64_t v90 = (unsigned __int8 *)&v4[24 * v9];
    while (1)
    {
      uint64_t v15 = *v6;
      uint64_t v92 = v6;
      uint64_t v16 = *((void *)v6 + 1);
      uint64_t v17 = *v4;
      unint64_t v18 = 0xE400000000000000;
      uint64_t v19 = *((void *)v4 + 1);
      uint64_t v20 = 1701667182;
      switch(v15)
      {
        case 1:
          uint64_t v20 = 0x6D614E7473726966;
          goto LABEL_27;
        case 2:
          unint64_t v18 = 0xE800000000000000;
          uint64_t v20 = 0x656D614E7473616CLL;
          break;
        case 3:
          unint64_t v18 = 0xE700000000000000;
          uint64_t v20 = 0x73736572646461;
          break;
        case 4:
          unint64_t v18 = 0xE800000000000000;
          uint64_t v20 = 0x7961646874726962;
          break;
        case 5:
          uint64_t v20 = 0x6D754E656E6F6870;
          uint64_t v21 = 7497058;
          goto LABEL_25;
        case 6:
          uint64_t v20 = 0x6464416C69616D65;
          uint64_t v22 = 1936942450;
          goto LABEL_15;
        case 7:
          uint64_t v20 = 0x6E6F6974616C6572;
          uint64_t v22 = 1885956211;
LABEL_15:
          unint64_t v18 = v22 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8:
          unint64_t v18 = 0xE800000000000000;
          uint64_t v20 = 0x6565646E65747461;
          break;
        case 9:
          uint64_t v20 = 0x49746361746E6F63;
          uint64_t v21 = 7300718;
          goto LABEL_25;
        case 10:
          unint64_t v18 = 0xE800000000000000;
          unsigned int v23 = 1633906540;
          goto LABEL_30;
        case 11:
          uint64_t v20 = 1836020326;
          break;
        case 12:
          unint64_t v18 = 0xE200000000000000;
          uint64_t v20 = 28532;
          break;
        case 13:
          unint64_t v18 = 0x80000001B2E95700;
          uint64_t v20 = 0xD000000000000010;
          break;
        case 14:
          unint64_t v18 = 0xE800000000000000;
          uint64_t v20 = 0x7473657265746E69;
          break;
        case 15:
          unint64_t v18 = 0xE600000000000000;
          uint64_t v20 = 0x6E6F73726570;
          break;
        case 16:
          uint64_t v20 = 0x6765746143707061;
          uint64_t v21 = 7959151;
LABEL_25:
          unint64_t v18 = v21 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 17:
          uint64_t v20 = 0x7461447472617473;
LABEL_27:
          unint64_t v18 = 0xE900000000000065;
          break;
        case 18:
          unint64_t v18 = 0xE700000000000000;
          uint64_t v20 = 0x65746144646E65;
          break;
        case 19:
          unint64_t v18 = 0xE800000000000000;
          unsigned int v23 = 1634891108;
LABEL_30:
          uint64_t v20 = v23 | 0x6E6F697400000000;
          break;
        case 20:
          uint64_t v20 = 1701869940;
          break;
        case 21:
          unint64_t v18 = 0xE500000000000000;
          uint64_t v20 = 0x74696D696CLL;
          break;
        case 22:
          unint64_t v18 = 0xE700000000000000;
          uint64_t v20 = 0x63734174726F73;
          break;
        case 23:
          unint64_t v18 = 0xE800000000000000;
          uint64_t v20 = 0x6373654474726F73;
          break;
        case 24:
          unint64_t v18 = 0xE600000000000000;
          uint64_t v20 = 0x656372756F73;
          break;
        case 25:
          unint64_t v18 = 0xE500000000000000;
          uint64_t v20 = 0x65756C6176;
          break;
        default:
          break;
      }
      unint64_t v24 = 0xE400000000000000;
      uint64_t v25 = 1701667182;
      switch(*v4)
      {
        case 1:
          uint64_t v25 = 0x6D614E7473726966;
          goto LABEL_57;
        case 2:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x656D614E7473616CLL;
          break;
        case 3:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x73736572646461;
          break;
        case 4:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x7961646874726962;
          break;
        case 5:
          uint64_t v25 = 0x6D754E656E6F6870;
          uint64_t v26 = 7497058;
          goto LABEL_55;
        case 6:
          uint64_t v25 = 0x6464416C69616D65;
          uint64_t v27 = 1936942450;
          goto LABEL_45;
        case 7:
          uint64_t v25 = 0x6E6F6974616C6572;
          uint64_t v27 = 1885956211;
LABEL_45:
          unint64_t v24 = v27 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x6565646E65747461;
          break;
        case 9:
          uint64_t v25 = 0x49746361746E6F63;
          uint64_t v26 = 7300718;
          goto LABEL_55;
        case 10:
          unint64_t v24 = 0xE800000000000000;
          unsigned int v28 = 1633906540;
          goto LABEL_60;
        case 11:
          uint64_t v25 = 1836020326;
          break;
        case 12:
          unint64_t v24 = 0xE200000000000000;
          uint64_t v25 = 28532;
          break;
        case 13:
          unint64_t v24 = 0x80000001B2E95700;
          uint64_t v25 = 0xD000000000000010;
          break;
        case 14:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x7473657265746E69;
          break;
        case 15:
          unint64_t v24 = 0xE600000000000000;
          uint64_t v25 = 0x6E6F73726570;
          break;
        case 16:
          uint64_t v25 = 0x6765746143707061;
          uint64_t v26 = 7959151;
LABEL_55:
          unint64_t v24 = v26 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 17:
          uint64_t v25 = 0x7461447472617473;
LABEL_57:
          unint64_t v24 = 0xE900000000000065;
          break;
        case 18:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x65746144646E65;
          break;
        case 19:
          unint64_t v24 = 0xE800000000000000;
          unsigned int v28 = 1634891108;
LABEL_60:
          uint64_t v25 = v28 | 0x6E6F697400000000;
          break;
        case 20:
          uint64_t v25 = 1701869940;
          break;
        case 21:
          unint64_t v24 = 0xE500000000000000;
          uint64_t v25 = 0x74696D696CLL;
          break;
        case 22:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x63734174726F73;
          break;
        case 23:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x6373654474726F73;
          break;
        case 24:
          unint64_t v24 = 0xE600000000000000;
          uint64_t v25 = 0x656372756F73;
          break;
        case 25:
          unint64_t v24 = 0xE500000000000000;
          uint64_t v25 = 0x65756C6176;
          break;
        default:
          break;
      }
      BOOL v29 = v20 == v25 && v18 == v24;
      if (v29) {
        break;
      }
      char v30 = sub_1B2E837A8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30) {
        goto LABEL_75;
      }
      unint64_t v31 = 0xE400000000000000;
      uint64_t v32 = 1701667182;
      switch((int)v15)
      {
        case 1:
          uint64_t v32 = 0x6D614E7473726966;
          goto LABEL_96;
        case 2:
          unint64_t v31 = 0xE800000000000000;
          uint64_t v32 = 0x656D614E7473616CLL;
          break;
        case 3:
          unint64_t v31 = 0xE700000000000000;
          uint64_t v32 = 0x73736572646461;
          break;
        case 4:
          unint64_t v31 = 0xE800000000000000;
          uint64_t v32 = 0x7961646874726962;
          break;
        case 5:
          uint64_t v32 = 0x6D754E656E6F6870;
          uint64_t v36 = 7497058;
          goto LABEL_94;
        case 6:
          uint64_t v32 = 0x6464416C69616D65;
          uint64_t v37 = 1936942450;
          goto LABEL_84;
        case 7:
          uint64_t v32 = 0x6E6F6974616C6572;
          uint64_t v37 = 1885956211;
LABEL_84:
          unint64_t v31 = v37 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8:
          unint64_t v31 = 0xE800000000000000;
          uint64_t v32 = 0x6565646E65747461;
          break;
        case 9:
          uint64_t v32 = 0x49746361746E6F63;
          uint64_t v36 = 7300718;
          goto LABEL_94;
        case 10:
          unint64_t v31 = 0xE800000000000000;
          unsigned int v38 = 1633906540;
          goto LABEL_99;
        case 11:
          uint64_t v32 = 1836020326;
          break;
        case 12:
          unint64_t v31 = 0xE200000000000000;
          uint64_t v32 = 28532;
          break;
        case 13:
          unint64_t v31 = 0x80000001B2E95700;
          uint64_t v32 = 0xD000000000000010;
          break;
        case 14:
          unint64_t v31 = 0xE800000000000000;
          uint64_t v32 = 0x7473657265746E69;
          break;
        case 15:
          unint64_t v31 = 0xE600000000000000;
          uint64_t v32 = 0x6E6F73726570;
          break;
        case 16:
          uint64_t v32 = 0x6765746143707061;
          uint64_t v36 = 7959151;
LABEL_94:
          unint64_t v31 = v36 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 17:
          uint64_t v32 = 0x7461447472617473;
LABEL_96:
          unint64_t v31 = 0xE900000000000065;
          break;
        case 18:
          unint64_t v31 = 0xE700000000000000;
          uint64_t v32 = 0x65746144646E65;
          break;
        case 19:
          unint64_t v31 = 0xE800000000000000;
          unsigned int v38 = 1634891108;
LABEL_99:
          uint64_t v32 = v38 | 0x6E6F697400000000;
          break;
        case 20:
          uint64_t v32 = 1701869940;
          break;
        case 21:
          unint64_t v31 = 0xE500000000000000;
          uint64_t v32 = 0x74696D696CLL;
          break;
        case 22:
          unint64_t v31 = 0xE700000000000000;
          uint64_t v32 = 0x63734174726F73;
          break;
        case 23:
          unint64_t v31 = 0xE800000000000000;
          uint64_t v32 = 0x6373654474726F73;
          break;
        case 24:
          unint64_t v31 = 0xE600000000000000;
          uint64_t v32 = 0x656372756F73;
          break;
        case 25:
          unint64_t v31 = 0xE500000000000000;
          uint64_t v32 = 0x65756C6176;
          break;
        default:
          break;
      }
      unint64_t v39 = 0xE400000000000000;
      uint64_t v40 = 1701667182;
      switch(v17)
      {
        case 1:
          uint64_t v40 = 0x6D614E7473726966;
          goto LABEL_126;
        case 2:
          unint64_t v39 = 0xE800000000000000;
          uint64_t v40 = 0x656D614E7473616CLL;
          break;
        case 3:
          unint64_t v39 = 0xE700000000000000;
          uint64_t v40 = 0x73736572646461;
          break;
        case 4:
          unint64_t v39 = 0xE800000000000000;
          uint64_t v40 = 0x7961646874726962;
          break;
        case 5:
          uint64_t v40 = 0x6D754E656E6F6870;
          uint64_t v41 = 7497058;
          goto LABEL_124;
        case 6:
          uint64_t v40 = 0x6464416C69616D65;
          uint64_t v42 = 1936942450;
          goto LABEL_114;
        case 7:
          uint64_t v40 = 0x6E6F6974616C6572;
          uint64_t v42 = 1885956211;
LABEL_114:
          unint64_t v39 = v42 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 8:
          unint64_t v39 = 0xE800000000000000;
          uint64_t v40 = 0x6565646E65747461;
          break;
        case 9:
          uint64_t v40 = 0x49746361746E6F63;
          uint64_t v41 = 7300718;
          goto LABEL_124;
        case 10:
          unint64_t v39 = 0xE800000000000000;
          unsigned int v43 = 1633906540;
          goto LABEL_129;
        case 11:
          uint64_t v40 = 1836020326;
          break;
        case 12:
          unint64_t v39 = 0xE200000000000000;
          uint64_t v40 = 28532;
          break;
        case 13:
          unint64_t v39 = 0x80000001B2E95700;
          uint64_t v40 = 0xD000000000000010;
          break;
        case 14:
          unint64_t v39 = 0xE800000000000000;
          uint64_t v40 = 0x7473657265746E69;
          break;
        case 15:
          unint64_t v39 = 0xE600000000000000;
          uint64_t v40 = 0x6E6F73726570;
          break;
        case 16:
          uint64_t v40 = 0x6765746143707061;
          uint64_t v41 = 7959151;
LABEL_124:
          unint64_t v39 = v41 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 17:
          uint64_t v40 = 0x7461447472617473;
LABEL_126:
          unint64_t v39 = 0xE900000000000065;
          break;
        case 18:
          unint64_t v39 = 0xE700000000000000;
          uint64_t v40 = 0x65746144646E65;
          break;
        case 19:
          unint64_t v39 = 0xE800000000000000;
          unsigned int v43 = 1634891108;
LABEL_129:
          uint64_t v40 = v43 | 0x6E6F697400000000;
          break;
        case 20:
          uint64_t v40 = 1701869940;
          break;
        case 21:
          unint64_t v39 = 0xE500000000000000;
          uint64_t v40 = 0x74696D696CLL;
          break;
        case 22:
          unint64_t v39 = 0xE700000000000000;
          uint64_t v40 = 0x63734174726F73;
          break;
        case 23:
          unint64_t v39 = 0xE800000000000000;
          uint64_t v40 = 0x6373654474726F73;
          break;
        case 24:
          unint64_t v39 = 0xE600000000000000;
          uint64_t v40 = 0x656372756F73;
          break;
        case 25:
          unint64_t v39 = 0xE500000000000000;
          uint64_t v40 = 0x65756C6176;
          break;
        default:
          break;
      }
      if (v32 == v40 && v31 == v39)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v45 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v45)
        {
LABEL_76:
          char v35 = v92;
          int v6 = v92 + 24;
          if (v14 == v92) {
            goto LABEL_145;
          }
LABEL_144:
          long long v46 = *(_OWORD *)v35;
          *((void *)v14 + 2) = *((void *)v35 + 2);
          *(_OWORD *)unsigned int v14 = v46;
          goto LABEL_145;
        }
      }
LABEL_143:
      char v35 = v4;
      BOOL v29 = v14 == v4;
      v4 += 24;
      int v6 = v92;
      if (!v29) {
        goto LABEL_144;
      }
LABEL_145:
      v14 += 24;
      uint64_t v12 = v90;
      if (v4 >= (char *)v90 || (unint64_t)v6 >= v88) {
        goto LABEL_281;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
LABEL_75:
    unint64_t v33 = *(void *)(v16 + 16);
    unint64_t v34 = *(void *)(v19 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v33 < v34) {
      goto LABEL_76;
    }
    goto LABEL_143;
  }
LABEL_281:
  sub_1B29BEF54(v4, (v12 - (unsigned __int8 *)v4) / 24, v14);
  return 1;
}

uint64_t sub_1B2C9F2D0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B2C9F308(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C41CE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B2C9F368(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for KGQ.Value();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B2C9F3C4()
{
  return sub_1B2C9F600(32);
}

unint64_t sub_1B2C9F3CC()
{
  unint64_t result = qword_1E9C41CF8;
  if (!qword_1E9C41CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9C41CF8);
  }
  return result;
}

uint64_t sub_1B2C9F418(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1B2C9F434()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1B29A1EB0();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_1B2C9F464@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2CA1CC8(a1, a2);
}

uint64_t sub_1B2C9F480()
{
  return sub_1B2C9F69C(64);
}

uint64_t sub_1B2C9F488()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B29C5B68(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned __int16 *)(v0 + 88), *(unsigned char *)(v0 + 90));

  return MEMORY[0x1F4186498](v0, 91, 7);
}

uint64_t sub_1B2C9F4DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B2C9F51C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for KGQ.Value();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2C9F580()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1B29A1EB0();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_1B2C9F5C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1B29A1EB0();

  return MEMORY[0x1F4186498](v0, v1, v2);
}

uint64_t sub_1B2C9F5F8()
{
  return sub_1B2C9F600(24);
}

uint64_t sub_1B2C9F600(uint64_t a1)
{
  swift_release();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_1B2C9F64C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1B2C9F694()
{
  return sub_1B2C9F69C(66);
}

uint64_t sub_1B2C9F69C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_1B2C9F6F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2C9F464(a1, a2);
}

uint64_t sub_1B2C9F70C()
{
  return swift_allocObject();
}

void sub_1B2C9F724()
{
  *(void *)(v1 - 128) = 10075;
  *(void *)(v1 - 120) = 0xE200000000000000;
  *(void *)(v1 - 104) = v0;
}

void sub_1B2C9F73C()
{
  sub_1B29B93B0();
}

uint64_t sub_1B2C9F760()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2C9F778(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v3 - 160);
  *(void *)(a1 + 32) = v2;
  *(void *)(v1 + 56) = a1;
  return swift_retain();
}

uint64_t sub_1B2C9F7B4()
{
  return swift_bridgeObjectRetain();
}

void sub_1B2C9F7DC()
{
  sub_1B29B93B0();
}

uint64_t sub_1B2C9F7F8()
{
  return sub_1B2E822D8();
}

uint64_t sub_1B2C9F820()
{
  return sub_1B2E822D8();
}

uint64_t sub_1B2C9F864()
{
  return 0x6373654474726F73;
}

void sub_1B2C9F878()
{
  *(void *)(v0 - 112) = 10075;
  *(void *)(v0 - 104) = 0xE200000000000000;
}

uint64_t sub_1B2C9F8C8(uint64_t result, uint64_t a2)
{
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v3;
  *(void *)(v5 + 32) = result;
  *(void *)(v5 + 40) = a2;
  *(_WORD *)(v5 + 48) = v4;
  return result;
}

void sub_1B2C9F8E0()
{
  sub_1B29B93B0();
}

void sub_1B2C9F8FC()
{
  sub_1B29B93B0();
}

void sub_1B2C9F920()
{
  *(void *)(v1 - 128) = 10075;
  *(void *)(v1 - 120) = 0xE200000000000000;
  *(void *)(v1 - 104) = v0;
}

__n128 sub_1B2C9F938(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 144);
  a1[1] = result;
  return result;
}

__n128 sub_1B2C9F944(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 352);
  a1[1] = result;
  return result;
}

void sub_1B2C9F960()
{
  sub_1B29B93B0();
}

__n128 sub_1B2C9F978@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(a2 - 256);
  a1[1] = result;
  return result;
}

uint64_t sub_1B2C9F984()
{
  return 0x63734174726F73;
}

uint64_t sub_1B2C9F998()
{
  return 0x65746144646E65;
}

uint64_t sub_1B2C9F9AC@<X0>(uint64_t a1@<X8>)
{
  return v1 + ((*(unsigned __int8 *)(a1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a1 + 80));
}

uint64_t sub_1B2C9F9C0()
{
  return 0x6765746143707061;
}

uint64_t sub_1B2C9F9D4()
{
  return 0x6565646E65747461;
}

uint64_t sub_1B2C9F9E8()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_1B2C9F9FC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C9FA28()
{
  return 0x6464416C69616D65;
}

void sub_1B2C9FA3C(double a1)
{
  *(void *)(v1 - 128) = (uint64_t)a1;
}

uint64_t sub_1B2C9FA4C()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_1B2C9FA60()
{
  return 0x73736572646461;
}

uint64_t sub_1B2C9FA74()
{
  return 0x6D614E7473726966;
}

uint64_t sub_1B2C9FA88(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  return sub_1B2DF42C8(a1, v1, v2);
}

void sub_1B2C9FAA4()
{
  sub_1B29B93B0();
}

void sub_1B2C9FAC4()
{
  sub_1B29B93B0();
}

void sub_1B2C9FAE4()
{
  *(void *)(v0 - 128) = 10075;
  *(void *)(v0 - 120) = 0xE200000000000000;
}

void sub_1B2C9FAF8()
{
  *(void *)(v3 - 280) = v0;
  *(void *)(v3 - 272) = v2;
  *(void *)(v3 - 288) = v1;
}

uint64_t sub_1B2C9FB18()
{
  *(void *)(v1 - 200) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1B2C9FB34@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 32) = a1;
  *(void *)(v3 - 128) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C9FB64()
{
  return sub_1B2E83388();
}

uint64_t sub_1B2C9FB7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2C9FBA4(uint64_t result)
{
  *(void *)(v1 - 296) = result;
  return result;
}

uint64_t sub_1B2C9FBB0()
{
  return swift_deallocUninitializedObject();
}

uint64_t sub_1B2C9FBC8(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 352);
  return swift_bridgeObjectRetain();
}

void sub_1B2C9FBF0()
{
  sub_1B29B93B0();
}

void sub_1B2C9FC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v7 + 152) = a4;
  *(void *)(a4 + 16) = v5;
  *(void *)(a4 + 8 * v6 + 32) = v4 | 0x4000000000000000;
  *(void *)(v7 + 56) = a4;
}

uint64_t sub_1B2C9FC34()
{
  return sub_1B2E822D8();
}

uint64_t sub_1B2C9FC68(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = a2;
  *(_WORD *)(v3 + 64) = v6;
  *(void *)(v2 + 16) = v3;
  return swift_task_alloc();
}

void sub_1B2C9FC90()
{
  sub_1B29B93B0();
}

uint64_t sub_1B2C9FCB8()
{
  uint64_t v2 = *(void *)(v0 - 192);
  uint64_t v3 = *(void *)(v0 - 184);
  return sub_1B29D1EF4(v2, v3);
}

void sub_1B2C9FCE0()
{
  *(void *)(v3 - 280) = v0;
  *(void *)(v3 - 272) = v2;
  *(void *)(v3 - 288) = v1;
}

uint64_t sub_1B2C9FCFC()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2C9FD20()
{
  return 0x65756C6176;
}

uint64_t sub_1B2C9FD30()
{
  return 0x656372756F73;
}

void sub_1B2C9FD40()
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 8 * v1 + 32) = v0 | 4;
}

void sub_1B2C9FD58()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
}

uint64_t sub_1B2C9FD68()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
  return v0 - 128;
}

uint64_t sub_1B2C9FD80()
{
  return sub_1B2C91D08((uint64_t *)(v0 - 128));
}

uint64_t sub_1B2C9FD98()
{
  return swift_retain();
}

uint64_t sub_1B2C9FDBC(uint64_t result, uint64_t a2)
{
  *(void *)(v4 + 48) = result;
  *(void *)(v4 + 56) = a2;
  *(unsigned char *)(v4 + 64) = v5;
  *(void *)(v3 + 16) = v4;
  *(void *)(v2 + 32) = v3 | 0x4000000000000000;
  return result;
}

uint64_t sub_1B2C9FDD4()
{
  return 0;
}

void sub_1B2C9FE30(uint64_t a1@<X8>)
{
  *(void *)(v2 - 128) = v1;
  *(void *)(v2 - 120) = 0xE300000000000000;
  *(void *)(v2 - 104) = a1;
}

void sub_1B2C9FE48()
{
  sub_1B29B93B0();
}

BOOL sub_1B2C9FE6C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

BOOL sub_1B2C9FE84@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_1B2C9FE9C()
{
  sub_1B29B93B0();
}

void sub_1B2C9FEC0(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

void sub_1B2C9FED0()
{
  *(void *)(v1 - 128) = 10075;
  *(void *)(v1 - 120) = 0xE200000000000000;
  *(void *)(v1 - 104) = v0;
}

uint64_t sub_1B2C9FEE8()
{
  return swift_release();
}

void sub_1B2C9FF04()
{
  *(void *)(v1 - 304) = v0;
}

uint64_t sub_1B2C9FF10()
{
  uint64_t v2 = *(void *)(v0 - 200);
  uint64_t v3 = *(void *)(v0 - 224);
  return sub_1B29D1EF4(v2, v3);
}

uint64_t sub_1B2C9FF2C(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  return sub_1B2DF42C8(a1, v1, v2);
}

uint64_t sub_1B2C9FF48(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  return sub_1B2DF42C8(a1, v1, v2);
}

uint64_t sub_1B2C9FF64(uint64_t result, uint64_t a2)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v4;
  *(void *)(v3 + 32) = result;
  *(void *)(v3 + 40) = a2;
  *(_WORD *)(v3 + 48) = v5;
  return result;
}

__n128 sub_1B2C9FF98(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 176);
  a1[1] = result;
  return result;
}

__n128 sub_1B2C9FFA4(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 160);
  a1[1] = result;
  return result;
}

__n128 sub_1B2C9FFB0(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 160);
  a1[1] = result;
  return result;
}

uint64_t sub_1B2C9FFC4()
{
  return sub_1B2E82518();
}

uint64_t sub_1B2C9FFDC()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
  return sub_1B2E831F8();
}

uint64_t sub_1B2C9FFFC()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
  return sub_1B2E831F8();
}

void sub_1B2CA001C()
{
  *(void *)(v0 + 40) = v2 | 0x5000000000000000;
  *(void *)(v1 + 16) = v0;
}

void sub_1B2CA003C()
{
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
}

uint64_t sub_1B2CA0050()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2CA0068()
{
  return swift_release();
}

__n128 sub_1B2CA0094(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,__n128 a35)
{
  __n128 result = a35;
  a1[1] = a35;
  return result;
}

uint64_t sub_1B2CA00B4()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B2CA00D8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  *(_WORD *)(v2 + 48) = v5;
  return swift_task_alloc();
}

void sub_1B2CA0120()
{
  sub_1B29B93B0();
}

void sub_1B2CA0140()
{
  sub_1B29B93B0();
}

uint64_t sub_1B2CA0160()
{
  return sub_1B2E82538();
}

void sub_1B2CA018C(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 - 256);
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 8 * v3 + 32) = a1;
}

void sub_1B2CA01A0(uint64_t a1@<X8>)
{
  **(void **)(v1 - 256) = a1;
}

uint64_t sub_1B2CA01D8(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1B2DF42C8(a1, a2, a3);
}

uint64_t sub_1B2CA01FC()
{
  return 2567207;
}

uint64_t sub_1B2CA0210(uint64_t result, uint64_t a2)
{
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  *(void *)(v3 + 48) = result;
  *(void *)(v3 + 56) = a2;
  *(unsigned char *)(v3 + 64) = v6;
  *(void *)(v2 + 16) = v3;
  return result;
}

uint64_t sub_1B2CA0268()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2CA028C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v39 = type metadata accessor for KGQ.Value();
  uint64_t v5 = *(void *)(v39 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v39);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v37 = a2;
  uint64_t v38 = v11;
  if (v11)
  {
    uint64_t v35 = v5;
    swift_bridgeObjectRetain_n();
    uint64_t v12 = 0;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t v14 = a1;
    do
    {
      uint64_t v15 = *(void *)(a1 + 8 * v12 + 32);
      uint64_t v40 = 0;
      unint64_t v41 = 0xE000000000000000;
      sub_1B2E82298();
      uint64_t v42 = v15;
      sub_1B2E83748();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      uint64_t v16 = v40;
      unint64_t v17 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B2C416D8();
        sub_1B29B7048();
        uint64_t v13 = v21;
      }
      unint64_t v19 = *(void *)(v13 + 16);
      unint64_t v18 = *(void *)(v13 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1B29999F8(v18);
        sub_1B29B7048();
        uint64_t v13 = v22;
      }
      ++v12;
      *(void *)(v13 + 16) = v19 + 1;
      uint64_t v20 = v13 + 16 * v19;
      *(void *)(v20 + 32) = v16;
      *(void *)(v20 + 40) = v17;
      a1 = v14;
    }
    while (v38 != v12);
    swift_bridgeObjectRelease_n();
    a2 = v37;
    uint64_t v5 = v35;
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = sub_1B2CA1F54(v13);
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(a2 + 16);
  if (v26)
  {
    uint64_t v35 = v23;
    uint64_t v38 = v25;
    uint64_t v27 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v28 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    uint64_t v29 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1B2C9F51C(v27, (uint64_t)v10);
      sub_1B2C9F51C((uint64_t)v10, (uint64_t)v8);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        char v30 = *v8;
        sub_1B2C9F368((uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2C416D8();
          sub_1B29B93E4();
          uint64_t v29 = v32;
        }
        unint64_t v31 = *(void *)(v29 + 16);
        if (v31 >= *(void *)(v29 + 24) >> 1)
        {
          sub_1B29B93E4();
          uint64_t v29 = v33;
        }
        *(void *)(v29 + 16) = v31 + 1;
        *(unsigned char *)(v29 + v31 + 32) = v30;
      }
      else
      {
        sub_1B2C9F368((uint64_t)v8);
        sub_1B2C9F368((uint64_t)v10);
      }
      v27 += v28;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    uint64_t v25 = v38;
    uint64_t v23 = v35;
  }
  else
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  sub_1B2CA05CC(v23, v25, v29, v36);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2CA05CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v168 = a1;
  uint64_t v169 = a2;
  uint64_t v165 = a4;
  uint64_t v6 = (uint64_t)&_Records_GDEntityPredicate_records_count;
  uint64_t v171 = *(void *)(a3 + 16);
  if (v171)
  {
    uint64_t v7 = a3;
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    long long v163 = xmmword_1B2EC89D0;
    long long v166 = xmmword_1B2EC00A0;
    uint64_t v10 = MEMORY[0x1E4FBC860];
    uint64_t v167 = MEMORY[0x1E4FBC860];
    uint64_t v170 = v7;
    while (1)
    {
      uint64_t v11 = v7 + v8++;
      switch(*(unsigned char *)(v11 + 32))
      {
        case 1:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_286;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_242;
          }
          sub_1B2CA18D8();
          if (v12 == v13) {
            goto LABEL_261;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_287;
          }
          __int16 v15 = *(_WORD *)(v18 + 1464);
          uint64_t v19 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_288;
          }
          uint64_t v5 = v19;
          uint64_t v6 = v20;
          uint64_t v21 = sub_1B2E82538();
          uint64_t v23 = v22;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2CA1908();
            uint64_t v10 = v145;
          }
          unint64_t v24 = *(void *)(v10 + 16);
          uint64_t v4 = v24 + 1;
          if (v24 >= *(void *)(v10 + 24) >> 1)
          {
            sub_1B2CA18E4();
            uint64_t v10 = v146;
          }
          *(void *)(v10 + 16) = v4;
          uint64_t v25 = v10 + 40 * v24;
          *(void *)(v25 + 32) = v5;
          *(void *)(v25 + 40) = v6;
          goto LABEL_213;
        case 2:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_289;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_243;
          }
          sub_1B2CA18D8();
          if (v12 == v13) {
            goto LABEL_262;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_290;
          }
          __int16 v15 = *(_WORD *)(v26 + 1512);
          uint64_t v16 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_291;
          }
          goto LABEL_207;
        case 3:
          uint64_t v5 = sub_1B2CA192C();
          *(void *)(v5 + 16) = v168;
          *(void *)(v5 + 24) = v169;
          swift_bridgeObjectRetain();
          static EntityPredicate.hasAddress.getter();
          sub_1B29A3EB4(&qword_1EB7E34A8);
          uint64_t v6 = swift_allocObject();
          *(_OWORD *)(v6 + 16) = v163;
          static EntityPredicate.name.getter();
          static EntityPredicate.thoroughfare.getter();
          static EntityPredicate.locality.getter();
          static EntityPredicate.administrativeArea.getter();
          static EntityPredicate.postalCode.getter();
          static EntityPredicate.country.getter();
          goto LABEL_158;
        case 4:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_292;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_244;
          }
          sub_1B2CA18D8();
          if (v12 == v13) {
            goto LABEL_263;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_293;
          }
          __int16 v15 = *(_WORD *)(v27 + 1392);
          uint64_t v16 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_294;
          }
          goto LABEL_207;
        case 5:
          uint64_t v28 = swift_allocObject();
          sub_1B299DCEC(v28, v29, v30, v31, v32, v33, v34, v35, v163, *((uint64_t *)&v163 + 1), v164, v165, v166, *((uint64_t *)&v166 + 1), v167, v168, v169);
          if (v36 < 35)
          {
            __break(1u);
LABEL_236:
            __break(1u);
            __break(1u);
LABEL_237:
            __break(1u);
            __break(1u);
LABEL_238:
            __break(1u);
            __break(1u);
LABEL_239:
            __break(1u);
            __break(1u);
LABEL_240:
            __break(1u);
            __break(1u);
            __break(1u);
            __break(1u);
            __break(1u);
            __break(1u);
LABEL_241:
            __break(1u);
LABEL_242:
            __break(1u);
LABEL_243:
            __break(1u);
LABEL_244:
            __break(1u);
LABEL_245:
            __break(1u);
LABEL_246:
            __break(1u);
LABEL_247:
            __break(1u);
LABEL_248:
            __break(1u);
LABEL_249:
            __break(1u);
LABEL_250:
            __break(1u);
LABEL_251:
            __break(1u);
LABEL_252:
            __break(1u);
LABEL_253:
            __break(1u);
LABEL_254:
            __break(1u);
LABEL_255:
            __break(1u);
LABEL_256:
            __break(1u);
LABEL_257:
            __break(1u);
LABEL_258:
            __break(1u);
LABEL_259:
            __break(1u);
LABEL_260:
            __break(1u);
LABEL_261:
            __break(1u);
LABEL_262:
            __break(1u);
LABEL_263:
            __break(1u);
LABEL_264:
            __break(1u);
LABEL_265:
            __break(1u);
LABEL_266:
            __break(1u);
LABEL_267:
            __break(1u);
LABEL_268:
            __break(1u);
LABEL_269:
            __break(1u);
LABEL_270:
            __break(1u);
LABEL_271:
            __break(1u);
LABEL_272:
            __break(1u);
LABEL_273:
            __break(1u);
LABEL_274:
            __break(1u);
LABEL_275:
            __break(1u);
LABEL_276:
            __break(1u);
LABEL_277:
            __break(1u);
LABEL_278:
            __break(1u);
LABEL_279:
            __break(1u);
LABEL_280:
            __break(1u);
LABEL_281:
            __break(1u);
            __break(1u);
LABEL_282:
            sub_1B2CA18B4();
            uint64_t v9 = v159;
LABEL_227:
            __n128 v153 = (void *)v165;
            unint64_t v155 = v9[2];
            unint64_t v154 = v9[3];
            unint64_t v156 = v155 + 1;
            if (v155 >= v154 >> 1)
            {
              sub_1B29999F8(v154);
              sub_1B29B93B0();
              uint64_t v9 = v160;
            }
            _OWORD v9[2] = v156;
            v9[v155 + 4] = v6 | 0x7000000000000000;
            goto LABEL_231;
          }
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_295;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_245;
          }
          sub_1B299F94C();
          if (v12 == v13) {
            goto LABEL_264;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_296;
          }
          uint64_t v6 = (uint64_t)_Records_GDEntityPredicate_predicateIds + v37;
          swift_bridgeObjectRetain();
          sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_297;
          }
LABEL_128:
          uint64_t v102 = sub_1B29A0BD4();
          sub_1B29A5150(v102, v103);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2CA18B4();
            uint64_t v9 = v141;
          }
          sub_1B29A46F8();
          if (v91)
          {
            sub_1B29A1EC0();
            uint64_t v9 = v142;
          }
          unint64_t v104 = 0x8000000000000004;
LABEL_163:
          _OWORD v9[2] = v6;
          v9[v4 + 4] = v5 | v104;
LABEL_214:
          if (v171 == v8)
          {
            swift_bridgeObjectRelease();
            uint64_t v149 = v167;
            goto LABEL_218;
          }
          break;
        case 6:
          uint64_t v38 = swift_allocObject();
          sub_1B299DCEC(v38, v39, v40, v41, v42, v43, v44, v45, v163, *((uint64_t *)&v163 + 1), v164, v165, v166, *((uint64_t *)&v166 + 1), v167, v168, v169);
          if (v46 < 36) {
            goto LABEL_236;
          }
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_298;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_246;
          }
          sub_1B299F94C();
          if (v12 == v13) {
            goto LABEL_265;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_299;
          }
          uint64_t v6 = (uint64_t)_Records_GDEntityPredicate_predicateIds + v47;
          swift_bridgeObjectRetain();
          sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_300;
          }
          goto LABEL_128;
        case 7:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_301;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_247;
          }
          sub_1B2CA18D8();
          if (v12 == v13) {
            goto LABEL_266;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_302;
          }
          __int16 v15 = *(_WORD *)(v48 + 3336);
          uint64_t v16 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_303;
          }
          goto LABEL_207;
        case 8:
          uint64_t v49 = sub_1B2CA192C();
          sub_1B299DCEC(v49, v50, v51, v52, v53, v54, v55, v56, v163, *((uint64_t *)&v163 + 1), v164, v165, v166, *((uint64_t *)&v166 + 1), v167, v168, v169);
          if (v57 < 117) {
            goto LABEL_237;
          }
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_304;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_248;
          }
          sub_1B299F94C();
          if (v12 == v13) {
            goto LABEL_267;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_305;
          }
          uint64_t v6 = (uint64_t)_Records_GDEntityPredicate_predicateIds + v58;
          swift_bridgeObjectRetain();
          sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_306;
          }
          uint64_t v59 = sub_1B29A0BD4();
          sub_1B29A5150(v59, v60);
          sub_1B29A3EB4(&qword_1EB7E34A8);
          *(_OWORD *)(swift_allocObject() + 16) = v166;
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_307;
          }
          uint64_t v61 = *((void *)_Records_GDEntityPredicate_records + 83);
          sub_1B29A3028();
          if (v12 == v13 || v61 >= 3558) {
            goto LABEL_279;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_308;
          }
          uint64_t v6 = v62;
          __int16 v65 = *(_WORD *)(v63 + 648);
          uint64_t v66 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_309;
          }
          goto LABEL_157;
        case 9:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_310;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_249;
          }
          sub_1B2CA18D8();
          if (v12 == v13) {
            goto LABEL_268;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_311;
          }
          __int16 v15 = *(_WORD *)(v68 + 3408);
          uint64_t v16 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_312;
          }
          goto LABEL_207;
        case 0xA:
          uint64_t v69 = sub_1B2CA192C();
          sub_1B299DCEC(v69, v70, v71, v72, v73, v74, v75, v76, v163, *((uint64_t *)&v163 + 1), v164, v165, v166, *((uint64_t *)&v166 + 1), v167, v168, v169);
          if (v77 < 91) {
            goto LABEL_238;
          }
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_313;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_250;
          }
          sub_1B299F94C();
          if (v12 == v13) {
            goto LABEL_269;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_314;
          }
          uint64_t v6 = (uint64_t)_Records_GDEntityPredicate_predicateIds + v78;
          swift_bridgeObjectRetain();
          sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_315;
          }
          uint64_t v79 = sub_1B29A0BD4();
          sub_1B29A5150(v79, v80);
          sub_1B29A3EB4(&qword_1EB7E34A8);
          *(_OWORD *)(swift_allocObject() + 16) = v166;
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_316;
          }
          uint64_t v81 = *((void *)_Records_GDEntityPredicate_records + 155);
          sub_1B29A3028();
          if (v12 == v13 || v81 >= 3558) {
            goto LABEL_280;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_317;
          }
          uint64_t v6 = v82;
          __int16 v65 = *(_WORD *)(v83 + 1224);
          uint64_t v66 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_318;
          }
          goto LABEL_157;
        case 0xB:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_319;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_251;
          }
          if (*(uint64_t *)(v85 + 3352) >= 3558) {
            goto LABEL_270;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_320;
          }
          __int16 v86 = *(_WORD *)(v85 + 3336);
          uint64_t v87 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_321;
          }
          uint64_t v6 = v87;
          uint64_t v4 = v88;
          uint64_t v5 = swift_allocObject();
          uint64_t v89 = sub_1B2E82538();
          *(void *)(v5 + 16) = v6;
          *(void *)(v5 + 24) = v4;
          *(void *)(v5 + 32) = v89;
          *(void *)(v5 + 40) = v90;
          *(_WORD *)(v5 + 48) = v86;
          *(void *)(v5 + 56) = v168;
          *(void *)(v5 + 64) = v169;
          *(void *)(v5 + 72) = 0;
          *(void *)(v5 + 80) = 0;
          *(_DWORD *)(v5 + 87) = 0;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2CA18B4();
            uint64_t v9 = v147;
          }
          sub_1B29A46F8();
          if (v91)
          {
            sub_1B29A1EC0();
            uint64_t v9 = v148;
          }
          _OWORD v9[2] = v6;
          v9[v4 + 4] = v5;
          goto LABEL_214;
        case 0xC:
          uint64_t v92 = swift_allocObject();
          sub_1B299DCEC(v92, v93, v94, v95, v96, v97, v98, v99, v163, *((uint64_t *)&v163 + 1), v164, v165, v166, *((uint64_t *)&v166 + 1), v167, v168, v169);
          if (v100 < 33) {
            goto LABEL_239;
          }
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_322;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_252;
          }
          sub_1B299F94C();
          if (v12 == v13) {
            goto LABEL_271;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_323;
          }
          uint64_t v6 = (uint64_t)_Records_GDEntityPredicate_predicateIds + v101;
          swift_bridgeObjectRetain();
          sub_1B2E82538();
          if (_Records_GDEntityPredicate_labels) {
            goto LABEL_128;
          }
          goto LABEL_324;
        case 0xD:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_325;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_253;
          }
          sub_1B2CA18D8();
          if (v12 == v13) {
            goto LABEL_272;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_326;
          }
          __int16 v15 = *(_WORD *)(v105 + 792);
          uint64_t v16 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_327;
          }
          goto LABEL_207;
        case 0xE:
          uint64_t v106 = sub_1B2CA192C();
          sub_1B299DCEC(v106, v107, v108, v109, v110, v111, v112, v113, v163, *((uint64_t *)&v163 + 1), v164, v165, v166, *((uint64_t *)&v166 + 1), v167, v168, v169);
          if (v114 < 92) {
            goto LABEL_240;
          }
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_328;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_254;
          }
          sub_1B299F94C();
          if (v12 == v13) {
            goto LABEL_273;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_329;
          }
          uint64_t v6 = (uint64_t)_Records_GDEntityPredicate_predicateIds + v115;
          swift_bridgeObjectRetain();
          sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_330;
          }
          uint64_t v116 = sub_1B29A0BD4();
          sub_1B29A5150(v116, v117);
          sub_1B29A3EB4(&qword_1EB7E34A8);
          *(_OWORD *)(swift_allocObject() + 16) = v166;
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_331;
          }
          uint64_t v118 = *((void *)_Records_GDEntityPredicate_records + 53);
          sub_1B29A3028();
          if (v12 == v13 || v118 >= 3558) {
            goto LABEL_281;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_332;
          }
          uint64_t v6 = v119;
          __int16 v65 = *(_WORD *)(v120 + 408);
          uint64_t v66 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_333;
          }
LABEL_157:
          uint64_t v4 = v66;
          uint64_t v122 = v67;
          uint64_t v123 = sub_1B2E82538();
          *(void *)(v6 + 32) = v4;
          *(void *)(v6 + 40) = v122;
          *(void *)(v6 + 48) = v123;
          *(void *)(v6 + 56) = v124;
          *(_WORD *)(v6 + 64) = v65;
LABEL_158:
          *(void *)(v5 + 72) = v6;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2CA18B4();
            uint64_t v9 = v139;
          }
          sub_1B29A46F8();
          if (v91)
          {
            sub_1B29A1EC0();
            uint64_t v9 = v140;
          }
          unint64_t v104 = 0x7000000000000004;
          goto LABEL_163;
        case 0xF:
        case 0x15:
        case 0x16:
        case 0x17:
        case 0x18:
        case 0x19:
          goto LABEL_214;
        case 0x10:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_334;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_255;
          }
          sub_1B2CA18D8();
          if (v12 == v13) {
            goto LABEL_274;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_335;
          }
          __int16 v15 = *(_WORD *)(v125 + 5376);
          uint64_t v16 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_336;
          }
          goto LABEL_207;
        case 0x11:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_337;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_256;
          }
          sub_1B2CA18D8();
          if (v12 == v13) {
            goto LABEL_275;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_338;
          }
          __int16 v15 = *(_WORD *)(v126 + 3648);
          uint64_t v127 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_339;
          }
          goto LABEL_187;
        case 0x12:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_340;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_257;
          }
          sub_1B2CA18D8();
          if (v12 == v13) {
            goto LABEL_276;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_341;
          }
          __int16 v15 = *(_WORD *)(v129 + 3672);
          uint64_t v127 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_342;
          }
LABEL_187:
          uint64_t v6 = v127;
          uint64_t v5 = v128;
          uint64_t v21 = sub_1B2E82538();
          uint64_t v23 = v130;
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            uint64_t v131 = v167;
          }
          else
          {
            sub_1B29B7260();
            uint64_t v131 = v143;
          }
          unint64_t v132 = *(void *)(v131 + 16);
          uint64_t v4 = v132 + 1;
          if (v132 >= *(void *)(v131 + 24) >> 1)
          {
            sub_1B29B7260();
            uint64_t v131 = v144;
          }
          *(void *)(v131 + 16) = v4;
          uint64_t v167 = v131;
          uint64_t v25 = v131 + 40 * v132;
          goto LABEL_212;
        case 0x13:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_343;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_258;
          }
          sub_1B2CA18D8();
          if (v12 == v13) {
            goto LABEL_277;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_344;
          }
          __int16 v15 = *(_WORD *)(v133 + 4344);
          uint64_t v16 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_345;
          }
          goto LABEL_207;
        case 0x14:
          if (!_Records_GDEntityPredicate_records) {
            goto LABEL_346;
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_259;
          }
          sub_1B2CA18D8();
          if (v12 == v13) {
            goto LABEL_278;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_347;
          }
          __int16 v15 = *(_WORD *)(v134 + 312);
          uint64_t v16 = sub_1B2E82538();
          if (_Records_GDEntityPredicate_labels) {
            goto LABEL_207;
          }
          goto LABEL_348;
        default:
          if (!_Records_GDEntityPredicate_records)
          {
            __break(1u);
LABEL_284:
            __break(1u);
LABEL_285:
            __break(1u);
LABEL_286:
            __break(1u);
LABEL_287:
            __break(1u);
LABEL_288:
            __break(1u);
LABEL_289:
            __break(1u);
LABEL_290:
            __break(1u);
LABEL_291:
            __break(1u);
LABEL_292:
            __break(1u);
LABEL_293:
            __break(1u);
LABEL_294:
            __break(1u);
LABEL_295:
            __break(1u);
LABEL_296:
            __break(1u);
LABEL_297:
            __break(1u);
LABEL_298:
            __break(1u);
LABEL_299:
            __break(1u);
LABEL_300:
            __break(1u);
LABEL_301:
            __break(1u);
LABEL_302:
            __break(1u);
LABEL_303:
            __break(1u);
LABEL_304:
            __break(1u);
LABEL_305:
            __break(1u);
LABEL_306:
            __break(1u);
LABEL_307:
            __break(1u);
LABEL_308:
            __break(1u);
LABEL_309:
            __break(1u);
LABEL_310:
            __break(1u);
LABEL_311:
            __break(1u);
LABEL_312:
            __break(1u);
LABEL_313:
            __break(1u);
LABEL_314:
            __break(1u);
LABEL_315:
            __break(1u);
LABEL_316:
            __break(1u);
LABEL_317:
            __break(1u);
LABEL_318:
            __break(1u);
LABEL_319:
            __break(1u);
LABEL_320:
            __break(1u);
LABEL_321:
            __break(1u);
LABEL_322:
            __break(1u);
LABEL_323:
            __break(1u);
LABEL_324:
            __break(1u);
LABEL_325:
            __break(1u);
LABEL_326:
            __break(1u);
LABEL_327:
            __break(1u);
LABEL_328:
            __break(1u);
LABEL_329:
            __break(1u);
LABEL_330:
            __break(1u);
LABEL_331:
            __break(1u);
LABEL_332:
            __break(1u);
LABEL_333:
            __break(1u);
LABEL_334:
            __break(1u);
LABEL_335:
            __break(1u);
LABEL_336:
            __break(1u);
LABEL_337:
            __break(1u);
LABEL_338:
            __break(1u);
LABEL_339:
            __break(1u);
LABEL_340:
            __break(1u);
LABEL_341:
            __break(1u);
LABEL_342:
            __break(1u);
LABEL_343:
            __break(1u);
LABEL_344:
            __break(1u);
LABEL_345:
            __break(1u);
LABEL_346:
            __break(1u);
LABEL_347:
            __break(1u);
LABEL_348:
            __break(1u);
            JUMPOUT(0x1B2CA16E8);
          }
          sub_1B29A3028();
          if (v12 == v13) {
            goto LABEL_241;
          }
          sub_1B2CA18D8();
          if (v12 == v13) {
            goto LABEL_260;
          }
          if (!_Records_GDEntityPredicate_predicateIds) {
            goto LABEL_284;
          }
          __int16 v15 = *(_WORD *)(v14 + 24);
          uint64_t v16 = sub_1B2E82538();
          if (!_Records_GDEntityPredicate_labels) {
            goto LABEL_285;
          }
LABEL_207:
          uint64_t v6 = v16;
          uint64_t v5 = v17;
          uint64_t v21 = sub_1B2E82538();
          uint64_t v23 = v135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2CA1908();
            uint64_t v10 = v137;
          }
          unint64_t v136 = *(void *)(v10 + 16);
          uint64_t v4 = v136 + 1;
          if (v136 >= *(void *)(v10 + 24) >> 1)
          {
            sub_1B2CA18E4();
            uint64_t v10 = v138;
          }
          *(void *)(v10 + 16) = v4;
          uint64_t v25 = v10 + 40 * v136;
LABEL_212:
          *(void *)(v25 + 32) = v6;
          *(void *)(v25 + 40) = v5;
LABEL_213:
          *(void *)(v25 + 48) = v21;
          *(void *)(v25 + 56) = v23;
          *(_WORD *)(v25 + 64) = v15;
          uint64_t v7 = v170;
          goto LABEL_214;
      }
    }
  }
  uint64_t v149 = MEMORY[0x1E4FBC860];
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
LABEL_218:
  if (*(void *)(v149 + 16))
  {
    uint64_t v150 = v149;
    uint64_t v151 = sub_1B2CA192C();
    *(void *)(v151 + 16) = v168;
    *(void *)(v151 + 24) = v169;
    swift_bridgeObjectRetain();
    sub_1B2A7C538(0x91uLL, v151 + 32);
    *(void *)(v151 + 72) = v150;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B2CA18B4();
      uint64_t v9 = v161;
    }
    unint64_t v152 = v9[2];
    if (v152 >= v9[3] >> 1)
    {
      sub_1B29A1EC0();
      uint64_t v9 = v162;
    }
    _OWORD v9[2] = v152 + 1;
    v9[v152 + 4] = v151 | 0x7000000000000004;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v10 + 16))
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v168;
    *(void *)(v6 + 24) = v169;
    *(void *)(v6 + 32) = v10;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_282;
    }
    goto LABEL_227;
  }
  swift_bridgeObjectRelease();
  unint64_t v156 = v9[2];
  __n128 v153 = (void *)v165;
LABEL_231:
  if (v156 == 1)
  {
    sub_1B2B47524(0, 1, v9);
    uint64_t v157 = v9[4];
    swift_retain();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v9;
    uint64_t v157 = result | 0x3000000000000000;
  }
  *__n128 v153 = v157;
  return result;
}

uint64_t sub_1B2CA1750()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1B2CA17A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B2CA17E0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B2CA1818()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 66, 7);
}

uint64_t sub_1B2CA1860()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B29C5B68(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned __int16 *)(v0 + 88), *(unsigned char *)(v0 + 90));

  return MEMORY[0x1F4186498](v0, 91, 7);
}

void sub_1B2CA18B4()
{
  sub_1B29B93B0();
}

void sub_1B2CA18E4()
{
  sub_1B29B7260();
}

void sub_1B2CA1908()
{
  sub_1B29B7260();
}

uint64_t sub_1B2CA192C()
{
  return swift_allocObject();
}

uint64_t sub_1B2CA1944(uint64_t a1)
{
  uint64_t v2 = sub_1B2E80668();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for KGQ.Value();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2C9F51C(a1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1B29A3004();
      if (v12)
      {
        __break(1u);
        goto LABEL_26;
      }
      if (v11 <= -9.22337204e18)
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      sub_1B299DCC8();
      if (v14)
      {
LABEL_17:
        uint64_t v22 = (uint64_t)v13;
        return sub_1B2E83748();
      }
      __break(1u);
LABEL_8:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      sub_1B2E805C8();
      sub_1B29A3004();
      if (v12) {
        goto LABEL_27;
      }
      if (v15 <= -9.22337204e18)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        JUMPOUT(0x1B2CA1CA8);
      }
      sub_1B299DCC8();
      if (!v14) {
        goto LABEL_29;
      }
      uint64_t v22 = (uint64_t)v16;
      uint64_t v9 = sub_1B2E83748();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v9;
    case 2u:
      goto LABEL_8;
    case 3u:
      sub_1B29A3004();
      if (v12) {
        goto LABEL_30;
      }
      if (v17 <= -9.22337204e18) {
        goto LABEL_31;
      }
      sub_1B299DCC8();
      if (!v14) {
        goto LABEL_32;
      }
      goto LABEL_17;
    case 4u:
      uint64_t v22 = *(void *)v8;
      return EntityIdentifier.stringValue.getter();
    case 5u:
      uint64_t v19 = *(void *)v8;
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_1B2E82298();
      v21[0] = v19;
      sub_1B2E83748();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      return v22;
    case 6u:
      return sub_1B2CA6C38(*v8);
    case 7u:
      return *(void *)v8;
    default:
      uint64_t v9 = *(void *)v8;
      unint64_t v10 = *((void *)v8 + 1);
      uint64_t v22 = *(void *)v8;
      unint64_t v23 = v10;
      v21[0] = 32;
      v21[1] = 0xE100000000000000;
      sub_1B29C3640();
      if ((sub_1B2E83038() & 1) == 0) {
        return v9;
      }
      uint64_t v22 = 39;
      unint64_t v23 = 0xE100000000000000;
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      return v22;
  }
}

uint64_t sub_1B2CA1CC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B2CA1944(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t destroy for KGQConversion(id *a1)
{
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)(a1 + 1));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KGQConversion(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = a1 + 8;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  id v10 = v4;
  v9(v5, v6, v8);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for KGQConversion(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  sub_1B2B385E4((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for KGQConversion(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for KGQConversion()
{
  return &type metadata for KGQConversion;
}

uint64_t sub_1B2CA1EE8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2DCA630();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1B2CA5224(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1B2CA1F54(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    if (v1 == 1)
    {
      uint64_t v1 = *(void *)(a1 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_1B29A3EB4(&qword_1EB7E3B30);
      sub_1B2A20660();
      sub_1B2E822D8();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2C9F760();
      return 10075;
    }
  }
  return v1;
}

uint64_t sub_1B2CA2008()
{
  *(void *)(v1 + 104) = v0;
  return MEMORY[0x1F4188298](sub_1B2CA2028, 0, 0);
}

uint64_t sub_1B2CA2028()
{
  uint64_t v126 = v0;
  uint64_t v125 = *(void *)(v0[13] + 48);
  swift_bridgeObjectRetain_n();
  sub_1B2CA1EE8(&v125);
  swift_bridgeObjectRelease();
  uint64_t v3 = v125;
  v0[14] = v125;
  uint64_t v4 = *(void *)(v3 + 16);
  v0[15] = v4;
  if (!v4)
  {
LABEL_246:
    swift_release();
    sub_1B2CA5F08();
    sub_1B2CA5E20();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v5 = 0;
  uint64_t v121 = (uint64_t)(v0 + 4);
  uint64_t v122 = (uint64_t)(v0 + 2);
  uint64_t v119 = (uint64_t)(v0 + 8);
  uint64_t v120 = (uint64_t)(v0 + 6);
  uint64_t v117 = (uint64_t)(v0 + 10);
  uint64_t v118 = (uint64_t)(v0 + 9);
  uint64_t v116 = 0xE900000000000065;
  int v6 = 19;
  uint64_t v123 = "lAddress";
  long long v124 = xmmword_1B2EC00A0;
  while (2)
  {
    sub_1B2CA5EA4(v5);
    uint64_t v8 = *(void *)(v7 + 40);
    v0[18] = v8;
    uint64_t v9 = *(void *)(v7 + 48);
    v0[19] = v9;
    uint64_t v10 = *(unsigned __int8 *)(v7 + 56);
    switch(*(unsigned char *)(v7 + 56))
    {
      case 1:
        sub_1B2CA5E70();
        sub_1B2CA5E70();
        uint64_t v11 = sub_1B2C3943C();
        uint64_t v1 = sub_1B2CA622C(v11, v12);
        sub_1B2CA5188(v8, v9, 1u);
        sub_1B2CA5E70();
        uint64_t v13 = sub_1B2C3943C();
        sub_1B2CA028C(v13, v14, v15);
        uint64_t v16 = v0[13];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v17 = v0[11];
        uint64_t v18 = *(void *)(v16 + 56);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2CA5D04();
          uint64_t v18 = v82;
        }
        unint64_t v19 = *(void *)(v18 + 16);
        if (v19 >= *(void *)(v18 + 24) >> 1)
        {
          sub_1B2CA5DD8();
          uint64_t v18 = v83;
        }
        uint64_t v20 = v0[13];
        *(void *)(v18 + 16) = v19 + 1;
        uint64_t v21 = (void *)(v18 + 24 * v19);
        v21[4] = v2;
        void v21[5] = v17;
        v21[6] = v1;
        sub_1B2CA5188(v8, v9, 1u);
        *(void *)(v20 + 56) = v18;
        goto LABEL_239;
      case 2:
        if (v6 == 19)
        {
          sub_1B2CA50D8();
          sub_1B299E4D4();
          *uint64_t v96 = 2;
          sub_1B2CA5CAC();
          uint64_t v93 = v8;
          uint64_t v94 = v9;
          unsigned __int8 v95 = 2;
LABEL_254:
          sub_1B2CA5124(v93, v94, v95);
LABEL_261:
          swift_willThrow();
          swift_release();
          uint64_t v100 = sub_1B2C3943C();
          sub_1B2CA5188(v100, v101, v10);
          uint64_t v102 = sub_1B2C3943C();
          sub_1B2CA5188(v102, v103, v10);
LABEL_262:
          sub_1B2CA5E20();
          __asm { BRAA            X1, X16 }
        }
        return result;
      case 3:
        sub_1B2CA50D8();
        sub_1B299E4D4();
        *uint64_t v92 = 0;
        sub_1B2CA5124(v8, v9, 3u);
        uint64_t v93 = v8;
        uint64_t v94 = v9;
        unsigned __int8 v95 = 3;
        goto LABEL_254;
      default:
        sub_1B2CA5E54();
        sub_1B2CA5E54();
        uint64_t v88 = sub_1B2C3943C();
        v0[20] = sub_1B2CA612C(v88);
        sub_1B2CA5188(v8, v9, 0);
        sub_1B2CA5E54();
        uint64_t v89 = (void *)swift_task_alloc();
        v0[21] = v89;
        *uint64_t v89 = v0;
        v89[1] = sub_1B2CA37A8;
        sub_1B2CA5E20();
        return sub_1B2C91D74();
    }
    switch((char)v9)
    {
      case 1:
        sub_1B2CA5CAC();
        sub_1B2CA5CAC();
        if (!sub_1B2CA69D8(v8)) {
          goto LABEL_260;
        }
        swift_bridgeObjectRelease();
        sub_1B2CA5C38();
        switch(v23)
        {
          case 1:
            sub_1B29A5160();
            break;
          case 2:
            sub_1B2CA5B58();
            break;
          case 3:
            sub_1B2999BE4();
            break;
          case 4:
            sub_1B2C9FA74();
            break;
          case 5:
            sub_1B29A3014();
            break;
          case 6:
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5AF8();
            break;
          case 8:
            sub_1B29A4708();
            break;
          case 9:
            sub_1B299F958();
            break;
          case 10:
            sub_1B2CA5AC8();
            break;
          case 11:
            unsigned int v27 = sub_1B2CA5CE4();
            goto LABEL_59;
          case 12:
            sub_1B2CA5C50();
            break;
          case 13:
            sub_1B29A1E9C();
            break;
          case 14:
            sub_1B2CA5DF0();
LABEL_65:
            sub_1B299E934();
            goto LABEL_155;
          case 15:
            sub_1B2C9F998();
            break;
          case 16:
            unsigned int v27 = sub_1B2CA5CF4();
LABEL_59:
            sub_1B29A2920(v27);
            break;
          case 17:
            sub_1B29A0BF0();
            break;
          case 18:
            sub_1B2CA5ADC();
            break;
          default:
            break;
        }
        sub_1B2CA5B2C();
        sub_1B299B5E8();
        if ((v1 & 1) == 0) {
          goto LABEL_312;
        }
        sub_1B2CA5B14();
        switch(v28)
        {
          case 1:
            sub_1B29A5160();
            break;
          case 2:
            sub_1B2CA5B58();
            break;
          case 3:
            sub_1B2999BE4();
            break;
          case 4:
            break;
          case 5:
            sub_1B29A3014();
            break;
          case 6:
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5AF8();
            break;
          case 8:
            sub_1B29A4708();
            break;
          case 9:
            sub_1B299F958();
            break;
          case 10:
            sub_1B2CA5AC8();
            break;
          case 11:
            unsigned int v48 = sub_1B2CA5CE4();
            goto LABEL_152;
          case 12:
            sub_1B2CA5C50();
            break;
          case 13:
            sub_1B29A1E9C();
            break;
          case 14:
            goto LABEL_65;
          case 15:
            swift_bridgeObjectRelease();
            goto LABEL_178;
          case 16:
            unsigned int v48 = sub_1B2CA5CF4();
LABEL_152:
            sub_1B29A2920(v48);
            break;
          case 17:
            sub_1B29A0BF0();
            break;
          case 18:
            sub_1B2CA5ADC();
            break;
          default:
            sub_1B2CA5C64();
            break;
        }
LABEL_155:
        sub_1B299BC1C();
        sub_1B299B5E8();
        if ((v1 & 1) == 0)
        {
LABEL_312:
          sub_1B2CA5B14();
          switch(v49)
          {
            case 1:
              sub_1B29A5160();
              goto LABEL_177;
            case 2:
              sub_1B2CA5B58();
              goto LABEL_177;
            case 3:
              sub_1B2999BE4();
              goto LABEL_177;
            case 4:
              goto LABEL_177;
            case 5:
              sub_1B29A3014();
              goto LABEL_177;
            case 6:
              sub_1B299DCD8();
              goto LABEL_177;
            case 7:
              sub_1B2CA5AF8();
              goto LABEL_177;
            case 8:
              sub_1B29A4708();
              goto LABEL_177;
            case 9:
              sub_1B299F958();
              goto LABEL_177;
            case 10:
              sub_1B2CA5AC8();
              goto LABEL_177;
            case 11:
              sub_1B29A2920(0x61636F6Cu);
              goto LABEL_177;
            case 12:
              sub_1B2CA5C50();
              goto LABEL_177;
            case 13:
              sub_1B29A1E9C();
              goto LABEL_177;
            case 14:
              sub_1B299E934();
              goto LABEL_177;
            case 15:
              sub_1B2C9F998();
              goto LABEL_177;
            case 16:
              swift_bridgeObjectRelease();
              break;
            case 17:
              sub_1B29A0BF0();
              goto LABEL_177;
            case 18:
              sub_1B2CA5ADC();
              goto LABEL_177;
            default:
              sub_1B2CA5C64();
LABEL_177:
              sub_1B2CA5C10();
              sub_1B2CA5EF0();
              break;
          }
        }
LABEL_178:
        sub_1B29A3EB4(&qword_1E9C39A60);
        uint64_t v50 = sub_1B2CA5E08();
        sub_1B2CA5D70(v50, v51, v52, v53, v54, v55, v56, v57, v116, v117, v118, v119, v120, v121, v122, (uint64_t)v123, v124);
        uint64_t v58 = swift_bridgeObjectRetain();
        uint64_t v59 = (void *)sub_1B2CA69D8(v58);
        if (!v59) {
          goto LABEL_255;
        }
        uint64_t v60 = v59[2];
        if (v60)
        {
          if (v60 == 1)
          {
            uint64_t v46 = v59[4];
            unint64_t v45 = v59[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          else
          {
            v0[6] = 10075;
            v0[7] = 0xE200000000000000;
            v0[8] = v59;
            sub_1B29A3EB4(&qword_1EB7E3B30);
            sub_1B2A20660();
            sub_1B2CA5C94();
            sub_1B2E822D8();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2C9F760();
            swift_bridgeObjectRelease();
            uint64_t v46 = v0[6];
            unint64_t v45 = v0[7];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v46 = 0;
          unint64_t v45 = 0xE000000000000000;
        }
        unint64_t v47 = 0x9000000000000004;
        goto LABEL_234;
      case 2:
        sub_1B2CA5CAC();
        sub_1B2CA5CAC();
        if (!sub_1B2CA69D8(v8)) {
          goto LABEL_260;
        }
        swift_bridgeObjectRelease();
        sub_1B2CA5C38();
        switch(v24)
        {
          case 1:
            sub_1B29A5160();
            break;
          case 2:
            sub_1B2CA5B58();
            break;
          case 3:
            sub_1B2999BE4();
            break;
          case 4:
            sub_1B2C9FA74();
            break;
          case 5:
            sub_1B29A3014();
            break;
          case 6:
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5AF8();
            break;
          case 8:
            sub_1B29A4708();
            break;
          case 9:
            sub_1B299F958();
            break;
          case 10:
            sub_1B2CA5AC8();
            break;
          case 11:
            unsigned int v29 = sub_1B2CA5CE4();
            goto LABEL_82;
          case 12:
            sub_1B2CA5C50();
            break;
          case 13:
            sub_1B29A1E9C();
            break;
          case 14:
            sub_1B2CA5DF0();
LABEL_88:
            sub_1B299E934();
            goto LABEL_203;
          case 15:
            sub_1B2C9F998();
            break;
          case 16:
            unsigned int v29 = sub_1B2CA5CF4();
LABEL_82:
            sub_1B29A2920(v29);
            break;
          case 17:
            sub_1B29A0BF0();
            break;
          case 18:
            sub_1B2CA5ADC();
            break;
          default:
            break;
        }
        sub_1B2CA5B2C();
        sub_1B299B5E8();
        if ((v1 & 1) == 0) {
          goto LABEL_313;
        }
        sub_1B2CA5B14();
        switch(v30)
        {
          case 1:
            sub_1B29A5160();
            break;
          case 2:
            sub_1B2CA5B58();
            break;
          case 3:
            sub_1B2999BE4();
            break;
          case 4:
            break;
          case 5:
            sub_1B29A3014();
            break;
          case 6:
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5AF8();
            break;
          case 8:
            sub_1B29A4708();
            break;
          case 9:
            sub_1B299F958();
            break;
          case 10:
            sub_1B2CA5AC8();
            break;
          case 11:
            unsigned int v61 = sub_1B2CA5CE4();
            goto LABEL_200;
          case 12:
            sub_1B2CA5C50();
            break;
          case 13:
            sub_1B29A1E9C();
            break;
          case 14:
            goto LABEL_88;
          case 15:
            swift_bridgeObjectRelease();
            goto LABEL_226;
          case 16:
            unsigned int v61 = sub_1B2CA5CF4();
LABEL_200:
            sub_1B29A2920(v61);
            break;
          case 17:
            sub_1B29A0BF0();
            break;
          case 18:
            sub_1B2CA5ADC();
            break;
          default:
            sub_1B2CA5C64();
            break;
        }
LABEL_203:
        sub_1B299BC1C();
        sub_1B299B5E8();
        if ((v1 & 1) == 0)
        {
LABEL_313:
          sub_1B2CA5B14();
          switch(v62)
          {
            case 1:
              sub_1B29A5160();
              goto LABEL_225;
            case 2:
              sub_1B2CA5B58();
              goto LABEL_225;
            case 3:
              sub_1B2999BE4();
              goto LABEL_225;
            case 4:
              goto LABEL_225;
            case 5:
              sub_1B29A3014();
              goto LABEL_225;
            case 6:
              sub_1B299DCD8();
              goto LABEL_225;
            case 7:
              sub_1B2CA5AF8();
              goto LABEL_225;
            case 8:
              sub_1B29A4708();
              goto LABEL_225;
            case 9:
              sub_1B299F958();
              goto LABEL_225;
            case 10:
              sub_1B2CA5AC8();
              goto LABEL_225;
            case 11:
              sub_1B29A2920(0x61636F6Cu);
              goto LABEL_225;
            case 12:
              sub_1B2CA5C50();
              goto LABEL_225;
            case 13:
              sub_1B29A1E9C();
              goto LABEL_225;
            case 14:
              sub_1B299E934();
              goto LABEL_225;
            case 15:
              sub_1B2C9F998();
              goto LABEL_225;
            case 16:
              swift_bridgeObjectRelease();
              break;
            case 17:
              sub_1B29A0BF0();
              goto LABEL_225;
            case 18:
              sub_1B2CA5ADC();
              goto LABEL_225;
            default:
              sub_1B2CA5C64();
LABEL_225:
              sub_1B2CA5C10();
              sub_1B2CA5EF0();
              break;
          }
        }
LABEL_226:
        sub_1B29A3EB4(&qword_1E9C39A60);
        uint64_t v63 = sub_1B2CA5E08();
        sub_1B2CA5D70(v63, v64, v65, v66, v67, v68, v69, v70, v116, v117, v118, v119, v120, v121, v122, (uint64_t)v123, v124);
        uint64_t v71 = swift_bridgeObjectRetain();
        uint64_t v72 = (void *)sub_1B2CA69D8(v71);
        if (!v72) {
          goto LABEL_255;
        }
        uint64_t v73 = v72;
        uint64_t v74 = v72[2];
        if (!v74)
        {
          swift_bridgeObjectRelease();
          uint64_t v46 = 0;
          unint64_t v47 = 0xA000000000000000;
          goto LABEL_231;
        }
        if (v74 == 1)
        {
          uint64_t v46 = v72[4];
          unint64_t v45 = v72[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1B2CA5F74();
          v0[9] = v73;
          sub_1B29A3EB4(&qword_1EB7E3B30);
          sub_1B2A20660();
          sub_1B2CA5C94();
          sub_1B2E822D8();
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          sub_1B2C9F760();
          swift_bridgeObjectRelease();
          uint64_t v46 = v0[2];
          unint64_t v45 = v0[3];
        }
        unint64_t v47 = 0xA000000000000000;
        goto LABEL_234;
      case 3:
        sub_1B2CA5CAC();
        sub_1B2CA5CAC();
        if (!sub_1B2CA69D8(v8)) {
          goto LABEL_260;
        }
        swift_bridgeObjectRelease();
        sub_1B2CA5C38();
        switch(v98)
        {
          case 1:
            sub_1B29A5160();
            break;
          case 2:
            sub_1B2CA5B58();
            break;
          case 3:
            sub_1B2999BE4();
            break;
          case 4:
            sub_1B2C9FA74();
            break;
          case 5:
            sub_1B29A3014();
            break;
          case 6:
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5AF8();
            break;
          case 8:
            sub_1B29A4708();
            break;
          case 9:
            sub_1B299F958();
            break;
          case 10:
            sub_1B2CA5AC8();
            break;
          case 11:
            unsigned int v106 = sub_1B2CA5CE4();
            goto LABEL_281;
          case 12:
            sub_1B2CA5C50();
            break;
          case 13:
            sub_1B29A1E9C();
            break;
          case 14:
            sub_1B2CA5DF0();
LABEL_287:
            sub_1B299E934();
            goto LABEL_299;
          case 15:
            sub_1B2C9F998();
            break;
          case 16:
            unsigned int v106 = sub_1B2CA5CF4();
LABEL_281:
            sub_1B29A2920(v106);
            break;
          case 17:
            sub_1B29A0BF0();
            break;
          case 18:
            sub_1B2CA5ADC();
            break;
          default:
            break;
        }
        sub_1B2CA5B2C();
        sub_1B299B5E8();
        if (v1)
        {
          switch(v10)
          {
            case 1:
            case 4:
            case 7:
            case 8:
            case 12:
            case 17:
            case 18:
              break;
            case 2:
              sub_1B2CA5B58();
              break;
            case 3:
              sub_1B2CA5C88();
              break;
            case 5:
              sub_1B2CA5EE4();
              sub_1B29A3014();
              break;
            case 6:
              sub_1B2CA5EE4();
              sub_1B299DCD8();
              break;
            case 9:
              sub_1B29A2920(0x616C6572u);
              break;
            case 10:
              sub_1B2CA5AC8();
              break;
            case 11:
              sub_1B2CA5EE4();
              unsigned int v107 = sub_1B2CA5D34();
              goto LABEL_298;
            case 13:
              sub_1B2CA5EE4();
              sub_1B29A1E9C();
              break;
            case 14:
              goto LABEL_287;
            case 15:
              swift_bridgeObjectRelease();
              goto LABEL_300;
            case 16:
              sub_1B2CA5EE4();
              unsigned int v107 = sub_1B2CA5D28();
LABEL_298:
              sub_1B29A2920(v107);
              break;
            default:
              sub_1B2CA5C64();
              break;
          }
LABEL_299:
          sub_1B299BC1C();
          sub_1B2CA5EF0();
          if (v10)
          {
LABEL_300:
            char v108 = 4;
            goto LABEL_309;
          }
        }
        LOBYTE(v125) = v6;
        PersonalKnowledgeToolResultAttributeSemanticType.rawValue.getter();
        sub_1B2CA5E8C();
        BOOL v110 = v110 && v109 == 0xE800000000000000;
        if (v110)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v111 = sub_1B2CA5C10();
          swift_bridgeObjectRelease();
          if ((v111 & 1) == 0)
          {
            char v108 = 2;
            goto LABEL_309;
          }
        }
        char v108 = 3;
LABEL_309:
        sub_1B29A3EB4(&qword_1E9C39A60);
        uint64_t v112 = sub_1B2CA5E08();
        uint64_t v113 = sub_1B2A6A088(v112, 1);
        *uint64_t v114 = v6;
        v114[1] = v108;
        nullsub_1(v113);
        sub_1B2CA5DA0();
        sub_1B2C9F3CC();
        sub_1B299E4D4();
        *uint64_t v115 = 0;
        v115[1] = 0;
        sub_1B2CA5CAC();
LABEL_256:
        swift_willThrow();
        sub_1B2CA5DA0();
        swift_bridgeObjectRelease();
        sub_1B2CA5188(v8, v9, 2u);
        swift_release();
        goto LABEL_262;
      default:
        sub_1B2CA5CAC();
        sub_1B2CA5CAC();
        if (!sub_1B2CA69D8(v8))
        {
LABEL_260:
          sub_1B2CA50D8();
          sub_1B299E4D4();
          *uint64_t v99 = 3;
          goto LABEL_261;
        }
        swift_bridgeObjectRelease();
        sub_1B2CA5C38();
        switch(v22)
        {
          case 1:
            sub_1B29A5160();
            break;
          case 2:
            sub_1B2CA5B58();
            break;
          case 3:
            sub_1B2999BE4();
            break;
          case 4:
            sub_1B2C9FA74();
            break;
          case 5:
            sub_1B29A3014();
            break;
          case 6:
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5AF8();
            break;
          case 8:
            sub_1B29A4708();
            break;
          case 9:
            sub_1B299F958();
            break;
          case 10:
            sub_1B2CA5AC8();
            break;
          case 11:
            unsigned int v25 = sub_1B2CA5CE4();
            goto LABEL_36;
          case 12:
            sub_1B2CA5C50();
            break;
          case 13:
            sub_1B29A1E9C();
            break;
          case 14:
            sub_1B2CA5DF0();
LABEL_42:
            sub_1B299E934();
            goto LABEL_107;
          case 15:
            sub_1B2C9F998();
            break;
          case 16:
            unsigned int v25 = sub_1B2CA5CF4();
LABEL_36:
            sub_1B29A2920(v25);
            break;
          case 17:
            sub_1B29A0BF0();
            break;
          case 18:
            sub_1B2CA5ADC();
            break;
          default:
            break;
        }
        sub_1B2CA5B2C();
        sub_1B299B5E8();
        if ((v1 & 1) == 0) {
          goto LABEL_314;
        }
        sub_1B2CA5B14();
        switch(v26)
        {
          case 1:
            sub_1B29A5160();
            break;
          case 2:
            sub_1B2CA5B58();
            break;
          case 3:
            sub_1B2999BE4();
            break;
          case 4:
            break;
          case 5:
            sub_1B29A3014();
            break;
          case 6:
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5AF8();
            break;
          case 8:
            sub_1B29A4708();
            break;
          case 9:
            sub_1B299F958();
            break;
          case 10:
            sub_1B2CA5AC8();
            break;
          case 11:
            unsigned int v31 = sub_1B2CA5CE4();
            goto LABEL_104;
          case 12:
            sub_1B2CA5C50();
            break;
          case 13:
            sub_1B29A1E9C();
            break;
          case 14:
            goto LABEL_42;
          case 15:
            swift_bridgeObjectRelease();
            goto LABEL_130;
          case 16:
            unsigned int v31 = sub_1B2CA5CF4();
LABEL_104:
            sub_1B29A2920(v31);
            break;
          case 17:
            sub_1B29A0BF0();
            break;
          case 18:
            sub_1B2CA5ADC();
            break;
          default:
            sub_1B2CA5C64();
            break;
        }
LABEL_107:
        sub_1B299BC1C();
        sub_1B299B5E8();
        if ((v1 & 1) == 0)
        {
LABEL_314:
          sub_1B2CA5B14();
          switch(v32)
          {
            case 1:
              sub_1B29A5160();
              goto LABEL_129;
            case 2:
              sub_1B2CA5B58();
              goto LABEL_129;
            case 3:
              sub_1B2999BE4();
              goto LABEL_129;
            case 4:
              goto LABEL_129;
            case 5:
              sub_1B29A3014();
              goto LABEL_129;
            case 6:
              sub_1B299DCD8();
              goto LABEL_129;
            case 7:
              sub_1B2CA5AF8();
              goto LABEL_129;
            case 8:
              sub_1B29A4708();
              goto LABEL_129;
            case 9:
              sub_1B299F958();
              goto LABEL_129;
            case 10:
              sub_1B2CA5AC8();
              goto LABEL_129;
            case 11:
              sub_1B29A2920(0x61636F6Cu);
              goto LABEL_129;
            case 12:
              sub_1B2CA5C50();
              goto LABEL_129;
            case 13:
              sub_1B29A1E9C();
              goto LABEL_129;
            case 14:
              sub_1B299E934();
              goto LABEL_129;
            case 15:
              sub_1B2C9F998();
              goto LABEL_129;
            case 16:
              swift_bridgeObjectRelease();
              break;
            case 17:
              sub_1B29A0BF0();
              goto LABEL_129;
            case 18:
              sub_1B2CA5ADC();
              goto LABEL_129;
            default:
              sub_1B2CA5C64();
LABEL_129:
              sub_1B2CA5C10();
              sub_1B2CA5EF0();
              break;
          }
        }
LABEL_130:
        sub_1B29A3EB4(&qword_1E9C39A60);
        uint64_t v33 = sub_1B2CA5E08();
        sub_1B2CA5D70(v33, v34, v35, v36, v37, v38, v39, v40, v116, v117, v118, v119, v120, v121, v122, (uint64_t)v123, v124);
        uint64_t v41 = swift_bridgeObjectRetain();
        uint64_t v42 = (void *)sub_1B2CA69D8(v41);
        if (!v42)
        {
LABEL_255:
          sub_1B2C9F3CC();
          sub_1B299E4D4();
          _OWORD *v97 = xmmword_1B2EC00B0;
          goto LABEL_256;
        }
        uint64_t v43 = v42;
        uint64_t v44 = v42[2];
        if (v44)
        {
          if (v44 == 1)
          {
            uint64_t v46 = v42[4];
            unint64_t v45 = v42[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1B2CA5F60();
            v0[10] = v43;
            sub_1B29A3EB4(&qword_1EB7E3B30);
            sub_1B2A20660();
            sub_1B2CA5C94();
            sub_1B2E822D8();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2C9F760();
            swift_bridgeObjectRelease();
            uint64_t v46 = v0[4];
            unint64_t v45 = v0[5];
          }
          unint64_t v47 = 0x9000000000000000;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v46 = 0;
          unint64_t v47 = 0x9000000000000000;
LABEL_231:
          unint64_t v45 = 0xE000000000000000;
        }
LABEL_234:
        uint64_t v75 = v0[13];
        uint64_t v76 = swift_allocObject();
        *(void *)(v76 + 16) = v46;
        *(void *)(v76 + 24) = v45;
        sub_1B2CA5DA0();
        uint64_t v18 = *(void *)(v75 + 56);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2CA5D04();
          uint64_t v18 = v84;
        }
        unint64_t v77 = *(void *)(v18 + 16);
        if (v77 >= *(void *)(v18 + 24) >> 1)
        {
          sub_1B2CA5DD8();
          uint64_t v18 = v85;
        }
        unint64_t v78 = v47 | v76;
        uint64_t v79 = v0[13];
        *(void *)(v18 + 16) = v77 + 1;
        uint64_t v80 = (void *)(v18 + 24 * v77);
        v80[4] = v2;
        v80[5] = v78;
        v80[6] = v1;
        sub_1B2CA5DA0();
        *(void *)(v79 + 56) = v18;
LABEL_239:
        if (*(void *)(v18 + 16))
        {
          uint64_t v81 = sub_1B2CA5F40();
          if (v18) {
            int v6 = *(unsigned __int8 *)(v81 + 32);
          }
          else {
            int v6 = 19;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          int v6 = 19;
        }
        uint64_t v5 = v0[16] + 1;
        if (v5 == v0[15]) {
          goto LABEL_246;
        }
        continue;
    }
  }
}

uint64_t sub_1B2CA37A8()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1B2CA5070;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1B2CA38FC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1B2CA38FC()
{
  uint64_t v2 = v0[12];
  uint64_t v3 = *(void *)(v0[13] + 56);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2CA5D04();
    uint64_t v3 = v123;
  }
  uint64_t v134 = (uint64_t)(v0 + 4);
  uint64_t v135 = (uint64_t)(v0 + 2);
  uint64_t v132 = (uint64_t)(v0 + 8);
  uint64_t v133 = (uint64_t)(v0 + 6);
  uint64_t v130 = (uint64_t)(v0 + 10);
  uint64_t v131 = (uint64_t)(v0 + 9);
  uint64_t v127 = (uint64_t)(v0 + 11);
  uint64_t v128 = (uint64_t)(v0 + 12);
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 >= *(void *)(v3 + 24) >> 1)
  {
    sub_1B2CA5DD8();
    uint64_t v3 = v124;
  }
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[20];
  uint64_t v8 = v0[17];
  uint64_t v7 = v0[18];
  uint64_t v9 = v0[13];
  *(void *)(v3 + 16) = v4 + 1;
  uint64_t v10 = (void *)(v3 + 24 * v4);
  void v10[4] = v8;
  v10[5] = v2;
  v10[6] = v6;
  sub_1B2CA5188(v7, v5, 0);
  *(void *)(v9 + 56) = v3;
  uint64_t v129 = v0[22];
  unint64_t v136 = "lAddress";
  long long v137 = xmmword_1B2EC00A0;
  while (2)
  {
    while (2)
    {
      if (*(void *)(v3 + 16))
      {
        uint64_t v11 = sub_1B2CA5F40();
        if (v3) {
          int v12 = *(unsigned __int8 *)(v11 + 32);
        }
        else {
          int v12 = 19;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        int v12 = 19;
      }
      uint64_t v13 = v0[16] + 1;
      if (v13 == v0[15])
      {
        swift_release();
        sub_1B2CA5F08();
        sub_1B299AFE8();
        __asm { BRAA            X1, X16 }
      }
      sub_1B2CA5EA4(v13);
      uint64_t v15 = *(void *)(v14 + 40);
      v0[18] = v15;
      uint64_t v16 = *(void *)(v14 + 48);
      v0[19] = v16;
      uint64_t v17 = *(unsigned __int8 *)(v14 + 56);
      switch(*(unsigned char *)(v14 + 56))
      {
        case 1:
          sub_1B299B2B4();
          sub_1B299B2B4();
          uint64_t v21 = sub_1B2CA5EBC();
          uint64_t v23 = sub_1B2CA622C(v21, v22);
          if (v129) {
            goto LABEL_272;
          }
          uint64_t v24 = v23;
          sub_1B2CA5188(v15, v16, 1u);
          sub_1B299B2B4();
          uint64_t v25 = sub_1B2CA5EBC();
          sub_1B2CA028C(v25, v26, v27);
          uint64_t v126 = 0;
          uint64_t v28 = v0[13];
          uint64_t v29 = v15;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v9 = v0[11];
          uint64_t v3 = *(void *)(v28 + 56);
          unint64_t v30 = v1;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2CA5D04();
            uint64_t v3 = v91;
          }
          unint64_t v1 = *(void *)(v3 + 16);
          if (v1 >= *(void *)(v3 + 24) >> 1)
          {
            sub_1B2CA5DD8();
            uint64_t v3 = v92;
          }
          uint64_t v31 = v0[13];
          *(void *)(v3 + 16) = v1 + 1;
          uint64_t v32 = (void *)(v3 + 24 * v1);
          v32[4] = v30;
          v32[5] = v9;
          v32[6] = v24;
          sub_1B2CA5188(v29, v16, 1u);
          uint64_t v129 = 0;
          *(void *)(v31 + 56) = v3;
          continue;
        case 2:
          if (v12 == 19)
          {
            sub_1B2CA50D8();
            sub_1B299E4D4();
            *uint64_t v103 = 2;
            sub_1B2CA5CC8();
            uint64_t v100 = v15;
            uint64_t v101 = v16;
            unsigned __int8 v102 = 2;
LABEL_264:
            sub_1B2CA5124(v100, v101, v102);
LABEL_271:
            swift_willThrow();
LABEL_272:
            swift_release();
            uint64_t v107 = sub_1B2CA5EBC();
            sub_1B2CA5188(v107, v108, v17);
            uint64_t v109 = sub_1B2CA5EBC();
            sub_1B2CA5188(v109, v110, v17);
LABEL_273:
            sub_1B299AFE8();
            __asm { BRAA            X1, X16 }
          }
          return result;
        case 3:
          sub_1B2CA50D8();
          sub_1B299E4D4();
          *uint64_t v99 = 0;
          sub_1B2CA5124(v15, v16, 3u);
          uint64_t v100 = v15;
          uint64_t v101 = v16;
          unsigned __int8 v102 = 3;
          goto LABEL_264;
        default:
          sub_1B2CA5EC8();
          sub_1B2CA5EC8();
          uint64_t v95 = sub_1B2CA5EBC();
          v0[20] = sub_1B2CA612C(v95);
          sub_1B2CA5188(v15, v16, 0);
          sub_1B2CA5EC8();
          uint64_t v96 = (void *)swift_task_alloc();
          v0[21] = v96;
          *uint64_t v96 = v0;
          v96[1] = sub_1B2CA37A8;
          sub_1B299AFE8();
          return sub_1B2C91D74();
      }
    }
    switch((char)v16)
    {
      case 1:
        sub_1B2CA5CC8();
        sub_1B2CA5CC8();
        if (!sub_1B2CA69D8(v15)) {
          goto LABEL_270;
        }
        swift_bridgeObjectRelease();
        sub_1B2CA5C38();
        switch(v19)
        {
          case 1:
            sub_1B2CA5BA0();
            break;
          case 2:
            sub_1B2CA5B58();
            break;
          case 3:
            sub_1B2CA5C88();
            break;
          case 4:
            sub_1B2C9FA74();
            break;
          case 5:
            sub_1B29A3014();
            break;
          case 6:
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5BF4();
            break;
          case 8:
            sub_1B2CA5BD8();
            break;
          case 9:
            sub_1B2CA5BBC();
            break;
          case 10:
            sub_1B2CA5AC8();
            break;
          case 11:
            unsigned int v36 = sub_1B2CA5D34();
            goto LABEL_70;
          case 12:
            sub_1B2CA5C74();
            break;
          case 13:
            sub_1B29A1E9C();
            break;
          case 14:
            sub_1B2CA5DF0();
LABEL_76:
            unint64_t v34 = 0xE900000000000065;
            sub_1B299E934();
            goto LABEL_169;
          case 15:
            sub_1B2C9F998();
            break;
          case 16:
            unsigned int v36 = sub_1B2CA5D28();
LABEL_70:
            sub_1B29A2920(v36);
            break;
          case 17:
            sub_1B2CA5B84();
            break;
          case 18:
            sub_1B2CA5B68();
            break;
          default:
            break;
        }
        sub_1B2CA5B2C();
        sub_1B2CA5E3C();
        if ((v9 & 1) == 0) {
          goto LABEL_330;
        }
        unint64_t v34 = 0xE900000000000065;
        sub_1B2CA5B14();
        switch(v37)
        {
          case 1:
            sub_1B2CA5BA0();
            goto LABEL_168;
          case 2:
            unint64_t v34 = 0xE500000000000000;
            sub_1B2CA5B58();
            break;
          case 3:
            unint64_t v34 = 0xE400000000000000;
            sub_1B2CA5C88();
            break;
          case 4:
            break;
          case 5:
            unint64_t v34 = 0xE800000000000000;
            sub_1B29A3014();
            break;
          case 6:
            unint64_t v34 = 0xE800000000000000;
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5BF4();
            goto LABEL_168;
          case 8:
            sub_1B2CA5BD8();
            goto LABEL_158;
          case 9:
            sub_1B2CA5BBC();
LABEL_158:
            unint64_t v34 = 0xEC00000000000065;
            break;
          case 10:
            unint64_t v34 = 0xE700000000000000;
            sub_1B2CA5AC8();
            break;
          case 11:
            unint64_t v34 = 0xE800000000000000;
            unsigned int v57 = sub_1B2CA5D34();
            goto LABEL_165;
          case 12:
            sub_1B2CA5C74();
            break;
          case 13:
            unint64_t v34 = 0xE800000000000000;
            sub_1B29A1E9C();
            break;
          case 14:
            goto LABEL_76;
          case 15:
            swift_bridgeObjectRelease();
            goto LABEL_193;
          case 16:
            unint64_t v34 = 0xE800000000000000;
            unsigned int v57 = sub_1B2CA5D28();
LABEL_165:
            sub_1B29A2920(v57);
            break;
          case 17:
            sub_1B2CA5B84();
            break;
          case 18:
            sub_1B2CA5B68();
LABEL_168:
            unint64_t v34 = 0xEB00000000000065;
            break;
          default:
            unint64_t v34 = 0xE600000000000000;
            sub_1B2CA5C64();
            break;
        }
LABEL_169:
        sub_1B299BC1C();
        sub_1B2CA5E3C();
        if ((v9 & 1) == 0)
        {
LABEL_330:
          unint64_t v34 = 0xE900000000000065;
          sub_1B2CA5B14();
          switch(v58)
          {
            case 1:
              sub_1B2CA5BA0();
              goto LABEL_191;
            case 2:
              unint64_t v34 = 0xE500000000000000;
              sub_1B2CA5B58();
              goto LABEL_192;
            case 3:
              unint64_t v34 = 0xE400000000000000;
              sub_1B2CA5C88();
              goto LABEL_192;
            case 4:
              goto LABEL_192;
            case 5:
              unint64_t v34 = 0xE800000000000000;
              sub_1B29A3014();
              goto LABEL_192;
            case 6:
              unint64_t v34 = 0xE800000000000000;
              sub_1B299DCD8();
              goto LABEL_192;
            case 7:
              sub_1B2CA5BF4();
              goto LABEL_191;
            case 8:
              sub_1B2CA5BD8();
              goto LABEL_181;
            case 9:
              sub_1B2CA5BBC();
LABEL_181:
              unint64_t v34 = 0xEC00000000000065;
              goto LABEL_192;
            case 10:
              unint64_t v34 = 0xE700000000000000;
              sub_1B2CA5AC8();
              goto LABEL_192;
            case 11:
              unint64_t v34 = 0xE800000000000000;
              sub_1B29A2920(0x61636F6Cu);
              goto LABEL_192;
            case 12:
              sub_1B2CA5C74();
              goto LABEL_192;
            case 13:
              unint64_t v34 = 0xE800000000000000;
              sub_1B29A1E9C();
              goto LABEL_192;
            case 14:
              sub_1B299E934();
              goto LABEL_192;
            case 15:
              unint64_t v34 = 0xE700000000000000;
              sub_1B2C9F998();
              goto LABEL_192;
            case 16:
              swift_bridgeObjectRelease();
              break;
            case 17:
              sub_1B2CA5B84();
              goto LABEL_192;
            case 18:
              sub_1B2CA5B68();
LABEL_191:
              unint64_t v34 = 0xEB00000000000065;
              goto LABEL_192;
            default:
              unint64_t v34 = 0xE600000000000000;
              sub_1B2CA5C64();
LABEL_192:
              sub_1B2CA5C10();
              swift_bridgeObjectRelease();
              break;
          }
        }
LABEL_193:
        sub_1B29A3EB4(&qword_1E9C39A60);
        uint64_t v59 = sub_1B2CA5E08();
        sub_1B2CA5D40(v59, v60, v61, v62, v63, v64, v65, v66, v125, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135,
          (uint64_t)v136,
          v137);
        uint64_t v67 = swift_bridgeObjectRetain();
        uint64_t v68 = (void *)sub_1B2CA69D8(v67);
        if (!v68) {
          goto LABEL_265;
        }
        uint64_t v69 = v68[2];
        if (v69)
        {
          unint64_t v54 = v1;
          if (v69 == 1)
          {
            uint64_t v56 = v68[4];
            unint64_t v55 = v68[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          else
          {
            v0[6] = 10075;
            v0[7] = 0xE200000000000000;
            v0[8] = v68;
            sub_1B29A3EB4(&qword_1EB7E3B30);
            sub_1B2A20660();
            sub_1B2CA5C94();
            sub_1B2E822D8();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2C9F760();
            swift_bridgeObjectRelease();
            uint64_t v56 = v0[6];
            unint64_t v55 = v0[7];
          }
        }
        else
        {
          unint64_t v54 = v1;
          swift_bridgeObjectRelease();
          uint64_t v56 = 0;
          unint64_t v55 = 0xE000000000000000;
        }
        unint64_t v1 = 0x9000000000000004;
        goto LABEL_251;
      case 2:
        sub_1B2CA5CC8();
        sub_1B2CA5CC8();
        if (!sub_1B2CA69D8(v15)) {
          goto LABEL_270;
        }
        swift_bridgeObjectRelease();
        sub_1B2CA5C38();
        switch(v20)
        {
          case 1:
            sub_1B2CA5BA0();
            break;
          case 2:
            sub_1B2CA5B58();
            break;
          case 3:
            sub_1B2CA5C88();
            break;
          case 4:
            sub_1B2C9FA74();
            break;
          case 5:
            sub_1B29A3014();
            break;
          case 6:
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5BF4();
            break;
          case 8:
            sub_1B2CA5BD8();
            break;
          case 9:
            sub_1B2CA5BBC();
            break;
          case 10:
            sub_1B2CA5AC8();
            break;
          case 11:
            unsigned int v38 = sub_1B2CA5D34();
            goto LABEL_93;
          case 12:
            sub_1B2CA5C74();
            break;
          case 13:
            sub_1B29A1E9C();
            break;
          case 14:
            sub_1B2CA5DF0();
LABEL_99:
            unint64_t v34 = 0xE900000000000065;
            sub_1B299E934();
            goto LABEL_219;
          case 15:
            sub_1B2C9F998();
            break;
          case 16:
            unsigned int v38 = sub_1B2CA5D28();
LABEL_93:
            sub_1B29A2920(v38);
            break;
          case 17:
            sub_1B2CA5B84();
            break;
          case 18:
            sub_1B2CA5B68();
            break;
          default:
            break;
        }
        sub_1B2CA5B2C();
        sub_1B2CA5E3C();
        if ((v9 & 1) == 0) {
          goto LABEL_331;
        }
        unint64_t v34 = 0xE900000000000065;
        sub_1B2CA5B14();
        switch(v39)
        {
          case 1:
            sub_1B2CA5BA0();
            goto LABEL_218;
          case 2:
            unint64_t v34 = 0xE500000000000000;
            sub_1B2CA5B58();
            break;
          case 3:
            unint64_t v34 = 0xE400000000000000;
            sub_1B2CA5C88();
            break;
          case 4:
            break;
          case 5:
            unint64_t v34 = 0xE800000000000000;
            sub_1B29A3014();
            break;
          case 6:
            unint64_t v34 = 0xE800000000000000;
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5BF4();
            goto LABEL_218;
          case 8:
            sub_1B2CA5BD8();
            goto LABEL_208;
          case 9:
            sub_1B2CA5BBC();
LABEL_208:
            unint64_t v34 = 0xEC00000000000065;
            break;
          case 10:
            unint64_t v34 = 0xE700000000000000;
            sub_1B2CA5AC8();
            break;
          case 11:
            unint64_t v34 = 0xE800000000000000;
            unsigned int v70 = sub_1B2CA5D34();
            goto LABEL_215;
          case 12:
            sub_1B2CA5C74();
            break;
          case 13:
            unint64_t v34 = 0xE800000000000000;
            sub_1B29A1E9C();
            break;
          case 14:
            goto LABEL_99;
          case 15:
            swift_bridgeObjectRelease();
            goto LABEL_243;
          case 16:
            unint64_t v34 = 0xE800000000000000;
            unsigned int v70 = sub_1B2CA5D28();
LABEL_215:
            sub_1B29A2920(v70);
            break;
          case 17:
            sub_1B2CA5B84();
            break;
          case 18:
            sub_1B2CA5B68();
LABEL_218:
            unint64_t v34 = 0xEB00000000000065;
            break;
          default:
            unint64_t v34 = 0xE600000000000000;
            sub_1B2CA5C64();
            break;
        }
LABEL_219:
        sub_1B299BC1C();
        sub_1B2CA5E3C();
        if ((v9 & 1) == 0)
        {
LABEL_331:
          unint64_t v34 = 0xE900000000000065;
          sub_1B2CA5B14();
          switch(v71)
          {
            case 1:
              sub_1B2CA5BA0();
              goto LABEL_241;
            case 2:
              unint64_t v34 = 0xE500000000000000;
              sub_1B2CA5B58();
              goto LABEL_242;
            case 3:
              unint64_t v34 = 0xE400000000000000;
              sub_1B2CA5C88();
              goto LABEL_242;
            case 4:
              goto LABEL_242;
            case 5:
              unint64_t v34 = 0xE800000000000000;
              sub_1B29A3014();
              goto LABEL_242;
            case 6:
              unint64_t v34 = 0xE800000000000000;
              sub_1B299DCD8();
              goto LABEL_242;
            case 7:
              sub_1B2CA5BF4();
              goto LABEL_241;
            case 8:
              sub_1B2CA5BD8();
              goto LABEL_231;
            case 9:
              sub_1B2CA5BBC();
LABEL_231:
              unint64_t v34 = 0xEC00000000000065;
              goto LABEL_242;
            case 10:
              unint64_t v34 = 0xE700000000000000;
              sub_1B2CA5AC8();
              goto LABEL_242;
            case 11:
              unint64_t v34 = 0xE800000000000000;
              sub_1B29A2920(0x61636F6Cu);
              goto LABEL_242;
            case 12:
              sub_1B2CA5C74();
              goto LABEL_242;
            case 13:
              unint64_t v34 = 0xE800000000000000;
              sub_1B29A1E9C();
              goto LABEL_242;
            case 14:
              sub_1B299E934();
              goto LABEL_242;
            case 15:
              unint64_t v34 = 0xE700000000000000;
              sub_1B2C9F998();
              goto LABEL_242;
            case 16:
              swift_bridgeObjectRelease();
              break;
            case 17:
              sub_1B2CA5B84();
              goto LABEL_242;
            case 18:
              sub_1B2CA5B68();
LABEL_241:
              unint64_t v34 = 0xEB00000000000065;
              goto LABEL_242;
            default:
              unint64_t v34 = 0xE600000000000000;
              sub_1B2CA5C64();
LABEL_242:
              sub_1B2CA5C10();
              swift_bridgeObjectRelease();
              break;
          }
        }
LABEL_243:
        sub_1B29A3EB4(&qword_1E9C39A60);
        uint64_t v72 = sub_1B2CA5E08();
        sub_1B2CA5D40(v72, v73, v74, v75, v76, v77, v78, v79, v125, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135,
          (uint64_t)v136,
          v137);
        uint64_t v80 = swift_bridgeObjectRetain();
        uint64_t v81 = (void *)sub_1B2CA69D8(v80);
        if (!v81) {
          goto LABEL_265;
        }
        uint64_t v82 = v81;
        uint64_t v83 = v81[2];
        if (!v83)
        {
          unint64_t v54 = v1;
          swift_bridgeObjectRelease();
          uint64_t v56 = 0;
          unint64_t v1 = 0xA000000000000000;
          goto LABEL_248;
        }
        unint64_t v54 = v1;
        if (v83 == 1)
        {
          uint64_t v56 = v81[4];
          unint64_t v55 = v81[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1B2CA5F74();
          v0[9] = v82;
          sub_1B29A3EB4(&qword_1EB7E3B30);
          sub_1B2A20660();
          sub_1B2CA5C94();
          sub_1B2E822D8();
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          sub_1B2C9F760();
          swift_bridgeObjectRelease();
          uint64_t v56 = v0[2];
          unint64_t v55 = v0[3];
        }
        unint64_t v1 = 0xA000000000000000;
        goto LABEL_251;
      case 3:
        sub_1B2CA5CC8();
        sub_1B2CA5CC8();
        if (!sub_1B2CA69D8(v15)) {
          goto LABEL_270;
        }
        swift_bridgeObjectRelease();
        sub_1B2CA5C38();
        switch(v105)
        {
          case 1:
            sub_1B29A5160();
            break;
          case 2:
            sub_1B2CA5B58();
            break;
          case 3:
            sub_1B2999BE4();
            break;
          case 4:
            sub_1B2C9FA74();
            break;
          case 5:
            sub_1B29A3014();
            break;
          case 6:
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5AF8();
            break;
          case 8:
            sub_1B29A4708();
            break;
          case 9:
            sub_1B299F958();
            break;
          case 10:
            sub_1B2CA5AC8();
            break;
          case 11:
            unsigned int v113 = sub_1B2CA5CE4();
            goto LABEL_292;
          case 12:
            sub_1B2CA5F2C();
            break;
          case 13:
            sub_1B29A1E9C();
            break;
          case 14:
            sub_1B2CA5DF0();
LABEL_298:
            sub_1B299E934();
            goto LABEL_317;
          case 15:
            sub_1B2C9F998();
            break;
          case 16:
            unsigned int v113 = sub_1B2CA5CF4();
LABEL_292:
            sub_1B29A2920(v113);
            break;
          case 17:
            sub_1B29A0BF0();
            break;
          case 18:
            sub_1B2CA5ADC();
            break;
          default:
            break;
        }
        sub_1B2CA5B2C();
        sub_1B299B5E8();
        if (v9)
        {
          switch(v17)
          {
            case 1:
              sub_1B29A5160();
              break;
            case 2:
              sub_1B2CA5B58();
              break;
            case 3:
              sub_1B2999BE4();
              break;
            case 4:
              break;
            case 5:
              sub_1B29A3014();
              break;
            case 6:
              sub_1B299DCD8();
              break;
            case 7:
              sub_1B2CA5AF8();
              break;
            case 8:
              sub_1B29A4708();
              break;
            case 9:
              sub_1B299F958();
              break;
            case 10:
              sub_1B2CA5AC8();
              break;
            case 11:
              unsigned int v114 = sub_1B2CA5CE4();
              goto LABEL_314;
            case 12:
              sub_1B2CA5F2C();
              break;
            case 13:
              sub_1B29A1E9C();
              break;
            case 14:
              goto LABEL_298;
            case 15:
              swift_bridgeObjectRelease();
              goto LABEL_318;
            case 16:
              unsigned int v114 = sub_1B2CA5CF4();
LABEL_314:
              sub_1B29A2920(v114);
              break;
            case 17:
              sub_1B29A0BF0();
              break;
            case 18:
              sub_1B2CA5ADC();
              break;
            default:
              sub_1B2CA5C64();
              break;
          }
LABEL_317:
          sub_1B299BC1C();
          sub_1B2CA5EF0();
          if (v17)
          {
LABEL_318:
            char v115 = 4;
            goto LABEL_327;
          }
        }
        PersonalKnowledgeToolResultAttributeSemanticType.rawValue.getter();
        sub_1B2CA5E8C();
        BOOL v117 = v117 && v116 == 0xE800000000000000;
        if (v117)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v118 = sub_1B2CA5C10();
          swift_bridgeObjectRelease();
          if ((v118 & 1) == 0)
          {
            char v115 = 2;
            goto LABEL_327;
          }
        }
        char v115 = 3;
LABEL_327:
        sub_1B29A3EB4(&qword_1E9C39A60);
        uint64_t v119 = sub_1B2CA5E08();
        uint64_t v120 = sub_1B2A6A088(v119, 1);
        *uint64_t v121 = v12;
        v121[1] = v115;
        nullsub_1(v120);
        sub_1B2CA5DBC();
        sub_1B2C9F3CC();
        sub_1B299E4D4();
        *uint64_t v122 = 0;
        v122[1] = 0;
        sub_1B2CA5CC8();
LABEL_266:
        swift_willThrow();
        sub_1B2CA5DBC();
        swift_bridgeObjectRelease();
        sub_1B2CA5188(v15, v16, 2u);
        swift_release();
        goto LABEL_273;
      default:
        sub_1B2CA5CC8();
        sub_1B2CA5CC8();
        if (!sub_1B2CA69D8(v15))
        {
LABEL_270:
          sub_1B2CA50D8();
          sub_1B299E4D4();
          *unsigned int v106 = 3;
          goto LABEL_271;
        }
        swift_bridgeObjectRelease();
        sub_1B2CA5C38();
        switch(v18)
        {
          case 1:
            sub_1B2CA5BA0();
            break;
          case 2:
            sub_1B2CA5B58();
            break;
          case 3:
            sub_1B2CA5C88();
            break;
          case 4:
            sub_1B2C9FA74();
            break;
          case 5:
            sub_1B29A3014();
            break;
          case 6:
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5BF4();
            break;
          case 8:
            sub_1B2CA5BD8();
            break;
          case 9:
            sub_1B2CA5BBC();
            break;
          case 10:
            sub_1B2CA5AC8();
            break;
          case 11:
            unsigned int v33 = sub_1B2CA5D34();
            goto LABEL_47;
          case 12:
            sub_1B2CA5C74();
            break;
          case 13:
            sub_1B29A1E9C();
            break;
          case 14:
            sub_1B2CA5DF0();
LABEL_53:
            unint64_t v34 = 0xE900000000000065;
            sub_1B299E934();
            goto LABEL_119;
          case 15:
            sub_1B2C9F998();
            break;
          case 16:
            unsigned int v33 = sub_1B2CA5D28();
LABEL_47:
            sub_1B29A2920(v33);
            break;
          case 17:
            sub_1B2CA5B84();
            break;
          case 18:
            sub_1B2CA5B68();
            break;
          default:
            break;
        }
        sub_1B2CA5B2C();
        sub_1B2CA5E3C();
        if ((v9 & 1) == 0) {
          goto LABEL_332;
        }
        unint64_t v34 = 0xE900000000000065;
        sub_1B2CA5B14();
        switch(v35)
        {
          case 1:
            sub_1B2CA5BA0();
            goto LABEL_118;
          case 2:
            unint64_t v34 = 0xE500000000000000;
            sub_1B2CA5B58();
            break;
          case 3:
            unint64_t v34 = 0xE400000000000000;
            sub_1B2CA5C88();
            break;
          case 4:
            break;
          case 5:
            unint64_t v34 = 0xE800000000000000;
            sub_1B29A3014();
            break;
          case 6:
            unint64_t v34 = 0xE800000000000000;
            sub_1B299DCD8();
            break;
          case 7:
            sub_1B2CA5BF4();
            goto LABEL_118;
          case 8:
            sub_1B2CA5BD8();
            goto LABEL_108;
          case 9:
            sub_1B2CA5BBC();
LABEL_108:
            unint64_t v34 = 0xEC00000000000065;
            break;
          case 10:
            unint64_t v34 = 0xE700000000000000;
            sub_1B2CA5AC8();
            break;
          case 11:
            unint64_t v34 = 0xE800000000000000;
            unsigned int v40 = sub_1B2CA5D34();
            goto LABEL_115;
          case 12:
            sub_1B2CA5C74();
            break;
          case 13:
            unint64_t v34 = 0xE800000000000000;
            sub_1B29A1E9C();
            break;
          case 14:
            goto LABEL_53;
          case 15:
            swift_bridgeObjectRelease();
            goto LABEL_143;
          case 16:
            unint64_t v34 = 0xE800000000000000;
            unsigned int v40 = sub_1B2CA5D28();
LABEL_115:
            sub_1B29A2920(v40);
            break;
          case 17:
            sub_1B2CA5B84();
            break;
          case 18:
            sub_1B2CA5B68();
LABEL_118:
            unint64_t v34 = 0xEB00000000000065;
            break;
          default:
            unint64_t v34 = 0xE600000000000000;
            sub_1B2CA5C64();
            break;
        }
LABEL_119:
        sub_1B299BC1C();
        sub_1B2CA5E3C();
        if ((v9 & 1) == 0)
        {
LABEL_332:
          unint64_t v34 = 0xE900000000000065;
          sub_1B2CA5B14();
          switch(v41)
          {
            case 1:
              sub_1B2CA5BA0();
              goto LABEL_141;
            case 2:
              unint64_t v34 = 0xE500000000000000;
              sub_1B2CA5B58();
              goto LABEL_142;
            case 3:
              unint64_t v34 = 0xE400000000000000;
              sub_1B2CA5C88();
              goto LABEL_142;
            case 4:
              goto LABEL_142;
            case 5:
              unint64_t v34 = 0xE800000000000000;
              sub_1B29A3014();
              goto LABEL_142;
            case 6:
              unint64_t v34 = 0xE800000000000000;
              sub_1B299DCD8();
              goto LABEL_142;
            case 7:
              sub_1B2CA5BF4();
              goto LABEL_141;
            case 8:
              sub_1B2CA5BD8();
              goto LABEL_131;
            case 9:
              sub_1B2CA5BBC();
LABEL_131:
              unint64_t v34 = 0xEC00000000000065;
              goto LABEL_142;
            case 10:
              unint64_t v34 = 0xE700000000000000;
              sub_1B2CA5AC8();
              goto LABEL_142;
            case 11:
              unint64_t v34 = 0xE800000000000000;
              sub_1B29A2920(0x61636F6Cu);
              goto LABEL_142;
            case 12:
              sub_1B2CA5C74();
              goto LABEL_142;
            case 13:
              unint64_t v34 = 0xE800000000000000;
              sub_1B29A1E9C();
              goto LABEL_142;
            case 14:
              sub_1B299E934();
              goto LABEL_142;
            case 15:
              unint64_t v34 = 0xE700000000000000;
              sub_1B2C9F998();
              goto LABEL_142;
            case 16:
              swift_bridgeObjectRelease();
              break;
            case 17:
              sub_1B2CA5B84();
              goto LABEL_142;
            case 18:
              sub_1B2CA5B68();
LABEL_141:
              unint64_t v34 = 0xEB00000000000065;
              goto LABEL_142;
            default:
              unint64_t v34 = 0xE600000000000000;
              sub_1B2CA5C64();
LABEL_142:
              sub_1B2CA5C10();
              swift_bridgeObjectRelease();
              break;
          }
        }
LABEL_143:
        sub_1B29A3EB4(&qword_1E9C39A60);
        uint64_t v42 = sub_1B2CA5E08();
        sub_1B2CA5D40(v42, v43, v44, v45, v46, v47, v48, v49, v125, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135,
          (uint64_t)v136,
          v137);
        uint64_t v50 = swift_bridgeObjectRetain();
        uint64_t v51 = (void *)sub_1B2CA69D8(v50);
        if (!v51)
        {
LABEL_265:
          sub_1B2C9F3CC();
          sub_1B299E4D4();
          *unint64_t v104 = xmmword_1B2EC00B0;
          goto LABEL_266;
        }
        uint64_t v52 = v51;
        uint64_t v53 = v51[2];
        if (v53)
        {
          unint64_t v54 = v1;
          if (v53 == 1)
          {
            uint64_t v56 = v51[4];
            unint64_t v55 = v51[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1B2CA5F60();
            v0[10] = v52;
            sub_1B29A3EB4(&qword_1EB7E3B30);
            sub_1B2A20660();
            sub_1B2CA5C94();
            sub_1B2E822D8();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2C9F760();
            swift_bridgeObjectRelease();
            uint64_t v56 = v0[4];
            unint64_t v55 = v0[5];
          }
          unint64_t v1 = 0x9000000000000000;
        }
        else
        {
          unint64_t v54 = v1;
          swift_bridgeObjectRelease();
          uint64_t v56 = 0;
          unint64_t v1 = 0x9000000000000000;
LABEL_248:
          unint64_t v55 = 0xE000000000000000;
        }
LABEL_251:
        uint64_t v84 = v0[13];
        uint64_t v85 = swift_allocObject();
        *(void *)(v85 + 16) = v56;
        *(void *)(v85 + 24) = v55;
        sub_1B2CA5DBC();
        uint64_t v3 = *(void *)(v84 + 56);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2CA5D04();
          uint64_t v3 = v89;
        }
        unint64_t v86 = *(void *)(v3 + 16);
        if (v86 >= *(void *)(v3 + 24) >> 1)
        {
          sub_1B2CA5DD8();
          uint64_t v3 = v90;
        }
        unint64_t v87 = v1 | v85;
        uint64_t v9 = v0[13];
        *(void *)(v3 + 16) = v86 + 1;
        uint64_t v88 = (void *)(v3 + 24 * v86);
        v88[4] = v54;
        v88[5] = v87;
        v88[6] = v34;
        sub_1B2CA5DBC();
        *(void *)(v9 + 56) = v3;
        continue;
    }
  }
}

uint64_t sub_1B2CA5070()
{
  sub_1B2CA5188(v0[18], v0[19], 0);
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_1B2CA50D8()
{
  unint64_t result = qword_1E9C41D18;
  if (!qword_1E9C41D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41D18);
  }
  return result;
}

uint64_t sub_1B2CA5124(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 < 2u)
  {
LABEL_4:
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  if (a3 != 2)
  {
    if (a3 != 3) {
      return result;
    }
    goto LABEL_4;
  }
LABEL_5:

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2CA5188(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 < 2u)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if (a3 != 2)
  {
    if (a3 != 3) {
      return result;
    }
    goto LABEL_4;
  }
LABEL_5:

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2CA51EC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B2CA5224(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1B2CA5854(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_130;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1B29B6B74(v3 / 2);
  uint64_t v93 = a1;
  uint64_t v94 = result;
  uint64_t v98 = v6;
  uint64_t v96 = v3;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    unint64_t v36 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_96:
    if (v36 < 2)
    {
LABEL_107:
      uint64_t result = swift_bridgeObjectRelease();
      if (v96 >= -1)
      {
        *(void *)(v94 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_135;
    }
    uint64_t v85 = *v93;
    while (1)
    {
      unint64_t v86 = v36 - 2;
      if (v36 < 2) {
        break;
      }
      if (!v85) {
        goto LABEL_139;
      }
      uint64_t v87 = *(void *)(v9 + 32 + 16 * v86);
      uint64_t v88 = *(void *)(v9 + 32 + 16 * (v36 - 1) + 8);
      uint64_t result = sub_1B2CA58CC((char *)(v85 + 32 * v87), (char *)(v85 + 32 * *(void *)(v9 + 32 + 16 * (v36 - 1))), v85 + 32 * v88, v98);
      if (v1) {
        goto LABEL_92;
      }
      if (v88 < v87) {
        goto LABEL_125;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B2DCA54C();
        uint64_t v9 = result;
      }
      if (v86 >= *(void *)(v9 + 16)) {
        goto LABEL_126;
      }
      uint64_t v89 = (void *)(v9 + 32 + 16 * v86);
      *uint64_t v89 = v87;
      v89[1] = v88;
      unint64_t v90 = *(void *)(v9 + 16);
      if (v36 > v90) {
        goto LABEL_127;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v36 - 1)), (const void *)(v9 + 32 + 16 * v36), 16 * (v90 - v36));
      *(void *)(v9 + 16) = v90 - 1;
      unint64_t v36 = v90 - 1;
      if (v90 <= 2) {
        goto LABEL_107;
      }
    }
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v91 = *a1 + 24;
  uint64_t v92 = *a1 + 64;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v95 = v5;
  uint64_t v97 = *a1;
  while (1)
  {
    uint64_t v10 = v7++;
    if (v7 < v3)
    {
      uint64_t v11 = *(void *)(v8 + 32 * v7);
      uint64_t v12 = 32 * v10;
      uint64_t v13 = *(void *)(v8 + 32 * v10);
      uint64_t v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        uint64_t v14 = (void *)(v92 + 32 * v10);
        while (v11 < v13 != *v14 >= *(v14 - 4))
        {
          v14 += 4;
          if (++v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v11 < v13)
      {
        if (v7 < v10) {
          goto LABEL_132;
        }
        if (v10 < v7)
        {
          uint64_t v15 = 32 * v7 - 32;
          uint64_t v16 = v7;
          uint64_t v17 = v10;
          do
          {
            if (v17 != --v16)
            {
              if (!v8) {
                goto LABEL_138;
              }
              uint64_t v18 = (_OWORD *)(v8 + v12);
              uint64_t v19 = v8 + v15;
              long long v20 = *(_OWORD *)(v8 + v12);
              uint64_t v21 = *(void *)(v8 + v12 + 16);
              char v22 = *(unsigned char *)(v8 + v12 + 24);
              if (v12 != v15 || (unint64_t)v18 >= v8 + v15 + 32)
              {
                long long v24 = *(_OWORD *)(v19 + 16);
                *uint64_t v18 = *(_OWORD *)v19;
                v18[1] = v24;
              }
              *(_OWORD *)uint64_t v19 = v20;
              *(void *)(v19 + 16) = v21;
              *(unsigned char *)(v19 + 24) = v22;
            }
            ++v17;
            v15 -= 32;
            v12 += 32;
          }
          while (v17 < v16);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_129;
      }
      if (v7 - v10 < v5)
      {
        uint64_t v25 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_133;
        }
        if (v25 >= v3) {
          uint64_t v25 = v3;
        }
        if (v25 < v10) {
          goto LABEL_134;
        }
        if (v7 != v25)
        {
          uint64_t v26 = v91 + 32 * v7;
          do
          {
            uint64_t v27 = v10;
            uint64_t v28 = v26;
            do
            {
              uint64_t v29 = (_OWORD *)(v28 - 24);
              uint64_t v30 = *(void *)(v28 - 24);
              if (v30 >= *(void *)(v28 - 56)) {
                break;
              }
              if (!v8) {
                goto LABEL_136;
              }
              long long v32 = *(_OWORD *)(v28 - 56);
              long long v31 = *(_OWORD *)(v28 - 40);
              *(unsigned char *)(v28 - 32) = *(unsigned char *)v28;
              v28 -= 32;
              long long v33 = *(_OWORD *)(v28 + 16);
              *uint64_t v29 = v32;
              v29[1] = v31;
              *(void *)(v28 - 24) = v30;
              *(_OWORD *)(v28 - 16) = v33;
              ++v27;
            }
            while (v7 != v27);
            ++v7;
            v26 += 32;
          }
          while (v7 != v25);
          uint64_t v7 = v25;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_128;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v35 = *(void *)(v9 + 16);
    unint64_t v34 = *(void *)(v9 + 24);
    unint64_t v36 = v35 + 1;
    uint64_t v8 = v97;
    if (v35 >= v34 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454((char *)(v34 > 1), v35 + 1, 1, (char *)v9);
      uint64_t v8 = v97;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v36;
    uint64_t v37 = v9 + 32;
    unsigned int v38 = (uint64_t *)(v9 + 32 + 16 * v35);
    *unsigned int v38 = v10;
    v38[1] = v7;
    if (v35) {
      break;
    }
    unint64_t v36 = 1;
LABEL_87:
    uint64_t v5 = v95;
    uint64_t v3 = v96;
    if (v7 >= v96) {
      goto LABEL_96;
    }
  }
  while (1)
  {
    unint64_t v39 = v36 - 1;
    if (v36 >= 4)
    {
      unint64_t v44 = v37 + 16 * v36;
      uint64_t v45 = *(void *)(v44 - 64);
      uint64_t v46 = *(void *)(v44 - 56);
      BOOL v50 = __OFSUB__(v46, v45);
      uint64_t v47 = v46 - v45;
      if (v50) {
        goto LABEL_113;
      }
      uint64_t v49 = *(void *)(v44 - 48);
      uint64_t v48 = *(void *)(v44 - 40);
      BOOL v50 = __OFSUB__(v48, v49);
      uint64_t v42 = v48 - v49;
      char v43 = v50;
      if (v50) {
        goto LABEL_114;
      }
      unint64_t v51 = v36 - 2;
      uint64_t v52 = (uint64_t *)(v37 + 16 * (v36 - 2));
      uint64_t v54 = *v52;
      uint64_t v53 = v52[1];
      BOOL v50 = __OFSUB__(v53, v54);
      uint64_t v55 = v53 - v54;
      if (v50) {
        goto LABEL_115;
      }
      BOOL v50 = __OFADD__(v42, v55);
      uint64_t v56 = v42 + v55;
      if (v50) {
        goto LABEL_117;
      }
      if (v56 >= v47)
      {
        uint64_t v74 = (uint64_t *)(v37 + 16 * v39);
        uint64_t v76 = *v74;
        uint64_t v75 = v74[1];
        BOOL v50 = __OFSUB__(v75, v76);
        uint64_t v77 = v75 - v76;
        if (v50) {
          goto LABEL_123;
        }
        BOOL v67 = v42 < v77;
        goto LABEL_76;
      }
    }
    else
    {
      if (v36 != 3)
      {
        uint64_t v68 = *(void *)(v9 + 32);
        uint64_t v69 = *(void *)(v9 + 40);
        BOOL v50 = __OFSUB__(v69, v68);
        uint64_t v61 = v69 - v68;
        char v62 = v50;
        goto LABEL_70;
      }
      uint64_t v41 = *(void *)(v9 + 32);
      uint64_t v40 = *(void *)(v9 + 40);
      BOOL v50 = __OFSUB__(v40, v41);
      uint64_t v42 = v40 - v41;
      char v43 = v50;
    }
    if (v43) {
      goto LABEL_116;
    }
    unint64_t v51 = v36 - 2;
    unsigned int v57 = (uint64_t *)(v37 + 16 * (v36 - 2));
    uint64_t v59 = *v57;
    uint64_t v58 = v57[1];
    BOOL v60 = __OFSUB__(v58, v59);
    uint64_t v61 = v58 - v59;
    char v62 = v60;
    if (v60) {
      goto LABEL_118;
    }
    uint64_t v63 = (uint64_t *)(v37 + 16 * v39);
    uint64_t v65 = *v63;
    uint64_t v64 = v63[1];
    BOOL v50 = __OFSUB__(v64, v65);
    uint64_t v66 = v64 - v65;
    if (v50) {
      goto LABEL_120;
    }
    if (__OFADD__(v61, v66)) {
      goto LABEL_122;
    }
    if (v61 + v66 >= v42)
    {
      BOOL v67 = v42 < v66;
LABEL_76:
      if (v67) {
        unint64_t v39 = v51;
      }
      goto LABEL_78;
    }
LABEL_70:
    if (v62) {
      goto LABEL_119;
    }
    unsigned int v70 = (uint64_t *)(v37 + 16 * v39);
    uint64_t v72 = *v70;
    uint64_t v71 = v70[1];
    BOOL v50 = __OFSUB__(v71, v72);
    uint64_t v73 = v71 - v72;
    if (v50) {
      goto LABEL_121;
    }
    if (v73 < v61) {
      goto LABEL_87;
    }
LABEL_78:
    uint64_t v78 = v9;
    unint64_t v79 = v39 - 1;
    if (v39 - 1 >= v36)
    {
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    if (!v8) {
      goto LABEL_137;
    }
    uint64_t v80 = (uint64_t *)(v37 + 16 * v79);
    uint64_t v81 = *v80;
    uint64_t v82 = (void *)(v37 + 16 * v39);
    uint64_t v83 = v82[1];
    uint64_t result = sub_1B2CA58CC((char *)(v8 + 32 * *v80), (char *)(v8 + 32 * *v82), v8 + 32 * v83, v98);
    if (v1) {
      break;
    }
    if (v83 < v81) {
      goto LABEL_110;
    }
    if (v39 > *(void *)(v78 + 16)) {
      goto LABEL_111;
    }
    *uint64_t v80 = v81;
    *(void *)(v37 + 16 * v79 + 8) = v83;
    unint64_t v84 = *(void *)(v78 + 16);
    if (v39 >= v84) {
      goto LABEL_112;
    }
    uint64_t v9 = v78;
    unint64_t v36 = v84 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v37 + 16 * v39), v82 + 2, 16 * (v84 - 1 - v39));
    *(void *)(v78 + 16) = v84 - 1;
    uint64_t v8 = v97;
    if (v84 <= 2) {
      goto LABEL_87;
    }
  }
LABEL_92:
  uint64_t result = swift_bridgeObjectRelease();
  if (v96 < -1) {
    goto LABEL_131;
  }
  *(void *)(v94 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2CA5854(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 32 * a3 + 24;
    while (2)
    {
      uint64_t v6 = result;
      uint64_t v7 = v5;
      do
      {
        uint64_t v8 = (_OWORD *)(v7 - 24);
        uint64_t v9 = *(void *)(v7 - 24);
        if (v9 >= *(void *)(v7 - 56)) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        long long v11 = *(_OWORD *)(v7 - 56);
        long long v10 = *(_OWORD *)(v7 - 40);
        *(unsigned char *)(v7 - 32) = *(unsigned char *)v7;
        v7 -= 32;
        long long v12 = *(_OWORD *)(v7 + 16);
        *uint64_t v8 = v11;
        v8[1] = v10;
        *(void *)(v7 - 24) = v9;
        *(_OWORD *)(v7 - 16) = v12;
        ++v6;
      }
      while (a3 != v6);
      ++a3;
      v5 += 32;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1B2CA58CC(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 32;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 32;
  if (v9 >= v11)
  {
    sub_1B29BEFEC(a2, (uint64_t)(a3 - (void)a2) / 32, a4);
    long long v12 = &v4[32 * v11];
    if (v7 >= v6 || v10 < 32) {
      goto LABEL_35;
    }
    uint64_t v17 = (char *)(a3 - 32);
    while (1)
    {
      uint64_t v18 = v17 + 32;
      uint64_t v19 = v6 - 32;
      if (*((void *)v12 - 4) >= *((void *)v6 - 4))
      {
        BOOL v21 = v18 != v12 || v17 >= v12;
        uint64_t v19 = v12 - 32;
        v12 -= 32;
        if (!v21) {
          goto LABEL_31;
        }
      }
      else
      {
        BOOL v20 = v18 != v6 || v17 >= v6;
        v6 -= 32;
        if (!v20) {
          goto LABEL_31;
        }
      }
      long long v22 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v19;
      *((_OWORD *)v17 + 1) = v22;
LABEL_31:
      v17 -= 32;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_35;
      }
    }
  }
  sub_1B29BEFEC(a1, (a2 - a1) / 32, a4);
  long long v12 = &v4[32 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (*(void *)v6 >= *(void *)v4)
    {
      uint64_t v13 = v4;
      BOOL v14 = v7 == v4;
      v4 += 32;
      if (!v14) {
        goto LABEL_9;
      }
LABEL_10:
      v7 += 32;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_15;
      }
    }
    uint64_t v13 = v6;
    BOOL v14 = v7 == v6;
    v6 += 32;
    if (v14) {
      goto LABEL_10;
    }
LABEL_9:
    long long v15 = *((_OWORD *)v13 + 1);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v13;
    *((_OWORD *)v7 + 1) = v15;
    goto LABEL_10;
  }
LABEL_15:
  uint64_t v6 = v7;
LABEL_35:
  sub_1B29BEFEC(v4, (v12 - v4) / 32, v6);
  return 1;
}

uint64_t getEnumTagSinglePayload for KGQConversionError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for KGQConversionError()
{
  return &type metadata for KGQConversionError;
}

uint64_t sub_1B2CA5AC8()
{
  return 0x746361746E6F63;
}

uint64_t sub_1B2CA5ADC()
{
  return 0x6765746143707061;
}

uint64_t sub_1B2CA5AF8()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_1B2CA5B14()
{
  return 0x6D614E7473726966;
}

uint64_t sub_1B2CA5B2C()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2CA5B58()
{
  return 0x746E657665;
}

uint64_t sub_1B2CA5B68()
{
  return 0x6765746143707061;
}

uint64_t sub_1B2CA5B84()
{
  return 0x69746E6565726373;
}

uint64_t sub_1B2CA5BA0()
{
  return 0x49746361746E6F63;
}

uint64_t sub_1B2CA5BBC()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_1B2CA5BD8()
{
  return 0x6464416C69616D65;
}

uint64_t sub_1B2CA5BF4()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_1B2CA5C10()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2CA5C38()
{
  return 0x6E6F73726570;
}

unint64_t sub_1B2CA5C50()
{
  return 0xD000000000000010;
}

uint64_t sub_1B2CA5C64()
{
  return 0x6E6F73726570;
}

unint64_t sub_1B2CA5C74()
{
  return 0xD000000000000010;
}

uint64_t sub_1B2CA5C88()
{
  return 1701667182;
}

uint64_t sub_1B2CA5C94()
{
  return 2567207;
}

uint64_t sub_1B2CA5CAC()
{
  return sub_1B2CA5124(v1, v0, 2u);
}

uint64_t sub_1B2CA5CC8()
{
  return sub_1B2CA5124(v0, v1, 2u);
}

uint64_t sub_1B2CA5CE4()
{
  return 1633906540;
}

uint64_t sub_1B2CA5CF4()
{
  return 1634891108;
}

void sub_1B2CA5D04()
{
  sub_1B29B9498();
}

uint64_t sub_1B2CA5D28()
{
  return 1634891108;
}

uint64_t sub_1B2CA5D34()
{
  return 1633906540;
}

uint64_t sub_1B2CA5D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,long long a21)
{
  *(_OWORD *)(a1 + 16) = a21;
  *(unsigned char *)(a1 + 32) = v24;
  *(unsigned char *)(a1 + 33) = v22;
  return sub_1B2CA5188(v21, v23, 2u);
}

uint64_t sub_1B2CA5D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17)
{
  *(_OWORD *)(a1 + 16) = a17;
  *(unsigned char *)(a1 + 32) = v20;
  *(unsigned char *)(a1 + 33) = v18;
  return sub_1B2CA5188(v19, v17, 2u);
}

uint64_t sub_1B2CA5DA0()
{
  return sub_1B2CA5188(v1, v0, 2u);
}

uint64_t sub_1B2CA5DBC()
{
  return sub_1B2CA5188(v0, v1, 2u);
}

void sub_1B2CA5DD8()
{
  sub_1B29B9498();
}

uint64_t sub_1B2CA5DF0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2CA5E08()
{
  return swift_allocObject();
}

uint64_t sub_1B2CA5E3C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2CA5E54()
{
  return sub_1B2CA5124(v1, v0, 0);
}

uint64_t sub_1B2CA5E70()
{
  return sub_1B2CA5124(v1, v0, 1u);
}

void sub_1B2CA5EA4(uint64_t a1@<X8>)
{
  v1[16] = a1;
  v1[17] = *(void *)(v1[14] + 32 * a1 + 32);
}

uint64_t sub_1B2CA5EBC()
{
  return v0;
}

uint64_t sub_1B2CA5EC8()
{
  return sub_1B2CA5124(v0, v1, 0);
}

uint64_t sub_1B2CA5EF0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2CA5F08()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1B2CA5F2C()
{
  return 0xD000000000000010;
}

uint64_t sub_1B2CA5F40()
{
  return swift_bridgeObjectRetain();
}

void sub_1B2CA5F60()
{
  *(void *)(v0 + 32) = 10075;
  *(void *)(v0 + 40) = 0xE200000000000000;
}

void sub_1B2CA5F74()
{
  *(void *)(v0 + 16) = 10075;
  *(void *)(v0 + 24) = 0xE200000000000000;
}

uint64_t destroy for KGQNodeSignature()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KGQNodeSignature(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for KGQNodeSignature(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for KGQNodeSignature(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for KGQNodeSignature()
{
  return &type metadata for KGQNodeSignature;
}

uint64_t sub_1B2CA612C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  do
  {
    char v5 = *(unsigned char *)(a1 + v3 + 32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B29B93F0();
      uint64_t v4 = v7;
    }
    unint64_t v6 = *(void *)(v4 + 16);
    if (v6 >= *(void *)(v4 + 24) >> 1)
    {
      sub_1B29B93F0();
      uint64_t v4 = v8;
    }
    ++v3;
    *(void *)(v4 + 16) = v6 + 1;
    *(_WORD *)(v4 + 2 * v6 + 32) = (0xB1102010900uLL >> (8 * v5));
  }
  while (v1 != v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B2CA622C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for KGQ.Value();
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (unsigned __int8 *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8) {
    return MEMORY[0x1E4FBC860];
  }
  v18[0] = v2;
  v18[1] = a2;
  uint64_t v9 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v10 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  while (1)
  {
    sub_1B2C9F51C(v9, (uint64_t)v7);
    if (swift_getEnumCaseMultiPayload() != 6) {
      break;
    }
    sub_1B2CA6448(*v7, &v19);
    __int16 v12 = v19;
    if ((v19 & 0xFF00) != 0x500)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B93F0();
        uint64_t v11 = v14;
      }
      unint64_t v13 = *(void *)(v11 + 16);
      if (v13 >= *(void *)(v11 + 24) >> 1)
      {
        sub_1B29B93F0();
        uint64_t v11 = v15;
      }
      *(void *)(v11 + 16) = v13 + 1;
      *(_WORD *)(v11 + 2 * v13 + 32) = v12;
    }
    v9 += v10;
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      return v11;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2CA50D8();
  swift_allocError();
  *uint64_t v16 = 0;
  swift_willThrow();
  sub_1B2C9F368((uint64_t)v7);
  return v11;
}

uint64_t sub_1B2CA6448@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = word_1B2EE4276[(char)result];
  return result;
}

BOOL sub_1B2CA6460(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_1B2CA7B7C(a4, a5, a3, a1, a2);
}

uint64_t sub_1B2CA647C(char a1, char a2)
{
  uint64_t v3 = sub_1B2CA6C38(a2);
  uint64_t v5 = v4;
  if (v3 == sub_1B2CA6C38(a1) && v5 == v6) {
    char v8 = 0;
  }
  else {
    char v8 = sub_1B2E837A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

BOOL sub_1B2CA6508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5 < a1;
}

BOOL sub_1B2CA6514(unint64_t a1, unint64_t a2)
{
  return a2 < a1;
}

uint64_t sub_1B2CA6520(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  char v8 = sub_1B2CA97D0(a1, a2, a3, a4, a5, a6, a7, a8, v17[0], v17[1], v17[2], v17[3], v17[4], v17[5], v17[6], v17[7], v17[8], v17[9], v17[10],
         v18[0]);
  sub_1B2CA9860((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v17[0]);
  return static KnosisInternalFact.< infix(_:_:)(v17, v18) & 1;
}

uint64_t sub_1B2CA655C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (v3 == *a1 && v4 == a1[1]) {
    return sub_1B29DA4DC();
  }
  else {
    return sub_1B2E837A8();
  }
}

BOOL sub_1B2CA6580(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  return !sub_1B2CA7B7C(a4, a5, a3, a1, a2);
}

uint64_t sub_1B2CA65B8(char a1, char a2)
{
  uint64_t v3 = sub_1B2CA6C38(a2);
  uint64_t v5 = v4;
  if (v3 == sub_1B2CA6C38(a1) && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    char v9 = 1;
  }
  else
  {
    char v8 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v9 = v8 ^ 1;
  }
  return v9 & 1;
}

BOOL sub_1B2CA6650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5 >= a1;
}

BOOL sub_1B2CA665C(unint64_t a1, unint64_t a2)
{
  return a2 >= a1;
}

BOOL sub_1B2CA6668(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  char v8 = sub_1B2CA97D0(a1, a2, a3, a4, a5, a6, a7, a8, v17[0], v17[1], v17[2], v17[3], v17[4], v17[5], v17[6], v17[7], v17[8], v17[9], v17[10],
         v18[0]);
  sub_1B2CA9860((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v17[0]);
  return (static KnosisInternalFact.< infix(_:_:)(v17, v18) & 1) == 0;
}

uint64_t sub_1B2CA66A8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (v3 == *a1 && v4 == a1[1]) {
    char v6 = 1;
  }
  else {
    char v6 = sub_1B2E837A8() ^ 1;
  }
  return v6 & 1;
}

BOOL sub_1B2CA66EC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  return !sub_1B2CA7B7C(a1, a2, a3, a4, a5);
}

uint64_t sub_1B2CA670C(char a1, char a2)
{
  uint64_t v3 = sub_1B2CA6C38(a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B2CA6C38(a2) && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    char v9 = 1;
  }
  else
  {
    char v8 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v9 = v8 ^ 1;
  }
  return v9 & 1;
}

BOOL sub_1B2CA67A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a1 >= a5;
}

BOOL sub_1B2CA67AC(unint64_t a1, unint64_t a2)
{
  return a1 >= a2;
}

BOOL sub_1B2CA67B8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  char v8 = sub_1B2CA97D0(a1, a2, a3, a4, a5, a6, a7, a8, v17[0], v17[1], v17[2], v17[3], v17[4], v17[5], v17[6], v17[7], v17[8], v17[9], v17[10],
         v18[0]);
  sub_1B2CA9860((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v17[0]);
  return (static KnosisInternalFact.< infix(_:_:)(v18, v17) & 1) == 0;
}

uint64_t sub_1B2CA67F8(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1B2E837A8() ^ 1;
  }
  return v3 & 1;
}

void *static KGQ.Keyword.allCases.getter()
{
  return &unk_1F0AC0468;
}

uint64_t KGQ.Keyword.rawValue.getter()
{
  uint64_t result = 17741;
  switch(*v0)
  {
    case 1:
      uint64_t result = sub_1B2CA9840();
      break;
    case 2:
      uint64_t result = sub_1B2CA9850();
      break;
    case 3:
      uint64_t result = sub_1B2CA977C();
      break;
    case 4:
      uint64_t result = sub_1B299F974();
      break;
    case 5:
      uint64_t result = sub_1B2CA982C(0x4B454557u);
      break;
    case 6:
      uint64_t result = sub_1B2CA987C(0x4B454557u);
      break;
    case 7:
      uint64_t result = sub_1B2CA979C();
      break;
    case 8:
      uint64_t result = sub_1B29A517C();
      break;
    case 9:
      uint64_t result = sub_1B2CA982C(0x52414559u);
      break;
    case 0xA:
      uint64_t result = sub_1B2CA987C(0x52414559u);
      break;
    case 0xB:
      uint64_t result = sub_1B2CA9818();
      break;
    case 0xC:
      uint64_t result = sub_1B2CA97F0();
      break;
    case 0xD:
      uint64_t result = sub_1B29A4724();
      break;
    case 0xE:
      uint64_t result = sub_1B2CA9804();
      break;
    case 0xF:
      uint64_t result = sub_1B29A3034();
      break;
    case 0x10:
      uint64_t result = 0x545F464F5F444E45;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2CA6944()
{
  uint64_t v1 = type metadata accessor for KGQ.Value();
  MEMORY[0x1F4188790](v1);
  sub_1B2999928();
  uint64_t v2 = sub_1B29A4CBC();
  sub_1B2C9F51C(v2, v3);
  if (!swift_getEnumCaseMultiPayload()) {
    return *(void *)v0;
  }
  sub_1B2C9F368(v0);
  return 0;
}

uint64_t sub_1B2CA69D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for KGQ.Value();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v3);
  char v8 = (char *)v21 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v11 = *(void *)(v6 + 72);
    v21[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v12 = MEMORY[0x1E4FBC860];
    void v21[2] = v2;
    do
    {
      sub_1B2C9F51C(v10, (uint64_t)v8);
      sub_1B2C9F51C((uint64_t)v8, (uint64_t)v5);
      if (sub_1B29A0C0C() == 5)
      {
        uint64_t v13 = *v5;
        uint64_t v22 = 0;
        unint64_t v23 = 0xE000000000000000;
        sub_1B2E82298();
        uint64_t v21[3] = v13;
        sub_1B2E83748();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        uint64_t v15 = v22;
        unint64_t v14 = v23;
        sub_1B2C9F368((uint64_t)v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29B7048();
          uint64_t v12 = v18;
        }
        unint64_t v16 = *(void *)(v12 + 16);
        if (v16 >= *(void *)(v12 + 24) >> 1)
        {
          sub_1B29B7048();
          uint64_t v12 = v19;
        }
        *(void *)(v12 + 16) = v16 + 1;
        uint64_t v17 = v12 + 16 * v16;
        *(void *)(v17 + 32) = v15;
        *(void *)(v17 + 40) = v14;
      }
      else
      {
        sub_1B2C9F368((uint64_t)v5);
        sub_1B2C9F368((uint64_t)v8);
      }
      v10 += v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  if (!*(void *)(v12 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

uint64_t sub_1B2CA6C38(char a1)
{
  uint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6D614E7473726966;
      break;
    case 2:
      uint64_t result = 0x656D614E7473616CLL;
      break;
    case 3:
      uint64_t result = 0x73736572646461;
      break;
    case 4:
      uint64_t result = 0x7961646874726962;
      break;
    case 5:
      uint64_t result = 0x6D754E656E6F6870;
      break;
    case 6:
      uint64_t result = 0x6464416C69616D65;
      break;
    case 7:
      uint64_t result = sub_1B29A2920(0x616C6572u);
      break;
    case 8:
      uint64_t result = 0x6565646E65747461;
      break;
    case 9:
      uint64_t result = sub_1B29A1EE4();
      break;
    case 10:
      uint64_t result = sub_1B29A2920(0x61636F6Cu);
      break;
    case 11:
      uint64_t result = 1836020326;
      break;
    case 12:
      uint64_t result = 28532;
      break;
    case 13:
      uint64_t result = 0xD000000000000010;
      break;
    case 14:
      uint64_t result = 0x7473657265746E69;
      break;
    case 15:
      uint64_t result = 0x6E6F73726570;
      break;
    case 16:
      uint64_t result = 0x6765746143707061;
      break;
    case 17:
      uint64_t result = 0x7461447472617473;
      break;
    case 18:
      uint64_t result = 0x65746144646E65;
      break;
    case 19:
      uint64_t result = sub_1B29A2920(0x61727564u);
      break;
    case 20:
      uint64_t result = 1701869940;
      break;
    case 21:
      uint64_t result = 0x74696D696CLL;
      break;
    case 22:
      uint64_t result = 0x63734174726F73;
      break;
    case 23:
      uint64_t result = 0x6373654474726F73;
      break;
    case 24:
      uint64_t result = 0x656372756F73;
      break;
    case 25:
      uint64_t result = 0x65756C6176;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1B2CA6EF0(void *a1, void *a2)
{
  return *a1 < *a2;
}

uint64_t sub_1B2CA6F04(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2) {
    return sub_1B2CA6F34(*(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int8 *)(a2 + 24));
  }
  else {
    return sub_1B29DA4DC();
  }
}

#error "1B2CA7030: call analysis failed (funcsize=69)"

uint64_t sub_1B2CA7078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2CA70C0(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_1B2CA6650);
}

uint64_t sub_1B2CA7090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2CA70C0(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_1B2CA67A0);
}

uint64_t sub_1B2CA70A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2CA70C0(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_1B2CA6508);
}

uint64_t sub_1B2CA70C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void, void, void))
{
  return a5(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int8 *)(a2 + 24));
}

uint64_t sub_1B2CA70EC(uint64_t a1, uint64_t a2)
{
  return sub_1B2CA6F34(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

IntelligencePlatform::KGQ::QType_optional __swiftcall KGQ.QType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t KGQ.QType.rawValue.getter()
{
  uint64_t result = 0x6E6F73726570;
  switch(*v0)
  {
    case 1:
      uint64_t result = sub_1B29A2920(0x616C6572u);
      break;
    case 2:
      uint64_t result = sub_1B29A1EE4();
      break;
    case 3:
      uint64_t result = 0x746E657665;
      break;
    case 4:
      uint64_t result = 0x69746E6565726373;
      break;
    case 5:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2CA7214()
{
  return sub_1B29AEA68(*v0);
}

uint64_t sub_1B2CA721C(uint64_t a1)
{
  return sub_1B2AA4F60(a1, *v1);
}

uint64_t sub_1B2CA7224()
{
  return sub_1B29F8EAC();
}

IntelligencePlatform::KGQ::QType_optional sub_1B2CA722C(Swift::String *a1)
{
  return KGQ.QType.init(rawValue:)(*a1);
}

uint64_t sub_1B2CA7238@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = KGQ.QType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2CA7260(unsigned __int8 *a1, char *a2)
{
  return sub_1B29AB96C(*a1, *a2);
}

uint64_t sub_1B2CA726C(char a1, char a2)
{
  uint64_t v3 = sub_1B2CA6C38(a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B2CA6C38(a2) && v5 == v6) {
    char v8 = 0;
  }
  else {
    char v8 = sub_1B2E837A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B2CA72F4()
{
  unint64_t v0 = sub_1B2E83808();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1A) {
    return 26;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B2CA7348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t), uint64_t (*a6)(uint64_t))
{
  if ((a5(a1, a3) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = sub_1B29A4CBC();

  return a6(v6);
}

void sub_1B2CA73B8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  switch(a2)
  {
    case 1:
      if (a4 != 1) {
        goto LABEL_5;
      }
      goto LABEL_7;
    case 2:
      if (a4 != 2) {
        goto LABEL_5;
      }
      goto LABEL_7;
    case 3:
      if (a4 == 3) {
        goto LABEL_7;
      }
      goto LABEL_5;
    default:
      if ((_BYTE)a4) {
LABEL_5:
      }
        sub_1B29DA4DC();
      else {
LABEL_7:
      }
        sub_1B2AA6934(a1, a3, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
      return;
  }
}

uint64_t sub_1B2CA742C()
{
  return sub_1B29AEA00(*v0);
}

uint64_t sub_1B2CA7434(uint64_t a1)
{
  return sub_1B2AA5060(a1, *v1);
}

uint64_t sub_1B2CA743C()
{
  return sub_1B29F8EC4();
}

uint64_t sub_1B2CA7444@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2CA72F4();
  *a1 = result;
  return result;
}

uint64_t sub_1B2CA7474@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B2CA6C38(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B2CA74A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B29AB954(*a1, *a2);
}

uint64_t sub_1B2CA74AC(char *a1, char *a2)
{
  return sub_1B2CA726C(*a1, *a2);
}

uint64_t sub_1B2CA74B8(char *a1, char *a2)
{
  return sub_1B2CA65B8(*a1, *a2);
}

uint64_t sub_1B2CA74C4(char *a1, char *a2)
{
  return sub_1B2CA670C(*a1, *a2);
}

uint64_t sub_1B2CA74D0(char *a1, char *a2)
{
  return sub_1B2CA647C(*a1, *a2);
}

uint64_t sub_1B2CA74DC(uint64_t *a1, uint64_t *a2)
{
  return sub_1B2CA7348(*a1, a1[1], *a2, a2[1], sub_1B2AA73A4, (uint64_t (*)(uint64_t))sub_1B2AA6AAC) & 1;
}

uint64_t sub_1B2CA7530(uint64_t *a1, uint64_t *a2)
{
  return sub_1B2CA7348(*a1, a1[1], *a2, a2[1], sub_1B2AA6AA8, (uint64_t (*)(uint64_t))sub_1B2AA6934) & 1;
}

uint64_t sub_1B2CA7584(uint64_t *a1, uint64_t *a2)
{
  return sub_1B2CA7348(*a1, a1[1], *a2, a2[1], sub_1B2AA6AA8, (uint64_t (*)(uint64_t))sub_1B2AA6AAC) & 1;
}

void sub_1B2CA75D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1B2CA73B8(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned __int8 *)(a2 + 8), a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t _s20IntelligencePlatform3KGQV8VariableV8asStringSSvg_0()
{
  return 0;
}

uint64_t sub_1B2CA7678(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = a1;
  uint64_t v58 = a2;
  uint64_t v3 = sub_1B2E80668();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v53 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for KGQ.Value();
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  char v8 = (uint64_t *)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v56 = (char *)&v53 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (uint64_t *)((char *)&v53 - v12);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  unint64_t v16 = (uint64_t *)((char *)&v53 - v15);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (double *)((char *)&v53 - v18);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v53 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (double *)((char *)&v53 - v24);
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (uint64_t *)((char *)&v53 - v26);
  uint64_t v28 = sub_1B29A3EB4(&qword_1E9C41D50);
  MEMORY[0x1F4188790](v28 - 8);
  sub_1B2999928();
  uint64_t v30 = v2 + *(int *)(v29 + 56);
  sub_1B2C9F51C(v57, v2);
  sub_1B2C9F51C(v58, v30);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1B2C9F51C(v2, (uint64_t)v25);
      if (sub_1B29A0C0C() != 1) {
        goto LABEL_34;
      }
      double v33 = *v25;
      goto LABEL_10;
    case 2u:
      sub_1B2C9F51C(v2, (uint64_t)v22);
      if (sub_1B29A0C0C() != 2)
      {
        (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v55);
        goto LABEL_34;
      }
      unint64_t v35 = v53;
      uint64_t v34 = v54;
      uint64_t v36 = v30;
      uint64_t v37 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v53, v36, v55);
      char v38 = sub_1B2E80608();
      unint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
      v39(v35, v37);
      v39(v22, v37);
LABEL_19:
      sub_1B2C9F368(v2);
      return v38 & 1;
    case 3u:
      sub_1B2C9F51C(v2, (uint64_t)v19);
      if (sub_1B29A0C0C() != 3) {
        goto LABEL_34;
      }
      double v33 = *v19;
LABEL_10:
      BOOL v40 = v33 == *(double *)v30;
      goto LABEL_16;
    case 4u:
      sub_1B2C9F51C(v2, (uint64_t)v16);
      if (sub_1B29A0C0C() != 4) {
        goto LABEL_34;
      }
      uint64_t v41 = *v16;
      goto LABEL_15;
    case 5u:
      sub_1B2C9F51C(v2, (uint64_t)v13);
      if (sub_1B29A0C0C() != 5) {
        goto LABEL_34;
      }
      uint64_t v41 = *v13;
LABEL_15:
      BOOL v40 = v41 == *(void *)v30;
LABEL_16:
      char v38 = v40;
      goto LABEL_19;
    case 6u:
      char v43 = v56;
      sub_1B2C9F51C(v2, (uint64_t)v56);
      if (sub_1B29A0C0C() != 6) {
        goto LABEL_34;
      }
      char v44 = *v43;
      char v45 = *(unsigned char *)v30;
      uint64_t v46 = sub_1B2CA6C38(v44);
      uint64_t v48 = v47;
      if (v46 != sub_1B2CA6C38(v45) || v48 != v49) {
        goto LABEL_31;
      }
      goto LABEL_37;
    case 7u:
      sub_1B2C9F51C(v2, (uint64_t)v8);
      uint64_t v32 = *v8;
      uint64_t v31 = v8[1];
      if (sub_1B29A0C0C() == 7) {
        goto LABEL_21;
      }
      goto LABEL_3;
    default:
      sub_1B2C9F51C(v2, (uint64_t)v27);
      uint64_t v32 = *v27;
      uint64_t v31 = v27[1];
      if (sub_1B29A0C0C())
      {
LABEL_3:
        swift_bridgeObjectRelease();
LABEL_34:
        sub_1B2CA89F8(v2);
        goto LABEL_35;
      }
LABEL_21:
      if (v32 == *(void *)v30 && v31 == *(void *)(v30 + 8))
      {
LABEL_37:
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_31:
        char v51 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v51 & 1) == 0)
        {
          sub_1B2C9F368(v2);
LABEL_35:
          char v38 = 0;
          return v38 & 1;
        }
      }
      sub_1B2C9F368(v2);
      char v38 = 1;
      return v38 & 1;
  }
}

void *sub_1B2CA7B5C()
{
  return &unk_1F0AC06E8;
}

void sub_1B2CA7B6C(void *a1@<X8>)
{
  *a1 = &unk_1F0AC06E8;
}

BOOL sub_1B2CA7B7C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v8 = sub_1B2CA6C38(a1);
  uint64_t v10 = v9;
  if (v8 == sub_1B2CA6C38(a4) && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1B299BC44();
    char v13 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      sub_1B299BC44();
      char v14 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14 & 1;
    }
  }
  return *(void *)(a2 + 16) < *(void *)(a5 + 16);
}

#error "1B2CA7CEC: call analysis failed (funcsize=51)"

uint64_t sub_1B2CA7D18(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2CA7D90(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1B2CA7C4C);
}

BOOL sub_1B2CA7D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2CA7B7C(*(unsigned char *)a1, *(void *)(a1 + 8), a3, *(unsigned char *)a2, *(void *)(a2 + 8));
}

uint64_t sub_1B2CA7D48(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2CA7D90(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1B2CA6580);
}

uint64_t sub_1B2CA7D60(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2CA7D90(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1B2CA66EC);
}

uint64_t sub_1B2CA7D78(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2CA7D90(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1B2CA6460);
}

uint64_t sub_1B2CA7D90(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*a1, *((void *)a1 + 1), a1[16], *a2, *((void *)a2 + 1), a2[16]);
}

uint64_t sub_1B2CA7DB8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B2A17224(a1, a2);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (v8)
  {
    if (v6 == 120 && v8 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v10 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0) {
        goto LABEL_14;
      }
    }
    unint64_t v11 = sub_1B2A6FFBC(1uLL, a1, a2);
    MEMORY[0x1B3EB0C00](v11);
    swift_bridgeObjectRelease();
    sub_1B2E82548();
    if (v12)
    {
      while (1)
      {
        sub_1B2E82288();
        if (v13) {
          break;
        }
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2E82548();
        if (!v14) {
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease();
    }
  }
LABEL_14:
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = 0;
  *(unsigned char *)(a3 + 8) = 1;
  return result;
}

BOOL static KGQ.Variable.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t KGQ.Variable.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t KGQ.Variable.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2CA81F8()
{
  return sub_1B2E839E8();
}

uint64_t KGQ.Keyword.description.getter()
{
  uint64_t result = 17741;
  switch(*v0)
  {
    case 1:
      uint64_t result = sub_1B2CA9840();
      break;
    case 2:
      uint64_t result = sub_1B2CA9850();
      break;
    case 3:
      uint64_t result = sub_1B2CA977C();
      break;
    case 4:
      uint64_t result = sub_1B299F974();
      break;
    case 5:
      uint64_t result = sub_1B2CA982C(0x4B454557u);
      break;
    case 6:
      uint64_t result = sub_1B2CA987C(0x4B454557u);
      break;
    case 7:
      uint64_t result = sub_1B2CA979C();
      break;
    case 8:
      uint64_t result = sub_1B29A517C();
      break;
    case 9:
      uint64_t result = sub_1B2CA982C(0x52414559u);
      break;
    case 0xA:
      uint64_t result = sub_1B2CA987C(0x52414559u);
      break;
    case 0xB:
      uint64_t result = sub_1B2CA9818();
      break;
    case 0xC:
      uint64_t result = sub_1B2CA97F0();
      break;
    case 0xD:
      uint64_t result = sub_1B29A4724();
      break;
    case 0xE:
      uint64_t result = sub_1B2CA9804();
      break;
    case 0xF:
      uint64_t result = sub_1B29A3034();
      break;
    case 0x10:
      uint64_t result = 0x545F464F5F444E45;
      break;
    default:
      return result;
  }
  return result;
}

IntelligencePlatform::KGQ::Keyword_optional __swiftcall KGQ.Keyword.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B2E83808();
  result.value = swift_bridgeObjectRelease();
  char v5 = 17;
  if (v3 < 0x11) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

IntelligencePlatform::KGQ::Keyword_optional sub_1B2CA8394(Swift::String *a1)
{
  return KGQ.Keyword.init(rawValue:)(*a1);
}

uint64_t sub_1B2CA83A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = KGQ.Keyword.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2CA83C8()
{
  return sub_1B29AEA80();
}

uint64_t sub_1B2CA83D0(uint64_t a1)
{
  return sub_1B2AA4F48(a1, *v1);
}

uint64_t sub_1B2CA83D8()
{
  return sub_1B29F8E94();
}

uint64_t sub_1B2CA83E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B29AB738(*a1, *a2);
}

void sub_1B2CA83EC(void *a1@<X8>)
{
  *a1 = &unk_1F0AC0468;
}

unint64_t sub_1B2CA8404()
{
  unint64_t result = qword_1E9C41D20;
  if (!qword_1E9C41D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41D20);
  }
  return result;
}

unint64_t sub_1B2CA8454()
{
  unint64_t result = qword_1E9C41D28;
  if (!qword_1E9C41D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41D28);
  }
  return result;
}

unint64_t sub_1B2CA84A4()
{
  unint64_t result = qword_1E9C41D30;
  if (!qword_1E9C41D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41D30);
  }
  return result;
}

uint64_t sub_1B2CA84F0()
{
  return sub_1B2CA9560(&qword_1E9C41D38, &qword_1E9C41D40);
}

void type metadata accessor for KGQ()
{
}

unsigned char *storeEnumTagSinglePayload for KGQ.QType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2CA85F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for KGQ.QType()
{
}

void type metadata accessor for KGQ.Variable()
{
}

uint64_t getEnumTagSinglePayload for KGQ.Keyword(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF0)
  {
    if (a2 + 16 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 16) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 17;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v5 = v6 - 17;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for KGQ.Keyword(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2CA8784);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

void type metadata accessor for KGQ.Keyword()
{
}

uint64_t sub_1B2CA87B8(uint64_t a1)
{
  return sub_1B2CA5188(*(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_1B2CA87C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 24);
  sub_1B2CA5124(v3, v4, v5);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return a1;
}

uint64_t sub_1B2CA881C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 24);
  sub_1B2CA5124(v3, v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1B2CA5188(v6, v7, v8);
  return a1;
}

uint64_t sub_1B2CA887C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v7 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B2CA5188(v5, v6, v7);
  return a1;
}

uint64_t sub_1B2CA88CC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2CA890C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

void type metadata accessor for KGQ.Expression()
{
}

unint64_t sub_1B2CA8964()
{
  unint64_t result = qword_1E9C41D48;
  if (!qword_1E9C41D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41D48);
  }
  return result;
}

uint64_t type metadata accessor for KGQ.Value()
{
  uint64_t result = qword_1E9C41D58;
  if (!qword_1E9C41D58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B2CA89F8(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C41D50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *sub_1B2CA8A58(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2CA8B24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for KGQ.Argument.Operation()
{
}

uint64_t sub_1B2CA8B5C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2CA8B9C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_1B2CA8BF4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

void type metadata accessor for KGQ.Argument()
{
}

void *sub_1B2CA8C48(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 7)
    {
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v10 = sub_1B2E80668();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_9;
      }
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
    }
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1B2CA8D88(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 7)
  {
LABEL_4:
    return swift_bridgeObjectRelease();
  }
  if (result != 2)
  {
    if (result) {
      return result;
    }
    goto LABEL_4;
  }
  uint64_t v3 = sub_1B2E80668();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void *sub_1B2CA8E30(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 7)
  {
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_1B2E80668();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_7;
    }
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
  }
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  swift_bridgeObjectRetain();
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1B2CA8F2C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B2C9F368((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 7)
    {
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v7 = sub_1B2E80668();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_8;
      }
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1B2CA9048(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_1B2E80668();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1B2CA9100(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B2C9F368((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_1B2E80668();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B2CA91D4()
{
  uint64_t result = sub_1B2E80668();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *sub_1B2CA928C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *uint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2CA9358);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

void type metadata accessor for KGQ.Verb()
{
}

uint64_t sub_1B2CA9390(uint64_t a1)
{
  return sub_1B2CA5188(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1B2CA93A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B2CA5124(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1B2CA93EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B2CA5124(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B2CA5188(v6, v7, v8);
  return a1;
}

uint64_t sub_1B2CA9444(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B2CA5188(v4, v5, v6);
  return a1;
}

void type metadata accessor for KGQ.Clause()
{
}

unint64_t sub_1B2CA949C()
{
  unint64_t result = qword_1E9C41D68;
  if (!qword_1E9C41D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41D68);
  }
  return result;
}

unint64_t sub_1B2CA94EC()
{
  unint64_t result = qword_1E9C41D70;
  if (!qword_1E9C41D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41D70);
  }
  return result;
}

uint64_t sub_1B2CA9538()
{
  return sub_1B2CA9560(&qword_1E9C41D78, &qword_1E9C41D80);
}

uint64_t sub_1B2CA9560(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2CA95B4()
{
  unint64_t result = qword_1E9C41D88;
  if (!qword_1E9C41D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C41D88);
  }
  return result;
}

void type metadata accessor for KGQ.Filter()
{
}

uint64_t sub_1B2CA9614(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2CA964C(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2CA9690(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2CA96CC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2CA970C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

void type metadata accessor for KGQ.Compute()
{
}

void type metadata accessor for KGQ.Get()
{
}

void type metadata accessor for KGQ.All()
{
}

uint64_t sub_1B2CA977C()
{
  return 0x524154535F594144;
}

uint64_t sub_1B2CA979C()
{
  return 0x54535F48544E4F4DLL;
}

void *sub_1B2CA97D0(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char __dst)
{
  return memcpy(&__dst, __src, 0x58uLL);
}

uint64_t sub_1B2CA97F0()
{
  return 0x4B4545575F31;
}

uint64_t sub_1B2CA9804()
{
  return 0x524145595F31;
}

uint64_t sub_1B2CA9818()
{
  return 0x5941445F31;
}

uint64_t sub_1B2CA982C(unsigned int a1)
{
  return a1 | 0x4154535F00000000;
}

uint64_t sub_1B2CA9840()
{
  return 4999502;
}

uint64_t sub_1B2CA9850()
{
  return 5721934;
}

void *sub_1B2CA9860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return memcpy(&a9, v9, 0x58uLL);
}

uint64_t sub_1B2CA987C(unsigned int a1)
{
  return a1 | 0x444E455F00000000;
}

void KnosisAccessConfig.init(clientIdentifier:entitledIndexTypes:)(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  char v7 = *((unsigned char *)a1 + 16);
  if (qword_1EB7D9670 != -1) {
    swift_once();
  }
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1B2CC8B34(v8, a2);
  *(void *)a3 = v5;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v9;
}

uint64_t KnosisAccessConfig.description.getter()
{
  return 0;
}

uint64_t sub_1B2CA9A20()
{
  uint64_t result = sub_1B2A17E38();
  qword_1EB7F3380 = result;
  return result;
}