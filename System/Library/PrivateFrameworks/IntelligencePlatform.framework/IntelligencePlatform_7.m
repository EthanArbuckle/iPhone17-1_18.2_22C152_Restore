unsigned char *sub_1B2D283D4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;

  if (a3 + 10 >= 0xFFFF00) {
    v3 = 4;
  }
  else {
    v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    v4 = 1;
  }
  else {
    v4 = v3;
  }
  if (a3 >= 0xF6) {
    v5 = v4;
  }
  else {
    v5 = 0;
  }
  if (a2 > 0xF5)
  {
    v6 = ((a2 - 246) >> 8) + 1;
    *result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D284A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 10;
        break;
    }
  }
  return result;
}

void type metadata accessor for KTSSummaryRecord.CodingKeys()
{
}

unsigned char *storeEnumTagSinglePayload for KTSSegmentRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D285A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KTSSegmentRecord.CodingKeys()
{
  return &type metadata for KTSSegmentRecord.CodingKeys;
}

unint64_t sub_1B2D285DC()
{
  unint64_t result = qword_1E9C42B20;
  if (!qword_1E9C42B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B20);
  }
  return result;
}

unint64_t sub_1B2D2862C()
{
  unint64_t result = qword_1E9C42B28;
  if (!qword_1E9C42B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B28);
  }
  return result;
}

unint64_t sub_1B2D2867C()
{
  unint64_t result = qword_1E9C42B30;
  if (!qword_1E9C42B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B30);
  }
  return result;
}

unint64_t sub_1B2D286CC()
{
  unint64_t result = qword_1E9C42B38;
  if (!qword_1E9C42B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B38);
  }
  return result;
}

unint64_t sub_1B2D2871C()
{
  unint64_t result = qword_1E9C42B40;
  if (!qword_1E9C42B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B40);
  }
  return result;
}

unint64_t sub_1B2D2876C()
{
  unint64_t result = qword_1E9C42B48;
  if (!qword_1E9C42B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B48);
  }
  return result;
}

unint64_t sub_1B2D287BC()
{
  unint64_t result = qword_1E9C42B50;
  if (!qword_1E9C42B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B50);
  }
  return result;
}

unint64_t sub_1B2D2880C()
{
  unint64_t result = qword_1E9C42B58;
  if (!qword_1E9C42B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B58);
  }
  return result;
}

unint64_t sub_1B2D2885C()
{
  unint64_t result = qword_1E9C42B60;
  if (!qword_1E9C42B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B60);
  }
  return result;
}

unint64_t sub_1B2D288A8()
{
  unint64_t result = qword_1E9C42B68;
  if (!qword_1E9C42B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B68);
  }
  return result;
}

uint64_t sub_1B2D28940()
{
  return 0x65746E6F4373746BLL;
}

uint64_t sub_1B2D2895C()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1B2D28974@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return sub_1B2E83588();
}

uint64_t sub_1B2D28998@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 120) = a1;
  return sub_1B2E83588();
}

uint64_t sub_1B2D289BC()
{
  return v0;
}

uint64_t sub_1B2D289D8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(unsigned char *)(a1 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_1B2D28A00()
{
  return swift_dynamicCast();
}

uint64_t _s20IntelligencePlatform16KTSSegmentRecordV15subjectIdColumnSSSgvgZ_0()
{
  return 0x656D67655373746BLL;
}

double sub_1B2D28A44(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  double result = *(double *)(a2 + 56);
  *(double *)(a1 + 56) = result;
  return result;
}

void sub_1B2D28A68(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
}

uint64_t _s20IntelligencePlatform16KTSSegmentRecordV14sourceIdColumnSSSgvgZ_0()
{
  return 0x696669746E656469;
}

uint64_t sub_1B2D28AA4()
{
  return 0x6D69547472617473;
}

uint64_t sub_1B2D28ADC()
{
  return sub_1B2E7FF78();
}

uint64_t sub_1B2D28B08()
{
  return sub_1B2E836A8();
}

uint64_t sub_1B2D28B24()
{
  return v0;
}

uint64_t sub_1B2D28B58()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2D28B80()
{
  return sub_1B2E835E8();
}

uint64_t sub_1B2D28B9C()
{
  return 0x6174614473746BLL;
}

void sub_1B2D28BB4()
{
  uint64_t v1 = *(void *)(v0 - 184);
  *(void *)(v0 - 128) = *(void *)(v0 - 192);
  *(void *)(v0 - 120) = v1;
  *(unsigned char *)(v0 - 65) = 10;
}

uint64_t sub_1B2D28BCC@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return sub_1B2E83578();
}

uint64_t sub_1B2D28BF0()
{
  return swift_dynamicCast();
}

uint64_t sub_1B2D28C14@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t sub_1B2D28C2C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 120) = a1;
  return sub_1B2E83578();
}

uint64_t sub_1B2D28C60()
{
  return sub_1B29F4F7C(v0, v1);
}

uint64_t sub_1B2D28C78()
{
  return 0x4974736575716572;
}

uint64_t sub_1B2D28C9C()
{
  return sub_1B2E836A8();
}

uint64_t sub_1B2D28CB4()
{
  return type metadata accessor for KTSContextAggregateRepresentation();
}

ValueMetadata *type metadata accessor for KTSSegmentView()
{
  return &type metadata for KTSSegmentView;
}

uint64_t sub_1B2D28CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  id v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_viewArtifactTableName);
  if (v8)
  {
    v9 = v8;
    uint64_t v10 = sub_1B2E82378();
    unint64_t v12 = v11;
  }
  else
  {
    unint64_t v12 = 0xEB00000000746E65;
    uint64_t v10 = 0x6D6765735F73746BLL;
  }
  if (qword_1E9C38C30 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1B2E81FB8();
  sub_1B29A4B98(v13, (uint64_t)qword_1E9C3EBC0);
  v14 = sub_1B2E81F98();
  os_log_type_t v15 = sub_1B2E82D98();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1B2996000, v14, v15, "Fetching KTSSegmentView for client.", v16, 2u);
    MEMORY[0x1B3EB30C0](v16, -1, -1);
  }

  uint64_t result = swift_unknownObjectRelease();
  *a4 = a1;
  a4[1] = v10;
  a4[2] = v12;
  a4[3] = a2;
  a4[4] = a3;
  return result;
}

uint64_t sub_1B2D28E70()
{
  unint64_t v0 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B2D28EBC(char a1)
{
  uint64_t result = 0x656D67655373746BLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x696669746E656469;
      break;
    case 2:
      uint64_t result = 0x6D69547472617473;
      break;
    case 3:
      uint64_t result = 0x656D6954646E65;
      break;
    case 4:
      uint64_t result = 0x65636E6174736964;
      break;
    case 5:
      uint64_t result = 0x6F69746176656C65;
      break;
    case 6:
      uint64_t result = 0x65726F6373;
      break;
    case 7:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 8:
      uint64_t result = 0x797469437369;
      break;
    case 9:
      uint64_t result = 0x6177686769487369;
      break;
    case 10:
      uint64_t result = 0x65746E6F4373746BLL;
      break;
    case 11:
      uint64_t result = 0x6174614473746BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2D29054()
{
  return sub_1B29AC4D8();
}

uint64_t sub_1B2D29060()
{
  return sub_1B29AE86C(*v0);
}

uint64_t sub_1B2D29068()
{
  return sub_1B2AA5400();
}

uint64_t sub_1B2D29070()
{
  return sub_1B29F92C4();
}

uint64_t sub_1B2D29078@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2D28E70();
  *a1 = result;
  return result;
}

uint64_t sub_1B2D290A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B2D28EBC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B2D290D4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1B2D29498();

  return MEMORY[0x1F411AD50](a1, a2, v4);
}

uint64_t sub_1B2D29120(uint64_t a1)
{
  unint64_t v2 = sub_1B2D294E4();

  return MEMORY[0x1F411AD38](a1, v2);
}

uint64_t sub_1B2D2916C(uint64_t a1)
{
  unint64_t v2 = sub_1B2D293FC();

  return MEMORY[0x1F411AF58](a1, v2);
}

uint64_t sub_1B2D291B8(uint64_t a1)
{
  unint64_t v2 = sub_1B2D293FC();

  return MEMORY[0x1F411AF50](a1, v2);
}

unsigned char *storeEnumTagSinglePayload for KTSSegmentViewColumns(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D292D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KTSSegmentViewColumns()
{
  return &type metadata for KTSSegmentViewColumns;
}

unint64_t sub_1B2D2930C()
{
  unint64_t result = qword_1E9C42B80;
  if (!qword_1E9C42B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B80);
  }
  return result;
}

unint64_t sub_1B2D2935C()
{
  unint64_t result = qword_1E9C42B88;
  if (!qword_1E9C42B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B88);
  }
  return result;
}

unint64_t sub_1B2D293AC()
{
  unint64_t result = qword_1E9C42B90;
  if (!qword_1E9C42B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B90);
  }
  return result;
}

unint64_t sub_1B2D293FC()
{
  unint64_t result = qword_1E9C42B98;
  if (!qword_1E9C42B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42B98);
  }
  return result;
}

unint64_t sub_1B2D2944C()
{
  unint64_t result = qword_1E9C42BA0;
  if (!qword_1E9C42BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42BA0);
  }
  return result;
}

unint64_t sub_1B2D29498()
{
  unint64_t result = qword_1E9C42BA8;
  if (!qword_1E9C42BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42BA8);
  }
  return result;
}

unint64_t sub_1B2D294E4()
{
  unint64_t result = qword_1E9C42BB0;
  if (!qword_1E9C42BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42BB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for KTSSliceView()
{
  return &type metadata for KTSSliceView;
}

uint64_t sub_1B2D29540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  id v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_viewArtifactTableName);
  if (v8)
  {
    v9 = v8;
    uint64_t v10 = sub_1B2E82378();
    uint64_t v12 = v11;

    if (qword_1E9C38C30 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1B2E81FB8();
    sub_1B29A4B98(v13, (uint64_t)qword_1E9C3EBC0);
    v14 = sub_1B2E81F98();
    os_log_type_t v15 = sub_1B2E82D98();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1B2996000, v14, v15, "Fetching KTSSliceView for client.", v16, 2u);
      MEMORY[0x1B3EB30C0](v16, -1, -1);
    }

    *a4 = a1;
    a4[1] = v10;
    a4[2] = v12;
    a4[3] = a2;
    a4[4] = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1B2CF2A80();
    swift_allocError();
    *(void *)uint64_t v18 = 0xD000000000000015;
    *(void *)(v18 + 8) = 0x80000001B2EA1130;
    *(unsigned char *)(v18 + 16) = 0;
    swift_willThrow();
    swift_unknownObjectRelease_n();
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1B2D2971C()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1EB7E2E90);
  sub_1B2A4A2A8(v0, qword_1E9C42BC0);
  sub_1B29A4B98(v0, (uint64_t)qword_1E9C42BC0);
  return sub_1B2E814D8();
}

uint64_t LanguageView.databaseFilePath.getter()
{
  uint64_t v2 = sub_1B2E80498();
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v0)
  {
    id v8 = objc_msgSend(*v0, sel_viewArtifactURL);
    sub_1B2E80448();

    uint64_t v1 = sub_1B2E80458();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  }
  else
  {
    sub_1B2A823FC();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD00000000000001ELL;
    *(void *)(v9 + 8) = 0x80000001B2EA1150;
    *(unsigned char *)(v9 + 16) = 0;
    swift_willThrow();
  }
  return v1;
}

uint64_t LanguageView.inferredLanguageTriples()()
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  swift_getObjectType();
  sub_1B2E80C28();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1B2D29964(uint64_t a1, uint64_t *a2)
{
  if (qword_1E9C38C78 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7E2E90);
  sub_1B29A4B98(v4, (uint64_t)qword_1E9C42BC0);
  uint64_t result = sub_1B2E814C8();
  if (!v2)
  {
    *a2 = result;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2D29A0C(uint64_t a1)
{
  return sub_1B2D29964(a1, *(uint64_t **)(v1 + 16));
}

uint64_t GDLanguageView.databaseFilePath.getter()
{
  uint64_t v1 = sub_1B2E80498();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v0 + OBJC_IVAR____TtC20IntelligencePlatform14GDLanguageView_assertion);
  if (!v7) {
    return 0;
  }
  id v8 = objc_msgSend(v7, sel_viewArtifactURL);
  sub_1B2E80448();

  uint64_t v9 = sub_1B2E80458();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  return v9;
}

id GDLanguageView.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void GDLanguageView.init()()
{
}

id GDLanguageView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

ValueMetadata *type metadata accessor for LanguageView()
{
  return &type metadata for LanguageView;
}

uint64_t type metadata accessor for GDLanguageView()
{
  return self;
}

uint64_t method lookup function for GDLanguageView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GDLanguageView);
}

uint64_t getEnumTagSinglePayload for LemmatizedSubgraphView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2D29CB0);
}

uint64_t sub_1B2D29CB0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SearchableViewDatabaseTable();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for LemmatizedSubgraphView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2D29D4C);
}

void *sub_1B2D29D4C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SearchableViewDatabaseTable();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)_s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LemmatizedSubgraphView()
{
  uint64_t result = qword_1EB7D9DB0;
  if (!qword_1EB7D9DB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B2D29E14()
{
  uint64_t result = type metadata accessor for SearchableViewDatabaseTable();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B2D29EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  id v7 = objc_msgSend((id)swift_unknownObjectRetain(), sel_viewArtifactTableName);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_1B2E82378();
    unint64_t v11 = v10;
  }
  else
  {
    unint64_t v11 = 0x80000001B2EA11F0;
    uint64_t v9 = 0xD000000000000013;
  }
  uint64_t v12 = (void *)((char *)a4 + *(int *)(type metadata accessor for LemmatizedSubgraphView() + 20));
  *uint64_t v12 = a2;
  v12[1] = a3;
  v12[2] = v9;
  v12[3] = v11;
  uint64_t v13 = (int *)type metadata accessor for SearchableViewDatabaseTable();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain();
  sub_1B2E814D8();
  v14 = (void *)((char *)v12 + v13[9]);
  void *v14 = 0x7463656A627573;
  v14[1] = 0xE700000000000000;
  *(void *)((char *)v12 + v13[8]) = &unk_1F0ABAF28;
  sub_1B2E82518();
  swift_unknownObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  v16 = (void *)((char *)v12 + v13[7]);
  uint64_t *v16 = v9;
  v16[1] = v11;
  return result;
}

uint64_t sub_1B2D2A018()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EE7DC0;
  *(void *)(v0 + 32) = &unk_1F0AC1A30;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EC01E0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EE7DD0;
  *(void *)(v0 + 72) = 0x80000001B2EA1240;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29B2124(0, 0);
  return v0;
}

uint64_t type metadata accessor for LessThan()
{
  return self;
}

uint64_t sub_1B2D2A0E0()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EE7DF0;
  *(void *)(v0 + 32) = &unk_1F0AB7198;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EC01E0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EE7E00;
  *(void *)(v0 + 72) = 0x80000001B2EA12B0;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29B2124(0, 0);
  return v0;
}

uint64_t type metadata accessor for LessThanEqual()
{
  return self;
}

void type metadata accessor for LexerGenerator()
{
}

uint64_t sub_1B2D2A1B4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2D2A1F4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t sub_1B2D2A254(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void type metadata accessor for Token()
{
}

uint64_t getEnumTagSinglePayload for LocationEntityCard.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xED)
  {
    if (a2 + 19 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 19) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 20;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v5 = v6 - 20;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_1B2D2A330(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *uint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D2A3FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

void type metadata accessor for TokenType()
{
}

unint64_t sub_1B2D2A434()
{
  unint64_t result = qword_1EB7D9758;
  if (!qword_1EB7D9758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9758);
  }
  return result;
}

unint64_t sub_1B2D2A484(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v4 = *(void *)(a3 + 16);
  if (v4 < result || (uint64_t)v4 < v3) {
    goto LABEL_11;
  }
  if ((v3 & 0x8000000000000000) == 0) {
    return swift_bridgeObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1B2D2A500(uint64_t result, uint64_t a2)
{
  if (*(void *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return swift_bridgeObjectRetain();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2D2A560()
{
  uint64_t result = sub_1B2E82148();
  qword_1EB7D96B8 = result;
  return result;
}

void sub_1B2D2A5A0()
{
  sub_1B2A190FC();
  qword_1EB7D9678 = v0;
}

uint64_t sub_1B2D2A5C8()
{
  return 0;
}

uint64_t sub_1B2D2A700()
{
  return sub_1B2D2A5C8();
}

#error "1B2D2A7C0: call analysis failed (funcsize=183)"

void sub_1B2D2AA00()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 48);
    *(void *)(v0 + 56) = v2;
    if (v2 >= *(void *)(v3 + 16))
    {
      char v4 = sub_1B2D2AC3C();
      uint64_t v6 = v5;
      uint64_t v8 = v7;
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_1B2E3161C();
      uint64_t v11 = *(void *)(*(void *)(v0 + 48) + 16);
      sub_1B2E31C8C(v11);
      uint64_t v12 = *(void *)(v0 + 48);
      *(void *)(v12 + 16) = v11 + 1;
      uint64_t v13 = v12 + 32 * v11;
      *(unsigned char *)(v13 + 32) = v4;
      *(void *)(v13 + 40) = v6;
      *(void *)(v13 + 48) = v8;
      *(void *)(v13 + 56) = v10;
      *(void *)(v0 + 48) = v12;
      goto LABEL_6;
    }
    if ((v2 & 0x8000000000000000) == 0)
    {
      swift_bridgeObjectRetain();
LABEL_6:
      *(void *)(v0 + 56) = v2 - 1;
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1B2D2AAFC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (v1 <= 0)
  {
    uint64_t v3 = 10;
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 48);
    if ((unint64_t)(v1 - 1) >= *(void *)(v2 + 16)) {
      goto LABEL_8;
    }
    uint64_t v3 = *(unsigned __int8 *)(v2 + 32 * (v1 - 1) + 32);
    uint64_t result = swift_bridgeObjectRetain();
  }
  if (!__OFSUB__(v1, 1))
  {
    *(void *)(v0 + 56) = v1 - 1;
    return v3;
  }
  __break(1u);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1B2D2ABA8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (v1 <= 0) {
    return 10;
  }
  uint64_t v2 = *(void *)(v0 + 48);
  unint64_t v3 = v1 - 1;
  if (v3 < *(void *)(v2 + 16))
  {
    uint64_t v4 = *(unsigned __int8 *)(v2 + 32 * v3 + 32);
    swift_bridgeObjectRetain();
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2D2AC3C()
{
  uint64_t v1 = v0[5];
  uint64_t v33 = v0[4];
  if (v1 >= v33)
  {
    return 7;
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v3 = v0[2];
    unint64_t v4 = v0[3];
    uint64_t v5 = *v0;
    uint64_t v6 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v32 = v6;
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1B2E824A8();
      if (v7) {
        break;
      }
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
LABEL_15:
      swift_bridgeObjectRelease();
      if (v1 < 0) {
        goto LABEL_37;
      }
      if ((unint64_t)v1 >= v9[2]) {
        goto LABEL_38;
      }
      v16 = &v9[2 * v1];
      uint64_t v17 = v16[4];
      uint64_t v18 = v16[5];
      swift_bridgeObjectRetain();
      swift_release();
      if (*(void *)(v5 + 16)
        && (uint64_t v25 = sub_1B29DB204(v17, v18, v19, v20, v21, v22, v23, v24, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
                    v43,
                    v44,
                    v45,
                    v46,
                    v47,
                    vars0,
                    vars8),
            (v26 & 1) != 0))
      {
        uint64_t v27 = *(unsigned __int8 *)(*(void *)(v5 + 56) + v25);
      }
      else
      {
        uint64_t v27 = 6;
      }
      if (qword_1EB7D9688 != -1) {
        swift_once();
      }
      sub_1B29FBBF4(v27, qword_1EB7D9678);
      if (v28)
      {
        v2[5] = v1 + 1;
        return v27;
      }
      swift_bridgeObjectRelease();
      if (v27 != 9)
      {
        if (v27 == 5) {
          return sub_1B2D2B198();
        }
        if (v27 != 17) {
          return sub_1B2D2B5E4();
        }
        sub_1B2D2B0C0();
        return v30;
      }
      sub_1B2D2AECC();
      uint64_t v29 = v2[5];
      uint64_t v1 = v29 + 1;
      if (__OFADD__(v29, 1)) {
        goto LABEL_39;
      }
      v2[5] = v1;
      if (v1 >= v33) {
        return 7;
      }
    }
    uint64_t v8 = v7;
    if (v7 < 1)
    {
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1B29A3EB4(&qword_1EB7E4AC0);
      uint64_t v9 = (void *)swift_allocObject();
      size_t v10 = j__malloc_size(v9);
      v9[2] = v8;
      v9[3] = 2 * ((uint64_t)(v10 - 32) / 16);
    }
    uint64_t v34 = v3;
    uint64_t v35 = v4;
    uint64_t v11 = v8 & ~(v8 >> 63);
    uint64_t v36 = 0;
    uint64_t v37 = v32;
    swift_bridgeObjectRetain();
    uint64_t v12 = 4;
    while (v11)
    {
      uint64_t v13 = sub_1B2E82548();
      if (!v14) {
        goto LABEL_40;
      }
      os_log_type_t v15 = &v9[v12];
      *os_log_type_t v15 = v13;
      v15[1] = v14;
      --v11;
      v12 += 2;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

void sub_1B2D2AECC()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v1 + 1;
  if (!__OFADD__(v1, 1))
  {
    uint64_t v3 = v0;
    v0[5] = v2;
    uint64_t v33 = v0[4];
    if (v2 >= v33) {
      return;
    }
    uint64_t v4 = v0[2];
    unint64_t v5 = v0[3];
    uint64_t v6 = *v0;
    uint64_t v7 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v31 = v2;
    uint64_t v32 = v7;
    uint64_t v8 = v2;
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1B2E824A8();
      if (v9) {
        break;
      }
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_16:
      swift_bridgeObjectRelease();
      if (v2 < 0) {
        goto LABEL_27;
      }
      if ((unint64_t)v8 >= v11[2]) {
        goto LABEL_28;
      }
      uint64_t v18 = &v11[2 * v8];
      uint64_t v19 = v18[4];
      uint64_t v20 = v18[5];
      swift_bridgeObjectRetain();
      swift_release();
      if (!*(void *)(v6 + 16)
        || (uint64_t v27 = sub_1B29DB204(v19, v20, v21, v22, v23, v24, v25, v26, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
                    v41,
                    v42,
                    v43,
                    v44,
                    v45,
                    v46,
                    v47),
            (v28 & 1) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_24:
        v3[5] = v8 - 1;
        return;
      }
      int v29 = *(unsigned __int8 *)(*(void *)(v6 + 56) + v27);
      swift_bridgeObjectRelease();
      if (v29 != 9) {
        goto LABEL_24;
      }
      v3[5] = ++v8;
      if (v8 >= v33) {
        return;
      }
    }
    uint64_t v10 = v9;
    if (v9 < 1)
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1B29A3EB4(&qword_1EB7E4AC0);
      uint64_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      v11[2] = v10;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 16);
    }
    uint64_t v34 = v4;
    uint64_t v35 = v5;
    uint64_t v13 = v10 & ~(v10 >> 63);
    uint64_t v36 = 0;
    uint64_t v37 = v32;
    swift_bridgeObjectRetain();
    uint64_t v14 = 4;
    while (v13)
    {
      uint64_t v15 = sub_1B2E82548();
      if (!v16) {
        goto LABEL_30;
      }
      uint64_t v17 = &v11[v14];
      *uint64_t v17 = v15;
      v17[1] = v16;
      --v13;
      v14 += 2;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v31;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease();
  __break(1u);
}

void sub_1B2D2B0C0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  unint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(void *)(v0 + 40) = v2;
  if (v2 == *(void *)(v0 + 32)) {
    return;
  }
  swift_bridgeObjectRetain();
  sub_1B29C368C();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
  if (v2 >= *(void *)(v4 + 16))
  {
LABEL_9:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  swift_release();
  *(void *)(v0 + 40) = v2 + 1;
}

uint64_t sub_1B2D2B198()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_54:
    __break(1u);
  }
  else
  {
    uint64_t v3 = v0;
    v0[5] = v2;
    uint64_t v54 = 0;
    uint64_t v55 = 0xE000000000000000;
    uint64_t v4 = v0[4];
    if (v2 >= v4)
    {
LABEL_37:
      swift_bridgeObjectRelease();
      return 10;
    }
    uint64_t v6 = v0[2];
    unint64_t v5 = v0[3];
    uint64_t v7 = *v0;
    uint64_t v8 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v48 = v0[4];
    uint64_t v49 = v8;
    uint64_t v45 = v2;
    uint64_t v47 = (uint64_t)v0;
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1B2E824A8();
      if (v9) {
        break;
      }
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_16:
      swift_bridgeObjectRelease();
      if (v2 < 0) {
        goto LABEL_49;
      }
      if ((unint64_t)v2 >= v11[2]) {
        goto LABEL_50;
      }
      uint64_t v18 = &v11[2 * v2];
      uint64_t v19 = v18[4];
      uint64_t v20 = v18[5];
      swift_bridgeObjectRetain();
      swift_release();
      if (*(void *)(v7 + 16)
        && (uint64_t v27 = sub_1B29DB204(v19, v20, v21, v22, v23, v24, v25, v26, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54,
                    v55,
                    v56,
                    v57,
                    v58,
                    v59,
                    v60,
                    v61),
            (v28 & 1) != 0))
      {
        int v29 = *(unsigned __int8 *)(*(void *)(v7 + 56) + v27);
        swift_bridgeObjectRelease();
        if (v29 == 17)
        {
          v3[5] = v2 + 1;
          if (v2 + 1 == v4) {
            goto LABEL_37;
          }
          swift_bridgeObjectRetain();
          uint64_t v30 = sub_1B2E824A8();
          HIDWORD(v46) = 17;
          if (v30)
          {
            uint64_t v31 = v30;
            if (v30 < 1)
            {
              uint64_t v32 = (void *)MEMORY[0x1E4FBC860];
            }
            else
            {
              sub_1B29A3EB4(&qword_1EB7E4AC0);
              uint64_t v32 = (void *)swift_allocObject();
              size_t v33 = j__malloc_size(v32);
              v32[2] = v31;
              v32[3] = 2 * ((uint64_t)(v33 - 32) / 16);
            }
            uint64_t v50 = v6;
            uint64_t v51 = v5;
            uint64_t v34 = v31 & ~(v31 >> 63);
            uint64_t v52 = 0;
            uint64_t v53 = v49;
            swift_bridgeObjectRetain();
            uint64_t v35 = 4;
            while (v34)
            {
              uint64_t v36 = sub_1B2E82548();
              if (!v37) {
                goto LABEL_57;
              }
              uint64_t v38 = &v32[v35];
              *uint64_t v38 = v36;
              v38[1] = v37;
              --v34;
              v35 += 2;
              if (!--v31)
              {
                swift_bridgeObjectRelease();
                uint64_t v4 = v48;
                goto LABEL_33;
              }
            }
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
            goto LABEL_52;
          }
          uint64_t v32 = (void *)MEMORY[0x1E4FBC860];
LABEL_33:
          swift_bridgeObjectRelease();
          if ((unint64_t)(v2 + 1) >= v32[2]) {
            goto LABEL_51;
          }
          swift_bridgeObjectRetain();
          swift_release();
          uint64_t v45 = v2 + 2;
          *(void *)(v47 + 40) = v2 + 2;
          sub_1B2E82518();
          uint64_t v3 = (void *)v47;
          swift_bridgeObjectRelease();
          ++v2;
        }
        if (v29 == 5) {
          goto LABEL_39;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v3[5] = ++v2;
      if (v2 >= v4) {
        goto LABEL_37;
      }
    }
    uint64_t v10 = v9;
    if (v9 < 1)
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1B29A3EB4(&qword_1EB7E4AC0);
      uint64_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      v11[2] = v10;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 16);
    }
    uint64_t v50 = v6;
    uint64_t v51 = v5;
    uint64_t v13 = v10 & ~(v10 >> 63);
    uint64_t v52 = 0;
    uint64_t v53 = v49;
    swift_bridgeObjectRetain();
    uint64_t v14 = 4;
    while (v13)
    {
      uint64_t v15 = sub_1B2E82548();
      if (!v16) {
        goto LABEL_53;
      }
      uint64_t v17 = &v11[v14];
      *uint64_t v17 = v15;
      v17[1] = v16;
      --v13;
      v14 += 2;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v48;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    sub_1B29C368C();
    uint64_t v41 = v40;
    swift_bridgeObjectRelease();
    if (v2 < v45) {
      goto LABEL_54;
    }
    if ((v45 & 0x8000000000000000) == 0)
    {
      unint64_t v42 = *(void *)(v41 + 16);
      if (v42 >= v45 && v42 >= v2)
      {
        sub_1B29A3EB4((uint64_t *)&unk_1EB7D9810);
        sub_1B2D2B924();
        sub_1B2E824F8();
        swift_release();
        v3[5] = v2 + 1;
        return 6;
      }
      goto LABEL_56;
    }
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1B2D2B5E4()
{
  int64_t v1 = v0[5];
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
LABEL_40:
    __break(1u);
  }
  else
  {
    uint64_t v3 = v0;
    v0[5] = v2;
    uint64_t v44 = v0[4];
    if (v2 >= v44)
    {
      return 10;
    }
    else
    {
      uint64_t v40 = "out closing quotes";
      int64_t v41 = v1;
      uint64_t v5 = v0[2];
      unint64_t v4 = v0[3];
      uint64_t v6 = HIBYTE(v4) & 0xF;
      if ((v4 & 0x2000000000000000) == 0) {
        uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v42 = (uint64_t)v0;
      uint64_t v43 = v6;
      uint64_t v7 = *v0;
      uint64_t v8 = v1 + 1;
      while (1)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_1B2E824A8();
        if (v9)
        {
          uint64_t v10 = v9;
          if (v9 < 1)
          {
            uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
          }
          else
          {
            sub_1B29A3EB4(&qword_1EB7E4AC0);
            uint64_t v11 = (void *)swift_allocObject();
            size_t v12 = j__malloc_size(v11);
            v11[2] = v10;
            v11[3] = 2 * ((uint64_t)(v12 - 32) / 16);
          }
          uint64_t v45 = v5;
          uint64_t v46 = v4;
          uint64_t v13 = v10 & ~(v10 >> 63);
          uint64_t v47 = 0;
          uint64_t v48 = v43;
          swift_bridgeObjectRetain();
          uint64_t v14 = 4;
          while (v13)
          {
            uint64_t v15 = sub_1B2E82548();
            if (!v16) {
              goto LABEL_39;
            }
            uint64_t v17 = &v11[v14];
            *uint64_t v17 = v15;
            v17[1] = v16;
            --v13;
            v14 += 2;
            if (!--v10)
            {
              swift_bridgeObjectRelease();
              uint64_t v3 = (void *)v42;
              goto LABEL_16;
            }
          }
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_16:
        swift_bridgeObjectRelease();
        if (v2 < 0) {
          goto LABEL_36;
        }
        if ((unint64_t)v8 >= v11[2]) {
          goto LABEL_37;
        }
        uint64_t v18 = &v11[2 * v8];
        uint64_t v19 = v18[4];
        uint64_t v20 = v18[5];
        swift_bridgeObjectRetain();
        swift_release();
        if (*(void *)(v7 + 16)
          && (uint64_t v27 = sub_1B29DB204(v19, v20, v21, v22, v23, v24, v25, v26, v39, (uint64_t)v40, v41, v42, v43, v44, v45, v46, v47, v48, v49,
                      v50,
                      v51,
                      v52,
                      v53,
                      v54,
                      v55,
                      v56),
              (v28 & 1) != 0))
        {
          int v29 = *(unsigned __int8 *)(*(void *)(v7 + 56) + v27);
        }
        else
        {
          int v29 = 6;
        }
        swift_bridgeObjectRelease();
        if (qword_1EB7D9688 != -1) {
          swift_once();
        }
        sub_1B29FBBF4(v29, qword_1EB7D9678);
        if ((v30 & 1) != 0 || v29 == 9) {
          break;
        }
        v3[5] = ++v8;
        if (v8 >= v44) {
          return 10;
        }
      }
      swift_bridgeObjectRetain();
      sub_1B29C368C();
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      uint64_t result = v41;
      if (v8 <= v41) {
        goto LABEL_40;
      }
      sub_1B2D2A484(v41, v8 - 1, v32);
      swift_release();
      sub_1B29A3EB4((uint64_t *)&unk_1EB7D9810);
      sub_1B2D2B924();
      uint64_t v33 = sub_1B2E82608();
      uint64_t v35 = v34;
      uint64_t v36 = v3[1];
      swift_bridgeObjectRetain();
      unsigned int v37 = sub_1B29B25E0(v33, v35, v36);
      swift_bridgeObjectRelease();
      uint64_t result = 6;
      if (v37 != 20)
      {
        if ((_BYTE)v37) {
          return v37;
        }
        else {
          return 6;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1B2D2B924()
{
  unint64_t result = qword_1EB7D9808;
  if (!qword_1EB7D9808)
  {
    sub_1B29C3588((uint64_t *)&unk_1EB7D9810);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9808);
  }
  return result;
}

uint64_t sub_1B2D2B98C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D2B9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2D2BA38(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t sub_1B2D2BAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t sub_1B2D2BB50(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2D2BB90(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for LexerV2()
{
}

uint64_t sub_1B2D2BBF0(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4 = a4 >> 5;
  if (v4 == 4 || v4 == 3) {
    return swift_bridgeObjectRetain();
  }
  if (!(a4 >> 5)) {
    return sub_1B2D2BC18(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_1B2D2BC18(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B2D2BC30(uint64_t a1)
{
  return sub_1B2D2BC44(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_1B2D2BC44(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4 = a4 >> 5;
  if (v4 == 4 || v4 == 3) {
    return swift_bridgeObjectRelease();
  }
  if (!(a4 >> 5)) {
    return sub_1B2D2BC6C(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_1B2D2BC6C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2D2BC84(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B2D2E73C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1B2D2BBF0);
}

uint64_t *sub_1B2D2BC9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B2D2E7D0(a1, a2, a3, (uint64_t)sub_1B2D2BBF0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2D2BC44);
}

uint64_t *sub_1B2D2BCC8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2D2E85C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2D2BC44);
}

uint64_t sub_1B2D2BCE0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x39 && *(unsigned char *)(a1 + 25))
    {
      unsigned int v2 = *(_DWORD *)a1 + 56;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 24) >> 5) & 0xFFFFFFC7 | (8 * ((*(unsigned __int8 *)(a1 + 24) >> 2) & 7))) ^ 0x3F;
      if (v2 >= 0x38) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1B2D2BD2C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x38)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 57;
    if (a3 >= 0x39) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x39) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 4 * (((-a2 >> 3) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1B2D2BD88(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 24) >> 5;
  if (v1 == 7) {
    return (*(_DWORD *)a1 + 7);
  }
  else {
    return v1;
  }
}

uint64_t sub_1B2D2BDA4(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0x1Fu;
  return result;
}

uint64_t sub_1B2D2BDB4(uint64_t result, unsigned int a2)
{
  if (a2 < 7)
  {
    char v2 = *(unsigned char *)(result + 24) & 3 | (32 * a2);
  }
  else
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 7;
    char v2 = -32;
  }
  *(unsigned char *)(result + 24) = v2;
  return result;
}

void type metadata accessor for LexerV2.Token()
{
}

uint64_t sub_1B2D2BDEC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1B2D2BE4C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1B2A43898);
}

uint64_t sub_1B2D2BE04(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1B2D2BE4C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1B2A439FC);
}

uint64_t sub_1B2D2BE1C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1B2D2BE4C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1B2A46C04);
}

uint64_t sub_1B2D2BE34(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1B2D2BE4C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1B2A46CA8);
}

uint64_t sub_1B2D2BE4C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  if ((a4 & 1) == 0) {
    goto LABEL_2;
  }
  sub_1B2E837E8();
  swift_unknownObjectRetain_n();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = *(void *)(v11 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v12 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    uint64_t v10 = a5(a1, a2, a3, a4);
    goto LABEL_9;
  }
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_unknownObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
LABEL_9:
  swift_unknownObjectRelease();
  return v10;
}

uint64_t sub_1B2D2BF44@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v3 = result & 0xFFFFFFFFFFFFLL;
  }
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = v3;
  *(void *)(a3 + 32) = v4;
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = 0;
  *(void *)(a3 + 56) = 0;
  *(unsigned char *)(a3 + 64) = 0;
  return result;
}

double sub_1B2D2BF74@<D0>(uint64_t a1@<X8>)
{
  sub_1B2D2C3F8();
  sub_1B2D2C65C();
  if (!v4)
  {
LABEL_44:
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    char v18 = -4;
LABEL_85:
    *(unsigned char *)(a1 + 24) = v18;
    return result;
  }
  uint64_t v6 = v3;
  uint64_t v7 = v4;
  while (1)
  {
    BOOL v8 = v6 == 61 && v7 == 0xE100000000000000;
    if (v8 || (sub_1B29A30FC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1B2D2C880();
      if (!v20)
      {
LABEL_51:
        *(void *)a1 = 0;
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        goto LABEL_84;
      }
      if (v19 == 61 && v20 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B2D2E9D4();
        sub_1B2D2EAAC();
        if ((v6 & 1) == 0) {
          goto LABEL_51;
        }
      }
      sub_1B2D2C65C();
      swift_bridgeObjectRelease();
      sub_1B2D2C880();
      if (v28)
      {
        if (v27 == 61 && v28 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1B2D2E9D4();
          sub_1B2D2EAAC();
          if ((v6 & 1) == 0) {
            goto LABEL_72;
          }
        }
        sub_1B2D2C65C();
        swift_bridgeObjectRelease();
        uint64_t v26 = 2;
        goto LABEL_83;
      }
LABEL_72:
      uint64_t v26 = 1;
      goto LABEL_83;
    }
    BOOL v9 = v6 == 33 && v7 == 0xE100000000000000;
    if (v9 || (sub_1B29A30FC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1B2D2C880();
      if (!v23) {
        goto LABEL_58;
      }
      if (v22 == 61 && v23 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B2D2E9D4();
        sub_1B2D2EAAC();
        if ((v6 & 1) == 0)
        {
LABEL_58:
          uint64_t v25 = *(void *)(v1 + 56);
          *(void *)a1 = 0xD000000000000012;
          *(void *)(a1 + 8) = 0x80000001B2EA13B0;
          *(void *)(a1 + 16) = v25;
LABEL_59:
          *(unsigned char *)(a1 + 24) = 0;
          return result;
        }
      }
      uint64_t v26 = 10;
LABEL_83:
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)a1 = v26;
LABEL_84:
      char v18 = -32;
      goto LABEL_85;
    }
    BOOL v10 = v6 == 44 && v7 == 0xE100000000000000;
    if (v10 || (sub_1B29A30FC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = 3;
      goto LABEL_83;
    }
    BOOL v11 = v6 == 91 && v7 == 0xE100000000000000;
    if (v11 || (sub_1B29A30FC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = 4;
      goto LABEL_83;
    }
    BOOL v12 = v6 == 93 && v7 == 0xE100000000000000;
    if (v12 || (sub_1B29A30FC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = 5;
      goto LABEL_83;
    }
    BOOL v13 = v6 == 40 && v7 == 0xE100000000000000;
    if (v13 || (sub_1B29A30FC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = 6;
      goto LABEL_83;
    }
    BOOL v14 = v6 == 41 && v7 == 0xE100000000000000;
    if (v14 || (sub_1B29A30FC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = 7;
      goto LABEL_83;
    }
    BOOL v15 = v6 == 10 && v7 == 0xE100000000000000;
    if (!v15 && (sub_1B29A30FC() & 1) == 0) {
      break;
    }
    swift_bridgeObjectRelease();
    sub_1B2D2C3F8();
    sub_1B2D2C3F8();
    sub_1B2D2C65C();
    uint64_t v6 = v16;
    uint64_t v7 = v17;
    if (!v17) {
      goto LABEL_44;
    }
  }
  BOOL v30 = v6 == 59 && v7 == 0xE100000000000000;
  if (v30 || (sub_1B29A30FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = 8;
    goto LABEL_83;
  }
  BOOL v31 = v6 == 46 && v7 == 0xE100000000000000;
  if (v31 || (sub_1B29A30FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = 9;
    goto LABEL_83;
  }
  BOOL v32 = v6 == 45 && v7 == 0xE100000000000000;
  if (v32 || (sub_1B29A30FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = 11;
    goto LABEL_83;
  }
  BOOL v33 = v6 == 43 && v7 == 0xE100000000000000;
  if (v33 || (sub_1B29A30FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = 12;
    goto LABEL_83;
  }
  BOOL v34 = v6 == 42 && v7 == 0xE100000000000000;
  if (v34 || (sub_1B29A30FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = 13;
    goto LABEL_83;
  }
  BOOL v35 = v6 == 47 && v7 == 0xE100000000000000;
  if (v35 || (sub_1B29A30FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = 14;
    goto LABEL_83;
  }
  sub_1B29A0A6C();
  sub_1B2E82288();
  if (v36)
  {
    BOOL v41 = v6 == 39 && v7 == 0xE100000000000000;
    if (!v41 && (sub_1B29A30FC() & 1) == 0)
    {
      sub_1B29A0A6C();
      if ((sub_1B2E822A8() & 1) == 0)
      {
        sub_1B2E82298();
        swift_bridgeObjectRelease();
        uint64_t v46 = *(void *)(v1 + 56);
        *(void *)a1 = 0;
        *(void *)(a1 + 8) = 0xE000000000000000;
        *(void *)(a1 + 16) = v46;
        goto LABEL_59;
      }
      goto LABEL_128;
    }
    uint64_t v42 = sub_1B29A0A6C();
    sub_1B2D2D6A4(v42, v43, v44);
  }
  else
  {
    sub_1B2D2CAC0();
    if (!v37 || (sub_1B2E82288(), char v39 = v38, swift_bridgeObjectRelease(), (v39 & 1) == 0))
    {
      sub_1B29A0A6C();
      sub_1B2D2D100(v40);
      goto LABEL_129;
    }
LABEL_128:
    sub_1B29A0A6C();
    sub_1B2D2CB50(v45);
  }
LABEL_129:
  swift_bridgeObjectRelease();
  double result = *(double *)&v47;
  *(_OWORD *)a1 = v47;
  *(void *)(a1 + 16) = v48;
  *(unsigned char *)(a1 + 24) = v49;
  return result;
}

void sub_1B2D2C3F8()
{
  while (1)
  {
    uint64_t v1 = (void *)v0[4];
    if (v1[2])
    {
      uint64_t v3 = v1[4];
      uint64_t v2 = v1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v0[5] = v3;
      v0[6] = v2;
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    uint64_t v4 = v0[7];
    BOOL v5 = __OFADD__(v4, 1);
    uint64_t v6 = v4 + 1;
    if (v5) {
      break;
    }
    v0[7] = v6;
    uint64_t v7 = sub_1B2E82548();
    if (!v8) {
      return;
    }
    uint64_t v3 = v7;
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[5] = v3;
    v0[6] = v9;
    swift_bridgeObjectRetain_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299B8BC();
      sub_1B29B74B4();
      uint64_t v1 = v26;
    }
    unint64_t v10 = v1[2];
    if (v10 >= v1[3] >> 1)
    {
      sub_1B29B74B4();
      uint64_t v1 = v27;
    }
    v1[2] = v10 + 1;
    BOOL v11 = &v1[2 * v10];
    v11[4] = v3;
    v11[5] = v9;
    v0[4] = v1;
LABEL_10:
    unint64_t v12 = sub_1B29A0A6C();
    unint64_t v14 = sub_1B2D2E4AC(v12, v13);
    if ((v14 & 0x100000000) != 0) {
      goto LABEL_33;
    }
    BOOL v15 = (v14 - 14) <= 0xFFFFFFFB && (v14 - 8232) >= 2;
    if (!v15 || v14 == 133)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B29A0A6C();
      sub_1B2E82238();
      sub_1B2D2EAAC();
      if ((v3 & 1) == 0) {
        return;
      }
    }
    uint64_t v16 = v1[2];
    if (v16)
    {
      uint64_t v17 = v1[4];
      uint64_t v18 = v1[5];
      sub_1B2E837E8();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v19 = swift_dynamicCastClass();
      if (!v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = MEMORY[0x1E4FBC860];
      }
      uint64_t v20 = *(void *)(v19 + 16);
      swift_release();
      if (v20 == v16 - 1)
      {
        uint64_t v21 = swift_dynamicCastClass();
        swift_bridgeObjectRelease();
        if (!v21)
        {
          swift_bridgeObjectRelease();
          uint64_t v21 = MEMORY[0x1E4FBC860];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1B2A43720();
        uint64_t v21 = v25;
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v0[4] = v21;
    }
    else
    {
      uint64_t v22 = v0[7];
      BOOL v5 = __OFADD__(v22, 1);
      uint64_t v23 = v22 + 1;
      if (v5) {
        goto LABEL_32;
      }
      v0[7] = v23;
      uint64_t v17 = sub_1B2E82548();
      uint64_t v18 = v24;
      swift_bridgeObjectRelease();
    }
    v0[5] = v17;
    v0[6] = v18;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

void sub_1B2D2C65C()
{
  uint64_t v1 = (void *)v0[4];
  if (v1[2])
  {
    uint64_t v2 = v1[4];
    uint64_t v3 = v1[5];
    uint64_t v4 = sub_1B2A70090(1, (uint64_t)v1);
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    unint64_t v10 = v9;
    swift_bridgeObjectRetain();
    v0[4] = sub_1B2D2BE4C(v4, v6, v8, v10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1B2A43720);
LABEL_5:
    swift_bridgeObjectRelease();
    v0[5] = v2;
    v0[6] = v3;
    swift_bridgeObjectRetain();
    return;
  }
  uint64_t v11 = v0[7];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (!v12)
  {
    v0[7] = v13;
    uint64_t v2 = sub_1B2E82548();
    uint64_t v3 = v14;
    goto LABEL_5;
  }
  __break(1u);
}

void sub_1B2D2C72C(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 72);
  if (*(void *)(v3 + 16))
  {
    uint64_t v4 = *(void *)(v3 + 32);
    uint64_t v5 = *(void *)(v3 + 40);
    uint64_t v6 = *(void *)(v3 + 48);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    char v7 = *(unsigned char *)(v3 + 56);
    *(unsigned char *)(a1 + 24) = v7;
    uint64_t v8 = sub_1B2A70090(1, v3);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    unint64_t v14 = v13;
    uint64_t v15 = sub_1B2D2E9C0();
    sub_1B2D2BBF0(v15, v16, v17, v18);
    *(void *)(v1 + 72) = sub_1B2D2BE4C(v8, v10, v12, v14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1B2A46C04);
    sub_1B2D2E6E8(*(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(unsigned char *)(v1 + 104));
    *(void *)(v1 + 80) = v4;
    *(void *)(v1 + 88) = v5;
    *(void *)(v1 + 96) = v6;
    *(unsigned char *)(v1 + 104) = v7;
    sub_1B2D2E9C0();
    sub_1B2CC770C();
    sub_1B2D2BBF0(v19, v20, v21, v22);
  }
  else
  {
    uint64_t v24 = *(void *)(v1 + 112);
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v1 + 112) = v26;
      sub_1B2D2BF74((uint64_t)v36);
      uint64_t v27 = v36[0];
      uint64_t v28 = v36[1];
      uint64_t v29 = v36[2];
      char v30 = v37;
      sub_1B2D2E6E8(*(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(unsigned char *)(v1 + 104));
      *(void *)(v1 + 80) = v27;
      *(void *)(v1 + 88) = v28;
      *(void *)(v1 + 96) = v29;
      *(unsigned char *)(v1 + 104) = v30;
      *(void *)a1 = v27;
      *(void *)(a1 + 8) = v28;
      *(void *)(a1 + 16) = v29;
      *(unsigned char *)(a1 + 24) = v30;
      sub_1B2D2E9C0();
      sub_1B2CC770C();
      sub_1B2D2E6FC(v31, v32, v33, v34);
    }
  }
}

void sub_1B2D2C880()
{
  uint64_t v1 = (void *)v0[4];
  if (v1[2])
  {
    uint64_t v2 = v1[4];
    uint64_t v3 = v1[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v0[5] = v2;
    v0[6] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = v0[7];
    BOOL v5 = __OFADD__(v4, 1);
    uint64_t v6 = v4 + 1;
    if (v5)
    {
      __break(1u);
    }
    else
    {
      v0[7] = v6;
      uint64_t v7 = sub_1B2E82548();
      uint64_t v9 = v8;
      if (v8)
      {
        swift_bridgeObjectRelease();
        v0[5] = v7;
        v0[6] = v9;
        swift_bridgeObjectRetain_n();
        sub_1B2E314FC();
        uint64_t v10 = *(void *)(v0[4] + 16);
        sub_1B2E31B58(v10);
        uint64_t v11 = v0[4];
        *(void *)(v11 + 16) = v10 + 1;
        uint64_t v12 = v11 + 16 * v10;
        *(void *)(v12 + 32) = v7;
        *(void *)(v12 + 40) = v9;
        v0[4] = v11;
      }
    }
  }
}

void sub_1B2D2C960(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 72);
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = *(void *)(v4 + 32);
    uint64_t v6 = *(void *)(v4 + 40);
    uint64_t v7 = *(void *)(v4 + 48);
    uint64_t v8 = *(void *)(v2 + 80);
    uint64_t v9 = *(void *)(v2 + 88);
    uint64_t v10 = *(void *)(v2 + 96);
    char v11 = *(unsigned char *)(v4 + 56);
    unsigned __int8 v12 = *(unsigned char *)(v2 + 104);
    uint64_t v13 = sub_1B2D2EAC4();
    sub_1B2D2BBF0(v13, v14, v15, v16);
    sub_1B2D2E6E8(v8, v9, v10, v12);
    *(void *)(v2 + 80) = v5;
    *(void *)(v2 + 88) = v6;
    *(void *)(v2 + 96) = v7;
    *(unsigned char *)(v2 + 104) = v11;
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = v11;
    sub_1B2D2EAC4();
    sub_1B2CC770C();
    sub_1B2D2BBF0(v17, v18, v19, v20);
  }
  else
  {
    uint64_t v22 = *(void *)(v1 + 112);
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v1 + 112) = v24;
      sub_1B2D2BF74((uint64_t)v32);
      uint64_t v26 = v32[0];
      uint64_t v25 = v32[1];
      uint64_t v27 = v32[2];
      unsigned __int8 v28 = v33;
      if (v33 <= 0xFBu)
      {
        sub_1B2D2E6E8(*(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(unsigned char *)(v1 + 104));
        *(void *)(v1 + 80) = v26;
        *(void *)(v1 + 88) = v25;
        *(void *)(v1 + 96) = v27;
        *(unsigned char *)(v1 + 104) = v28;
        sub_1B2D2EB18();
        sub_1B2D2EB18();
        sub_1B2E31A0C();
        uint64_t v29 = *(void *)(*(void *)(v1 + 72) + 16);
        sub_1B2E3207C(v29);
        uint64_t v30 = *(void *)(v1 + 72);
        *(void *)(v30 + 16) = v29 + 1;
        uint64_t v31 = v30 + 32 * v29;
        *(void *)(v31 + 32) = v26;
        *(void *)(v31 + 40) = v25;
        *(void *)(v31 + 48) = v27;
        *(unsigned char *)(v31 + 56) = v28;
        *(void *)(v1 + 72) = v30;
      }
      *(void *)a1 = v26;
      *(void *)(a1 + 8) = v25;
      *(void *)(a1 + 16) = v27;
      *(unsigned char *)(a1 + 24) = v28;
      sub_1B2CC770C();
    }
  }
}

uint64_t sub_1B2D2CAC0()
{
  uint64_t v1 = sub_1B2E82548();
  uint64_t v3 = v2;
  if (v2)
  {
    swift_bridgeObjectRelease();
    v0[5] = v1;
    v0[6] = v3;
    swift_bridgeObjectRetain_n();
    sub_1B2E314FC();
    uint64_t v4 = *(void *)(v0[4] + 16);
    sub_1B2E31B58(v4);
    uint64_t v5 = v0[4];
    *(void *)(v5 + 16) = v4 + 1;
    uint64_t v6 = v5 + 16 * v4;
    *(void *)(v6 + 32) = v1;
    *(void *)(v6 + 40) = v3;
    v0[4] = v5;
  }
  return v1;
}

char sub_1B2D2CB50@<W0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1B2E82298();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v4 = (void *)v2[4];
    if (v4[2])
    {
      uint64_t v6 = v4[4];
      uint64_t v5 = v4[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v2[5] = v6;
      v2[6] = v5;
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_1B299EAB0();
      if (v8)
      {
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      uint64_t v9 = sub_1B2D2EA54(v7);
      if (!v10) {
        goto LABEL_30;
      }
      uint64_t v6 = v9;
      uint64_t v5 = v10;
      swift_bridgeObjectRelease();
      v2[5] = v6;
      v2[6] = v5;
      swift_bridgeObjectRetain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B299B8BC();
        sub_1B29B74B4();
        uint64_t v4 = v26;
      }
      unint64_t v12 = v4[2];
      unint64_t v11 = v4[3];
      if (v12 >= v11 >> 1)
      {
        sub_1B29999F8(v11);
        sub_1B29B74B4();
        uint64_t v4 = v27;
      }
      v4[2] = v12 + 1;
      uint64_t v13 = &v4[2 * v12];
      v13[4] = v6;
      v13[5] = v5;
      v2[4] = v4;
    }
    sub_1B2CF34C0();
    if ((sub_1B2E822A8() & 1) == 0)
    {
      sub_1B2CF34C0();
      sub_1B2E82288();
      if ((v14 & 1) != 0 && (v6 != 95 || v5 != 0xE100000000000000))
      {
        sub_1B2CF34C0();
        if ((sub_1B2E837A8() & 1) == 0) {
          break;
        }
      }
    }
    uint64_t v16 = sub_1B2CF34C0();
    MEMORY[0x1B3EB0CD0](v16);
    swift_bridgeObjectRelease();
    uint64_t v17 = v4[2];
    if (v17)
    {
      uint64_t v18 = v4[4];
      uint64_t v19 = v4[5];
      sub_1B2E837E8();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v20 = swift_dynamicCastClass();
      if (!v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = v3;
      }
      uint64_t v21 = *(void *)(v20 + 16);
      swift_release();
      if (v21 == v17 - 1)
      {
        uint64_t v22 = swift_dynamicCastClass();
        swift_bridgeObjectRelease();
        if (!v22)
        {
          swift_bridgeObjectRelease();
          uint64_t v22 = v3;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1B2A43720();
        uint64_t v22 = v25;
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v2[4] = v22;
    }
    else
    {
      sub_1B299EAB0();
      if (v8) {
        goto LABEL_42;
      }
      uint64_t v18 = sub_1B2D2EA54(v23);
      uint64_t v19 = v24;
      swift_bridgeObjectRelease();
    }
    v2[5] = v18;
    v2[6] = v19;
  }
  swift_bridgeObjectRelease();
LABEL_30:
  if (sub_1B299D7AC())
  {
    char result = swift_bridgeObjectRelease();
    uint64_t v29 = 15;
    goto LABEL_32;
  }
  if (sub_1B299D7AC())
  {
    char result = swift_bridgeObjectRelease();
    uint64_t v29 = 16;
    goto LABEL_32;
  }
  if (sub_1B299D7AC())
  {
    char result = swift_bridgeObjectRelease();
    uint64_t v29 = 17;
    goto LABEL_32;
  }
  if (sub_1B299D7AC())
  {
LABEL_43:
    char result = swift_bridgeObjectRelease();
    uint64_t v29 = 18;
LABEL_32:
    uint64_t v30 = a1;
LABEL_33:
    v30[1] = 0;
    v30[2] = 0;
    *uint64_t v30 = v29;
    char v31 = -32;
    goto LABEL_34;
  }
  if (sub_1B299D7AC())
  {
    char result = swift_bridgeObjectRelease();
    uint64_t v29 = 19;
    goto LABEL_32;
  }
  if (sub_1B299D7AC())
  {
    char result = swift_bridgeObjectRelease();
    uint64_t v29 = 20;
    goto LABEL_32;
  }
  if (sub_1B299D7AC())
  {
    char result = swift_bridgeObjectRelease();
    uint64_t v30 = a1;
    uint64_t v29 = 21;
    goto LABEL_33;
  }
  if (sub_1B2E837A8())
  {
    char result = swift_bridgeObjectRelease();
    uint64_t v29 = 22;
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1B29A0A6C();
  sub_1B2CA7DB8(v32, v33, v34);
  if (v38)
  {
    swift_bridgeObjectRetain();
    v35._countAndFlagsBits = sub_1B29A0A6C();
    char result = KGQ.Keyword.init(rawValue:)(v35).value;
    if (v37 == 17)
    {
      uint64_t v30 = a1;
      *a1 = 0;
      a1[1] = 0xE000000000000000;
      a1[2] = 0;
      char v31 = 0x80;
    }
    else
    {
      char result = swift_bridgeObjectRelease();
      uint64_t v30 = a1;
      a1[1] = 0;
      a1[2] = 0;
      *a1 = v37;
      char v31 = -96;
    }
  }
  else
  {
    char result = swift_bridgeObjectRelease();
    uint64_t v30 = a1;
    a1[1] = 0;
    a1[2] = 0;
    *a1 = v37;
    char v31 = -64;
  }
LABEL_34:
  *((unsigned char *)v30 + 24) = v31;
  return result;
}

uint64_t sub_1B2D2D100@<X0>(uint64_t *a1@<X8>)
{
  sub_1B2E82298();
  char v34 = 0;
  while (1)
  {
    uint64_t v4 = (void *)v1[4];
    if (!v4[2]) {
      break;
    }
    uint64_t v5 = v4[4];
    uint64_t v2 = v4[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v1[5] = v5;
    v1[6] = v2;
    swift_bridgeObjectRetain();
LABEL_11:
    sub_1B2E82288();
    if (v13)
    {
      BOOL v18 = v5 == 46 && v2 == 0xE100000000000000;
      if (!v18 && (sub_1B2E837A8() & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_42:
        if (v34)
        {
LABEL_43:
          uint64_t result = sub_1B2A10088(0, 0xE000000000000000);
          if ((v26 & 1) == 0)
          {
            uint64_t v27 = a1;
            a1[1] = 0;
            a1[2] = 0;
            *a1 = result;
            char v28 = 64;
            goto LABEL_61;
          }
          goto LABEL_60;
        }
LABEL_59:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_60;
      }
      if (v34)
      {
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
      uint64_t v19 = v4[2];
      if (v19)
      {
        sub_1B2D2EA8C();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1B2D2EB58();
        if (!v20)
        {
          swift_bridgeObjectRelease();
          uint64_t v20 = MEMORY[0x1E4FBC860];
        }
        uint64_t v21 = *(void *)(v20 + 16);
        swift_release();
        if (v21 == v19 - 1)
        {
          sub_1B2D2EB58();
          sub_1B2D2EB00();
          if (!v3)
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = MEMORY[0x1E4FBC860];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_1B2D2EB38();
          sub_1B2D2EB00();
        }
        swift_bridgeObjectRelease();
        v1[4] = v3;
      }
      else
      {
        sub_1B299EAB0();
        if (v7)
        {
          __break(1u);
          goto LABEL_59;
        }
        sub_1B2D2EA54(v22);
        swift_bridgeObjectRelease();
      }
      sub_1B2D2EA6C();
      swift_bridgeObjectRelease();
      char v34 = 1;
    }
    else
    {
      uint64_t v14 = v4[2];
      if (v14)
      {
        sub_1B2D2EA8C();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_1B2D2EB58();
        if (!v15)
        {
          swift_bridgeObjectRelease();
          uint64_t v15 = MEMORY[0x1E4FBC860];
        }
        uint64_t v16 = *(void *)(v15 + 16);
        swift_release();
        if (v16 == v14 - 1)
        {
          sub_1B2D2EB58();
          sub_1B2D2EB00();
          if (!v3)
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = MEMORY[0x1E4FBC860];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_1B2D2EB38();
          sub_1B2D2EB00();
        }
        swift_bridgeObjectRelease();
        v1[4] = v3;
      }
      else
      {
        sub_1B299EAB0();
        if (v7) {
          goto LABEL_50;
        }
        sub_1B2D2EA54(v17);
        swift_bridgeObjectRelease();
      }
      sub_1B2D2EA6C();
      swift_bridgeObjectRelease();
    }
  }
  sub_1B299EAB0();
  if (!v7)
  {
    uint64_t v8 = sub_1B2D2EA54(v6);
    if (!v9) {
      goto LABEL_42;
    }
    uint64_t v5 = v8;
    uint64_t v2 = v9;
    swift_bridgeObjectRelease();
    v1[5] = v5;
    v1[6] = v2;
    swift_bridgeObjectRetain_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299B8BC();
      sub_1B29B74B4();
      uint64_t v4 = v23;
    }
    unint64_t v11 = v4[2];
    unint64_t v10 = v4[3];
    if (v11 >= v10 >> 1)
    {
      sub_1B29999F8(v10);
      sub_1B29B74B4();
      uint64_t v4 = v24;
    }
    v4[2] = v11 + 1;
    unint64_t v12 = &v4[2 * v11];
    v12[4] = v5;
    v12[5] = v2;
    v1[4] = v4;
    goto LABEL_11;
  }
  __break(1u);
LABEL_50:
  __break(1u);
  while (1)
  {
    sub_1B299E61C();
    if (!v18 & v30) {
      break;
    }
    sub_1B2A71F08();
    if (!v18) {
      break;
    }
    uint64_t v29 = v32 - v31;
    if (__OFSUB__(v32, v31)) {
      break;
    }
    sub_1B2D2EA20();
    if (v18) {
      goto LABEL_47;
    }
  }
  uint64_t v29 = 0;
  LOBYTE(v2) = 1;
LABEL_47:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    uint64_t v27 = a1;
    a1[1] = 0;
    a1[2] = 0;
    *a1 = v29;
    char v28 = 32;
    goto LABEL_61;
  }
LABEL_60:
  uint64_t v27 = a1;
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  char v28 = 2;
LABEL_61:
  *((unsigned char *)v27 + 24) = v28;
  return result;
}

uint64_t sub_1B2D2D6A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  BOOL v5 = a1 == 39 && a2 == 0xE100000000000000;
  if (!v5 && (sub_1B2E837A8() & 1) == 0) {
    sub_1B2E82298();
  }
  char v6 = 0;
  uint64_t v8 = v3[5];
  uint64_t v7 = v3[6];
  while (1)
  {
    uint64_t v9 = (void *)v4[4];
    uint64_t v10 = v9[2];
    if (!v10) {
      break;
    }
    uint64_t v11 = v9[4];
    uint64_t v12 = v9[5];
    sub_1B2E837E8();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_dynamicCastClass();
    if (!v13)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
    uint64_t v14 = *(void *)(v13 + 16);
    swift_release();
    uint64_t v15 = v10 - 1;
    if (v14 != v15)
    {
      swift_bridgeObjectRelease();
      if (v15)
      {
        sub_1B29A3EB4(&qword_1EB7E4AC0);
        uint64_t v16 = (void *)swift_allocObject();
        size_t v24 = j__malloc_size(v16);
        v16[2] = v15;
        v16[3] = 2 * ((uint64_t)(v24 - 32) / 16);
        if (v9 + 6 < &v16[2 * v15 + 4] && v16 + 4 < &v9[2 * v15 + 6]) {
          goto LABEL_59;
        }
        swift_arrayInitWithCopy();
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    uint64_t v16 = (void *)swift_dynamicCastClass();
    if (!v16)
    {
      swift_bridgeObjectRelease();
LABEL_16:
      uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    }
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4[4] = v16;
    swift_bridgeObjectRetain();
    uint64_t v8 = v11;
LABEL_21:
    uint64_t v7 = v12;
    BOOL v21 = v8 == 39 && v12 == 0xE100000000000000;
    if (v6)
    {
      if (!v21 && (sub_1B29A4828() & 1) == 0)
      {
        BOOL v22 = v8 == 92 && v12 == 0xE100000000000000;
        if (!v22 && (sub_1B29A4828() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v4[5] = v8;
          v4[6] = v12;
          sub_1B2E831F8();
          swift_bridgeObjectRelease();
          uint64_t result = sub_1B2E82518();
          char v27 = 0;
          uint64_t v18 = v4[7];
LABEL_57:
          *(void *)a3 = 0;
          *(void *)(a3 + 8) = 0xE000000000000000;
          *(void *)(a3 + 16) = v18;
          *(unsigned char *)(a3 + 24) = v27;
          return result;
        }
      }
LABEL_44:
      MEMORY[0x1B3EB0CD0](v8, v12);
      swift_bridgeObjectRelease();
      char v6 = 0;
    }
    else
    {
      if (v21)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v8 = 39;
LABEL_55:
        uint64_t v18 = 0;
        v4[5] = v8;
        v4[6] = v12;
        char v27 = 96;
        goto LABEL_57;
      }
      if (sub_1B29A4828())
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_55;
      }
      if (v8 == 92 && v12 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        char v6 = 1;
        uint64_t v8 = 92;
      }
      else
      {
        if ((sub_1B29A4828() & 1) == 0) {
          goto LABEL_44;
        }
        swift_bridgeObjectRelease();
        char v6 = 1;
      }
    }
  }
  uint64_t v17 = v4[7];
  uint64_t v18 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    v4[7] = v18;
    uint64_t v8 = sub_1B2E82548();
    uint64_t v12 = v19;
    swift_bridgeObjectRelease();
    if (!v12)
    {
      v4[5] = v8;
      v4[6] = 0;
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B2E82518();
      char v27 = 0;
      goto LABEL_57;
    }
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  __break(1u);
LABEL_59:
  v4[5] = v8;
  v4[6] = v7;
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B2D2DAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v6 = *(uint64_t *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 24);
  switch(v5 >> 5)
  {
    case 1u:
      if ((v9 & 0xE0) == 0x20) {
        goto LABEL_15;
      }
      goto LABEL_370;
    case 2u:
      if ((v9 & 0xE0) == 0x40) {
        goto LABEL_15;
      }
      goto LABEL_370;
    case 3u:
      if ((v9 & 0xE0) == 0x60) {
        goto LABEL_17;
      }
      goto LABEL_23;
    case 4u:
      if ((v9 & 0xE0) != 0x80)
      {
LABEL_23:
        swift_bridgeObjectRetain();
        goto LABEL_370;
      }
LABEL_17:
      if (v2 == v6 && v3 == v7) {
        char v12 = 1;
      }
      else {
        char v12 = sub_1B2D2EA30();
      }
      sub_1B2D2BBF0(v6, v7, v8, v9);
      uint64_t v23 = sub_1B2D2E9F4();
      sub_1B2D2BBF0(v23, v24, v25, v26);
      sub_1B2D2BC44(v2, v3, v4, v5);
      uint64_t v27 = sub_1B2D2EAD8();
      goto LABEL_40;
    case 5u:
      if ((v9 & 0xE0) != 0xA0) {
        goto LABEL_370;
      }
      char v14 = sub_1B29AB738(*(void *)a1, *(void *)a2);
      sub_1B2D2E97C();
      return v14 & 1;
    case 6u:
      if ((v9 & 0xE0) != 0xC0) {
        goto LABEL_370;
      }
LABEL_15:
      sub_1B2D2E97C();
      char v12 = *(double *)&v2 == *(double *)&v6;
      return v12 & 1;
    case 7u:
      uint64_t v16 = v4 | v3;
      if (v4 | v3 | v2 || v5 != 224)
      {
        if (v5 == 224 && v2 == 1 && v16 == 0)
        {
          if (v9 >= 0xE0)
          {
            BOOL v39 = v9 == 224 && v6 == 1;
            if (v39 && (v8 | v7) == 0)
            {
              char v12 = 1;
              sub_1B299DD80(1);
              uint64_t v27 = 1;
              uint64_t v28 = 0;
              uint64_t v29 = 0;
              unsigned __int8 v30 = -32;
LABEL_40:
              sub_1B2D2BC44(v27, v28, v29, v30);
              return v12 & 1;
            }
          }
        }
        else if (v5 == 224 && v2 == 2 && v16 == 0)
        {
          if (v9 >= 0xE0)
          {
            BOOL v49 = v9 == 224 && v6 == 2;
            if (v49 && !(v8 | v7))
            {
              sub_1B299DD80(2);
              uint64_t v18 = 2;
              goto LABEL_367;
            }
          }
        }
        else if (v5 == 224 && v2 == 3 && v16 == 0)
        {
          if (v9 >= 0xE0)
          {
            BOOL v50 = v9 == 224 && v6 == 3;
            if (v50 && !(v8 | v7))
            {
              sub_1B299DD80(3);
              uint64_t v18 = 3;
              goto LABEL_367;
            }
          }
        }
        else
        {
          BOOL v37 = v5 == 224 && v2 == 4;
          if (!v37 || v16)
          {
            BOOL v51 = v5 == 224 && v2 == 5;
            if (!v51 || v16)
            {
              BOOL v68 = v5 == 224 && v2 == 6;
              if (!v68 || v16)
              {
                BOOL v70 = v5 == 224 && v2 == 7;
                if (!v70 || v16)
                {
                  BOOL v72 = v5 == 224 && v2 == 8;
                  if (!v72 || v16)
                  {
                    BOOL v74 = v5 == 224 && v2 == 9;
                    if (!v74 || v16)
                    {
                      BOOL v76 = v5 == 224 && v2 == 10;
                      if (!v76 || v16)
                      {
                        BOOL v78 = v5 == 224 && v2 == 11;
                        if (!v78 || v16)
                        {
                          BOOL v80 = v5 == 224 && v2 == 12;
                          if (!v80 || v16)
                          {
                            BOOL v82 = v5 == 224 && v2 == 13;
                            if (!v82 || v16)
                            {
                              BOOL v84 = v5 == 224 && v2 == 14;
                              if (!v84 || v16)
                              {
                                BOOL v86 = v5 == 224 && v2 == 15;
                                if (!v86 || v16)
                                {
                                  BOOL v88 = v5 == 224 && v2 == 16;
                                  if (!v88 || v16)
                                  {
                                    BOOL v90 = v5 == 224 && v2 == 17;
                                    if (!v90 || v16)
                                    {
                                      BOOL v92 = v5 == 224 && v2 == 18;
                                      if (!v92 || v16)
                                      {
                                        BOOL v94 = v5 == 224 && v2 == 19;
                                        if (!v94 || v16)
                                        {
                                          BOOL v96 = v5 == 224 && v2 == 20;
                                          if (!v96 || v16)
                                          {
                                            BOOL v98 = v5 == 224 && v2 == 21;
                                            if (!v98 || v16)
                                            {
                                              if (v9 > 0xDF)
                                              {
                                                BOOL v100 = v9 == 224 && v6 == 22;
                                                if (v100 && !(v8 | v7))
                                                {
                                                  sub_1B299DD80(22);
                                                  uint64_t v18 = 22;
                                                  goto LABEL_367;
                                                }
                                              }
                                            }
                                            else if (v9 >= 0xE0)
                                            {
                                              BOOL v99 = v9 == 224 && v6 == 21;
                                              if (v99 && !(v8 | v7))
                                              {
                                                sub_1B299DD80(21);
                                                uint64_t v18 = 21;
                                                goto LABEL_367;
                                              }
                                            }
                                          }
                                          else if (v9 >= 0xE0)
                                          {
                                            BOOL v97 = v9 == 224 && v6 == 20;
                                            if (v97 && !(v8 | v7))
                                            {
                                              sub_1B299DD80(20);
                                              uint64_t v18 = 20;
                                              goto LABEL_367;
                                            }
                                          }
                                        }
                                        else if (v9 >= 0xE0)
                                        {
                                          BOOL v95 = v9 == 224 && v6 == 19;
                                          if (v95 && !(v8 | v7))
                                          {
                                            sub_1B299DD80(19);
                                            uint64_t v18 = 19;
                                            goto LABEL_367;
                                          }
                                        }
                                      }
                                      else if (v9 >= 0xE0)
                                      {
                                        BOOL v93 = v9 == 224 && v6 == 18;
                                        if (v93 && !(v8 | v7))
                                        {
                                          sub_1B299DD80(18);
                                          uint64_t v18 = 18;
                                          goto LABEL_367;
                                        }
                                      }
                                    }
                                    else if (v9 >= 0xE0)
                                    {
                                      BOOL v91 = v9 == 224 && v6 == 17;
                                      if (v91 && !(v8 | v7))
                                      {
                                        sub_1B299DD80(17);
                                        uint64_t v18 = 17;
                                        goto LABEL_367;
                                      }
                                    }
                                  }
                                  else if (v9 >= 0xE0)
                                  {
                                    BOOL v89 = v9 == 224 && v6 == 16;
                                    if (v89 && !(v8 | v7))
                                    {
                                      sub_1B299DD80(16);
                                      uint64_t v18 = 16;
                                      goto LABEL_367;
                                    }
                                  }
                                }
                                else if (v9 >= 0xE0)
                                {
                                  BOOL v87 = v9 == 224 && v6 == 15;
                                  if (v87 && !(v8 | v7))
                                  {
                                    sub_1B299DD80(15);
                                    uint64_t v18 = 15;
                                    goto LABEL_367;
                                  }
                                }
                              }
                              else if (v9 >= 0xE0)
                              {
                                BOOL v85 = v9 == 224 && v6 == 14;
                                if (v85 && !(v8 | v7))
                                {
                                  sub_1B299DD80(14);
                                  uint64_t v18 = 14;
                                  goto LABEL_367;
                                }
                              }
                            }
                            else if (v9 >= 0xE0)
                            {
                              BOOL v83 = v9 == 224 && v6 == 13;
                              if (v83 && !(v8 | v7))
                              {
                                sub_1B299DD80(13);
                                uint64_t v18 = 13;
                                goto LABEL_367;
                              }
                            }
                          }
                          else if (v9 >= 0xE0)
                          {
                            BOOL v81 = v9 == 224 && v6 == 12;
                            if (v81 && !(v8 | v7))
                            {
                              sub_1B299DD80(12);
                              uint64_t v18 = 12;
                              goto LABEL_367;
                            }
                          }
                        }
                        else if (v9 >= 0xE0)
                        {
                          BOOL v79 = v9 == 224 && v6 == 11;
                          if (v79 && !(v8 | v7))
                          {
                            sub_1B299DD80(11);
                            uint64_t v18 = 11;
                            goto LABEL_367;
                          }
                        }
                      }
                      else if (v9 >= 0xE0)
                      {
                        BOOL v77 = v9 == 224 && v6 == 10;
                        if (v77 && !(v8 | v7))
                        {
                          sub_1B299DD80(10);
                          uint64_t v18 = 10;
                          goto LABEL_367;
                        }
                      }
                    }
                    else if (v9 >= 0xE0)
                    {
                      BOOL v75 = v9 == 224 && v6 == 9;
                      if (v75 && !(v8 | v7))
                      {
                        sub_1B299DD80(9);
                        uint64_t v18 = 9;
                        goto LABEL_367;
                      }
                    }
                  }
                  else if (v9 >= 0xE0)
                  {
                    BOOL v73 = v9 == 224 && v6 == 8;
                    if (v73 && !(v8 | v7))
                    {
                      sub_1B299DD80(8);
                      uint64_t v18 = 8;
                      goto LABEL_367;
                    }
                  }
                }
                else if (v9 >= 0xE0)
                {
                  BOOL v71 = v9 == 224 && v6 == 7;
                  if (v71 && !(v8 | v7))
                  {
                    sub_1B299DD80(7);
                    uint64_t v18 = 7;
                    goto LABEL_367;
                  }
                }
              }
              else if (v9 >= 0xE0)
              {
                BOOL v69 = v9 == 224 && v6 == 6;
                if (v69 && !(v8 | v7))
                {
                  sub_1B299DD80(6);
                  uint64_t v18 = 6;
                  goto LABEL_367;
                }
              }
            }
            else if (v9 >= 0xE0)
            {
              BOOL v52 = v9 == 224 && v6 == 5;
              if (v52 && !(v8 | v7))
              {
                sub_1B299DD80(5);
                uint64_t v18 = 5;
                goto LABEL_367;
              }
            }
          }
          else if (v9 >= 0xE0)
          {
            BOOL v38 = v9 == 224 && v6 == 4;
            if (v38 && !(v8 | v7))
            {
              sub_1B299DD80(4);
              uint64_t v18 = 4;
              goto LABEL_367;
            }
          }
        }
      }
      else
      {
        BOOL v17 = v9 >= 0xE0 && (v8 | v7 | v6) == 0;
        if (v17 && v9 == 224)
        {
          sub_1B299DD80(0);
          uint64_t v18 = 0;
LABEL_367:
          uint64_t v65 = 0;
          uint64_t v66 = 0;
          unsigned __int8 v67 = -32;
          goto LABEL_368;
        }
      }
LABEL_370:
      uint64_t v45 = sub_1B2D2EAD8();
LABEL_371:
      sub_1B2D2BBF0(v45, v46, v47, v48);
      sub_1B2D2E97C();
      goto LABEL_372;
    default:
      if (v9 > 0x1F)
      {
        uint64_t v19 = sub_1B2D2E9F4();
        sub_1B2D2BC18(v19, v20, v21, v22);
        goto LABEL_370;
      }
      if (!*(unsigned char *)(a1 + 24))
      {
        if (*(unsigned char *)(a2 + 24)) {
          goto LABEL_97;
        }
        uint64_t v41 = *(void *)a1;
        if (v2 == v6 && v3 == v7)
        {
          sub_1B299FAC0(v41, v3);
          sub_1B2D2BC44(v2, v3, v8, 0);
        }
        else
        {
          char v43 = sub_1B2E837A8();
          sub_1B299FAC0(v6, v7);
          sub_1B2D2BC44(v6, v7, v8, 0);
          if ((v43 & 1) == 0) {
            goto LABEL_372;
          }
        }
        if (v4 != v8) {
          goto LABEL_372;
        }
LABEL_369:
        char v12 = 1;
        return v12 & 1;
      }
      if (v5 != 1)
      {
        if (v9 != 2 || (v8 | v7 | v6) != 0) {
          goto LABEL_97;
        }
        uint64_t v53 = sub_1B2D2EAEC();
        sub_1B2D2BBF0(v53, v54, v55, v56);
        uint64_t v57 = sub_1B2999D20();
        sub_1B2D2BBF0(v57, v58, v59, v60);
        uint64_t v61 = sub_1B2999D20();
        sub_1B2D2BC44(v61, v62, v63, v64);
        uint64_t v18 = sub_1B2D2EAEC();
LABEL_368:
        sub_1B2D2BC44(v18, v65, v66, v67);
        goto LABEL_369;
      }
      if (v9 != 1)
      {
LABEL_97:
        sub_1B2D2BBF0(*(void *)a2, *(void *)(a2 + 8), v8, v9);
        uint64_t v45 = sub_1B2D2E9F4();
        goto LABEL_371;
      }
      if (v2 == v6 && v3 == v7)
      {
        char v12 = 1;
        sub_1B29A5280(*(void *)a1, v3);
        sub_1B2D2BC44(v2, v3, v8, 1u);
      }
      else
      {
        char v11 = sub_1B2D2EA30();
        char v12 = 1;
        sub_1B29A5280(v6, v7);
        sub_1B2D2BC44(v6, v7, v8, 1u);
        if ((v11 & 1) == 0) {
          goto LABEL_372;
        }
      }
      if (v4 != v8) {
LABEL_372:
      }
        char v12 = 0;
      return v12 & 1;
  }
}

BOOL sub_1B2D2E2E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a4)
  {
    if (a4 != 1) {
      return a8 == 2 && !(a6 | a5 | a7);
    }
    if (a8 != 1) {
      return 0;
    }
  }
  else if (a8)
  {
    return 0;
  }
  if (a1 == a5 && a2 == a6) {
    return a3 == a7;
  }
  char v11 = sub_1B2E837A8();
  BOOL result = 0;
  if (v11) {
    return a3 == a7;
  }
  return result;
}

BOOL sub_1B2D2E38C(uint64_t a1, uint64_t a2)
{
  return sub_1B2D2E2E0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

unint64_t sub_1B2D2E3B0(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v12[2] = v3;
      v12[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v12[0] = a2;
        v12[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v12 + v5) & 0xC0) == 0x80)
        {
          do
            sub_1B2D2EA08();
          while (v9);
          return v8 << 16;
        }
      }
      else
      {
        if ((a2 & 0x1000000000000000) != 0)
        {
          uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v7 = a2 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          unint64_t v11 = result >> 16;
          uint64_t v6 = sub_1B2E83298();
          unint64_t v5 = v11;
        }
        if (v5 != v7 && (*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
        {
          do
            sub_1B2D2EA08();
          while (v9);
          return v8 << 16;
        }
      }
      unint64_t v8 = v5;
      return v8 << 16;
    }
    uint64_t v10 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v10 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v10)
    {
      return MEMORY[0x1F4184CD0]();
    }
  }
  return result;
}

unint64_t sub_1B2D2E4AC(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1B2D2E588(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_1B2E831E8();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
      {
        sub_1B29A0A6C();
        sub_1B2E83298();
      }
      unsigned int v5 = sub_1B2E832A8();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1B2D2E588(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    BOOL result = sub_1B2D2E628(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1B2D2E3B0(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1B2D2E628(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    BOOL result = sub_1B2A7101C(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B2D2E69C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2) {
      return 0;
    }
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  BOOL v5 = __OFADD__(result, a2);
  result += a2;
  if (v5) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1B2D2E6E8(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFBu) {
    return sub_1B2D2BC44(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_1B2D2E6FC(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFBu) {
    return sub_1B2D2BBF0(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_1B2D2E710(uint64_t a1)
{
  return sub_1B2D2BC6C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_1B2D2E724(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B2D2E73C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1B2D2BC18);
}

uint64_t sub_1B2D2E73C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v6, v7, v8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  return a1;
}

uint64_t *sub_1B2D2E7A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B2D2E7D0(a1, a2, a3, (uint64_t)sub_1B2D2BC18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2D2BC6C);
}

uint64_t *sub_1B2D2E7D0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v11 = sub_1B2D2E9C0();
  v12(v11);
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v15 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  uint64_t v16 = *((unsigned __int8 *)a1 + 24);
  *((unsigned char *)a1 + 24) = v10;
  a5(v13, v14, v15, v16);
  return a1;
}

uint64_t *sub_1B2D2E844(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2D2E85C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2D2BC6C);
}

uint64_t *sub_1B2D2E85C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v9 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v6;
  uint64_t v11 = *((unsigned __int8 *)a1 + 24);
  *((unsigned char *)a1 + 24) = v7;
  a4(v8, v10, v9, v11);
  return a1;
}

uint64_t sub_1B2D2E8B4(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2D2E8F4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)BOOL result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B2D2E93C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1B2D2E954(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(void *)BOOL result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

void type metadata accessor for LexerError()
{
}

uint64_t sub_1B2D2E97C()
{
  sub_1B2D2BC44(v2, v3, v1, v7);
  return sub_1B2D2BC44(v4, v5, v0, v6);
}

uint64_t sub_1B2D2E9C0()
{
  return v0;
}

uint64_t sub_1B2D2E9D4()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2D2E9F4()
{
  return v0;
}

uint64_t sub_1B2D2EA30()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2D2EA54@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 56) = a1;
  return sub_1B2E82548();
}

void sub_1B2D2EA6C()
{
  *(void *)(v1 + 40) = v0;
  *(void *)(v1 + 48) = v2;
  JUMPOUT(0x1B3EB0CD0);
}

uint64_t sub_1B2D2EA8C()
{
  return sub_1B2E837E8();
}

uint64_t sub_1B2D2EAAC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D2EAC4()
{
  return v0;
}

uint64_t sub_1B2D2EAD8()
{
  return v0;
}

uint64_t sub_1B2D2EAEC()
{
  return 0;
}

uint64_t sub_1B2D2EB00()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D2EB18()
{
  return sub_1B2D2BBF0(v3, v2, v1, v0);
}

void sub_1B2D2EB38()
{
  sub_1B2A43720();
}

uint64_t sub_1B2D2EB58()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1B2D2EB70(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2EBC8(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9390, (void (*)(uint64_t))type metadata accessor for CustomGraphTransportationActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2EC20(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D90F8, (void (*)(uint64_t))type metadata accessor for CustomGraphWorkingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2EC78(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9060, (void (*)(uint64_t))type metadata accessor for CustomGraphMeetingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2ECD0(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D8FA8, (void (*)(uint64_t))type metadata accessor for CustomGraphEatingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2ED28(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D92B0, (void (*)(uint64_t))type metadata accessor for CustomGraphWatchingTVActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2ED80(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9348, (void (*)(uint64_t))type metadata accessor for CustomGraphCommunicatingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2EDD8(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9160, (void (*)(uint64_t))type metadata accessor for CustomGraphShoppingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2EE30(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D92D8, (void (*)(uint64_t))type metadata accessor for CustomGraphMindfulnessActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2EE88(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9180, (void (*)(uint64_t))type metadata accessor for CustomGraphSleepingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2EEE0(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D91F8, (void (*)(uint64_t))type metadata accessor for CustomGraphTravelingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2EF38(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9090, (void (*)(uint64_t))type metadata accessor for CustomGraphReadingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2EF90(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9328, (void (*)(uint64_t))type metadata accessor for CustomGraphVacationingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2EFE8(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D8FC8, (void (*)(uint64_t))type metadata accessor for CustomGraphGamingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F040(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9300, (void (*)(uint64_t))type metadata accessor for CustomGraphSocializingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F098(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D91A8, (void (*)(uint64_t))type metadata accessor for CustomGraphWakingUpActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F0F0(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9240, (void (*)(uint64_t))type metadata accessor for CustomGraphGoingToBedActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F148(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9218, (void (*)(uint64_t))type metadata accessor for CustomGraphExercisingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F1A0(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9010, (void (*)(uint64_t))type metadata accessor for CustomGraphCommuteActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F1F8(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D8F80, (void (*)(uint64_t))type metadata accessor for CustomGraphDiningActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F250(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D93B0, (void (*)(uint64_t))type metadata accessor for CustomGraphAttendingAPerformanceActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F2A8(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9288, (void (*)(uint64_t))type metadata accessor for CustomGraphStationaryActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F300(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9368, (void (*)(uint64_t))type metadata accessor for CustomGraphLocationVisitActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F358(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D90D8, (void (*)(uint64_t))type metadata accessor for CustomGraphWalkingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F3B0(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D90B0, (void (*)(uint64_t))type metadata accessor for CustomGraphRunningActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F408(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D91D8, (void (*)(uint64_t))type metadata accessor for CustomGraphBicyclingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F460(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D8FF0, (void (*)(uint64_t))type metadata accessor for CustomGraphHikingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F4B8(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9268, (void (*)(uint64_t))type metadata accessor for CustomGraphOnThePhoneActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F510(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9140, (void (*)(uint64_t))type metadata accessor for CustomGraphFacetimeActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F568(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9038, (void (*)(uint64_t))type metadata accessor for CustomGraphDrivingActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F5C0(uint64_t a1)
{
  uint64_t result = sub_1B2D2F618(&qword_1EB7D9120, (void (*)(uint64_t))type metadata accessor for CustomGraphBehaviorActivityEvent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D2F618(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CustomLifeEventContext.__allocating_init<>()()
{
  type metadata accessor for ViewService();
  uint64_t v0 = (void *)static ViewService.clientService.getter();
  uint64_t v1 = sub_1B299D354();
  CustomLifeEventContext.init<>(viewService:)(v0);
  return v1;
}

uint64_t CustomLifeEventContext.earliestActivityEvent()()
{
  return sub_1B2D2F718((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B2B2BD90);
}

uint64_t CustomLifeEventContext.latestActivityEvent()()
{
  return sub_1B2D2F718((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B2B2BD64);
}

uint64_t sub_1B2D2F718(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = sub_1B2D319E0();
  uint64_t v3 = sub_1B2D3179C(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  return a1(v2, v2, v3);
}

uint64_t CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:using:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2D30B54(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2BB28);
}

{
  return sub_1B2D30B54(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2BAF4);
}

{
  return sub_1B2D30B54(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2BB5C);
}

{
  return sub_1B2D30B54(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2BB90);
}

{
  return sub_1B2D30B54(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2BBC4);
}

uint64_t CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:using:)(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B2D304EC(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B8F8);
}

{
  return sub_1B2D304EC(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B8C0);
}

{
  return sub_1B2D304EC(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B930);
}

{
  return sub_1B2D304EC(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B968);
}

{
  return sub_1B2D304EC(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B9A0);
}

void CustomLifeEventContext.enumerateActivityEvents<>(order:using:)()
{
}

uint64_t CustomLifeEventContext.entryView.getter()
{
  return swift_retain();
}

uint64_t CustomLifeEventContext.__allocating_init<>(viewService:)(void *a1)
{
  uint64_t v2 = sub_1B299D354();
  CustomLifeEventContext.init<>(viewService:)(a1);
  return v2;
}

uint64_t CustomLifeEventContext.__allocating_init(context:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 80);
  sub_1B299D31C();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1B29A042C();
  v8(v7);
  type metadata accessor for ViewService();
  static ViewService.clientService.getter();
  uint64_t v9 = CustomLifeEventContext.__allocating_init(context:viewService:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  return v9;
}

uint64_t CustomLifeEventContext.__allocating_init(context:viewService:)()
{
  uint64_t v0 = sub_1B299D354();
  uint64_t v1 = sub_1B29A4150();
  CustomLifeEventContext.init(context:viewService:)(v1, v2);
  return v0;
}

uint64_t CustomLifeEventContext.init(context:viewService:)(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  sub_1B299D31C();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1B29A042C();
  v10(v9);
  type metadata accessor for LifeEventView();
  sub_1B299D354();
  LifeEventView.init(viewService:)(a2);
  if (v3)
  {
    uint64_t v11 = *(void (**)(void))(v7 + 8);
    sub_1B299F2B0();
    v11();
    sub_1B299F2B0();
    v11();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1B2D3179C(&qword_1E9C42C50, (void (*)(uint64_t))type metadata accessor for LifeEventView);
    type metadata accessor for EventBaseContext();
    sub_1B299F2B0();
    v16(v12, v13, v14, v15);
    *(void *)(v4 + 16) = sub_1B2B2AE48();
  }
  return v4;
}

uint64_t CustomLifeEventContext.init<>(viewService:)(void *a1)
{
  uint64_t v3 = v1;
  type metadata accessor for LifeEventView();
  sub_1B299D354();
  id v5 = a1;
  uint64_t v6 = LifeEventView.init(viewService:)(v5);
  if (v2)
  {

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v6;
    ViewService.subgraphView(name:tableName:batchSize:)(0xD000000000000011, 0x80000001B2EA1410, 0xD000000000000012, 0x80000001B2EA1430, 10);
    sub_1B29A3EB4(&qword_1EB7E2560);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    uint64_t v10 = sub_1B29C83C8(v9);
    swift_release();

    sub_1B29A3EB4(&qword_1E9C38560);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v7;
    *(void *)(v11 + 24) = v10;
    *(void *)(v3 + 16) = v11;
  }
  return v3;
}

void CustomLifeEventContext.activityEvents(order:)()
{
}

void CustomLifeEventContext.activityEvents<A>(of:order:)()
{
}

uint64_t CustomLifeEventContext.activityEvents(whose:in:order:)(char *a1, uint64_t a2, char a3)
{
  return sub_1B2D2FECC(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2AFC8);
}

{
  return sub_1B2D2FECC(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2AFF4);
}

{
  return sub_1B2D2FECC(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B020);
}

{
  return sub_1B2D2FECC(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B04C);
}

{
  return sub_1B2D2FECC(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B078);
}

uint64_t CustomLifeEventContext.activityEvents<A>(of:whose:in:order:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_1B2D300BC(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, void))sub_1B2B2AFC8);
}

{
  return sub_1B2D300BC(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, void))sub_1B2B2AFF4);
}

{
  return sub_1B2D300BC(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, void))sub_1B2B2B020);
}

{
  return sub_1B2D300BC(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, void))sub_1B2B2B04C);
}

{
  return sub_1B2D300BC(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, void))sub_1B2B2B078);
}

uint64_t sub_1B2D2FECC(char *a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = a3 & 1;
  char v7 = *a1;
  uint64_t v8 = sub_1B2D319E0();
  char v11 = v7;
  uint64_t v9 = sub_1B2D3179C(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  return a4(v8, &v11, a2, v6, v8, v9);
}

uint64_t sub_1B2D300BC(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, char *, uint64_t, void, uint64_t, void))
{
  char v8 = *a2;
  return a7(a1, &v8, a3, a4 & 1, a5, *(void *)(a6 + 8));
}

uint64_t CustomLifeEventContext.activityEvents(overlapping:order:)(uint64_t a1, char a2)
{
  return sub_1B2D3017C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B1BC);
}

{
  return sub_1B2D3017C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B1E8);
}

{
  return sub_1B2D3017C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B214);
}

{
  return sub_1B2D3017C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B240);
}

{
  return sub_1B2D3017C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2B26C);
}

uint64_t CustomLifeEventContext.activityEvents<A>(of:overlapping:order:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2D30358(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, void))sub_1B2B2B1BC);
}

{
  return sub_1B2D30358(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, void))sub_1B2B2B1E8);
}

{
  return sub_1B2D30358(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, void))sub_1B2B2B214);
}

{
  return sub_1B2D30358(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, void))sub_1B2B2B240);
}

{
  return sub_1B2D30358(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, void))sub_1B2B2B26C);
}

uint64_t sub_1B2D3017C(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = a2 & 1;
  uint64_t v6 = sub_1B2D319E0();
  uint64_t v7 = sub_1B2D3179C(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  return a3(v6, a1, v5, v6, v7);
}

uint64_t sub_1B2D30358(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, void, uint64_t, void))
{
  return a6(a1, a2, a3 & 1, a4, *(void *)(a5 + 8));
}

uint64_t CustomLifeEventContext.deinit()
{
  swift_release();
  return v0;
}

uint64_t CustomLifeEventContext.__deallocating_deinit()
{
  CustomLifeEventContext.deinit();

  return swift_deallocClassInstance();
}

void CustomLifeEventContext.enumerateActivityEvents<>(order:block:)()
{
}

void CustomLifeEventContext.enumerateActivityEvents<A>(of:order:using:)()
{
}

void CustomLifeEventContext.enumerateActivityEvents<A>(of:order:block:)()
{
}

uint64_t sub_1B2D304EC(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v11 = *a1;
  uint64_t v12 = a3 & 1;
  uint64_t v13 = type metadata accessor for CustomGraphActivityEvent(0);
  char v17 = v11;
  uint64_t v14 = sub_1B2D3179C(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  return a7(v13, &v17, a2, v12, a4, a5, v13, v14, a6);
}

uint64_t CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:block:)(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B2D30A18(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1B2D319C4, (uint64_t (*)(char *, uint64_t, void, uint64_t, void *))CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:using:));
}

{
  return sub_1B2D30A18(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1B2D319C4, (uint64_t (*)(char *, uint64_t, void, uint64_t, void *))CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:using:));
}

{
  return sub_1B2D30A18(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1B2D319C4, (uint64_t (*)(char *, uint64_t, void, uint64_t, void *))CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:using:));
}

{
  return sub_1B2D30A18(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1B2D319C4, (uint64_t (*)(char *, uint64_t, void, uint64_t, void *))CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:using:));
}

{
  return sub_1B2D30A18(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1B2D319C4, (uint64_t (*)(char *, uint64_t, void, uint64_t, void *))CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:using:));
}

uint64_t CustomLifeEventContext.enumerateActivityEvents<A>(of:whose:in:order:using:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1B2D30A90(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, void, uint64_t))sub_1B2B2B8C0);
}

{
  return sub_1B2D30A90(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, void, uint64_t))sub_1B2B2B8F8);
}

{
  return sub_1B2D30A90(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, void, uint64_t))sub_1B2B2B930);
}

{
  return sub_1B2D30A90(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, void, uint64_t))sub_1B2B2B968);
}

{
  return sub_1B2D30A90(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, void, uint64_t))sub_1B2B2B9A0);
}

uint64_t CustomLifeEventContext.enumerateActivityEvents<A>(of:whose:in:order:block:)()
{
  return sub_1B2D30750();
}

{
  return sub_1B2D30750();
}

{
  return sub_1B2D30750();
}

{
  return sub_1B2D30750();
}

{
  return sub_1B2D30750();
}

uint64_t sub_1B2D30750()
{
  sub_1B2D319F8();
  sub_1B2D319F8();
  return v1(v0);
}

uint64_t sub_1B2D30A18(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(char *, uint64_t, void, uint64_t, void *))
{
  char v10 = *a1;
  v9[2] = a4;
  v9[3] = a5;
  return a8(&v10, a2, a3 & 1, a7, v9);
}

uint64_t sub_1B2D30A90(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, void, uint64_t))
{
  char v11 = *a2;
  return a10(a1, &v11, a3, a4 & 1, a5, a6, a7, *(void *)(a8 + 8), a9);
}

uint64_t sub_1B2D30B54(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = a2 & 1;
  uint64_t v12 = type metadata accessor for CustomGraphActivityEvent(0);
  uint64_t v13 = sub_1B2D3179C(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  return a6(v12, a1, v11, a3, a4, v12, v13, a5);
}

uint64_t CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:block:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2D31038(a1, a2, a3, a4, a5, (uint64_t)sub_1B2D319C4, (uint64_t (*)(uint64_t, void, uint64_t, void *))CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:using:));
}

{
  return sub_1B2D31038(a1, a2, a3, a4, a5, (uint64_t)sub_1B2D313E8, (uint64_t (*)(uint64_t, void, uint64_t, void *))CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:using:));
}

{
  return sub_1B2D31038(a1, a2, a3, a4, a5, (uint64_t)sub_1B2D319C4, (uint64_t (*)(uint64_t, void, uint64_t, void *))CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:using:));
}

{
  return sub_1B2D31038(a1, a2, a3, a4, a5, (uint64_t)sub_1B2D319C4, (uint64_t (*)(uint64_t, void, uint64_t, void *))CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:using:));
}

{
  return sub_1B2D31038(a1, a2, a3, a4, a5, (uint64_t)sub_1B2D319C4, (uint64_t (*)(uint64_t, void, uint64_t, void *))CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:using:));
}

uint64_t CustomLifeEventContext.enumerateActivityEvents<A>(of:overlapping:order:using:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B2D3118C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2BAF4);
}

{
  return sub_1B2D3118C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2BB28);
}

{
  return sub_1B2D3118C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2BB5C);
}

{
  return sub_1B2D3118C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2BB90);
}

{
  return sub_1B2D3118C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2BBC4);
}

uint64_t CustomLifeEventContext.enumerateActivityEvents<A>(of:overlapping:order:block:)()
{
  return sub_1B2D30D94();
}

{
  return sub_1B2D30D94();
}

{
  return sub_1B2D30D94();
}

{
  return sub_1B2D30D94();
}

{
  return sub_1B2D30D94();
}

uint64_t sub_1B2D30D94()
{
  sub_1B2D319F8();
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v10 = v1;
  sub_1B2D319F8();
  uint64_t v11 = *(void *)(v2 + 88);
  uint64_t v12 = v3;
  uint64_t v13 = v5;
  uint64_t v14 = v4;
  uint64_t v15 = v6;
  return v7();
}

uint64_t sub_1B2D31038(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, void, uint64_t, void *))
{
  v8[2] = a3;
  v8[3] = a4;
  return a7(a1, a2 & 1, a6, v8);
}

uint64_t sub_1B2D3106C(uint64_t a1, BOOL *a2, uint64_t (*a3)(char *))
{
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C3E850);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2B52720(a1, (uint64_t)v9);
  swift_storeEnumTagMultiPayload();
  char v10 = a3(v9);
  uint64_t result = sub_1B2B52784((uint64_t)v9);
  if (!v3) {
    *a2 = (v10 & 1) == 0;
  }
  return result;
}

uint64_t sub_1B2D3118C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))
{
  return a9(a1, a2, a3 & 1, a4, a5, a6, *(void *)(a7 + 8));
}

uint64_t sub_1B2D31208(uint64_t a1, BOOL *a2, uint64_t (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1B29C3588((uint64_t *)&unk_1EB7E3A10);
  sub_1B2E83A08();
  sub_1B299D31C();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v21 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))((char *)v21 - v12, a1, a6);
  sub_1B29A042C();
  swift_storeEnumTagMultiPayload();
  char v14 = a3(v13);
  if (v6)
  {
    uint64_t v15 = sub_1B299B8A4();
    return v16(v15);
  }
  else
  {
    char v18 = v14;
    uint64_t v19 = sub_1B299B8A4();
    uint64_t result = v20(v19);
    *a2 = (v18 & 1) == 0;
  }
  return result;
}

void CustomLifeEventContext.latestActivityEvent<A>(of:)()
{
}

void CustomLifeEventContext.earliestActivityEvent<A>(of:)()
{
}

uint64_t sub_1B2D3139C(uint64_t a1, BOOL *a2)
{
  return sub_1B2D313B4(a1, a2);
}

uint64_t sub_1B2D313B4(uint64_t a1, BOOL *a2)
{
  return sub_1B2D31208(a1, a2, *(uint64_t (**)(char *))(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1B2D313E8(uint64_t a1, BOOL *a2)
{
  return sub_1B2D3106C(a1, a2, *(uint64_t (**)(char *))(v2 + 16));
}

uint64_t sub_1B2D31404()
{
  return sub_1B2D3179C(&qword_1E9C42C50, (void (*)(uint64_t))type metadata accessor for LifeEventView);
}

uint64_t sub_1B2D3144C(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1B2D314C8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for CustomLifeEventContext()
{
  return sub_1B29A1278();
}

uint64_t method lookup function for CustomLifeEventContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CustomLifeEventContext);
}

uint64_t dispatch thunk of CustomLifeEventContext.__allocating_init(context:viewService:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of CustomLifeEventContext.__allocating_init<>(viewService:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1B2D31584()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2D3179C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2D317E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2D319C4(uint64_t a1, BOOL *a2)
{
  return sub_1B2D313E8(a1, a2);
}

uint64_t sub_1B2D319E0()
{
  return type metadata accessor for CustomGraphActivityEvent(0);
}

uint64_t LifeEventEntry.startDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  sub_1B2E80668();
  sub_1B2999864();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);

  return v7(a2, v4, v5);
}

uint64_t LifeEventEntry.endDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  sub_1B2E80668();
  sub_1B2999864();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);

  return v7(a2, v4, v5);
}

void LifeEventEntry.entityClass.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  EntityClass.init(intValue:)(*(unsigned char *)(v2 + 7), (uint64_t)&v13);
  uint64_t v5 = v14;
  if (v14)
  {
    char v6 = v17;
    uint64_t v8 = v15;
    uint64_t v7 = v16;
    *(void *)a2 = v13;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v8;
    *(void *)(a2 + 24) = v7;
    *(unsigned char *)(a2 + 32) = v6;
  }
  else
  {
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1B2E81FB8();
    sub_1B29A4B98(v9, (uint64_t)qword_1EB7E5AC0);
    char v10 = sub_1B2E81F98();
    os_log_type_t v11 = sub_1B2E82DC8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1B2996000, v10, v11, "LifeEventEntry: entityClass: id.untyped.entityClass is nil.", v12, 2u);
      MEMORY[0x1B3EB30C0](v12, -1, -1);
    }

    static GraphObjectBase.entityClass.getter(*(void *)(a1 + 16), *(void *)(*(void *)(a1 + 24) + 8));
  }
}

uint64_t LifeEventEntry.cast<A>(as:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, void *a4@<X8>)
{
  v20[0] = a4;
  uint64_t v8 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v10 = v9;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v20 - v15;
  uint64_t v21 = *(void *)v4;
  type metadata accessor for TypedEntityIdentifier();
  v20[1] = a3;
  char v17 = v20[2];
  uint64_t result = TypedEntityIdentifier.cast<A>(as:)(a2, (uint64_t)a3, &v22);
  if (!v17)
  {
    uint64_t v21 = v22;
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v19(v16, &v4[*(int *)(a1 + 36)], v8);
    v19(v14, &v4[*(int *)(a1 + 40)], v8);
    return sub_1B2D31D78(&v21, (uint64_t)v16, (uint64_t)v14, v20[0]);
  }
  return result;
}

uint64_t sub_1B2D31D78@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = *a1;
  uint64_t v7 = type metadata accessor for LifeEventEntry();
  uint64_t v8 = (char *)a4 + *(int *)(v7 + 36);
  uint64_t v9 = sub_1B2E80668();
  sub_1B2999864();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
  v13(v8, a2, v9);
  uint64_t v11 = (char *)a4 + *(int *)(v7 + 40);

  return ((uint64_t (*)(char *, uint64_t, uint64_t))v13)(v11, a3, v9);
}

uint64_t sub_1B2D31E48(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2D31E9C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t static LifeEventEntry.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = v2;
  if (!static TypedEntityIdentifier.== infix(_:_:)(&v5, &v4)) {
    return 0;
  }
  type metadata accessor for LifeEventEntry();
  if ((sub_1B2E80608() & 1) == 0) {
    return 0;
  }

  return sub_1B2E80608();
}

uint64_t LifeEventEntry.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  v13[1] = a2;
  v13[2] = v3;
  type metadata accessor for LifeEventEntry.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1B2E83718();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v13 - v8;
  sub_1B29AEC7C(a1, a1[3]);
  uint64_t v10 = (uint64_t *)v13[3];
  sub_1B2E83A38();
  uint64_t v17 = *v10;
  char v16 = 0;
  type metadata accessor for TypedEntityIdentifier();
  swift_getWitnessTable();
  uint64_t v11 = v13[4];
  sub_1B2E836D8();
  if (!v11)
  {
    char v15 = 1;
    sub_1B2E80668();
    sub_1B29CA49C((unint64_t *)&qword_1EB7D87B0);
    sub_1B2B5459C();
    char v14 = 2;
    sub_1B2B5459C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t LifeEventEntry.init(from:)@<X0>(void *a1@<X0>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v37 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v33 = v5;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  char v34 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v36 = (void (*)(void))((char *)&v29 - v9);
  type metadata accessor for LifeEventEntry.CodingKeys();
  swift_getWitnessTable();
  uint64_t v40 = sub_1B2E83608();
  sub_1B299D278();
  uint64_t v35 = v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v29 - v12;
  BOOL v38 = a2;
  uint64_t v14 = type metadata accessor for LifeEventEntry();
  sub_1B299D278();
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v16);
  char v18 = (uint64_t *)((char *)&v29 - v17);
  sub_1B29AEC7C(a1, a1[3]);
  BOOL v39 = v13;
  uint64_t v19 = (uint64_t)v41;
  sub_1B2E83A18();
  if (v19) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  uint64_t v30 = v14;
  uint64_t v41 = a1;
  uint64_t v20 = v37;
  type metadata accessor for TypedEntityIdentifier();
  char v44 = 0;
  swift_getWitnessTable();
  sub_1B2E835B8();
  uint64_t v21 = v18;
  *char v18 = v45;
  char v43 = 1;
  sub_1B29CA49C((unint64_t *)&unk_1EB7E3BC0);
  sub_1B2E835B8();
  uint64_t v22 = *(void (**)(void))(v33 + 32);
  BOOL v38 = (char *)v18 + *(int *)(v30 + 36);
  char v36 = v22;
  v22();
  char v42 = 2;
  uint64_t v23 = v34;
  sub_1B2E835B8();
  uint64_t v24 = sub_1B29A1C24();
  v25(v24);
  uint64_t v26 = v30;
  ((void (*)(char *, char *, uint64_t))v36)((char *)v21 + *(int *)(v30 + 40), v23, v20);
  uint64_t v27 = v31;
  (*(void (**)(uint64_t, void *, uint64_t))(v31 + 16))(v32, v21, v26);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v41);
  return (*(uint64_t (**)(void *, uint64_t))(v27 + 8))(v21, v26);
}

uint64_t sub_1B2D32598@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = *a1;
  return sub_1B2D31D78(&v5, a2, a3, a4);
}

uint64_t sub_1B2D325CC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return LifeEventEntry.init(from:)(a1, *(char **)(a2 + 24), a3);
}

uint64_t sub_1B2D325EC(void *a1, uint64_t a2)
{
  return LifeEventEntry.encode(to:)(a1, a2);
}

uint64_t sub_1B2D32604(uint64_t *a1, uint64_t *a2)
{
  return static LifeEventEntry.== infix(_:_:)(a1, a2);
}

uint64_t sub_1B2D32610(void *a1)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C42D78);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *v1;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D32EE8();
  sub_1B2E83A38();
  uint64_t v13 = v10;
  v12[15] = 0;
  sub_1B29CB42C();
  sub_1B2E836D8();
  if (!v2)
  {
    v12[14] = 1;
    sub_1B2E836A8();
    v12[13] = 2;
    sub_1B2E836A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t sub_1B2D32798@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C42D68);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D32EE8();
  sub_1B2E83A18();
  if (!v2)
  {
    sub_1B29CB3E0();
    sub_1B2E835B8();
    sub_1B2E83588();
    uint64_t v8 = v7;
    sub_1B2E83588();
    uint64_t v10 = v9;
    uint64_t v11 = sub_1B2A4A794();
    v12(v11);
    *a2 = v13;
    a2[1] = v8;
    a2[2] = v10;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
}

uint64_t sub_1B2D32944(uint64_t a1)
{
  unint64_t v2 = sub_1B2D32EE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D32980(uint64_t a1)
{
  unint64_t v2 = sub_1B2D32EE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2D329BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B2D32798(a1, a2);
}

uint64_t sub_1B2D329D4(void *a1)
{
  return sub_1B2D32610(a1);
}

uint64_t sub_1B2D329EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2D32DA4();

  return MEMORY[0x1F411AC60](a1, a2, a3, v6);
}

uint64_t sub_1B2D32A50()
{
  return 0x6E6576456566696CLL;
}

uint64_t type metadata accessor for LifeEventEntry()
{
  return sub_1B29A1278();
}

uint64_t type metadata accessor for LifeEventEntry.CodingKeys()
{
  return sub_1B29A1278();
}

unint64_t sub_1B2D32AA8()
{
  unint64_t result = qword_1E9C42C58;
  if (!qword_1E9C42C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42C58);
  }
  return result;
}

uint64_t sub_1B2D32AF4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2D32B34()
{
  unint64_t result = qword_1E9C42C60[0];
  if (!qword_1E9C42C60[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C42C60);
  }
  return result;
}

uint64_t sub_1B2D32B80(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_1B2D32C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2D32C14);
}

uint64_t sub_1B2D32C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B2E80668();
  uint64_t v7 = a1 + *(int *)(a3 + 36);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v7, a2, v6);
}

uint64_t sub_1B2D32C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2D32C80);
}

uint64_t sub_1B2D32C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1B2E80668();
  uint64_t v8 = a1 + *(int *)(a4 + 36);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v8, a2, a2, v7);
}

ValueMetadata *type metadata accessor for LifeEventEntryRecord()
{
  return &type metadata for LifeEventEntryRecord;
}

uint64_t sub_1B2D32CF0()
{
  return swift_getWitnessTable();
}

unint64_t sub_1B2D32D10()
{
  unint64_t result = qword_1E9C38588;
  if (!qword_1E9C38588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38588);
  }
  return result;
}

unint64_t sub_1B2D32D5C(void *a1)
{
  a1[1] = sub_1B29D1E5C();
  a1[2] = sub_1B29D1CD4();
  a1[3] = sub_1B2D32DA4();
  a1[4] = sub_1B2D32DF0();
  unint64_t result = sub_1B2D32E3C();
  a1[5] = result;
  return result;
}

unint64_t sub_1B2D32DA4()
{
  unint64_t result = qword_1E9C38590;
  if (!qword_1E9C38590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38590);
  }
  return result;
}

unint64_t sub_1B2D32DF0()
{
  unint64_t result = qword_1E9C38578;
  if (!qword_1E9C38578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38578);
  }
  return result;
}

unint64_t sub_1B2D32E3C()
{
  unint64_t result = qword_1E9C38580;
  if (!qword_1E9C38580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38580);
  }
  return result;
}

unint64_t sub_1B2D32E88(uint64_t a1)
{
  unint64_t result = sub_1B2D32B34();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B2D32EB0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2D32ECC()
{
  return swift_getWitnessTable();
}

unint64_t sub_1B2D32EE8()
{
  unint64_t result = qword_1E9C42D70;
  if (!qword_1E9C42D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42D70);
  }
  return result;
}

unsigned char *_s20IntelligencePlatform20LifeEventEntryRecordV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D33000);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LifeEventEntryRecord.CodingKeys()
{
  return &type metadata for LifeEventEntryRecord.CodingKeys;
}

unint64_t sub_1B2D3303C()
{
  unint64_t result = qword_1E9C42D80;
  if (!qword_1E9C42D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42D80);
  }
  return result;
}

unint64_t sub_1B2D3308C()
{
  unint64_t result = qword_1E9C42D88;
  if (!qword_1E9C42D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42D88);
  }
  return result;
}

unint64_t sub_1B2D330DC()
{
  unint64_t result = qword_1E9C42D90;
  if (!qword_1E9C42D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42D90);
  }
  return result;
}

uint64_t LifeEventEntryView.earliestActivityEventEntry<A>(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2D33180(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B2B2E4C4);
}

uint64_t LifeEventEntryView.latestActivityEventEntry<A>(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2D33180(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B2B2E4A0);
}

uint64_t sub_1B2D33180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = type metadata accessor for LifeEventEntry();
  uint64_t WitnessTable = swift_getWitnessTable();
  return a4(v5, v5, WitnessTable);
}

uint64_t LifeEventEntryView.enumerateActivityEventEntries<A>(of:overlapping:order:using:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B2D33DA8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2E2E8);
}

{
  return sub_1B2D33DA8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2E2AC);
}

{
  return sub_1B2D33DA8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2E3A4);
}

{
  return sub_1B2D33DA8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2E3F4);
}

{
  return sub_1B2D33DA8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2E474);
}

uint64_t LifeEventEntryView.enumerateActivityEventEntries<A>(of:whose:in:order:using:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B2D33B88(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2DE0C);
}

{
  return sub_1B2D33B88(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2DDC4);
}

{
  return sub_1B2D33B88(a1, a2, a3, a4, a5, a6, a7, a8, sub_1B2B2E02C);
}

{
  return sub_1B2D33B88(a1, a2, a3, a4, a5, a6, a7, a8, sub_1B2B2E060);
}

{
  return sub_1B2D33B88(a1, a2, a3, a4, a5, a6, a7, a8, sub_1B2B2E278);
}

uint64_t LifeEventEntryView.enumerateActivityEventEntries<A>(of:order:using:)()
{
  return sub_1B2B2DD78();
}

uint64_t ViewService.lifeEventEntryView()()
{
  type metadata accessor for LifeEventEntryView();
  uint64_t v1 = swift_allocObject();
  LifeEventEntryView.init(viewService:)(v0);
  return v1;
}

uint64_t LifeEventEntryView.__allocating_init(viewService:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  LifeEventEntryView.init(viewService:)(a1);
  return v2;
}

uint64_t type metadata accessor for LifeEventEntryView()
{
  return self;
}

uint64_t LifeEventEntryView.init(viewService:)(void *a1)
{
  unsigned int v4 = sub_1B29CB818(0x6E6576456566696CLL, 0xEC00000070614D74);

  if (v2) {
    swift_deallocPartialClassInstance();
  }
  else {
    *(void *)(v1 + 16) = v4;
  }
  return v1;
}

uint64_t LifeEventEntryView.activityEventEntries(order:)(char a1)
{
  return sub_1B29CBAAC();
}

uint64_t LifeEventEntryView.activityEventEntries<A>(of:order:)()
{
  return sub_1B2B2D6A4();
}

uint64_t LifeEventEntryView.activityEventEntries(whose:in:order:)(unsigned __int8 *a1, uint64_t a2, char a3)
{
  return sub_1B2D33698(a1, a2, a3, (uint64_t (*)(void, uint64_t, void))sub_1B29CBB88);
}

{
  return sub_1B2D33698(a1, a2, a3, (uint64_t (*)(void, uint64_t, void))sub_1B29CBDB0);
}

{
  return sub_1B2D33698(a1, a2, a3, (uint64_t (*)(void, uint64_t, void))sub_1B29CC008);
}

{
  return sub_1B2D33698(a1, a2, a3, (uint64_t (*)(void, uint64_t, void))sub_1B29CC060);
}

{
  return sub_1B2D33698(a1, a2, a3, (uint64_t (*)(void, uint64_t, void))sub_1B29CC220);
}

uint64_t LifeEventEntryView.activityEventEntries<A>(of:whose:in:order:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_1B2D336F4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2D6E8);
}

{
  return sub_1B2D336F4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2D72C);
}

{
  return sub_1B2D336F4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2D94C);
}

{
  return sub_1B2D336F4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2D978);
}

{
  return sub_1B2D336F4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2DB4C);
}

uint64_t sub_1B2D33698(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t (*a4)(void, uint64_t, void))
{
  return a4(*a1, a2, a3 & 1);
}

uint64_t sub_1B2D336F4(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v9 = *a2;
  uint64_t v10 = a4 & 1;
  uint64_t v11 = type metadata accessor for LifeEventEntry();
  char v14 = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  return a7(v11, &v14, a3, v10, v11, WitnessTable);
}

uint64_t LifeEventEntryView.activityEventEntries(overlapping:order:)()
{
  return sub_1B29CC424();
}

{
  sub_1B299D394();
  return sub_1B29CC488();
}

{
  sub_1B299D394();
  return sub_1B29CC4EC();
}

{
  sub_1B299D394();
  return sub_1B29CC550();
}

{
  sub_1B299D394();
  return sub_1B29CC608();
}

uint64_t LifeEventEntryView.activityEventEntries<A>(of:overlapping:order:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2D33928(a1, a2, a3, a4, a5, sub_1B2B2DB78);
}

{
  return sub_1B2D33928(a1, a2, a3, a4, a5, sub_1B2B2DBAC);
}

{
  return sub_1B2D33928(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B2DC44);
}

{
  return sub_1B2D33928(a1, a2, a3, a4, a5, sub_1B2B2DCC0);
}

{
  return sub_1B2D33928(a1, a2, a3, a4, a5, sub_1B2B2DD4C);
}

uint64_t sub_1B2D33928(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a3 & 1;
  uint64_t v9 = type metadata accessor for LifeEventEntry();
  uint64_t WitnessTable = swift_getWitnessTable();
  return a6(v9, a2, v8, v9, WitnessTable);
}

uint64_t LifeEventEntryView.enumerateActivityEventEntries(order:using:)(char a1)
{
  return sub_1B29CC79C();
}

uint64_t LifeEventEntryView.enumerateActivityEventEntries(whose:in:order:using:)(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2D345A4(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, void))sub_1B29CC804);
}

{
  return sub_1B2D345A4(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, void))sub_1B29CCB00);
}

{
  return sub_1B2D345A4(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, void))sub_1B29CCB84);
}

{
  return sub_1B2D345A4(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, void))sub_1B29CCD98);
}

{
  return sub_1B2D345A4(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, void))sub_1B29CCE3C);
}

uint64_t sub_1B2D33B88(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v12 = *a2;
  uint64_t v13 = a4 & 1;
  uint64_t v14 = type metadata accessor for LifeEventEntry();
  char v17 = v12;
  uint64_t WitnessTable = swift_getWitnessTable();
  return a9(v14, &v17, a3, v13, a5, a6, v14, WitnessTable);
}

uint64_t LifeEventEntryView.enumerateActivityEventEntries(overlapping:order:using:)()
{
  return sub_1B29CCEC8();
}

{
  sub_1B299D394();
  return sub_1B29CD02C();
}

{
  sub_1B299D394();
  return sub_1B29CD0B8();
}

{
  sub_1B299D394();
  return sub_1B29CD144();
}

{
  sub_1B299D394();
  return sub_1B29CD1D0();
}

uint64_t sub_1B2D33DA8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = a3 & 1;
  uint64_t v13 = type metadata accessor for LifeEventEntry();
  uint64_t WitnessTable = swift_getWitnessTable();
  return a8(v13, a2, v12, a4, a5, v13, WitnessTable);
}

uint64_t LifeEventEntryView.latestActivityEventEntry()@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D05EC(a1);
}

uint64_t LifeEventEntryView.earliestActivityEventEntry()@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D05EC(a1);
}

uint64_t LifeEventEntryView.activityEventIds(order:)(char a1)
{
  sub_1B299D3A0(a1);
  uint64_t result = sub_1B29D0FA8();
  if (!v1)
  {
    sub_1B29D15B4(result);
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

uint64_t LifeEventEntryView.activityEventIds<A>(of:order:)()
{
  sub_1B299D394();
  return sub_1B2B2E4E8(v1, v2, v3, *(void *)(v0 + 8));
}

uint64_t LifeEventEntryView.activityEventIds(whose:in:order:)(unsigned __int8 *a1, uint64_t a2, char a3)
{
  return sub_1B2D340A8(a1, a2, a3, sub_1B29D0928);
}

{
  return sub_1B2D340A8(a1, a2, a3, sub_1B29D0A78);
}

{
  return sub_1B2D340A8(a1, a2, a3, sub_1B29D0C58);
}

{
  return sub_1B2D340A8(a1, a2, a3, sub_1B29D0C98);
}

{
  return sub_1B2D340A8(a1, a2, a3, sub_1B29D0CD8);
}

uint64_t LifeEventEntryView.activityEventIds<A>(of:whose:in:order:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_1B2D34130(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, void))sub_1B2B2E540);
}

{
  return sub_1B2D34130(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, void))sub_1B2B2E584);
}

{
  return sub_1B2D34130(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, void))sub_1B2B2E620);
}

{
  return sub_1B2D34130(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, void))sub_1B2B2E64C);
}

{
  return sub_1B2D34130(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, void))sub_1B2B2E678);
}

uint64_t sub_1B2D340A8(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t (*a4)(void, uint64_t, void))
{
  uint64_t result = a4(*a1, a2, a3 & 1);
  if (!v4)
  {
    sub_1B29D15B4(result);
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1B2D34130(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, char *, uint64_t, void, uint64_t, void))
{
  char v8 = *a2;
  return a7(a1, &v8, a3, a4 & 1, a5, *(void *)(a6 + 8));
}

uint64_t LifeEventEntryView.activityEventIds(overlapping:order:)()
{
  return sub_1B2D342F8();
}

{
  return sub_1B2D342F8();
}

{
  return sub_1B2D342F8();
}

{
  return sub_1B2D342F8();
}

{
  return sub_1B2D342F8();
}

uint64_t LifeEventEntryView.activityEventIds<A>(of:overlapping:order:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2D34378(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, void))sub_1B2B2E6F4);
}

{
  return sub_1B2D34378(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, void))sub_1B2B2E728);
}

{
  return sub_1B2D34378(a1, a2, a3, a4, a5, sub_1B2B2E7AC);
}

{
  return sub_1B2D34378(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, void))sub_1B2B2E80C);
}

{
  return sub_1B2D34378(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, void))sub_1B2B2E838);
}

uint64_t sub_1B2D342F8()
{
  sub_1B299D394();
  uint64_t result = v1();
  if (!v0)
  {
    sub_1B29D15B4(result);
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

uint64_t sub_1B2D34378(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, void, uint64_t, void))
{
  return a6(a1, a2, a3 & 1, a4, *(void *)(a5 + 8));
}

uint64_t LifeEventEntryView.enumerateActivityEventIds(order:using:)(char a1)
{
  return sub_1B29CD6AC();
}

uint64_t LifeEventEntryView.enumerateActivityEventIds<A>(of:order:using:)()
{
  return sub_1B2B2E8B0();
}

uint64_t LifeEventEntryView.enumerateActivityEventIds(whose:in:order:using:)(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2D345A4(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, void))sub_1B29CD768);
}

{
  return sub_1B2D345A4(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, void))sub_1B29CD8F8);
}

{
  return sub_1B2D345A4(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, void))sub_1B29CD9B0);
}

{
  return sub_1B2D345A4(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, void))sub_1B29CDA44);
}

{
  return sub_1B2D345A4(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, void))sub_1B29CDAD8);
}

uint64_t LifeEventEntryView.enumerateActivityEventIds<A>(of:whose:in:order:using:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B2D34608(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2E92C);
}

{
  return sub_1B2D34608(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2E984);
}

{
  return sub_1B2D34608(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2EA94);
}

{
  return sub_1B2D34608(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2EADC);
}

{
  return sub_1B2D34608(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2EB24);
}

uint64_t sub_1B2D345A4(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, void))
{
  return a6(*a1, a2, a3 & 1);
}

uint64_t sub_1B2D34608(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, char *, uint64_t, void, uint64_t, uint64_t, uint64_t, void))
{
  char v10 = *a2;
  return a9(a1, &v10, a3, a4 & 1, a5, a6, a7, *(void *)(a8 + 8));
}

uint64_t LifeEventEntryView.enumerateActivityEventIds(overlapping:order:using:)()
{
  return sub_1B29CDBD0();
}

{
  sub_1B299D394();
  return sub_1B29CDC84();
}

{
  sub_1B299D394();
  return sub_1B29CDD38();
}

{
  sub_1B299D394();
  return sub_1B29CDDEC();
}

{
  sub_1B299D394();
  return sub_1B29CDEA0();
}

uint64_t LifeEventEntryView.enumerateActivityEventIds<A>(of:overlapping:order:using:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B2D347D8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2EBF0);
}

{
  return sub_1B2D347D8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2EC40);
}

{
  return sub_1B2D347D8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2ED08);
}

{
  return sub_1B2D347D8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2ED88);
}

{
  return sub_1B2D347D8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))sub_1B2B2EDD0);
}

uint64_t sub_1B2D347D8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))
{
  return a8(a1, a2, a3 & 1, a4, a5, a6, *(void *)(a7 + 8));
}

uint64_t LifeEventEntryView.latestActivityEventId()@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D1938(a1);
}

uint64_t LifeEventEntryView.latestActivityEventId<A>(of:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2B2EEB4(a1);
}

uint64_t LifeEventEntryView.earliestActivityEventId()@<X0>(uint64_t a1@<X8>)
{
  return sub_1B29D1938(a1);
}

uint64_t LifeEventEntryView.earliestActivityEventId<A>(of:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2B2EED8(a1);
}

uint64_t LifeEventEntryView.deinit()
{
  swift_release();
  return v0;
}

uint64_t LifeEventEntryView.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t method lookup function for LifeEventEntryView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LifeEventEntryView);
}

uint64_t dispatch thunk of LifeEventEntryView.__allocating_init(viewService:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t static LifeEventsInferenceInterface.interfaceId.getter()
{
  return 0xD000000000000013;
}

IntelligencePlatform::LifeEventsInferenceInterface::Input __swiftcall LifeEventsInferenceInterface.Input.init(featureDictionary:)(IntelligencePlatform::LifeEventsInferenceInterface::Input featureDictionary)
{
  v1->featureDictionary._rawValue = featureDictionary.featureDictionary._rawValue;
  return featureDictionary;
}

uint64_t sub_1B2D34964(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001B2EA14A0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1B2D349EC()
{
  return 0xD000000000000011;
}

uint64_t sub_1B2D34A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D34964(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2D34A38(uint64_t a1)
{
  unint64_t v2 = sub_1B2D34BE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D34A74(uint64_t a1)
{
  unint64_t v2 = sub_1B2D34BE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void LifeEventsInferenceInterface.Input.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C42D98);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299ADB4();
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2D34BE8();
  sub_1B2E83A38();
  sub_1B29A3EB4(&qword_1E9C3C448);
  sub_1B2A874AC(&qword_1E9C3C450);
  sub_1B2E836D8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_1B29998C8();
}

unint64_t sub_1B2D34BE8()
{
  unint64_t result = qword_1E9C42DA0;
  if (!qword_1E9C42DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42DA0);
  }
  return result;
}

void LifeEventsInferenceInterface.Input.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  sub_1B29A3EB4(&qword_1E9C42DA8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v15);
  sub_1B2ACA16C(v12);
  sub_1B2D34BE8();
  sub_1B29A4848();
  if (!v10)
  {
    sub_1B29A3EB4(&qword_1E9C3C448);
    sub_1B2A874AC(&qword_1E9C3C460);
    sub_1B2E835B8();
    uint64_t v16 = sub_1B29A52D0();
    v17(v16);
    void *v14 = a10;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
  sub_1B29998C8();
}

void sub_1B2D34D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LifeEventsInferenceInterface.Input.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1B2D34D84()
{
}

double LifeEventsInferenceInterface.Output.confidence.getter()
{
  return *(double *)v0;
}

uint64_t sub_1B2D34DA4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2D34E38()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_1B2D34E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D34DA4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2D34E84(uint64_t a1)
{
  unint64_t v2 = sub_1B2D35008();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D34EC0(uint64_t a1)
{
  unint64_t v2 = sub_1B2D35008();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LifeEventsInferenceInterface.Output.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C42DB0);
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D35008();
  sub_1B2E83A38();
  sub_1B2E836A8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

unint64_t sub_1B2D35008()
{
  unint64_t result = qword_1E9C42DB8;
  if (!qword_1E9C42DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42DB8);
  }
  return result;
}

uint64_t LifeEventsInferenceInterface.Output.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C42DC0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B2ACA16C(a1);
  sub_1B2D35008();
  sub_1B29A4848();
  if (!v2)
  {
    sub_1B2E83588();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1B29A52D0();
    v9(v8);
    *a2 = v7;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
}

uint64_t sub_1B2D35154@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return LifeEventsInferenceInterface.Output.init(from:)(a1, a2);
}

uint64_t sub_1B2D3516C(void *a1)
{
  return LifeEventsInferenceInterface.Output.encode(to:)(a1);
}

uint64_t static LifeEventsInferenceInterface.Errors.InitError.== infix(_:_:)()
{
  return 1;
}

uint64_t LifeEventsInferenceInterface.Errors.InitError.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t sub_1B2D351B4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x4D64696C61766E69 && a2 == 0xEC0000006C65646FLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2D35254()
{
  return 0x4D64696C61766E69;
}

uint64_t sub_1B2D35278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D351B4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2D352A4(uint64_t a1)
{
  unint64_t v2 = sub_1B2D354E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D352E0(uint64_t a1)
{
  unint64_t v2 = sub_1B2D354E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2D3531C(uint64_t a1)
{
  unint64_t v2 = sub_1B2D35530();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D35358(uint64_t a1)
{
  unint64_t v2 = sub_1B2D35530();

  return MEMORY[0x1F41862B0](a1, v2);
}

void LifeEventsInferenceInterface.Errors.InitError.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C42DC8);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299ADB4();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C42DD0);
  sub_1B299D278();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1B299E4A0();
  uint64_t v13 = v12 - v11;
  sub_1B2ACA16C(v2);
  sub_1B2D354E4();
  sub_1B2E83A38();
  sub_1B2D35530();
  sub_1B2E83618();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
  sub_1B29998C8();
}

unint64_t sub_1B2D354E4()
{
  unint64_t result = qword_1E9C42DD8;
  if (!qword_1E9C42DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42DD8);
  }
  return result;
}

unint64_t sub_1B2D35530()
{
  unint64_t result = qword_1E9C42DE0;
  if (!qword_1E9C42DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42DE0);
  }
  return result;
}

uint64_t LifeEventsInferenceInterface.Errors.InitError.hashValue.getter()
{
  return sub_1B2E839E8();
}

void LifeEventsInferenceInterface.Errors.InitError.init(from:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  sub_1B29A3EB4(&qword_1E9C42DE8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B2999928();
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C42DF0);
  sub_1B299D278();
  uint64_t v19 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1B299F280();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2D354E4();
  sub_1B2E83A18();
  if (v0) {
    goto LABEL_6;
  }
  uint64_t v18 = v1;
  if (!*(void *)(sub_1B2E835F8() + 16)
    || (sub_1B29B142C(1), v9 = v8, unint64_t v11 = v10, swift_bridgeObjectRelease(), v9 != v11 >> 1))
  {
    uint64_t v12 = sub_1B2E83288();
    swift_allocError();
    uint64_t v14 = v13;
    sub_1B29A3EB4(&qword_1E9C39038);
    void *v14 = &type metadata for LifeEventsInferenceInterface.Errors.InitError;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, *MEMORY[0x1E4FBBA70], v12);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v5);
LABEL_6:
    uint64_t v17 = (uint64_t)v3;
    goto LABEL_7;
  }
  sub_1B2D35530();
  sub_1B2E834E8();
  sub_1B299B798();
  v15();
  swift_unknownObjectRelease();
  sub_1B299B798();
  v16();
  uint64_t v17 = (uint64_t)v3;
LABEL_7:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v17);
  sub_1B29998C8();
}

uint64_t sub_1B2D358A4()
{
  return LifeEventsInferenceInterface.Errors.InitError.hashValue.getter();
}

uint64_t sub_1B2D358BC()
{
  return LifeEventsInferenceInterface.Errors.InitError.hash(into:)();
}

void sub_1B2D358D4()
{
}

void sub_1B2D358EC()
{
}

BOOL static LifeEventsInferenceInterface.Errors.RunError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LifeEventsInferenceInterface.Errors.RunError.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t sub_1B2D35948(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001B2EA14C0 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B2EA14E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1B2D35A34(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0xD000000000000011;
  }
}

unint64_t sub_1B2D35A70()
{
  return sub_1B2D35A34(*v0);
}

uint64_t sub_1B2D35A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D35948(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2D35AA0(uint64_t a1)
{
  unint64_t v2 = sub_1B2D362B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D35ADC(uint64_t a1)
{
  unint64_t v2 = sub_1B2D362B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2D35B18(uint64_t a1)
{
  unint64_t v2 = sub_1B2D36348();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D35B54(uint64_t a1)
{
  unint64_t v2 = sub_1B2D36348();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2D35B90(uint64_t a1)
{
  unint64_t v2 = sub_1B2D362FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D35BCC(uint64_t a1)
{
  unint64_t v2 = sub_1B2D362FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void LifeEventsInferenceInterface.Errors.RunError.encode(to:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  sub_1B29A3EB4(&qword_1E9C42DF8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C42E00);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C42E08);
  sub_1B299D278();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1B299F280();
  char v10 = *v0;
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2D362B0();
  sub_1B2E83A38();
  unint64_t v11 = (void (**)(uint64_t, uint64_t))(v8 + 8);
  if (v10) {
    sub_1B2D362FC();
  }
  else {
    sub_1B2D36348();
  }
  sub_1B2E83618();
  sub_1B299B798();
  v13(v12);
  (*v11)(v1, v6);
  sub_1B29998C8();
}

uint64_t LifeEventsInferenceInterface.Errors.RunError.hashValue.getter()
{
  return sub_1B2E839E8();
}

void LifeEventsInferenceInterface.Errors.RunError.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v23 = v3;
  sub_1B29A3EB4(&qword_1E9C42E28);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299ADB4();
  sub_1B29A3EB4(&qword_1E9C42E30);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B2999928();
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C42E38);
  sub_1B299D278();
  uint64_t v24 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1B299E4A0();
  uint64_t v11 = v10 - v9;
  sub_1B2ACA16C(v2);
  sub_1B2D362B0();
  sub_1B2E83A18();
  if (v0) {
    goto LABEL_6;
  }
  uint64_t v25 = (uint64_t)v2;
  uint64_t v12 = sub_1B2E835F8();
  if (!*(void *)(v12 + 16)
    || (char v13 = *(unsigned char *)(v12 + 32),
        sub_1B29B142C(1),
        uint64_t v15 = v14,
        unint64_t v17 = v16,
        swift_bridgeObjectRelease(),
        v15 != v17 >> 1))
  {
    uint64_t v18 = sub_1B2E83288();
    swift_allocError();
    uint64_t v20 = v19;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v20 = &type metadata for LifeEventsInferenceInterface.Errors.RunError;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x1E4FBBA70], v18);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1B299B798();
    v21();
    unint64_t v2 = (void *)v25;
LABEL_6:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    goto LABEL_7;
  }
  sub_1B2D362FC();
  sub_1B2E834E8();
  sub_1B299B798();
  v22();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v6);
  *uint64_t v23 = v13;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v25);
LABEL_7:
  sub_1B29998C8();
}

void sub_1B2D36260()
{
}

void sub_1B2D36278()
{
}

unint64_t sub_1B2D36290()
{
  return 0xD000000000000013;
}

unint64_t sub_1B2D362B0()
{
  unint64_t result = qword_1E9C42E10;
  if (!qword_1E9C42E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E10);
  }
  return result;
}

unint64_t sub_1B2D362FC()
{
  unint64_t result = qword_1E9C42E18;
  if (!qword_1E9C42E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E18);
  }
  return result;
}

unint64_t sub_1B2D36348()
{
  unint64_t result = qword_1E9C42E20;
  if (!qword_1E9C42E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E20);
  }
  return result;
}

unint64_t sub_1B2D36398()
{
  unint64_t result = qword_1E9C42E40;
  if (!qword_1E9C42E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E40);
  }
  return result;
}

unint64_t sub_1B2D363E8()
{
  unint64_t result = qword_1E9C42E48;
  if (!qword_1E9C42E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E48);
  }
  return result;
}

unint64_t sub_1B2D36438()
{
  unint64_t result = qword_1E9C42E50;
  if (!qword_1E9C42E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E50);
  }
  return result;
}

unint64_t sub_1B2D36488()
{
  unint64_t result = qword_1E9C42E58;
  if (!qword_1E9C42E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E58);
  }
  return result;
}

unint64_t sub_1B2D364D8()
{
  unint64_t result = qword_1E9C42E60;
  if (!qword_1E9C42E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E60);
  }
  return result;
}

void type metadata accessor for LifeEventsInferenceInterface()
{
}

void type metadata accessor for LifeEventsInferenceInterface.Input()
{
}

void type metadata accessor for LifeEventsInferenceInterface.Output()
{
}

void type metadata accessor for LifeEventsInferenceInterface.Errors()
{
}

void type metadata accessor for LifeEventsInferenceInterface.Errors.InitError()
{
}

void type metadata accessor for LifeEventsInferenceInterface.Errors.RunError()
{
}

unsigned char *_s20IntelligencePlatform28LifeEventsInferenceInterfaceO6ErrorsO8RunErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D36640);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Errors.RunError.CodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Errors.RunError.CodingKeys;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Errors.RunError.InvalidFeatureKeyCodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Errors.RunError.InvalidFeatureKeyCodingKeys;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Errors.RunError.InvalidInferenceCodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Errors.RunError.InvalidInferenceCodingKeys;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Errors.InitError.CodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Errors.InitError.CodingKeys;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Errors.InitError.InvalidModelCodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Errors.InitError.InvalidModelCodingKeys;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Output.CodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Output.CodingKeys;
}

unsigned char *_s20IntelligencePlatform28LifeEventsInferenceInterfaceO6ErrorsO9InitErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2D36764);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Input.CodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Input.CodingKeys;
}

unint64_t sub_1B2D367A0()
{
  unint64_t result = qword_1E9C42E68;
  if (!qword_1E9C42E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E68);
  }
  return result;
}

unint64_t sub_1B2D367F0()
{
  unint64_t result = qword_1E9C42E70;
  if (!qword_1E9C42E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E70);
  }
  return result;
}

unint64_t sub_1B2D36840()
{
  unint64_t result = qword_1E9C42E78;
  if (!qword_1E9C42E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E78);
  }
  return result;
}

unint64_t sub_1B2D36890()
{
  unint64_t result = qword_1E9C42E80;
  if (!qword_1E9C42E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E80);
  }
  return result;
}

unint64_t sub_1B2D368E0()
{
  unint64_t result = qword_1E9C42E88;
  if (!qword_1E9C42E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E88);
  }
  return result;
}

unint64_t sub_1B2D36930()
{
  unint64_t result = qword_1E9C42E90;
  if (!qword_1E9C42E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E90);
  }
  return result;
}

unint64_t sub_1B2D36980()
{
  unint64_t result = qword_1E9C42E98;
  if (!qword_1E9C42E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42E98);
  }
  return result;
}

unint64_t sub_1B2D369D0()
{
  unint64_t result = qword_1E9C42EA0;
  if (!qword_1E9C42EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42EA0);
  }
  return result;
}

unint64_t sub_1B2D36A20()
{
  unint64_t result = qword_1E9C42EA8;
  if (!qword_1E9C42EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42EA8);
  }
  return result;
}

unint64_t sub_1B2D36A70()
{
  unint64_t result = qword_1E9C42EB0;
  if (!qword_1E9C42EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42EB0);
  }
  return result;
}

unint64_t sub_1B2D36AC0()
{
  unint64_t result = qword_1E9C42EB8;
  if (!qword_1E9C42EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42EB8);
  }
  return result;
}

unint64_t sub_1B2D36B10()
{
  unint64_t result = qword_1E9C42EC0;
  if (!qword_1E9C42EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42EC0);
  }
  return result;
}

unint64_t sub_1B2D36B60()
{
  unint64_t result = qword_1E9C42EC8;
  if (!qword_1E9C42EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42EC8);
  }
  return result;
}

unint64_t sub_1B2D36BB0()
{
  unint64_t result = qword_1E9C42ED0;
  if (!qword_1E9C42ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42ED0);
  }
  return result;
}

unint64_t sub_1B2D36C00()
{
  unint64_t result = qword_1E9C42ED8;
  if (!qword_1E9C42ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42ED8);
  }
  return result;
}

unint64_t sub_1B2D36C50()
{
  unint64_t result = qword_1E9C42EE0;
  if (!qword_1E9C42EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42EE0);
  }
  return result;
}

unint64_t sub_1B2D36CA0()
{
  unint64_t result = qword_1E9C42EE8;
  if (!qword_1E9C42EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42EE8);
  }
  return result;
}

unint64_t sub_1B2D36CF0()
{
  unint64_t result = qword_1E9C42EF0;
  if (!qword_1E9C42EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42EF0);
  }
  return result;
}

uint64_t sub_1B2D36D3C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_1B29A0798((uint64_t)sub_1B2D36D58, 0);
}

uint64_t sub_1B2D36D58()
{
  sub_1B299B3BC();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E9E0]), sel_init);
  v0[4] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1B2D36E18;
  uint64_t v3 = v0[2];
  return MEMORY[0x1F40DB7B0](v3, v1);
}

uint64_t sub_1B2D36E18(uint64_t a1)
{
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *unsigned int v6 = v5;
  uint64_t v7 = *v2;
  sub_1B299F388();
  *uint64_t v8 = v7;
  *(void *)(v5 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1B2C56B00, 0, 0);
  }
  else
  {

    uint64_t v9 = *(uint64_t (**)(uint64_t))(v7 + 8);
    return v9(a1);
  }
}

void sub_1B2D36F44(uint64_t a1)
{
}

void sub_1B2D36F58(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  BOOL v52 = a2;
  uint64_t v53 = a3;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1B29A3EB4(&qword_1E9C38998);
    uint64_t v4 = (void *)sub_1B2E83498();
  }
  else
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v50 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v3 + 64);
  int64_t v49 = (unint64_t)(63 - v5) >> 6;
  uint64_t v8 = v57;
  uint64_t v9 = &v59;
  uint64_t v47 = -1 << *(unsigned char *)(v3 + 32);
  uint64_t v48 = (uint64_t)(v4 + 8);
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v11 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_38;
        }
        if (v14 >= v49)
        {
LABEL_35:
          sub_1B2A47690();
          return;
        }
        unint64_t v15 = *(void *)(v50 + 8 * v14);
        int64_t v16 = v10 + 1;
        if (!v15)
        {
          sub_1B2D38CB8();
          if (v17 == v18) {
            goto LABEL_35;
          }
          sub_1B29A486C();
          if (!v15)
          {
            sub_1B2D38CB8();
            if (v17 == v18) {
              goto LABEL_35;
            }
            sub_1B29A486C();
            if (!v15)
            {
              sub_1B2D38CB8();
              if (v17 == v18) {
                goto LABEL_35;
              }
              sub_1B29A486C();
              if (!v15)
              {
                int64_t v20 = v19 + 4;
                if (v20 >= v49) {
                  goto LABEL_35;
                }
                unint64_t v15 = *(void *)(v50 + 8 * v20);
                if (!v15)
                {
                  while (!__OFADD__(v20, 1))
                  {
                    sub_1B2D38CB8();
                    if (v17 == v18) {
                      goto LABEL_35;
                    }
                    sub_1B29A486C();
                    int64_t v20 = v21 + 1;
                    if (v15) {
                      goto LABEL_29;
                    }
                  }
                  goto LABEL_39;
                }
                int64_t v16 = v20;
              }
            }
          }
        }
LABEL_29:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
        int64_t v10 = v16;
      }
      uint64_t v22 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v13);
      uint64_t v23 = *(void **)(*(void *)(v3 + 56) + 8 * v13);
      uint64_t v55 = *v22;
      uint64_t v56 = v22[1];
      uint64_t v54 = (uint64_t)v23;
      sub_1B29C3CA0(0, v52);
      swift_bridgeObjectRetain();
      id v24 = v23;
      swift_dynamicCast();
      uint64_t v26 = v55;
      uint64_t v25 = v56;
      sub_1B29E4FEC(v8, v9);
      sub_1B29E4FEC(v9, v60);
      sub_1B29E4FEC(v60, &v58);
      unint64_t v33 = sub_1B29DB060(v55, v56, v27, v28, v29, v30, v31, v32, v46, v47, v48, v49, v50, v51, (uint64_t)v52, v53, v54, v55, v56,
              v57[0],
              v57[1],
              v57[2],
              v57[3],
              v58,
              *((uint64_t *)&v58 + 1),
              v59);
      unint64_t v34 = v33;
      if ((v35 & 1) == 0) {
        break;
      }
      uint64_t v51 = v7;
      char v36 = v9;
      uint64_t v37 = v8;
      uint64_t v38 = v3;
      uint64_t v39 = v10;
      uint64_t v40 = v11;
      uint64_t v41 = (uint64_t *)(v4[6] + 16 * v33);
      swift_bridgeObjectRelease();
      *uint64_t v41 = v26;
      v41[1] = v25;
      uint64_t v11 = v40;
      int64_t v10 = v39;
      uint64_t v3 = v38;
      uint64_t v8 = v37;
      uint64_t v9 = v36;
      unint64_t v7 = v51;
      char v42 = (_OWORD *)(v4[7] + 32 * v34);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v42);
      sub_1B29E4FEC(&v58, v42);
    }
    if (v4[2] >= v4[3]) {
      break;
    }
    *(void *)(v48 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    char v43 = (uint64_t *)(v4[6] + 16 * v33);
    *char v43 = v26;
    v43[1] = v25;
    sub_1B29E4FEC(&v58, (_OWORD *)(v4[7] + 32 * v33));
    uint64_t v44 = v4[2];
    BOOL v18 = __OFADD__(v44, 1);
    uint64_t v45 = v44 + 1;
    if (v18) {
      goto LABEL_37;
    }
    v4[2] = v45;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

unint64_t static LifeEventsMLModelInferenceServiceDefinition.definitionId.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1B2D372AC(uint64_t a1)
{
  unint64_t v2 = sub_1B2D37474();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D372E8(uint64_t a1)
{
  unint64_t v2 = sub_1B2D37474();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C42EF8);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  v12[1] = *(void *)(v1 + 24);
  v12[2] = v9;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D37474();
  sub_1B2E83A38();
  char v14 = 0;
  uint64_t v10 = v12[3];
  sub_1B2E83688();
  if (!v10)
  {
    char v13 = 1;
    sub_1B2E83688();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

unint64_t sub_1B2D37474()
{
  unint64_t result = qword_1E9C42F00;
  if (!qword_1E9C42F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42F00);
  }
  return result;
}

uint64_t LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C42F08);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D37474();
  sub_1B2E83A18();
  if (v2) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  uint64_t v6 = sub_1B2E83568();
  uint64_t v8 = v7;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1B2E83568();
  uint64_t v11 = v10;
  uint64_t v15 = v9;
  uint64_t v12 = sub_1B299F450();
  v13(v12);
  *a2 = v6;
  a2[1] = v8;
  a2[2] = v15;
  a2[3] = v11;
  swift_bridgeObjectRetain();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D37684@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.init(from:)(a1, a2);
}

uint64_t sub_1B2D3769C(void *a1)
{
  return LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.encode(to:)(a1);
}

void LifeEventsMLModelInferenceServiceDefinition.Runner.cost.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 112);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1B2D376C8(uint64_t *a1, uint64_t a2)
{
  v3[2] = a2;
  v3[3] = v2;
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  v3[4] = *(void *)v2;
  v3[5] = v5;
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  v3[6] = v7;
  swift_defaultActor_initialize();
  *(void *)(v2 + 112) = 0;
  *(unsigned char *)(v2 + 120) = 1;
  uint64_t v10 = (char *)&dword_1E9C3E340 + dword_1E9C3E340;
  uint64_t v8 = (void *)swift_task_alloc();
  v3[7] = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1B2D377E4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))v10)(v6, v7, v4, v5, 0);
}

uint64_t sub_1B2D377E4(uint64_t a1)
{
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_1B299F388();
  *uint64_t v8 = v7;
  *(void *)(v5 + 64) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_2:
    swift_defaultActor_destroy();
    swift_release();
    swift_deallocPartialClassInstance();
    sub_1B299AD7C();
    return v9();
  }
  if (!a1)
  {
    sub_1B2D36438();
    swift_allocError();
    swift_willThrow();
    goto LABEL_2;
  }
  uint64_t v11 = *(void *)(v5 + 24);
  *(void *)(v11 + 128) = a1;
  swift_retain();
  return MEMORY[0x1F4188298](sub_1B2D379AC, v11, 0);
}

uint64_t sub_1B2D379AC()
{
  sub_1B299B3BC();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 24);
  return v1(v2);
}

uint64_t LifeEventsMLModelInferenceServiceDefinition.Runner.run(input:context:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  v4[3] = a1;
  v4[4] = a3;
  uint64_t v5 = *a2;
  v4[5] = v3;
  v4[6] = v5;
  return sub_1B29A0798((uint64_t)sub_1B2D37A40, v3);
}

uint64_t sub_1B2D37A40()
{
  uint64_t v55 = (uint64_t *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v53 = sub_1B29C3CA0(0, (unint64_t *)&qword_1E9C42F18);
  uint64_t v2 = (void *)sub_1B2E82148();
  uint64_t v49 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(v1 + 64);
  int64_t v50 = (unint64_t)(63 - v4) >> 6;
  uint64_t v54 = v1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  long long v51 = xmmword_1B2EC00A0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v8 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    char v13 = (uint64_t *)(*(void *)(v54 + 48) + 16 * i);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    uint64_t v16 = *(void *)(*(void *)(v54 + 56) + 8 * i);
    sub_1B29A3EB4(&qword_1E9C398E8);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = v51;
    *(void *)(v17 + 32) = v16;
    *uint64_t v55 = v17;
    swift_bridgeObjectRetain();
    sub_1B29A3EB4(&qword_1E9C42F20);
    sub_1B29D22C4(&qword_1E9C42F28, &qword_1E9C42F20);
    uint64_t v18 = sub_1B2E82D78();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t result = sub_1B29DB060(v15, v14, v19, v20, v21, v22, v23, v24, v47, v48, v49, v50, v51, *((uint64_t *)&v51 + 1), v52, v53, v54, (uint64_t)v55, (uint64_t)v2,
               v57,
               v58,
               v59,
               v60,
               v61,
               v62,
               v63);
    if (__OFADD__(v2[2], (v25 & 1) == 0))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    unint64_t v26 = result;
    char v27 = v25;
    sub_1B29A3EB4(&qword_1E9C42F30);
    uint64_t result = sub_1B2E83398();
    uint64_t v2 = (void *)v56;
    if (result) {
      break;
    }
LABEL_23:
    if (v27)
    {
      uint64_t v35 = v2[7];

      *(void *)(v35 + 8 * v26) = v18;
    }
    else
    {
      v2[(v26 >> 6) + 8] |= 1 << v26;
      char v36 = (uint64_t *)(v2[6] + 16 * v26);
      *char v36 = v15;
      v36[1] = v14;
      *(void *)(v2[7] + 8 * v26) = v18;
      uint64_t v37 = v2[2];
      BOOL v38 = __OFADD__(v37, 1);
      uint64_t v39 = v37 + 1;
      if (v38) {
        goto LABEL_37;
      }
      v2[2] = v39;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_38;
    }
    if (v10 >= v50)
    {
LABEL_29:
      swift_release();
      sub_1B2D36F58((uint64_t)v2, (unint64_t *)&qword_1E9C42F18, 0x1E4F1E9A8);
      swift_bridgeObjectRelease();
      id v40 = objc_allocWithZone(MEMORY[0x1E4F1E930]);
      id v41 = sub_1B2D3876C();
      *(void *)(v48 + 56) = v41;
      id v43 = v41;
      uint64_t v44 = (void *)swift_task_alloc();
      *(void *)(v48 + 64) = v44;
      *uint64_t v44 = v48;
      v44[1] = sub_1B2D37F1C;
      sub_1B29A1FD0();
      __asm { BR              X2 }
    }
    unint64_t v11 = *(void *)(v49 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v50) {
        goto LABEL_29;
      }
      unint64_t v11 = *(void *)(v49 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v50) {
          goto LABEL_29;
        }
        unint64_t v11 = *(void *)(v49 + 8 * v7);
        if (!v11)
        {
          int64_t v12 = v10 + 3;
          if (v12 >= v50) {
            goto LABEL_29;
          }
          unint64_t v11 = *(void *)(v49 + 8 * v12);
          if (!v11)
          {
            while (1)
            {
              int64_t v7 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_39;
              }
              if (v7 >= v50) {
                goto LABEL_29;
              }
              unint64_t v11 = *(void *)(v49 + 8 * v7);
              ++v12;
              if (v11) {
                goto LABEL_18;
              }
            }
          }
          int64_t v7 = v12;
        }
      }
    }
LABEL_18:
    unint64_t v5 = (v11 - 1) & v11;
  }
  uint64_t result = sub_1B29DB060(v15, v14, v28, v29, v30, v31, v32, v33, v47, v48, v49, v50, v51, *((uint64_t *)&v51 + 1), v52, v53, v54, (uint64_t)v55, v56,
             v57,
             v58,
             v59,
             v60,
             v61,
             v62,
             v63);
  if ((v27 & 1) == (v34 & 1))
  {
    unint64_t v26 = result;
    goto LABEL_23;
  }
  sub_1B29A1FD0();
  return sub_1B2E83858();
}

uint64_t sub_1B2D37F1C()
{
  uint64_t v2 = *v1;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v8 + 72) = v7;
  *(void *)(v8 + 80) = v0;
  swift_task_dealloc();
  uint64_t v9 = *(void **)(v2 + 56);
  uint64_t v10 = *(void *)(v2 + 40);

  if (v0) {
    unint64_t v11 = sub_1B2D381F4;
  }
  else {
    unint64_t v11 = sub_1B2D38064;
  }
  return MEMORY[0x1F4188298](v11, v10, 0);
}

uint64_t sub_1B2D38064()
{
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = (void *)sub_1B2E82348();
  id v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  if (v3
    && (id v4 = objc_msgSend(v3, sel_multiArrayValue), v3, v4)
    && (id v5 = objc_msgSend(v4, sel_objectAtIndexedSubscript_, 0),
        v4,
        v5))
  {
    uint64_t v6 = (void *)v0[7];
    uint64_t v7 = v0[3];
    objc_msgSend(v5, sel_doubleValue);
    uint64_t v9 = v8;

    swift_unknownObjectRelease();
    *(void *)uint64_t v7 = v9;
    *(void *)(v7 + 8) = 0;
    *(unsigned char *)(v7 + 16) = 1;
    sub_1B299AD7C();
  }
  else
  {
    unint64_t v11 = (void *)v0[7];
    sub_1B2D36488();
    swift_allocError();
    *int64_t v12 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();

    sub_1B299AD7C();
  }
  return v10();
}

uint64_t sub_1B2D381F4()
{
  sub_1B299B3BC();

  sub_1B299AD7C();
  return v1();
}

uint64_t LifeEventsMLModelInferenceServiceDefinition.Runner.deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t LifeEventsMLModelInferenceServiceDefinition.Runner.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

void LifeEventsMLModelInferenceServiceDefinition.Runner.unownedExecutor.getter()
{
}

void sub_1B2D382B8()
{
}

void sub_1B2D382D4(uint64_t a1@<X8>)
{
}

uint64_t sub_1B2D382F8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1B2A14584;
  return LifeEventsMLModelInferenceServiceDefinition.Runner.run(input:context:)(a1, a2, a3);
}

uint64_t static LifeEventsMLModelInferenceServiceDefinition.buildRunner(config:context:)(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[7];
  uint64_t v6 = a1[8];
  v2[2] = a1[5];
  v2[3] = v4;
  v2[4] = v5;
  v2[5] = v6;
  type metadata accessor for LifeEventsMLModelInferenceServiceDefinition.Runner();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v2[6] = (uint64_t)v7;
  void *v7 = v2;
  v7[1] = sub_1B2D384A0;
  return sub_1B2D376C8(v2 + 2, a2);
}

uint64_t sub_1B2D384A0()
{
  sub_1B299B3BC();
  uint64_t v3 = v2;
  sub_1B299B708();
  sub_1B299F388();
  *uint64_t v5 = v4;
  uint64_t v6 = *v1;
  sub_1B299F388();
  void *v7 = v6;
  *(void *)(v8 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1B2D385AC, 0, 0);
  }
  else
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t))(v6 + 8);
    return v9(v3);
  }
}

uint64_t sub_1B2D385AC()
{
  sub_1B299AD7C();
  return v0();
}

unint64_t sub_1B2D385C8()
{
  return 0xD000000000000021;
}

uint64_t sub_1B2D385E8(uint64_t a1, void *a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1B2D38688;
  return static LifeEventsMLModelInferenceServiceDefinition.buildRunner(config:context:)(a2, a3);
}

uint64_t sub_1B2D38688(uint64_t a1)
{
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_1B299F388();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v5 + 16) = a1;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

id sub_1B2D3876C()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1B2E820D8();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithDictionary_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v2;
}

uint64_t type metadata accessor for LifeEventsMLModelInferenceServiceDefinition.Runner()
{
  return self;
}

unint64_t sub_1B2D38878(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B2D388A8();
  unint64_t result = sub_1B2D388F4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B2D388A8()
{
  unint64_t result = qword_1E9C42F50;
  if (!qword_1E9C42F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42F50);
  }
  return result;
}

unint64_t sub_1B2D388F4()
{
  unint64_t result = qword_1E9C42F58;
  if (!qword_1E9C42F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42F58);
  }
  return result;
}

unint64_t sub_1B2D38940(uint64_t a1)
{
  unint64_t result = sub_1B2D38968();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2D38968()
{
  unint64_t result = qword_1E9C42F60;
  if (!qword_1E9C42F60)
  {
    type metadata accessor for LifeEventsMLModelInferenceServiceDefinition.Runner();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42F60);
  }
  return result;
}

uint64_t sub_1B2D389B4()
{
  return sub_1B29D22C4(&qword_1E9C42F68, (uint64_t *)&unk_1E9C42F70);
}

unint64_t sub_1B2D389F4()
{
  unint64_t result = qword_1E9C42F80;
  if (!qword_1E9C42F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42F80);
  }
  return result;
}

unint64_t sub_1B2D38A44()
{
  unint64_t result = qword_1E9C42F88;
  if (!qword_1E9C42F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42F88);
  }
  return result;
}

void type metadata accessor for LifeEventsMLModelInferenceServiceDefinition()
{
}

void type metadata accessor for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters()
{
}

uint64_t method lookup function for LifeEventsMLModelInferenceServiceDefinition.Runner(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LifeEventsMLModelInferenceServiceDefinition.Runner);
}

unsigned char *storeEnumTagSinglePayload for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D38B90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.CodingKeys()
{
  return &type metadata for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.CodingKeys;
}

unint64_t sub_1B2D38BCC()
{
  unint64_t result = qword_1E9C42F98;
  if (!qword_1E9C42F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42F98);
  }
  return result;
}

unint64_t sub_1B2D38C1C()
{
  unint64_t result = qword_1E9C42FA0;
  if (!qword_1E9C42FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42FA0);
  }
  return result;
}

unint64_t sub_1B2D38C6C()
{
  unint64_t result = qword_1E9C42FA8;
  if (!qword_1E9C42FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42FA8);
  }
  return result;
}

uint64_t ViewService.lifeEventView()()
{
  type metadata accessor for LifeEventView();
  uint64_t v1 = sub_1B299D354();
  LifeEventView.init(viewService:)(v0);
  return v1;
}

uint64_t LifeEventView.entryView.getter()
{
  return swift_retain();
}

uint64_t LifeEventView.__allocating_init(viewService:)(void *a1)
{
  uint64_t v2 = sub_1B299D354();
  LifeEventView.init(viewService:)(a1);
  return v2;
}

uint64_t type metadata accessor for LifeEventView()
{
  return self;
}

uint64_t LifeEventView.init(viewService:)(void *a1)
{
  uint64_t v3 = v1;
  type metadata accessor for LifeEventEntryView();
  sub_1B299D354();
  uint64_t v5 = LifeEventEntryView.init(viewService:)(a1);
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v6 = v5;
    sub_1B29A3EB4(&qword_1E9C38548);
    uint64_t v7 = sub_1B299D354();
    *(void *)(v7 + 16) = v6;
    *(void *)(v3 + 16) = v7;
  }
  return v3;
}

uint64_t LifeEventView.activityEvents<A>(from:order:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7 = a2 & 1;
  uint64_t v8 = type metadata accessor for CustomGraphActivityEvent(0);
  uint64_t v9 = sub_1B2D39F0C(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  return sub_1B2B31EF4(v8, a1, v7, v8, a3, v9, a4);
}

uint64_t LifeEventView.activityEvents<A, B>(of:from:order:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B2B31EF4(a1, a2, a3 & 1, a4, a5, *(void *)(a6 + 8), a7);
}

uint64_t LifeEventView.activityEvents<A>(whose:in:from:order:)(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_1B2D38FB4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B31FBC);
}

{
  return sub_1B2D38FB4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B31FF4);
}

{
  return sub_1B2D38FB4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B3202C);
}

{
  return sub_1B2D38FB4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32064);
}

{
  return sub_1B2D38FB4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B3209C);
}

uint64_t LifeEventView.activityEvents<A, B>(of:whose:in:from:order:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1B2D391F8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, void, uint64_t, uint64_t, void, uint64_t))sub_1B2B31FBC);
}

{
  return sub_1B2D391F8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, void, uint64_t, uint64_t, void, uint64_t))sub_1B2B31FF4);
}

{
  return sub_1B2D391F8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, void, uint64_t, uint64_t, void, uint64_t))sub_1B2B3202C);
}

{
  return sub_1B2D391F8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, void, uint64_t, uint64_t, void, uint64_t))sub_1B2B32064);
}

{
  return sub_1B2D391F8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, void, uint64_t, uint64_t, void, uint64_t))sub_1B2B3209C);
}

uint64_t sub_1B2D38FB4(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v11 = *a1;
  uint64_t v12 = a4 & 1;
  uint64_t v13 = type metadata accessor for CustomGraphActivityEvent(0);
  char v17 = v11;
  uint64_t v14 = sub_1B2D39F0C(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  return a7(v13, &v17, a2, a3, v12, v13, a5, v14, a6);
}

uint64_t sub_1B2D391F8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, char *, uint64_t, uint64_t, void, uint64_t, uint64_t, void, uint64_t))
{
  char v11 = *a2;
  return a10(a1, &v11, a3, a4, a5 & 1, a6, a7, *(void *)(a8 + 8), a9);
}

uint64_t LifeEventView.activityEvents<A>(overlapping:from:order:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2D392D0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B321AC);
}

{
  return sub_1B2D392D0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B321E0);
}

{
  return sub_1B2D392D0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32214);
}

{
  return sub_1B2D392D0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32248);
}

{
  return sub_1B2D392D0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B3227C);
}

uint64_t LifeEventView.activityEvents<A, B>(of:overlapping:from:order:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B2D394F8(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, void))sub_1B2B321AC);
}

{
  return sub_1B2D394F8(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, void))sub_1B2B321E0);
}

{
  return sub_1B2D394F8(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, void))sub_1B2B32214);
}

{
  return sub_1B2D394F8(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, void))sub_1B2B32248);
}

{
  return sub_1B2D394F8(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, void))sub_1B2B3227C);
}

uint64_t sub_1B2D392D0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = a3 & 1;
  uint64_t v11 = type metadata accessor for CustomGraphActivityEvent(0);
  uint64_t v12 = sub_1B2D39F0C(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  return a6(v11, a1, a2, v10, v11, a4, v12, a5);
}

uint64_t sub_1B2D394F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, void))
{
  return a9(a1, a2, a3, a4 & 1, a5, a6, *(void *)(a7 + 8));
}

uint64_t LifeEventView.enumerateActivityEvents<A>(from:order:using:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v13 = a2 & 1;
  uint64_t v14 = type metadata accessor for CustomGraphActivityEvent(0);
  uint64_t v15 = sub_1B2D39F0C(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  return sub_1B2B32380(v14, a1, v13, a3, a4, v14, a5, v15, a6, a7);
}

uint64_t LifeEventView.enumerateActivityEvents<A, B>(of:from:order:using:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1B2B32380(a1, a2, a3 & 1, a4, a5, a6, a7, *(void *)(a8 + 8), a9, a10);
}

uint64_t LifeEventView.enumerateActivityEvents<A>(whose:in:from:order:using:)(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1B2D396E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B3245C);
}

{
  return sub_1B2D396E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32494);
}

{
  return sub_1B2D396E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B324CC);
}

{
  return sub_1B2D396E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32504);
}

{
  return sub_1B2D396E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B3253C);
}

uint64_t LifeEventView.enumerateActivityEvents<A, B>(of:whose:in:from:order:using:)()
{
  __n128 v0 = sub_1B29A1B84();
  return sub_1B2D3A3A4(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0, v12, v13, v14, v10, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, void))sub_1B2B3245C);
}

{
  __n128 v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __n128 v0 = sub_1B29A1B84();
  return sub_1B2D3A3A4(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0, v12, v13, v14, v10, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, void))sub_1B2B32494);
}

{
  __n128 v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __n128 v0 = sub_1B29A1B84();
  return sub_1B2D3A3A4(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0, v12, v13, v14, v10, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, void))sub_1B2B324CC);
}

{
  __n128 v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __n128 v0 = sub_1B29A1B84();
  return sub_1B2D3A3A4(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0, v12, v13, v14, v10, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, void))sub_1B2B32504);
}

{
  __n128 v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __n128 v0 = sub_1B29A1B84();
  return sub_1B2D3A3A4(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0, v12, v13, v14, v10, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, void))sub_1B2B3253C);
}

uint64_t sub_1B2D396E0(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v14 = *a1;
  uint64_t v15 = a4 & 1;
  uint64_t v16 = type metadata accessor for CustomGraphActivityEvent(0);
  char v21 = v14;
  uint64_t v17 = sub_1B2D39F0C(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  return a10(v16, &v21, a2, a3, v15, a5, a6, v16, a7, v17, a8, a9);
}

uint64_t sub_1B2D39950(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t, char *, uint64_t, uint64_t, void))
{
  char v14 = *a2;
  return a13(a1, &v14, a3, a4, a5 & 1);
}

uint64_t LifeEventView.enumerateActivityEvents<A>(overlapping:from:order:using:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B2D39A4C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32660);
}

{
  return sub_1B2D39A4C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B3269C);
}

{
  return sub_1B2D39A4C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B326D8);
}

{
  return sub_1B2D39A4C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32714);
}

{
  return sub_1B2D39A4C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2B32750);
}

uint64_t LifeEventView.enumerateActivityEvents<A, B>(of:overlapping:from:order:using:)()
{
  __n128 v0 = sub_1B29A0978();
  return sub_1B2D39CBC(v1, v2, v3, v4, v5, v6, v7, v8, v0.n128_i64[0], v0.n128_i64[1], v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1B2B32660);
}

{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __n128 v0 = sub_1B29A0978();
  return sub_1B2D39CBC(v1, v2, v3, v4, v5, v6, v7, v8, v0.n128_i64[0], v0.n128_i64[1], v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1B2B3269C);
}

{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __n128 v0 = sub_1B29A0978();
  return sub_1B2D39CBC(v1, v2, v3, v4, v5, v6, v7, v8, v0.n128_i64[0], v0.n128_i64[1], v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1B2B326D8);
}

{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __n128 v0 = sub_1B29A0978();
  return sub_1B2D39CBC(v1, v2, v3, v4, v5, v6, v7, v8, v0.n128_i64[0], v0.n128_i64[1], v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1B2B32714);
}

{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __n128 v0 = sub_1B29A0978();
  return sub_1B2D39CBC(v1, v2, v3, v4, v5, v6, v7, v8, v0.n128_i64[0], v0.n128_i64[1], v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1B2B32750);
}

uint64_t sub_1B2D39A4C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15 = a3 & 1;
  uint64_t v16 = type metadata accessor for CustomGraphActivityEvent(0);
  uint64_t v17 = sub_1B2D39F0C(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  return a9(v16, a1, a2, v15, a4, a5, v16, a6, v17, a7, a8);
}

uint64_t sub_1B2D39CBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t, void))
{
  return a12(a1, a2, a3, a4 & 1);
}

uint64_t LifeEventView.latestActivityEvent<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2D39D88(a1, a2, a3, sub_1B2B32864);
}

uint64_t LifeEventView.latestActivityEvent<A, B>(of:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B2B54FA8(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B2B32864);
}

uint64_t LifeEventView.earliestActivityEvent<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2D39D88(a1, a2, a3, sub_1B2B32890);
}

uint64_t sub_1B2D39D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = type metadata accessor for CustomGraphActivityEvent(0);
  uint64_t v9 = sub_1B2D39F0C(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  return a4(v8, a1, v8, a2, v9, a3);
}

uint64_t LifeEventView.earliestActivityEvent<A, B>(of:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B2B54FA8(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1B2B32890);
}

uint64_t LifeEventView.deinit()
{
  swift_release();
  return v0;
}

uint64_t LifeEventView.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2D39EC4()
{
  return sub_1B2D39F0C(&qword_1E9C38570, (void (*)(uint64_t))type metadata accessor for LifeEventEntryView);
}

uint64_t sub_1B2D39F0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for LifeEventView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LifeEventView);
}

uint64_t dispatch thunk of LifeEventView.__allocating_init(viewService:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1B2D39F94()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2D3A1B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2D3A3A4@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t, char *, uint64_t, uint64_t, void))
{
  return sub_1B2D39950(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_i64[0], a10.n128_i64[1], a9, a14, a15);
}

void sub_1B2D3A3BC()
{
  sub_1B299B720();
  sub_1B2ABB764();
  sub_1B29A3EB4((uint64_t *)&unk_1E9C39D20);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A4878(v5, v36);
  MEMORY[0x1F4188790](v6);
  sub_1B2B708C0();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C42678);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2B705D4();
  MEMORY[0x1F4188790](v9);
  sub_1B2D3F6AC();
  if (v10 || (sub_1B2D3F718(), !v10))
  {
LABEL_36:
    sub_1B2D3F78C();
    sub_1B299B738();
    return;
  }
  sub_1B299DD9C();
  uint64_t v11 = (uint64_t *)&unk_1E9C425D8;
  while (1)
  {
    if (v2)
    {
      sub_1B29A52EC();
LABEL_7:
      uint64_t v12 = sub_1B29A0DA4();
      uint64_t v13 = sub_1B29A1FF0(v12);
      v14(v13);
      sub_1B2D3F5D8();
      goto LABEL_30;
    }
    sub_1B2D3F780();
    if (v15)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1B2D3F6FC();
    char v1 = v37;
    if (v16 != v15)
    {
      sub_1B2D3F774();
      if (v18) {
        goto LABEL_12;
      }
      sub_1B299EABC(v17);
      if (v16 != v15)
      {
        sub_1B2D3F75C();
        if (v20) {
          goto LABEL_16;
        }
        sub_1B2D3F6E8();
        if (v16 != v15) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v25 = sub_1B29A3EB4(v11);
    sub_1B2D3F648(v25);
LABEL_30:
    sub_1B2CF6A7C();
    sub_1B2D3F484();
    uint64_t v26 = sub_1B29A3EB4(v11);
    sub_1B2D3F620(v26);
    if (v10) {
      goto LABEL_36;
    }
    uint64_t v27 = sub_1B2D3F5B0();
    v28(v27);
    sub_1B29DB110(v0);
    if ((v29 & 1) == 0)
    {
      uint64_t v34 = sub_1B2D3F670();
      v35(v34);
      goto LABEL_36;
    }
    uint64_t v30 = sub_1B2D3F57C();
    v31(v30);
    sub_1B29D22C4(&qword_1E9C430C8, (uint64_t *)&unk_1E9C39D20);
    sub_1B2D3F688();
    uint64_t v32 = sub_1B299FB10();
    v0(v32);
    uint64_t v33 = sub_1B2D3F6C0();
    v0(v33);
    uint64_t v11 = v3;
    if ((v1 & 1) == 0) {
      goto LABEL_36;
    }
  }
  sub_1B2D3F768();
  if (v22)
  {
    uint64_t v17 = v21;
    goto LABEL_12;
  }
  sub_1B2D3F6D4();
  if (v16 == v15) {
    goto LABEL_29;
  }
  sub_1B2D3F7A4();
  if (v23)
  {
LABEL_16:
    uint64_t v17 = v19;
LABEL_12:
    sub_1B2D3F604(v17);
    goto LABEL_7;
  }
  while (!__OFADD__(v19, 1))
  {
    sub_1B2D3F6FC();
    if (v16 == v15)
    {
      sub_1B2D3F798();
      goto LABEL_29;
    }
    sub_1B2D3F708();
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1B2D3A604()
{
  sub_1B299B720();
  sub_1B2ABB764();
  sub_1B29A3EB4((uint64_t *)&unk_1E9C39D20);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A4878(v5, v36);
  MEMORY[0x1F4188790](v6);
  sub_1B2B708C0();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C42698);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2B705D4();
  MEMORY[0x1F4188790](v9);
  sub_1B2D3F6AC();
  if (v10 || (sub_1B2D3F718(), !v10))
  {
LABEL_36:
    sub_1B2D3F78C();
    sub_1B299B738();
    return;
  }
  sub_1B299DD9C();
  uint64_t v11 = (uint64_t *)&unk_1E9C425D0;
  while (1)
  {
    if (v2)
    {
      sub_1B29A52EC();
LABEL_7:
      uint64_t v12 = sub_1B29A0DA4();
      uint64_t v13 = sub_1B29A1FF0(v12);
      v14(v13);
      sub_1B2D3F5D8();
      goto LABEL_30;
    }
    sub_1B2D3F780();
    if (v15)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1B2D3F6FC();
    char v1 = v37;
    if (v16 != v15)
    {
      sub_1B2D3F774();
      if (v18) {
        goto LABEL_12;
      }
      sub_1B299EABC(v17);
      if (v16 != v15)
      {
        sub_1B2D3F75C();
        if (v20) {
          goto LABEL_16;
        }
        sub_1B2D3F6E8();
        if (v16 != v15) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v25 = sub_1B29A3EB4(v11);
    sub_1B2D3F648(v25);
LABEL_30:
    sub_1B2CF6A7C();
    sub_1B2D3F484();
    uint64_t v26 = sub_1B29A3EB4(v11);
    sub_1B2D3F620(v26);
    if (v10) {
      goto LABEL_36;
    }
    uint64_t v27 = sub_1B2D3F5B0();
    v28(v27);
    sub_1B29DB110(v0);
    if ((v29 & 1) == 0)
    {
      uint64_t v34 = sub_1B2D3F670();
      v35(v34);
      goto LABEL_36;
    }
    uint64_t v30 = sub_1B2D3F57C();
    v31(v30);
    sub_1B29D22C4(&qword_1E9C430C8, (uint64_t *)&unk_1E9C39D20);
    sub_1B2D3F688();
    uint64_t v32 = sub_1B299FB10();
    v0(v32);
    uint64_t v33 = sub_1B2D3F6C0();
    v0(v33);
    uint64_t v11 = v3;
    if ((v1 & 1) == 0) {
      goto LABEL_36;
    }
  }
  sub_1B2D3F768();
  if (v22)
  {
    uint64_t v17 = v21;
    goto LABEL_12;
  }
  sub_1B2D3F6D4();
  if (v16 == v15) {
    goto LABEL_29;
  }
  sub_1B2D3F7A4();
  if (v23)
  {
LABEL_16:
    uint64_t v17 = v19;
LABEL_12:
    sub_1B2D3F604(v17);
    goto LABEL_7;
  }
  while (!__OFADD__(v19, 1))
  {
    sub_1B2D3F6FC();
    if (v16 == v15)
    {
      sub_1B2D3F798();
      goto LABEL_29;
    }
    sub_1B2D3F708();
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1B2D3A84C()
{
  sub_1B299B720();
  sub_1B2ABB764();
  sub_1B29A3EB4((uint64_t *)&unk_1E9C39D20);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A4878(v5, v36);
  MEMORY[0x1F4188790](v6);
  sub_1B2B708C0();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C426B0);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2B705D4();
  MEMORY[0x1F4188790](v9);
  sub_1B2D3F6AC();
  if (v10 || (sub_1B2D3F718(), !v10))
  {
LABEL_36:
    sub_1B2D3F78C();
    sub_1B299B738();
    return;
  }
  sub_1B299DD9C();
  uint64_t v11 = (uint64_t *)&unk_1E9C425C8;
  while (1)
  {
    if (v2)
    {
      sub_1B29A52EC();
LABEL_7:
      uint64_t v12 = sub_1B29A0DA4();
      uint64_t v13 = sub_1B29A1FF0(v12);
      v14(v13);
      sub_1B2D3F5D8();
      goto LABEL_30;
    }
    sub_1B2D3F780();
    if (v15)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1B2D3F6FC();
    char v1 = v37;
    if (v16 != v15)
    {
      sub_1B2D3F774();
      if (v18) {
        goto LABEL_12;
      }
      sub_1B299EABC(v17);
      if (v16 != v15)
      {
        sub_1B2D3F75C();
        if (v20) {
          goto LABEL_16;
        }
        sub_1B2D3F6E8();
        if (v16 != v15) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v25 = sub_1B29A3EB4(v11);
    sub_1B2D3F648(v25);
LABEL_30:
    sub_1B2CF6A7C();
    sub_1B2D3F484();
    uint64_t v26 = sub_1B29A3EB4(v11);
    sub_1B2D3F620(v26);
    if (v10) {
      goto LABEL_36;
    }
    uint64_t v27 = sub_1B2D3F5B0();
    v28(v27);
    sub_1B29DB110(v0);
    if ((v29 & 1) == 0)
    {
      uint64_t v34 = sub_1B2D3F670();
      v35(v34);
      goto LABEL_36;
    }
    uint64_t v30 = sub_1B2D3F57C();
    v31(v30);
    sub_1B29D22C4(&qword_1E9C430C8, (uint64_t *)&unk_1E9C39D20);
    sub_1B2D3F688();
    uint64_t v32 = sub_1B299FB10();
    v0(v32);
    uint64_t v33 = sub_1B2D3F6C0();
    v0(v33);
    uint64_t v11 = v3;
    if ((v1 & 1) == 0) {
      goto LABEL_36;
    }
  }
  sub_1B2D3F768();
  if (v22)
  {
    uint64_t v17 = v21;
    goto LABEL_12;
  }
  sub_1B2D3F6D4();
  if (v16 == v15) {
    goto LABEL_29;
  }
  sub_1B2D3F7A4();
  if (v23)
  {
LABEL_16:
    uint64_t v17 = v19;
LABEL_12:
    sub_1B2D3F604(v17);
    goto LABEL_7;
  }
  while (!__OFADD__(v19, 1))
  {
    sub_1B2D3F6FC();
    if (v16 == v15)
    {
      sub_1B2D3F798();
      goto LABEL_29;
    }
    sub_1B2D3F708();
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1B2D3AA94()
{
  sub_1B299B720();
  sub_1B2ABB764();
  sub_1B29A3EB4(&qword_1E9C3D770);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A4878(v5, v36);
  MEMORY[0x1F4188790](v6);
  sub_1B2B708C0();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C42690);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2B705D4();
  MEMORY[0x1F4188790](v9);
  sub_1B2D3F6AC();
  if (v10 || (sub_1B2D3F718(), !v10))
  {
LABEL_36:
    sub_1B2D3F78C();
    sub_1B299B738();
    return;
  }
  sub_1B299DD9C();
  uint64_t v11 = (uint64_t *)&unk_1E9C42680;
  while (1)
  {
    if (v2)
    {
      sub_1B29A52EC();
LABEL_7:
      uint64_t v12 = sub_1B29A0DA4();
      uint64_t v13 = sub_1B29A1FF0(v12);
      v14(v13);
      sub_1B2D3F5D8();
      goto LABEL_30;
    }
    sub_1B2D3F780();
    if (v15)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1B2D3F6FC();
    char v1 = v37;
    if (v16 != v15)
    {
      sub_1B2D3F774();
      if (v18) {
        goto LABEL_12;
      }
      sub_1B299EABC(v17);
      if (v16 != v15)
      {
        sub_1B2D3F75C();
        if (v20) {
          goto LABEL_16;
        }
        sub_1B2D3F6E8();
        if (v16 != v15) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v25 = sub_1B29A3EB4(v11);
    sub_1B2D3F648(v25);
LABEL_30:
    sub_1B2CF6A7C();
    sub_1B2D3F484();
    uint64_t v26 = sub_1B29A3EB4(v11);
    sub_1B2D3F620(v26);
    if (v10) {
      goto LABEL_36;
    }
    uint64_t v27 = sub_1B2D3F5B0();
    v28(v27);
    sub_1B29DB110(v0);
    if ((v29 & 1) == 0)
    {
      uint64_t v34 = sub_1B2D3F670();
      v35(v34);
      goto LABEL_36;
    }
    uint64_t v30 = sub_1B2D3F57C();
    v31(v30);
    sub_1B29D22C4(&qword_1E9C430C0, &qword_1E9C3D770);
    sub_1B2D3F688();
    uint64_t v32 = sub_1B299FB10();
    v0(v32);
    uint64_t v33 = sub_1B2D3F6C0();
    v0(v33);
    uint64_t v11 = v3;
    if ((v1 & 1) == 0) {
      goto LABEL_36;
    }
  }
  sub_1B2D3F768();
  if (v22)
  {
    uint64_t v17 = v21;
    goto LABEL_12;
  }
  sub_1B2D3F6D4();
  if (v16 == v15) {
    goto LABEL_29;
  }
  sub_1B2D3F7A4();
  if (v23)
  {
LABEL_16:
    uint64_t v17 = v19;
LABEL_12:
    sub_1B2D3F604(v17);
    goto LABEL_7;
  }
  while (!__OFADD__(v19, 1))
  {
    sub_1B2D3F6FC();
    if (v16 == v15)
    {
      sub_1B2D3F798();
      goto LABEL_29;
    }
    sub_1B2D3F708();
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1B2D3ACDC()
{
  sub_1B299B720();
  sub_1B2ABB764();
  sub_1B29A3EB4(&qword_1E9C3D770);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A4878(v5, v36);
  MEMORY[0x1F4188790](v6);
  sub_1B2B708C0();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C42668);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2B705D4();
  MEMORY[0x1F4188790](v9);
  sub_1B2D3F6AC();
  if (v10 || (sub_1B2D3F718(), !v10))
  {
LABEL_36:
    sub_1B2D3F78C();
    sub_1B299B738();
    return;
  }
  sub_1B299DD9C();
  uint64_t v11 = (uint64_t *)&unk_1E9C42658;
  while (1)
  {
    if (v2)
    {
      sub_1B29A52EC();
LABEL_7:
      uint64_t v12 = sub_1B29A0DA4();
      uint64_t v13 = sub_1B29A1FF0(v12);
      v14(v13);
      sub_1B2D3F5D8();
      goto LABEL_30;
    }
    sub_1B2D3F780();
    if (v15)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1B2D3F6FC();
    char v1 = v37;
    if (v16 != v15)
    {
      sub_1B2D3F774();
      if (v18) {
        goto LABEL_12;
      }
      sub_1B299EABC(v17);
      if (v16 != v15)
      {
        sub_1B2D3F75C();
        if (v20) {
          goto LABEL_16;
        }
        sub_1B2D3F6E8();
        if (v16 != v15) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v25 = sub_1B29A3EB4(v11);
    sub_1B2D3F648(v25);
LABEL_30:
    sub_1B2CF6A7C();
    sub_1B2D3F484();
    uint64_t v26 = sub_1B29A3EB4(v11);
    sub_1B2D3F620(v26);
    if (v10) {
      goto LABEL_36;
    }
    uint64_t v27 = sub_1B2D3F5B0();
    v28(v27);
    sub_1B29DB110(v0);
    if ((v29 & 1) == 0)
    {
      uint64_t v34 = sub_1B2D3F670();
      v35(v34);
      goto LABEL_36;
    }
    uint64_t v30 = sub_1B2D3F57C();
    v31(v30);
    sub_1B29D22C4(&qword_1E9C430C0, &qword_1E9C3D770);
    sub_1B2D3F688();
    uint64_t v32 = sub_1B299FB10();
    v0(v32);
    uint64_t v33 = sub_1B2D3F6C0();
    v0(v33);
    uint64_t v11 = v3;
    if ((v1 & 1) == 0) {
      goto LABEL_36;
    }
  }
  sub_1B2D3F768();
  if (v22)
  {
    uint64_t v17 = v21;
    goto LABEL_12;
  }
  sub_1B2D3F6D4();
  if (v16 == v15) {
    goto LABEL_29;
  }
  sub_1B2D3F7A4();
  if (v23)
  {
LABEL_16:
    uint64_t v17 = v19;
LABEL_12:
    sub_1B2D3F604(v17);
    goto LABEL_7;
  }
  while (!__OFADD__(v19, 1))
  {
    sub_1B2D3F6FC();
    if (v16 == v15)
    {
      sub_1B2D3F798();
      goto LABEL_29;
    }
    sub_1B2D3F708();
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1B2D3AF24()
{
  sub_1B299B720();
  sub_1B2ABB764();
  sub_1B29A3EB4(&qword_1E9C3D770);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A4878(v5, v36);
  MEMORY[0x1F4188790](v6);
  sub_1B2B708C0();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C426A8);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2B705D4();
  MEMORY[0x1F4188790](v9);
  sub_1B2D3F6AC();
  if (v10 || (sub_1B2D3F718(), !v10))
  {
LABEL_36:
    sub_1B2D3F78C();
    sub_1B299B738();
    return;
  }
  sub_1B299DD9C();
  uint64_t v11 = (uint64_t *)&unk_1E9C426A0;
  while (1)
  {
    if (v2)
    {
      sub_1B29A52EC();
LABEL_7:
      uint64_t v12 = sub_1B29A0DA4();
      uint64_t v13 = sub_1B29A1FF0(v12);
      v14(v13);
      sub_1B2D3F5D8();
      goto LABEL_30;
    }
    sub_1B2D3F780();
    if (v15)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1B2D3F6FC();
    char v1 = v37;
    if (v16 != v15)
    {
      sub_1B2D3F774();
      if (v18) {
        goto LABEL_12;
      }
      sub_1B299EABC(v17);
      if (v16 != v15)
      {
        sub_1B2D3F75C();
        if (v20) {
          goto LABEL_16;
        }
        sub_1B2D3F6E8();
        if (v16 != v15) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v25 = sub_1B29A3EB4(v11);
    sub_1B2D3F648(v25);
LABEL_30:
    sub_1B2CF6A7C();
    sub_1B2D3F484();
    uint64_t v26 = sub_1B29A3EB4(v11);
    sub_1B2D3F620(v26);
    if (v10) {
      goto LABEL_36;
    }
    uint64_t v27 = sub_1B2D3F5B0();
    v28(v27);
    sub_1B29DB110(v0);
    if ((v29 & 1) == 0)
    {
      uint64_t v34 = sub_1B2D3F670();
      v35(v34);
      goto LABEL_36;
    }
    uint64_t v30 = sub_1B2D3F57C();
    v31(v30);
    sub_1B29D22C4(&qword_1E9C430C0, &qword_1E9C3D770);
    sub_1B2D3F688();
    uint64_t v32 = sub_1B299FB10();
    v0(v32);
    uint64_t v33 = sub_1B2D3F6C0();
    v0(v33);
    uint64_t v11 = v3;
    if ((v1 & 1) == 0) {
      goto LABEL_36;
    }
  }
  sub_1B2D3F768();
  if (v22)
  {
    uint64_t v17 = v21;
    goto LABEL_12;
  }
  sub_1B2D3F6D4();
  if (v16 == v15) {
    goto LABEL_29;
  }
  sub_1B2D3F7A4();
  if (v23)
  {
LABEL_16:
    uint64_t v17 = v19;
LABEL_12:
    sub_1B2D3F604(v17);
    goto LABEL_7;
  }
  while (!__OFADD__(v19, 1))
  {
    sub_1B2D3F6FC();
    if (v16 == v15)
    {
      sub_1B2D3F798();
      goto LABEL_29;
    }
    sub_1B2D3F708();
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_1B2D3B16C(uint64_t a1, uint64_t a2)
{
  return sub_1B2D3B394(a1, a2, &unk_1E9C39D20, &unk_1E9C425A8, &unk_1E9C425A0, &qword_1E9C430C8);
}

uint64_t sub_1B2D3B190(uint64_t a1, uint64_t a2)
{
  return sub_1B2D3B1C0(a1, a2, sub_1B2D3A604);
}

uint64_t sub_1B2D3B1A8(uint64_t a1, uint64_t a2)
{
  return sub_1B2D3B1C0(a1, a2, sub_1B2D3A84C);
}

#error "1B2D3B2E4: call analysis failed (funcsize=108)"

uint64_t sub_1B2D3B370(uint64_t a1, uint64_t a2)
{
  return sub_1B2D3B394(a1, a2, &qword_1E9C3D770, &unk_1E9C42578, &unk_1E9C42570, &qword_1E9C430C0);
}

#error "1B2D3B6BC: call analysis failed (funcsize=267)"

void sub_1B2D3B7C0()
{
  sub_1B299B720();
  sub_1B2ABB764();
  sub_1B29A3EB4((uint64_t *)&unk_1E9C39D20);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A4878(v5, v36);
  MEMORY[0x1F4188790](v6);
  sub_1B2B708C0();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C42650);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2B705D4();
  MEMORY[0x1F4188790](v9);
  sub_1B2D3F6AC();
  if (v10 || (sub_1B2D3F718(), !v10))
  {
LABEL_36:
    sub_1B2D3F78C();
    sub_1B299B738();
    return;
  }
  sub_1B299DD9C();
  uint64_t v11 = (uint64_t *)&unk_1E9C425C0;
  while (1)
  {
    if (v2)
    {
      sub_1B29A52EC();
LABEL_7:
      uint64_t v12 = sub_1B29A0DA4();
      uint64_t v13 = sub_1B29A1FF0(v12);
      v14(v13);
      sub_1B2D3F5D8();
      goto LABEL_30;
    }
    sub_1B2D3F780();
    if (v15)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1B2D3F6FC();
    char v1 = v37;
    if (v16 != v15)
    {
      sub_1B2D3F774();
      if (v18) {
        goto LABEL_12;
      }
      sub_1B299EABC(v17);
      if (v16 != v15)
      {
        sub_1B2D3F75C();
        if (v20) {
          goto LABEL_16;
        }
        sub_1B2D3F6E8();
        if (v16 != v15) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v25 = sub_1B29A3EB4(v11);
    sub_1B2D3F648(v25);
LABEL_30:
    sub_1B2CF6A7C();
    sub_1B2D3F484();
    uint64_t v26 = sub_1B29A3EB4(v11);
    sub_1B2D3F620(v26);
    if (v10) {
      goto LABEL_36;
    }
    uint64_t v27 = sub_1B2D3F5B0();
    v28(v27);
    sub_1B29DB110(v0);
    if ((v29 & 1) == 0)
    {
      uint64_t v34 = sub_1B2D3F670();
      v35(v34);
      goto LABEL_36;
    }
    uint64_t v30 = sub_1B2D3F57C();
    v31(v30);
    sub_1B29D22C4(&qword_1E9C430C8, (uint64_t *)&unk_1E9C39D20);
    sub_1B2D3F688();
    uint64_t v32 = sub_1B299FB10();
    v0(v32);
    uint64_t v33 = sub_1B2D3F6C0();
    v0(v33);
    uint64_t v11 = v3;
    if ((v1 & 1) == 0) {
      goto LABEL_36;
    }
  }
  sub_1B2D3F768();
  if (v22)
  {
    uint64_t v17 = v21;
    goto LABEL_12;
  }
  sub_1B2D3F6D4();
  if (v16 == v15) {
    goto LABEL_29;
  }
  sub_1B2D3F7A4();
  if (v23)
  {
LABEL_16:
    uint64_t v17 = v19;
LABEL_12:
    sub_1B2D3F604(v17);
    goto LABEL_7;
  }
  while (!__OFADD__(v19, 1))
  {
    sub_1B2D3F6FC();
    if (v16 == v15)
    {
      sub_1B2D3F798();
      goto LABEL_29;
    }
    sub_1B2D3F708();
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1B2D3BA08()
{
  sub_1B299B720();
  sub_1B2ABB764();
  sub_1B29A3EB4(&qword_1E9C3D770);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A4878(v5, v36);
  MEMORY[0x1F4188790](v6);
  sub_1B2B708C0();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C42620);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2B705D4();
  MEMORY[0x1F4188790](v9);
  sub_1B2D3F6AC();
  if (v10 || (sub_1B2D3F718(), !v10))
  {
LABEL_36:
    sub_1B2D3F78C();
    sub_1B299B738();
    return;
  }
  sub_1B299DD9C();
  uint64_t v11 = (uint64_t *)&unk_1E9C42610;
  while (1)
  {
    if (v2)
    {
      sub_1B29A52EC();
LABEL_7:
      uint64_t v12 = sub_1B29A0DA4();
      uint64_t v13 = sub_1B29A1FF0(v12);
      v14(v13);
      sub_1B2D3F5D8();
      goto LABEL_30;
    }
    sub_1B2D3F780();
    if (v15)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1B2D3F6FC();
    char v1 = v37;
    if (v16 != v15)
    {
      sub_1B2D3F774();
      if (v18) {
        goto LABEL_12;
      }
      sub_1B299EABC(v17);
      if (v16 != v15)
      {
        sub_1B2D3F75C();
        if (v20) {
          goto LABEL_16;
        }
        sub_1B2D3F6E8();
        if (v16 != v15) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v25 = sub_1B29A3EB4(v11);
    sub_1B2D3F648(v25);
LABEL_30:
    sub_1B2CF6A7C();
    sub_1B2D3F484();
    uint64_t v26 = sub_1B29A3EB4(v11);
    sub_1B2D3F620(v26);
    if (v10) {
      goto LABEL_36;
    }
    uint64_t v27 = sub_1B2D3F5B0();
    v28(v27);
    sub_1B29DB110(v0);
    if ((v29 & 1) == 0)
    {
      uint64_t v34 = sub_1B2D3F670();
      v35(v34);
      goto LABEL_36;
    }
    uint64_t v30 = sub_1B2D3F57C();
    v31(v30);
    sub_1B29D22C4(&qword_1E9C430C0, &qword_1E9C3D770);
    sub_1B2D3F688();
    uint64_t v32 = sub_1B299FB10();
    v0(v32);
    uint64_t v33 = sub_1B2D3F6C0();
    v0(v33);
    uint64_t v11 = v3;
    if ((v1 & 1) == 0) {
      goto LABEL_36;
    }
  }
  sub_1B2D3F768();
  if (v22)
  {
    uint64_t v17 = v21;
    goto LABEL_12;
  }
  sub_1B2D3F6D4();
  if (v16 == v15) {
    goto LABEL_29;
  }
  sub_1B2D3F7A4();
  if (v23)
  {
LABEL_16:
    uint64_t v17 = v19;
LABEL_12:
    sub_1B2D3F604(v17);
    goto LABEL_7;
  }
  while (!__OFADD__(v19, 1))
  {
    sub_1B2D3F6FC();
    if (v16 == v15)
    {
      sub_1B2D3F798();
      goto LABEL_29;
    }
    sub_1B2D3F708();
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1B2D3BC50()
{
  sub_1B299B720();
  sub_1B2ABB764();
  sub_1B29A3EB4(&qword_1E9C3D770);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A4878(v5, v36);
  MEMORY[0x1F4188790](v6);
  sub_1B2B708C0();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C42608);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2B705D4();
  MEMORY[0x1F4188790](v9);
  sub_1B2D3F6AC();
  if (v10 || (sub_1B2D3F718(), !v10))
  {
LABEL_36:
    sub_1B2D3F78C();
    sub_1B299B738();
    return;
  }
  sub_1B299DD9C();
  uint64_t v11 = (uint64_t *)&unk_1E9C425F8;
  while (1)
  {
    if (v2)
    {
      sub_1B29A52EC();
LABEL_7:
      uint64_t v12 = sub_1B29A0DA4();
      uint64_t v13 = sub_1B29A1FF0(v12);
      v14(v13);
      sub_1B2D3F5D8();
      goto LABEL_30;
    }
    sub_1B2D3F780();
    if (v15)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1B2D3F6FC();
    char v1 = v37;
    if (v16 != v15)
    {
      sub_1B2D3F774();
      if (v18) {
        goto LABEL_12;
      }
      sub_1B299EABC(v17);
      if (v16 != v15)
      {
        sub_1B2D3F75C();
        if (v20) {
          goto LABEL_16;
        }
        sub_1B2D3F6E8();
        if (v16 != v15) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v25 = sub_1B29A3EB4(v11);
    sub_1B2D3F648(v25);
LABEL_30:
    sub_1B2CF6A7C();
    sub_1B2D3F484();
    uint64_t v26 = sub_1B29A3EB4(v11);
    sub_1B2D3F620(v26);
    if (v10) {
      goto LABEL_36;
    }
    uint64_t v27 = sub_1B2D3F5B0();
    v28(v27);
    sub_1B29DB110(v0);
    if ((v29 & 1) == 0)
    {
      uint64_t v34 = sub_1B2D3F670();
      v35(v34);
      goto LABEL_36;
    }
    uint64_t v30 = sub_1B2D3F57C();
    v31(v30);
    sub_1B29D22C4(&qword_1E9C430C0, &qword_1E9C3D770);
    sub_1B2D3F688();
    uint64_t v32 = sub_1B299FB10();
    v0(v32);
    uint64_t v33 = sub_1B2D3F6C0();
    v0(v33);
    uint64_t v11 = v3;
    if ((v1 & 1) == 0) {
      goto LABEL_36;
    }
  }
  sub_1B2D3F768();
  if (v22)
  {
    uint64_t v17 = v21;
    goto LABEL_12;
  }
  sub_1B2D3F6D4();
  if (v16 == v15) {
    goto LABEL_29;
  }
  sub_1B2D3F7A4();
  if (v23)
  {
LABEL_16:
    uint64_t v17 = v19;
LABEL_12:
    sub_1B2D3F604(v17);
    goto LABEL_7;
  }
  while (!__OFADD__(v19, 1))
  {
    sub_1B2D3F6FC();
    if (v16 == v15)
    {
      sub_1B2D3F798();
      goto LABEL_29;
    }
    sub_1B2D3F708();
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1B2D3BE98()
{
  sub_1B299B720();
  sub_1B2ABB764();
  sub_1B29A3EB4(&qword_1E9C3D770);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A4878(v5, v36);
  MEMORY[0x1F4188790](v6);
  sub_1B2B708C0();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C425F0);
  uint64_t v8 = sub_1B299B0F0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B2B705D4();
  MEMORY[0x1F4188790](v9);
  sub_1B2D3F6AC();
  if (v10 || (sub_1B2D3F718(), !v10))
  {
LABEL_36:
    sub_1B2D3F78C();
    sub_1B299B738();
    return;
  }
  sub_1B299DD9C();
  uint64_t v11 = (uint64_t *)&unk_1E9C425E0;
  while (1)
  {
    if (v2)
    {
      sub_1B29A52EC();
LABEL_7:
      uint64_t v12 = sub_1B29A0DA4();
      uint64_t v13 = sub_1B29A1FF0(v12);
      v14(v13);
      sub_1B2D3F5D8();
      goto LABEL_30;
    }
    sub_1B2D3F780();
    if (v15)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1B2D3F6FC();
    char v1 = v37;
    if (v16 != v15)
    {
      sub_1B2D3F774();
      if (v18) {
        goto LABEL_12;
      }
      sub_1B299EABC(v17);
      if (v16 != v15)
      {
        sub_1B2D3F75C();
        if (v20) {
          goto LABEL_16;
        }
        sub_1B2D3F6E8();
        if (v16 != v15) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v25 = sub_1B29A3EB4(v11);
    sub_1B2D3F648(v25);
LABEL_30:
    sub_1B2CF6A7C();
    sub_1B2D3F484();
    uint64_t v26 = sub_1B29A3EB4(v11);
    sub_1B2D3F620(v26);
    if (v10) {
      goto LABEL_36;
    }
    uint64_t v27 = sub_1B2D3F5B0();
    v28(v27);
    sub_1B29DB110(v0);
    if ((v29 & 1) == 0)
    {
      uint64_t v34 = sub_1B2D3F670();
      v35(v34);
      goto LABEL_36;
    }
    uint64_t v30 = sub_1B2D3F57C();
    v31(v30);
    sub_1B29D22C4(&qword_1E9C430C0, &qword_1E9C3D770);
    sub_1B2D3F688();
    uint64_t v32 = sub_1B299FB10();
    v0(v32);
    uint64_t v33 = sub_1B2D3F6C0();
    v0(v33);
    uint64_t v11 = v3;
    if ((v1 & 1) == 0) {
      goto LABEL_36;
    }
  }
  sub_1B2D3F768();
  if (v22)
  {
    uint64_t v17 = v21;
    goto LABEL_12;
  }
  sub_1B2D3F6D4();
  if (v16 == v15) {
    goto LABEL_29;
  }
  sub_1B2D3F7A4();
  if (v23)
  {
LABEL_16:
    uint64_t v17 = v19;
LABEL_12:
    sub_1B2D3F604(v17);
    goto LABEL_7;
  }
  while (!__OFADD__(v19, 1))
  {
    sub_1B2D3F6FC();
    if (v16 == v15)
    {
      sub_1B2D3F798();
      goto LABEL_29;
    }
    sub_1B2D3F708();
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1B2D3C0E0(uint64_t a1, uint64_t a2)
{
}

void sub_1B2D3C0F8(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return;
  }
  sub_1B2D3F7D4();
  if (!v6) {
    return;
  }
  uint64_t v7 = v5;
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 64;
  sub_1B2CCF0B4();
  int64_t v11 = v10 >> 6;
  while (1)
  {
    if (v2)
    {
      sub_1B29A473C();
      unint64_t v13 = v12 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      return;
    }
    unint64_t v15 = *(void *)(v9 + 8 * v14);
    ++v8;
    if (!v15)
    {
      uint64_t v8 = v14 + 1;
      if (v14 + 1 >= v11) {
        return;
      }
      unint64_t v15 = *(void *)(v9 + 8 * v8);
      if (!v15)
      {
        uint64_t v8 = v14 + 2;
        if (v14 + 2 >= v11) {
          return;
        }
        unint64_t v15 = *(void *)(v9 + 8 * v8);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v2 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_21:
    double v17 = *(double *)(*(void *)(a1 + 56) + 8 * v13);
    uint64_t v18 = v7(*(unsigned __int8 *)(*(void *)(a1 + 48) + v13));
    if ((v19 & 1) == 0 || *(double *)(*(void *)(a2 + 56) + 8 * v18) != v17) {
      return;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v11) {
    return;
  }
  unint64_t v15 = *(void *)(v9 + 8 * v16);
  if (v15)
  {
    uint64_t v8 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v8 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v8 >= v11) {
      return;
    }
    unint64_t v15 = *(void *)(v9 + 8 * v8);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

void sub_1B2D3C244()
{
  sub_1B299B720();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for CodableLocation();
  uint64_t v36 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  sub_1B29A0498();
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C430B8);
  uint64_t v9 = sub_1B299B0F0(v8);
  MEMORY[0x1F4188790](v9);
  sub_1B2CCF154();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v32 - v11;
  if (v6 == v4 || *(void *)(v6 + 16) != *(void *)(v4 + 16))
  {
LABEL_28:
    sub_1B299B738();
    return;
  }
  uint64_t v37 = 0;
  uint64_t v35 = v6;
  sub_1B2CCF0B4();
  uint64_t v33 = v6 + 64;
  int64_t v34 = v13 >> 6;
  uint64_t v32 = (v13 >> 6) - 1;
  uint64_t v14 = (uint64_t *)&unk_1E9C42738;
  while (1)
  {
    if (v2)
    {
      sub_1B29A473C();
      unint64_t v16 = v15 | (v37 << 6);
LABEL_6:
      uint64_t v17 = v35;
      sub_1B2B118F0(*(void *)(v35 + 48) + *(void *)(v36 + 72) * v16, v1);
      uint64_t v18 = *(void *)(*(void *)(v17 + 56) + 8 * v16);
      uint64_t v19 = sub_1B29A3EB4(v14);
      *(void *)(v1 + *(int *)(v19 + 48)) = v18;
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 0, 1, v19);
      goto LABEL_25;
    }
    uint64_t v20 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 < v34)
    {
      unint64_t v21 = *(void *)(v33 + 8 * v20);
      if (v21) {
        goto LABEL_10;
      }
      uint64_t v22 = v37 + 2;
      ++v37;
      if (v20 + 1 < v34)
      {
        unint64_t v21 = *(void *)(v33 + 8 * v22);
        if (v21) {
          goto LABEL_13;
        }
        uint64_t v37 = v20 + 1;
        if (v20 + 2 < v34)
        {
          unint64_t v21 = *(void *)(v33 + 8 * (v20 + 2));
          if (v21)
          {
            v20 += 2;
            goto LABEL_10;
          }
          uint64_t v22 = v20 + 3;
          uint64_t v37 = v20 + 2;
          if (v20 + 3 < v34) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v23 = sub_1B29A3EB4(v14);
    sub_1B2D3F83C(v23);
    uint64_t v2 = 0;
LABEL_25:
    sub_1B2D3F484();
    uint64_t v24 = v14;
    uint64_t v25 = sub_1B29A3EB4(v14);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v12, 1, v25) != 1)
    {
      uint64_t v26 = *(int *)(v25 + 48);
      sub_1B2B1188C((uint64_t)v12, v0);
      uint64_t v27 = *(void *)&v12[v26];
      unint64_t v28 = sub_1B29DB0B8();
      char v30 = v29;
      sub_1B2A2C090(v0);
      if (v30)
      {
        uint64_t v31 = *(void *)(*(void *)(v4 + 56) + 8 * v28);
        uint64_t v14 = v24;
        if (v31 == v27) {
          continue;
        }
      }
    }
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v33 + 8 * v22);
  if (v21)
  {
LABEL_13:
    uint64_t v20 = v22;
LABEL_10:
    uint64_t v2 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v37 = v20;
    goto LABEL_6;
  }
  while (1)
  {
    uint64_t v20 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v20 >= v34)
    {
      uint64_t v37 = v32;
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v33 + 8 * v20);
    ++v22;
    if (v21) {
      goto LABEL_10;
    }
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_1B2D3C55C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    uint64_t v14 = *(void *)(*(void *)(v2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B29DB174();
    char v16 = v15;
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_1B2CAB880(v17, v14);
    char v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

#error "1B2D3C85C: call analysis failed (funcsize=109)"

#error "1B2D3CA14: call analysis failed (funcsize=114)"

IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifierType_optional __swiftcall LiveGlobalKnowledge.ExternalIdentifierType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static LiveGlobalKnowledge.ExternalIdentifierType.allCases.getter()
{
  return &unk_1F0AB9970;
}

uint64_t LiveGlobalKnowledge.ExternalIdentifierType.rawValue.getter()
{
  uint64_t result = 0x44495F474BLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x61746164696B6957;
      break;
    case 2:
      uint64_t result = 0x44495F6D616441;
      break;
    case 3:
      uint64_t result = 0x44495F434D55;
      break;
    case 4:
      uint64_t result = 0x44495F7374617453;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2D3CBC4()
{
  return sub_1B29ACAC8();
}

uint64_t sub_1B2D3CBD0()
{
  return sub_1B29AE800(*v0);
}

uint64_t sub_1B2D3CBD8()
{
  return sub_1B2AA4BC0();
}

uint64_t sub_1B2D3CBE0()
{
  return sub_1B29F94D0();
}

IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifierType_optional sub_1B2D3CBE8(Swift::String *a1)
{
  return LiveGlobalKnowledge.ExternalIdentifierType.init(rawValue:)(*a1);
}

uint64_t sub_1B2D3CBF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LiveGlobalKnowledge.ExternalIdentifierType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B2D3CC1C(void *a1@<X8>)
{
  *a1 = &unk_1F0AB9970;
}

uint64_t sub_1B2D3CC2C()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2D3CC8C()
{
  return sub_1B2E82788();
}

uint64_t LiveGlobalKnowledge.ExternalIdentifier.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void LiveGlobalKnowledge.ExternalIdentifier.idType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t LiveGlobalKnowledge.ExternalIdentifier.stringValue.getter()
{
  return 0;
}

IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifier __swiftcall LiveGlobalKnowledge.ExternalIdentifier.init(id:idType:)(Swift::String id, IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifierType idType)
{
  char v3 = *(unsigned char *)idType;
  *(Swift::String *)uint64_t v2 = id;
  *(unsigned char *)(v2 + 16) = v3;
  result.id = id;
  result.idType = idType;
  return result;
}

IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifier_optional __swiftcall LiveGlobalKnowledge.ExternalIdentifier.init(id:idTypeValue:)(Swift::String id, Swift::String idTypeValue)
{
  object = id._object;
  uint64_t countAndFlagsBits = id._countAndFlagsBits;
  uint64_t v5 = v2;
  LOBYTE(v6) = LiveGlobalKnowledge.ExternalIdentifierType.init(rawValue:)(idTypeValue);
  char v9 = v10;
  if (v10 == 5)
  {
    uint64_t v6 = swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = 0;
    object = 0;
    char v9 = 0;
  }
  *(void *)uint64_t v5 = countAndFlagsBits;
  *(void *)(v5 + 8) = object;
  *(unsigned char *)(v5 + 16) = v9;
  result.value.id._object = v7;
  result.value.id._uint64_t countAndFlagsBits = v6;
  result.value.idType = v8.value;
  return result;
}

IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifier_optional __swiftcall LiveGlobalKnowledge.ExternalIdentifier.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  char countAndFlagsBits = stringValue._countAndFlagsBits;
  sub_1B29C3640();
  char v3 = (void *)sub_1B2E83048();
  swift_bridgeObjectRelease();
  if (v3[2] == 2)
  {
    uint64_t v4 = v3[8];
    uint64_t v5 = v3[9];
    uint64_t v6 = v3[10];
    uint64_t v7 = v3[11];
    swift_bridgeObjectRetain();
    uint64_t v8 = MEMORY[0x1B3EB0C00](v4, v5, v6, v7);
    uint64_t v10 = v9;
    uint64_t v11 = swift_bridgeObjectRelease();
    if (!v3[2])
    {
      __break(1u);
      goto LABEL_8;
    }
    uint64_t v14 = v3[4];
    uint64_t v15 = v3[5];
    uint64_t v16 = v3[6];
    uint64_t v17 = v3[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1B3EB0C00](v14, v15, v16, v17);
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v21._char countAndFlagsBits = v18;
    v21._object = v20;
    LOBYTE(v11) = LiveGlobalKnowledge.ExternalIdentifierType.init(rawValue:)(v21);
    if (countAndFlagsBits != 5)
    {
      *(void *)uint64_t v2 = v8;
      *(void *)(v2 + 8) = v10;
      *(unsigned char *)(v2 + 16) = countAndFlagsBits;
      goto LABEL_8;
    }
  }
  uint64_t v11 = swift_bridgeObjectRelease();
  *(void *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(unsigned char *)(v2 + 16) = 0;
LABEL_8:
  result.value.id._object = v12;
  result.value.id._char countAndFlagsBits = v11;
  result.value.idType = v13;
  return result;
}

uint64_t LiveGlobalKnowledge.ExternalIdentifier.description.getter()
{
  return 0;
}

uint64_t LiveGlobalKnowledge.ExternalIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();

  return sub_1B2AA4BC0();
}

uint64_t static LiveGlobalKnowledge.ExternalIdentifier.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_1B2E837A8() & 1) == 0) {
    return 0;
  }

  return sub_1B29ACAC8();
}

uint64_t sub_1B2D3D1CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657079546469 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2D3D29C(char a1)
{
  if (a1) {
    return 0x657079546469;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1B2D3D2C4()
{
  return sub_1B2D3D29C(*v0);
}

uint64_t sub_1B2D3D2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D3D1CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2D3D2F4(uint64_t a1)
{
  unint64_t v2 = sub_1B2D3E680();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D3D330(uint64_t a1)
{
  unint64_t v2 = sub_1B2D3E680();

  return MEMORY[0x1F41862B0](a1, v2);
}

void LiveGlobalKnowledge.ExternalIdentifier.encode(to:)()
{
  sub_1B299F300();
  char v3 = v2;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C42FB0);
  sub_1B299D278();
  uint64_t v7 = v5;
  MEMORY[0x1F4188790](v6);
  sub_1B29A0498();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2D3E680();
  sub_1B2E83A38();
  sub_1B2E83688();
  if (!v0)
  {
    sub_1B2D3E6CC();
    sub_1B2E836D8();
  }
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v4);
  sub_1B29998C8();
}

uint64_t LiveGlobalKnowledge.ExternalIdentifier.hashValue.getter()
{
  return sub_1B2E839E8();
}

void LiveGlobalKnowledge.ExternalIdentifier.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  sub_1B299F300();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_1B29A3EB4(&qword_1E9C42FC8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v17);
  sub_1B29AEC7C(v14, v14[3]);
  sub_1B2D3E680();
  sub_1B2E83A18();
  if (v12)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v14);
  }
  else
  {
    uint64_t v18 = sub_1B2E83568();
    uint64_t v20 = v19;
    sub_1B2D3E718();
    swift_bridgeObjectRetain();
    sub_1B2E835B8();
    uint64_t v21 = sub_1B299B8A4();
    v22(v21);
    *(void *)uint64_t v16 = v18;
    *(void *)(v16 + 8) = v20;
    *(unsigned char *)(v16 + 16) = a12;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v14);
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

uint64_t sub_1B2D3D6C8()
{
  return sub_1B2E839E8();
}

void sub_1B2D3D730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LiveGlobalKnowledge.ExternalIdentifier.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_1B2D3D748()
{
}

IntelligencePlatform::LiveGlobalKnowledge::Client_optional __swiftcall LiveGlobalKnowledge.Client.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

void *static LiveGlobalKnowledge.Client.allCases.getter()
{
  return &unk_1F0AB9A30;
}

uint64_t LiveGlobalKnowledge.Client.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 != 1) {
    unint64_t v1 = 0x6C6F6F747069;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6B5A7374726F7073;
  }
}

uint64_t sub_1B2D3D82C(unsigned __int8 *a1, char *a2)
{
  return sub_1B29AC9D0(*a1, *a2);
}

uint64_t sub_1B2D3D838()
{
  return sub_1B29AE818();
}

uint64_t sub_1B2D3D840()
{
  return sub_1B2AA57D8();
}

uint64_t sub_1B2D3D848()
{
  return sub_1B29F943C();
}

IntelligencePlatform::LiveGlobalKnowledge::Client_optional sub_1B2D3D850(Swift::String *a1)
{
  return LiveGlobalKnowledge.Client.init(rawValue:)(*a1);
}

uint64_t sub_1B2D3D85C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LiveGlobalKnowledge.Client.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B2D3D884(void *a1@<X8>)
{
  *a1 = &unk_1F0AB9A30;
}

uint64_t sub_1B2D3D894()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2D3D8F4()
{
  return sub_1B2E82788();
}

uint64_t LiveGlobalKnowledge.IdSearchRequest.subRequests.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LiveGlobalKnowledge.IdSearchRequest.clientIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 24);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1B29C65EC(v2, v3, v4);
}

void LiveGlobalKnowledge.IdSearchRequest.client.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 25);
}

__n128 LiveGlobalKnowledge.IdSearchRequest.init(subRequests:clientIdentifier:client:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v4 = a2[1].n128_u8[0];
  char v5 = *a3;
  *(void *)a4 = a1;
  __n128 result = *a2;
  *(__n128 *)(a4 + 8) = *a2;
  *(unsigned char *)(a4 + 24) = v4;
  *(unsigned char *)(a4 + 25) = v5;
  return result;
}

uint64_t LiveGlobalKnowledge.IdSearchRequest.description.getter()
{
  return 0;
}

#error "1B2D3DB88: call analysis failed (funcsize=75)"

uint64_t static LiveGlobalKnowledge.IdSearchRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 24);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 25);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 25);
  if ((sub_1B2D3C55C(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  v13[0] = v2;
  v13[1] = v3;
  char v14 = v4;
  v11[0] = v6;
  v11[1] = v7;
  char v12 = v8;
  if ((static ClientProcessIdentifier.== infix(_:_:)((uint64_t)v13, (uint64_t)v11) & 1) == 0) {
    return 0;
  }

  return sub_1B29AC9D0(v5, v9);
}

uint64_t sub_1B2D3DD40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6575716552627573 && a2 == 0xEB00000000737473;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B2EA1630 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E65696C63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B2D3DE9C(char a1)
{
  if (!a1) {
    return 0x6575716552627573;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0x746E65696C63;
}

uint64_t sub_1B2D3DEFC()
{
  return sub_1B2D3DE9C(*v0);
}

uint64_t sub_1B2D3DF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D3DD40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2D3DF2C(uint64_t a1)
{
  unint64_t v2 = sub_1B2D3E7B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D3DF68(uint64_t a1)
{
  unint64_t v2 = sub_1B2D3E7B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void LiveGlobalKnowledge.IdSearchRequest.encode(to:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C42FE0);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2D3E7B0();
  sub_1B2E83A38();
  sub_1B29A3EB4(&qword_1E9C42FF0);
  sub_1B2D3E7FC();
  sub_1B2E836D8();
  if (!v0)
  {
    sub_1B2D3E8F4();
    sub_1B2D3F7E4();
    sub_1B2D3E940();
    sub_1B2D3F7E4();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1B29998C8();
}

#error "1B2D3E180: call analysis failed (funcsize=68)"

void LiveGlobalKnowledge.IdSearchRequest.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C43020);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2D3E7B0();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    sub_1B29A3EB4(&qword_1E9C42FF0);
    sub_1B2D3E98C();
    sub_1B2E835B8();
    sub_1B2D3EAF4();
    swift_bridgeObjectRetain();
    sub_1B2D3F828();
    sub_1B2E835B8();
    sub_1B29C65EC(v8, v9, v10);
    sub_1B2D3EB40();
    sub_1B2D3F828();
    sub_1B2E835B8();
    uint64_t v6 = sub_1B29A4200();
    v7(v6);
    swift_bridgeObjectRetain();
    sub_1B29C65EC(v8, v9, v10);
    sub_1B2A2A2C8(v8, v9, v10);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v8;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = v9;
    *(unsigned char *)(v4 + 24) = v10;
    *(unsigned char *)(v4 + 25) = v8;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    sub_1B2A2A2C8(v8, v9, v10);
  }
  sub_1B29998C8();
}

#error "1B2D3E534: call analysis failed (funcsize=78)"

void sub_1B2D3E64C()
{
}

void sub_1B2D3E664()
{
}

unint64_t sub_1B2D3E680()
{
  unint64_t result = qword_1E9C42FB8;
  if (!qword_1E9C42FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42FB8);
  }
  return result;
}

unint64_t sub_1B2D3E6CC()
{
  unint64_t result = qword_1E9C42FC0;
  if (!qword_1E9C42FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42FC0);
  }
  return result;
}

unint64_t sub_1B2D3E718()
{
  unint64_t result = qword_1E9C42FD0;
  if (!qword_1E9C42FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42FD0);
  }
  return result;
}

unint64_t sub_1B2D3E764()
{
  unint64_t result = qword_1E9C42FD8;
  if (!qword_1E9C42FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42FD8);
  }
  return result;
}

unint64_t sub_1B2D3E7B0()
{
  unint64_t result = qword_1E9C42FE8;
  if (!qword_1E9C42FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42FE8);
  }
  return result;
}

unint64_t sub_1B2D3E7FC()
{
  unint64_t result = qword_1E9C42FF8;
  if (!qword_1E9C42FF8)
  {
    sub_1B29C3588(&qword_1E9C42FF0);
    sub_1B2D3E8A8();
    sub_1B2D3EA84(&qword_1E9C43008, (void (*)(void))sub_1B2A7D6D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C42FF8);
  }
  return result;
}

unint64_t sub_1B2D3E8A8()
{
  unint64_t result = qword_1E9C43000;
  if (!qword_1E9C43000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43000);
  }
  return result;
}

unint64_t sub_1B2D3E8F4()
{
  unint64_t result = qword_1E9C43010;
  if (!qword_1E9C43010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43010);
  }
  return result;
}

unint64_t sub_1B2D3E940()
{
  unint64_t result = qword_1E9C43018;
  if (!qword_1E9C43018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43018);
  }
  return result;
}

unint64_t sub_1B2D3E98C()
{
  unint64_t result = qword_1E9C43028;
  if (!qword_1E9C43028)
  {
    sub_1B29C3588(&qword_1E9C42FF0);
    sub_1B2D3EA38();
    sub_1B2D3EA84(&qword_1E9C43038, (void (*)(void))sub_1B2A7D640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43028);
  }
  return result;
}

unint64_t sub_1B2D3EA38()
{
  unint64_t result = qword_1E9C43030;
  if (!qword_1E9C43030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43030);
  }
  return result;
}

uint64_t sub_1B2D3EA84(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(&qword_1EB7D9500);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B2D3EAF4()
{
  unint64_t result = qword_1E9C43040;
  if (!qword_1E9C43040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43040);
  }
  return result;
}

unint64_t sub_1B2D3EB40()
{
  unint64_t result = qword_1E9C43048;
  if (!qword_1E9C43048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43048);
  }
  return result;
}

unint64_t sub_1B2D3EB90()
{
  unint64_t result = qword_1E9C43050;
  if (!qword_1E9C43050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43050);
  }
  return result;
}

uint64_t sub_1B2D3EBDC()
{
  return sub_1B29D22C4(&qword_1E9C43058, &qword_1E9C43060);
}

unint64_t sub_1B2D3EC1C()
{
  unint64_t result = qword_1EB7E2430;
  if (!qword_1EB7E2430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E2430);
  }
  return result;
}

unint64_t sub_1B2D3EC6C()
{
  unint64_t result = qword_1E9C43068;
  if (!qword_1E9C43068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43068);
  }
  return result;
}

uint64_t sub_1B2D3ECB8()
{
  return sub_1B29D22C4(&qword_1E9C43070, &qword_1E9C43078);
}

unint64_t sub_1B2D3ECF8()
{
  unint64_t result = qword_1E9C43080;
  if (!qword_1E9C43080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43080);
  }
  return result;
}

void type metadata accessor for LiveGlobalKnowledge()
{
}

unsigned char *storeEnumTagSinglePayload for LiveGlobalKnowledge.ExternalIdentifierType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D3EE1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for LiveGlobalKnowledge.ExternalIdentifierType()
{
}

void type metadata accessor for LiveGlobalKnowledge.ExternalIdentifier()
{
}

void type metadata accessor for LiveGlobalKnowledge.Client()
{
}

uint64_t destroy for LiveGlobalKnowledge.IdSearchRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 24);

  return sub_1B2A2A2C8(v2, v3, v4);
}

uint64_t initializeWithCopy for LiveGlobalKnowledge.IdSearchRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_1B29C65EC(v4, v5, v6);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t assignWithCopy for LiveGlobalKnowledge.IdSearchRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1B29C65EC(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B2A2A2C8(v7, v8, v9);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

__n128 initializeWithTake for LiveGlobalKnowledge.IdSearchRequest(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LiveGlobalKnowledge.IdSearchRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B2A2A2C8(v5, v6, v7);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveGlobalKnowledge.IdSearchRequest(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 26))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveGlobalKnowledge.IdSearchRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 26) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for LiveGlobalKnowledge.IdSearchRequest()
{
}

unsigned char *_s20IntelligencePlatform19LiveGlobalKnowledgeO6ClientOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D3F168);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveGlobalKnowledge.IdSearchRequest.CodingKeys()
{
  return &type metadata for LiveGlobalKnowledge.IdSearchRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LiveGlobalKnowledge.ExternalIdentifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D3F26CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveGlobalKnowledge.ExternalIdentifier.CodingKeys()
{
  return &type metadata for LiveGlobalKnowledge.ExternalIdentifier.CodingKeys;
}

unint64_t sub_1B2D3F2A8()
{
  unint64_t result = qword_1E9C43088;
  if (!qword_1E9C43088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43088);
  }
  return result;
}

unint64_t sub_1B2D3F2F8()
{
  unint64_t result = qword_1E9C43090;
  if (!qword_1E9C43090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43090);
  }
  return result;
}

unint64_t sub_1B2D3F348()
{
  unint64_t result = qword_1E9C43098;
  if (!qword_1E9C43098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43098);
  }
  return result;
}

unint64_t sub_1B2D3F398()
{
  unint64_t result = qword_1E9C430A0;
  if (!qword_1E9C430A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C430A0);
  }
  return result;
}

unint64_t sub_1B2D3F3E8()
{
  unint64_t result = qword_1E9C430A8;
  if (!qword_1E9C430A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C430A8);
  }
  return result;
}

unint64_t sub_1B2D3F438()
{
  unint64_t result = qword_1E9C430B0;
  if (!qword_1E9C430B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C430B0);
  }
  return result;
}

uint64_t sub_1B2D3F484()
{
  sub_1B2ABB764();
  uint64_t v3 = sub_1B29A3EB4(v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 32))(v0, v1, v3);
  return v0;
}

unint64_t sub_1B2D3F4E4()
{
  unint64_t result = qword_1E9C430D0;
  if (!qword_1E9C430D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C430D0);
  }
  return result;
}

unint64_t sub_1B2D3F530()
{
  unint64_t result = qword_1E9C430D8;
  if (!qword_1E9C430D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C430D8);
  }
  return result;
}

uint64_t sub_1B2D3F57C()
{
  return *(void *)(v0 - 120);
}

uint64_t sub_1B2D3F5B0()
{
  return v0;
}

uint64_t sub_1B2D3F5D8()
{
  *uint64_t v1 = v0;
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v1, 0, 1, v2);
}

void sub_1B2D3F604(uint64_t a1@<X8>)
{
  *(void *)(v1 - 104) = a1;
}

uint64_t sub_1B2D3F620(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, a1);
}

uint64_t sub_1B2D3F648(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, a1);
}

uint64_t sub_1B2D3F670()
{
  return v0;
}

uint64_t sub_1B2D3F688()
{
  return sub_1B2E82328();
}

uint64_t sub_1B2D3F6C0()
{
  return v0;
}

void sub_1B2D3F6D4()
{
  *(void *)(v1 - 104) = v0;
}

void sub_1B2D3F6E8()
{
  *(void *)(v1 - 104) = v0;
}

uint64_t sub_1B2D3F78C()
{
  return v0;
}

void sub_1B2D3F798()
{
  *(void *)(v0 - 104) = *(void *)(v0 - 176);
}

uint64_t sub_1B2D3F7E4()
{
  return sub_1B2E836D8();
}

uint64_t sub_1B2D3F83C(uint64_t a1)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, a1);
}

uint64_t sub_1B2D3F85C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B2D3F8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  sub_1B2D3F910(a1, v10, a3, a4, a5);
  return v9;
}

uint64_t sub_1B2D3F910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v8 = *(_OWORD *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v8;
  *(void *)(v5 + 48) = v9;
  *(void *)(v5 + 56) = v10;
  *(void *)(v5 + 88) = a4;
  *(void *)(v5 + 96) = a5;
  uint64_t v11 = sub_1B29D1C70((uint64_t *)(v5 + 64));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v11, a3, a4);
  return v5;
}

uint64_t sub_1B2D3F98C(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v3[11] = *v2;
  return MEMORY[0x1F4188298](sub_1B2D3F9D8, 0, 0);
}

uint64_t sub_1B2D3F9D8()
{
  uint64_t v1 = (void *)v0[10];
  sub_1B29AEC7C(v1 + 8, v1[11]);
  uint64_t v3 = v1[2];
  uint64_t v2 = v1[3];
  v0[12] = v2;
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  v0[13] = v5;
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  v0[14] = v7;
  v0[2] = v3;
  v0[3] = v2;
  v0[4] = v4;
  v0[5] = v5;
  v0[6] = v6;
  v0[7] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v8 = (void *)swift_task_alloc();
  v0[15] = v8;
  *long long v8 = v0;
  v8[1] = sub_1B2D3FAF4;
  return sub_1B2C58B40();
}

uint64_t sub_1B2D3FAF4()
{
  sub_1B299B708();
  uint64_t v2 = *v1;
  *(void *)(v3 + 128) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1B2D3FC64, 0, 0);
  }
  else
  {
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
}

uint64_t sub_1B2D3FC64()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B2D3FC7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 64);
  return v0;
}

uint64_t sub_1B2D3FCCC()
{
  sub_1B2D3FC7C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LocalInferenceServiceInstanceClient()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2D3FD18@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 16);
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  uint64_t v5 = *(void *)(*(void *)v1 + 40);
  uint64_t v6 = *(void *)(*(void *)v1 + 48);
  uint64_t v7 = *(void *)(*(void *)v1 + 56);
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2D3FD70(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1B2A23ACC;
  return sub_1B2D3F98C(a1, a2);
}

double CodableLocation.latitude.getter()
{
  return *(double *)v0;
}

double CodableLocation.longitude.getter()
{
  return *(double *)(v0 + 8);
}

double CodableLocation.altitude.getter()
{
  return *(double *)(v0 + 16);
}

double CodableLocation.horizontalAccuracy.getter()
{
  return *(double *)(v0 + 24);
}

double CodableLocation.verticalAccuracy.getter()
{
  return *(double *)(v0 + 32);
}

double CodableLocation.speed.getter()
{
  return *(double *)(v0 + 40);
}

double CodableLocation.course.getter()
{
  return *(double *)(v0 + 48);
}

uint64_t CodableLocation.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CodableLocation() + 44);
  uint64_t v4 = sub_1B2E80668();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CodableLocation()
{
  uint64_t result = qword_1E9C43118;
  if (!qword_1E9C43118) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CodableLocation.hash(into:)()
{
  return sub_1B2E82218();
}

uint64_t static CodableLocation.== infix(_:_:)(double *a1, double *a2)
{
  if (*a1 != *a2
    || a1[1] != a2[1]
    || a1[2] != a2[2]
    || a1[3] != a2[3]
    || a1[4] != a2[4]
    || a1[5] != a2[5]
    || a1[6] != a2[6])
  {
    return 0;
  }
  type metadata accessor for CodableLocation();

  return sub_1B2E80608();
}

uint64_t sub_1B2D400A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6564757469746C61 && a2 == 0xE800000000000000;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x80000001B2E8EDF0 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000001B2E8EE10 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v8 = a1 == 0x6465657073 && a2 == 0xE500000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 0x657372756F63 && a2 == 0xE600000000000000;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            char v11 = sub_1B2E837A8();
            swift_bridgeObjectRelease();
            if (v11) {
              return 7;
            }
            else {
              return 8;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1B2D403A8(char a1)
{
  unint64_t result = 0x656475746974616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 2:
      unint64_t result = 0x6564757469746C61;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x6465657073;
      break;
    case 6:
      unint64_t result = 0x657372756F63;
      break;
    case 7:
      unint64_t result = 0x6D617473656D6974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2D404AC()
{
  return sub_1B2D403A8(*v0);
}

uint64_t sub_1B2D404B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D400A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2D404DC(uint64_t a1)
{
  unint64_t v2 = sub_1B2D40770();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D40518(uint64_t a1)
{
  unint64_t v2 = sub_1B2D40770();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CodableLocation.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C430F8);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D40770();
  sub_1B2E83A38();
  sub_1B29A2904();
  if (!v1)
  {
    sub_1B29A2904();
    sub_1B29A2904();
    sub_1B29A2904();
    sub_1B29A2904();
    sub_1B29A2904();
    sub_1B29A2904();
    type metadata accessor for CodableLocation();
    sub_1B2E80668();
    sub_1B2D40C0C((unint64_t *)&qword_1EB7D87B0, MEMORY[0x1E4F27928]);
    sub_1B2E836D8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_1B2D40770()
{
  unint64_t result = qword_1E9C43100;
  if (!qword_1E9C43100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43100);
  }
  return result;
}

uint64_t CodableLocation.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t CodableLocation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v26 = v4;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29A3EB4(&qword_1E9C43108);
  sub_1B299D278();
  uint64_t v28 = v9;
  uint64_t v29 = v8;
  MEMORY[0x1F4188790](v8);
  sub_1B29A0498();
  uint64_t v10 = type metadata accessor for CodableLocation();
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v30 = a1;
  sub_1B29AEC7C(a1, v13);
  sub_1B2D40770();
  uint64_t v14 = v31;
  sub_1B2E83A18();
  if (v14)
  {
    uint64_t v18 = (uint64_t)v30;
  }
  else
  {
    uint64_t v31 = v10;
    char v39 = 0;
    sub_1B2E83588();
    *(void *)char v12 = v15;
    char v38 = 1;
    sub_1B29A2018();
    *((void *)v12 + 1) = v17;
    char v37 = 2;
    sub_1B29A2018();
    uint64_t v18 = (uint64_t)v30;
    *((void *)v12 + 2) = v19;
    char v36 = 3;
    sub_1B29A2018();
    *((void *)v12 + 3) = v20;
    char v35 = 4;
    sub_1B29A2018();
    *((void *)v12 + 4) = v21;
    char v34 = 5;
    sub_1B29A2018();
    *((void *)v12 + 5) = v22;
    char v33 = 6;
    sub_1B29A2018();
    *((void *)v12 + 6) = v23;
    char v32 = 7;
    sub_1B2D40C0C((unint64_t *)&unk_1EB7E3BC0, MEMORY[0x1E4F27928]);
    sub_1B2E835B8();
    uint64_t v24 = sub_1B2D41364();
    v25(v24);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v12[*(int *)(v31 + 44)], v7, v3);
    sub_1B2B1188C((uint64_t)v12, v27);
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v18);
}

uint64_t sub_1B2D40B50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CodableLocation.init(from:)(a1, a2);
}

uint64_t sub_1B2D40B68(void *a1)
{
  return CodableLocation.encode(to:)(a1);
}

uint64_t sub_1B2D40B88()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2D40BC4()
{
  return sub_1B2D40C0C(&qword_1E9C43110, (void (*)(uint64_t))type metadata accessor for CodableLocation);
}

uint64_t sub_1B2D40C0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for CodableLocation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(void *)(a1 + 48) = a2[6];
    uint64_t v6 = *(int *)(a3 + 44);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1B2E80668();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for CodableLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 44);
  uint64_t v3 = sub_1B2E80668();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t initializeWithCopy for CodableLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

void *assignWithCopy for CodableLocation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for CodableLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CodableLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CodableLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2D41000);
}

uint64_t sub_1B2D41000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 44);
  uint64_t v5 = sub_1B2E80668();

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for CodableLocation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2D41060);
}

uint64_t sub_1B2D41060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 44);
  uint64_t v6 = sub_1B2E80668();

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5, a2, a2, v6);
}

uint64_t sub_1B2D410B0()
{
  uint64_t result = sub_1B2E80668();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CodableLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D41224);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableLocation.CodingKeys()
{
  return &type metadata for CodableLocation.CodingKeys;
}

unint64_t sub_1B2D41260()
{
  unint64_t result = qword_1E9C43128;
  if (!qword_1E9C43128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43128);
  }
  return result;
}

unint64_t sub_1B2D412B0()
{
  unint64_t result = qword_1E9C43130;
  if (!qword_1E9C43130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43130);
  }
  return result;
}

unint64_t sub_1B2D41300()
{
  unint64_t result = qword_1E9C43138;
  if (!qword_1E9C43138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43138);
  }
  return result;
}

uint64_t sub_1B2D4134C()
{
  return sub_1B2E839C8();
}

uint64_t sub_1B2D41364()
{
  return v0;
}

uint64_t LocationEmbedderInferenceInterface.Input.init(charArray:bpeArray:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

unint64_t static LocationEmbedderInferenceInterface.interfaceId.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1B2D413A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6172724172616863 && a2 == 0xE900000000000079;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7961727241657062 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2D4149C(char a1)
{
  if (a1) {
    return 0x7961727241657062;
  }
  else {
    return 0x6172724172616863;
  }
}

uint64_t sub_1B2D414D8()
{
  return sub_1B2D4149C(*v0);
}

uint64_t sub_1B2D414E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D413A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2D41508(uint64_t a1)
{
  unint64_t v2 = sub_1B2D416CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D41544(uint64_t a1)
{
  unint64_t v2 = sub_1B2D416CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void LocationEmbedderInferenceInterface.Input.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C43140);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  sub_1B2C362A0(v2);
  sub_1B2D416CC();
  sub_1B2E83A38();
  sub_1B29A3EB4(&qword_1E9C43150);
  sub_1B2D418D0(&qword_1E9C43158, &qword_1E9C43160);
  sub_1B29A0DD0();
  if (!v0) {
    sub_1B29A0DD0();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  sub_1B29998C8();
}

unint64_t sub_1B2D416CC()
{
  unint64_t result = qword_1E9C43148;
  if (!qword_1E9C43148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43148);
  }
  return result;
}

void LocationEmbedderInferenceInterface.Input.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1B299F300();
  char v12 = v11;
  uint64_t v14 = v13;
  sub_1B29A3EB4(&qword_1E9C43168);
  sub_1B299D278();
  MEMORY[0x1F4188790](v15);
  sub_1B29AEC7C(v12, v12[3]);
  sub_1B2D416CC();
  sub_1B2E83A18();
  if (v10)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
  }
  else
  {
    sub_1B29A3EB4(&qword_1E9C43150);
    sub_1B2D418D0(&qword_1E9C43170, &qword_1E9C43178);
    sub_1B29A2030();
    swift_bridgeObjectRetain();
    sub_1B29A2030();
    uint64_t v16 = sub_1B2C395C4();
    v17(v16);
    void *v14 = a10;
    v14[1] = a10;
    swift_bridgeObjectRetain();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

uint64_t sub_1B2D418D0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(&qword_1E9C43150);
    sub_1B2AB53E0(a2, &qword_1E9C3A220);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B2D4195C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LocationEmbedderInferenceInterface.Input.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1B2D41974()
{
}

uint64_t LocationEmbedderInferenceInterface.Output.embedding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3A230);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_1B2D419F8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E69646465626D65 && a2 == 0xE900000000000067)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2D41A8C()
{
  return 0x6E69646465626D65;
}

uint64_t sub_1B2D41AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D419F8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2D41AD8(uint64_t a1)
{
  unint64_t v2 = sub_1B2D41C8C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D41B14(uint64_t a1)
{
  unint64_t v2 = sub_1B2D41C8C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LocationEmbedderInferenceInterface.Output.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C43180);
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  sub_1B2C362A0(a1);
  sub_1B2D41C8C();
  sub_1B2E83A38();
  sub_1B29A3EB4(&qword_1E9C3A230);
  sub_1B2AB53E0(&qword_1E9C43190, &qword_1E9C3A230);
  sub_1B2E836D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

unint64_t sub_1B2D41C8C()
{
  unint64_t result = qword_1E9C43188;
  if (!qword_1E9C43188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43188);
  }
  return result;
}

void LocationEmbedderInferenceInterface.Output.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v20 = v3;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A230);
  sub_1B299D278();
  uint64_t v19 = v5;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v22 = v8 - v7;
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C43198);
  sub_1B299D278();
  uint64_t v21 = v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocationEmbedderInferenceInterface.Output();
  MEMORY[0x1F4188790](v14 - 8);
  sub_1B299E4A0();
  uint64_t v17 = v16 - v15;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2D41C8C();
  sub_1B2E83A18();
  if (!v0)
  {
    sub_1B2AB53E0(&qword_1E9C431A0, &qword_1E9C3A230);
    sub_1B2E835B8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v17, v22, v4);
    sub_1B29C3D38(v17, v20);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  sub_1B29998C8();
}

uint64_t type metadata accessor for LocationEmbedderInferenceInterface.Output()
{
  uint64_t result = qword_1E9C37948;
  if (!qword_1E9C37948) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B2D41F30()
{
}

uint64_t sub_1B2D41F48(void *a1)
{
  return LocationEmbedderInferenceInterface.Output.encode(to:)(a1);
}

uint64_t static LocationEmbedderInferenceInterface.Errors.InitError.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1B2D41F68(uint64_t a1)
{
  unint64_t v2 = sub_1B2D42178();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D41FA4(uint64_t a1)
{
  unint64_t v2 = sub_1B2D42178();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2D41FE0(uint64_t a1)
{
  unint64_t v2 = sub_1B2D421C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D4201C(uint64_t a1)
{
  unint64_t v2 = sub_1B2D421C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void LocationEmbedderInferenceInterface.Errors.InitError.encode(to:)()
{
  sub_1B299F300();
  uint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1E9C431A8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299ADB4();
  sub_1B29A3EB4(&qword_1E9C431B0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29AEC7C(v1, v1[3]);
  sub_1B2D42178();
  sub_1B299BD14();
  sub_1B2D421C4();
  sub_1B2D43824();
  uint64_t v4 = sub_1B2D4380C();
  v5(v4);
  uint64_t v6 = sub_1B29A0594();
  v7(v6);
  sub_1B29998C8();
}

unint64_t sub_1B2D42178()
{
  unint64_t result = qword_1E9C431B8;
  if (!qword_1E9C431B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C431B8);
  }
  return result;
}

unint64_t sub_1B2D421C4()
{
  unint64_t result = qword_1E9C431C0;
  if (!qword_1E9C431C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C431C0);
  }
  return result;
}

void LocationEmbedderInferenceInterface.Errors.InitError.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C431C8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B2999928();
  sub_1B29A3EB4(&qword_1E9C431D0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  unint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  sub_1B2C362A0(v2);
  sub_1B2D42178();
  sub_1B2D437E8();
  if (v0) {
    goto LABEL_6;
  }
  if (!*(void *)(sub_1B2D43858() + 16) || (uint64_t v7 = sub_1B29A4898(), sub_1B29B142C(v7), sub_1B299EAD0(), v6 != v5 >> 1))
  {
    sub_1B2E83288();
    swift_allocError();
    sub_1B29A3EB4(&qword_1E9C39038);
    sub_1B299BCF4((uint64_t)&type metadata for LocationEmbedderInferenceInterface.Errors.InitError);
    sub_1B29A48B4();
    uint64_t v8 = sub_1B2D43844();
    v9(v8);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v10 = sub_1B2D43878();
    v11(v10);
LABEL_6:
    uint64_t v16 = (uint64_t)v2;
    goto LABEL_7;
  }
  sub_1B2D421C4();
  sub_1B29A2060();
  uint64_t v12 = sub_1B299FB30();
  v13(v12);
  swift_unknownObjectRelease();
  uint64_t v14 = sub_1B2D437CC();
  v15(v14);
  uint64_t v16 = (uint64_t)v2;
LABEL_7:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v16);
  sub_1B29998C8();
}

uint64_t sub_1B2D4243C()
{
  return LocationEmbedderInferenceInterface.Errors.RunError.hashValue.getter();
}

uint64_t sub_1B2D42454()
{
  return LocationEmbedderInferenceInterface.Errors.RunError.hash(into:)();
}

void sub_1B2D4246C()
{
}

void sub_1B2D42484()
{
}

uint64_t static LocationEmbedderInferenceInterface.Errors.RunError.== infix(_:_:)()
{
  return 1;
}

uint64_t LocationEmbedderInferenceInterface.Errors.RunError.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t sub_1B2D424CC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001B2EA1660)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1B2D42554()
{
  return 0xD000000000000012;
}

uint64_t sub_1B2D42574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D424CC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2D425A0(uint64_t a1)
{
  unint64_t v2 = sub_1B2D42A2C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D425DC(uint64_t a1)
{
  unint64_t v2 = sub_1B2D42A2C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2D42618(uint64_t a1)
{
  unint64_t v2 = sub_1B2D42A78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D42654(uint64_t a1)
{
  unint64_t v2 = sub_1B2D42A78();

  return MEMORY[0x1F41862B0](a1, v2);
}

void LocationEmbedderInferenceInterface.Errors.RunError.encode(to:)()
{
  sub_1B299F300();
  uint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1E9C431D8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299ADB4();
  sub_1B29A3EB4(&qword_1E9C431E0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29AEC7C(v1, v1[3]);
  sub_1B2D42A2C();
  sub_1B299BD14();
  sub_1B2D42A78();
  sub_1B2D43824();
  uint64_t v4 = sub_1B2D4380C();
  v5(v4);
  uint64_t v6 = sub_1B29A0594();
  v7(v6);
  sub_1B29998C8();
}

void LocationEmbedderInferenceInterface.Errors.RunError.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C431F8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B2999928();
  sub_1B29A3EB4(&qword_1E9C43200);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  unint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  sub_1B2C362A0(v2);
  sub_1B2D42A2C();
  sub_1B2D437E8();
  if (v0) {
    goto LABEL_6;
  }
  if (!*(void *)(sub_1B2D43858() + 16) || (uint64_t v7 = sub_1B29A4898(), sub_1B29B142C(v7), sub_1B299EAD0(), v6 != v5 >> 1))
  {
    sub_1B2E83288();
    swift_allocError();
    sub_1B29A3EB4(&qword_1E9C39038);
    sub_1B299BCF4((uint64_t)&type metadata for LocationEmbedderInferenceInterface.Errors.RunError);
    sub_1B29A48B4();
    uint64_t v8 = sub_1B2D43844();
    v9(v8);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v10 = sub_1B2D43878();
    v11(v10);
LABEL_6:
    uint64_t v16 = (uint64_t)v2;
    goto LABEL_7;
  }
  sub_1B2D42A78();
  sub_1B29A2060();
  uint64_t v12 = sub_1B299FB30();
  v13(v12);
  swift_unknownObjectRelease();
  uint64_t v14 = sub_1B2D437CC();
  v15(v14);
  uint64_t v16 = (uint64_t)v2;
LABEL_7:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v16);
  sub_1B29998C8();
}

void sub_1B2D429DC()
{
}

void sub_1B2D429F4()
{
}

unint64_t sub_1B2D42A0C()
{
  return 0xD000000000000019;
}

unint64_t sub_1B2D42A2C()
{
  unint64_t result = qword_1E9C431E8;
  if (!qword_1E9C431E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C431E8);
  }
  return result;
}

unint64_t sub_1B2D42A78()
{
  unint64_t result = qword_1E9C431F0;
  if (!qword_1E9C431F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C431F0);
  }
  return result;
}

unint64_t sub_1B2D42AC8()
{
  unint64_t result = qword_1E9C43208;
  if (!qword_1E9C43208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43208);
  }
  return result;
}

unint64_t sub_1B2D42B18()
{
  unint64_t result = qword_1E9C43210;
  if (!qword_1E9C43210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43210);
  }
  return result;
}

unint64_t sub_1B2D42B68()
{
  unint64_t result = qword_1E9C43218;
  if (!qword_1E9C43218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43218);
  }
  return result;
}

unint64_t sub_1B2D42BB8()
{
  unint64_t result = qword_1E9C43220;
  if (!qword_1E9C43220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43220);
  }
  return result;
}

unint64_t sub_1B2D42C08()
{
  unint64_t result = qword_1E9C43228;
  if (!qword_1E9C43228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43228);
  }
  return result;
}

void type metadata accessor for LocationEmbedderInferenceInterface()
{
}

void type metadata accessor for LocationEmbedderInferenceInterface.Input()
{
}

uint64_t initializeBufferWithCopyOfBuffer for LocationEmbedderInferenceInterface.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A230);
  unint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for LocationEmbedderInferenceInterface.Output(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C3A230);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for LocationEmbedderInferenceInterface.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for LocationEmbedderInferenceInterface.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for LocationEmbedderInferenceInterface.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for LocationEmbedderInferenceInterface.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationEmbedderInferenceInterface.Output(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2D42EF8);
}

uint64_t sub_1B2D42EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A230);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LocationEmbedderInferenceInterface.Output(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2D42F58);
}

uint64_t sub_1B2D42F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A230);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, v4);
}

void sub_1B2D42FA8()
{
  sub_1B2D43034();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1B2D43034()
{
  if (!qword_1E9C37A40)
  {
    unint64_t v0 = sub_1B2E81FE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9C37A40);
    }
  }
}

void type metadata accessor for LocationEmbedderInferenceInterface.Errors()
{
}

void type metadata accessor for LocationEmbedderInferenceInterface.Errors.InitError()
{
}

void type metadata accessor for LocationEmbedderInferenceInterface.Errors.RunError()
{
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceInterface.Errors.RunError.CodingKeys()
{
  return &type metadata for LocationEmbedderInferenceInterface.Errors.RunError.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys()
{
  return &type metadata for LocationEmbedderInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys;
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceInterface.Errors.InitError.CodingKeys()
{
  return &type metadata for LocationEmbedderInferenceInterface.Errors.InitError.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceInterface.Errors.InitError.InvalidModelCodingKeys()
{
  return &type metadata for LocationEmbedderInferenceInterface.Errors.InitError.InvalidModelCodingKeys;
}

unsigned char *_s20IntelligencePlatform34LocationEmbedderInferenceInterfaceO6ErrorsO9InitErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2D4318CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceInterface.Output.CodingKeys()
{
  return &type metadata for LocationEmbedderInferenceInterface.Output.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LocationEmbedderInferenceInterface.Input.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D43290);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceInterface.Input.CodingKeys()
{
  return &type metadata for LocationEmbedderInferenceInterface.Input.CodingKeys;
}

unint64_t sub_1B2D432CC()
{
  unint64_t result = qword_1E9C43230;
  if (!qword_1E9C43230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43230);
  }
  return result;
}

unint64_t sub_1B2D4331C()
{
  unint64_t result = qword_1E9C43238;
  if (!qword_1E9C43238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43238);
  }
  return result;
}

unint64_t sub_1B2D4336C()
{
  unint64_t result = qword_1E9C43240;
  if (!qword_1E9C43240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43240);
  }
  return result;
}

unint64_t sub_1B2D433BC()
{
  unint64_t result = qword_1E9C43248;
  if (!qword_1E9C43248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43248);
  }
  return result;
}

unint64_t sub_1B2D4340C()
{
  unint64_t result = qword_1E9C43250;
  if (!qword_1E9C43250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43250);
  }
  return result;
}

unint64_t sub_1B2D4345C()
{
  unint64_t result = qword_1E9C43258;
  if (!qword_1E9C43258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43258);
  }
  return result;
}

unint64_t sub_1B2D434AC()
{
  unint64_t result = qword_1E9C43260;
  if (!qword_1E9C43260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43260);
  }
  return result;
}

unint64_t sub_1B2D434FC()
{
  unint64_t result = qword_1E9C43268;
  if (!qword_1E9C43268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43268);
  }
  return result;
}

unint64_t sub_1B2D4354C()
{
  unint64_t result = qword_1E9C43270;
  if (!qword_1E9C43270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43270);
  }
  return result;
}

unint64_t sub_1B2D4359C()
{
  unint64_t result = qword_1E9C43278;
  if (!qword_1E9C43278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43278);
  }
  return result;
}

unint64_t sub_1B2D435EC()
{
  unint64_t result = qword_1E9C43280;
  if (!qword_1E9C43280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43280);
  }
  return result;
}

unint64_t sub_1B2D4363C()
{
  unint64_t result = qword_1E9C43288;
  if (!qword_1E9C43288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43288);
  }
  return result;
}

unint64_t sub_1B2D4368C()
{
  unint64_t result = qword_1E9C43290;
  if (!qword_1E9C43290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43290);
  }
  return result;
}

unint64_t sub_1B2D436DC()
{
  unint64_t result = qword_1E9C43298;
  if (!qword_1E9C43298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43298);
  }
  return result;
}

unint64_t sub_1B2D4372C()
{
  unint64_t result = qword_1E9C432A0;
  if (!qword_1E9C432A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C432A0);
  }
  return result;
}

unint64_t sub_1B2D4377C()
{
  unint64_t result = qword_1E9C432A8;
  if (!qword_1E9C432A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C432A8);
  }
  return result;
}

uint64_t sub_1B2D437CC()
{
  return v0;
}

uint64_t sub_1B2D437E8()
{
  return sub_1B2E83A18();
}

uint64_t sub_1B2D4380C()
{
  return v0;
}

uint64_t sub_1B2D43824()
{
  return sub_1B2E83618();
}

uint64_t sub_1B2D43844()
{
  return v0;
}

uint64_t sub_1B2D43858()
{
  *(void *)(v2 - 112) = v0;
  *(void *)(v2 - 104) = v1;
  return sub_1B2E835F8();
}

uint64_t sub_1B2D43878()
{
  return v0;
}

void sub_1B2D438F8()
{
}

uint64_t sub_1B2D43904(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = 0x307475706E69;
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C432D0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v24 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v24 - v16;
  BOOL v18 = a1 == 0x307475706E69 && a2 == 0xE600000000000000;
  if (v18 || (unint64_t v5 = 0xE600000000000000, sub_1B29A48DC(), (sub_1B2E837A8() & 1) != 0))
  {
    uint64_t v9 = (char *)(v2 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderCharInput);
    swift_beginAccess();
    sub_1B2D45A30((uint64_t)v9, (uint64_t)v17);
    uint64_t v2 = sub_1B29A3EB4(&qword_1E9C432D8);
    uint64_t v12 = (char *)_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v17, 1, v2);
    sub_1B2A10B50((uint64_t)v17, &qword_1E9C432D0);
    uint64_t result = 0;
    if (v12 == 1) {
      return result;
    }
    sub_1B2D45A30((uint64_t)v9, (uint64_t)v15);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v15, 1, v2) != 1) {
      goto LABEL_16;
    }
    __break(1u);
  }
  if (a1 != 0x317475706E69 || a2 != v5)
  {
    sub_1B29A48DC();
    if ((sub_1B2E837A8() & 1) == 0) {
      return 0;
    }
  }
  uint64_t v21 = v2 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderBPEInput;
  swift_beginAccess();
  sub_1B2D45A30(v21, (uint64_t)v12);
  uint64_t v22 = sub_1B29A3EB4(&qword_1E9C432D8);
  int v23 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v12, 1, v22);
  sub_1B2A10B50((uint64_t)v12, &qword_1E9C432D0);
  uint64_t result = 0;
  if (v23 != 1)
  {
    sub_1B2D45A30(v21, (uint64_t)v9);
    uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v22);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
LABEL_16:
    sub_1B2A8E480();
    return sub_1B2E82DF8();
  }
  return result;
}

uint64_t sub_1B2D43C24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderCharInput;
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C432D8);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5, 1, 1, v6);
  uint64_t v7 = v2 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderBPEInput;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderBPEInput, 1, 1, v6);
  swift_beginAccess();
  sub_1B2D45A98(a1, v5);
  swift_endAccess();
  swift_beginAccess();
  sub_1B2D45A98(a2, v7);
  swift_endAccess();
  return v2;
}

uint64_t sub_1B2D43D04()
{
  sub_1B2A10B50(v0 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderCharInput, &qword_1E9C432D0);
  sub_1B2A10B50(v0 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderBPEInput, &qword_1E9C432D0);

  return swift_deallocClassInstance();
}

unint64_t static LocationEmbedderInferenceServiceDefinition.definitionId.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_1B2D43DAC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7079546C65646F6DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2D43E40()
{
  return 0x7079546C65646F6DLL;
}

uint64_t sub_1B2D43E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D43DAC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2D43E8C(uint64_t a1)
{
  unint64_t v2 = sub_1B2D44000();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D43EC8(uint64_t a1)
{
  unint64_t v2 = sub_1B2D44000();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LocationEmbedderInferenceServiceDefinition.ConfigParameters.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C432B0);
  sub_1B29A311C();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B29A0480();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D44000();
  sub_1B2E83A38();
  sub_1B2E83688();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v1);
}

unint64_t sub_1B2D44000()
{
  unint64_t result = qword_1E9C432B8;
  if (!qword_1E9C432B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C432B8);
  }
  return result;
}

uint64_t LocationEmbedderInferenceServiceDefinition.ConfigParameters.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C432C0);
  sub_1B29A311C();
  MEMORY[0x1F4188790](v5);
  sub_1B29A0480();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D44000();
  sub_1B2E83A18();
  if (!v2)
  {
    uint64_t v6 = sub_1B2E83568();
    uint64_t v8 = v7;
    uint64_t v9 = sub_1B299F318();
    v10(v9);
    *a2 = v6;
    a2[1] = v8;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
}

uint64_t sub_1B2D44160@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return LocationEmbedderInferenceServiceDefinition.ConfigParameters.init(from:)(a1, a2);
}

uint64_t sub_1B2D44178(void *a1)
{
  return LocationEmbedderInferenceServiceDefinition.ConfigParameters.encode(to:)(a1);
}

void LocationEmbedderInferenceServiceDefinition.Runner.cost.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 112);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1B2D441A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a2;
  v4[5] = *(void *)v3;
  swift_defaultActor_initialize();
  *(void *)(v3 + 128) = a1;
  *(void *)(v3 + 136) = a2;
  *(void *)(v3 + 112) = 0;
  *(unsigned char *)(v3 + 120) = 1;
  id v7 = objc_allocWithZone(MEMORY[0x1E4F1E990]);
  swift_bridgeObjectRetain();
  id v8 = objc_msgSend(v7, sel_init);
  v4[6] = v8;
  objc_msgSend(v8, sel_setComputeUnits_, 2);
  objc_msgSend(v8, sel_setAllowBackgroundGPUCompute_, 1);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9C3E340 + dword_1E9C3E340);
  id v9 = v8;
  uint64_t v10 = (void *)swift_task_alloc();
  v4[7] = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_1B2D4432C;
  return v12(a1, a2, 0xD000000000000010, 0x80000001B2EA17E0, (uint64_t)v8);
}

uint64_t sub_1B2D4432C(uint64_t a1)
{
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B29A0B54();
  *uint64_t v6 = v5;
  id v8 = *(void **)(v7 + 48);
  uint64_t v9 = *v2;
  sub_1B299B0E0();
  *uint64_t v10 = v9;
  v5[8] = a1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v11 = (void *)v5[6];
    swift_bridgeObjectRelease();
LABEL_3:

    swift_bridgeObjectRelease();
    swift_defaultActor_destroy();
    swift_release();
    swift_deallocPartialClassInstance();
    sub_1B299AD7C();
    return v12();
  }
  swift_bridgeObjectRelease();
  if (!a1)
  {
    uint64_t v11 = (void *)v5[6];
    sub_1B2D42B68();
    swift_allocError();
    swift_willThrow();
    goto LABEL_3;
  }
  uint64_t v14 = v5[4];
  *(void *)(v14 + 144) = a1;
  swift_retain();
  return MEMORY[0x1F4188298](sub_1B2D444F0, v14, 0);
}

uint64_t sub_1B2D444F0()
{
  uint64_t v1 = (void *)v0[6];
  swift_release();

  swift_release();
  char v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[4];
  return v2(v3);
}

uint64_t LocationEmbedderInferenceServiceDefinition.Runner.run(input:context:)()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  *(void *)(v1 + 40) = v4;
  *(void *)(v1 + 48) = v0;
  *(void *)(v1 + 32) = v5;
  sub_1B29A3EB4(&qword_1E9C3D200);
  *(void *)(v1 + 56) = swift_task_alloc();
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3A230);
  *(void *)(v1 + 64) = v6;
  sub_1B299D2A8(v6);
  *(void *)(v1 + 72) = v7;
  *(void *)(v1 + 80) = swift_task_alloc();
  sub_1B29A3EB4(&qword_1E9C432D0);
  *(void *)(v1 + 88) = swift_task_alloc();
  *(void *)(v1 + 96) = swift_task_alloc();
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C432D8);
  *(void *)(v1 + 104) = v8;
  sub_1B299D2A8(v8);
  *(void *)(v1 + 112) = v9;
  *(void *)(v1 + 120) = swift_task_alloc();
  *(void *)(v1 + 128) = swift_task_alloc();
  *(_OWORD *)(v1 + 136) = *v3;
  return MEMORY[0x1F4188298](sub_1B2D446DC, v0, 0);
}

void sub_1B2D446DC()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v4 = v1 + 32;
    uint64_t v5 = MEMORY[0x1E4FBC860];
    uint64_t v6 = 1;
    unint64_t v7 = *(void *)(v1 + 16);
    uint64_t v41 = *(void *)(v0 + 136);
    while (1)
    {
      uint64_t v8 = v6;
      uint64_t v9 = *(void *)(*(void *)v4 + 16);
      if (v9) {
        break;
      }
LABEL_12:
      if (v8 == v2) {
        goto LABEL_16;
      }
      unint64_t v7 = *(void *)(v41 + 16);
      uint64_t v6 = v8 + 1;
      unint64_t v3 = v8;
      if (!v7)
      {
        __break(1u);
        goto LABEL_15;
      }
    }
    if (v3 >= v7) {
      goto LABEL_36;
    }
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *(void *)(v4 + 8 * v3);
      if (v10 >= *(void *)(v11 + 16)) {
        break;
      }
      int v12 = *(_DWORD *)(v11 + 4 * v10 + 32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B79EC();
        uint64_t v5 = v14;
      }
      unint64_t v13 = *(void *)(v5 + 16);
      if (v13 >= *(void *)(v5 + 24) >> 1)
      {
        sub_1B29B79EC();
        uint64_t v5 = v15;
      }
      ++v10;
      *(void *)(v5 + 16) = v13 + 1;
      *(_DWORD *)(v5 + 4 * v13 + 32) = v12;
      if (v9 == v10) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    uint64_t v5 = MEMORY[0x1E4FBC860];
LABEL_16:
    v38[19] = v5;
    uint64_t v16 = v38[18];
    if (!*(void *)(v16 + 16))
    {
LABEL_30:
      uint64_t v19 = MEMORY[0x1E4FBC860];
LABEL_31:
      v38[20] = v19;
      uint64_t v30 = v38[15];
      uint64_t v31 = v38[16];
      uint64_t v33 = v38[13];
      uint64_t v32 = v38[14];
      uint64_t v37 = v38[12];
      uint64_t v40 = v38[11];
      v38[2] = v5;
      swift_bridgeObjectRetain();
      sub_1B29A3EB4(&qword_1E9C3A220);
      sub_1B29D22C4(&qword_1E9C432E0, &qword_1E9C3A220);
      sub_1B2E81FD8();
      v38[3] = v19;
      swift_bridgeObjectRetain();
      sub_1B2E81FD8();
      char v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
      v34(v37, v31, v33);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v37, 0, 1, v33);
      v34(v40, v30, v33);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v40, 0, 1, v33);
      type metadata accessor for EmbedderInput();
      uint64_t v35 = swift_allocObject();
      v38[21] = v35;
      sub_1B2D43C24(v37, v40);
      id v43 = (void (*)(uint64_t))((char *)&dword_1E9C42F38 + dword_1E9C42F38);
      swift_retain();
      char v36 = (void *)swift_task_alloc();
      v38[22] = v36;
      *char v36 = v38;
      v36[1] = sub_1B2D44B3C;
      v43(v35);
      return;
    }
    unint64_t v17 = 0;
    uint64_t v18 = v16 + 32;
    uint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t v20 = 1;
    unint64_t v21 = *(void *)(v16 + 16);
    uint64_t v39 = v38[18];
    unint64_t v42 = v21;
    while (1)
    {
      uint64_t v22 = v20;
      uint64_t v23 = *(void *)(*(void *)v18 + 16);
      if (v23) {
        break;
      }
LABEL_27:
      if (v22 == v42) {
        goto LABEL_31;
      }
      unint64_t v21 = *(void *)(v39 + 16);
      uint64_t v20 = v22 + 1;
      unint64_t v17 = v22;
      if (!v21)
      {
        __break(1u);
        goto LABEL_30;
      }
    }
    if (v17 >= v21) {
      goto LABEL_37;
    }
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *(void *)(v18 + 8 * v17);
      if (v24 >= *(void *)(v25 + 16)) {
        break;
      }
      int v26 = *(_DWORD *)(v25 + 4 * v24 + 32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B79EC();
        uint64_t v19 = v28;
      }
      unint64_t v27 = *(void *)(v19 + 16);
      if (v27 >= *(void *)(v19 + 24) >> 1)
      {
        sub_1B29B79EC();
        uint64_t v19 = v29;
      }
      ++v24;
      *(void *)(v19 + 16) = v27 + 1;
      *(_DWORD *)(v19 + 4 * v27 + 32) = v26;
      if (v23 == v24) {
        goto LABEL_27;
      }
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

uint64_t sub_1B2D44B3C()
{
  sub_1B299F394();
  uint64_t v2 = (void *)*v1;
  sub_1B299B0E0();
  *unint64_t v3 = v2;
  uint64_t v4 = (void *)*v1;
  sub_1B29A0B54();
  *uint64_t v5 = v4;
  v2[23] = v6;
  v2[24] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v2[6];
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1B2D44F14;
    uint64_t v9 = v7;
  }
  else
  {
    uint64_t v10 = v2[6];
    swift_release();
    uint64_t v8 = sub_1B2D44C90;
    uint64_t v9 = v10;
  }
  return MEMORY[0x1F4188298](v8, v9, 0);
}

uint64_t sub_1B2D44C90()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = (void *)sub_1B2E82348();
  id v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  if (!v3)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0[7], 1, 1, v0[8]);
    goto LABEL_7;
  }
  sub_1B2E82DE8();

  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v5, 1, v4) == 1)
  {
LABEL_7:
    sub_1B2A10B50(v0[7], &qword_1E9C3D200);
    return sub_1B2E83418();
  }
  uint64_t v7 = v0[15];
  uint64_t v6 = v0[16];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[14];
  uint64_t v10 = v0[10];
  uint64_t v11 = v0[8];
  uint64_t v12 = v0[9];
  uint64_t v19 = v0[7];
  uint64_t v13 = v0[4];
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v14(v7, v8);
  v14(v6, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
  v15(v10, v19, v11);
  v15(v13, v10, v11);
  uint64_t v16 = v13 + *(int *)(sub_1B29A3EB4(&qword_1E9C432E8) + 28);
  *(void *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 8) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v17();
}

uint64_t sub_1B2D44F14()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[14];
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v1, v3);
  v5(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v6();
}

uint64_t LocationEmbedderInferenceServiceDefinition.Runner.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t LocationEmbedderInferenceServiceDefinition.Runner.__deallocating_deinit()
{
  LocationEmbedderInferenceServiceDefinition.Runner.deinit();

  return MEMORY[0x1F4188210](v0);
}

void LocationEmbedderInferenceServiceDefinition.Runner.unownedExecutor.getter()
{
}

void sub_1B2D45068()
{
}

void sub_1B2D45084(uint64_t a1@<X8>)
{
}

uint64_t sub_1B2D450A8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B29C3F00;
  return LocationEmbedderInferenceServiceDefinition.Runner.run(input:context:)();
}

uint64_t static LocationEmbedderInferenceServiceDefinition.buildRunner(config:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  v2[2] = a2;
  v2[3] = v3;
  v2[4] = v4;
  return MEMORY[0x1F4188298](sub_1B2D45184, 0, 0);
}

uint64_t sub_1B2D45184()
{
  sub_1B299F394();
  type metadata accessor for LocationEmbedderInferenceServiceDefinition.Runner();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B2D45254;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = v0[2];
  return sub_1B2D441A4(v3, v2, v4);
}

uint64_t sub_1B2D45254(uint64_t a1)
{
  sub_1B299B708();
  uint64_t v4 = *v2;
  sub_1B299B0E0();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v1) {
    uint64_t v6 = a1;
  }
  return v7(v6);
}

unint64_t sub_1B2D45328()
{
  return 0xD000000000000020;
}

uint64_t sub_1B2D45348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1B2D453E8;
  return static LocationEmbedderInferenceServiceDefinition.buildRunner(config:context:)(a2, a3);
}

uint64_t sub_1B2D453E8()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B29A0B54();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1B299B0E0();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t type metadata accessor for EmbedderInput()
{
  uint64_t result = qword_1E9C43340;
  if (!qword_1E9C43340) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for LocationEmbedderInferenceServiceDefinition.Runner()
{
  return self;
}

unint64_t sub_1B2D4552C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B2D4555C();
  unint64_t result = sub_1B2D455A8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B2D4555C()
{
  unint64_t result = qword_1E9C43300;
  if (!qword_1E9C43300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43300);
  }
  return result;
}

unint64_t sub_1B2D455A8()
{
  unint64_t result = qword_1E9C43308;
  if (!qword_1E9C43308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43308);
  }
  return result;
}

unint64_t sub_1B2D455F4(uint64_t a1)
{
  unint64_t result = sub_1B2D4561C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2D4561C()
{
  unint64_t result = qword_1E9C43310;
  if (!qword_1E9C43310)
  {
    type metadata accessor for LocationEmbedderInferenceServiceDefinition.Runner();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43310);
  }
  return result;
}

uint64_t sub_1B2D45668()
{
  return sub_1B29D22C4((unint64_t *)&unk_1E9C43318, &qword_1E9C432E8);
}

unint64_t sub_1B2D456A8()
{
  unint64_t result = qword_1E9C43328;
  if (!qword_1E9C43328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43328);
  }
  return result;
}

unint64_t sub_1B2D456F8()
{
  unint64_t result = qword_1E9C43330;
  if (!qword_1E9C43330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43330);
  }
  return result;
}

uint64_t sub_1B2D45748()
{
  return type metadata accessor for EmbedderInput();
}

void sub_1B2D45750()
{
  sub_1B2D457E0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1B2D457E0()
{
  if (!qword_1E9C43350)
  {
    sub_1B29C3588(&qword_1E9C432D8);
    unint64_t v0 = sub_1B2E82F38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9C43350);
    }
  }
}

void type metadata accessor for LocationEmbedderInferenceServiceDefinition()
{
}

void type metadata accessor for LocationEmbedderInferenceServiceDefinition.ConfigParameters()
{
}

uint64_t method lookup function for LocationEmbedderInferenceServiceDefinition.Runner(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LocationEmbedderInferenceServiceDefinition.Runner);
}

unsigned char *storeEnumTagSinglePayload for LocationEmbedderInferenceServiceDefinition.ConfigParameters.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2D45908);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceServiceDefinition.ConfigParameters.CodingKeys()
{
  return &type metadata for LocationEmbedderInferenceServiceDefinition.ConfigParameters.CodingKeys;
}

unint64_t sub_1B2D45944()
{
  unint64_t result = qword_1E9C43358;
  if (!qword_1E9C43358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43358);
  }
  return result;
}

unint64_t sub_1B2D45994()
{
  unint64_t result = qword_1E9C43360;
  if (!qword_1E9C43360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43360);
  }
  return result;
}

unint64_t sub_1B2D459E4()
{
  unint64_t result = qword_1E9C43368;
  if (!qword_1E9C43368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43368);
  }
  return result;
}

uint64_t sub_1B2D45A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C432D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2D45A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C432D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t LocationEntityCard.subject.getter()
{
  return *(void *)v0;
}

uint64_t LocationEntityCard.subject.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*LocationEntityCard.subject.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summaryInfos.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summaryInfos.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summaryInfos.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summary7Days.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summary7Days.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summary7Days.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summary7DaysWithPeople.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summary7DaysWithPeople.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summary7DaysWithPeople.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summaryAllTime.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summaryAllTime.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summaryAllTime.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summaryAllTimeWithPeople.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summaryAllTimeWithPeople.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summaryAllTimeWithPeople.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.name.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.name.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = v2;
  *(void *)(v1 + 96) = v0;
  return result;
}

uint64_t (*LocationEntityCard.name.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.city.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.city.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = v2;
  *(void *)(v1 + 112) = v0;
  return result;
}

uint64_t (*LocationEntityCard.city.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summary7DaysActivities.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summary7DaysActivities.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 120) = v2;
  *(void *)(v1 + 128) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summary7DaysActivities.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summary7DaysSpantext.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summary7DaysSpantext.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 136) = v2;
  *(void *)(v1 + 144) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summary7DaysSpantext.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summary7DaysWithPeopleActivities.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summary7DaysWithPeopleActivities.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 152) = v2;
  *(void *)(v1 + 160) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summary7DaysWithPeopleActivities.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summary7DaysWithPeopleSpantext.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summary7DaysWithPeopleSpantext.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 168) = v2;
  *(void *)(v1 + 176) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summary7DaysWithPeopleSpantext.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summary7DaysWithPeoplePeople.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summary7DaysWithPeoplePeople.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 184) = v2;
  *(void *)(v1 + 192) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summary7DaysWithPeoplePeople.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summary7DaysWithPeoplePeopleNames.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summary7DaysWithPeoplePeopleNames.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 200) = v2;
  *(void *)(v1 + 208) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summary7DaysWithPeoplePeopleNames.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summaryAllTimeActivities.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summaryAllTimeActivities.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 216) = v2;
  *(void *)(v1 + 224) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summaryAllTimeActivities.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summaryAllTimeSpantext.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summaryAllTimeSpantext.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 232) = v2;
  *(void *)(v1 + 240) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summaryAllTimeSpantext.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summaryAllTimeWithPeopleActivities.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summaryAllTimeWithPeopleActivities.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 248) = v2;
  *(void *)(v1 + 256) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summaryAllTimeWithPeopleActivities.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summaryAllTimeWithPeopleSpantext.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summaryAllTimeWithPeopleSpantext.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 264) = v2;
  *(void *)(v1 + 272) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summaryAllTimeWithPeopleSpantext.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summaryAllTimeWithPeoplePeople.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summaryAllTimeWithPeoplePeople.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 280) = v2;
  *(void *)(v1 + 288) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summaryAllTimeWithPeoplePeople.modify())(void)
{
  return nullsub_1;
}

uint64_t LocationEntityCard.summaryAllTimeWithPeoplePeopleNames.getter()
{
  return sub_1B2999874();
}

uint64_t LocationEntityCard.summaryAllTimeWithPeoplePeopleNames.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 296) = v2;
  *(void *)(v1 + 304) = v0;
  return result;
}

uint64_t (*LocationEntityCard.summaryAllTimeWithPeoplePeopleNames.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1B2D464B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x497972616D6D7573 && a2 == 0xEC000000736F666ELL;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x377972616D6D7573 && a2 == 0xEC00000073796144;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x80000001B2EA1820 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x417972616D6D7573 && a2 == 0xEE00656D69546C6CLL;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000018 && a2 == 0x80000001B2EA1840 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 1701667182 && a2 == 0xE400000000000000;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            BOOL v10 = a1 == 2037672291 && a2 == 0xE400000000000000;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001B2EA1860 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000014 && a2 == 0x80000001B2EA1880 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000020 && a2 == 0x80000001B2EA18A0 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001B2EA18D0 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001B2EA18F0 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else if (a1 == 0xD000000000000021 && a2 == 0x80000001B2EA1910 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 13;
            }
            else if (a1 == 0xD000000000000018 && a2 == 0x80000001B2EA1940 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 14;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001B2EA1960 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 15;
            }
            else if (a1 == 0xD000000000000022 && a2 == 0x80000001B2EA1980 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 16;
            }
            else if (a1 == 0xD000000000000020 && a2 == 0x80000001B2EA19B0 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 17;
            }
            else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001B2EA19E0 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 18;
            }
            else if (a1 == 0xD000000000000023 && a2 == 0x80000001B2EA1A00)
            {
              swift_bridgeObjectRelease();
              return 19;
            }
            else
            {
              char v11 = sub_1B2E837A8();
              swift_bridgeObjectRelease();
              if (v11) {
                return 19;
              }
              else {
                return 20;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B2D46C14()
{
  return 20;
}

unint64_t sub_1B2D46C1C(char a1)
{
  unint64_t result = 0x7463656A627573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x497972616D6D7573;
      break;
    case 2:
      unint64_t result = 0x377972616D6D7573;
      break;
    case 3:
    case 8:
    case 15:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0x417972616D6D7573;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 1701667182;
      break;
    case 7:
      unint64_t result = 2037672291;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD000000000000020;
      break;
    case 11:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 12:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 13:
      unint64_t result = 0xD000000000000021;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    case 16:
      unint64_t result = 0xD000000000000022;
      break;
    case 17:
      unint64_t result = 0xD000000000000020;
      break;
    case 18:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 19:
      unint64_t result = 0xD000000000000023;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2D46E70()
{
  return sub_1B2D46C1C(*v0);
}

uint64_t sub_1B2D46E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D464B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2D46EA0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2D46C14();
  *a1 = result;
  return result;
}

uint64_t sub_1B2D46EC8(uint64_t a1)
{
  unint64_t v2 = sub_1B2D4740C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D46F04(uint64_t a1)
{
  unint64_t v2 = sub_1B2D4740C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LocationEntityCard.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C43370);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[1];
  v22[36] = v1[2];
  v22[37] = v9;
  uint64_t v10 = v1[3];
  v22[34] = v1[4];
  v22[35] = v10;
  uint64_t v11 = v1[5];
  v22[32] = v1[6];
  v22[33] = v11;
  uint64_t v12 = v1[7];
  v22[30] = v1[8];
  v22[31] = v12;
  uint64_t v13 = v1[10];
  v22[28] = v1[9];
  v22[29] = v13;
  uint64_t v14 = v1[12];
  v22[26] = v1[11];
  v22[27] = v14;
  uint64_t v15 = v1[14];
  v22[24] = v1[13];
  v22[25] = v15;
  uint64_t v16 = v1[16];
  v22[22] = v1[15];
  v22[23] = v16;
  uint64_t v17 = v1[17];
  v22[20] = v1[18];
  v22[21] = v17;
  uint64_t v18 = v1[19];
  v22[18] = v1[20];
  v22[19] = v18;
  v22[17] = v1[21];
  v22[16] = v1[22];
  v22[15] = v1[23];
  v22[14] = v1[24];
  v22[13] = v1[25];
  v22[12] = v1[26];
  v22[11] = v1[27];
  v22[10] = v1[28];
  v22[9] = v1[29];
  v22[8] = v1[30];
  v22[7] = v1[31];
  v22[6] = v1[32];
  v22[3] = v1[33];
  v22[2] = v1[34];
  v22[5] = v1[35];
  v22[4] = v1[36];
  uint64_t v19 = v1[38];
  v22[1] = v1[37];
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D4740C();
  sub_1B2E83A38();
  char v24 = 0;
  uint64_t v20 = v23;
  sub_1B2E836F8();
  if (!v20)
  {
    uint64_t v23 = v19;
    sub_1B2D49D98(1);
    sub_1B2D49DE4();
    sub_1B2D49D98(2);
    sub_1B2D49DE4();
    sub_1B2D49D98(3);
    sub_1B2D49DE4();
    sub_1B2D49D98(4);
    sub_1B2D49DE4();
    sub_1B2D49D98(5);
    sub_1B2D49DE4();
    sub_1B2D49D98(6);
    sub_1B2D49DE4();
    sub_1B2D49D98(7);
    sub_1B2D49DE4();
    sub_1B2D49D98(8);
    sub_1B2D49DE4();
    sub_1B2D49D98(9);
    sub_1B2D49DE4();
    sub_1B2D49D98(10);
    sub_1B2E83628();
    sub_1B2D49D98(11);
    sub_1B29A208C();
    sub_1B2D49D98(12);
    sub_1B29A208C();
    sub_1B2D49D98(13);
    sub_1B29A208C();
    sub_1B2D49D98(14);
    sub_1B29A208C();
    sub_1B2D49D98(15);
    sub_1B29A208C();
    sub_1B2D49D98(16);
    sub_1B29A208C();
    sub_1B2D49D98(17);
    sub_1B29A208C();
    sub_1B2D49D98(18);
    sub_1B29A208C();
    sub_1B2D49D98(19);
    sub_1B2E83628();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

unint64_t sub_1B2D4740C()
{
  unint64_t result = qword_1E9C43378;
  if (!qword_1E9C43378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43378);
  }
  return result;
}

uint64_t LocationEntityCard.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C43380);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  uint64_t v69 = (uint64_t)a1;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D4740C();
  sub_1B2E83A18();
  if (v2)
  {
    sub_1B2D49D60();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = sub_1B2E835D8();
    uint64_t v7 = sub_1B299FB4C();
    uint64_t v9 = v8;
    swift_bridgeObjectRetain();
    uint64_t v76 = v9;
    uint64_t v67 = sub_1B299FB4C();
    uint64_t v11 = v10;
    swift_bridgeObjectRetain();
    uint64_t v75 = v11;
    uint64_t v66 = sub_1B299FB4C();
    uint64_t v74 = v12;
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_1B299FB4C();
    uint64_t v73 = v13;
    swift_bridgeObjectRetain();
    uint64_t v63 = v7;
    uint64_t v64 = sub_1B299FB4C();
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1B299FB4C();
    uint64_t v18 = v17;
    uint64_t v62 = v16;
    uint64_t v61 = a2;
    swift_bridgeObjectRetain();
    uint64_t v71 = v18;
    uint64_t v19 = sub_1B299FB4C();
    uint64_t v21 = v20;
    uint64_t v60 = v19;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1B299FB4C();
    uint64_t v70 = v21;
    uint64_t v23 = v22;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1B29A313C();
    uint64_t v72 = v25;
    uint64_t v26 = v24;
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_1B29A313C();
    uint64_t v58 = v27;
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1B29A313C();
    uint64_t v56 = v28;
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1B29A313C();
    uint64_t v54 = v29;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1B29A313C();
    uint64_t v52 = v30;
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1B29A313C();
    uint64_t v50 = v31;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1B29A313C();
    uint64_t v48 = v32;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1B29A313C();
    uint64_t v46 = v33;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1B29A313C();
    uint64_t v44 = v34;
    LOBYTE(v78[0]) = 18;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1B29A313C();
    uint64_t v68 = v35;
    char v79 = 19;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1B2E83508();
    uint64_t v37 = v36;
    uint64_t v38 = sub_1B299DDFC();
    v39(v38);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v77[0] = v6;
    v77[1] = v63;
    v77[2] = v76;
    v77[3] = v67;
    v77[4] = v75;
    v77[5] = v66;
    v77[6] = v74;
    v77[7] = v65;
    v77[8] = v73;
    v77[9] = v64;
    v77[10] = v15;
    v77[11] = v62;
    v77[12] = v71;
    v77[13] = v60;
    v77[14] = v70;
    v77[15] = v59;
    v77[16] = v23;
    v77[17] = v26;
    v77[18] = v72;
    v77[19] = v57;
    v77[20] = v58;
    v77[21] = v55;
    v77[22] = v56;
    v77[23] = v53;
    v77[24] = v54;
    v77[25] = v51;
    v77[26] = v52;
    v77[27] = v49;
    v77[28] = v50;
    v77[29] = v47;
    v77[30] = v48;
    v77[31] = v45;
    v77[32] = v46;
    v77[33] = v43;
    v77[34] = v44;
    v77[35] = v42;
    v77[36] = v68;
    v77[37] = v41;
    v77[38] = v37;
    sub_1B2D48268((uint64_t)v77);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v61, v77, 0x138uLL);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v69);
    v78[0] = v6;
    v78[1] = v63;
    v78[2] = v76;
    v78[3] = v67;
    v78[4] = v75;
    v78[5] = v66;
    v78[6] = v74;
    v78[7] = v65;
    v78[8] = v73;
    v78[9] = v64;
    v78[10] = v15;
    v78[11] = v62;
    v78[12] = v71;
    v78[13] = v60;
    v78[14] = v70;
    v78[15] = v59;
    v78[16] = v23;
    v78[17] = v26;
    v78[18] = v72;
    v78[19] = v57;
    v78[20] = v58;
    v78[21] = v55;
    v78[22] = v56;
    v78[23] = v53;
    v78[24] = v54;
    v78[25] = v51;
    v78[26] = v52;
    v78[27] = v49;
    v78[28] = v50;
    v78[29] = v47;
    v78[30] = v48;
    v78[31] = v45;
    v78[32] = v46;
    v78[33] = v43;
    v78[34] = v44;
    v78[35] = v42;
    v78[36] = v68;
    v78[37] = v41;
    v78[38] = v37;
    return sub_1B2D483A8((uint64_t)v78);
  }
}

uint64_t sub_1B2D48268(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2D483A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2D484E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return LocationEntityCard.init(from:)(a1, a2);
}

uint64_t sub_1B2D48500(void *a1)
{
  return LocationEntityCard.encode(to:)(a1);
}

uint64_t sub_1B2D48518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2D49C3C();

  return MEMORY[0x1F411AC60](a1, a2, a3, v6);
}

uint64_t sub_1B2D48580()
{
  return sub_1B2E80FC8();
}

uint64_t sub_1B2D48598()
{
  return sub_1B2E80FB8();
}

uint64_t sub_1B2D485B4()
{
  sub_1B2D49BF0();

  return sub_1B2E80FD8();
}

uint64_t sub_1B2D48618()
{
  return sub_1B2E80FC8();
}

uint64_t sub_1B2D48660()
{
  return sub_1B2E81298();
}

uint64_t sub_1B2D48678()
{
  return sub_1B2E80FB8();
}

uint64_t sub_1B2D486C0()
{
  return sub_1B2E81268() & 1;
}

uint64_t sub_1B2D486DC()
{
  return sub_1B2E81278() & 1;
}

uint64_t sub_1B2D486F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2D49BA4();

  return MEMORY[0x1F411ABF8](a1, a2, a3, v6);
}

uint64_t ViewService.locationEntityCardsView.getter@<X0>(void *a1@<X8>)
{
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  uint64_t v5 = (void *)sub_1B2E82348();
  v17[0] = 0;
  id v6 = objc_msgSend(v4, sel_requestAssertionForViewName_error_, v5, v17);

  id v7 = v17[0];
  if (v6)
  {
    uint64_t v8 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    uint64_t v9 = v8[5];
    uint64_t v10 = v8[6];
    sub_1B29AEC7C(v8 + 2, v9);
    uint64_t v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 8);
    id v12 = v7;
    uint64_t v13 = v11(v6, v9, v10);
    if (v2) {
      return swift_unknownObjectRelease();
    }
    else {
      return sub_1B2D488E8(v6, v13, v14, a1);
    }
  }
  else
  {
    id v16 = v17[0];
    sub_1B2E80388();

    return swift_willThrow();
  }
}

uint64_t sub_1B2D488E8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(a1, sel_viewArtifactTableName);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1B2E82378();
    unint64_t v12 = v11;
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    unint64_t v12 = 0x80000001B2EA1A60;
    uint64_t v10 = 0xD000000000000018;
  }
  uint64_t result = swift_unknownObjectRelease();
  *a4 = a1;
  a4[1] = v10;
  a4[2] = v12;
  a4[3] = a2;
  a4[4] = a3;
  return result;
}

uint64_t ViewService.LocationEntityCardsView.getEntityCard(locationId:)()
{
  return sub_1B2E80C28();
}

void *sub_1B2D48A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v18 = a3;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C433D8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C433E0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1B2E814F8();
  v24[0] = a2;
  LOBYTE(v24[1]) = 0;
  sub_1B2E81478();
  sub_1B29D22C4(&qword_1E9C433F8, &qword_1E9C433D8);
  sub_1B2D49C88();
  uint64_t v12 = v20;
  sub_1B2E80A08();
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1B2D49CD4((uint64_t)v25, (uint64_t)v23);
  sub_1B2D49CD4((uint64_t)v23, (uint64_t)v24);
  if (sub_1B2D49D3C((uint64_t)v24) == 1)
  {
    unint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    unint64_t v21 = 0xD000000000000021;
    unint64_t v22 = 0x80000001B2EA1A30;
    v25[41] = a2;
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    unint64_t v13 = v21;
    unint64_t v14 = v22;
    sub_1B2A823FC();
    swift_allocError();
    *(void *)uint64_t v15 = v13;
    *(void *)(v15 + 8) = v14;
    *(unsigned char *)(v15 + 16) = 1;
    swift_willThrow();
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return memcpy(v18, v24, 0x138uLL);
}

void *sub_1B2D48D80@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B2D48A48(a1, *(void *)(v2 + 24), a2);
}

uint64_t ViewService.LocationEntityCardsView.getEntityCards(locationIds:)()
{
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1E9C43388);
  uint64_t result = sub_1B2E80C28();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B2D48E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v17 = a3;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C433D8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C433E0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1B2E814F8();
  v21[6] = a2;
  v20[3] = sub_1B2E81508();
  v20[4] = MEMORY[0x1E4F62E90];
  sub_1B29D1C70(v20);
  sub_1B2E81518();
  v21[3] = sub_1B2E80BE8();
  v21[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v21);
  sub_1B29A3EB4(&qword_1E9C433E8);
  sub_1B29D22C4(&qword_1E9C433F0, &qword_1E9C433E8);
  sub_1B2E82648();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v20);
  sub_1B2E81498();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v21);
  sub_1B29D22C4(&qword_1E9C433F8, &qword_1E9C433D8);
  sub_1B2D49C88();
  uint64_t v12 = v19;
  uint64_t v13 = v4;
  uint64_t v14 = sub_1B2E809F8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!v12) {
    *uint64_t v17 = v14;
  }
  return result;
}

uint64_t sub_1B2D49124@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2D48E48(a1, *(void *)(v2 + 24), a2);
}

unint64_t sub_1B2D49144()
{
  unint64_t result = qword_1E9C43390;
  if (!qword_1E9C43390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43390);
  }
  return result;
}

unint64_t sub_1B2D49194()
{
  unint64_t result = qword_1E9C43398;
  if (!qword_1E9C43398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43398);
  }
  return result;
}

unint64_t sub_1B2D491E4()
{
  unint64_t result = qword_1E9C433A0;
  if (!qword_1E9C433A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C433A0);
  }
  return result;
}

uint64_t destroy for LocationEntityCard()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocationEntityCard(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  uint64_t v13 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  uint64_t v14 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v14;
  uint64_t v15 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v15;
  uint64_t v16 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v16;
  uint64_t v17 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v17;
  uint64_t v18 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v18;
  uint64_t v19 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v19;
  uint64_t v20 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v20;
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LocationEntityCard(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  a1[22] = a2[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[23] = a2[23];
  a1[24] = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[25] = a2[25];
  a1[26] = a2[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[27] = a2[27];
  a1[28] = a2[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[29] = a2[29];
  a1[30] = a2[30];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[31] = a2[31];
  a1[32] = a2[32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[33] = a2[33];
  a1[34] = a2[34];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[35] = a2[35];
  a1[36] = a2[36];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[37] = a2[37];
  a1[38] = a2[38];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for LocationEntityCard(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

uint64_t assignWithTake for LocationEntityCard(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationEntityCard(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 312))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationEntityCard(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 312) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 312) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationEntityCard()
{
  return &type metadata for LocationEntityCard;
}

ValueMetadata *type metadata accessor for ViewService.LocationEntityCardsView()
{
  return &type metadata for ViewService.LocationEntityCardsView;
}

unsigned char *storeEnumTagSinglePayload for LocationEntityCard.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D49A7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationEntityCard.CodingKeys()
{
  return &type metadata for LocationEntityCard.CodingKeys;
}

unint64_t sub_1B2D49AB8()
{
  unint64_t result = qword_1E9C433A8;
  if (!qword_1E9C433A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C433A8);
  }
  return result;
}

unint64_t sub_1B2D49B08()
{
  unint64_t result = qword_1E9C433B0;
  if (!qword_1E9C433B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C433B0);
  }
  return result;
}

unint64_t sub_1B2D49B58()
{
  unint64_t result = qword_1E9C433B8;
  if (!qword_1E9C433B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C433B8);
  }
  return result;
}

unint64_t sub_1B2D49BA4()
{
  unint64_t result = qword_1E9C433C0;
  if (!qword_1E9C433C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C433C0);
  }
  return result;
}

unint64_t sub_1B2D49BF0()
{
  unint64_t result = qword_1E9C433C8;
  if (!qword_1E9C433C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C433C8);
  }
  return result;
}

unint64_t sub_1B2D49C3C()
{
  unint64_t result = qword_1E9C433D0;
  if (!qword_1E9C433D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C433D0);
  }
  return result;
}

unint64_t sub_1B2D49C88()
{
  unint64_t result = qword_1E9C43400;
  if (!qword_1E9C43400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43400);
  }
  return result;
}

uint64_t sub_1B2D49CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C43408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2D49D3C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void sub_1B2D49D60()
{
  v0[31] = 0;
  v0[32] = 0;
  v0[36] = 0;
  v0[37] = 0;
  v0[35] = 0;
  v0[33] = 0;
  v0[39] = 0;
  v0[40] = 0;
}

void sub_1B2D49D98(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
}

uint64_t sub_1B2D49DA4()
{
  return swift_bridgeObjectRelease();
}

void sub_1B2D49DBC()
{
  *(void *)(v0 + 296) = 0;
}

uint64_t sub_1B2D49DE4()
{
  return sub_1B2E83628();
}

uint64_t sub_1B2D49DFC()
{
  return swift_bridgeObjectRelease();
}

void sub_1B2D49E14()
{
  *(void *)(v0 + 256) = 0;
}

uint64_t sub_1B2D49E38()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D49E50()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D49E68()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D49E80()
{
  return swift_bridgeObjectRelease();
}

uint64_t UnfairLockedBox.__allocating_init(contents:)(uint64_t a1)
{
  return sub_1B2D4A7D8(a1, (void (*)(uint64_t))UnfairLockedBox.init(contents:));
}

uint64_t sub_1B2D49EB0(uint64_t a1)
{
  sub_1B2D4ABB4(a1);
  sub_1B299D804();
  swift_beginAccess();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1B29B2540(v3, v1);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    swift_endAccess();
LABEL_5:
    type metadata accessor for EntityResolutionCAEventLogger();
    uint64_t Strong = swift_allocObject();
    sub_1B299A1C8();
    *(void *)(Strong + 16) = sub_1B2E82148();
    type metadata accessor for EntityResolutionCAEventLoggerProvider.CachedLogger();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v6 = sub_1B2A99C98();
    sub_1B29A0E20();
    sub_1B2B2A294(v6, v3, v1, v7, v8, v9, v10, v11, v13, v14);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1B2A99D10();
    goto LABEL_6;
  }
  swift_endAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_release();
  if (!Strong) {
    goto LABEL_5;
  }
LABEL_6:
  swift_release();
  os_unfair_lock_unlock(v2);
  swift_bridgeObjectRelease();
  return Strong;
}

void sub_1B2D4A040(uint64_t a1)
{
  uint64_t v1 = *(os_unfair_lock_s **)(a1 + 24);
  os_unfair_lock_lock(v1);
  sub_1B299D804();
  sub_1B29A0E20();
  sub_1B29A3EB4(qword_1EB7D8818);
  sub_1B2E82188();
  swift_endAccess();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1B2D4A0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(os_unfair_lock_s **)(a1 + 24);
  os_unfair_lock_lock(v5);
  sub_1B299D804();
  sub_1B29A0E20();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B2B29C64(a2, a3);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  os_unfair_lock_unlock(v5);
  return swift_bridgeObjectRelease();
}

#error "1B2D4A1FC: call analysis failed (funcsize=52)"

char *sub_1B2D4A264(uint64_t a1)
{
  sub_1B29A0DFC(a1);
  sub_1B299D804();
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = (char *)OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_peopleKnosisServer;
  uint64_t v7 = *(char **)(v5
                + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_peopleKnosisServer);
  if (v7)
  {
    swift_retain();
    uint64_t v6 = v7;
  }
  else
  {
    sub_1B299DE14();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v9 = (void *)sub_1B2CC8E30((uint64_t)v12);
    if (v1)
    {
      swift_release();
      os_unfair_lock_unlock(v3);
      sub_1B2AD2B58(v2);
      return v6;
    }
    uint64_t v11 = *(void **)&v6[v5];
    *(void *)&v6[v5] = v9;
    uint64_t v6 = v9;

    uint64_t v7 = 0;
  }
  uint64_t v8 = v7;
  swift_release();
  os_unfair_lock_unlock(v3);
  sub_1B2AD2B58(v2);
  return v6;
}

char *sub_1B2D4A364(uint64_t a1)
{
  sub_1B29A0DFC(a1);
  sub_1B299D804();
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = (char *)OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityKnosisServer;
  uint64_t v7 = *(char **)(v5
                + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityKnosisServer);
  if (v7)
  {
    swift_retain();
    uint64_t v6 = v7;
  }
  else
  {
    sub_1B299DE14();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v9 = (void *)sub_1B2CC8E60((uint64_t)v12);
    if (v1)
    {
      swift_release();
      os_unfair_lock_unlock(v3);
      sub_1B2AD2B58(v2);
      return v6;
    }
    uint64_t v11 = *(void **)&v6[v5];
    *(void *)&v6[v5] = v9;
    uint64_t v6 = v9;

    uint64_t v7 = 0;
  }
  uint64_t v8 = v7;
  swift_release();
  os_unfair_lock_unlock(v3);
  sub_1B2AD2B58(v2);
  return v6;
}

_DWORD *UnsafeMutablePointer<A>.init()()
{
  unint64_t result = (_DWORD *)swift_slowAlloc();
  *unint64_t result = 0;
  return result;
}

void UnsafeMutablePointer<A>.cleanupLock()()
{
}

BOOL UnsafeMutablePointer<A>.trylock()(os_unfair_lock_s *a1)
{
  return os_unfair_lock_trylock(a1);
}

void *UnsafeMutablePointer<A>.init()()
{
  unint64_t result = (void *)swift_slowAlloc();
  *unint64_t result = 0;
  return result;
}

uint64_t UnsafeMutablePointer<A>.lock()()
{
  return os_unfair_recursive_lock_lock_with_options();
}

uint64_t UnsafeMutablePointer<A>.trylock()()
{
  return os_unfair_recursive_lock_trylock();
}

uint64_t UnsafeMutablePointer<A>.unlock()()
{
  return MEMORY[0x1F40CD628]();
}

uint64_t UnfairLockedBox.init(contents:)()
{
  sub_1B29A20AC();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = (_DWORD *)swift_slowAlloc();
  *uint64_t v3 = 0;
  *(void *)(v0 + v2) = v3;
  sub_1B299F5F0();
  sub_1B29A530C();
  (*(void (**)(void))(v4 + 32))();
  return v0;
}

uint64_t UnfairLockedBox.__deallocating_deinit()
{
  return sub_1B2D4A974((void (*)(void))UnfairLockedBox.deinit);
}

void UnfairLockedBox.replace(contents:)()
{
  sub_1B29A20AC();
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + *(void *)(v2 + 96));
  os_unfair_lock_lock(v3);
  sub_1B299F5F0();
  uint64_t v5 = v1 + *(void *)(v4 + 88);
  swift_beginAccess();
  sub_1B29A530C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v5, v0);
  swift_endAccess();
  os_unfair_lock_unlock(v3);
}

void UnfairLockedBox.replace(_:)(void (*a1)(void))
{
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  sub_1B299D490();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - v8;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + *(void *)(v10 + 96)));
  a1();
  if (!v2)
  {
    uint64_t v11 = v1 + *(void *)(*(void *)v1 + 88);
    sub_1B29A0E20();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v11, v9, v4);
    swift_endAccess();
  }
  sub_1B2D4A7A4(v1);
}

void sub_1B2D4A7A4(uint64_t a1)
{
}

uint64_t UnfairRecursiveLockedBox.__allocating_init(contents:)(uint64_t a1)
{
  return sub_1B2D4A7D8(a1, (void (*)(uint64_t))UnfairRecursiveLockedBox.init(contents:));
}

uint64_t sub_1B2D4A7D8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

uint64_t UnfairRecursiveLockedBox.init(contents:)()
{
  sub_1B29A20AC();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = (void *)swift_slowAlloc();
  *uint64_t v3 = 0;
  *(void *)(v0 + v2) = v3;
  sub_1B299F5F0();
  sub_1B29A530C();
  (*(void (**)(void))(v4 + 32))();
  return v0;
}

uint64_t *_s20IntelligencePlatform15UnfairLockedBoxCfd_0()
{
  uint64_t v1 = *v0;
  MEMORY[0x1B3EB30C0](*(uint64_t *)((char *)v0 + *(void *)(*v0 + 96)), -1, -1);
  sub_1B299F5F0();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(v2 + 88));
  return v0;
}

uint64_t UnfairRecursiveLockedBox.__deallocating_deinit()
{
  return sub_1B2D4A974((void (*)(void))UnfairRecursiveLockedBox.deinit);
}

uint64_t sub_1B2D4A974(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t UnfairRecursiveLockedBox.access<A>(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  os_unfair_recursive_lock_lock_with_options();
  a1(v3 + *(void *)(*(void *)v3 + 88));
  return sub_1B29A3668(v3, a3, MEMORY[0x1E4F14A20]);
}

uint64_t type metadata accessor for UnfairLockedBox()
{
  return sub_1B29A1278();
}

uint64_t method lookup function for UnfairLockedBox(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UnfairLockedBox);
}

uint64_t dispatch thunk of UnfairLockedBox.__allocating_init(contents:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1B2D4AACC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for UnfairRecursiveLockedBox()
{
  return sub_1B29A1278();
}

uint64_t method lookup function for UnfairRecursiveLockedBox(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UnfairRecursiveLockedBox);
}

uint64_t dispatch thunk of UnfairRecursiveLockedBox.__allocating_init(contents:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1B2D4ABB4(uint64_t a1)
{
  uint64_t v2 = *(os_unfair_lock_s **)(a1 + 24);
  os_unfair_lock_lock(v2);
}

uint64_t sub_1B2D4ABDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  sub_1B299D804();
  uint64_t result = *(void *)(a2 + 32);
  if (result)
  {
    uint64_t result = (uint64_t)sub_1B2A1726C(result);
    if (v8)
    {
      uint64_t v9 = v7;
      swift_bridgeObjectRelease();
      sub_1B299D804();
      uint64_t v10 = *(void *)(v9 + 24);
      if (v10)
      {
        uint64_t v11 = *(void *)(v10 + 16);
        uint64_t v12 = *(void *)(v10 + 24);
        uint64_t v13 = qword_1EB7D96B0;
        swift_retain();
        swift_bridgeObjectRetain();
        if (v13 != -1) {
          swift_once();
        }
        uint64_t v14 = qword_1EB7F3378;
        if (*(void *)(qword_1EB7F3378 + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = sub_1B29DB060(v11, v12, v15, v16, v17, v18, v19, v20, v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, v28[0], v28[1], v28[2], v29, v30, v31,
                  v32,
                  v33,
                  v34,
                  v35,
                  v36,
                  v37,
                  v38);
          if (v22)
          {
            sub_1B29C3B84(*(void *)(v14 + 56) + 40 * v21, (uint64_t)&v25);
          }
          else
          {
            uint64_t v27 = 0;
            long long v25 = 0u;
            long long v26 = 0u;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v27 = 0;
          long long v25 = 0u;
          long long v26 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v26 + 1))
        {
          sub_1B29D1D20(&v25, (uint64_t)v28);
          uint64_t v23 = v29;
          uint64_t v24 = v30;
          sub_1B29AEC7C(v28, v29);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 32))(a1, v10, v23, v24);
          swift_release();
          swift_release();
          return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v28);
        }
        swift_release();
        swift_release();
        uint64_t result = sub_1B2A349F4((uint64_t)&v25);
      }
      else
      {
        uint64_t result = swift_release();
      }
    }
  }
  *a3 = *(unsigned char *)(a2 + 64);
  return result;
}

uint64_t sub_1B2D4ADC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = v7;
  uint64_t v293 = a7;
  v294 = a1;
  uint64_t v278 = a3;
  uint64_t v279 = a4;
  uint64_t v277 = a2;
  uint64_t Context = type metadata accessor for QueryContext();
  MEMORY[0x1F4188790](Context);
  uint64_t v13 = (char *)&v239 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ResultGraph();
  uint64_t v15 = sub_1B29A2D00();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  *(void *)(v15 + 16) = sub_1B2E82148();
  *(void *)(v15 + 24) = v16;
  uint64_t v317 = type metadata accessor for LogicalOperator();
  v318 = &off_1F0AC8120;
  uint64_t v314 = v9;
  swift_retain();
  sub_1B2D5F8A8(&v314);
  uint64_t v18 = v17;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v314);
  if (v8)
  {
    swift_willThrow();
    return swift_release();
  }
  v291 = (uint64_t *)v13;
  uint64_t v20 = v294;
  uint64_t v259 = a5;
  uint64_t v245 = v14;
  uint64_t v21 = v18;
  uint64_t v22 = *(void *)(v18 + 16);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    v20[1] = v15;
    return result;
  }
  v268 = (int *)Context;
  uint64_t v269 = 0;
  uint64_t v244 = v15;
  uint64_t v23 = 0;
  uint64_t v275 = 0;
  uint64_t v276 = 0;
  uint64_t v270 = 0;
  v271 = 0;
  uint64_t v272 = 0;
  uint64_t v273 = 0;
  uint64_t v274 = 0;
  uint64_t v24 = 0;
  uint64_t v290 = 0;
  uint64_t v260 = 0;
  uint64_t v261 = 0;
  int v280 = 0;
  v295 = (uint64_t *)(v259 + 32);
  uint64_t v241 = v21;
  uint64_t v242 = v293 + 1;
  BOOL v25 = __OFADD__(v293, 1);
  HIDWORD(v243) = v25;
  v240 = v298;
  unint64_t v292 = 0x1FFFFFFFELL;
  uint64_t v258 = v9;
  uint64_t v26 = 0;
  uint64_t v27 = v21;
  while (1)
  {
    uint64_t v29 = *(void *)(v27 + v23 + 32);
    uint64_t v28 = *(void *)(v27 + v23 + 40);
    uint64_t v30 = v295;
    swift_beginAccess();
    uint64_t v31 = *v30;
    if (!v31)
    {
      swift_bridgeObjectRetain();
LABEL_17:
      swift_endAccess();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    uint64_t v32 = *(void *)(v31 + 16);
    swift_bridgeObjectRetain();
    if (!v32) {
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1B29DB060(v29, v28, v33, v34, v35, v36, v37, v38, v239, (uint64_t)v240, v241, v242, v243, v244, v245, v246, v247, v248, v249,
            v250,
            v251,
            v252,
            v253,
            v254,
            v255,
            v256);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    uint64_t v41 = *(void *)(*(void *)(v31 + 56) + 8 * v39);
    swift_endAccess();
    swift_retain();
    swift_bridgeObjectRelease_n();
    sub_1B299D804();
    uint64_t v328 = *(void *)(v41 + 24);
    if (v328)
    {
      if ((sub_1B2DC1F00() & 1) == 0) {
        break;
      }
    }
    swift_release();
LABEL_18:
    v23 += 16;
    if (!--v22)
    {
      uint64_t v267 = v24;
      swift_bridgeObjectRelease();
      uint64_t v172 = v244;
      goto LABEL_48;
    }
  }
  uint64_t v246 = v41;
  uint64_t v42 = v294[1];
  uint64_t v289 = *v294;
  uint64_t v293 = v26;
  uint64_t v267 = v24;
  if (v42)
  {
    swift_retain();
    swift_retain();
    uint64_t v255 = v42;
    uint64_t v257 = v42;
  }
  else
  {
    uint64_t v43 = sub_1B29A2D00();
    swift_retain();
    swift_retain();
    uint64_t v44 = MEMORY[0x1E4FBC860];
    uint64_t v45 = sub_1B2E82148();
    uint64_t v255 = 0;
    *(void *)(v43 + 16) = v45;
    *(void *)(v43 + 24) = v44;
    uint64_t v257 = v43;
  }
  uint64_t v46 = v294;
  uint64_t v262 = v294[2];
  uint64_t v47 = v268;
  uint64_t v48 = v268[7];
  uint64_t v49 = (char *)v294 + v48;
  uint64_t v50 = v291;
  uint64_t v51 = (char *)v291 + v48;
  uint64_t v52 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v51, v49, v52);
  uint64_t v53 = v47[9];
  uint64_t v54 = (char *)v46 + v47[8];
  uint64_t v55 = *(void *)v54;
  uint64_t v263 = *((void *)v54 + 1);
  uint64_t v247 = *((void *)v54 + 2);
  unint64_t v56 = *((void *)v54 + 3);
  uint64_t v265 = v55;
  unint64_t v266 = v56;
  uint64_t v57 = *((void *)v54 + 5);
  uint64_t v281 = *((void *)v54 + 4);
  uint64_t v282 = v57;
  uint64_t v58 = *((void *)v54 + 7);
  uint64_t v59 = *((void *)v54 + 8);
  uint64_t v248 = *((void *)v54 + 6);
  uint64_t v249 = v58;
  uint64_t v60 = *((void *)v54 + 10);
  uint64_t v284 = *((void *)v54 + 9);
  uint64_t v250 = v59;
  uint64_t v251 = v60;
  uint64_t v62 = *((void *)v54 + 12);
  uint64_t v252 = *((void *)v54 + 11);
  uint64_t v61 = v252;
  uint64_t v253 = v62;
  uint64_t v287 = *(uint64_t *)((char *)v46 + v53);
  uint64_t v63 = v47[14];
  LODWORD(v53) = *((unsigned __int8 *)v46 + v47[13]);
  uint64_t v64 = v46;
  LOBYTE(v46) = v54[104];
  LODWORD(v254) = v46;
  HIDWORD(v254) = v53;
  uint64_t v65 = v47[11];
  uint64_t v264 = *(uint64_t *)((char *)v64 + v47[10]);
  uint64_t v285 = *(uint64_t *)((char *)v64 + v65);
  uint64_t v286 = *(uint64_t *)((char *)v64 + v65 + 8);
  uint64_t v288 = *(uint64_t *)((char *)v64 + v65 + 24);
  HIDWORD(v256) = *((unsigned __int8 *)v64 + v63);
  LODWORD(v283) = *((unsigned __int8 *)v64 + v65 + 16);
  swift_retain();
  unsigned __int8 v238 = v46;
  unint64_t v237 = v61;
  uint64_t v235 = v60;
  uint64_t v67 = v247;
  uint64_t v66 = v248;
  uint64_t v68 = v249;
  sub_1B2A349B4(v265, v263, v247, v266, v281, v282, v248, v249, v59, v284, v235, v237, v62, v238);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29C65EC(v285, v286, v283);
  swift_bridgeObjectRetain();
  uint64_t v69 = MEMORY[0x1E4FBC860];
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v70 = (char *)v50 + v47[8];
  uint64_t v71 = v47[10];
  *uint64_t v50 = v289;
  uint64_t v72 = v47[12];
  uint64_t v73 = v47[13];
  uint64_t v74 = v47[14];
  uint64_t v75 = v262;
  v50[1] = v257;
  v50[2] = v75;
  uint64_t v76 = v263;
  *(void *)uint64_t v70 = v265;
  *((void *)v70 + 1) = v76;
  unint64_t v77 = v266;
  *((void *)v70 + 2) = v67;
  *((void *)v70 + 3) = v77;
  uint64_t v78 = v282;
  *((void *)v70 + 4) = v281;
  *((void *)v70 + 5) = v78;
  *((void *)v70 + 6) = v66;
  *((void *)v70 + 7) = v68;
  uint64_t v79 = v284;
  *((void *)v70 + 8) = v250;
  *((void *)v70 + 9) = v79;
  uint64_t v80 = v252;
  *((void *)v70 + 10) = v251;
  *((void *)v70 + 11) = v80;
  *((void *)v70 + 12) = v253;
  v70[104] = v254;
  *(uint64_t *)((char *)v50 + v47[9]) = v287;
  *((unsigned char *)v50 + v73) = BYTE4(v254);
  BOOL v81 = (uint64_t *)((char *)v50 + v72);
  *BOOL v81 = 0;
  v81[1] = v69;
  v81[2] = v69;
  *(uint64_t *)((char *)v50 + v71) = v264;
  BOOL v82 = (char *)v50 + v47[11];
  uint64_t v83 = v286;
  *(void *)BOOL v82 = v285;
  *((void *)v82 + 1) = v83;
  v82[16] = v283;
  *((void *)v82 + 3) = v288;
  *((unsigned char *)v50 + v74) = BYTE4(v256);
  if ((v243 & 0x100000000) != 0)
  {
    __break(1u);
LABEL_58:
    __break(1u);
    return result;
  }
  uint64_t v84 = v293;
  uint64_t v85 = sub_1B2D5CB70((uint64_t)&v314, (uint64_t)v50, (uint64_t)&v328, v259, v242, v277, v278, v279);
  if (v84)
  {
    uint64_t v185 = swift_release();
    sub_1B29A315C(v185, v186, v187, v188, v189, v190, v191, v192, v231, v233, v261, v292, v260, v280);
    swift_release();
    sub_1B2A32B10((uint64_t)v291);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v86 = v85;
  uint64_t v263 = v314;
  uint64_t v257 = v315;
  uint64_t v284 = v316;
  uint64_t v285 = v317;
  uint64_t v288 = v319;
  uint64_t v289 = (uint64_t)v318;
  uint64_t v286 = v321;
  uint64_t v287 = v320;
  uint64_t v282 = v323;
  uint64_t v283 = v322;
  uint64_t v281 = v324;
  unint64_t v87 = v325;
  uint64_t v265 = v326;
  int v88 = v327;
  sub_1B299F5F0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *))(v89 + 240))(v86, &v314);
  if ((result & 1) == 0)
  {
    uint64_t v193 = sub_1B299DE50(result, v90, v91, v92, v93, v94, v95, v96, v231, v233, v236, v87, v265, v88);
    sub_1B29A315C(v193, v194, v195, v196, v197, v198, v199, v200, v232, v234, v261, v292, v260, v280);
    swift_bridgeObjectRelease();
    uint64_t v201 = v244;
    sub_1B2D97734();
    swift_release();
    swift_release();
    sub_1B2A32B10((uint64_t)v291);
    swift_release();
    v202 = v294;
    uint64_t result = swift_release();
    v202[1] = v201;
    return result;
  }
  BOOL v97 = (uint64_t *)((char *)v294 + v268[12]);
  uint64_t v98 = *v97 + *v81;
  if (__OFADD__(*v97, *v81)) {
    goto LABEL_58;
  }
  uint64_t v264 = v86;
  uint64_t v293 = 0;
  *BOOL v97 = v98;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1B2AD2DD4();
  swift_bridgeObjectRetain();
  sub_1B2AD34B0();
  swift_bridgeObjectRelease();
  uint64_t v99 = swift_bridgeObjectRelease();
  uint64_t v107 = (uint64_t)v291;
  uint64_t v108 = v291[2];
  if (v108 <= v262) {
    uint64_t v108 = v262;
  }
  v294[2] = v108;
  if (!v328 || (*(unsigned char *)(v328 + 81) & 1) == 0)
  {
    uint64_t v26 = v293;
    uint64_t v109 = v290;
    int v110 = v88;
    if (v87 >> 1 != 0xFFFFFFFF || (v88 & 0x1E) != 0)
    {
      uint64_t v137 = v267;
      uint64_t v139 = v260;
      uint64_t v138 = v261;
      unint64_t v266 = v87;
      if (v23)
      {
        uint64_t v300 = v275;
        uint64_t v301 = v276;
        uint64_t v302 = v269;
        uint64_t v303 = v270;
        uint64_t v304 = (uint64_t)v271;
        uint64_t v305 = v272;
        uint64_t v306 = v273;
        uint64_t v307 = v274;
        uint64_t v308 = v267;
        uint64_t v309 = v290;
        uint64_t v310 = v261;
        unint64_t v140 = v292;
        unint64_t v311 = v292;
        uint64_t v312 = v260;
        unsigned __int8 v141 = v280;
        char v313 = v280;
        uint64_t v296 = v263;
        uint64_t v297 = v257;
        v298[0] = v284;
        v298[1] = v285;
        v298[2] = v289;
        v298[3] = v288;
        v298[4] = v287;
        v298[5] = v286;
        v298[6] = v283;
        v298[7] = v282;
        v298[8] = v281;
        v298[9] = v87;
        v298[10] = v265;
        char v299 = v110;
        sub_1B299F5F0();
        unsigned __int8 v143 = v110;
        uint64_t v144 = v293;
        (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t *))(v142 + 232))(&v314, &v300, &v296);
        if (v144)
        {
          swift_release();
          swift_release();
          uint64_t v204 = swift_release();
          sub_1B29A315C(v204, v205, v206, v207, v208, v209, v210, v211, v231, v233, v138, v140, v139, v141);
          sub_1B2D4CDD0();
          uint64_t v212 = swift_bridgeObjectRelease();
          sub_1B299DE50(v212, v213, v214, v215, v216, v217, v218, v219, v228, v229, v230, v266, v265, v143);
          return swift_release();
        }
        swift_release();
        uint64_t v145 = swift_release();
        sub_1B29A315C(v145, v146, v147, v148, v149, v150, v151, v152, v231, v233, v138, v140, v139, v141);
        uint64_t v153 = sub_1B2D4CDD0();
        sub_1B299DE50(v153, v154, v155, v156, v157, v158, v159, v160, v228, v229, v230, v266, v265, v143);
        uint64_t v134 = v314;
        uint64_t v284 = v316;
        uint64_t v285 = v317;
        uint64_t v288 = v319;
        uint64_t v289 = (uint64_t)v318;
        uint64_t v286 = v321;
        uint64_t v287 = v320;
        uint64_t v282 = v323;
        uint64_t v283 = v322;
        uint64_t v281 = v324;
        uint64_t v135 = v326;
        unint64_t v266 = v325;
        int v136 = v327;
        uint64_t v26 = 0;
        uint64_t v133 = v315;
        goto LABEL_44;
      }
      uint64_t v135 = v265;
      int v136 = v110;
      uint64_t v161 = sub_1B2A32B10((uint64_t)v291);
      sub_1B2D4CD74(v161, v162, v163, v164, v165, v166, v167, v168, v137, v109, v138, v292, v139, v280);
      swift_release();
      swift_release();
      uint64_t v26 = v293;
      uint64_t v27 = v241;
      uint64_t v134 = v263;
      uint64_t v133 = v257;
    }
    else
    {
      uint64_t v24 = v267;
      if (v23)
      {
        uint64_t v111 = v275;
        uint64_t v112 = v276;
        if (v292 >> 1 != 0xFFFFFFFF || (v280 & 0x1E) != 0)
        {
          int v113 = v280;
          if ((v280 & 0x10) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v169 = v112;
            uint64_t v171 = v269;
            uint64_t v170 = v270;
            sub_1B29C65EC(v169, v269, v270);
            swift_release();
            swift_release();
            sub_1B2A34A54(v275, v276, v171, v170, (uint64_t)v271, v272, v273, v274, v24, v290, v261, v292, v260, v113);
            sub_1B2D4CDD0();
            swift_release();
            uint64_t v27 = v241;
            goto LABEL_18;
          }
          sub_1B299D804();
          uint64_t v114 = swift_bridgeObjectRetain();
          uint64_t v115 = sub_1B2DDC660(v114);
          uint64_t v300 = v111;
          uint64_t v301 = v112;
          uint64_t v302 = v269;
          uint64_t v303 = v270;
          uint64_t v304 = (uint64_t)v271;
          uint64_t v305 = v272;
          uint64_t v306 = v273;
          uint64_t v307 = v274;
          uint64_t v308 = v24;
          uint64_t v309 = v290;
          uint64_t v116 = v261;
          uint64_t v310 = v261;
          unint64_t v117 = v292;
          unint64_t v311 = v292;
          uint64_t v118 = v26;
          uint64_t v119 = v260;
          uint64_t v312 = v260;
          char v313 = v113;
          uint64_t v296 = 0;
          uint64_t v297 = v115;
          uint64_t v120 = (uint64_t)v240;
          _OWORD *v240 = 0u;
          *(_OWORD *)(v120 + 16) = 0u;
          *(_OWORD *)(v120 + 32) = 0u;
          *(_OWORD *)(v120 + 48) = 0u;
          *(_OWORD *)(v120 + 64) = 0u;
          *(void *)(v120 + 80) = 0;
          char v299 = 32;
          int v280 = v113;
          sub_1B299F5F0();
          (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t *))(v121 + 232))(&v314, &v300, &v296);
          uint64_t v293 = v118;
          if (v118)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            uint64_t v220 = swift_release();
            sub_1B2D4CD74(v220, v221, v222, v223, v224, v225, v226, v227, v24, v290, v116, v117, v119, v280);
            sub_1B2D4CDD0();
            swift_bridgeObjectRelease();
            return swift_release();
          }
          swift_bridgeObjectRelease_n();
          uint64_t v122 = swift_bridgeObjectRelease();
          sub_1B2D4CD74(v122, v123, v124, v125, v126, v127, v128, v129, v24, v290, v116, v117, v119, v280);
          uint64_t v275 = v314;
          uint64_t v276 = v315;
          uint64_t v269 = v316;
          uint64_t v270 = v317;
          v271 = v318;
          uint64_t v272 = v319;
          uint64_t v24 = v322;
          uint64_t v273 = v320;
          uint64_t v274 = v321;
          uint64_t v290 = v323;
          unint64_t v292 = v325;
          uint64_t v260 = v326;
          uint64_t v261 = v324;
          int v280 = v327;
          uint64_t v26 = v293;
        }
        sub_1B299F5F0();
        v131 = *(void (**)(uint64_t, uint64_t))(v130 + 224);
        uint64_t v132 = swift_retain();
        v131(v132, v264);
        swift_release();
        swift_release();
        swift_release();
        sub_1B2A32B10((uint64_t)v291);
        uint64_t v133 = v276;
        uint64_t v284 = v269;
        uint64_t v285 = v270;
        uint64_t v288 = v272;
        uint64_t v289 = (uint64_t)v271;
        uint64_t v286 = v274;
        uint64_t v287 = v273;
        uint64_t v283 = v24;
        uint64_t v134 = v275;
        uint64_t v135 = v260;
        uint64_t v281 = v261;
        uint64_t v282 = v290;
        unint64_t v266 = v292;
        int v136 = v280;
      }
      else
      {
        sub_1B2A32B10((uint64_t)v291);
        swift_release();
        swift_release();
        uint64_t v284 = v269;
        uint64_t v285 = v270;
        uint64_t v288 = v272;
        uint64_t v289 = (uint64_t)v271;
        uint64_t v286 = v274;
        uint64_t v287 = v273;
        uint64_t v282 = v109;
        uint64_t v283 = v24;
        uint64_t v134 = v275;
        uint64_t v133 = v276;
        uint64_t v135 = v260;
        uint64_t v281 = v261;
        unint64_t v266 = v292;
        int v136 = v280;
        uint64_t v244 = v264;
      }
LABEL_44:
      uint64_t v27 = v241;
    }
    swift_release();
    uint64_t v275 = v134;
    uint64_t v276 = v133;
    uint64_t v24 = v283;
    uint64_t v269 = v284;
    uint64_t v270 = v285;
    v271 = (_UNKNOWN **)v289;
    uint64_t v272 = v288;
    uint64_t v273 = v287;
    uint64_t v274 = v286;
    uint64_t v290 = v282;
    uint64_t v260 = v135;
    uint64_t v261 = v281;
    unint64_t v292 = v266;
    int v280 = v136;
    goto LABEL_18;
  }
  sub_1B299DE50(v99, v100, v101, v102, v103, v104, v105, v106, v231, v233, v236, v87, v265, v88);
  swift_bridgeObjectRelease();
  uint64_t v172 = sub_1B29A2D00();
  uint64_t v203 = MEMORY[0x1E4FBC860];
  *(void *)(v172 + 16) = sub_1B2E82148();
  *(void *)(v172 + 24) = v203;
  swift_release();
  swift_release();
  swift_release();
  sub_1B2A32B10(v107);
  swift_release();
LABEL_48:
  v173 = v294;
  uint64_t result = swift_release();
  v174 = v173;
  v173[1] = v172;
  uint64_t v175 = v269;
  uint64_t v177 = v273;
  uint64_t v176 = v274;
  uint64_t v179 = (uint64_t)v271;
  uint64_t v178 = v272;
  uint64_t v180 = v270;
  if (v292 >> 1 != 0xFFFFFFFF || (v280 & 0x1E) != 0)
  {
    uint64_t v181 = (uint64_t)v174 + v268[8];
    uint64_t result = sub_1B2A34A54(*(void *)v181, *(void *)(v181 + 8), *(void *)(v181 + 16), *(void *)(v181 + 24), *(void *)(v181 + 32), *(void *)(v181 + 40), *(void *)(v181 + 48), *(void *)(v181 + 56), *(void *)(v181 + 64), *(void *)(v181 + 72), *(void *)(v181 + 80), *(void *)(v181 + 88), *(void *)(v181 + 96), *(unsigned char *)(v181 + 104));
    uint64_t v182 = v276;
    *(void *)uint64_t v181 = v275;
    *(void *)(v181 + 8) = v182;
    *(void *)(v181 + 16) = v175;
    *(void *)(v181 + 24) = v180;
    *(void *)(v181 + 32) = v179;
    *(void *)(v181 + 40) = v178;
    *(void *)(v181 + 48) = v177;
    *(void *)(v181 + 56) = v176;
    uint64_t v183 = v290;
    *(void *)(v181 + 64) = v267;
    *(void *)(v181 + 72) = v183;
    unint64_t v184 = v292;
    *(void *)(v181 + 80) = v261;
    *(void *)(v181 + 88) = v184;
    *(void *)(v181 + 96) = v260;
    *(unsigned char *)(v181 + 104) = v280;
  }
  return result;
}

uint64_t sub_1B2D4BD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *(**v175)(uint64_t *__return_ptr, void *, void *);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void *(*v179)(uint64_t *__return_ptr, void *, void *);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unsigned __int8 v187;
  unsigned __int8 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  void (*v243)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  void *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void v259[13];
  char v260;
  void v261[3];
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  char v272;
  uint64_t v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  uint64_t v285;
  unsigned __int8 v286;
  uint64_t v287;

  uint64_t v10 = a2;
  uint64_t v12 = a2 + *(int *)(type metadata accessor for QueryContext() + 32);
  if (*(void *)(v12 + 88) >> 1 != 0xFFFFFFFFLL || (*(unsigned char *)(v12 + 104) & 0x1E) != 0)
  {
    uint64_t v14 = sub_1B2D4CDE8(*(void *)v12, *(void *)(v12 + 8), *(void *)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56));
    *(void *)(a1 + 64) = v16;
    *(void *)(a1 + 72) = v15;
    *(void *)(a1 + 80) = v18;
    *(void *)(a1 + 88) = v17;
    *(void *)(a1 + 96) = v19;
    *(unsigned char *)(a1 + 104) = v20;
    sub_1B29C6430(v14, v21, v22, v23, v24, v25, v26, v27, v16, v15, v18, v17, v19, v20);
LABEL_6:
    char v28 = 0;
    return v28 & 1;
  }
  uint64_t v198 = a4;
  sub_1B299D804();
  uint64_t v164 = a1;
  uint64_t v252 = a6;
  if (*(void *)(a6 + 32))
  {
    uint64_t v29 = *(void *)(a6 + 32);
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    uint64_t v29 = sub_1B2E82148();
  }
  uint64_t v30 = v29 + 64;
  uint64_t v31 = 1 << *(unsigned char *)(v29 + 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  unint64_t v33 = v32 & *(void *)(v29 + 64);
  uint64_t v287 = (unint64_t)(v31 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v35 = 0;
  uint64_t v255 = MEMORY[0x1E4FBC860];
  uint64_t v256 = a5;
  uint64_t v192 = a3;
  uint64_t v195 = v29;
  uint64_t v186 = v29 + 64;
  uint64_t v189 = v10;
  while (v33)
  {
    unint64_t v36 = __clz(__rbit64(v33));
    v33 &= v33 - 1;
    unint64_t v37 = v36 | (v35 << 6);
LABEL_26:
    uint64_t v41 = *(void *)(*(void *)(v29 + 56) + 8 * v37);
    uint64_t result = sub_1B299D804();
    uint64_t v42 = *(void *)(v41 + 24);
    if (v42)
    {
      v259[0] = *(void *)(v41 + 24);
      swift_retain();
      swift_retain();
      sub_1B2D60674(v261, v10, v259, a3, v198, a5);
      if (v258)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        return v28 & 1;
      }
      uint64_t v43 = v263;
      uint64_t v248 = v262;
      sub_1B29AEC7C(v261, v262);
      uint64_t v243 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 64);
      swift_retain();
      v243(&v273, v10, a3, v198, v256, v42, v252, v248, v43);
      uint64_t v258 = 0;
      swift_release();
      uint64_t v44 = v274;
      unint64_t v45 = v284;
      uint64_t v204 = v273;
      uint64_t v208 = v283;
      uint64_t v249 = v275;
      unint64_t v237 = v277;
      uint64_t v244 = v276;
      uint64_t v225 = v279;
      uint64_t v231 = v278;
      uint64_t v216 = v281;
      uint64_t v220 = v280;
      uint64_t v212 = v282;
      uint64_t v201 = v285;
      unsigned __int8 v46 = v286;
      sub_1B299F5F0();
      uint64_t v29 = v195;
      if (((*(uint64_t (**)(void, uint64_t *))(v47 + 240))(0, &v273) & 1) == 0)
      {
        sub_1B2A34A54(v204, v44, v249, v244, v237, v231, v225, v220, v216, v212, v208, v45, v201, v46);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        *(void *)(v164 + 80) = 0;
        *(_OWORD *)(v164 + 48) = 0u;
        *(_OWORD *)(v164 + 64) = 0u;
        *(_OWORD *)(v164 + 16) = 0u;
        *(_OWORD *)(v164 + 32) = 0u;
        *(_OWORD *)uint64_t v164 = 0u;
        *(_OWORD *)(v164 + 88) = xmmword_1B2EC01D0;
        *(unsigned char *)(v164 + 104) = 0;
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v261);
        goto LABEL_6;
      }
      if (v45 >> 1 == 0xFFFFFFFF && (v46 & 0x1E) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v273 = 0;
        uint64_t v274 = 0xE000000000000000;
        sub_1B2E831F8();
        swift_bridgeObjectRelease();
        uint64_t v273 = 0x6F6E20646C696863;
        uint64_t v274 = 0xEB00000000206564;
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2E82518();
        swift_bridgeObjectRetain();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2E82518();
        uint64_t v136 = v273;
        unint64_t v137 = v274;
        sub_1B29D53EC();
        swift_allocError();
        *(void *)uint64_t v138 = v136;
        *(void *)(v138 + 8) = v137;
        *(unsigned char *)(v138 + 16) = 1;
        swift_willThrow();
        swift_release();
        swift_release();
        swift_release();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v261);
        return v28 & 1;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v48 = v255;
      }
      else
      {
        sub_1B29B7834();
        uint64_t v48 = v52;
      }
      unint64_t v49 = *(void *)(v48 + 16);
      unint64_t v50 = v49 + 1;
      if (v49 >= *(void *)(v48 + 24) >> 1)
      {
        sub_1B29B7834();
        unint64_t v50 = v49 + 1;
        uint64_t v48 = v53;
      }
      *(void *)(v48 + 16) = v50;
      uint64_t v255 = v48;
      uint64_t v51 = v48 + 112 * v49;
      *(void *)(v51 + 32) = v204;
      *(void *)(v51 + 40) = v44;
      *(void *)(v51 + 48) = v249;
      *(void *)(v51 + 56) = v244;
      *(void *)(v51 + 64) = v237;
      *(void *)(v51 + 72) = v231;
      *(void *)(v51 + 80) = v225;
      *(void *)(v51 + 88) = v220;
      *(void *)(v51 + 96) = v216;
      *(void *)(v51 + 104) = v212;
      *(void *)(v51 + 112) = v208;
      *(void *)(v51 + 120) = v45;
      *(void *)(v51 + 128) = v201;
      *(unsigned char *)(v51 + 136) = v46;
      swift_release();
      swift_release();
      uint64_t result = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v261);
      a5 = v256;
      uint64_t v30 = v186;
      uint64_t v10 = v189;
      a3 = v192;
    }
  }
  if (__OFADD__(v35++, 1))
  {
    __break(1u);
    goto LABEL_58;
  }
  if (v35 >= v287) {
    goto LABEL_41;
  }
  unint64_t v39 = *(void *)(v30 + 8 * v35);
  if (v39)
  {
LABEL_25:
    unint64_t v33 = (v39 - 1) & v39;
    unint64_t v37 = __clz(__rbit64(v39)) + (v35 << 6);
    goto LABEL_26;
  }
  uint64_t v40 = v35 + 1;
  if (v35 + 1 >= v287) {
    goto LABEL_41;
  }
  unint64_t v39 = *(void *)(v30 + 8 * v40);
  if (v39) {
    goto LABEL_24;
  }
  uint64_t v40 = v35 + 2;
  if (v35 + 2 >= v287) {
    goto LABEL_41;
  }
  unint64_t v39 = *(void *)(v30 + 8 * v40);
  if (v39) {
    goto LABEL_24;
  }
  uint64_t v40 = v35 + 3;
  if (v35 + 3 >= v287)
  {
LABEL_41:
    uint64_t v54 = v164;
    swift_release();
    if (((1 << *(unsigned char *)(v252 + 64)) & 0x1FA) == 0 || (uint64_t v55 = *(void *)(v255 + 16)) == 0)
    {
      swift_bridgeObjectRelease();
      char v28 = 0;
      *(void *)(v164 + 80) = 0;
      *(_OWORD *)(v164 + 48) = 0u;
      *(_OWORD *)(v164 + 64) = 0u;
      *(_OWORD *)(v164 + 16) = 0u;
      *(_OWORD *)(v164 + 32) = 0u;
      *(_OWORD *)uint64_t v164 = 0u;
      *(_OWORD *)(v164 + 88) = xmmword_1B2EC01D0;
      *(unsigned char *)(v164 + 104) = 0;
      return v28 & 1;
    }
    uint64_t v56 = *(void *)(v255 + 64);
    uint64_t v57 = *(void *)(v255 + 72);
    uint64_t v58 = *(void *)(v255 + 88);
    uint64_t v59 = *(void *)(v255 + 96);
    uint64_t v60 = *(void *)(v255 + 128);
    LODWORD(v220) = *(unsigned __int8 *)(v255 + 136);
    unsigned __int8 v159 = *(unsigned char *)(v255 + 136);
    uint64_t v226 = *(void *)(v255 + 120);
    uint64_t v232 = *(void *)(v255 + 112);
    unsigned __int8 v238 = *(void *)(v255 + 104);
    uint64_t v245 = *(void *)(v255 + 48);
    uint64_t v250 = *(void *)(v255 + 56);
    uint64_t v253 = *(void *)(v255 + 32);
    uint64_t v61 = *(void *)(v255 + 40);
    uint64_t v287 = *(void *)(v255 + 80);
    sub_1B29C6430(v253, v61, v245, v250, v56, v57, v287, v58, v59, v238, v232, v226, v60, v159);
    if (v55 == 1)
    {
      uint64_t v62 = swift_bridgeObjectRelease();
      *(void *)uint64_t v164 = v253;
      *(void *)(v164 + 8) = v61;
      *(void *)(v164 + 16) = v245;
      *(void *)(v164 + 24) = v250;
      *(void *)(v164 + 32) = v56;
      *(void *)(v164 + 40) = v57;
      *(void *)(v164 + 48) = v287;
      *(void *)(v164 + 56) = v58;
      sub_1B29A531C(v62, v63, v64, v65, v66, v67, v68, v69, v139, v143, v147, v151, v155, v160, v164, v167, v171, v174, v178,
        v182,
        v186,
        v189,
        v192,
        v195,
        v198,
        v201,
        v204,
        v208,
        v212,
        v216,
        v220,
        v226,
        v232,
        v238);
      *(unsigned char *)(v54 + 104) = v221;
      return v28 & 1;
    }
    uint64_t v70 = 0;
    uint64_t v71 = v255;
    unint64_t v72 = v61;
    uint64_t v74 = v238;
    uint64_t v73 = v245;
    uint64_t v75 = v250;
    uint64_t v76 = v253;
    uint64_t v77 = v56;
    uint64_t v257 = v57;
    uint64_t v78 = v226;
    uint64_t v79 = v232;
    uint64_t v80 = v60;
    char v81 = v220;
    uint64_t v82 = v58;
    while (1)
    {
      if (v70)
      {
        uint64_t v168 = v70;
        uint64_t v83 = v71 + v70;
        uint64_t v84 = *(void *)(v83 + 32);
        uint64_t v85 = *(void *)(v83 + 40);
        uint64_t v86 = *(void *)(v83 + 48);
        uint64_t v87 = *(void *)(v83 + 56);
        uint64_t v88 = *(void *)(v83 + 64);
        uint64_t v89 = *(void *)(v83 + 72);
        uint64_t v90 = *(void *)(v83 + 80);
        uint64_t v91 = *(void *)(v83 + 88);
        uint64_t v92 = *(void *)(v83 + 96);
        uint64_t v93 = *(void *)(v83 + 104);
        uint64_t v95 = *(void *)(v83 + 112);
        uint64_t v94 = *(void *)(v83 + 120);
        uint64_t v254 = v76;
        uint64_t v96 = *(void *)(v83 + 128);
        int v97 = *(unsigned __int8 *)(v83 + 136);
        v261[0] = v76;
        v261[1] = v72;
        v261[2] = v73;
        uint64_t v262 = v75;
        uint64_t v183 = v77;
        uint64_t v263 = v77;
        uint64_t v264 = v257;
        uint64_t v265 = v287;
        unint64_t v266 = v82;
        uint64_t v267 = v59;
        v268 = v74;
        uint64_t v269 = v79;
        uint64_t v270 = v78;
        v271 = v80;
        uint64_t v272 = v81;
        v259[0] = v84;
        v259[1] = v85;
        v259[2] = v86;
        v259[3] = v87;
        v259[4] = v88;
        v259[5] = v89;
        v259[6] = v90;
        v259[7] = v91;
        v259[8] = v92;
        v259[9] = v93;
        v259[10] = v95;
        v259[11] = v94;
        v259[12] = v96;
        uint64_t v260 = v97;
        uint64_t v251 = v75;
        uint64_t v175 = (void *(**)(uint64_t *__return_ptr, void *, void *))(*v247 + 232);
        uint64_t v179 = *v175;
        LODWORD(v186) = v97;
        uint64_t v205 = v84;
        uint64_t v209 = v85;
        uint64_t v213 = v86;
        uint64_t v217 = v87;
        uint64_t v222 = v88;
        uint64_t v227 = v89;
        uint64_t v233 = v90;
        uint64_t v239 = v91;
        sub_1B29C6430(v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v95, v94, v96, v97);
        uint64_t v98 = v179(&v273, v261, v259);
        if (v258)
        {
          sub_1B2D4CD94((uint64_t)v98, v99, v100, v101, v102, v103, v104, v105, v140, v144, v148, v152, v156, v161, v164, v168, v55, (uint64_t)v175, (uint64_t)v179,
            v183,
            v186,
            v96,
            v94,
            v95,
            v93,
            v92,
            v205,
            v209,
            v213,
            v217,
            v222,
            v227,
            v233,
            v239,
            v82,
            (uint64_t)v247,
            v251,
            v254,
            v255,
            v257);
          uint64_t v128 = swift_bridgeObjectRelease();
          sub_1B29A20C0(v128, v129, v130, v131, v132, v133, v134, v135, v142, v146, v150, v154, v158, v163, v166, v170, v173, v177, v181,
            v185,
            v188,
            v191,
            v194,
            v197,
            v200,
            v203,
            v207,
            v211,
            v215,
            v219,
            v224,
            v230,
            v236,
            v242);
          return v28 & 1;
        }
        uint64_t v106 = sub_1B2D4CD94((uint64_t)v98, v99, v100, v101, v102, v103, v104, v105, v140, v144, v148, v152, v156, v161, v164, v168, v55, (uint64_t)v175, (uint64_t)v179,
                 v183,
                 v186,
                 v96,
                 v94,
                 v95,
                 v93,
                 v92,
                 v205,
                 v209,
                 v213,
                 v217,
                 v222,
                 v227,
                 v233,
                 v239,
                 v82,
                 (uint64_t)v247,
                 v251,
                 v254,
                 v255,
                 v257);
        sub_1B29A20C0(v106, v107, v108, v109, v110, v111, v112, v113, v141, v145, v149, v153, v157, v162, v165, v169, v172, v176, v180,
          v184,
          v187,
          v190,
          v193,
          v196,
          v199,
          v202,
          v206,
          v210,
          v214,
          v218,
          v223,
          v228,
          v234,
          v240);
        uint64_t v76 = v273;
        unint64_t v72 = v274;
        uint64_t v73 = v275;
        uint64_t v75 = v276;
        uint64_t v77 = v277;
        uint64_t v257 = v278;
        uint64_t v82 = v280;
        uint64_t v287 = v279;
        uint64_t v59 = v281;
        uint64_t v74 = v282;
        uint64_t v79 = v283;
        uint64_t v78 = v284;
        uint64_t v80 = v285;
        char v81 = v286;
        uint64_t v54 = v164;
        uint64_t v70 = v167;
        uint64_t v71 = v255;
        uint64_t v55 = v171;
      }
      v70 += 112;
      if (!--v55)
      {
        unint64_t v114 = v72;
        uint64_t v241 = v74;
        uint64_t v246 = v82;
        uint64_t v115 = v73;
        uint64_t v116 = v75;
        uint64_t v117 = v77;
        uint64_t v229 = v78;
        uint64_t v235 = v79;
        char v118 = v81;
        uint64_t v119 = v76;
        uint64_t v120 = swift_bridgeObjectRelease();
        *(void *)uint64_t v54 = v119;
        *(void *)(v54 + 8) = v114;
        *(void *)(v54 + 16) = v115;
        *(void *)(v54 + 24) = v116;
        *(void *)(v54 + 32) = v117;
        *(void *)(v54 + 40) = v257;
        *(void *)(v54 + 48) = v287;
        *(void *)(v54 + 56) = v246;
        sub_1B29A531C(v120, v121, v122, v123, v124, v125, v126, v127, v139, v143, v147, v151, v155, v160, v164, v167, v171, v174, v178,
          v182,
          v186,
          v189,
          v192,
          v195,
          v198,
          v201,
          v204,
          v208,
          v212,
          v216,
          v220,
          v229,
          v235,
          v241);
        *(unsigned char *)(v54 + 104) = v118;
        return v28 & 1;
      }
    }
  }
  unint64_t v39 = *(void *)(v30 + 8 * v40);
  if (v39)
  {
LABEL_24:
    uint64_t v35 = v40;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v35 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v35 >= v287) {
      goto LABEL_41;
    }
    unint64_t v39 = *(void *)(v30 + 8 * v35);
    ++v40;
    if (v39) {
      goto LABEL_25;
    }
  }
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_1B2D4C6E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = v4;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if ((*(unsigned char *)(a2 + 80) & 1) == 0)
  {
    if (*(void *)(a1 + 8))
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      type metadata accessor for ResultGraph();
      uint64_t v13 = sub_1B29A2D00();
      swift_bridgeObjectRetain();
      *(void *)(v13 + 16) = sub_1B2E82148();
      *(void *)(v13 + 24) = v8;
    }
    swift_retain();
    return (uint64_t)a3;
  }
  uint64_t v10 = type metadata accessor for ResultGraph();
  uint64_t v11 = sub_1B29A2D00();
  *(void *)(v11 + 16) = sub_1B2E82148();
  *(void *)(v11 + 24) = v8;
  uint64_t v73 = type metadata accessor for LogicalOperator();
  uint64_t v74 = &off_1F0AC8120;
  uint64_t v70 = v3;
  swift_retain();
  sub_1B2D5F8A8(&v70);
  if (!v4)
  {
    uint64_t v14 = v12;
    uint64_t v58 = v10;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v70);
    uint64_t v15 = *(void *)(v14 + 16);
    uint64_t v62 = v14;
    if (!v15)
    {
LABEL_38:
      swift_bridgeObjectRelease();
      return sub_1B2D984EC();
    }
    uint64_t v16 = v14;
    uint64_t v59 = a1;
    uint64_t v60 = (uint64_t)a3;
    uint64_t v61 = v3;
    uint64_t v17 = (uint64_t *)(a2 + 32);
    a3 = (uint64_t *)(v16 + 40);
    while (1)
    {
      uint64_t v19 = *(a3 - 1);
      uint64_t v18 = *a3;
      swift_beginAccess();
      uint64_t v20 = *v17;
      if (!*v17) {
        break;
      }
      uint64_t v21 = *(void *)(v20 + 16);
      swift_bridgeObjectRetain();
      if (!v21) {
        goto LABEL_23;
      }
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1B29DB060(v19, v18, v22, v23, v24, v25, v26, v27, v57, v58, v59, v60, v61, v62, v63, *((uint64_t *)&v63 + 1), v64, *((uint64_t *)&v64 + 1), v65,
              v66,
              v67,
              v68,
              v69,
              v70,
              v71,
              v72);
      if ((v29 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      uint64_t v30 = *(void *)(*(void *)(v20 + 56) + 8 * v28);
      swift_endAccess();
      swift_retain();
      swift_bridgeObjectRelease_n();
      sub_1B299D804();
      uint64_t v31 = *(void *)(v30 + 24);
      if (!v31 || (*(unsigned char *)(v31 + 81) & 1) != 0)
      {
        swift_release();
      }
      else
      {
        uint64_t v75 = v5;
        uint64_t v32 = *(void *)(v31 + 16);
        uint64_t v33 = *(void *)(v31 + 24);
        uint64_t v34 = qword_1EB7D96B0;
        swift_retain();
        swift_bridgeObjectRetain();
        if (v34 != -1) {
          swift_once();
        }
        uint64_t v35 = qword_1EB7F3378;
        if (*(void *)(qword_1EB7F3378 + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v42 = sub_1B29DB060(v32, v33, v36, v37, v38, v39, v40, v41, v57, v58, v59, v60, v61, v62, v63, *((uint64_t *)&v63 + 1), v64, *((uint64_t *)&v64 + 1), v65,
                  v66,
                  v67,
                  v68,
                  v69,
                  v70,
                  v71,
                  v72);
          if (v43)
          {
            sub_1B29C3B84(*(void *)(v35 + 56) + 40 * v42, (uint64_t)&v63);
          }
          else
          {
            uint64_t v65 = 0;
            long long v63 = 0u;
            long long v64 = 0u;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v65 = 0;
          long long v63 = 0u;
          long long v64 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v64 + 1))
        {
          sub_1B29D1D20(&v63, (uint64_t)&v70);
          *(unsigned char *)(v31 + 80) = 1;
          uint64_t v44 = v73;
          unint64_t v45 = v74;
          sub_1B29AEC7C(&v70, v73);
          uint64_t v46 = v75;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v45[10])(v59, v31, v60, v44, v45);
          uint64_t v5 = v46;
          if (v46)
          {
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_6;
          }
          uint64_t v48 = v47;
          swift_bridgeObjectRelease();
          sub_1B299F5F0();
          if (((*(uint64_t (**)(uint64_t))(v49 + 248))(v48) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v54 = sub_1B29A2D00();
            uint64_t v55 = MEMORY[0x1E4FBC860];
            uint64_t v56 = sub_1B2E82148();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            *(void *)(v54 + 16) = v56;
            *(void *)(v54 + 24) = v55;
            _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v70);
            return v55;
          }
          sub_1B2D981C4(*(void *)(v31 + 48));
          if (!sub_1B2D971EC())
          {
            sub_1B299F5F0();
            uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v50 + 224);
            uint64_t v75 = 0;
            uint64_t v52 = swift_retain();
            v51(v52, v48);
            uint64_t v5 = v75;
            swift_release();
          }
          swift_release();
          swift_release();
          swift_release();
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v70);
        }
        else
        {
          swift_release();
          swift_release();
          sub_1B2A349F4((uint64_t)&v63);
          uint64_t v5 = v75;
        }
      }
LABEL_24:
      a3 += 2;
      if (!--v15) {
        goto LABEL_38;
      }
    }
    swift_bridgeObjectRetain();
LABEL_23:
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  swift_release();
LABEL_6:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v70);
  return (uint64_t)a3;
}

uint64_t sub_1B2D4CBD8(uint64_t result, uint64_t a2)
{
  if (result) {
    return sub_1B2D97224(a2);
  }
  return result;
}

double sub_1B2D4CC08@<D0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = *a1;
  long long v7 = a1[1];
  long long v8 = a1[2];
  long long v9 = a1[3];
  long long v10 = a1[4];
  uint64_t v11 = *((void *)a1 + 10);
  long long v12 = *(long long *)((char *)a1 + 88);
  char v13 = *((unsigned char *)a1 + 104);
  uint64_t v14 = *(void *)a2;
  uint64_t v15 = *(void *)(a2 + 8);
  uint64_t v16 = *(void *)(a2 + 16);
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v19 = *(void *)(a2 + 40);
  uint64_t v20 = *(void *)(a2 + 48);
  uint64_t v21 = *(void *)(a2 + 56);
  uint64_t v22 = *(void *)(a2 + 64);
  uint64_t v23 = *(void *)(a2 + 72);
  uint64_t v24 = *(void *)(a2 + 80);
  uint64_t v25 = *(void *)(a2 + 88);
  uint64_t v26 = *(void *)(a2 + 96);
  char v27 = *(unsigned char *)(a2 + 104);
  if ((unint64_t)v12 >> 1 != 0xFFFFFFFF || (v13 & 0x1E) != 0)
  {
    long long v53 = v6;
    long long v54 = v7;
    long long v55 = v8;
    long long v56 = v9;
    long long v57 = v10;
    uint64_t v58 = v11;
    long long v59 = v12;
    char v60 = v13;
    v51[0] = v14;
    v51[1] = v15;
    v51[2] = v16;
    v51[3] = v17;
    v51[4] = v18;
    v51[5] = v19;
    v51[6] = v20;
    v51[7] = v21;
    v51[8] = v22;
    v51[9] = v23;
    v51[10] = v24;
    v51[11] = v25;
    v51[12] = v26;
    char v52 = v27;
    unsigned __int8 v50 = 1;
    sub_1B2D83BA0((uint64_t)v51, &v50, (uint64_t)v61);
    if (!v3)
    {
      uint64_t v43 = v62;
      char v44 = v63;
      double result = *(double *)v61;
      long long v45 = v61[1];
      long long v46 = v61[2];
      long long v47 = v61[3];
      long long v48 = v61[4];
      long long v49 = v61[5];
      *(_OWORD *)a3 = v61[0];
      *(_OWORD *)(a3 + 16) = v45;
      *(_OWORD *)(a3 + 32) = v46;
      *(_OWORD *)(a3 + 48) = v47;
      *(_OWORD *)(a3 + 64) = v48;
      *(_OWORD *)(a3 + 80) = v49;
      *(void *)(a3 + 96) = v43;
      *(unsigned char *)(a3 + 104) = v44;
    }
  }
  else
  {
    uint64_t v28 = sub_1B2D4CDE8(v14, v15, v16, v17, v18, v19, v20, v21);
    *(void *)(a3 + 64) = v29;
    *(void *)(a3 + 72) = v30;
    *(void *)(a3 + 80) = v31;
    *(void *)(a3 + 88) = v32;
    *(void *)(a3 + 96) = v33;
    *(unsigned char *)(a3 + 104) = v34;
    sub_1B29C6430(v28, v35, v36, v37, v38, v39, v40, v41, v29, v30, v31, v32, v33, v34);
  }
  return result;
}

uint64_t type metadata accessor for LogicalOperator()
{
  return self;
}

uint64_t sub_1B2D4CD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v16 = v14[36];
  uint64_t v17 = v14[37];
  uint64_t v18 = v14[30];
  uint64_t v19 = v14[31];
  uint64_t v20 = v14[32];
  uint64_t v21 = v14[33];
  uint64_t v22 = v14[34];
  uint64_t v23 = v14[35];
  return sub_1B2A34A54(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1B2D4CD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v50 = *(void *)(v48 - 72);
  return sub_1B2A34A94(a38, v41, v47, a37, a20, a40, v50, a35, v43, v46, v40, v45, v44, v42);
}

uint64_t sub_1B2D4CDD0()
{
  uint64_t v2 = *(void *)(v0 + 416);
  return sub_1B2A32B10(v2);
}

uint64_t sub_1B2D4CDE8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *long long v8 = result;
  v8[1] = a2;
  v8[2] = a3;
  v8[3] = a4;
  void v8[4] = a5;
  v8[5] = a6;
  v8[6] = a7;
  v8[7] = a8;
  return result;
}

uint64_t LRUCache.__allocating_init(capacity:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  LRUCache.init(capacity:)(a1);
  return v2;
}

void *LRUCache.init(capacity:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  sub_1B29A2108();
  uint64_t v6 = *(void *)(v5 + 88);
  sub_1B2E82F38();
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v15 - v8;
  uint64_t v10 = *(void *)(v4 + 80);
  sub_1B29A0E38();
  sub_1B2E82F38();
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v15 - v12;
  v2[2] = a1;
  type metadata accessor for LRUCacheNode();
  sub_1B29A0E38();
  swift_getTupleTypeMetadata2();
  sub_1B2E828C8();
  v2[3] = sub_1B2E82148();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 1, 1, v10);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v9, 1, 1, v6);
  v2[4] = sub_1B29A5630((uint64_t)v13, (uint64_t)v9);
  swift_weakAssign();
  swift_weakAssign();
  return v2;
}

uint64_t LRUCache.remove(key:)(uint64_t a1)
{
  sub_1B29A2108();
  uint64_t v4 = *(void *)(v3 + 80);
  sub_1B299D31C();
  uint64_t v6 = v5;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v15 - v8;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v1 + 24);
  sub_1B29A2108();
  sub_1B29A2108();
  uint64_t v12 = *(void *)(v11 + 96);
  uint64_t v13 = type metadata accessor for LRUCacheNode();
  MEMORY[0x1B3EB09B0](&v15, a1, v10, v4, v13, v12);
  if (!v15) {
    return swift_endAccess();
  }
  swift_endAccess();
  sub_1B29A3688();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v4);
  uint64_t v15 = 0;
  sub_1B29A0E20();
  sub_1B2E821C8();
  sub_1B2E821F8();
  swift_endAccess();
  return swift_release();
}

uint64_t LRUCache.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t LRUCache.__deallocating_deinit()
{
  LRUCache.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2D4D1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return LRUCache.get(_:)(a1, a2);
}

uint64_t sub_1B2D4D218(uint64_t a1, uint64_t a2)
{
  return LRUCache.set(_:forKey:)(a1, a2);
}

uint64_t sub_1B2D4D23C(uint64_t a1)
{
  return LRUCache.remove(key:)(a1);
}

void sub_1B2D4D260()
{
}

uint64_t sub_1B2D4D284()
{
  uint64_t result = sub_1B2E82F38();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1B2E82F38();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B2D4D364()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LRUCache()
{
  return sub_1B29A1278();
}

uint64_t method lookup function for LRUCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LRUCache);
}

uint64_t dispatch thunk of LRUCache.__allocating_init(capacity:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1B2D4D40C()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EEAF40;
  *(void *)(v0 + 32) = &unk_1F0AC14E0;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EC01E0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EEAF50;
  *(void *)(v0 + 72) = 0x80000001B2EA1B40;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29B2124(0, 0);
  return v0;
}

uint64_t sub_1B2D4D4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (((1 << *(unsigned char *)(a6 + 64)) & 0x1FA) == 0)
  {
LABEL_30:
    char v25 = 0;
    *(void *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 88) = xmmword_1B2EC01D0;
    *(unsigned char *)(a1 + 104) = 0;
    return v25 & 1;
  }
  uint64_t v10 = (void *)(a6 + 32);
  sub_1B299DEC4();
  if (*(void *)(a6 + 32))
  {
    uint64_t v11 = sub_1B29B2540(115, 0xE100000000000000);
    if (!v11)
    {
      swift_endAccess();
      goto LABEL_10;
    }
    swift_endAccess();
    swift_beginAccess();
    uint64_t v12 = *(void *)(v11 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    if (*(void *)(v12 + 16))
    {
      uint64_t v11 = sub_1B2DDC660(v12);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v11 = 0;
LABEL_10:
  sub_1B299DEC4();
  if (!*v10)
  {
    swift_endAccess();
LABEL_17:
    uint64_t v13 = 0;
    goto LABEL_18;
  }
  uint64_t v13 = sub_1B29B2540(112, 0xE100000000000000);
  if (!v13)
  {
    swift_endAccess();
    goto LABEL_18;
  }
  swift_endAccess();
  swift_beginAccess();
  uint64_t v14 = *(void *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v13 = sub_1B2DDC660(v14);
LABEL_18:
  sub_1B299DEC4();
  if (*v10 && (uint64_t v15 = sub_1B29B2540(111, 0xE100000000000000)) != 0)
  {
    uint64_t v16 = v15;
    swift_endAccess();
    swift_beginAccess();
    uint64_t v17 = *(void *)(v16 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    if (*(void *)(v17 + 16))
    {
      uint64_t v18 = sub_1B2DDC660(v17);
      goto LABEL_24;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v18 = 0;
LABEL_24:
  sub_1B29A3EB4(&qword_1E9C37F48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC89A0;
  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v13;
  *(void *)(inited + 48) = v18;
  char v20 = sub_1B2DE35E4(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2D98F60();
  if (v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB7E30F0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1B2E81FB8();
    sub_1B29A4B98(v21, (uint64_t)qword_1EB7E30D8);
    uint64_t v22 = sub_1B2E81F98();
    os_log_type_t v23 = sub_1B2E82DB8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1B2996000, v22, v23, "Match operator must have at least one of subject predicate object", v24, 2u);
      MEMORY[0x1B3EB30C0](v24, -1, -1);
    }

    goto LABEL_30;
  }
  uint64_t v26 = (long long *)(a2 + *(int *)(type metadata accessor for QueryContext() + 32));
  unint64_t v27 = *((void *)v26 + 11);
  char v28 = *((unsigned char *)v26 + 104);
  char v29 = 32;
  if (v27 >> 1 != 0xFFFFFFFF || (*((unsigned char *)v26 + 104) & 0x1E) != 0)
  {
    uint64_t v37 = *((void *)v26 + 12);
    uint64_t v38 = *((void *)v26 + 10);
    long long v39 = v26[1];
    long long v51 = *v26;
    long long v40 = v26[2];
    long long v41 = v26[3];
    long long v52 = v39;
    long long v53 = v40;
    long long v42 = v26[4];
    long long v54 = v41;
    long long v55 = v42;
    uint64_t v56 = v38;
    unint64_t v57 = v27;
    uint64_t v58 = v37;
    char v59 = v28;
    v45[0] = 0;
    v45[1] = v11;
    v45[2] = 0;
    v45[3] = v13;
    v45[4] = 0;
    v45[5] = v18;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    uint64_t v49 = 0;
    char v50 = 32;
    unsigned __int8 v44 = 1;
    sub_1B2D83BA0((uint64_t)v45, &v44, (uint64_t)&v60);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6) {
      return v25 & 1;
    }
    uint64_t v30 = v60;
    long long v31 = v61;
    long long v32 = v62;
    long long v34 = v63;
    long long v33 = v64;
    long long v35 = v65;
    long long v36 = v66;
    char v29 = v67;
  }
  else
  {
    uint64_t v30 = 0;
    long long v31 = (unint64_t)v11;
    long long v32 = (unint64_t)v13;
    long long v33 = 0uLL;
    long long v34 = (unint64_t)v18;
    long long v35 = 0uLL;
    long long v36 = 0uLL;
  }
  *(void *)a1 = v30;
  *(_OWORD *)(a1 + 8) = v31;
  *(_OWORD *)(a1 + 24) = v32;
  *(_OWORD *)(a1 + 40) = v34;
  *(_OWORD *)(a1 + 56) = v33;
  *(_OWORD *)(a1 + 72) = v35;
  *(_OWORD *)(a1 + 88) = v36;
  char v25 = 1;
  *(unsigned char *)(a1 + 104) = v29;
  return v25 & 1;
}

uint64_t sub_1B2D4D954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ResultGraph();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v5 + 16) = sub_1B2E82148();
  *(void *)(v5 + 24) = v6;
  uint64_t v106 = v5;
  uint64_t v7 = sub_1B2DC1414(112, 0xE100000000000000);
  uint64_t v8 = sub_1B2DDC660(v7);
  uint64_t v9 = sub_1B2DC1414(111, 0xE100000000000000);
  uint64_t v10 = sub_1B2DDC660(v9);
  uint64_t v110 = v8;
  uint64_t v111 = v10;
  switch(*(unsigned char *)(a2 + 64))
  {
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      uint64_t v11 = sub_1B2DC1414(115, 0xE100000000000000);
      uint64_t v12 = sub_1B2DDC660(v11);
      uint64_t v112 = *(void *)(a3 + 16);
      if (v112)
      {
        uint64_t v105 = v12 + 56;
        swift_bridgeObjectRetain();
        uint64_t v13 = 0;
        uint64_t v107 = v12;
        while (1)
        {
          uint64_t v14 = (uint64_t *)(a3 + 32 + 88 * v13);
          uint64_t v15 = v14[1];
          uint64_t v16 = v14[2];
          uint64_t v18 = v14[3];
          uint64_t v17 = v14[4];
          uint64_t v19 = v14[5];
          uint64_t v20 = v14[7];
          uint64_t v116 = v14[8];
          uint64_t v118 = v14[6];
          uint64_t v21 = v14[9];
          uint64_t v22 = v14[10];
          uint64_t v114 = *v14;
          if (!*(void *)(v12 + 16))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v20) {
              goto LABEL_17;
            }
            goto LABEL_19;
          }
          sub_1B2E83988();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2E82498();
          uint64_t v23 = sub_1B2E839E8();
          uint64_t v24 = v12;
          uint64_t v25 = -1 << *(unsigned char *)(v12 + 32);
          uint64_t v26 = v23 & ~v25;
          sub_1B29A2114();
          if ((v28 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v12 = v24;
            goto LABEL_24;
          }
          uint64_t v103 = v21;
          uint64_t v29 = v27;
          sub_1B29A5350(*(void *)(v24 + 48) + 16 * v26);
          BOOL v32 = v32 && v30 == v17;
          if (v32) {
            break;
          }
          uint64_t v100 = v31;
          uint64_t v22 = v29;
          if (sub_1B2D4E658())
          {
            swift_bridgeObjectRelease();
            uint64_t v12 = v107;
            goto LABEL_16;
          }
          uint64_t v97 = ~v25;
          uint64_t v38 = (v26 + 1) & ~v25;
          sub_1B29A2114();
          if ((v39 & 1) == 0) {
            goto LABEL_34;
          }
          sub_1B29A5350(v100 + 16 * v38);
          BOOL v41 = v32 && v40 == v17;
          uint64_t v21 = v103;
          if (!v41)
          {
            char v42 = sub_1B2D4E658();
            uint64_t v43 = v100;
            if ((v42 & 1) == 0)
            {
              for (uint64_t i = v38 + 1; ; uint64_t i = v45 + 1)
              {
                uint64_t v45 = i & v97;
                if (((*(void *)(v105 + (((i & (unint64_t)v97) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v97)) & 1) == 0) {
                  break;
                }
                sub_1B29A5350(v43 + 16 * v45);
                if (v32 && v46 == v17) {
                  goto LABEL_32;
                }
                char v48 = sub_1B2D4E658();
                uint64_t v43 = v100;
                if (v48) {
                  goto LABEL_32;
                }
              }
LABEL_34:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              uint64_t v12 = v107;
              goto LABEL_24;
            }
          }
LABEL_32:
          swift_bridgeObjectRelease();
          uint64_t v12 = v107;
          if (v20)
          {
LABEL_17:
            if (*(void *)(v110 + 16))
            {
              swift_bridgeObjectRetain();
              sub_1B29FB4D4(v118, v20, v110);
              char v34 = v33;
              swift_bridgeObjectRelease();
              if ((v34 & 1) == 0)
              {
LABEL_23:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_24;
              }
            }
          }
LABEL_19:
          if (v21)
          {
            if (*(void *)(v111 + 16))
            {
              swift_bridgeObjectRetain();
              sub_1B29FB4D4(v116, v21, v111);
              char v36 = v35;
              swift_bridgeObjectRelease();
              if ((v36 & 1) == 0) {
                goto LABEL_23;
              }
            }
          }
          sub_1B29A3EB4((uint64_t *)&unk_1E9C3BD50);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
          *(void *)(inited + 32) = v114;
          *(void *)(inited + 40) = v15;
          *(void *)(inited + 48) = v16;
          *(void *)(inited + 56) = v18;
          *(void *)(inited + 64) = v17;
          *(void *)(inited + 72) = v19;
          *(void *)(inited + 80) = v118;
          *(void *)(inited + 88) = v20;
          *(void *)(inited + 96) = v116;
          *(void *)(inited + 104) = v21;
          *(void *)(inited + 112) = v22;
          LOBYTE(v120[0]) = 0;
          sub_1B2D97CC8(inited, v120);
          swift_setDeallocating();
          uint64_t v12 = v107;
          sub_1B2D98F24();
LABEL_24:
          if (++v13 == v112)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_45;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v12 = v107;
        uint64_t v22 = v29;
LABEL_16:
        uint64_t v21 = v103;
        if (v20) {
          goto LABEL_17;
        }
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
LABEL_45:
      swift_bridgeObjectRelease();
LABEL_46:
      swift_bridgeObjectRelease();
      return sub_1B2D984EC();
    case 2:
      if (*(void *)(a1 + 8)) {
        uint64_t v50 = sub_1B2D97DCC();
      }
      else {
        uint64_t v50 = MEMORY[0x1E4FBC860];
      }
      uint64_t v93 = *(void *)(v50 + 16);
      if (!v93) {
        goto LABEL_113;
      }
      unint64_t v51 = 0;
      uint64_t v91 = v50;
      uint64_t v92 = v50 + 32;
      uint64_t v98 = v10 + 56;
      uint64_t v99 = v8 + 56;
      while (1)
      {
        if (v51 >= *(void *)(v50 + 16))
        {
LABEL_115:
          __break(1u);
          JUMPOUT(0x1B2D4E454);
        }
        long long v52 = (uint64_t *)(v92 + 40 * v51);
        uint64_t v53 = v52[1];
        uint64_t v101 = *v52;
        uint64_t v54 = v52[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        sub_1B2DCA660(v54);
        uint64_t v56 = v55;
        swift_bridgeObjectRelease();
        uint64_t v109 = *(void *)(v56 + 16);
        if (v109) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
LABEL_112:
        if (++v51 == v93)
        {
LABEL_113:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_46;
        }
      }
      unint64_t v94 = v51;
      uint64_t v102 = v53;
      unint64_t v57 = 0;
      uint64_t v108 = v56 + 32;
      uint64_t v58 = v56;
      uint64_t v104 = v56;
      break;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v57 >= *(void *)(v58 + 16))
    {
      __break(1u);
      goto LABEL_115;
    }
    char v59 = (uint64_t *)(v108 + 88 * v57);
    uint64_t v60 = v59[1];
    uint64_t v61 = v59[2];
    uint64_t v62 = v59[4];
    uint64_t v113 = v59[3];
    uint64_t v115 = *v59;
    uint64_t v63 = v59[5];
    uint64_t v64 = v59[7];
    uint64_t v117 = v59[6];
    uint64_t v119 = v59[8];
    uint64_t v66 = v59[9];
    uint64_t v65 = v59[10];
    if (!v64) {
      break;
    }
    if (!*(void *)(v8 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_69;
    }
    sub_1B2E83988();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2E82498();
    uint64_t v67 = v8;
    unint64_t v68 = sub_1B2E839E8() & ~(-1 << *(unsigned char *)(v8 + 32));
    if (((*(void *)(v99 + ((v68 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v68) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v8 = v67;
      goto LABEL_84;
    }
    sub_1B29A5350(*(void *)(v67 + 48) + 16 * v68);
    BOOL v70 = v32 && v64 == v69;
    if (v70 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = v110;
      uint64_t v58 = v104;
    }
    else
    {
      sub_1B2D4E63C();
      if ((v79 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_83;
      }
      sub_1B29A0E44();
      BOOL v81 = v32 && v64 == v80;
      uint64_t v8 = v110;
      if (!v81)
      {
        while ((sub_1B2E837A8() & 1) == 0)
        {
          sub_1B2D4E63C();
          if ((v82 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_84;
          }
          sub_1B29A0E44();
          if (v32 && v64 == v83) {
            break;
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v58 = v104;
    }
LABEL_72:
    uint64_t v71 = v119;
    if (v66 && *(void *)(v111 + 16))
    {
      sub_1B2E83988();
      swift_bridgeObjectRetain();
      sub_1B2E82498();
      uint64_t v72 = sub_1B2E839E8();
      uint64_t v73 = -1 << *(unsigned char *)(v111 + 32);
      unint64_t v74 = v72 & ~v73;
      if (((*(void *)(v98 + ((v74 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v74) & 1) == 0) {
        goto LABEL_82;
      }
      uint64_t v96 = *(void *)(v111 + 48);
      uint64_t v75 = (void *)(v96 + 16 * v74);
      if (*v75 != v119 || v66 != v75[1])
      {
        char v77 = sub_1B2E837A8();
        uint64_t v78 = v119;
        if ((v77 & 1) == 0)
        {
          uint64_t v85 = ~v73;
          for (unint64_t j = v74 + 1; ; unint64_t j = v87 + 1)
          {
            uint64_t v87 = j & v85;
            if (((*(void *)(v98 + (((j & v85) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v85)) & 1) == 0) {
              break;
            }
            uint64_t v88 = (void *)(v96 + 16 * v87);
            if (*v88 == v78 && v66 == v88[1]) {
              goto LABEL_80;
            }
            char v90 = sub_1B2E837A8();
            uint64_t v78 = v119;
            if (v90) {
              goto LABEL_80;
            }
          }
LABEL_82:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_83:
          uint64_t v8 = v110;
LABEL_84:
          uint64_t v58 = v104;
          goto LABEL_85;
        }
      }
LABEL_80:
      swift_bridgeObjectRelease();
      uint64_t v71 = v119;
      uint64_t v8 = v110;
      uint64_t v58 = v104;
    }
    v120[0] = v115;
    v120[1] = v60;
    v120[2] = v61;
    v120[3] = v113;
    v120[4] = v62;
    v120[5] = v63;
    v120[6] = v117;
    v120[7] = v64;
    v120[8] = v71;
    v120[9] = v66;
    v120[10] = v65;
    sub_1B2D4E478(v106, v120, v101, v102);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_85:
    if (++v57 == v109)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v50 = v91;
      unint64_t v51 = v94;
      goto LABEL_112;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_69:
  swift_bridgeObjectRetain();
  goto LABEL_72;
}

uint64_t sub_1B2D4E478(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v28 = a2[5];
  unint64_t v27 = a2[6];
  uint64_t v5 = a2[8];
  uint64_t v4 = a2[9];
  BOOL v6 = a2[3] == a3 && a2[4] == a4;
  if (v6 || (uint64_t result = sub_1B2E837A8(), (result & 1) != 0))
  {
    sub_1B29A3EB4((uint64_t *)&unk_1E9C3BD50);
    uint64_t inited = (__n128 *)swift_initStackObject();
    sub_1B299DEA0(inited, (__n128)xmmword_1B2EC00A0, v11, v12, v13, v14, v15, v16, v17, v26, v27, v28);
    char v29 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_7:
    swift_bridgeObjectRetain();
    sub_1B2D97CC8(inited, &v29);
    swift_setDeallocating();
    return sub_1B2D98F24();
  }
  if (v4)
  {
    BOOL v18 = v5 == a3 && v4 == a4;
    if (v18 || (uint64_t result = sub_1B2E837A8(), (result & 1) != 0))
    {
      sub_1B29A3EB4((uint64_t *)&unk_1E9C3BD50);
      uint64_t inited = (__n128 *)swift_initStackObject();
      sub_1B299DEA0(inited, (__n128)xmmword_1B2EC00A0, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
      char v29 = 2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
  }
  return result;
}

uint64_t type metadata accessor for Match()
{
  return self;
}

uint64_t sub_1B2D4E658()
{
  return sub_1B2E837A8();
}

uint64_t Embedding.value.getter()
{
  sub_1B29A3EB4(&qword_1E9C3A230);
  sub_1B2999864();
  uint64_t v0 = sub_1B2999874();

  return v1(v0);
}

uint64_t Embedding.identifiers.getter()
{
  type metadata accessor for Embedding();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for Embedding()
{
  uint64_t result = qword_1E9C43438;
  if (!qword_1E9C43438) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Embedding.identifiers.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Embedding() + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Embedding.identifiers.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1B2D4E7D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEB00000000737265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2D4E8D8(char a1)
{
  if (a1) {
    return 0x696669746E656469;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_1B2D4E914()
{
  return sub_1B2D4E8D8(*v0);
}

uint64_t sub_1B2D4E91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D4E7D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2D4E944(uint64_t a1)
{
  unint64_t v2 = sub_1B2D4ED10();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D4E980(uint64_t a1)
{
  unint64_t v2 = sub_1B2D4ED10();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Embedding.init(value:identifiers:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C3A230);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a3, a1);
  uint64_t result = type metadata accessor for Embedding();
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t Embedding.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v26 = sub_1B29A3EB4(&qword_1E9C3A230);
  sub_1B299D278();
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v6);
  sub_1B29A0498();
  sub_1B29A3EB4(&qword_1E9C43410);
  sub_1B299D278();
  uint64_t v24 = v7;
  uint64_t v25 = v8;
  MEMORY[0x1F4188790](v7);
  sub_1B29A4D64();
  uint64_t v9 = type metadata accessor for Embedding();
  sub_1B2999864();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D4ED10();
  sub_1B2E83A18();
  if (v2) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  uint64_t v21 = v9;
  uint64_t v13 = v23;
  char v29 = 0;
  sub_1B2AB53E0(&qword_1E9C431A0, &qword_1E9C3A230);
  uint64_t v14 = v26;
  sub_1B2E835B8();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  uint64_t v20 = v12;
  v15(v12, v3, v14);
  sub_1B29A3EB4(&qword_1EB7E4A80);
  char v28 = 1;
  sub_1B2AB53E0((unint64_t *)&unk_1EB7E2BD8, &qword_1EB7E4A80);
  sub_1B2E835B8();
  uint64_t v16 = sub_1B299FB7C();
  v17(v16);
  uint64_t v18 = (uint64_t)v20;
  *(void *)&v20[*(int *)(v21 + 20)] = v27;
  sub_1B2D4ED5C(v18, v22);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  return sub_1B2D4EDC0(v18);
}

unint64_t sub_1B2D4ED10()
{
  unint64_t result = qword_1E9C43418;
  if (!qword_1E9C43418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43418);
  }
  return result;
}

uint64_t sub_1B2D4ED5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Embedding();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2D4EDC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Embedding();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Embedding.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C43420);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0498();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D4ED10();
  sub_1B2E83A38();
  sub_1B29A3EB4(&qword_1E9C3A230);
  sub_1B2AB53E0(&qword_1E9C43190, &qword_1E9C3A230);
  sub_1B2E836D8();
  if (!v1)
  {
    type metadata accessor for Embedding();
    sub_1B29A3EB4(&qword_1EB7E4A80);
    sub_1B2AB53E0(&qword_1EB7D9F50, &qword_1EB7E4A80);
    sub_1B2E836D8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1B2D4EFE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Embedding.init(from:)(a1, a2);
}

uint64_t sub_1B2D4F000(void *a1)
{
  return Embedding.encode(to:)(a1);
}

Swift::Void __swiftcall Embedding.updateIdsWith(identifier:)(Swift::String identifier)
{
  uint64_t v1 = HIBYTE(identifier._object) & 0xF;
  if (((uint64_t)identifier._object & 0x2000000000000000) == 0) {
    uint64_t v1 = identifier._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v1)
  {
    object = identifier._object;
    uint64_t countAndFlagsBits = identifier._countAndFlagsBits;
    type metadata accessor for Embedding();
    swift_bridgeObjectRetain();
    sub_1B2A00B00((uint64_t)v9, countAndFlagsBits, (uint64_t)object, v4, v5, v6, v7, v8, v9[0], v9[1]);
    swift_bridgeObjectRelease();
  }
}

uint64_t FileString.filename.getter()
{
  return sub_1B2999874();
}

uint64_t FileString.type.getter()
{
  return sub_1B2999874();
}

IntelligencePlatform::FileString __swiftcall FileString.init(filename:type:)(Swift::String filename, Swift::String type)
{
  *uint64_t v2 = filename;
  v2[1] = type;
  result.type = type;
  result.filename = filename;
  return result;
}

uint64_t FileString.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1B2E82498();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B2E82498();

  return swift_bridgeObjectRelease();
}

uint64_t static FileString.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1B2E837A8(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      sub_1B2999874();
      return sub_1B2E837A8();
    }
  }
  return result;
}

uint64_t FileString.hashValue.getter()
{
  return sub_1B2E839E8();
}

void static ModelKey.nameToName.getter(void *a1@<X8>)
{
}

void static ModelKey.nameToEmail.getter(void *a1@<X8>)
{
}

id ModelKey.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id ModelKey.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ModelKey.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B2D4F3A0(uint64_t *a1)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29B2D54(v4, v3, v7, (uint64_t)&v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v65 == 1)
  {
    sub_1B29C4148((uint64_t)&v64, &qword_1E9C40C68);
    goto LABEL_9;
  }
  sub_1B29E4F34((uint64_t)&v64, (uint64_t)&v62);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1B2A934D4((uint64_t)&v62);
LABEL_9:
    uint64_t v64 = v4;
    uint64_t v65 = v3;
    uint64_t v66 = v6;
    uint64_t v67 = v5;
    type metadata accessor for MatcherModel();
    uint64_t v9 = swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MatcherModel.init(key:)(&v64);
    if (!v2)
    {
      swift_weakInit();
      LOBYTE(v63) = 0;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2C45824((uint64_t)&v62, v4, v3, v6, v5);
      swift_endAccess();
      if (qword_1EB7E5AE0 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1B2E81FB8();
      sub_1B29A4B98(v29, (uint64_t)qword_1EB7E5AC0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      uint64_t v30 = sub_1B2E81F98();
      os_log_type_t v31 = sub_1B2E82DA8();
      int v32 = v31;
      if (os_log_type_enabled(v30, v31))
      {
        HIDWORD(v57) = v32;
        uint64_t v33 = swift_slowAlloc();
        unint64_t v55 = swift_slowAlloc();
        unint64_t v62 = v55;
        *(_DWORD *)uint64_t v33 = 136315394;
        uint64_t v64 = v9;
        swift_retain();
        uint64_t v34 = sub_1B2E823E8();
        sub_1B29BF6BC(v34, v35, (uint64_t)&v62, v36, v37, v38, v39, v40, (uint64_t)v30, v55, v57, v62, v63, v64, v65, v66, v67, v68, v69,
          v70);
        sub_1B2D50C78();
        sub_1B2E82FB8();
        swift_bridgeObjectRelease();
        sub_1B2D50CAC();
        *(_WORD *)(v33 + 12) = 2080;
        uint64_t v64 = v4;
        uint64_t v65 = v3;
        uint64_t v66 = v6;
        uint64_t v67 = v5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_1B2E823E8();
        sub_1B29BF6BC(v41, v42, (uint64_t)&v62, v43, v44, v45, v46, v47, (uint64_t)logb, v56, v59, v62, v63, v64, v65, v66, v67, v68, v69,
          v70);
        sub_1B2D50C8C();
        swift_bridgeObjectRelease();
        sub_1B2CCF13C();
        sub_1B2A8849C();
        uint64_t v30 = logc;
        _os_log_impl(&dword_1B2996000, logc, typea, "MatcherModel: caching model %s for %s", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        sub_1B299B750();
        sub_1B299B750();
      }
      else
      {
        sub_1B2D50CAC();
        sub_1B2CCF13C();
        sub_1B2A8849C();
      }
    }
    return v9;
  }
  uint64_t v9 = Strong;
  if (qword_1EB7D9BE8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1B2E81FB8();
  sub_1B29A4B98(v10, (uint64_t)qword_1EB7D8910);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v11 = sub_1B2E81F98();
  os_log_type_t v12 = sub_1B2E82DA8();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    HIDWORD(v57) = v13;
    uint64_t v14 = swift_slowAlloc();
    unint64_t v53 = swift_slowAlloc();
    unint64_t v71 = v53;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v64 = v9;
    type metadata accessor for MatcherModel();
    swift_retain();
    uint64_t v15 = sub_1B2E823E8();
    sub_1B29BF6BC(v15, v16, (uint64_t)&v71, v17, v18, v19, v20, v21, (uint64_t)v11, v53, v57, v62, v63, v64, v65, v66, v67, v68, v69,
      v70);
    sub_1B2D50C78();
    sub_1B2E82FB8();
    swift_bridgeObjectRelease();
    sub_1B2D50CAC();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v64 = v4;
    uint64_t v65 = v3;
    uint64_t v66 = v6;
    uint64_t v67 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1B2E823E8();
    sub_1B29BF6BC(v22, v23, (uint64_t)&v71, v24, v25, v26, v27, v28, (uint64_t)log, v54, v58, v62, v63, v64, v65, v66, v67, v68, v69,
      v70);
    sub_1B2D50C8C();
    swift_bridgeObjectRelease();
    sub_1B2CCF13C();
    sub_1B2A8849C();
    _os_log_impl(&dword_1B2996000, loga, type, "MatcherModel: using cached model %s for %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    sub_1B299B750();
    sub_1B299B750();
  }
  else
  {

    sub_1B2CCF13C();
    sub_1B2A8849C();
    sub_1B2D50CAC();
  }
  sub_1B2A934D4((uint64_t)&v62);
  return v9;
}

uint64_t MatcherModel.__allocating_init(key:)(uint64_t *a1)
{
  uint64_t v2 = swift_allocObject();
  MatcherModel.init(key:)(a1);
  return v2;
}

uint64_t MatcherModelCache.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MatcherModelCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

void MatcherModelCache.unownedExecutor.getter()
{
}

void sub_1B2D4F9B0()
{
}

uint64_t MatcherModel.key.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

id MatcherModel.model.getter()
{
  return *(id *)(v0 + 48);
}

uint64_t sub_1B2D4FA18()
{
  type metadata accessor for MatcherModelCache();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_1B2B2A994();
  uint64_t result = sub_1B2E82148();
  *(void *)(v0 + 112) = result;
  qword_1E9CAF900 = v0;
  return result;
}

uint64_t static MatcherModel.personModelEmbeddingSize.getter()
{
  return 90;
}

uint64_t static MatcherModel.sharedModel(for:)(uint64_t a1)
{
  *(void *)(v1 + 48) = *(void *)a1;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 8);
  *(void *)(v1 + 72) = *(void *)(a1 + 24);
  return MEMORY[0x1F4188298](sub_1B2D4FAB8, 0, 0);
}

uint64_t sub_1B2D4FAB8()
{
  if (qword_1E9C38C80 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  long long v3 = *(_OWORD *)(v0 + 48);
  uint64_t v4 = qword_1E9CAF900;
  *(void *)(v0 + 80) = qword_1E9CAF900;
  *(_OWORD *)(v0 + 16) = v3;
  *(void *)(v0 + 32) = v2;
  *(void *)(v0 + 40) = v1;
  return MEMORY[0x1F4188298](sub_1B2D4FB60, v4, 0);
}

uint64_t sub_1B2D4FB60()
{
  uint64_t v1 = sub_1B2D4F3A0(v0 + 2);
  v0[11] = 0;
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_1B2D4FC18()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *MatcherModel.init(key:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  v1[2] = *a1;
  v1[3] = v4;
  v1[4] = v5;
  v1[5] = v6;
  v9[0] = v3;
  v9[1] = v4;
  uint64_t v9[2] = v5;
  v9[3] = v6;
  uint64_t v7 = static MatcherModel.loadModel(key:)(v9);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v1[6] = v7;
  }
  return v1;
}

uint64_t static MatcherModel.loadModel(key:)(uint64_t *a1)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7E69E0);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1B29A4D64();
  uint64_t v5 = sub_1B2E80498();
  sub_1B299D278();
  uint64_t v7 = v6;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v48 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v47 = (uint64_t)&v42 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v51 = (uint64_t)&v42 - v13;
  uint64_t v14 = a1[1];
  uint64_t v15 = a1[2];
  uint64_t v16 = a1[3];
  uint64_t v49 = *a1;
  uint64_t v50 = v15;
  if (qword_1EB7E5AE0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1B2E81FB8();
  sub_1B29A4B98(v17, (uint64_t)qword_1EB7E5AC0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_1B2E81F98();
  os_log_type_t v19 = sub_1B2E82DA8();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v45 = v1;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v46 = v7;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v44 = v2;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v56 = v22;
    uint64_t v43 = v21 + 4;
    uint64_t v52 = v49;
    uint64_t v53 = v14;
    uint64_t v54 = v50;
    uint64_t v55 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1B2E823E8();
    sub_1B29BF6BC(v23, v24, (uint64_t)&v56, v25, v26, v27, v28, v29, v42, (unint64_t)v43, v44, v45, v46, v47, v48, v49, v50, v51, v52,
      v53);
    uint64_t v52 = v30;
    sub_1B2E82FB8();
    sub_1B2A8849C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B2996000, v18, v19, "MatcherModel: loadModel: %s", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v2 = v44;
    sub_1B299B750();
    uint64_t v7 = v46;
    sub_1B299B750();
  }
  else
  {

    sub_1B2A8849C();
    swift_bridgeObjectRelease_n();
  }
  if (qword_1EB7E6280 != -1) {
    swift_once();
  }
  id v31 = sub_1B2ADF73C(v49, v14, v50, v16, (void *)qword_1EB7E6340);
  if (v31)
  {
    int v32 = v31;
    uint64_t v33 = v47;
    sub_1B2E80448();

    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    v34(v2, v33, v5);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2, 0, 1, v5);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v5) != 1)
    {
      uint64_t v35 = v51;
      v34(v51, v2, v5);
      id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_init);
      objc_msgSend(v36, sel_setComputeUnits_, 2);
      uint64_t v37 = (void *)MEMORY[0x1B3EB2480](objc_msgSend(v36, sel_setAllowBackgroundGPUCompute_, 1));
      sub_1B2C58274();
      uint64_t v38 = v48;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v48, v35, v5);
      id v39 = v36;
      id v40 = sub_1B2D50244(v38, v39);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v51, v5);
      return (uint64_t)v40;
    }
  }
  else
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2, 1, 1, v5);
  }
  sub_1B29C4148(v2, &qword_1EB7E69E0);
  uint64_t v52 = 0;
  uint64_t v53 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  uint64_t v52 = 0xD000000000000025;
  uint64_t v53 = 0x80000001B2EA1C00;
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  uint64_t result = sub_1B2E83418();
  __break(1u);
  return result;
}

id sub_1B2D50244(uint64_t a1, void *a2)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)sub_1B2E803F8();
  v10[0] = 0;
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_configuration_error_, v4, a2, v10);

  if (v5)
  {
    id v6 = v10[0];
  }
  else
  {
    id v7 = v10[0];
    sub_1B2E80388();

    swift_willThrow();
  }

  sub_1B2E80498();
  sub_1B2999864();
  (*(void (**)(uint64_t))(v8 + 8))(a1);
  return v5;
}

uint64_t MatcherModel.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t MatcherModel.__deallocating_deinit()
{
  MatcherModel.deinit();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MatcherModel()
{
  return self;
}

unint64_t sub_1B2D503F4()
{
  unint64_t result = qword_1E9C43430;
  if (!qword_1E9C43430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43430);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Embedding(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B29A3EB4(&qword_1E9C3A230);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Embedding(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C3A230);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Embedding(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3A230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Embedding(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3A230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Embedding(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3A230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for Embedding(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3A230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Embedding(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2D507BC);
}

uint64_t sub_1B2D507BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B29A3EB4(&qword_1E9C3A230);
  sub_1B299B768();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Embedding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2D50860);
}

void sub_1B2D50860(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1B29A3EB4(&qword_1E9C3A230);
  sub_1B299B768();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

void sub_1B2D508EC()
{
  sub_1B2D43034();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for FileString()
{
}

uint64_t type metadata accessor for ModelKey()
{
  return self;
}

uint64_t type metadata accessor for MatcherModelCache()
{
  return self;
}

uint64_t method lookup function for MatcherModelCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MatcherModelCache);
}

uint64_t dispatch thunk of MatcherModelCache.instance(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t method lookup function for MatcherModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MatcherModel);
}

uint64_t dispatch thunk of MatcherModel.__allocating_init(key:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void type metadata accessor for MatcherModelCache.CachedMatcherModel()
{
}

unsigned char *sub_1B2D50A88(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D50B54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for Embedding.CodingKeys()
{
}

unint64_t sub_1B2D50B8C()
{
  unint64_t result = qword_1E9C43448;
  if (!qword_1E9C43448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43448);
  }
  return result;
}

unint64_t sub_1B2D50BDC()
{
  unint64_t result = qword_1E9C43450;
  if (!qword_1E9C43450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43450);
  }
  return result;
}

unint64_t sub_1B2D50C2C()
{
  unint64_t result = qword_1E9C43458;
  if (!qword_1E9C43458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43458);
  }
  return result;
}

uint64_t sub_1B2D50C8C()
{
  return sub_1B2E82FB8();
}

uint64_t sub_1B2D50CAC()
{
  return swift_release_n();
}

uint64_t sub_1B2D50CC4()
{
  unint64_t v0 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B2D50D10(char a1)
{
  if (!a1) {
    return 0xD000000000000012;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0x6C65646F6DLL;
}

uint64_t sub_1B2D50D68(unsigned __int8 *a1, char *a2)
{
  return sub_1B29ABEFC(*a1, *a2);
}

uint64_t sub_1B2D50D74()
{
  return sub_1B29AE938();
}

uint64_t sub_1B2D50D7C()
{
  return sub_1B2AA5238();
}

uint64_t sub_1B2D50D84()
{
  return sub_1B29F9050();
}

uint64_t sub_1B2D50D8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2D50CC4();
  *a1 = result;
  return result;
}

uint64_t sub_1B2D50DBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B2D50D10(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B2D50DE8()
{
  return sub_1B2E827E8();
}

uint64_t sub_1B2D50E48()
{
  return sub_1B2E82788();
}

uint64_t sub_1B2D50E98(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v5 = a1;
  }
  uint64_t v6 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v6 = 11;
  }
  uint64_t v7 = v6 | (v5 << 16);
  if (a3) {
    uint64_t v8 = a3;
  }
  else {
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
  sub_1B29A3EB4((uint64_t *)&unk_1EB7D9920);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B2EC00A0;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  *(void *)(v9 + 48) = 15;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = 0;
  *(void *)(v9 + 72) = 0;
  *(void *)(v9 + 80) = 0;
  *(void *)(v9 + 88) = v8;
  *(void *)(v9 + 96) = 0;
  *(unsigned char *)(v9 + 104) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t sub_1B2D50F70(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E2738);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = a1;
  unint64_t v73 = a2;
  uint64_t v76 = 9;
  unint64_t v77 = 0xE100000000000000;
  unint64_t v70 = sub_1B29C3640();
  uint64_t v9 = sub_1B2E82FE8();
  uint64_t result = sub_1B2DDC660(v9);
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(result + 56);
  uint64_t v60 = result + 56;
  uint64_t v65 = result;
  uint64_t v13 = 1 << *(unsigned char *)(result + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v61 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v16 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v16 = HIBYTE(a2) & 0xF;
  }
  uint64_t v78 = a1;
  uint64_t v17 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v17 = 11;
  }
  uint64_t v71 = v17 | (v16 << 16);
  uint64_t v63 = v16;
  unint64_t v69 = 4 * v16;
  uint64_t v64 = a3;
  if (a3) {
    uint64_t v18 = a3;
  }
  else {
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  uint64_t v62 = v18;
  uint64_t v19 = MEMORY[0x1E4FBC860];
LABEL_11:
  uint64_t v66 = v19;
  if (v15)
  {
LABEL_12:
    uint64_t v67 = (v15 - 1) & v15;
    int64_t v68 = v11;
    unint64_t v20 = __clz(__rbit64(v15)) | (v11 << 6);
    goto LABEL_24;
  }
  while (1)
  {
    BOOL v21 = __OFADD__(v11, 1);
    int64_t v22 = v11 + 1;
    if (v21)
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v22 >= v61) {
      goto LABEL_52;
    }
    unint64_t v23 = *(void *)(v60 + 8 * v22);
    if (!v23) {
      break;
    }
LABEL_23:
    uint64_t v67 = (v23 - 1) & v23;
    int64_t v68 = v22;
    unint64_t v20 = __clz(__rbit64(v23)) + (v22 << 6);
LABEL_24:
    uint64_t v25 = (uint64_t *)(*(void *)(v65 + 48) + 16 * v20);
    uint64_t v27 = *v25;
    unint64_t v26 = v25[1];
    swift_bridgeObjectRetain();
    if (v63)
    {
      uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1B2E82628();
        unint64_t v31 = v30;
        uint64_t v33 = v32;
        uint64_t v35 = v34;
        swift_bridgeObjectRelease();
        uint64_t v72 = v29;
        unint64_t v73 = v31;
        uint64_t v74 = v33;
        uint64_t v75 = v35;
        uint64_t v76 = v27;
        unint64_t v77 = v26;
        uint64_t v36 = sub_1B2E806F8();
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v36);
        sub_1B2A90BE4();
        unint64_t v37 = sub_1B2E83028();
        unint64_t v39 = v38;
        LOBYTE(v35) = v40;
        sub_1B2A90C30((uint64_t)v8);
        swift_bridgeObjectRelease();
        if (v35) {
          break;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29B8960();
          uint64_t v28 = v47;
        }
        unint64_t v41 = v28[2];
        if (v41 >= v28[3] >> 1)
        {
          sub_1B29B8960();
          uint64_t v28 = v48;
        }
        v28[2] = v41 + 1;
        uint64_t v42 = &v28[2 * v41];
        v42[4] = v37;
        v42[5] = v39;
        unint64_t v43 = v39 >> 14;
        if (v39 >> 14 <= v37 >> 14)
        {
          unint64_t v44 = v71;
          uint64_t v45 = sub_1B2E824D8();
          if ((v46 & 1) == 0) {
            unint64_t v44 = v45;
          }
          unint64_t v43 = v44 >> 14;
        }
      }
      while (v43 < v69);
    }
    else
    {
      uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    uint64_t v49 = v28[2];
    if (v49)
    {
      uint64_t v50 = v28 + 5;
      uint64_t v19 = v66;
      do
      {
        uint64_t v51 = *(v50 - 1);
        uint64_t v52 = *v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29B8994();
          uint64_t v19 = v57;
        }
        unint64_t v53 = *(void *)(v19 + 16);
        uint64_t v54 = v19;
        if (v53 >= *(void *)(v19 + 24) >> 1)
        {
          sub_1B29B8994();
          uint64_t v54 = v58;
        }
        v50 += 2;
        *(void *)(v54 + 16) = v53 + 1;
        uint64_t v19 = v54;
        uint64_t v55 = v54 + 80 * v53;
        *(void *)(v55 + 32) = v78;
        *(void *)(v55 + 40) = a2;
        *(void *)(v55 + 48) = v51;
        *(void *)(v55 + 56) = v52;
        *(void *)(v55 + 64) = 0;
        *(void *)(v55 + 72) = 0;
        uint64_t v56 = v62;
        *(void *)(v55 + 80) = 0;
        *(void *)(v55 + 88) = v56;
        *(void *)(v55 + 96) = 0;
        *(unsigned char *)(v55 + 104) = 1;
        --v49;
      }
      while (v49);
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v15 = v67;
      int64_t v11 = v68;
      goto LABEL_11;
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = v66;
    unint64_t v15 = v67;
    int64_t v11 = v68;
    if (v67) {
      goto LABEL_12;
    }
  }
  int64_t v24 = v22 + 1;
  if (v22 + 1 >= v61) {
    goto LABEL_52;
  }
  unint64_t v23 = *(void *)(v60 + 8 * v24);
  if (v23) {
    goto LABEL_22;
  }
  int64_t v24 = v22 + 2;
  if (v22 + 2 >= v61) {
    goto LABEL_52;
  }
  unint64_t v23 = *(void *)(v60 + 8 * v24);
  if (v23) {
    goto LABEL_22;
  }
  int64_t v24 = v22 + 3;
  if (v22 + 3 >= v61)
  {
LABEL_52:
    swift_release();
    return v19;
  }
  unint64_t v23 = *(void *)(v60 + 8 * v24);
  if (v23)
  {
LABEL_22:
    int64_t v22 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v22 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v22 >= v61) {
      goto LABEL_52;
    }
    unint64_t v23 = *(void *)(v60 + 8 * v22);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1B2D5146C(unint64_t a1, unint64_t a2)
{
  uint64_t v6 = sub_1B2D5162C(a1, a2);
  if (!v3)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v7;
    uint64_t v11 = v8;
    uint64_t v12 = (void *)MEMORY[0x1B3EB2480]();
    type metadata accessor for MentionGeneratorModel();
    swift_allocObject();
    uint64_t v2 = sub_1B2D52DB8();
    if (*(void *)(v2 + 24) >= *(void *)(v10 + 16))
    {
      sub_1B2D52D44(v10);
      uint64_t v16 = v14;
      swift_release();
      uint64_t v2 = sub_1B2D51E9C(a1, a2, v16, v9, v10, v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B2A1F13C();
      swift_allocError();
      *(void *)uint64_t v13 = 0xD00000000000003FLL;
      *(void *)(v13 + 8) = 0x80000001B2EA1CC0;
      *(unsigned char *)(v13 + 16) = 3;
      swift_willThrow();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1B2D5162C(unint64_t a1, unint64_t a2)
{
  unint64_t v6 = sub_1B2DD7914(0x65646F6D5F6D7073, 0xED00006B30315F6CLL);
  if (v2) {
    return (uint64_t)v3;
  }
  unint64_t v7 = v6;
  uint64_t v75 = a1;
  unint64_t v76 = a2;
  uint64_t v77 = a2;
  sub_1B29C3640();
  uint64_t v8 = sub_1B2E82FE8();
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v72 = (void *)v7;
  unint64_t v73 = a1;
  if (!v9)
  {
    uint64_t v3 = (uint64_t *)MEMORY[0x1E4FBC860];
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v25 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_27;
  }
  uint64_t v71 = v8;
  uint64_t v10 = (uint64_t **)(v8 + 40);
  uint64_t v3 = (uint64_t *)MEMORY[0x1E4FBC860];
  unint64_t v7 = v77;
  do
  {
    uint64_t v11 = *v10;
    if (v3[2])
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_1B2E824E8();
      if (__OFADD__(sub_1B2E824A8(), 1)) {
        goto LABEL_64;
      }
      unint64_t v13 = sub_1B2E824E8();
      if (v13 >> 14 < v12 >> 14) {
        goto LABEL_65;
      }
      unint64_t v14 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B8960();
        uint64_t v3 = v20;
      }
      unint64_t v15 = v3[2];
      if (v15 >= (unint64_t)v3[3] >> 1)
      {
        sub_1B29B8960();
        uint64_t v3 = v21;
      }
      v3[2] = v15 + 1;
      uint64_t v16 = &v3[2 * v15];
      v16[4] = v12;
      v16[5] = v14;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B2E824A8();
      uint64_t v17 = sub_1B2E824E8();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B8960();
        uint64_t v3 = v22;
      }
      unint64_t v18 = v3[2];
      if (v18 >= (unint64_t)v3[3] >> 1)
      {
        sub_1B29B8960();
        uint64_t v3 = v23;
      }
      v3[2] = v18 + 1;
      uint64_t v19 = &v3[2 * v18];
      v19[4] = 15;
      v19[5] = v17;
    }
    v10 += 2;
    swift_bridgeObjectRelease();
    --v9;
    unint64_t v7 = v77;
  }
  while (v9);
  uint64_t v24 = *(void *)(v71 + 16);
  if (!v24)
  {
    unint64_t v7 = (unint64_t)v72;
    goto LABEL_26;
  }
  uint64_t v67 = v3;
  uint64_t v74 = (void *)MEMORY[0x1E4FBC860];
  sub_1B29BFD80();
  uint64_t v25 = v74;
  uint64_t v26 = v71 + 40;
  do
  {
    uint64_t v75 = 32;
    unint64_t v76 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    unint64_t v27 = v74[2];
    if (v27 >= v74[3] >> 1) {
      sub_1B29BFD80();
    }
    v26 += 16;
    v74[2] = v27 + 1;
    uint64_t v28 = &v74[2 * v27];
    v28[4] = 32;
    v28[5] = 0xE100000000000000;
    --v24;
  }
  while (v24);
  swift_bridgeObjectRelease();
  unint64_t v7 = (unint64_t)v72;
  uint64_t v3 = v67;
LABEL_27:
  if (v25[2])
  {
    uint64_t v30 = v25[4];
    unint64_t v29 = v25[5];
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_1B2A6FFBC(1uLL, v30, v29);
    uint64_t v11 = (uint64_t *)MEMORY[0x1B3EB0C00](v31);
    unint64_t v12 = v32;
    swift_bridgeObjectRelease();
    uint64_t v33 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_66;
    }
    while (1)
    {
      if (!v33[2])
      {
        __break(1u);
LABEL_68:
        uint64_t result = sub_1B2E83858();
        __break(1u);
        return result;
      }
      v33[4] = v11;
      unint64_t v70 = v33 + 4;
      int64_t v68 = v33;
      v33[5] = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v34 = MEMORY[0x1E4FBC860];
      uint64_t v3 = (uint64_t *)sub_1B2E82148();
      uint64_t v35 = v33;
      unint64_t v69 = (void *)v33[2];
      if (!v69) {
        break;
      }
      swift_bridgeObjectRetain();
      unint64_t v7 = 0;
      uint64_t v36 = 0;
      while (1)
      {
        unint64_t v37 = &v70[2 * v7];
        uint64_t v39 = *v37;
        uint64_t v38 = v37[1];
        swift_bridgeObjectRetain();
        sub_1B2DD7A60(v39, v38, v72);
        unint64_t v12 = *(void *)(v40 + 16);
        if (v12) {
          break;
        }
LABEL_43:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((void *)++v7 == v69)
        {
          uint64_t v35 = v68;
          swift_bridgeObjectRelease();
          unint64_t v7 = (unint64_t)v72;
          a1 = v73;
          uint64_t v34 = MEMORY[0x1E4FBC860];
          goto LABEL_45;
        }
      }
      while (1)
      {
        uint64_t v41 = v38;
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v75 = (uint64_t)v3;
        uint64_t v11 = v3;
        uint64_t v42 = sub_1B29DB2B0(v36);
        if (__OFADD__(v3[2], (v43 & 1) == 0)) {
          break;
        }
        a1 = v42;
        char v44 = v43;
        sub_1B29A3EB4(&qword_1E9C43478);
        uint64_t v11 = &v75;
        if (sub_1B2E83398())
        {
          uint64_t v11 = (uint64_t *)v75;
          uint64_t v45 = sub_1B29DB2B0(v36);
          if ((v44 & 1) != (v46 & 1)) {
            goto LABEL_68;
          }
          a1 = v45;
        }
        uint64_t v3 = (uint64_t *)v75;
        if (v44)
        {
          *(void *)(*(void *)(v75 + 56) + 8 * a1) = v7;
        }
        else
        {
          *(void *)(v75 + 8 * (a1 >> 6) + 64) |= 1 << a1;
          *(void *)(v3[6] + 8 * a1) = v36;
          *(void *)(v3[7] + 8 * a1) = v7;
          uint64_t v47 = v3[2];
          BOOL v48 = __OFADD__(v47, 1);
          uint64_t v49 = v47 + 1;
          if (v48) {
            goto LABEL_63;
          }
          v3[2] = v49;
        }
        swift_bridgeObjectRelease();
        if (v36 == 0x7FFFFFFFFFFFFFFFLL) {
          goto LABEL_62;
        }
        uint64_t v38 = v41;
        ++v36;
        if (!--v12) {
          goto LABEL_43;
        }
      }
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      sub_1B2CC3374();
      uint64_t v33 = v66;
    }
LABEL_45:
    swift_bridgeObjectRelease();
    uint64_t v75 = (uint64_t)v35;
    swift_bridgeObjectRetain();
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2A20660();
    uint64_t v50 = sub_1B2E822D8();
    uint64_t v52 = v51;
    swift_bridgeObjectRelease();
    BOOL v53 = v50 == a1 && v52 == v77;
    if (!v53 && (sub_1B2E837A8() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v75 = 0;
      unint64_t v76 = 0xE000000000000000;
      sub_1B2E831F8();
      sub_1B2E82518();
      sub_1B2E82518();
      sub_1B2E82518();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      uint64_t v62 = v75;
      unint64_t v63 = v76;
      sub_1B2A1F13C();
      swift_allocError();
      *(void *)uint64_t v64 = v62;
      *(void *)(v64 + 8) = v63;
      *(unsigned char *)(v64 + 16) = 6;
      swift_willThrow();
      goto LABEL_59;
    }
    sub_1B2DD7A60(v50, v52, (void *)v7);
    uint64_t v55 = v54;
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void *)(v55 + 16);
    if (v56)
    {
      uint64_t v75 = v34;
      sub_1B29C0178();
      uint64_t v57 = 0;
      uint64_t v58 = v75;
      unint64_t v59 = *(void *)(v75 + 16);
      do
      {
        int v60 = *(_DWORD *)(v55 + 4 * v57 + 32);
        uint64_t v75 = v58;
        if (v59 >= *(void *)(v58 + 24) >> 1)
        {
          sub_1B29C0178();
          uint64_t v58 = v75;
        }
        ++v57;
        *(void *)(v58 + 16) = v59 + 1;
        *(_DWORD *)(v58 + 4 * v59++ + 32) = v60;
      }
      while (v56 != v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1B2A1F13C();
    swift_allocError();
    *(_OWORD *)uint64_t v61 = xmmword_1B2EEB250;
    *(unsigned char *)(v61 + 16) = 3;
    swift_willThrow();
LABEL_59:
    swift_bridgeObjectRelease();
  }
  return (uint64_t)v3;
}

uint64_t sub_1B2D51E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t inited, uint64_t a5, uint64_t a6)
{
  sub_1B29A3EB4(&qword_1E9C43460);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  unint64_t v12 = (void *)sub_1B2E82148();
  uint64_t v76 = *(void *)(a3 + 16);
  if (!v76)
  {
    uint64_t v72 = v6;
    uint64_t v73 = a2;
LABEL_19:
    sub_1B29A3EB4(&qword_1E9C43470);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B2EC89C0;
    *(_DWORD *)(inited + 32) = 1;
    static EntityClass.person.getter();
    *(_DWORD *)(inited + 80) = 2;
    static EntityClass.place.getter();
    *(_DWORD *)(inited + 128) = 3;
    static EntityClass.organization.getter();
    *(_DWORD *)(inited + 176) = 4;
    static EntityClass.topic.getter();
    uint64_t v36 = sub_1B2E82148();
    uint64_t v37 = *(void *)(a6 + 16);
    if (v37)
    {
      if (!v12[2] || (v77 = *(_OWORD *)(a6 + 32), inited = (uint64_t)v12, uint64_t v38 = sub_1B29DB2B0(0), (v39 & 1) == 0))
      {
LABEL_44:
        swift_bridgeObjectRelease();
        sub_1B2A1F13C();
        swift_allocError();
        unint64_t v34 = 0xD00000000000002DLL;
        uint64_t v35 = "Sentencepiece to whitespace projection error.";
        goto LABEL_45;
      }
      uint64_t v40 = v38;
      swift_bridgeObjectRetain();
      uint64_t v41 = 0;
      uint64_t v42 = v37 - 1;
      char v43 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v69 = v42;
      uint64_t v71 = a6;
      uint64_t v75 = v36;
      while (1)
      {
        if (*(void *)(v36 + 16))
        {
          uint64_t v44 = v12[7];
          float v45 = *(float *)(v44 + 8 * v40 + 4);
          uint64_t inited = v36;
          unint64_t v46 = sub_1B29DB640(*(_DWORD *)(v44 + 8 * v40));
          if (v47)
          {
            uint64_t v48 = *(void *)(v36 + 56) + 40 * v46;
            uint64_t v49 = *(void *)v48;
            uint64_t v50 = *(void *)(v48 + 8);
            uint64_t v51 = v43;
            uint64_t v53 = *(void *)(v48 + 16);
            uint64_t v52 = *(void *)(v48 + 24);
            char v54 = *(unsigned char *)(v48 + 32);
            sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
            uint64_t inited = swift_allocObject();
            *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
            *(void *)(inited + 32) = v49;
            *(void *)(inited + 40) = v50;
            *(void *)(inited + 48) = v53;
            *(void *)(inited + 56) = v52;
            char v43 = v51;
            *(unsigned char *)(inited + 64) = v54;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B29B8994();
              char v43 = v58;
            }
            unint64_t v55 = v43[2];
            uint64_t v36 = v75;
            uint64_t v42 = v69;
            if (v55 >= v43[3] >> 1)
            {
              sub_1B29B8994();
              char v43 = v59;
            }
            v43[2] = v55 + 1;
            uint64_t v56 = &v43[10 * v55];
            v56[4] = a1;
            v56[5] = v73;
            *((_OWORD *)v56 + 3) = v77;
            v56[8] = 0;
            v56[9] = 0;
            v56[10] = 0;
            v56[11] = inited;
            *((double *)v56 + 12) = v45;
            *((unsigned char *)v56 + 104) = 0;
            a6 = v71;
          }
        }
        if (v42 == v41) {
          break;
        }
        if (v12[2])
        {
          long long v77 = *(_OWORD *)(a6 + 16 * v41 + 48);
          uint64_t inited = (uint64_t)v12;
          uint64_t v40 = sub_1B29DB2B0(++v41);
          if (v57) {
            continue;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_bridgeObjectRelease();
      char v43 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v86 = v11;
    uint64_t v60 = v43[2];
    if (!v60)
    {
LABEL_40:
      swift_bridgeObjectRelease();
      uint64_t inited = v86;
      swift_bridgeObjectRelease();
      return inited;
    }
    swift_bridgeObjectRetain();
    uint64_t v61 = v43 + 7;
    while (1)
    {
      char v62 = *((unsigned char *)v61 + 48);
      uint64_t v63 = v61[3];
      uint64_t v64 = *v61;
      long long v65 = *((_OWORD *)v61 - 1);
      long long v66 = *(_OWORD *)(v61 + 1);
      long long v67 = *((_OWORD *)v61 + 2);
      char v79 = (void *)*(v61 - 3);
      long long v80 = v65;
      uint64_t v81 = v64;
      long long v82 = v66;
      long long v84 = v67;
      char v85 = v62;
      uint64_t inited = v65;
      uint64_t v83 = v63;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2D5252C(&v86, (uint64_t *)&v79, a1, v73);
      if (v72) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v61 += 10;
      if (!--v60)
      {
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_46:
    swift_bridgeObjectRelease();
    return inited;
  }
  if (!*(void *)(inited + 16)
    || (uint64_t v72 = v6,
        uint64_t v73 = a2,
        int v13 = *(_DWORD *)(a3 + 32),
        int v14 = *(_DWORD *)(a3 + 36),
        uint64_t v15 = sub_1B29DB2B0(0),
        (v16 & 1) == 0))
  {
LABEL_17:
    sub_1B2A1F13C();
    swift_allocError();
    unint64_t v34 = 0xD000000000000030;
    uint64_t v35 = "Sentencepiece to whitespace token key not found.";
LABEL_45:
    *(void *)uint64_t v33 = v34;
    *(void *)(v33 + 8) = (unint64_t)(v35 - 32) | 0x8000000000000000;
    *(unsigned char *)(v33 + 16) = 3;
    swift_willThrow();
    goto LABEL_46;
  }
  uint64_t v17 = v15;
  uint64_t v70 = a6;
  swift_bridgeObjectRetain();
  unint64_t v18 = (int *)(a3 + 44);
  uint64_t v19 = 1;
  uint64_t v74 = inited;
  while (1)
  {
    uint64_t v20 = *(void *)(*(void *)(inited + 56) + 8 * v17);
    swift_isUniquelyReferenced_nonNull_native();
    char v79 = v12;
    uint64_t v21 = sub_1B29DB2B0(v20);
    if (__OFADD__(v12[2], (v22 & 1) == 0)) {
      break;
    }
    unint64_t v23 = v21;
    char v24 = v22;
    sub_1B29A3EB4(&qword_1E9C43468);
    if (sub_1B2E83398())
    {
      uint64_t v25 = sub_1B29DB2B0(v20);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_51;
      }
      unint64_t v23 = v25;
    }
    unint64_t v12 = v79;
    if (v24)
    {
      unint64_t v27 = (_DWORD *)(v79[7] + 8 * v23);
      *unint64_t v27 = v13;
      v27[1] = v14;
    }
    else
    {
      v79[(v23 >> 6) + 8] |= 1 << v23;
      *(void *)(v12[6] + 8 * v23) = v20;
      uint64_t v28 = (_DWORD *)(v12[7] + 8 * v23);
      *uint64_t v28 = v13;
      v28[1] = v14;
      uint64_t v29 = v12[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_50;
      }
      v12[2] = v31;
    }
    swift_bridgeObjectRelease();
    uint64_t inited = v74;
    if (v76 == v19)
    {
      swift_bridgeObjectRelease();
      a6 = v70;
      uint64_t v11 = MEMORY[0x1E4FBC860];
      goto LABEL_19;
    }
    if (*(void *)(v74 + 16))
    {
      int v14 = *v18;
      int v13 = *(v18 - 1);
      uint64_t v17 = sub_1B29DB2B0(v19);
      v18 += 2;
      ++v19;
      if (v32) {
        continue;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

void sub_1B2D5252C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a2;
  uint64_t v7 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v55 = a2[4];
  uint64_t v56 = a2[6];
  uint64_t v60 = a2[7];
  char v8 = *((unsigned char *)a2 + 72);
  uint64_t v9 = *(void *)(*a1 + 16);
  uint64_t v57 = a2[5];
  uint64_t v58 = a2[8];
  uint64_t v71 = a2[1];
  if (!v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2E3164C();
    uint64_t v29 = *(void *)(*a1 + 16);
    sub_1B2E31CBC(v29);
    uint64_t v30 = *a1;
    *(void *)(v30 + 16) = v29 + 1;
    uint64_t v31 = v30 + 80 * v29;
    uint64_t v32 = v71;
    *(void *)(v31 + 32) = v5;
    *(void *)(v31 + 40) = v32;
    *(void *)(v31 + 48) = v7;
    *(void *)(v31 + 56) = v6;
    *(void *)(v31 + 64) = v55;
    *(void *)(v31 + 72) = v57;
    *(void *)(v31 + 80) = v56;
    *(void *)(v31 + 88) = v60;
    *(void *)(v31 + 96) = v58;
    *(unsigned char *)(v31 + 104) = v8;
    *a1 = v30;
    return;
  }
  uint64_t v50 = v5;
  uint64_t v54 = v7;
  unint64_t v52 = v6;
  sub_1B2CC3F40((uint64_t)&v61);
  uint64_t v11 = v62;
  if (v62 == 1)
  {
    char v59 = v8;
    uint64_t v12 = *a1;
    unint64_t v13 = *(void *)(*a1 + 16) - 1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B2CC3450();
      uint64_t v12 = v45;
    }
    unint64_t v14 = *(void *)(v12 + 16);
    if (v13 >= v14)
    {
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v15 = v12 + 80 * v13;
    uint64_t v16 = *(void *)(v15 + 32);
    v15 += 32;
    char v46 = *(unsigned char *)(v15 + 72);
    unint64_t v17 = v14 - 1;
    uint64_t v18 = v14 - 1 - v13;
    uint64_t v51 = *(void *)(v15 + 64);
    uint64_t v19 = a4;
    uint64_t v20 = *(void *)(v15 + 48);
    uint64_t v21 = *(void *)(v15 + 56);
    uint64_t v22 = *(void *)(v15 + 32);
    uint64_t v48 = v16;
    uint64_t v49 = *(void *)(v15 + 40);
    unint64_t v23 = *(void *)(v15 + 16);
    uint64_t v53 = *(void *)(v15 + 24);
    uint64_t v11 = *(void *)(v15 + 8);
    sub_1B29BEA70((char *)(v15 + 80), v18, (char *)v15);
    unint64_t v24 = v23;
    uint64_t v25 = v22;
    *(void *)(v12 + 16) = v17;
    *a1 = v12;
    uint64_t v26 = v21;
    a4 = v19;
    char v27 = v46;
    char v28 = v59;
  }
  else
  {
    char v28 = v8;
    uint64_t v26 = v68;
    uint64_t v51 = v69;
    uint64_t v20 = v67;
    uint64_t v25 = v65;
    uint64_t v53 = v64;
    unint64_t v24 = v63;
    uint64_t v48 = v61;
    uint64_t v49 = v66;
    char v27 = v70 & 1;
  }
  if (!v11 || !v71)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A1F13C();
    swift_allocError();
    *(void *)uint64_t v34 = 0xD000000000000041;
    *(void *)(v34 + 8) = 0x80000001B2EA1D70;
    *(unsigned char *)(v34 + 16) = 3;
    swift_willThrow();
    return;
  }
  unint64_t v33 = v24;
  if (v26)
  {
    if (!v60 || (sub_1B2AA76F4(v26, v60) & 1) == 0) {
      goto LABEL_21;
    }
  }
  else if (v60)
  {
LABEL_21:
    sub_1B2E3164C();
    uint64_t v38 = v26;
    uint64_t v39 = *(void *)(*a1 + 16);
    sub_1B2E31CBC(v39);
    uint64_t v40 = *a1;
    *(void *)(v40 + 16) = v39 + 1;
    uint64_t v41 = v40 + 80 * v39;
    *(void *)(v41 + 32) = v48;
    *(void *)(v41 + 40) = v11;
    *(void *)(v41 + 48) = v33;
    *(void *)(v41 + 56) = v53;
    *(void *)(v41 + 64) = v25;
    *(void *)(v41 + 72) = v49;
    *(void *)(v41 + 80) = v20;
    *(void *)(v41 + 88) = v38;
    *(void *)(v41 + 96) = v51;
    *(unsigned char *)(v41 + 104) = v27;
    *a1 = v40;
    swift_bridgeObjectRetain();
    uint64_t v42 = v71;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2E3164C();
    uint64_t v43 = *(void *)(*a1 + 16);
    sub_1B2E31CBC(v43);
    uint64_t v36 = *a1;
    *(void *)(v36 + 16) = v43 + 1;
    uint64_t v44 = v36 + 80 * v43;
    *(void *)(v44 + 32) = v50;
    *(void *)(v44 + 40) = v42;
    *(void *)(v44 + 48) = v54;
    *(void *)(v44 + 56) = v52;
    *(void *)(v44 + 64) = v55;
    *(void *)(v44 + 72) = v57;
    *(void *)(v44 + 80) = v56;
    *(void *)(v44 + 88) = v60;
    *(void *)(v44 + 96) = v58;
    *(unsigned char *)(v44 + 104) = v28;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (sub_1B2E825A8() >= 2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v52 >> 14 >= v33 >> 14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2E3164C();
    uint64_t v35 = *(void *)(*a1 + 16);
    sub_1B2E31CBC(v35);
    uint64_t v36 = *a1;
    *(void *)(v36 + 16) = v35 + 1;
    uint64_t v37 = v36 + 80 * v35;
    *(void *)(v37 + 32) = a3;
    *(void *)(v37 + 40) = a4;
    *(void *)(v37 + 48) = v33;
    *(void *)(v37 + 56) = v52;
    *(void *)(v37 + 64) = 0;
    *(void *)(v37 + 72) = 0;
    *(void *)(v37 + 80) = 0;
    *(void *)(v37 + 88) = v26;
    *(void *)(v37 + 96) = v51;
    *(unsigned char *)(v37 + 104) = v27;
LABEL_22:
    *a1 = v36;
    return;
  }
LABEL_24:
  __break(1u);
}

unsigned char *storeEnumTagSinglePayload for MentionGenerationAlgorithm(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D52A50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MentionGenerationAlgorithm()
{
  return &type metadata for MentionGenerationAlgorithm;
}

unint64_t sub_1B2D52A8C()
{
  unint64_t result = qword_1E9C43480;
  if (!qword_1E9C43480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43480);
  }
  return result;
}

unint64_t sub_1B2D52AD8()
{
  unint64_t result = qword_1EB7E3028;
  if (!qword_1EB7E3028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3028);
  }
  return result;
}

void sub_1B2D52B24(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    unint64_t v6 = *(void *)(a1 + 16);
  }
  else {
    unint64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1B29C153C();
  unint64_t v7 = v6;
  uint64_t v25 = a2;
  uint64_t v26 = a1;
  if (v6)
  {
    char v8 = (int *)(a1 + 32);
    uint64_t v9 = (int *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = v4;
    unint64_t v11 = v5;
    unint64_t v12 = v5;
    while (v4)
    {
      if (!v11) {
        goto LABEL_22;
      }
      int v13 = *v8;
      int v14 = *v9;
      unint64_t v15 = *(void *)(v27 + 16);
      if (v15 >= *(void *)(v27 + 24) >> 1)
      {
        unint64_t v22 = v10;
        unint64_t v23 = v12;
        sub_1B29C153C();
        unint64_t v12 = v23;
        unint64_t v10 = v22;
      }
      *(void *)(v27 + 16) = v15 + 1;
      uint64_t v16 = v27 + 8 * v15;
      --v11;
      *(_DWORD *)(v16 + 32) = v13;
      *(_DWORD *)(v16 + 36) = v14;
      --v4;
      ++v9;
      ++v8;
      if (!--v6) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = v4;
    unint64_t v12 = v5;
LABEL_13:
    if (v10 <= v12)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    while (v7 < v10)
    {
      if (v12 == v7) {
        goto LABEL_20;
      }
      if (v7 >= v12) {
        goto LABEL_24;
      }
      int v17 = *(_DWORD *)(v26 + 32 + 4 * v7);
      int v18 = *(_DWORD *)(v25 + 32 + 4 * v7);
      unint64_t v19 = *(void *)(v27 + 16);
      if (v19 >= *(void *)(v27 + 24) >> 1)
      {
        unint64_t v21 = v10;
        unint64_t v24 = v12;
        sub_1B29C153C();
        unint64_t v12 = v24;
        unint64_t v10 = v21;
      }
      ++v7;
      *(void *)(v27 + 16) = v19 + 1;
      uint64_t v20 = v27 + 8 * v19;
      *(_DWORD *)(v20 + 32) = v17;
      *(_DWORD *)(v20 + 36) = v18;
      if (v10 == v7) {
        goto LABEL_20;
      }
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_1B2D52D44(uint64_t a1)
{
  uint64_t v2 = (void *)MEMORY[0x1B3EB2480]();
  sub_1B2D531FC(a1, &v3);
}

uint64_t sub_1B2D52DB8()
{
  type metadata accessor for MentionGenerationModel();
  uint64_t v2 = sub_1B2E33D80(objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_initWithComputeUnits_, 0));
  if (v1) {
    goto LABEL_64;
  }
  *(void *)(v0 + 16) = v2;
  id v3 = objc_msgSend(*(id *)(v2 + 16), sel_modelDescription);
  id v4 = objc_msgSend(v3, sel_metadata);

  type metadata accessor for MLModelMetadataKey(0);
  sub_1B2A934FC();
  sub_1B2E820F8();

  id v5 = (id)*MEMORY[0x1E4F1E898];
  sub_1B29B2960();

  swift_bridgeObjectRelease();
  if (v34[3])
  {
    sub_1B29A3EB4(&qword_1EB7D94D8);
    if (swift_dynamicCast())
    {
      uint64_t v6 = sub_1B29B2544(0x74676E654C78616DLL, 0xE900000000000068);
      unint64_t v8 = v7;
      uint64_t result = swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_8;
      }
    }
  }
  else
  {
    sub_1B2A23938((uint64_t)v34);
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = 0;
  unint64_t v8 = 0xE000000000000000;
LABEL_8:
  uint64_t v10 = HIBYTE(v8) & 0xF;
  uint64_t v11 = v6 & 0xFFFFFFFFFFFFLL;
  if ((v8 & 0x2000000000000000) != 0) {
    uint64_t v12 = HIBYTE(v8) & 0xF;
  }
  else {
    uint64_t v12 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_63:
    sub_1B2A933C4();
    swift_allocError();
    *uint64_t v32 = 5;
    swift_willThrow();
    swift_release();
LABEL_64:
    swift_deallocPartialClassInstance();
    return v0;
  }
  if ((v8 & 0x1000000000000000) != 0)
  {
    uint64_t v14 = sub_1B2A71148(v6, v8, 10);
    LOBYTE(v6) = v33;
    goto LABEL_53;
  }
  if ((v8 & 0x2000000000000000) == 0)
  {
    if ((v6 & 0x1000000000000000) != 0) {
      int v13 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      int v13 = (unsigned __int8 *)sub_1B2E83298();
    }
    uint64_t v14 = (uint64_t)sub_1B2A71130(v13, v11);
    LOBYTE(v6) = v15 & 1;
LABEL_53:
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      *(void *)(v0 + 24) = v14;
      return v0;
    }
    goto LABEL_63;
  }
  v34[0] = v6;
  v34[1] = v8 & 0xFFFFFFFFFFFFFFLL;
  if (v6 == 43)
  {
    if (!v10) {
      goto LABEL_69;
    }
    if (v10 == 1) {
      goto LABEL_39;
    }
    sub_1B299F518();
    if (!v19 & v18) {
      goto LABEL_39;
    }
    uint64_t v14 = v21;
    if (v20 != 2)
    {
      sub_1B299F518();
      if (!v19 & v18) {
        goto LABEL_39;
      }
      uint64_t v14 = 10 * v14 + v23;
      if (v22 != 3)
      {
        while (1)
        {
          sub_1B299E61C();
          if (!v19 & v18) {
            goto LABEL_39;
          }
          sub_1B299D718();
          if (!v19) {
            goto LABEL_39;
          }
          uint64_t v14 = v25 + v24;
          if (__OFADD__(v25, v24)) {
            goto LABEL_39;
          }
          sub_1B2A935E8();
          if (v19) {
            goto LABEL_53;
          }
        }
      }
    }
LABEL_52:
    LOBYTE(v6) = 0;
    goto LABEL_53;
  }
  if (v6 != 45)
  {
    if (!v10 || (v6 - 48) > 9u) {
      goto LABEL_39;
    }
    uint64_t v14 = (v6 - 48);
    if (v10 != 1)
    {
      sub_1B299F518();
      if (!v19 & v18) {
        goto LABEL_39;
      }
      uint64_t v14 = 10 * (v6 - 48) + v27;
      if (v26 != 2)
      {
        while (1)
        {
          sub_1B299E61C();
          if (!v19 & v18) {
            goto LABEL_39;
          }
          sub_1B299D718();
          if (!v19) {
            goto LABEL_39;
          }
          uint64_t v14 = v29 + v28;
          if (__OFADD__(v29, v28)) {
            goto LABEL_39;
          }
          sub_1B2A935E8();
          if (v19) {
            goto LABEL_53;
          }
        }
      }
    }
    goto LABEL_52;
  }
  if (v10)
  {
    if (v10 != 1)
    {
      sub_1B299F518();
      if (!(!v19 & v18))
      {
        if (v16 == 2)
        {
          LOBYTE(v6) = 0;
          uint64_t v14 = -(uint64_t)v17;
          goto LABEL_53;
        }
        if ((BYTE2(v6) - 48) <= 9u)
        {
          uint64_t v14 = -10 * v17 - (BYTE2(v6) - 48);
          if (v16 == 3) {
            goto LABEL_52;
          }
          while (1)
          {
            sub_1B299E61C();
            if (!v19 & v18) {
              break;
            }
            sub_1B299D718();
            if (!v19) {
              break;
            }
            uint64_t v14 = v31 - v30;
            if (__OFSUB__(v31, v30)) {
              break;
            }
            sub_1B2A935E8();
            if (v19) {
              goto LABEL_53;
            }
          }
        }
      }
    }
LABEL_39:
    uint64_t v14 = 0;
    LOBYTE(v6) = 1;
    goto LABEL_53;
  }
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

void sub_1B2D531FC(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C38A78);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B2ECAB60;
  sub_1B2A7EA00();
  *(void *)(v5 + 32) = sub_1B2E82EE8();
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(v5 + 40) = sub_1B2E82B68();
  sub_1B2E82878();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
  id v8 = sub_1B2D53AFC(v5, 131104);
  if (v2)
  {

LABEL_3:
    sub_1B2A933C4();
    swift_allocError();
    unsigned char *v9 = 1;
    swift_willThrow();
    return;
  }
  if (!v8) {
    goto LABEL_3;
  }
  uint64_t v53 = a2;
  uint64_t v10 = v8;
  unint64_t v11 = (unint64_t)objc_msgSend(v8, sel_count);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v12 = v11;
  int v13 = v10;
  if (!v11) {
    goto LABEL_11;
  }
  if (!v6) {
    goto LABEL_41;
  }
  if (v11 - 1 >= v6)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v14 = 0;
  uint64_t v15 = a1 + 32;
  int v13 = v10;
  do
  {
    id v16 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, *(unsigned int *)(v15 + 4 * v14));
    objc_msgSend(v10, sel_setObject_atIndexedSubscript_, v16, v14);

    ++v14;
  }
  while (v12 != v14);
LABEL_11:
  swift_retain();
  sub_1B2E34424(v13);
  swift_release();
  swift_retain();
  id v18 = sub_1B2E33568();
  swift_release();
  if (!v18
    || (id v19 = objc_msgSend(v18, sel_multiArrayValue), v18, !v19))
  {
    sub_1B2A933C4();
    swift_allocError();
    *unsigned __int8 v17 = 6;
    swift_willThrow();

    goto LABEL_13;
  }
  unint64_t v20 = (unint64_t)objc_msgSend(v19, sel_count);
  if ((v20 & 0x8000000000000000) != 0) {
    goto LABEL_43;
  }
  unint64_t v21 = v20;
  unint64_t v52 = v13;
  uint64_t v22 = MEMORY[0x1E4FBC860];
  unint64_t v23 = 0x1E4F28000uLL;
  if (v20)
  {
    uint64_t v24 = 0;
    do
    {
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1B2ECAB60;
      *(void *)(v25 + 32) = sub_1B2E82EE8();
      *(void *)(v25 + 40) = objc_msgSend(objc_allocWithZone(*(Class *)(v23 + 3792)), sel_initWithInteger_, v24);
      sub_1B2E82878();
      uint64_t v26 = (void *)sub_1B2E82828();
      swift_bridgeObjectRelease();
      id v27 = v19;
      id v28 = objc_msgSend(v19, sel_objectForKeyedSubscript_, v26);

      int v29 = sub_1B2E83908();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B79EC();
        uint64_t v22 = v31;
      }
      unint64_t v30 = *(void *)(v22 + 16);
      id v19 = v27;
      if (v30 >= *(void *)(v22 + 24) >> 1)
      {
        sub_1B29B79EC();
        uint64_t v22 = v32;
      }
      unint64_t v23 = 0x1E4F28000;
      ++v24;
      *(void *)(v22 + 16) = v30 + 1;
      *(_DWORD *)(v22 + 4 * v30 + 32) = v29;
    }
    while (v21 != v24);
  }
  swift_retain();
  id v33 = sub_1B2E33568();
  swift_release();
  if (!v33
    || (id v34 = objc_msgSend(v33, sel_multiArrayValue), v33, !v34))
  {
    swift_bridgeObjectRelease();
    sub_1B2A933C4();
    swift_allocError();
    *uint64_t v48 = 6;
    swift_willThrow();

    goto LABEL_13;
  }
  unint64_t v35 = (unint64_t)objc_msgSend(v34, sel_count);
  if ((v35 & 0x8000000000000000) == 0)
  {
    unint64_t v36 = v35;
    id v54 = v34;
    uint64_t v37 = MEMORY[0x1E4FBC860];
    if (v35)
    {
      uint64_t v38 = 0;
      do
      {
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_1B2ECAB60;
        *(void *)(v39 + 32) = sub_1B2E82EE8();
        *(void *)(v39 + 40) = objc_msgSend(objc_allocWithZone(*(Class *)(v23 + 3792)), sel_initWithInteger_, v38);
        sub_1B2E82878();
        uint64_t v40 = (void *)sub_1B2E82828();
        swift_bridgeObjectRelease();
        id v41 = objc_msgSend(v54, sel_objectForKeyedSubscript_, v40);

        sub_1B2E82AD8();
        int v43 = v42;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29B8680();
          uint64_t v37 = v46;
        }
        unint64_t v44 = *(void *)(v37 + 16);
        unint64_t v45 = v44 + 1;
        if (v44 >= *(void *)(v37 + 24) >> 1)
        {
          sub_1B29B8680();
          uint64_t v37 = v47;
        }
        ++v38;
        *(void *)(v37 + 16) = v45;
        *(_DWORD *)(v37 + 4 * v44 + 32) = v43;
      }
      while (v36 != v38);
    }
    else
    {
      unint64_t v45 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    }
    if (v45 == *(void *)(v22 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2D52B24(v22, v37);
      uint64_t v50 = v49;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release();

      *uint64_t v53 = v50;
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A933C4();
    swift_allocError();
    *uint64_t v51 = 6;
    swift_willThrow();

LABEL_13:
    swift_release();
    return;
  }
LABEL_44:
  __break(1u);
}

uint64_t sub_1B2D538F8()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MentionGeneratorModel()
{
  return self;
}

void sub_1B2D539C0()
{
}

id sub_1B2D539CC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x64695F6E656B6F74 && a2 == 0xE900000000000073;
  if (v3 || (sub_1B2E837A8()) && (uint64_t v4 = *(void *)(v2 + 16)) != 0) {
    return objc_msgSend(self, sel_featureValueWithMultiArray_, v4);
  }
  else {
    return 0;
  }
}

uint64_t type metadata accessor for MentionGenerationInput()
{
  return self;
}

id sub_1B2D53AFC(uint64_t a1, uint64_t a2)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1B2A7EA00();
  uint64_t v4 = (void *)sub_1B2E82828();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  id v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v9);

  if (v5)
  {
    id v6 = v9[0];
  }
  else
  {
    id v7 = v9[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v5;
}

uint64_t sub_1B2D53BE8(uint64_t a1, void (*a2)(uint64_t *, void *), uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a1;
  uint64_t v7 = a4 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a4 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    id v19 = (void *)(*(void *)(a4 + 48) + 16 * i);
    uint64_t v20 = v19[1];
    v21[0] = *v19;
    v21[1] = v20;
    swift_bridgeObjectRetain();
    a2(&v22, v21);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    if (!v17) {
      break;
    }
LABEL_17:
    unint64_t v10 = (v17 - 1) & v17;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_26:
    swift_release();
    return v22;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_16:
    int64_t v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t MLFeatureProvider.dictionary.getter(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_featureNames);
  uint64_t v4 = sub_1B2E82B08();

  sub_1B2A8E480();
  uint64_t v5 = sub_1B2E82148();
  v8[2] = a1;
  uint64_t v9 = v1;
  uint64_t v6 = sub_1B2D53BE8(v5, (void (*)(uint64_t *, void *))sub_1B2D53F38, (uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1B2D53E80(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1B2E82348();
  id v7 = objc_msgSend(a3, sel_featureValueForName_, v6);

  if (v7)
  {
    sub_1B2B2A50C((uint64_t)v7, v5, v4, v8, v9, v10, v11, v12, v14, v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v13 = (void *)sub_1B2B29E68(v5, v4);
    swift_bridgeObjectRelease();
  }
}

void sub_1B2D53F38(uint64_t a1, uint64_t *a2)
{
  sub_1B2D53E80(a1, a2, *(void **)(v2 + 24));
}

BOOL static ModelError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ModelError.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t ModelError.hashValue.getter()
{
  return sub_1B2E839E8();
}

unint64_t sub_1B2D53FEC()
{
  unint64_t result = qword_1E9C43488;
  if (!qword_1E9C43488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43488);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ModelError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D54104);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelError()
{
  return &type metadata for ModelError;
}

uint64_t sub_1B2D5413C(uint64_t a1)
{
  uint64_t v4 = sub_1B2E81798();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B299ADB4();
  uint64_t v8 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E27F0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  uint64_t v11 = sub_1B2E81718();
  sub_1B2D54F00(&qword_1EB7E2E98);
  swift_retain();
  sub_1B2E82668();
  uint64_t v12 = sub_1B2D54F00(&qword_1EB7E2EA0);
  sub_1B29A212C();
  int v13 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v4);
  v27[0] = v1;
  if (v13 == 1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  else
  {
    id v28 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
    uint64_t v14 = MEMORY[0x1E4FBC860];
    v27[1] = v12;
    v27[2] = v11;
    v27[3] = v6 + 32;
    do
    {
      v28(v2, v10, v4);
      if (sub_1B2E81788())
      {
        uint64_t v16 = sub_1B2E81778();
        uint64_t v18 = v17;
        uint64_t v19 = sub_1B2D54F44();
        v20(v19);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29B7048();
          uint64_t v14 = v25;
        }
        unint64_t v21 = *(void *)(v14 + 16);
        if (v21 >= *(void *)(v14 + 24) >> 1)
        {
          sub_1B29B7048();
          uint64_t v14 = v26;
        }
        *(void *)(v14 + 16) = v21 + 1;
        uint64_t v22 = v14 + 16 * v21;
        *(void *)(v22 + 32) = v16;
        *(void *)(v22 + 40) = v18;
      }
      else
      {
        uint64_t v23 = sub_1B2D54F44();
        v24(v23);
      }
      sub_1B29A212C();
    }
    while (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v4) != 1);
  }
  swift_release();
  return v14;
}

uint64_t MorphunTokenizer.init(locale:overrideConfigOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v7 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E2738);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B2E806F8();
  sub_1B299D278();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1B299ADB4();
  sub_1B2D546A8(a1, (uint64_t)v9);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_1B2E806E8();
    sub_1B2A90C30((uint64_t)v9);
    if (a2) {
      goto LABEL_8;
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v4, v9, v10);
    if (a2) {
      goto LABEL_8;
    }
  }
  if (qword_1EB7E2748 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
LABEL_8:
  sub_1B2E81768();
  swift_allocObject();
  sub_1B2E81758();
  if (v3)
  {
    sub_1B2A90C30(a1);
    uint64_t v14 = sub_1B29A31B4();
    return v15(v14);
  }
  else
  {
    uint64_t v17 = sub_1B2E81748();
    uint64_t v18 = qword_1EB7E2EC0;
    swift_retain();
    if (v18 != -1) {
      swift_once();
    }
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1B2E81758();
    uint64_t v19 = sub_1B2E81748();
    swift_release();
    swift_release();
    sub_1B2A90C30(a1);
    uint64_t v20 = sub_1B29A31B4();
    v21(v20);
    uint64_t v22 = v24;
    *uint64_t v24 = v17;
    v22[1] = v19;
    return swift_release();
  }
}

uint64_t sub_1B2D546A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4((uint64_t *)&unk_1EB7E2738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void MorphunTokenizer.tokenize(_:noWordNormalization:)()
{
  uint64_t v1 = (void *)MEMORY[0x1B3EB2480]();
  swift_retain();
  uint64_t v2 = sub_1B2E81728();
  if (!v0)
  {
    sub_1B2D5413C(v2);
    swift_release();
  }
  swift_release();
}

uint64_t sub_1B2D547CC()
{
  sub_1B29A3EB4(&qword_1EB7E2750);
  uint64_t v0 = sub_1B2E81738();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B2EC89D0;
  unint64_t v5 = v4 + v3;
  uint64_t v6 = *(void (**)(unint64_t, void, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x1E4F78FA8], v0);
  v6(v5 + v2, *MEMORY[0x1E4F78F70], v0);
  v6(v5 + 2 * v2, *MEMORY[0x1E4F78F88], v0);
  v6(v5 + 3 * v2, *MEMORY[0x1E4F78F78], v0);
  v6(v5 + 4 * v2, *MEMORY[0x1E4F78F98], v0);
  uint64_t result = ((uint64_t (*)(unint64_t, void, uint64_t))v6)(v5 + 5 * v2, *MEMORY[0x1E4F78F90], v0);
  qword_1EB7E2EA8 = v4;
  return result;
}

uint64_t sub_1B2D54960()
{
  sub_1B29A3EB4(&qword_1EB7E2750);
  uint64_t v0 = sub_1B2E81738();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B2EC89B0;
  unint64_t v5 = v4 + v3;
  uint64_t v6 = *(void (**)(unint64_t, void, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x1E4F78FA8], v0);
  v6(v5 + v2, *MEMORY[0x1E4F78F88], v0);
  v6(v5 + 2 * v2, *MEMORY[0x1E4F78F78], v0);
  v6(v5 + 3 * v2, *MEMORY[0x1E4F78F98], v0);
  uint64_t result = ((uint64_t (*)(unint64_t, void, uint64_t))v6)(v5 + 4 * v2, *MEMORY[0x1E4F78F90], v0);
  qword_1EB7E2EB0 = v4;
  return result;
}

uint64_t static MorphunTokenizer.defaultSeparator.getter()
{
  return 9;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MorphunTokenizer.process(_:separator:noWordNormalization:)(Swift::String _, Swift::String separator, Swift::Bool noWordNormalization)
{
  object = separator._object;
  uint64_t v6 = v3 + 1;
  if (!noWordNormalization) {
    uint64_t v6 = v3;
  }
  uint64_t v7 = *v6;
  uint64_t v8 = (void *)MEMORY[0x1B3EB2480](_._countAndFlagsBits, _._object, separator._countAndFlagsBits);
  uint64_t v9 = (void *)MEMORY[0x1B3EB2480]();
  swift_retain();
  uint64_t v10 = sub_1B2E81728();
  if (v4)
  {
    swift_release();
  }
  else
  {
    sub_1B2D5413C(v10);
    swift_release();
    swift_release();
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2A20660();
    uint64_t v7 = sub_1B2E822D8();
    object = v11;
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = v7;
  uint64_t v13 = object;
  result._object = v13;
  result._uint64_t countAndFlagsBits = v12;
  return result;
}

uint64_t MorphunTokenizer.processAndCheckNonNormalization(input:separator:)()
{
  uint64_t v15 = (void *)MEMORY[0x1B3EB2480]();
  uint64_t v1 = MEMORY[0x1B3EB2480]();
  uint64_t v2 = (void *)MEMORY[0x1B3EB2480]();
  swift_retain();
  uint64_t v3 = sub_1B2E81728();
  if (v0)
  {
    swift_release();
  }
  else
  {
    sub_1B2D5413C(v3);
    swift_release();
    swift_release();
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B2A20660();
    uint64_t v4 = sub_1B2E822D8();
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t v14 = (void *)MEMORY[0x1B3EB2480]();
    uint64_t v7 = (void *)MEMORY[0x1B3EB2480]();
    swift_retain();
    uint64_t v8 = sub_1B2E81728();
    sub_1B2D5413C(v8);
    swift_release();
    swift_release();
    uint64_t v10 = sub_1B2E822D8();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    BOOL v13 = v4 == v10 && v6 == v12;
    if (v13 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1B29A3EB4(&qword_1EB7E5B00);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1B2EC00A0;
      *(void *)(v1 + 32) = v4;
      *(void *)(v1 + 40) = v6;
    }
    else
    {
      sub_1B29A3EB4(&qword_1EB7E5B00);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1B2EBFA40;
      *(void *)(v1 + 32) = v4;
      *(void *)(v1 + 40) = v6;
      *(void *)(v1 + 48) = v10;
      *(void *)(v1 + 56) = v12;
    }
  }
  return v1;
}

void *assignWithCopy for MorphunTokenizer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MorphunTokenizer()
{
  return &type metadata for MorphunTokenizer;
}

uint64_t sub_1B2D54F00(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B2E81718();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2D54F44()
{
  return v0;
}

uint64_t sub_1B2D54F58()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1EB7E2E90);
  sub_1B2A4A2A8(v0, qword_1E9C43490);
  sub_1B29A4B98(v0, (uint64_t)qword_1E9C43490);
  return sub_1B2E814D8();
}

uint64_t MUIDIdentifierMapView.identifier(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1B29A3EB4(&qword_1EB7E5B00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1B2A184AC();
  swift_getObjectType();
  sub_1B29A3EB4((uint64_t *)&unk_1E9C434B0);
  sub_1B2E80C28();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_1B2A172F8(v9, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t MUIDIdentifierMapView.identifiers(for:)(uint64_t a1)
{
  return sub_1B2D55894(a1, (uint64_t *)&unk_1E9C434B0);
}

uint64_t sub_1B2D55100@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v57 = a1;
  unint64_t v52 = a3;
  unint64_t isUniquelyReferenced_nonNull_native = sub_1B29A3EB4(&qword_1EB7E2E90);
  uint64_t v5 = *(void *)(isUniquelyReferenced_nonNull_native - 8);
  MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B29A3EB4(&qword_1EB7E2790);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9C38C88 != -1) {
LABEL_30:
  }
    swift_once();
  uint64_t v12 = sub_1B29A4B98(isUniquelyReferenced_nonNull_native, (uint64_t)qword_1E9C43490);
  (*(void (**)(char *, uint64_t, unint64_t))(v5 + 16))(v7, v12, isUniquelyReferenced_nonNull_native);
  uint64_t v69 = a2;
  uint64_t v62 = sub_1B2E81508();
  uint64_t v63 = MEMORY[0x1E4F62E90];
  sub_1B29D1C70((uint64_t *)&v59);
  sub_1B2E81518();
  uint64_t v67 = sub_1B2E80BE8();
  uint64_t v68 = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(&v64);
  sub_1B29A3EB4(&qword_1EB7E4A80);
  sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
  sub_1B2E82648();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v59);
  sub_1B2E81498();
  (*(void (**)(char *, unint64_t))(v5 + 8))(v7, isUniquelyReferenced_nonNull_native);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v64);
  sub_1B29D22C4(qword_1EB7E31A0, &qword_1EB7E2790);
  uint64_t v13 = v58;
  unint64_t isUniquelyReferenced_nonNull_native = sub_1B2E80A58();
  uint64_t v14 = v13;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v13) {
    return result;
  }
  if (!(isUniquelyReferenced_nonNull_native >> 62))
  {
    uint64_t v8 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_5;
    }
LABEL_32:
    uint64_t v9 = MEMORY[0x1E4FBC868];
LABEL_33:
    uint64_t result = swift_bridgeObjectRelease_n();
    *unint64_t v52 = v9;
    return result;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_1B2E83448();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_32;
  }
LABEL_5:
  unint64_t v57 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  uint64_t v9 = MEMORY[0x1E4FBC868];
  uint64_t v5 = 4;
  unint64_t v53 = isUniquelyReferenced_nonNull_native;
  uint64_t v56 = v8;
  while (1)
  {
    a2 = (uint64_t *)(v5 - 4);
    if (v57)
    {
      uint64_t v11 = (char *)MEMORY[0x1B3EB1A20](v5 - 4, isUniquelyReferenced_nonNull_native);
    }
    else
    {
      uint64_t v11 = *(char **)(isUniquelyReferenced_nonNull_native + 8 * v5);
      swift_retain();
    }
    if (__OFADD__(a2, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v58 = v5 - 3;
    sub_1B2A1F188();
    if (v14) {
      break;
    }
    uint64_t v18 = v16;
    uint64_t v7 = v17;
    sub_1B2D7EAFC((uint64_t)&v64);
    if (v65)
    {
      swift_bridgeObjectRetain();
      sub_1B29DB060(v18, (uint64_t)v7, v19, v20, v21, v22, v23, v24, v51, (uint64_t)v52, v53, v54, v55, v56, v57, v58, (uint64_t)v59, v60, v61,
        v62,
        v63,
        v64,
        v65,
        v66,
        v67,
        v68);
      char v26 = v25;
      swift_bridgeObjectRelease();
      if (v26)
      {
        swift_isUniquelyReferenced_nonNull_native();
        char v59 = (uint64_t *)v9;
        sub_1B29A3EB4(&qword_1E9C37B00);
        unint64_t isUniquelyReferenced_nonNull_native = v53;
        sub_1B2E83398();
        uint64_t v9 = (uint64_t)v59;
        swift_bridgeObjectRelease();
        sub_1B2E833B8();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v54 = 0;
      uint64_t v55 = v64;
      unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      a2 = (uint64_t *)v9;
      uint64_t v33 = sub_1B29DB060(v18, (uint64_t)v7, v27, v28, v29, v30, v31, v32, v51, (uint64_t)v52, v53, v54, v55, v56, v57, v58, v9, v60, v61,
              v62,
              v63,
              v64,
              v65,
              v66,
              v67,
              v68);
      uint64_t v35 = *(void *)(v9 + 16);
      BOOL v36 = (v34 & 1) == 0;
      uint64_t v9 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_28;
      }
      unint64_t v37 = v33;
      uint64_t v8 = v34;
      sub_1B29A3EB4(&qword_1E9C37B00);
      a2 = (uint64_t *)&v59;
      char v38 = sub_1B2E83398();
      unint64_t isUniquelyReferenced_nonNull_native = v53;
      if (v38)
      {
        a2 = v59;
        uint64_t v45 = sub_1B29DB060(v18, (uint64_t)v7, v39, v40, v41, v42, v43, v44, v51, (uint64_t)v52, v53, v54, v55, v56, v57, v58, (uint64_t)v59, v60, v61,
                v62,
                v63,
                v64,
                v65,
                v66,
                v67,
                v68);
        if ((v8 & 1) != (v46 & 1)) {
          goto LABEL_36;
        }
        unint64_t v37 = v45;
      }
      uint64_t v9 = (uint64_t)v59;
      if (v8)
      {
        *(void *)(v59[7] + 8 * v37) = v55;
      }
      else
      {
        v59[(v37 >> 6) + 8] |= 1 << v37;
        uint64_t v47 = (uint64_t *)(*(void *)(v9 + 48) + 16 * v37);
        *uint64_t v47 = v18;
        v47[1] = (uint64_t)v7;
        *(void *)(*(void *)(v9 + 56) + 8 * v37) = v55;
        uint64_t v48 = *(void *)(v9 + 16);
        BOOL v49 = __OFADD__(v48, 1);
        uint64_t v50 = v48 + 1;
        if (v49) {
          goto LABEL_29;
        }
        *(void *)(v9 + 16) = v50;
        swift_bridgeObjectRetain();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v54;
    }
    uint64_t v8 = v56;
    ++v5;
    if (v58 == v56) {
      goto LABEL_33;
    }
  }
  swift_unexpectedError();
  __break(1u);
LABEL_36:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t MUIDIdentifierMapView.muidIdentifier(for:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *v1;
  sub_1B29A3EB4(&qword_1EB7D98E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
  *(void *)(inited + 32) = v3;
  sub_1B2A17D40();
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1E9C434C0);
  uint64_t v6 = v4;
  sub_1B2E80C28();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v6 = sub_1B2A175EC(v8);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t MUIDIdentifierMapView.muidIdentifiers(for:)(uint64_t a1)
{
  return sub_1B2D55894(a1, &qword_1E9C434C0);
}

uint64_t sub_1B2D55894(uint64_t a1, uint64_t *a2)
{
  swift_getObjectType();
  sub_1B29A3EB4(a2);
  uint64_t result = sub_1B2E80C28();
  if (!v2) {
    return v5;
  }
  return result;
}

uint64_t sub_1B2D5592C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  unint64_t v37 = a1;
  uint64_t v32 = a3;
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7E2E90);
  unint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1B29A3EB4(&qword_1EB7E2790);
  unint64_t v8 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9C38C88 != -1) {
LABEL_28:
  }
    swift_once();
  uint64_t v11 = sub_1B29A4B98(v4, (uint64_t)qword_1E9C43490);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  v40[6] = (uint64_t)a2;
  v39[3] = sub_1B2E81508();
  v39[4] = MEMORY[0x1E4F62E90];
  sub_1B29D1C70(v39);
  sub_1B2E81518();
  v40[3] = sub_1B2E80BE8();
  v40[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v40);
  sub_1B29A3EB4(&qword_1EB7E2BD0);
  sub_1B29D22C4((unint64_t *)&qword_1EB7D9510, &qword_1EB7E2BD0);
  sub_1B2A28C38();
  sub_1B2E82648();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v39);
  sub_1B2E81498();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v40);
  sub_1B29D22C4(qword_1EB7E31A0, &qword_1EB7E2790);
  uint64_t v12 = v36;
  uint64_t v13 = v38;
  unint64_t v14 = sub_1B2E80A58();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v12);
  if (!v13)
  {
    unint64_t v8 = v14;
    unint64_t v33 = v14;
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v8 = v33;
      unint64_t v5 = sub_1B2E83448();
      swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_5;
      }
    }
    else
    {
      unint64_t v5 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_5:
        unint64_t v35 = v8 & 0xC000000000000001;
        uint64_t v16 = (uint64_t *)MEMORY[0x1E4FBC868];
        uint64_t v17 = 4;
        unint64_t v34 = v5;
        while (1)
        {
          if (v35)
          {
            a2 = (uint64_t *)MEMORY[0x1B3EB1A20](v17 - 4, v8);
          }
          else
          {
            a2 = *(uint64_t **)(v8 + 8 * v17);
            swift_retain();
          }
          uint64_t v4 = v17 - 3;
          if (__OFADD__(v17 - 4, 1))
          {
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          sub_1B2A201E0();
          unint64_t v37 = a2;
          uint64_t v38 = v17 - 3;
          uint64_t v4 = v40[0];
          uint64_t v18 = sub_1B2A22298();
          if (v19)
          {
            uint64_t v7 = v19;
            uint64_t v36 = v18;
            unint64_t v8 = 0;
            swift_isUniquelyReferenced_nonNull_native();
            v39[0] = (uint64_t)v16;
            uint64_t v10 = (char *)v4;
            a2 = v16;
            unint64_t v20 = sub_1B29DAE70();
            if (__OFADD__(v16[2], (v21 & 1) == 0)) {
              goto LABEL_26;
            }
            unint64_t v5 = v20;
            uint64_t v4 = v21;
            sub_1B29A3EB4(&qword_1E9C41C98);
            a2 = v39;
            char v22 = sub_1B2E83398();
            unint64_t v8 = v33;
            if (v22)
            {
              a2 = (uint64_t *)v39[0];
              unint64_t v23 = sub_1B29DAE70();
              if ((v4 & 1) != (v24 & 1))
              {
                uint64_t result = sub_1B2E83858();
                __break(1u);
                return result;
              }
              unint64_t v5 = v23;
            }
            uint64_t v16 = (uint64_t *)v39[0];
            if (v4)
            {
              char v25 = (uint64_t *)(*(void *)(v39[0] + 56) + 16 * v5);
              *char v25 = v36;
              v25[1] = (uint64_t)v7;
              swift_bridgeObjectRelease();
            }
            else
            {
              *(void *)(v39[0] + 8 * (v5 >> 6) + 64) |= 1 << v5;
              *(void *)(v16[6] + 8 * v5) = v10;
              uint64_t v27 = (uint64_t *)(v16[7] + 16 * v5);
              *uint64_t v27 = v36;
              v27[1] = (uint64_t)v7;
              uint64_t v28 = v16[2];
              BOOL v29 = __OFADD__(v28, 1);
              uint64_t v30 = v28 + 1;
              if (v29) {
                goto LABEL_27;
              }
              v16[2] = v30;
            }
            swift_release();
            swift_bridgeObjectRelease();
            unint64_t v5 = v34;
          }
          else
          {
            sub_1B29DAE70();
            if (v26)
            {
              swift_isUniquelyReferenced_nonNull_native();
              v39[0] = (uint64_t)v16;
              uint64_t v10 = (char *)v16[3];
              sub_1B29A3EB4(&qword_1E9C41C98);
              unint64_t v5 = v34;
              sub_1B2E83398();
              uint64_t v16 = (uint64_t *)v39[0];
              sub_1B2A4B170();
              sub_1B2E833B8();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_release();
            }
          }
          ++v17;
          if (v38 == v5) {
            goto LABEL_31;
          }
        }
      }
    }
    uint64_t v16 = (uint64_t *)MEMORY[0x1E4FBC868];
LABEL_31:
    uint64_t result = swift_bridgeObjectRelease_n();
    *uint64_t v32 = v16;
  }
  return result;
}

uint64_t sub_1B2D55F3C@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2D55100(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1B2D55F58@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1B2D5592C(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t destroy for MUIDIdentifierMapView()
{
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t _s20IntelligencePlatform21MUIDIdentifierMapViewVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for MUIDIdentifierMapView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for MUIDIdentifierMapView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MUIDIdentifierMapView()
{
  return &type metadata for MUIDIdentifierMapView;
}

uint64_t sub_1B2D560B4@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2D55F3C(a1, a2);
}

uint64_t sub_1B2D560CC@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1B2D55F58(a1, a2);
}

uint64_t sub_1B2D560E4()
{
  return 0x796C7069746C756DLL;
}

unint64_t sub_1B2D560FC()
{
  return 0xD000000000000023;
}

double sub_1B2D56118(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 1.0;
  }
  uint64_t v2 = (double *)(a1 + 32);
  double result = 1.0;
  do
  {
    double v4 = *v2++;
    double result = result * v4;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t type metadata accessor for Multiply()
{
  return self;
}

uint64_t sub_1B2D56168@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(result + 34) == 1)
  {
    uint64_t v2 = *(void *)result;
    uint64_t v3 = *(void *)(result + 80);
    unsigned __int8 v4 = *(unsigned char *)(result + 96);
    uint64_t v5 = *(void *)(result + 88);
    uint64_t v7 = *(void *)(result + 40);
    uint64_t v6 = *(void *)(result + 48);
    unsigned __int16 v8 = *(_WORD *)(result + 32);
    uint64_t v9 = *(void *)(result + 24);
    long long v125 = *(_OWORD *)(result + 8);
    swift_bridgeObjectRetain();
    sub_1B29A3EB4(&qword_1E9C41EB8);
    sub_1B29C58F8();
    uint64_t v10 = MEMORY[0x1E4FBC860];
    *(_OWORD *)&v129[8] = v125;
    *(void *)uint64_t v129 = v2;
    *(void *)&v129[24] = v9;
    unsigned __int16 v130 = v8;
    unsigned __int8 v131 = 1;
    *(void *)&long long v132 = v7;
    *((void *)&v132 + 1) = v6;
    long long v133 = 0uLL;
    uint64_t v134 = sub_1B2E82148();
    uint64_t v135 = v10;
    uint64_t v136 = v5;
    unsigned __int8 v137 = v4;
    uint64_t v138 = v10;
    uint64_t v112 = *(void *)(v3 + 16);
    if (v112)
    {
      uint64_t v113 = v3 + 32;
      swift_bridgeObjectRetain();
      unint64_t v11 = 0;
      uint64_t v124 = MEMORY[0x1E4FBC860];
      uint64_t v114 = MEMORY[0x1E4FBC860];
      uint64_t v115 = MEMORY[0x1E4FBC860];
      uint64_t v111 = v3;
      while (1)
      {
        if (v11 >= *(void *)(v3 + 16)) {
          goto LABEL_131;
        }
        uint64_t v12 = v113 + 112 * v11;
        uint64_t v122 = *(void *)(v12 + 8);
        uint64_t v123 = *(void *)v12;
        uint64_t v13 = *(void *)(v12 + 24);
        uint64_t v14 = *(unsigned __int16 *)(v12 + 32);
        unsigned __int8 v15 = *(unsigned char *)(v12 + 34);
        uint64_t v121 = *(void *)(v12 + 16);
        unint64_t v116 = v11 + 1;
        sub_1B2B1D124(v139, *(void *)(v12 + 72));
        uint64_t v16 = v139[0];
        uint64_t v17 = v139[1];
        int64_t v18 = v139[3];
        uint64_t v120 = v139[2];
        unint64_t v19 = v139[4];
        swift_bridgeObjectRetain_n();
        uint64_t v119 = v13;
        unsigned __int8 v117 = v15;
        unsigned int v118 = v14;
        sub_1B29C5A24(v123, v122, v121, v13, v14, v15);
        int64_t v20 = (unint64_t)(v120 + 64) >> 6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
        if (v19)
        {
LABEL_6:
          unint64_t v22 = __clz(__rbit64(v19));
          v19 &= v19 - 1;
          unint64_t v23 = v22 | (v18 << 6);
          goto LABEL_25;
        }
        while (1)
        {
          int64_t v24 = v18 + 1;
          if (__OFADD__(v18, 1)) {
            goto LABEL_124;
          }
          if (v24 >= v20) {
            goto LABEL_42;
          }
          unint64_t v25 = *(void *)(v17 + 8 * v24);
          int64_t v26 = v18 + 1;
          if (!v25)
          {
            int64_t v26 = v18 + 2;
            if (v18 + 2 >= v20) {
              goto LABEL_42;
            }
            unint64_t v25 = *(void *)(v17 + 8 * v26);
            if (!v25)
            {
              int64_t v26 = v18 + 3;
              if (v18 + 3 >= v20) {
                goto LABEL_42;
              }
              unint64_t v25 = *(void *)(v17 + 8 * v26);
              if (!v25)
              {
                int64_t v26 = v18 + 4;
                if (v18 + 4 >= v20) {
                  goto LABEL_42;
                }
                unint64_t v25 = *(void *)(v17 + 8 * v26);
                if (!v25)
                {
                  int64_t v26 = v18 + 5;
                  if (v18 + 5 >= v20) {
                    goto LABEL_42;
                  }
                  unint64_t v25 = *(void *)(v17 + 8 * v26);
                  if (!v25) {
                    break;
                  }
                }
              }
            }
          }
LABEL_24:
          unint64_t v19 = (v25 - 1) & v25;
          unint64_t v23 = __clz(__rbit64(v25)) + (v26 << 6);
          int64_t v18 = v26;
LABEL_25:
          uint64_t v28 = *(void *)(*(void *)(v16 + 56) + 8 * v23);
          uint64_t v29 = *(void *)(v28 + 16);
          uint64_t v30 = v21[2];
          if (__OFADD__(v30, v29))
          {
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            sub_1B2E834A8();
            __break(1u);
            JUMPOUT(0x1B2D56E00);
          }
          swift_bridgeObjectRetain();
          if (!swift_isUniquelyReferenced_nonNull_native() || v30 + v29 > v21[3] >> 1)
          {
            sub_1B29B707C();
            uint64_t v21 = v31;
          }
          if (*(void *)(v28 + 16))
          {
            uint64_t v32 = v21[2];
            if ((v21[3] >> 1) - v32 < v29) {
              goto LABEL_122;
            }
            unint64_t v33 = (unint64_t)&v21[18 * v32 + 4];
            if (v28 + 32 < v33 + 144 * v29 && v33 < v28 + 32 + 144 * v29) {
              goto LABEL_141;
            }
            swift_arrayInitWithCopy();
            if (v29)
            {
              uint64_t v35 = v21[2];
              BOOL v36 = __OFADD__(v35, v29);
              uint64_t v37 = v35 + v29;
              if (v36) {
                goto LABEL_123;
              }
              void v21[2] = v37;
            }
          }
          else if (v29)
          {
            goto LABEL_121;
          }
          swift_bridgeObjectRelease();
          if (v19) {
            goto LABEL_6;
          }
        }
        int64_t v26 = v18 + 6;
        if (v18 + 6 < v20)
        {
          unint64_t v25 = *(void *)(v17 + 8 * v26);
          if (!v25)
          {
            int64_t v27 = v18 + 7;
            do
            {
              if (v27 >= v20) {
                goto LABEL_42;
              }
              unint64_t v25 = *(void *)(v17 + 8 * v27++);
            }
            while (!v25);
            int64_t v26 = v27 - 1;
          }
          goto LABEL_24;
        }
LABEL_42:
        swift_bridgeObjectRelease();
        swift_release();
        sub_1B29C5B68(v123, v122, v121, v119, v118, v117);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v38 = v21[2];
        if (v38) {
          break;
        }
LABEL_112:
        swift_bridgeObjectRelease();
        uint64_t v3 = v111;
        unint64_t v11 = v116;
        if (v116 == v112)
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = v115;
          uint64_t v94 = v124;
          goto LABEL_116;
        }
      }
      memcpy(__dst, v21 + 4, sizeof(__dst));
      uint64_t v39 = _Records_GDEntityPredicate_records;
      if (!_Records_GDEntityPredicate_records) {
        goto LABEL_132;
      }
      uint64_t v40 = 22;
      while (2)
      {
        if (*((uint64_t *)v39 + 25) >= 2674) {
          goto LABEL_125;
        }
        if (*((uint64_t *)v39 + 26) >= 3558) {
          goto LABEL_126;
        }
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_133;
        }
        uint64_t v41 = *((void *)&__dst[3] + 1);
        uint64_t v42 = *(void *)&__dst[4];
        sub_1B29C5944((uint64_t)__dst);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_134;
        }
        uint64_t v45 = v43;
        uint64_t v46 = v44;
        sub_1B2E82538();
        if (v41 == v45 && v42 == v46)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v48 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v48 & 1) == 0) {
            goto LABEL_93;
          }
        }
        if (!_Records_GDEntityPredicate_records) {
          goto LABEL_135;
        }
        if (*((uint64_t *)_Records_GDEntityPredicate_records + 136) >= 2674) {
          goto LABEL_127;
        }
        if (*((uint64_t *)_Records_GDEntityPredicate_records + 137) >= 3558) {
          goto LABEL_128;
        }
        if (!_Records_GDEntityPredicate_predicateIds) {
          goto LABEL_136;
        }
        __int16 v49 = _Records_GDEntityPredicate_records[540];
        uint64_t v50 = sub_1B2E82538();
        if (!_Records_GDEntityPredicate_labels) {
          goto LABEL_137;
        }
        uint64_t v52 = v50;
        uint64_t v53 = v51;
        uint64_t v54 = *((void *)&__dst[8] + 1);
        uint64_t v55 = sub_1B2E82538();
        uint64_t v141 = v52;
        uint64_t v142 = v53;
        uint64_t v143 = v55;
        uint64_t v144 = v56;
        __int16 v145 = v49;
        if (*(void *)(v54 + 16) && (unint64_t v57 = sub_1B29DAEC8(), (v58 & 1) != 0))
        {
          uint64_t v59 = *(void *)(*(void *)(v54 + 56) + 8 * v57);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v59 + 16))
          {
            memcpy(v127, (const void *)(v59 + 32), sizeof(v127));
            uint64_t v61 = v127[12];
            uint64_t v60 = v127[13];
            uint64_t v62 = BYTE2(v127[16]);
            sub_1B29C5944((uint64_t)v127);
            swift_bridgeObjectRelease();
            switch(v62)
            {
              case 1:
                uint64_t v64 = 3826797;
                if ((v61 & 0x80000000000000) == 0) {
                  uint64_t v64 = 3828069;
                }
                v126[0] = v64;
                v126[1] = 0xE300000000000000;
                sub_1B2E83748();
                sub_1B2E82518();
                swift_bridgeObjectRelease();
                uint64_t v61 = v126[0];
                uint64_t v63 = v126[1];
                goto LABEL_70;
              case 4:
                goto LABEL_74;
              default:
                swift_bridgeObjectRetain();
                uint64_t v63 = v60;
LABEL_70:
                if (v61 == 0x44495F6D616441 && v63 == 0xE700000000000000)
                {
                  sub_1B29C5A88((uint64_t)v127);
                  swift_bridgeObjectRelease();
                }
                else
                {
LABEL_74:
                  char v66 = sub_1B2E837A8();
                  sub_1B29C5A88((uint64_t)v127);
                  swift_bridgeObjectRelease();
                  if ((v66 & 1) == 0)
                  {
LABEL_93:
                    if (BYTE2(__dst[3]) == 1 && *(void *)&__dst[1] == v2)
                    {
                      if (swift_isUniquelyReferenced_nonNull_native())
                      {
                        uint64_t v83 = v124;
                      }
                      else
                      {
                        sub_1B299DEE4();
                        uint64_t v83 = v88;
                      }
                      unint64_t v84 = *(void *)(v83 + 16);
                      if (v84 >= *(void *)(v83 + 24) >> 1)
                      {
                        sub_1B29B707C();
                        uint64_t v83 = v89;
                      }
                      *(void *)(v83 + 16) = v84 + 1;
                      uint64_t v124 = v83;
                      memcpy((void *)(v83 + 144 * v84 + 32), __dst, 0x90uLL);
                    }
                    else
                    {
                      sub_1B29C5A88((uint64_t)__dst);
                    }
                    goto LABEL_101;
                  }
                }
                if (!_Records_GDEntityPredicate_records) {
                  goto LABEL_138;
                }
                if (*((uint64_t *)_Records_GDEntityPredicate_records + 70) >= 2674) {
                  goto LABEL_129;
                }
                if (*((uint64_t *)_Records_GDEntityPredicate_records + 71) >= 3558) {
                  goto LABEL_130;
                }
                if (!_Records_GDEntityPredicate_predicateIds) {
                  goto LABEL_139;
                }
                __int16 v67 = _Records_GDEntityPredicate_records[276];
                uint64_t v68 = sub_1B2E82538();
                if (!_Records_GDEntityPredicate_labels) {
                  goto LABEL_140;
                }
                uint64_t v70 = v68;
                uint64_t v71 = v69;
                uint64_t v72 = sub_1B2E82538();
                v139[5] = v70;
                v139[6] = v71;
                v139[7] = v72;
                v139[8] = v73;
                __int16 v140 = v67;
                if (!*(void *)(v54 + 16)) {
                  goto LABEL_91;
                }
                unint64_t v74 = sub_1B29DAEC8();
                if ((v75 & 1) == 0) {
                  goto LABEL_91;
                }
                uint64_t v76 = *(void *)(*(void *)(v54 + 56) + 8 * v74);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v76 + 16))
                {
                  memcpy(v126, (const void *)(v76 + 32), sizeof(v126));
                  sub_1B29C5944((uint64_t)v126);
                  swift_bridgeObjectRelease();
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_1B299DEE4();
                    uint64_t v115 = v90;
                  }
                  unint64_t v77 = *(void *)(v115 + 16);
                  if (v77 >= *(void *)(v115 + 24) >> 1)
                  {
                    sub_1B29B707C();
                    uint64_t v115 = v91;
                  }
                  uint64_t v79 = v126[12];
                  unint64_t v78 = v126[13];
                  uint64_t v80 = BYTE2(v126[16]);
                  *(void *)(v115 + 16) = v77 + 1;
                  memcpy((void *)(v115 + 144 * v77 + 32), __dst, 0x90uLL);
                  unint64_t v81 = 0xE000000000000000;
                  uint64_t v82 = 0;
                  switch(v80)
                  {
                    case 1:
                      uint64_t v82 = EntityIdentifier.stringValue.getter();
                      unint64_t v81 = v85;
                      break;
                    case 4:
                      break;
                    default:
                      swift_bridgeObjectRetain();
                      uint64_t v82 = v79;
                      unint64_t v81 = v78;
                      break;
                  }
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_1B29B7048();
                    uint64_t v114 = v92;
                  }
                  unint64_t v86 = *(void *)(v114 + 16);
                  if (v86 >= *(void *)(v114 + 24) >> 1)
                  {
                    sub_1B29B7048();
                    uint64_t v114 = v93;
                  }
                  *(void *)(v114 + 16) = v86 + 1;
                  uint64_t v87 = v114 + 16 * v86;
                  *(void *)(v87 + 32) = v82;
                  *(void *)(v87 + 40) = v81;
                  sub_1B29C5A88((uint64_t)v126);
                  uint64_t v138 = v114;
LABEL_101:
                  if (!--v38) {
                    goto LABEL_112;
                  }
                  memcpy(__dst, &v21[v40], sizeof(__dst));
                  uint64_t v39 = _Records_GDEntityPredicate_records;
                  v40 += 18;
                  if (!_Records_GDEntityPredicate_records) {
                    goto LABEL_132;
                  }
                  continue;
                }
                break;
            }
          }
        }
        else
        {
LABEL_91:
          swift_bridgeObjectRelease();
        }
        break;
      }
      swift_bridgeObjectRelease();
      goto LABEL_93;
    }
    uint64_t v94 = v10;
LABEL_116:
    sub_1B2CBC150(v94);
    swift_bridgeObjectRelease();
    if (*(void *)(v10 + 16))
    {
      unint64_t v95 = MEMORY[0x1E4FBC860];
      uint64_t v96 = sub_1B2E82148();
      memset(__dst, 0, 34);
      BYTE2(__dst[2]) = 4;
      *(_OWORD *)((char *)&__dst[2] + 8) = 0u;
      *(_OWORD *)((char *)&__dst[3] + 8) = 0u;
      *((void *)&__dst[4] + 1) = v96;
      __dst[5] = v95;
      LOBYTE(__dst[6]) = 0;
      *((void *)&__dst[6] + 1) = v95;
      sub_1B2CBC150(v10);
      swift_bridgeObjectRelease();
      sub_1B29A3EB4(&qword_1E9C39F90);
      double result = swift_allocObject();
      __int16 v97 = __dst[2];
      char v98 = BYTE2(__dst[2]);
      long long v99 = __dst[0];
      long long v100 = __dst[1];
      *(_OWORD *)(result + 16) = xmmword_1B2EC00A0;
      *(_OWORD *)(result + 32) = v99;
      uint64_t v101 = *((void *)&__dst[5] + 1);
      char v102 = __dst[6];
      uint64_t v103 = *((void *)&__dst[6] + 1);
      *(_OWORD *)(result + 48) = v100;
      *(_WORD *)(result + 64) = v97;
      *(unsigned char *)(result + 66) = v98;
      *(_OWORD *)(result + 72) = *(_OWORD *)((char *)&__dst[2] + 8);
      *(_OWORD *)(result + 88) = *(_OWORD *)((char *)&__dst[3] + 8);
      *(_OWORD *)(result + 104) = *(_OWORD *)((char *)&__dst[4] + 8);
      *(void *)(result + 120) = v101;
      *(unsigned char *)(result + 128) = v102;
      *(void *)(result + 136) = v103;
    }
    else
    {
      swift_bridgeObjectRelease();
      double result = v135;
    }
    uint64_t v104 = v134;
    uint64_t v105 = v136;
    uint64_t v106 = v137;
    uint64_t v107 = v138;
    unint64_t v108 = v130 | ((unint64_t)v131 << 16);
    long long v109 = *(_OWORD *)&v129[16];
    *(_OWORD *)a2 = *(_OWORD *)v129;
    *(_OWORD *)(a2 + 16) = v109;
    *(void *)(a2 + 32) = v108;
    *(_OWORD *)(a2 + 40) = v132;
    *(_OWORD *)(a2 + 56) = v133;
    *(void *)(a2 + 72) = v104;
    *(void *)(a2 + 80) = result;
    *(void *)(a2 + 88) = v105;
    *(void *)(a2 + 96) = v106;
    *(void *)(a2 + 104) = v107;
  }
  else
  {
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t type metadata accessor for MusicEntityRenderer()
{
  return self;
}

uint64_t sub_1B2D56E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2D56168(a1, a2);
}

Swift::String __swiftcall Double.toString(decimalPlaces:)(Swift::Int decimalPlaces)
{
  uint64_t v2 = v1;
  sub_1B29A0E58();
  sub_1B2E83748();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B29A3EB4((uint64_t *)&unk_1E9C37D10);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBB3D0];
  *(_OWORD *)(v3 + 16) = xmmword_1B2EC00A0;
  uint64_t v5 = MEMORY[0x1E4FBB460];
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 32) = v2;
  uint64_t v6 = sub_1B2E823A8();
  unsigned __int16 v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = v6;
  uint64_t v10 = v8;
  result._object = v10;
  result._uint64_t countAndFlagsBits = v9;
  return result;
}

Swift::String __swiftcall Float.toString(decimalPlaces:)(Swift::Int decimalPlaces)
{
  int v2 = v1;
  sub_1B29A0E58();
  sub_1B2E83748();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B29A3EB4((uint64_t *)&unk_1E9C37D10);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBB470];
  *(_OWORD *)(v3 + 16) = xmmword_1B2EC00A0;
  uint64_t v5 = MEMORY[0x1E4FBB4D0];
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = v5;
  *(_DWORD *)(v3 + 32) = v2;
  uint64_t v6 = sub_1B2E823A8();
  unsigned __int16 v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = v6;
  uint64_t v10 = v8;
  result._object = v10;
  result._uint64_t countAndFlagsBits = v9;
  return result;
}

uint64_t static RuntimeNumericError.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (a1[2])
  {
    if (a2[2])
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        char v7 = sub_1B2E837A8();
        goto LABEL_17;
      }
LABEL_16:
      char v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5) {
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  char v7 = 0;
LABEL_17:
  sub_1B29EB518();
  sub_1B29EB518();
  sub_1B29EB530();
  sub_1B29EB530();
  return v7 & 1;
}

Swift::Float __swiftcall Float.sigmoid()()
{
  return 1.0 / (float)(expf(-v0) + 1.0);
}

void Array<A>.dotProduct(with:)()
{
  sub_1B2D57A04();
  if (v2)
  {
    sub_1B2D57524(v1, v0, MEMORY[0x1E4F168C8]);
  }
  else
  {
    sub_1B2E831F8();
    sub_1B2E82518();
    sub_1B29A31C8();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B29A214C();
    sub_1B29A31C8();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2D57998();
    uint64_t v3 = sub_1B299E4D4();
    sub_1B299DF04(v3, v4);
  }
}

void Array<A>.cosineSimilarity(with:)()
{
  __C[2] = *MEMORY[0x1E4F143B8];
  sub_1B2D57A04();
  if (v3)
  {
    uint64_t v4 = v2;
    uint64_t v5 = v1;
    LODWORD(__C[0]) = 2143289344;
    vDSP_svesq((const float *)(v2 + 32), 1, (float *)__C, v0);
    LODWORD(__C[0]) = 2143289344;
    vDSP_svesq((const float *)(v5 + 32), 1, (float *)__C, v0);
    sub_1B2D57524(v4, v5, MEMORY[0x1E4F168C8]);
  }
  else
  {
    __C[0] = 0;
    __C[1] = 0xE000000000000000;
    sub_1B2E831F8();
    sub_1B2E82518();
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B29A214C();
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2D57998();
    uint64_t v6 = sub_1B299E4D4();
    sub_1B299DF04(v6, v7);
  }
}

void Array<A>.euclideanDistance(with:)()
{
  sub_1B2D57A04();
  if (v2)
  {
    sqrtf(sub_1B2D57524(v1, v0, MEMORY[0x1E4F168B8]));
  }
  else
  {
    sub_1B2E831F8();
    sub_1B2E82518();
    sub_1B29A31C8();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B29A214C();
    sub_1B29A31C8();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2D57998();
    uint64_t v3 = sub_1B299E4D4();
    sub_1B299DF04(v3, v4);
  }
}

float sub_1B2D57524(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, float *))
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    __break(1u);
  }
  float v4 = NAN;
  a3(a1 + 32, 1, a2 + 32, 1, &v4);
  return v4;
}

uint64_t Array<A>.padding(totalSize:padValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = a1 - v5;
  if (a1 <= v5)
  {
    swift_bridgeObjectRetain();
    return v4;
  }
  if (a1 - v5 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a2;
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_4;
    }
  }
  sub_1B29B85C4();
  uint64_t v4 = v10;
LABEL_4:
  unint64_t v7 = *(void *)(v4 + 16);
  do
  {
    if (v7 >= *(void *)(v4 + 24) >> 1)
    {
      sub_1B29B85C4();
      uint64_t v4 = v8;
    }
    *(void *)(v4 + 16) = v7 + 1;
    *(void *)(v4 + 8 * v7++ + 32) = v3;
    --v6;
  }
  while (v6);
  return v4;
}

void Array<A>.to2D(numRows:numColumns:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 != (a1 * a2) >> 63)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v4 = a2;
  unint64_t v5 = *(void *)(a3 + 16);
  if (v5 != a1 * a2)
  {
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B2D57A14();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2D57A14();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2D57A14();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2D57998();
    sub_1B299E4D4();
    *(void *)uint64_t v18 = 0xD000000000000025;
    *(void *)(v18 + 8) = 0x80000001B2EA2060;
    *(unsigned char *)(v18 + 16) = 0;
    swift_willThrow();
    return;
  }
  if (a1 < 0) {
    goto LABEL_27;
  }
  if (a1)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1B29C158C();
    if (v4 < 0)
    {
LABEL_28:
      __break(1u);
      return;
    }
    unint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = v24;
    uint64_t v9 = a1;
    uint64_t v10 = MEMORY[0x1E4FBC860];
    uint64_t v19 = v4;
    while (v7 != v9)
    {
      if (v4)
      {
        unint64_t v21 = v6;
        uint64_t v22 = v8;
        uint64_t v23 = v10;
        sub_1B29C0530();
        if ((unsigned __int128)(v7 * (__int128)v4) >> 64 != (v7 * v4) >> 63) {
          goto LABEL_25;
        }
        uint64_t v8 = v22;
        uint64_t v11 = v23;
        uint64_t v12 = v4;
        uint64_t v9 = a1;
        unint64_t v6 = v21;
        unint64_t v13 = v21;
        uint64_t v10 = MEMORY[0x1E4FBC860];
        while (v13 < v5)
        {
          int v14 = *(_DWORD *)(a3 + 32 + 4 * v13);
          unint64_t v15 = *(void *)(v23 + 16);
          if (v15 >= *(void *)(v23 + 24) >> 1)
          {
            sub_1B29C0530();
            unint64_t v6 = v21;
            uint64_t v8 = v22;
            uint64_t v10 = MEMORY[0x1E4FBC860];
            uint64_t v9 = a1;
          }
          *(void *)(v23 + 16) = v15 + 1;
          *(_DWORD *)(v23 + 4 * v15 + 32) = v14;
          ++v13;
          if (!--v12)
          {
            uint64_t v4 = v19;
            goto LABEL_17;
          }
        }
        __break(1u);
        break;
      }
      uint64_t v11 = v10;
LABEL_17:
      uint64_t v25 = v8;
      unint64_t v16 = *(void *)(v8 + 16);
      if (v16 >= *(void *)(v8 + 24) >> 1)
      {
        unint64_t v17 = v6;
        sub_1B29C158C();
        unint64_t v6 = v17;
        uint64_t v10 = MEMORY[0x1E4FBC860];
        uint64_t v9 = a1;
        uint64_t v8 = v25;
      }
      ++v7;
      *(void *)(v8 + 16) = v16 + 1;
      *(void *)(v8 + 8 * v16 + 32) = v11;
      v6 += v4;
      if (v7 == v9) {
        return;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
}

unint64_t sub_1B2D57998()
{
  unint64_t result = qword_1E9C434C8;
  if (!qword_1E9C434C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C434C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for RuntimeNumericError()
{
  return &type metadata for RuntimeNumericError;
}

ValueMetadata *type metadata accessor for VectorSimilarity()
{
  return &type metadata for VectorSimilarity;
}

uint64_t sub_1B2D57A14()
{
  return sub_1B2E83748();
}

unint64_t ObjectSynthesisDictionaryMapping.init()@<X0>(void *a1@<X8>)
{
  sub_1B29A3EB4(&qword_1EB7E2C60);
  unint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B2EEB5D0;
  if (!_Records_GDEntityClass_records) {
    goto LABEL_395;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x380) >= 1336)
  {
    __break(1u);
LABEL_348:
    __break(1u);
    __break(1u);
LABEL_350:
    __break(1u);
    __break(1u);
LABEL_352:
    __break(1u);
LABEL_353:
    __break(1u);
LABEL_354:
    __break(1u);
LABEL_355:
    __break(1u);
LABEL_356:
    __break(1u);
LABEL_357:
    __break(1u);
LABEL_358:
    __break(1u);
LABEL_359:
    __break(1u);
LABEL_360:
    __break(1u);
LABEL_361:
    __break(1u);
LABEL_362:
    __break(1u);
LABEL_363:
    __break(1u);
LABEL_364:
    __break(1u);
LABEL_365:
    __break(1u);
LABEL_366:
    __break(1u);
LABEL_367:
    __break(1u);
LABEL_368:
    __break(1u);
LABEL_369:
    __break(1u);
LABEL_370:
    __break(1u);
LABEL_371:
    __break(1u);
LABEL_372:
    __break(1u);
LABEL_373:
    __break(1u);
LABEL_374:
    __break(1u);
LABEL_375:
    __break(1u);
LABEL_376:
    __break(1u);
LABEL_377:
    __break(1u);
LABEL_378:
    __break(1u);
LABEL_379:
    __break(1u);
LABEL_380:
    __break(1u);
    __break(1u);
LABEL_382:
    __break(1u);
    __break(1u);
LABEL_384:
    __break(1u);
LABEL_385:
    __break(1u);
LABEL_386:
    __break(1u);
LABEL_387:
    __break(1u);
LABEL_388:
    __break(1u);
LABEL_389:
    __break(1u);
LABEL_390:
    __break(1u);
LABEL_391:
    __break(1u);
LABEL_392:
    __break(1u);
LABEL_393:
    __break(1u);
LABEL_394:
    __break(1u);
LABEL_395:
    __break(1u);
    goto LABEL_396;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x388) >= 2889) {
    goto LABEL_348;
  }
  uint64_t v217 = a1;
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_396:
    __break(1u);
    goto LABEL_397;
  }
  unint64_t v3 = result;
  char v4 = *(unsigned char *)(_Records_GDEntityClass_records + 0x378);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_397:
    __break(1u);
LABEL_398:
    __break(1u);
    goto LABEL_399;
  }
  unint64_t v6 = result;
  uint64_t v7 = v5;
  uint64_t v8 = sub_1B2E82538();
  *(void *)(v3 + 32) = v6;
  *(void *)(v3 + 40) = v7;
  *(void *)(v3 + 48) = v8;
  *(void *)(v3 + 56) = v9;
  *(unsigned char *)(v3 + 64) = v4;
  uint64_t v10 = type metadata accessor for CustomGraphEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D8BB0, (void (*)(uint64_t))type metadata accessor for CustomGraphEvent);
  *(void *)(v3 + 72) = v10;
  *(void *)(v3 + 80) = result;
  if (!_Records_GDEntityClass_records) {
    goto LABEL_398;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x518) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x520) >= 2889)
  {
    goto LABEL_350;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_399:
    __break(1u);
    goto LABEL_400;
  }
  char v12 = *(unsigned char *)(_Records_GDEntityClass_records + 0x510);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_400:
    __break(1u);
LABEL_401:
    __break(1u);
    goto LABEL_402;
  }
  uint64_t v13 = sub_1B299DF24();
  *(void *)(v3 + 88) = v10;
  *(void *)(v3 + 96) = v7;
  *(void *)(v3 + 104) = v13;
  *(void *)(v3 + 112) = v14;
  *(unsigned char *)(v3 + 120) = v12;
  uint64_t v15 = type metadata accessor for CustomGraphActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D8E10, (void (*)(uint64_t))type metadata accessor for CustomGraphActivityEvent);
  *(void *)(v3 + 128) = v15;
  *(void *)(v3 + 136) = result;
  if (!_Records_GDEntityClass_records) {
    goto LABEL_401;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xC80) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0xC88) >= 2889)
  {
    goto LABEL_352;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_402:
    __break(1u);
    goto LABEL_403;
  }
  char v17 = *(unsigned char *)(_Records_GDEntityClass_records + 0xC78);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_403:
    __break(1u);
    goto LABEL_404;
  }
  uint64_t v18 = sub_1B299DF24();
  *(void *)(v3 + 144) = v15;
  *(void *)(v3 + 152) = v7;
  *(void *)(v3 + 160) = v18;
  *(void *)(v3 + 168) = v19;
  *(unsigned char *)(v3 + 176) = v17;
  uint64_t v20 = type metadata accessor for CustomGraphSportsGameEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D8EC0, (void (*)(uint64_t))type metadata accessor for CustomGraphSportsGameEvent);
  *(void *)(v3 + 184) = v20;
  *(void *)(v3 + 192) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_404:
    __break(1u);
    goto LABEL_405;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x698) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x6A0) >= 2889)
  {
    goto LABEL_353;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_405:
    __break(1u);
    goto LABEL_406;
  }
  char v22 = *(unsigned char *)(_Records_GDEntityClass_records + 0x690);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_406:
    __break(1u);
    goto LABEL_407;
  }
  uint64_t v23 = sub_1B299DF24();
  *(void *)(v3 + 200) = v20;
  *(void *)(v3 + 208) = v7;
  *(void *)(v3 + 216) = v23;
  *(void *)(v3 + 224) = v24;
  *(unsigned char *)(v3 + 232) = v22;
  uint64_t v25 = type metadata accessor for CustomGraphTransportationActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9390, (void (*)(uint64_t))type metadata accessor for CustomGraphTransportationActivityEvent);
  *(void *)(v3 + 240) = v25;
  *(void *)(v3 + 248) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_407:
    __break(1u);
    goto LABEL_408;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x6B0) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x6B8) >= 2889)
  {
    goto LABEL_354;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_408:
    __break(1u);
    goto LABEL_409;
  }
  char v27 = *(unsigned char *)(_Records_GDEntityClass_records + 0x6A8);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_409:
    __break(1u);
    goto LABEL_410;
  }
  uint64_t v28 = sub_1B299DF24();
  *(void *)(v3 + 256) = v25;
  *(void *)(v3 + 264) = v7;
  *(void *)(v3 + 272) = v28;
  *(void *)(v3 + 280) = v29;
  *(unsigned char *)(v3 + 288) = v27;
  uint64_t v30 = type metadata accessor for CustomGraphWorkingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D90F8, (void (*)(uint64_t))type metadata accessor for CustomGraphWorkingActivityEvent);
  *(void *)(v3 + 296) = v30;
  *(void *)(v3 + 304) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_410:
    __break(1u);
    goto LABEL_411;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x6C8) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x6D0) >= 2889)
  {
    goto LABEL_355;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_411:
    __break(1u);
    goto LABEL_412;
  }
  char v32 = *(unsigned char *)(_Records_GDEntityClass_records + 0x6C0);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_412:
    __break(1u);
    goto LABEL_413;
  }
  uint64_t v33 = sub_1B299DF24();
  *(void *)(v3 + 312) = v30;
  *(void *)(v3 + 320) = v7;
  *(void *)(v3 + 328) = v33;
  *(void *)(v3 + 336) = v34;
  *(unsigned char *)(v3 + 344) = v32;
  uint64_t v35 = type metadata accessor for CustomGraphMeetingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9060, (void (*)(uint64_t))type metadata accessor for CustomGraphMeetingActivityEvent);
  *(void *)(v3 + 352) = v35;
  *(void *)(v3 + 360) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_413:
    __break(1u);
    goto LABEL_414;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x6E0) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x6E8) >= 2889)
  {
    goto LABEL_356;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_414:
    __break(1u);
    goto LABEL_415;
  }
  char v37 = *(unsigned char *)(_Records_GDEntityClass_records + 0x6D8);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_415:
    __break(1u);
    goto LABEL_416;
  }
  uint64_t v38 = sub_1B299DF24();
  *(void *)(v3 + 368) = v35;
  *(void *)(v3 + 376) = v7;
  *(void *)(v3 + 384) = v38;
  *(void *)(v3 + 392) = v39;
  *(unsigned char *)(v3 + 400) = v37;
  uint64_t v40 = type metadata accessor for CustomGraphEatingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D8FA8, (void (*)(uint64_t))type metadata accessor for CustomGraphEatingActivityEvent);
  *(void *)(v3 + 408) = v40;
  *(void *)(v3 + 416) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_416:
    __break(1u);
    goto LABEL_417;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x6F8) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x700) >= 2889)
  {
    goto LABEL_357;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_417:
    __break(1u);
    goto LABEL_418;
  }
  char v42 = *(unsigned char *)(_Records_GDEntityClass_records + 0x6F0);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_418:
    __break(1u);
    goto LABEL_419;
  }
  uint64_t v43 = sub_1B299DF24();
  *(void *)(v3 + 424) = v40;
  *(void *)(v3 + 432) = v7;
  *(void *)(v3 + 440) = v43;
  *(void *)(v3 + 448) = v44;
  *(unsigned char *)(v3 + 456) = v42;
  uint64_t v45 = type metadata accessor for CustomGraphWatchingTVActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D92B0, (void (*)(uint64_t))type metadata accessor for CustomGraphWatchingTVActivityEvent);
  *(void *)(v3 + 464) = v45;
  *(void *)(v3 + 472) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_419:
    __break(1u);
    goto LABEL_420;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x710) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x718) >= 2889)
  {
    goto LABEL_358;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_420:
    __break(1u);
    goto LABEL_421;
  }
  char v47 = *(unsigned char *)(_Records_GDEntityClass_records + 0x708);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_421:
    __break(1u);
    goto LABEL_422;
  }
  uint64_t v48 = sub_1B299DF24();
  *(void *)(v3 + 480) = v45;
  *(void *)(v3 + 488) = v7;
  *(void *)(v3 + 496) = v48;
  *(void *)(v3 + 504) = v49;
  *(unsigned char *)(v3 + 512) = v47;
  uint64_t v50 = type metadata accessor for CustomGraphCommunicatingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9348, (void (*)(uint64_t))type metadata accessor for CustomGraphCommunicatingActivityEvent);
  *(void *)(v3 + 520) = v50;
  *(void *)(v3 + 528) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_422:
    __break(1u);
    goto LABEL_423;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x728) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x730) >= 2889)
  {
    goto LABEL_359;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_423:
    __break(1u);
    goto LABEL_424;
  }
  char v52 = *(unsigned char *)(_Records_GDEntityClass_records + 0x720);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_424:
    __break(1u);
    goto LABEL_425;
  }
  uint64_t v53 = sub_1B299DF24();
  *(void *)(v3 + 536) = v50;
  *(void *)(v3 + 544) = v7;
  *(void *)(v3 + 552) = v53;
  *(void *)(v3 + 560) = v54;
  *(unsigned char *)(v3 + 568) = v52;
  uint64_t v55 = type metadata accessor for CustomGraphShoppingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9160, (void (*)(uint64_t))type metadata accessor for CustomGraphShoppingActivityEvent);
  *(void *)(v3 + 576) = v55;
  *(void *)(v3 + 584) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_425:
    __break(1u);
    goto LABEL_426;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x818) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x820) >= 2889)
  {
    goto LABEL_360;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_426:
    __break(1u);
    goto LABEL_427;
  }
  char v57 = *(unsigned char *)(_Records_GDEntityClass_records + 0x810);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_427:
    __break(1u);
    goto LABEL_428;
  }
  uint64_t v58 = sub_1B299DF24();
  *(void *)(v3 + 592) = v55;
  *(void *)(v3 + 600) = v7;
  *(void *)(v3 + 608) = v58;
  *(void *)(v3 + 616) = v59;
  *(unsigned char *)(v3 + 624) = v57;
  uint64_t v60 = type metadata accessor for CustomGraphMindfulnessActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D92D8, (void (*)(uint64_t))type metadata accessor for CustomGraphMindfulnessActivityEvent);
  *(void *)(v3 + 632) = v60;
  *(void *)(v3 + 640) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_428:
    __break(1u);
    goto LABEL_429;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x7E8) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x7F0) >= 2889)
  {
    goto LABEL_361;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_429:
    __break(1u);
    goto LABEL_430;
  }
  char v62 = *(unsigned char *)(_Records_GDEntityClass_records + 0x7E0);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_430:
    __break(1u);
    goto LABEL_431;
  }
  uint64_t v63 = sub_1B299DF24();
  *(void *)(v3 + 648) = v60;
  *(void *)(v3 + 656) = v7;
  *(void *)(v3 + 664) = v63;
  *(void *)(v3 + 672) = v64;
  *(unsigned char *)(v3 + 680) = v62;
  uint64_t v65 = type metadata accessor for CustomGraphSleepingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9180, (void (*)(uint64_t))type metadata accessor for CustomGraphSleepingActivityEvent);
  *(void *)(v3 + 688) = v65;
  *(void *)(v3 + 696) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_431:
    __break(1u);
    goto LABEL_432;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x740) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x748) >= 2889)
  {
    goto LABEL_362;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_432:
    __break(1u);
    goto LABEL_433;
  }
  char v67 = *(unsigned char *)(_Records_GDEntityClass_records + 0x738);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_433:
    __break(1u);
    goto LABEL_434;
  }
  uint64_t v68 = sub_1B299DF24();
  *(void *)(v3 + 704) = v65;
  *(void *)(v3 + 712) = v7;
  *(void *)(v3 + 720) = v68;
  *(void *)(v3 + 728) = v69;
  *(unsigned char *)(v3 + 736) = v67;
  uint64_t v70 = type metadata accessor for CustomGraphTravelingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D91F8, (void (*)(uint64_t))type metadata accessor for CustomGraphTravelingActivityEvent);
  *(void *)(v3 + 744) = v70;
  *(void *)(v3 + 752) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_434:
    __break(1u);
    goto LABEL_435;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x758) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x760) >= 2889)
  {
    goto LABEL_363;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_435:
    __break(1u);
    goto LABEL_436;
  }
  char v72 = *(unsigned char *)(_Records_GDEntityClass_records + 0x750);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_436:
    __break(1u);
    goto LABEL_437;
  }
  uint64_t v73 = sub_1B299DF24();
  *(void *)(v3 + 760) = v70;
  *(void *)(v3 + 768) = v7;
  *(void *)(v3 + 776) = v73;
  *(void *)(v3 + 784) = v74;
  *(unsigned char *)(v3 + 792) = v72;
  uint64_t v75 = type metadata accessor for CustomGraphReadingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9090, (void (*)(uint64_t))type metadata accessor for CustomGraphReadingActivityEvent);
  *(void *)(v3 + 800) = v75;
  *(void *)(v3 + 808) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_437:
    __break(1u);
    goto LABEL_438;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x770) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x778) >= 2889)
  {
    goto LABEL_364;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_438:
    __break(1u);
    goto LABEL_439;
  }
  char v77 = *(unsigned char *)(_Records_GDEntityClass_records + 0x768);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_439:
    __break(1u);
    goto LABEL_440;
  }
  uint64_t v78 = sub_1B299DF24();
  *(void *)(v3 + 816) = v75;
  *(void *)(v3 + 824) = v7;
  *(void *)(v3 + 832) = v78;
  *(void *)(v3 + 840) = v79;
  *(unsigned char *)(v3 + 848) = v77;
  uint64_t v80 = type metadata accessor for CustomGraphVacationingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9328, (void (*)(uint64_t))type metadata accessor for CustomGraphVacationingActivityEvent);
  *(void *)(v3 + 856) = v80;
  *(void *)(v3 + 864) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_440:
    __break(1u);
    goto LABEL_441;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x788) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x790) >= 2889)
  {
    goto LABEL_365;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_441:
    __break(1u);
    goto LABEL_442;
  }
  char v82 = *(unsigned char *)(_Records_GDEntityClass_records + 0x780);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_442:
    __break(1u);
    goto LABEL_443;
  }
  uint64_t v83 = sub_1B299DF24();
  *(void *)(v3 + 872) = v80;
  *(void *)(v3 + 880) = v7;
  *(void *)(v3 + 888) = v83;
  *(void *)(v3 + 896) = v84;
  *(unsigned char *)(v3 + 904) = v82;
  uint64_t v85 = type metadata accessor for CustomGraphGamingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D8FC8, (void (*)(uint64_t))type metadata accessor for CustomGraphGamingActivityEvent);
  *(void *)(v3 + 912) = v85;
  *(void *)(v3 + 920) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_443:
    __break(1u);
    goto LABEL_444;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x7A0) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x7A8) >= 2889)
  {
    goto LABEL_366;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_444:
    __break(1u);
    goto LABEL_445;
  }
  char v87 = *(unsigned char *)(_Records_GDEntityClass_records + 0x798);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_445:
    __break(1u);
    goto LABEL_446;
  }
  uint64_t v88 = sub_1B299DF24();
  *(void *)(v3 + 928) = v85;
  *(void *)(v3 + 936) = v7;
  *(void *)(v3 + 944) = v88;
  *(void *)(v3 + 952) = v89;
  *(unsigned char *)(v3 + 960) = v87;
  uint64_t v90 = type metadata accessor for CustomGraphSocializingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9300, (void (*)(uint64_t))type metadata accessor for CustomGraphSocializingActivityEvent);
  *(void *)(v3 + 968) = v90;
  *(void *)(v3 + 976) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_446:
    __break(1u);
    goto LABEL_447;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x7B8) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x7C0) >= 2889)
  {
    goto LABEL_367;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_447:
    __break(1u);
    goto LABEL_448;
  }
  char v92 = *(unsigned char *)(_Records_GDEntityClass_records + 0x7B0);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_448:
    __break(1u);
    goto LABEL_449;
  }
  uint64_t v93 = sub_1B299DF24();
  *(void *)(v3 + 984) = v90;
  *(void *)(v3 + 992) = v7;
  *(void *)(v3 + 1000) = v93;
  *(void *)(v3 + 1008) = v94;
  *(unsigned char *)(v3 + 1016) = v92;
  uint64_t v95 = type metadata accessor for CustomGraphWakingUpActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D91A8, (void (*)(uint64_t))type metadata accessor for CustomGraphWakingUpActivityEvent);
  *(void *)(v3 + 1024) = v95;
  *(void *)(v3 + 1032) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_449:
    __break(1u);
    goto LABEL_450;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x7D0) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x7D8) >= 2889)
  {
    goto LABEL_368;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_450:
    __break(1u);
    goto LABEL_451;
  }
  char v97 = *(unsigned char *)(_Records_GDEntityClass_records + 0x7C8);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_451:
    __break(1u);
    goto LABEL_452;
  }
  uint64_t v98 = sub_1B299DF24();
  *(void *)(v3 + 1040) = v95;
  *(void *)(v3 + 1048) = v7;
  *(void *)(v3 + 1056) = v98;
  *(void *)(v3 + 1064) = v99;
  *(unsigned char *)(v3 + 1072) = v97;
  uint64_t v100 = type metadata accessor for CustomGraphGoingToBedActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9240, (void (*)(uint64_t))type metadata accessor for CustomGraphGoingToBedActivityEvent);
  *(void *)(v3 + 1080) = v100;
  *(void *)(v3 + 1088) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_452:
    __break(1u);
    goto LABEL_453;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x800) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x808) >= 2889)
  {
    goto LABEL_369;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_453:
    __break(1u);
    goto LABEL_454;
  }
  char v102 = *(unsigned char *)(_Records_GDEntityClass_records + 0x7F8);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_454:
    __break(1u);
    goto LABEL_455;
  }
  uint64_t v103 = sub_1B299DF24();
  *(void *)(v3 + 1096) = v100;
  *(void *)(v3 + 1104) = v7;
  *(void *)(v3 + 1112) = v103;
  *(void *)(v3 + 1120) = v104;
  *(unsigned char *)(v3 + 1128) = v102;
  uint64_t v105 = type metadata accessor for CustomGraphExercisingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9218, (void (*)(uint64_t))type metadata accessor for CustomGraphExercisingActivityEvent);
  *(void *)(v3 + 1136) = v105;
  *(void *)(v3 + 1144) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_455:
    __break(1u);
    goto LABEL_456;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xB30) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0xB38) >= 2889)
  {
    goto LABEL_370;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_456:
    __break(1u);
    goto LABEL_457;
  }
  char v107 = *(unsigned char *)(_Records_GDEntityClass_records + 0xB28);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_457:
    __break(1u);
    goto LABEL_458;
  }
  uint64_t v108 = sub_1B299DF24();
  *(void *)(v3 + 1152) = v105;
  *(void *)(v3 + 1160) = v7;
  *(void *)(v3 + 1168) = v108;
  *(void *)(v3 + 1176) = v109;
  *(unsigned char *)(v3 + 1184) = v107;
  uint64_t v110 = type metadata accessor for CustomGraphCommuteActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9010, (void (*)(uint64_t))type metadata accessor for CustomGraphCommuteActivityEvent);
  *(void *)(v3 + 1192) = v110;
  *(void *)(v3 + 1200) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_458:
    __break(1u);
    goto LABEL_459;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xB48) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0xB50) >= 2889)
  {
    goto LABEL_371;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_459:
    __break(1u);
    goto LABEL_460;
  }
  char v112 = *(unsigned char *)(_Records_GDEntityClass_records + 0xB40);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_460:
    __break(1u);
    goto LABEL_461;
  }
  uint64_t v113 = sub_1B299DF24();
  *(void *)(v3 + 1208) = v110;
  *(void *)(v3 + 1216) = v7;
  *(void *)(v3 + 1224) = v113;
  *(void *)(v3 + 1232) = v114;
  *(unsigned char *)(v3 + 1240) = v112;
  uint64_t v115 = type metadata accessor for CustomGraphDiningActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D8F80, (void (*)(uint64_t))type metadata accessor for CustomGraphDiningActivityEvent);
  *(void *)(v3 + 1248) = v115;
  *(void *)(v3 + 1256) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_461:
    __break(1u);
    goto LABEL_462;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xB60) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0xB68) >= 2889)
  {
    goto LABEL_372;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_462:
    __break(1u);
    goto LABEL_463;
  }
  char v117 = *(unsigned char *)(_Records_GDEntityClass_records + 0xB58);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_463:
    __break(1u);
    goto LABEL_464;
  }
  uint64_t v118 = sub_1B299DF24();
  *(void *)(v3 + 1264) = v115;
  *(void *)(v3 + 1272) = v7;
  *(void *)(v3 + 1280) = v118;
  *(void *)(v3 + 1288) = v119;
  *(unsigned char *)(v3 + 1296) = v117;
  uint64_t v120 = type metadata accessor for CustomGraphAttendingAPerformanceActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D93B0, (void (*)(uint64_t))type metadata accessor for CustomGraphAttendingAPerformanceActivityEvent);
  *(void *)(v3 + 1304) = v120;
  *(void *)(v3 + 1312) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_464:
    __break(1u);
    goto LABEL_465;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xB78) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0xB80) >= 2889)
  {
    goto LABEL_373;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_465:
    __break(1u);
    goto LABEL_466;
  }
  char v122 = *(unsigned char *)(_Records_GDEntityClass_records + 0xB70);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_466:
    __break(1u);
    goto LABEL_467;
  }
  uint64_t v123 = sub_1B299DF24();
  *(void *)(v3 + 1320) = v120;
  *(void *)(v3 + 1328) = v7;
  *(void *)(v3 + 1336) = v123;
  *(void *)(v3 + 1344) = v124;
  *(unsigned char *)(v3 + 1352) = v122;
  uint64_t v125 = type metadata accessor for CustomGraphStationaryActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9288, (void (*)(uint64_t))type metadata accessor for CustomGraphStationaryActivityEvent);
  *(void *)(v3 + 1360) = v125;
  *(void *)(v3 + 1368) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_467:
    __break(1u);
    goto LABEL_468;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xBF0) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0xBF8) >= 2889)
  {
    goto LABEL_374;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_468:
    __break(1u);
    goto LABEL_469;
  }
  char v127 = *(unsigned char *)(_Records_GDEntityClass_records + 0xBE8);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_469:
    __break(1u);
    goto LABEL_470;
  }
  uint64_t v128 = sub_1B299DF24();
  *(void *)(v3 + 1376) = v125;
  *(void *)(v3 + 1384) = v7;
  *(void *)(v3 + 1392) = v128;
  *(void *)(v3 + 1400) = v129;
  *(unsigned char *)(v3 + 1408) = v127;
  uint64_t v130 = type metadata accessor for CustomGraphLocationVisitActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9368, (void (*)(uint64_t))type metadata accessor for CustomGraphLocationVisitActivityEvent);
  *(void *)(v3 + 1416) = v130;
  *(void *)(v3 + 1424) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_470:
    __break(1u);
    goto LABEL_471;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x860) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x868) >= 2889)
  {
    goto LABEL_375;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_471:
    __break(1u);
    goto LABEL_472;
  }
  char v132 = *(unsigned char *)(_Records_GDEntityClass_records + 0x858);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_472:
    __break(1u);
    goto LABEL_473;
  }
  uint64_t v133 = sub_1B299DF24();
  *(void *)(v3 + 1432) = v130;
  *(void *)(v3 + 1440) = v7;
  *(void *)(v3 + 1448) = v133;
  *(void *)(v3 + 1456) = v134;
  *(unsigned char *)(v3 + 1464) = v132;
  uint64_t v135 = type metadata accessor for CustomGraphWalkingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D90D8, (void (*)(uint64_t))type metadata accessor for CustomGraphWalkingActivityEvent);
  *(void *)(v3 + 1472) = v135;
  *(void *)(v3 + 1480) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_473:
    __break(1u);
    goto LABEL_474;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x878) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x880) >= 2889)
  {
    goto LABEL_376;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_474:
    __break(1u);
    goto LABEL_475;
  }
  char v137 = *(unsigned char *)(_Records_GDEntityClass_records + 0x870);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_475:
    __break(1u);
    goto LABEL_476;
  }
  uint64_t v138 = sub_1B299DF24();
  *(void *)(v3 + 1488) = v135;
  *(void *)(v3 + 1496) = v7;
  *(void *)(v3 + 1504) = v138;
  *(void *)(v3 + 1512) = v139;
  *(unsigned char *)(v3 + 1520) = v137;
  uint64_t v140 = type metadata accessor for CustomGraphRunningActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D90B0, (void (*)(uint64_t))type metadata accessor for CustomGraphRunningActivityEvent);
  *(void *)(v3 + 1528) = v140;
  *(void *)(v3 + 1536) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_476:
    __break(1u);
    goto LABEL_477;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x890) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x898) >= 2889)
  {
    goto LABEL_377;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_477:
    __break(1u);
    goto LABEL_478;
  }
  char v142 = *(unsigned char *)(_Records_GDEntityClass_records + 0x888);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_478:
    __break(1u);
    goto LABEL_479;
  }
  uint64_t v143 = sub_1B299DF24();
  *(void *)(v3 + 1544) = v140;
  *(void *)(v3 + 1552) = v7;
  *(void *)(v3 + 1560) = v143;
  *(void *)(v3 + 1568) = v144;
  *(unsigned char *)(v3 + 1576) = v142;
  uint64_t v145 = type metadata accessor for CustomGraphBicyclingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D91D8, (void (*)(uint64_t))type metadata accessor for CustomGraphBicyclingActivityEvent);
  *(void *)(v3 + 1584) = v145;
  *(void *)(v3 + 1592) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_479:
    __break(1u);
    goto LABEL_480;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x8A8) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x8B0) >= 2889)
  {
    goto LABEL_378;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_480:
    __break(1u);
    goto LABEL_481;
  }
  char v147 = *(unsigned char *)(_Records_GDEntityClass_records + 0x8A0);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_481:
    __break(1u);
    goto LABEL_482;
  }
  uint64_t v148 = sub_1B299DF24();
  *(void *)(v3 + 1600) = v145;
  *(void *)(v3 + 1608) = v7;
  *(void *)(v3 + 1616) = v148;
  *(void *)(v3 + 1624) = v149;
  *(unsigned char *)(v3 + 1632) = v147;
  uint64_t v150 = type metadata accessor for CustomGraphHikingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D8FF0, (void (*)(uint64_t))type metadata accessor for CustomGraphHikingActivityEvent);
  *(void *)(v3 + 1640) = v150;
  *(void *)(v3 + 1648) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_482:
    __break(1u);
    goto LABEL_483;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x830) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x838) >= 2889)
  {
    goto LABEL_379;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_483:
    __break(1u);
    goto LABEL_484;
  }
  char v152 = *(unsigned char *)(_Records_GDEntityClass_records + 0x828);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_484:
    __break(1u);
    goto LABEL_485;
  }
  uint64_t v153 = sub_1B299DF24();
  *(void *)(v3 + 1656) = v150;
  *(void *)(v3 + 1664) = v7;
  *(void *)(v3 + 1672) = v153;
  *(void *)(v3 + 1680) = v154;
  *(unsigned char *)(v3 + 1688) = v152;
  uint64_t v155 = type metadata accessor for CustomGraphOnThePhoneActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9268, (void (*)(uint64_t))type metadata accessor for CustomGraphOnThePhoneActivityEvent);
  *(void *)(v3 + 1696) = v155;
  *(void *)(v3 + 1704) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_485:
    __break(1u);
    goto LABEL_486;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x848) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x850) >= 2889)
  {
    goto LABEL_380;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_486:
    __break(1u);
    goto LABEL_487;
  }
  char v157 = *(unsigned char *)(_Records_GDEntityClass_records + 0x840);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_487:
    __break(1u);
LABEL_488:
    __break(1u);
    goto LABEL_489;
  }
  uint64_t v158 = sub_1B299DF24();
  *(void *)(v3 + 1712) = v155;
  *(void *)(v3 + 1720) = v7;
  *(void *)(v3 + 1728) = v158;
  *(void *)(v3 + 1736) = v159;
  *(unsigned char *)(v3 + 1744) = v157;
  uint64_t v160 = type metadata accessor for CustomGraphFacetimeActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9140, (void (*)(uint64_t))type metadata accessor for CustomGraphFacetimeActivityEvent);
  *(void *)(v3 + 1752) = v160;
  *(void *)(v3 + 1760) = result;
  if (!_Records_GDEntityClass_records) {
    goto LABEL_488;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xCB0) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0xCB8) >= 2889)
  {
    goto LABEL_382;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_489:
    __break(1u);
    goto LABEL_490;
  }
  char v162 = *(unsigned char *)(_Records_GDEntityClass_records + 0xCA8);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_490:
    __break(1u);
LABEL_491:
    __break(1u);
    goto LABEL_492;
  }
  uint64_t v163 = sub_1B299DF24();
  *(void *)(v3 + 1768) = v160;
  *(void *)(v3 + 1776) = v7;
  *(void *)(v3 + 1784) = v163;
  *(void *)(v3 + 1792) = v164;
  *(unsigned char *)(v3 + 1800) = v162;
  uint64_t v165 = type metadata accessor for CustomGraphDrivingActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9038, (void (*)(uint64_t))type metadata accessor for CustomGraphDrivingActivityEvent);
  *(void *)(v3 + 1808) = v165;
  *(void *)(v3 + 1816) = result;
  if (!_Records_GDEntityClass_records) {
    goto LABEL_491;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xCE0) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0xCE8) >= 2889)
  {
    goto LABEL_384;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_492:
    __break(1u);
    goto LABEL_493;
  }
  char v167 = *(unsigned char *)(_Records_GDEntityClass_records + 0xCD8);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_493:
    __break(1u);
    goto LABEL_494;
  }
  uint64_t v168 = sub_1B299DF24();
  *(void *)(v3 + 1824) = v165;
  *(void *)(v3 + 1832) = v7;
  *(void *)(v3 + 1840) = v168;
  *(void *)(v3 + 1848) = v169;
  *(unsigned char *)(v3 + 1856) = v167;
  uint64_t v170 = type metadata accessor for CustomGraphBehaviorActivityEvent(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D9120, (void (*)(uint64_t))type metadata accessor for CustomGraphBehaviorActivityEvent);
  *(void *)(v3 + 1864) = v170;
  *(void *)(v3 + 1872) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_494:
    __break(1u);
    goto LABEL_495;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x428) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x430) >= 2889)
  {
    goto LABEL_385;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_495:
    __break(1u);
    goto LABEL_496;
  }
  char v172 = *(unsigned char *)(_Records_GDEntityClass_records + 0x420);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_496:
    __break(1u);
    goto LABEL_497;
  }
  uint64_t v173 = sub_1B299DF24();
  *(void *)(v3 + 1880) = v170;
  *(void *)(v3 + 1888) = v7;
  *(void *)(v3 + 1896) = v173;
  *(void *)(v3 + 1904) = v174;
  *(unsigned char *)(v3 + 1912) = v172;
  unint64_t result = sub_1B2B6F938();
  *(void *)(v3 + 1920) = &type metadata for CustomGraphCalendarEvent;
  *(void *)(v3 + 1928) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_497:
    __break(1u);
    goto LABEL_498;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xB0) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0xB0 + 8) >= 2889)
  {
    goto LABEL_386;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_498:
    __break(1u);
    goto LABEL_499;
  }
  char v176 = *(unsigned char *)(_Records_GDEntityClass_records + 0xA8);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_499:
    __break(1u);
    goto LABEL_500;
  }
  uint64_t v177 = sub_1B299DF24();
  *(void *)(v3 + 1936) = v170;
  *(void *)(v3 + 1944) = v7;
  *(void *)(v3 + 1952) = v177;
  *(void *)(v3 + 1960) = v178;
  *(unsigned char *)(v3 + 1968) = v176;
  unint64_t result = sub_1B2B6FA04();
  *(void *)(v3 + 1976) = &type metadata for CustomGraphLocation;
  *(void *)(v3 + 1984) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_500:
    __break(1u);
    goto LABEL_501;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x2F0) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x2F8) >= 2889)
  {
    goto LABEL_387;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_501:
    __break(1u);
    goto LABEL_502;
  }
  char v180 = *(unsigned char *)(_Records_GDEntityClass_records + 0x2E8);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_502:
    __break(1u);
    goto LABEL_503;
  }
  uint64_t v181 = sub_1B299DF24();
  *(void *)(v3 + 1992) = v170;
  *(void *)(v3 + 2000) = v7;
  *(void *)(v3 + 2008) = v181;
  *(void *)(v3 + 2016) = v182;
  *(unsigned char *)(v3 + 2024) = v180;
  unint64_t result = sub_1B2B6FA78();
  *(void *)(v3 + 2032) = &type metadata for CustomGraphOrganization;
  *(void *)(v3 + 2040) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_503:
    __break(1u);
    goto LABEL_504;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xC98) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0xCA0) >= 2889)
  {
    goto LABEL_388;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_504:
    __break(1u);
    goto LABEL_505;
  }
  char v184 = *(unsigned char *)(_Records_GDEntityClass_records + 0xC90);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_505:
    __break(1u);
    goto LABEL_506;
  }
  uint64_t v185 = sub_1B299DF24();
  *(void *)(v3 + 2048) = v170;
  *(void *)(v3 + 2056) = v7;
  *(void *)(v3 + 2064) = v185;
  *(void *)(v3 + 2072) = v186;
  *(unsigned char *)(v3 + 2080) = v184;
  unint64_t result = sub_1B2B6FAEC();
  *(void *)(v3 + 2088) = &type metadata for CustomGraphSportsTeam;
  *(void *)(v3 + 2096) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_506:
    __break(1u);
    goto LABEL_507;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x278) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x280) >= 2889)
  {
    goto LABEL_389;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_507:
    __break(1u);
    goto LABEL_508;
  }
  char v188 = *(unsigned char *)(_Records_GDEntityClass_records + 0x270);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_508:
    __break(1u);
    goto LABEL_509;
  }
  uint64_t v189 = sub_1B299DF24();
  *(void *)(v3 + 2104) = v170;
  *(void *)(v3 + 2112) = v7;
  *(void *)(v3 + 2120) = v189;
  *(void *)(v3 + 2128) = v190;
  *(unsigned char *)(v3 + 2136) = v188;
  uint64_t v191 = type metadata accessor for CustomGraphPerson(0);
  unint64_t result = sub_1B2D59584(&qword_1EB7D8C80, (void (*)(uint64_t))type metadata accessor for CustomGraphPerson);
  *(void *)(v3 + 2144) = v191;
  *(void *)(v3 + 2152) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_509:
    __break(1u);
    goto LABEL_510;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xE0) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0xE0 + 8) >= 2889)
  {
    goto LABEL_390;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_510:
    __break(1u);
    goto LABEL_511;
  }
  char v193 = *(unsigned char *)(_Records_GDEntityClass_records + 0xD8);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_511:
    __break(1u);
    goto LABEL_512;
  }
  uint64_t v194 = sub_1B299DF24();
  *(void *)(v3 + 2160) = v191;
  *(void *)(v3 + 2168) = v7;
  *(void *)(v3 + 2176) = v194;
  *(void *)(v3 + 2184) = v195;
  *(unsigned char *)(v3 + 2192) = v193;
  unint64_t result = sub_1B2B6FBB8();
  *(void *)(v3 + 2200) = &type metadata for CustomGraphTopic;
  *(void *)(v3 + 2208) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_512:
    __break(1u);
    goto LABEL_513;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x578) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x580) >= 2889)
  {
    goto LABEL_391;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_513:
    __break(1u);
    goto LABEL_514;
  }
  char v197 = *(unsigned char *)(_Records_GDEntityClass_records + 0x570);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_514:
    __break(1u);
    goto LABEL_515;
  }
  uint64_t v198 = sub_1B299DF24();
  *(void *)(v3 + 2216) = v191;
  *(void *)(v3 + 2224) = v7;
  *(void *)(v3 + 2232) = v198;
  *(void *)(v3 + 2240) = v199;
  *(unsigned char *)(v3 + 2248) = v197;
  unint64_t result = sub_1B2B6FC2C();
  *(void *)(v3 + 2256) = &type metadata for CustomGraphSong;
  *(void *)(v3 + 2264) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_515:
    __break(1u);
    goto LABEL_516;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x500) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x508) >= 2889)
  {
    goto LABEL_392;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_516:
    __break(1u);
    goto LABEL_517;
  }
  char v201 = *(unsigned char *)(_Records_GDEntityClass_records + 0x4F8);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_517:
    __break(1u);
    goto LABEL_518;
  }
  uint64_t v202 = sub_1B299DF24();
  *(void *)(v3 + 2272) = v191;
  *(void *)(v3 + 2280) = v7;
  *(void *)(v3 + 2288) = v202;
  *(void *)(v3 + 2296) = v203;
  *(unsigned char *)(v3 + 2304) = v201;
  unint64_t result = sub_1B2B6FCA0();
  *(void *)(v3 + 2312) = &type metadata for CustomGraphActivityEventType;
  *(void *)(v3 + 2320) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_518:
    __break(1u);
    goto LABEL_519;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x8C0) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x8C8) >= 2889)
  {
    goto LABEL_393;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_519:
    __break(1u);
    goto LABEL_520;
  }
  char v205 = *(unsigned char *)(_Records_GDEntityClass_records + 0x8B8);
  unint64_t result = sub_1B2E82538();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_520:
    __break(1u);
    goto LABEL_521;
  }
  uint64_t v206 = sub_1B299DF24();
  *(void *)(v3 + 2328) = v191;
  *(void *)(v3 + 2336) = v7;
  *(void *)(v3 + 2344) = v206;
  *(void *)(v3 + 2352) = v207;
  *(unsigned char *)(v3 + 2360) = v205;
  unint64_t result = sub_1B2B6FD14();
  *(void *)(v3 + 2368) = &type metadata for CustomGraphModeOfTransportation;
  *(void *)(v3 + 2376) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_521:
    __break(1u);
    goto LABEL_522;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x470) >= 1336
    || *(void *)(_Records_GDEntityClass_records + 0x478) >= 2889)
  {
    goto LABEL_394;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_522:
    __break(1u);
    goto LABEL_523;
  }
  char v209 = *(unsigned char *)(_Records_GDEntityClass_records + 0x468);
  unint64_t result = sub_1B2E82538();
  if (_Records_GDEntityClass_labels)
  {
    unint64_t v211 = result;
    uint64_t v212 = v210;
    uint64_t v213 = sub_1B2E82538();
    *(void *)(v3 + 2384) = v211;
    *(void *)(v3 + 2392) = v212;
    *(void *)(v3 + 2400) = v213;
    *(void *)(v3 + 2408) = v214;
    *(unsigned char *)(v3 + 2416) = v209;
    unint64_t v215 = sub_1B2B6FD88();
    *(void *)(v3 + 2424) = &type metadata for CustomGraphSoftware;
    *(void *)(v3 + 2432) = v215;
    sub_1B29A3EB4((uint64_t *)&unk_1EB7D8A98);
    sub_1B2AD0B20();
    uint64_t v216 = sub_1B2E82148();
    unint64_t result = ObjectSynthesisDictionaryMapping.init(mapping:)(v216, &v218);
    *uint64_t v217 = v218;
    return result;
  }
LABEL_523:
  __break(1u);
  return result;
}

uint64_t sub_1B2D59584(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ObjectSynthesisDictionaryMapping.init(mapping:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1EB7D88A0);
  sub_1B2AD0B20();
  uint64_t result = sub_1B2E82148();
  int64_t v6 = 0;
  uint64_t v8 = a1 + 64;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v29 = result;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v7;
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  if ((v10 & v7) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v13 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v6 << 6))
  {
    uint64_t v18 = *(void *)(a1 + 48) + 40 * i;
    long long v19 = *(_OWORD *)v18;
    uint64_t v20 = *(void *)(v18 + 16);
    uint64_t v21 = *(void *)(v18 + 24);
    LOBYTE(v18) = *(unsigned char *)(v18 + 32);
    char v22 = (uint64_t *)(*(void *)(a1 + 56) + 16 * i);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    long long v25 = v19;
    uint64_t v26 = v20;
    uint64_t v27 = v21;
    char v28 = v18;
    uint64_t result = ObjectSynthesisDictionaryMapping.set<A>(entityClass:graphObjectType:)((uint64_t)&v25, v5, v23, v24);
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v15 >= v12) {
      goto LABEL_21;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v6;
    if (!v16)
    {
      int64_t v6 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_21;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v6);
      if (!v16)
      {
        int64_t v6 = v15 + 2;
        if (v15 + 2 >= v12) {
          goto LABEL_21;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v6);
        if (!v16) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v11 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v12)
  {
LABEL_21:
    uint64_t result = swift_release();
    *a2 = v29;
    return result;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v6 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v12) {
      goto LABEL_21;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t ObjectSynthesisDictionaryMapping.set<A>(entityClass:graphObjectType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v6 = *(_OWORD *)(a1 + 16);
  v17[0] = *(_OWORD *)a1;
  v17[1] = v6;
  char v18 = *(unsigned char *)(a1 + 32);
  uint64_t v7 = sub_1B29A2D00();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  uint64_t v8 = sub_1B29A2D00();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  uint64_t v9 = sub_1B29A2D00();
  *(void *)(v9 + 16) = sub_1B2D59BA0;
  *(void *)(v9 + 24) = v7;
  uint64_t v10 = sub_1B29A2D00();
  *(void *)(v10 + 16) = sub_1B2D59CF8;
  *(void *)(v10 + 24) = v8;
  sub_1B29E52BC((uint64_t)v17);
  *(void *)&long long v12 = a3;
  *((void *)&v12 + 1) = a4;
  unint64_t v13 = sub_1B2D59D4C;
  uint64_t v14 = v9;
  int64_t v15 = sub_1B2D59D78;
  uint64_t v16 = v10;
  sub_1B2B2A08C(&v12, (uint64_t)v17);
  return sub_1B29C5E2C((uint64_t)v17);
}

uint64_t sub_1B2D59880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1B2E82F38();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-v7];
  sub_1B29C3B28(a1, (uint64_t)v10);
  if (swift_dynamicCast())
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, AssociatedTypeWitness);
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a2, v8, AssociatedTypeWitness);
  }
  else
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, AssociatedTypeWitness);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t result = sub_1B2E83418();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B2D59A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness - 8);
  unint64_t v13 = (char *)&v18 - v12;
  uint64_t v19 = a1;
  swift_retain();
  sub_1B2D59880(a2, (uint64_t)v13);
  uint64_t v14 = *(uint64_t (**)(uint64_t *, char *, uint64_t, ValueMetadata *, unint64_t, _UNKNOWN **, uint64_t, uint64_t))(a4 + 48);
  a5[3] = a3;
  a5[4] = a4;
  sub_1B29D1C70(a5);
  uint64_t v15 = sub_1B29A3EB4(&qword_1E9C434D0);
  unint64_t v16 = sub_1B2D5A75C();
  uint64_t result = v14(&v19, v13, v15, &type metadata for ExtendedTriple, v16, &protocol witness table for ExtendedTriple, a3, a4);
  if (v5) {
    return sub_1B2C84FDC((uint64_t)a5);
  }
  return result;
}

uint64_t sub_1B2D59BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B2D59A54(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_1B2D59BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness - 8);
  uint64_t v15 = &v18[-v14];
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  sub_1B2D59880(a3, (uint64_t)&v18[-v14]);
  unint64_t v16 = *(uint64_t (**)(uint64_t (*)(uint64_t, uint64_t), unsigned char *, unsigned char *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a5 + 56);
  a6[3] = a4;
  a6[4] = a5;
  sub_1B29D1C70(a6);
  uint64_t result = v16(sub_1B2B87718, v18, v15, &type metadata for ExtendedTriple, &protocol witness table for ExtendedTriple, a4, a5);
  if (v6) {
    return sub_1B2C84FDC((uint64_t)a6);
  }
  return result;
}

uint64_t sub_1B2D59CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B2D59BBC(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24), a4);
}

uint64_t sub_1B2D59D14()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B2D59D4C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1B2D59D78(_OWORD *a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t (*)(uint64_t, uint64_t), _OWORD *, uint64_t))(v2 + 16);
  v5[1] = *a1;
  return v3(sub_1B2D5A704, v5, a2);
}

uint64_t sub_1B2D59DCC(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v8[0] = sub_1B2D5A724;
  v8[1] = v6;
  a3(v8);
  return swift_release();
}

Swift::Void __swiftcall ObjectSynthesisDictionaryMapping.clear()()
{
  sub_1B29A3EB4(&qword_1EB7D88A0);
  sub_1B2AD0B20();
  uint64_t v1 = sub_1B2E82148();
  swift_bridgeObjectRelease();
  *uint64_t v0 = v1;
}

uint64_t ObjectSynthesisDictionaryMapping.remove(entityClass:)(long long *a1)
{
  long long v1 = a1[1];
  long long v5 = *a1;
  long long v6 = v1;
  char v7 = *((unsigned char *)a1 + 32);
  sub_1B2B297D4(v3);
  uint64_t result = sub_1B2D5A550((uint64_t)v3, (uint64_t)v4);
  if (v4[0])
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t ObjectSynthesisDictionaryMapping.type(for:)(uint64_t a1)
{
  char v9 = *(unsigned char *)(a1 + 32);
  long long v2 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v2;
  uint64_t v3 = *v1;
  if (!*(void *)(v3 + 16)) {
    return 0;
  }
  sub_1B29E52BC((uint64_t)v8);
  unint64_t v4 = sub_1B29DAFFC();
  if ((v5 & 1) == 0)
  {
    sub_1B29C5E2C((uint64_t)v8);
    return 0;
  }
  uint64_t v6 = *(void *)(*(void *)(v3 + 56) + 48 * v4);
  sub_1B29C5E2C((uint64_t)v8);
  return v6;
}

uint64_t ObjectSynthesisDictionaryMapping.factory<A, B>(for:triples:initializationResources:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  v25[8] = a2;
  v25[10] = a8;
  uint64_t v26 = a3;
  long long v12 = *((_OWORD *)a1 + 1);
  v29[0] = *(_OWORD *)a1;
  v29[1] = v12;
  char v13 = *((unsigned char *)a1 + 32);
  char v30 = v13;
  uint64_t v15 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v16 = a1[2];
  sub_1B2D5A7B4(a1[3]);
  sub_1B29B2464();
  sub_1B29C5E2C((uint64_t)v29);
  uint64_t v17 = sub_1B2D5A550((uint64_t)v27, (uint64_t)v28);
  if (v28[0])
  {
    uint64_t v18 = (void (*)(uint64_t *, uint64_t))v28[2];
    MEMORY[0x1F4188790](v17);
    v25[2] = a4;
    v25[3] = a5;
    v25[4] = a6;
    v25[5] = a7;
    uint64_t v20 = sub_1B2A2F1C0((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_1B2D5A5B8, (uint64_t)v25, a4, (uint64_t)&type metadata for ExtendedTriple, MEMORY[0x1E4FBC248], a6, MEMORY[0x1E4FBC278], v19);
    sub_1B29A3EB4(&qword_1E9C420A8);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    uint64_t v31 = v21;
    v18(&v31, v26);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    sub_1B2B8AB70();
    swift_allocError();
    *(void *)uint64_t v23 = v15;
    *(void *)(v23 + 8) = v14;
    uint64_t v24 = v25[7];
    *(void *)(v23 + 16) = v16;
    *(void *)(v23 + 24) = v24;
    *(unsigned char *)(v23 + 32) = v13;
    sub_1B29E52BC((uint64_t)v29);
    return swift_willThrow();
  }
}

uint64_t ObjectSynthesisDictionaryMapping.factory<A>(for:enumerator:initializationResources:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v10 = *((_OWORD *)a1 + 1);
  v27[0] = *(_OWORD *)a1;
  v27[1] = v10;
  char v11 = *((unsigned char *)a1 + 32);
  char v28 = v11;
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  char v22 = (void *)a1[2];
  uint64_t v23 = a4;
  sub_1B2D5A7B4(a1[3]);
  sub_1B29B2464();
  sub_1B29C5E2C((uint64_t)v27);
  uint64_t v14 = sub_1B2D5A550((uint64_t)v25, (uint64_t)v26);
  if (v26[0])
  {
    char v22 = v21;
    uint64_t v15 = (void (*)(void *, uint64_t))v26[4];
    MEMORY[0x1F4188790](v14);
    v20[2] = a5;
    v20[3] = a6;
    v20[4] = a2;
    uint64_t v20[5] = a3;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1B2D5A5F0;
    *(void *)(v16 + 24) = v20;
    v24[0] = sub_1B2D5A614;
    v24[1] = v16;
    v15(v24, v23);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    sub_1B2B8AB70();
    swift_allocError();
    *(void *)uint64_t v18 = v13;
    *(void *)(v18 + 8) = v12;
    uint64_t v19 = v21[1];
    *(void *)(v18 + 16) = v22;
    *(void *)(v18 + 24) = v19;
    *(unsigned char *)(v18 + 32) = v11;
    sub_1B29E52BC((uint64_t)v27);
    return swift_willThrow();
  }
}

uint64_t sub_1B2D5A324(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1), void *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  v15[2] = a5;
  v15[3] = a6;
  v15[4] = sub_1B2D5A6B4;
  v15[5] = v12;
  a3(sub_1B2D5A6E0, v15);
  if (v6) {
    return swift_release();
  }
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B2D5A424(uint64_t a1, uint64_t (*a2)(long long *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B2B44724(a4, a5, (uint64_t)&v20);
  long long v8 = v20;
  uint64_t v9 = v21;
  uint64_t v10 = v22;
  uint64_t v11 = v23;
  __int16 v12 = v24;
  long long v13 = v25;
  uint64_t v14 = v26;
  uint64_t v15 = v27;
  uint64_t v16 = v28;
  __int16 v17 = v29;
  uint64_t v18 = v30;
  uint64_t v19 = v31;
  char v6 = a2(&v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1B2D5A520@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return ObjectSynthesisDictionaryMapping.factory<A, B>(for:triples:initializationResources:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1B2D5A538(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ObjectSynthesisDictionaryMapping.factory<A>(for:enumerator:initializationResources:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1B2D5A550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C420A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1B2D5A5B8@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1B2B44724(*(void *)(v1 + 24), *(void *)(v1 + 40), a1).n128_u64[0];
  return result;
}

uint64_t sub_1B2D5A5F0(uint64_t a1, uint64_t a2)
{
  return sub_1B2D5A324(a1, a2, *(void (**)(uint64_t (*)(uint64_t), void *))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1B2D5A614(_OWORD *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t (*)(), _OWORD *))(v1 + 16);
  v4[1] = *a1;
  return v2(sub_1B2D5A674, v4);
}

ValueMetadata *type metadata accessor for ObjectSynthesisDictionaryMapping()
{
  return &type metadata for ObjectSynthesisDictionaryMapping;
}

uint64_t sub_1B2D5A674()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&var1);
  if (!v1) {
    char v2 = var1;
  }
  return v2 & 1;
}

uint64_t sub_1B2D5A6B4()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1B2D5A6E0(uint64_t a1)
{
  return sub_1B2D5A424(a1, *(uint64_t (**)(long long *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_1B2D5A704(uint64_t a1, uint64_t a2)
{
  return sub_1B2D59DCC(a1, a2, *(void (**)(void *))(v2 + 16));
}

uint64_t sub_1B2D5A724@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = result & 1;
  }
  return result;
}

unint64_t sub_1B2D5A75C()
{
  unint64_t result = qword_1E9C434D8[0];
  if (!qword_1E9C434D8[0])
  {
    sub_1B29C3588(&qword_1E9C434D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C434D8);
  }
  return result;
}

uint64_t sub_1B2D5A7B4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 264) = a1;
  return sub_1B29E52BC(v1 - 128);
}

unint64_t sub_1B2D5A7D4(uint64_t a1)
{
  unint64_t result = sub_1B2B8AB70();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for ObjectSynthesisMapError()
{
  return &type metadata for ObjectSynthesisMapError;
}

uint64_t dispatch thunk of ObjectSynthesisMap.type(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ObjectSynthesisMap.factory<A, B>(for:triples:initializationResources:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 16))(a1);
}

uint64_t dispatch thunk of ObjectSynthesisMap.factory<A>(for:enumerator:initializationResources:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t OneOf.init(_:potentiallyPreferred:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = sub_1B2E82F38();
  sub_1B299D278();
  uint64_t v10 = v9;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v20 - v15;
  *(void *)a4 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, a2, v8);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, a3) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1B2D5AADC();
    swift_bridgeObjectRelease();
    __int16 v17 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v17(a2, v8);
    v17((uint64_t)v14, v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(a3 - 8) + 32))(v16, v14, a3);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v16, 0, 1, a3);
  }
  uint64_t v18 = type metadata accessor for OneOf();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(&a4[*(int *)(v18 + 28)], v16, v8);
}

uint64_t OneOf.projectedValue.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OneOf.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_1B2E82F38();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1B2D5AADC()
{
  return sub_1B2E826E8();
}

uint64_t type metadata accessor for OneOf()
{
  return sub_1B29A1278();
}

uint64_t OneOf.init(_:preferred:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v6 = (uint64_t)a4 + *(int *)(type metadata accessor for OneOf() + 28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v6, a2, a3);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v6, 0, 1, a3);
}

uint64_t sub_1B2D5AC20()
{
  uint64_t v0 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1B2D5AC78(char a1)
{
  if (a1) {
    return 0x6572726566657270;
  }
  else {
    return 7105633;
  }
}

uint64_t sub_1B2D5ACAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];

  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1B2D5AD20(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1B2D5AD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1B2D5ADFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1B2D5AE6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2D5AC20();
  *a1 = result;
  return result;
}

uint64_t sub_1B2D5AE9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B2D5AC78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B2D5AEC8()
{
  return sub_1B2D5AC78(*v0);
}

uint64_t sub_1B2D5AED0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2D5AC74();
  *a1 = result;
  return result;
}

uint64_t sub_1B2D5AEF8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B2D5AF4C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t OneOf<A>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v15[0] = a2;
  _s10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v6 = sub_1B2E83718();
  sub_1B299D278();
  uint64_t v16 = v7;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v15 - v9;
  sub_1B29AEC7C(a1, a1[3]);
  uint64_t v11 = (uint64_t *)v15[1];
  sub_1B2E83A38();
  uint64_t v20 = *v11;
  char v19 = 0;
  sub_1B2E82968();
  uint64_t v18 = a4;
  swift_getWitnessTable();
  uint64_t v12 = v17;
  sub_1B2E836D8();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, v6);
  }
  uint64_t v14 = v16;
  LOBYTE(v20) = 1;
  sub_1B2E83668();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v10, v6);
}

uint64_t _s10CodingKeysOMa()
{
  return sub_1B29A1278();
}

uint64_t OneOf<A>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a4;
  sub_1B2E82F38();
  sub_1B299D278();
  uint64_t v26 = v9;
  uint64_t v27 = v8;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v10);
  uint64_t v30 = (char *)&v24 - v11;
  uint64_t v32 = a3;
  _s10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v33 = sub_1B2E83608();
  sub_1B299D278();
  uint64_t v29 = v12;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v13);
  uint64_t v31 = a2;
  uint64_t v14 = type metadata accessor for OneOf();
  sub_1B299D278();
  uint64_t v25 = v15;
  sub_1B29A04E8();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v24 - v17;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2E83A18();
  if (v4) {
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  __int16 v24 = a1;
  char v19 = v30;
  sub_1B2E82968();
  char v35 = 0;
  uint64_t v34 = v32;
  swift_getWitnessTable();
  sub_1B2E835B8();
  *(void *)uint64_t v18 = v36;
  LOBYTE(v36) = 1;
  sub_1B2E83548();
  uint64_t v20 = sub_1B29A31E4();
  v21(v20);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v18[*(int *)(v14 + 28)], v19, v27);
  uint64_t v22 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v28, v18, v14);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v24);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v18, v14);
}

uint64_t sub_1B2D5B4C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return OneOf<A>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t sub_1B2D5B4E4(void *a1, uint64_t a2, uint64_t a3)
{
  return OneOf<A>.encode(to:)(a1, a2, *(void *)(a3 - 8), *(void *)(a3 - 16));
}

uint64_t sub_1B2D5B504()
{
  uint64_t result = sub_1B2E82F38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B2D5B5A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v10 = ((v7 + 8) & ~(unint64_t)v7) + v9;
  int v11 = v7 & 0x100000;
  uint64_t v12 = *a2;
  *a1 = *a2;
  if (v8 > 7 || v11 != 0 || v10 > 0x18)
  {
    a1 = (uint64_t *)(v12 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
    uint64_t v16 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
    swift_bridgeObjectRetain();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v16, 1, v4))
    {
      memcpy(v15, v16, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v15, v16, v4);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v15, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_1B2D5B6EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v4 - 8);
  unint64_t v5 = (a1 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v5, 1, v4);
  if (!result)
  {
    int v7 = *(uint64_t (**)(unint64_t, uint64_t))(v8 + 8);
    return v7(v5, v4);
  }
  return result;
}

void *sub_1B2D5B7AC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  swift_bridgeObjectRetain();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v9 = *(void *)(v5 + 64);
    }
    else {
      size_t v9 = *(void *)(v5 + 64) + 1;
    }
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v4);
  }
  return a1;
}

void *sub_1B2D5B898(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  size_t v9 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
  unint64_t v10 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
  int v11 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v6);
  int v12 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v6);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v9, 0, 1, v6);
      return a1;
    }
    int v13 = *(_DWORD *)(v7 + 84);
    size_t v14 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(v9, v10, v6);
      return a1;
    }
    uint64_t v16 = *(void (**)(void *, uint64_t))(v7 + 8);
    uint64_t v15 = v7 + 8;
    v16(v9, v6);
    int v13 = *(_DWORD *)(v15 + 76);
    size_t v14 = *(void *)(v15 + 56);
  }
  if (v13) {
    size_t v17 = v14;
  }
  else {
    size_t v17 = v14 + 1;
  }
  memcpy(v9, v10, v17);
  return a1;
}

void *sub_1B2D5B9F8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v9 = *(void *)(v5 + 64);
    }
    else {
      size_t v9 = *(void *)(v5 + 64) + 1;
    }
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v4);
  }
  return a1;
}

void *sub_1B2D5BAE0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  size_t v9 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
  unint64_t v10 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
  int v11 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v6);
  int v12 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v6);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v9, 0, 1, v6);
      return a1;
    }
    int v13 = *(_DWORD *)(v7 + 84);
    size_t v14 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(v9, v10, v6);
      return a1;
    }
    uint64_t v16 = *(void (**)(void *, uint64_t))(v7 + 8);
    uint64_t v15 = v7 + 8;
    v16(v9, v6);
    int v13 = *(_DWORD *)(v15 + 76);
    size_t v14 = *(void *)(v15 + 56);
  }
  if (v13) {
    size_t v17 = v14;
  }
  else {
    size_t v17 = v14 + 1;
  }
  memcpy(v9, v10, v17);
  return a1;
}

uint64_t sub_1B2D5BC38(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!v6) {
    ++v10;
  }
  if (!a2) {
    return 0;
  }
  int v11 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_28;
  }
  uint64_t v12 = v10 + ((v9 + 8) & ~v9);
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v16 < 2)
    {
LABEL_28:
      if ((v7 & 0x80000000) != 0)
      {
        unsigned int v19 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(((unint64_t)a1 + v9 + 8) & ~v9, v6, v4);
        if (v19 >= 2) {
          return v19 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v18 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v18) = -1;
        }
        return (v18 + 1);
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_28;
  }
LABEL_20:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 > 3) {
      LODWORD(v12) = 4;
    }
    switch((int)v12)
    {
      case 2:
        LODWORD(v12) = *a1;
        break;
      case 3:
        LODWORD(v12) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v12) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v12) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v12 | v17) + 1;
}

void sub_1B2D5BDF8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  unsigned int v10 = v9 - 1;
  if (!v9) {
    unsigned int v10 = 0;
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (v12 + 8) & ~v12;
  size_t v14 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v9) {
    ++v14;
  }
  size_t v15 = v13 + v14;
  char v16 = 8 * (v13 + v14);
  BOOL v17 = a3 >= v11;
  unsigned int v18 = a3 - v11;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v19 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v19))
      {
        int v6 = 4;
      }
      else if (v19 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v19 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v11 < a2)
  {
    unsigned int v20 = ~v11 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v22 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v15] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v21;
        return;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x1B2D5C0E4);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        if ((v10 & 0x80000000) != 0)
        {
          __int16 v24 = (unsigned char *)((unint64_t)&a1[v12 + 8] & ~v12);
          if (v10 >= a2)
          {
            uint64_t v28 = a2 + 1;
            unint64_t v29 = (unint64_t)&a1[v12 + 8] & ~v12;
            _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v29, v28, v9, v7);
          }
          else
          {
            if (v14 <= 3) {
              int v25 = ~(-1 << (8 * v14));
            }
            else {
              int v25 = -1;
            }
            if (v14)
            {
              int v26 = v25 & (~v10 + a2);
              if (v14 <= 3) {
                int v27 = v14;
              }
              else {
                int v27 = 4;
              }
              bzero(v24, v14);
              switch(v27)
              {
                case 2:
                  *(_WORD *)__int16 v24 = v26;
                  break;
                case 3:
                  *(_WORD *)__int16 v24 = v26;
                  void v24[2] = BYTE2(v26);
                  break;
                case 4:
                  *(_DWORD *)__int16 v24 = v26;
                  break;
                default:
                  *__int16 v24 = v26;
                  break;
              }
            }
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v23 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v23 = a2 - 1;
          }
          *(void *)a1 = v23;
        }
      }
      return;
  }
}

unsigned char *sub_1B2D5C11C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D5C1E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1B2D5C210()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2D5C22C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2D5C248()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for OntologyContextGenerator()
{
  return &type metadata for OntologyContextGenerator;
}

uint64_t sub_1B2D5C274(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = MEMORY[0x1E4FBC870];
  if (*(void *)(a2 + 8))
  {
    uint64_t v79 = *a1;
    uint64_t v4 = *(void *)(a2 + 40);
    uint64_t v3 = *(void *)(a2 + 48);
    int v5 = *(unsigned __int8 *)(a2 + 56);
    uint64_t v6 = *(void *)(a2 + 64);
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v120 = MEMORY[0x1E4FBC870];
    uint64_t v117 = MEMORY[0x1E4FBC870];
    uint64_t v8 = (void *)sub_1B2E82148();
    uint64_t v83 = v7 + 56;
    uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v10 = -1;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    unint64_t v11 = v10 & *(void *)(v7 + 56);
    int64_t v84 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v93 = v7;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    uint64_t v91 = v6;
    LODWORD(v89) = v5;
    uint64_t v85 = v4;
    uint64_t v87 = v3;
    if (!v11) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v95 = (v11 - 1) & v11;
    uint64_t v97 = v12;
    for (unint64_t i = __clz(__rbit64(v11)) | (v12 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v16 << 6))
    {
      unsigned int v18 = (uint64_t *)(*(void *)(v93 + 48) + 32 * i);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      uint64_t v22 = v18[2];
      uint64_t v21 = v18[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1B2A00B00((uint64_t)&v98, v22, v21, v23, v24, v25, v26, v27, v79, v81);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = sub_1B29DB060(v22, v21, v28, v29, v30, v31, v32, v33, v80, v82, v83, v84, v85, v87, v89, v91, v93, v95, v97,
              (uint64_t)v8,
              v99,
              v100,
              v101,
              v102,
              *((uint64_t *)&v102 + 1),
              v103);
      if (__OFADD__(v8[2], (v35 & 1) == 0))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        uint64_t result = sub_1B2E83858();
        __break(1u);
        return result;
      }
      unint64_t v36 = v34;
      char v37 = v35;
      sub_1B29A3EB4(&qword_1EB7D9850);
      if (sub_1B2E83398())
      {
        uint64_t v44 = sub_1B29DB060(v22, v21, v38, v39, v40, v41, v42, v43, v79, v81, v83, v84, v85, v87, v89, v91, v93, v94, v96,
                (uint64_t)v98,
                v99,
                v100,
                v101,
                v102,
                *((uint64_t *)&v102 + 1),
                v103);
        if ((v37 & 1) != (v45 & 1)) {
          goto LABEL_63;
        }
        unint64_t v36 = v44;
      }
      uint64_t v8 = v98;
      if (v37)
      {
        uint64_t v46 = (void *)(v98[7] + 16 * v36);
        swift_bridgeObjectRelease();
        *uint64_t v46 = v20;
        v46[1] = v19;
      }
      else
      {
        v98[(v36 >> 6) + 8] |= 1 << v36;
        char v47 = (uint64_t *)(v8[6] + 16 * v36);
        *char v47 = v22;
        v47[1] = v21;
        uint64_t v48 = (void *)(v8[7] + 16 * v36);
        *uint64_t v48 = v20;
        v48[1] = v19;
        uint64_t v49 = v8[2];
        BOOL v50 = __OFADD__(v49, 1);
        uint64_t v51 = v49 + 1;
        if (v50) {
          goto LABEL_54;
        }
        _OWORD v8[2] = v51;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v6 = v91;
      LOBYTE(v5) = v89;
      uint64_t v4 = v85;
      uint64_t v3 = v87;
      unint64_t v11 = v94;
      uint64_t v12 = v96;
      if (v94) {
        goto LABEL_5;
      }
LABEL_6:
      int64_t v14 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_55;
      }
      if (v14 >= v84) {
        goto LABEL_30;
      }
      unint64_t v15 = *(void *)(v83 + 8 * v14);
      int64_t v16 = v12 + 1;
      if (!v15)
      {
        int64_t v16 = v12 + 2;
        if (v12 + 2 >= v84) {
          goto LABEL_30;
        }
        unint64_t v15 = *(void *)(v83 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v12 + 3;
          if (v12 + 3 >= v84) {
            goto LABEL_30;
          }
          unint64_t v15 = *(void *)(v83 + 8 * v16);
          if (!v15)
          {
            uint64_t v17 = v12 + 4;
            if (v12 + 4 >= v84)
            {
LABEL_30:
              swift_release();
              uint64_t v2 = v117;
              sub_1B29A3EB4(&qword_1EB7E5B00);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
              static EntityPredicate.isA.getter();
              uint64_t v53 = (uint64_t)v98;
              uint64_t v54 = v99;
              swift_bridgeObjectRelease();
              *(void *)(inited + 32) = v53;
              *(void *)(inited + 40) = v54;
              sub_1B2A184AC();
              uint64_t v115 = v79;
              v108[0] = 1;
              uint64_t v109 = -50;
              uint64_t v110 = MEMORY[0x1E4FBC860];
              uint64_t v111 = v4;
              uint64_t v112 = v3;
              char v113 = v5;
              uint64_t v114 = v6;
              uint64_t v98 = 0;
              uint64_t v99 = v2;
              uint64_t v100 = 0;
              uint64_t v101 = v55;
              long long v102 = 0u;
              long long v103 = 0u;
              long long v104 = 0u;
              long long v105 = 0u;
              uint64_t v106 = 0;
              char v107 = 32;
              sub_1B29C65EC(v4, v3, v5);
              swift_bridgeObjectRetain();
              sub_1B2C45950(v108, (uint64_t *)&v98, &v116);
              if (v81)
              {
                swift_bridgeObjectRelease();
                sub_1B299DF50();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();
                sub_1B299DF50();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v56 = v116;
                if (!v116)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v56 = MEMORY[0x1E4FBC860];
                }
                swift_bridgeObjectRelease();
                uint64_t v57 = *(void *)(v56 + 16);
                if (v57)
                {
                  uint64_t v90 = 2674;
                  uint64_t v92 = 233;
                  uint64_t v86 = v56;
                  uint64_t v88 = 3558;
                  uint64_t v58 = 32;
                  do
                  {
                    memcpy(__dst, (const void *)(v56 + v58), 0x58uLL);
                    if (v8[2])
                    {
                      uint64_t v59 = __dst[3];
                      uint64_t v60 = __dst[4];
                      sub_1B2A0E6BC((uint64_t)__dst);
                      swift_bridgeObjectRetain();
                      uint64_t v67 = sub_1B29DB060(v59, v60, v61, v62, v63, v64, v65, v66, v79, v81, v83, v84, v86, v88, v90, v92, v93, v94, v96,
                              (uint64_t)v98,
                              v99,
                              v100,
                              v101,
                              v102,
                              *((uint64_t *)&v102 + 1),
                              v103);
                      if (v68)
                      {
                        uint64_t v70 = __dst[8];
                        uint64_t v69 = __dst[9];
                        uint64_t v71 = (uint64_t *)(v8[7] + 16 * v67);
                        uint64_t v73 = *v71;
                        uint64_t v72 = v71[1];
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        if (v69)
                        {
                          uint64_t v93 = v70;
                          swift_bridgeObjectRetain();
                          sub_1B2A016A0();
                          uint64_t v94 = *((void *)&v103 + 1);
                          uint64_t v96 = *((void *)&v104 + 1);
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if (v92 < 14) {
                            goto LABEL_57;
                          }
                          if (!_Records_GDEntityPredicate_records) {
                            goto LABEL_60;
                          }
                          if (*((void *)_Records_GDEntityPredicate_records + 40) >= v90) {
                            goto LABEL_58;
                          }
                          if (*((void *)_Records_GDEntityPredicate_records + 41) >= v88) {
                            goto LABEL_59;
                          }
                          if (!_Records_GDEntityPredicate_predicateIds) {
                            goto LABEL_61;
                          }
                          uint64_t v74 = sub_1B2E82538();
                          if (!_Records_GDEntityPredicate_labels) {
                            goto LABEL_62;
                          }
                          uint64_t v76 = v74;
                          uint64_t v77 = v75;
                          sub_1B2E82538();
                          swift_bridgeObjectRelease();
                          KnosisInternalFact.init(sid:pid:oid:)(v73, v72, v76, v77, v93, v69, v118);
                          sub_1B2A016A0();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          uint64_t v56 = v86;
                        }
                        else
                        {
                          sub_1B2A0E730((uint64_t)__dst);
                          swift_bridgeObjectRelease();
                        }
                      }
                      else
                      {
                        swift_bridgeObjectRelease();
                        sub_1B2A0E730((uint64_t)__dst);
                      }
                    }
                    v58 += 88;
                    --v57;
                  }
                  while (v57);
                  swift_bridgeObjectRelease();
                  uint64_t v2 = v120;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  uint64_t v2 = MEMORY[0x1E4FBC870];
                }
                swift_bridgeObjectRelease();
              }
              return v2;
            }
            unint64_t v15 = *(void *)(v83 + 8 * v17);
            if (!v15)
            {
              while (1)
              {
                int64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_56;
                }
                if (v16 >= v84) {
                  goto LABEL_30;
                }
                unint64_t v15 = *(void *)(v83 + 8 * v16);
                ++v17;
                if (v15) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v16 = v12 + 4;
          }
        }
      }
LABEL_19:
      uint64_t v95 = (v15 - 1) & v15;
      uint64_t v97 = v16;
    }
  }
  return v2;
}

uint64_t sub_1B2D5C9A4(uint64_t *a1, uint64_t a2)
{
  return sub_1B2D5C274(a1, a2);
}

ValueMetadata *type metadata accessor for OperatorError()
{
  return &type metadata for OperatorError;
}

unint64_t sub_1B2D5C9CC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return 0xD000000000000010;
}

unint64_t sub_1B2D5CB64()
{
  return sub_1B2D5C9CC(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1B2D5CB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a5 >= 25)
  {
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    *(void *)&__dst[0] = 0xD00000000000001BLL;
    *((void *)&__dst[0] + 1) = 0x80000001B2E9D8F0;
    v169[0] = 25;
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    uint64_t v13 = 0x80000001B2E9D8F0;
    sub_1B29D53EC();
    swift_allocError();
    *(_OWORD *)uint64_t v22 = __dst[0];
    *(unsigned char *)(v22 + 16) = 1;
    swift_willThrow();
    goto LABEL_5;
  }
  uint64_t v13 = a3;
  sub_1B2D60674(v169, a2, a3, a6, a7, a8);
  if (v8)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return v13;
  }
  uint64_t v162 = a1;
  uint64_t v163 = a5;
  uint64_t v16 = a7;
  uint64_t v17 = a8;
  uint64_t v18 = a6;
  uint64_t v20 = v170;
  uint64_t v19 = v171;
  sub_1B29AEC7C(v169, v170);
  char v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 24))(a2, v18, v16, v17, v13, v20, v19);
  uint64_t v159 = v18;
  uint64_t v161 = a2;
  uint64_t v24 = v16;
  if ((v21 & 1) == 0) {
    goto LABEL_14;
  }
  if (!*(void *)(v16 + 16))
  {
    memset(__dst, 0, 40);
    goto LABEL_50;
  }
  uint64_t v25 = *(void *)(*(void *)v13 + 16);
  uint64_t v26 = *(void *)(*(void *)v13 + 24);
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1B29DB060(v25, v26, v27, v28, v29, v30, v31, v32, v113, v116, v117, v118, v120, v123, v125, v126, v128, v130, v132,
          v134,
          v136,
          v138,
          v140,
          v142,
          v144,
          v146);
  if (v34) {
    sub_1B29C3B84(*(void *)(v16 + 56) + 40 * v33, (uint64_t)__dst);
  }
  else {
    memset(__dst, 0, 40);
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&__dst[1] + 1))
  {
LABEL_50:
    __break(1u);
    JUMPOUT(0x1B2D5D9FCLL);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v169);
  sub_1B29D1D20(__dst, (uint64_t)v169);
LABEL_14:
  uint64_t v35 = *(void *)v13;
  uint64_t v36 = v161;
  switch(*(unsigned char *)(*(void *)v13 + 64))
  {
    case 2:
      swift_bridgeObjectRelease();
      break;
    default:
      char v37 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0)
      {
        uint64_t v38 = v170;
        uint64_t v39 = v171;
        sub_1B29AEC7C(v169, v170);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 32))(__dst, v161, v35, v38, v39);
        *(unsigned char *)(v35 + 64) = __dst[0];
      }
      break;
  }
  if (qword_1EB7D96F8 != -1) {
    swift_once();
  }
  uint64_t v40 = qword_1EB7F3390;
  uint64_t v41 = *(void *)(v35 + 16);
  uint64_t v42 = *(void *)(v35 + 24);
  swift_bridgeObjectRetain();
  sub_1B29FB4D4(v41, v42, v40);
  swift_bridgeObjectRelease();
  uint64_t v43 = v17;
  uint64_t v44 = sub_1B2DC14E4();
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  uint64_t v155 = v43;
  uint64_t v152 = v44;
  char v157 = (void *)v35;
  if (sub_1B2E17A58())
  {
    sub_1B29A535C();
    char v53 = sub_1B2E17AE8(v47, v48, v49, v50, v51, v52);
    uint64_t v154 = v46;
  }
  else
  {
    uint64_t v154 = v46;
    sub_1B299DF88();
    sub_1B29A535C();
    char v53 = v54();
  }
  long long v149 = __dst[0];
  long long v150 = __dst[1];
  uint64_t v55 = *(void *)&__dst[3];
  long long v145 = __dst[2];
  uint64_t v56 = *((void *)&__dst[3] + 1);
  uint64_t v143 = *(void *)&__dst[4];
  unint64_t v57 = *((void *)&__dst[5] + 1);
  uint64_t v147 = *(void *)&__dst[5];
  uint64_t v148 = *((void *)&__dst[4] + 1);
  uint64_t v58 = *(void *)&__dst[6];
  unsigned __int8 v59 = BYTE8(__dst[6]);
  if (v53)
  {
    uint64_t v60 = v161 + *(int *)(type metadata accessor for QueryContext() + 32);
    if (*(void *)(v60 + 88) >> 1 == 0xFFFFFFFFLL && (*(unsigned char *)(v60 + 104) & 0x1E) == 0)
    {
      *(_OWORD *)uint64_t v60 = v149;
      *(_OWORD *)(v60 + 16) = v150;
      *(_OWORD *)(v60 + 32) = v145;
      *(void *)(v60 + 48) = v55;
      *(void *)(v60 + 56) = v56;
      *(void *)(v60 + 64) = v143;
      *(void *)(v60 + 72) = v148;
      *(void *)(v60 + 80) = v147;
      *(void *)(v60 + 88) = v57;
      *(void *)(v60 + 96) = v58;
      *(unsigned char *)(v60 + 104) = v59;
      sub_1B2A349B4(v149, *((uint64_t *)&v149 + 1), v150, *((uint64_t *)&v150 + 1), v145, *((uint64_t *)&v145 + 1), v55, v56, v143, v148, v147, v57, v58, v59);
    }
  }
  unsigned __int8 v139 = v59;
  uint64_t v141 = v57;
  sub_1B299DF88();
  sub_1B29A0E6C();
  char v62 = v61();
  char v129 = v62;
  if ((v59 & 0x1E) == 0 && (v57 & 0xFFFFFFFFFFFFFFFELL) == 0x1FFFFFFFELL) {
    goto LABEL_35;
  }
  __src[0] = v149;
  __src[1] = v150;
  __src[2] = v145;
  *(void *)&__src[3] = v55;
  *((void *)&__src[3] + 1) = v56;
  *(void *)&__src[4] = v143;
  *((void *)&__src[4] + 1) = v148;
  *(void *)&__src[5] = v147;
  *((void *)&__src[5] + 1) = v57;
  *(void *)&__src[6] = v58;
  BYTE8(__src[6]) = v59;
  if (v62)
  {
    sub_1B29C6430(v149, *((uint64_t *)&v149 + 1), v150, *((uint64_t *)&v150 + 1), v145, *((uint64_t *)&v145 + 1), v55, v56, v143, v148, v147, v57, v58, v59);
    sub_1B2CC8598();
    uint64_t v127 = v63;
    unint64_t v135 = v64;
    uint64_t v121 = v58;
    sub_1B2D5DC14();
    uint64_t v66 = v65;
    sub_1B2A34A54(v67, v68, v69, v70, v71, v72, v65, v56, v114, v148, v147, v57, v121, v59);
    swift_bridgeObjectRelease();
    memcpy(__dst, __src, 0x69uLL);
    sub_1B2D87FDC((uint64_t)v157, (uint64_t)__dst, v166);
    sub_1B29A2168();
    sub_1B2D5DC14();
    sub_1B2A34A54(v73, v74, v75, v76, v77, v78, v66, v56, v115, v148, v147, v119, v122, v124);
    uint64_t v79 = v166[0];
    uint64_t v80 = v166[1];
    uint64_t v81 = v167;
    strcpy((char *)v166, "indexResult: ");
    HIWORD(v166[1]) = -4864;
    *(void *)&__dst[0] = v79;
    *((void *)&__dst[0] + 1) = v80;
    *(void *)&__dst[1] = v167;
    IndexResult.description.getter();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    uint64_t v82 = v166[1];
    uint64_t v151 = v166[0];
    uint64_t v83 = MEMORY[0x1E4FBC860];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B29B7048();
      uint64_t v83 = v111;
    }
    unint64_t v85 = *(void *)(v83 + 16);
    unint64_t v84 = *(void *)(v83 + 24);
    if (v85 >= v84 >> 1)
    {
      sub_1B29999F8(v84);
      sub_1B29B7048();
      uint64_t v83 = v112;
    }
    *(void *)(v83 + 16) = v85 + 1;
    uint64_t v86 = v83 + 16 * v85;
    *(void *)(v86 + 32) = v151;
    *(void *)(v86 + 40) = v82;
    uint64_t v87 = v170;
    uint64_t v88 = v171;
    sub_1B29AEC7C(v169, v170);
    *(void *)&__dst[0] = v79;
    *((void *)&__dst[0] + 1) = v80;
    *(void *)&__dst[1] = v81;
    (*(void (**)(uint64_t, void *, long long *, uint64_t, uint64_t))(v88 + 72))(v161, v157, __dst, v87, v88);
    uint64_t v137 = v83;
    uint64_t v36 = v161;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v89 = v161 + *(int *)(type metadata accessor for QueryContext() + 32);
    sub_1B2A34A54(*(void *)v89, *(void *)(v89 + 8), *(void *)(v89 + 16), *(void *)(v89 + 24), *(void *)(v89 + 32), *(void *)(v89 + 40), *(void *)(v89 + 48), *(void *)(v89 + 56), *(void *)(v89 + 64), *(void *)(v89 + 72), *(void *)(v89 + 80), *(void *)(v89 + 88), *(void *)(v89 + 96), *(unsigned char *)(v89 + 104));
    long long v149 = 0uLL;
    long long v150 = 0uLL;
    long long v145 = 0uLL;
    uint64_t v131 = 0;
    uint64_t v133 = 0;
    uint64_t v143 = 0;
    uint64_t v147 = 0;
    uint64_t v148 = 0;
    uint64_t v58 = 0;
    unsigned __int8 v139 = 0;
    *(_OWORD *)(v89 + 48) = 0u;
    *(_OWORD *)(v89 + 64) = 0u;
    *(_OWORD *)(v89 + 16) = 0u;
    *(_OWORD *)(v89 + 32) = 0u;
    *(_OWORD *)uint64_t v89 = 0u;
    *(void *)(v89 + 80) = 0;
    *(_OWORD *)(v89 + 88) = xmmword_1B2EC01D0;
    *(unsigned char *)(v89 + 104) = 0;
    uint64_t v141 = 0x1FFFFFFFELL;
  }
  else
  {
LABEL_35:
    uint64_t v131 = v55;
    uint64_t v133 = v56;
    if (*(void *)(v161 + 8)) {
      sub_1B2D984EC();
    }
    uint64_t v127 = 0;
    unint64_t v135 = 0xE000000000000000;
    uint64_t v137 = MEMORY[0x1E4FBC860];
  }
  sub_1B299DF88();
  sub_1B29A0E6C();
  uint64_t v91 = v90();
  uint64_t v13 = v92;
  swift_bridgeObjectRelease();
  unint64_t v93 = v157[6];
  swift_retain();
  sub_1B2D981C4(v93);
  if (v129)
  {
    v157[11] = sub_1B2D97D68();
    swift_bridgeObjectRelease();
  }
  sub_1B2D5DB60(v36, v91, v13);
  swift_bridgeObjectRelease();
  *(void *)&__dst[0] = 0x7365697469746E65;
  *((void *)&__dst[0] + 1) = 0xEA0000000000203ALL;
  swift_beginAccess();
  uint64_t v94 = swift_bridgeObjectRetain();
  MEMORY[0x1B3EB1020](v94, MEMORY[0x1E4FBB1A0]);
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v95 = __dst[0];
  uint64_t v96 = v137;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B29B7048();
    uint64_t v96 = v109;
  }
  unint64_t v98 = *(void *)(v96 + 16);
  unint64_t v97 = *(void *)(v96 + 24);
  if (v98 >= v97 >> 1)
  {
    sub_1B29999F8(v97);
    sub_1B29B7048();
    uint64_t v96 = v110;
  }
  *(void *)(v96 + 16) = v98 + 1;
  *(_OWORD *)(v96 + 16 * v98 + 32) = v95;
  uint64_t v99 = v161 + *(int *)(type metadata accessor for QueryContext() + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1B2E3155C();
  uint64_t v100 = *(void *)(*(void *)(v99 + 16) + 16);
  sub_1B2E31B88(v100);
  uint64_t v101 = *(void *)(v99 + 16);
  *(void *)(v101 + 16) = v100 + 1;
  long long v102 = (void *)(v101 + 40 * v100);
  v102[4] = v152;
  v102[5] = v154;
  v102[6] = v127;
  v102[7] = v135;
  v102[8] = v96;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v99 + 16) = v101;
  uint64_t v103 = v157[5];
  if (v103)
  {
    swift_retain();
    sub_1B29A2168();
    sub_1B2A34A54(v149, *((uint64_t *)&v149 + 1), v150, *((uint64_t *)&v150 + 1), v145, *((uint64_t *)&v145 + 1), v131, v133, v143, v148, v147, v118, v120, v123);
    uint64_t v173 = v103;
    swift_release();
    *(void *)(v161 + 8) = v13;
    sub_1B2D5E230(v161, &v173, v157, v163, 0, v159, v24, v155);
    uint64_t v104 = sub_1B2D5CB70(__dst, v161, &v173, v157, v163 + 1, v159, v24, v155);
    long long v164 = __dst[1];
    long long v165 = __dst[0];
    long long v158 = __dst[3];
    long long v160 = __dst[2];
    long long v156 = __dst[4];
    long long v153 = __dst[5];
    uint64_t v105 = *(void *)&__dst[6];
    char v106 = BYTE8(__dst[6]);
    type metadata accessor for ResultGraph();
    uint64_t v107 = swift_allocObject();
    uint64_t v108 = MEMORY[0x1E4FBC860];
    *(void *)(v107 + 16) = sub_1B2E82148();
    *(void *)(v107 + 24) = v108;
    swift_release();
    swift_release();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v169);
    swift_release();
    *(void *)(v161 + 8) = v107;
    *(_OWORD *)uint64_t v162 = v165;
    *(_OWORD *)(v162 + 16) = v164;
    *(_OWORD *)(v162 + 32) = v160;
    *(_OWORD *)(v162 + 48) = v158;
    *(_OWORD *)(v162 + 64) = v156;
    *(_OWORD *)(v162 + 80) = v153;
    *(void *)(v162 + 96) = v105;
    uint64_t v13 = v104;
    *(unsigned char *)(v162 + 104) = v106;
  }
  else
  {
    swift_release();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v169);
    *(_OWORD *)uint64_t v162 = v149;
    *(_OWORD *)(v162 + 16) = v150;
    *(_OWORD *)(v162 + 32) = v145;
    *(void *)(v162 + 48) = v131;
    *(void *)(v162 + 56) = v133;
    *(void *)(v162 + 64) = v143;
    *(void *)(v162 + 72) = v148;
    *(void *)(v162 + 80) = v147;
    *(void *)(v162 + 88) = v141;
    *(void *)(v162 + 96) = v58;
    *(unsigned char *)(v162 + 104) = v139;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1B2D5DA20(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a5;
  sub_1B2D5DC2C(a1, a2, 1, a3, a4, a5);
  if (!v5)
  {
    type metadata accessor for KnosisQueryParam();
    uint64_t v11 = sub_1B2E82148();
    type metadata accessor for QueryNode();
    swift_initStackObject();
    uint64_t v12 = sub_1B2DC3EA4(0, 0xE000000000000000, v11);
    uint64_t v6 = sub_1B2D5CB70((uint64_t)v14, a1, (uint64_t)a2, v12, 1, a3, a4, v6);
    sub_1B2A34A54(v14[0], v14[1], v14[2], v14[3], v14[4], v14[5], v14[6], v14[7], v14[8], v14[9], v14[10], v14[11], v14[12], v15);
    swift_release();
  }
  return v6;
}

uint64_t sub_1B2D5DB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a2 + 16) && sub_1B2D971EC())
  {
    type metadata accessor for ResultGraph();
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    *(void *)(v5 + 16) = sub_1B2E82148();
    *(void *)(v5 + 24) = v6;
    swift_release();
    *(void *)(a1 + 8) = v5;
  }
  if (!*(void *)(a1 + 8) || (uint64_t result = sub_1B2D971EC(), (result & 1) != 0))
  {
    swift_retain();
    uint64_t result = swift_release();
    *(void *)(a1 + 8) = a3;
  }
  return result;
}

uint64_t sub_1B2D5DC2C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3 >= 25)
  {
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B2D5F724();
    uint64_t v109 = v40;
    uint64_t v110 = 0x80000001B2E9D8F0;
    *(void *)&long long v105 = 25;
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2D5F68C();
  }
  else
  {
    uint64_t result = sub_1B2D5E8BC((uint64_t)a2, a4, a5, a6);
    if (v6) {
      return result;
    }
    sub_1B2D5EC1C(a1, a2, a4);
    int64_t v14 = (void *)*a2;
    if (!*(void *)(*a2 + 48)) {
      v14[6] = 20;
    }
    if (*(void *)(a5 + 16))
    {
      uint64_t v15 = v14[2];
      uint64_t v16 = v14[3];
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1B29DB060(v15, v16, v17, v18, v19, v20, v21, v22, v62, v66, v71, v76, v81, v85, v89, v93, v97, v101, v105,
              *((uint64_t *)&v105 + 1),
              v106,
              v107,
              v108,
              v109,
              v110,
              v111);
      if (v24)
      {
        sub_1B29A2180(v23, *(void *)(a5 + 56), v63, v67, v72, v77, v82, v86, v90, v94, v98, v102);
        swift_bridgeObjectRelease();
        if (v107)
        {
          sub_1B29D1D20(&v105, (uint64_t)&v109);
          uint64_t v26 = v112;
          uint64_t v25 = v113;
          sub_1B29AEC7C(&v109, v112);
          uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))(v25 + 24);
          uint64_t v114 = a1;
          char v28 = v27(a1, a4, a5, a6, a2, v26, v25);
          uint64_t v29 = v114;
          if (v28)
          {
            if (!*(void *)(a5 + 16)) {
              goto LABEL_61;
            }
            uint64_t v30 = *(void *)(*a2 + 16);
            uint64_t v31 = *(void *)(*a2 + 24);
            swift_bridgeObjectRetain();
            uint64_t v38 = sub_1B29DB060(v30, v31, v32, v33, v34, v35, v36, v37, v64, v68, v73, v78, v83, v87, v91, v95, v99, v103, v105,
                    *((uint64_t *)&v105 + 1),
                    v106,
                    v107,
                    v108,
                    v109,
                    v110,
                    v111);
            if (v39) {
              sub_1B29A2180(v38, *(void *)(a5 + 56), v65, v69, v74, v79, v84, v88, v92, v96, v100, v104);
            }
            else {
              sub_1B299DFB0();
            }
            swift_bridgeObjectRelease();
            if (!v107)
            {
LABEL_62:
              __break(1u);
              JUMPOUT(0x1B2D5E20CLL);
            }
            _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v109);
            sub_1B29D1D20(&v105, (uint64_t)&v109);
            sub_1B2D5EC1C(v29, a2, a4);
          }
          uint64_t v45 = *a2;
          switch(*(unsigned char *)(*a2 + 64))
          {
            case 1:
              sub_1B2D5F710();
              break;
            case 2:
              swift_bridgeObjectRelease();
              goto LABEL_33;
            case 3:
              uint64_t v46 = sub_1B2D5F6A4();
              goto LABEL_28;
            case 4:
              sub_1B299D59C();
              break;
            case 5:
              sub_1B29A5370();
              break;
            case 6:
              uint64_t v46 = sub_1B2D5F6E0();
LABEL_28:
              sub_1B29A26F8(v46);
              break;
            case 7:
              sub_1B29A4924();
              break;
            case 8:
              sub_1B2D5F6D0();
              break;
            default:
              break;
          }
          char v47 = sub_1B299FB94();
          swift_bridgeObjectRelease();
          if ((v47 & 1) == 0)
          {
            uint64_t v48 = v112;
            uint64_t v49 = v113;
            sub_1B29AEC7C(&v109, v112);
            (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 32))(&v105, v114, v45, v48, v49);
            *(unsigned char *)(v45 + 64) = v105;
          }
LABEL_33:
          sub_1B299D804();
          if (*(void *)(v45 + 32))
          {
            uint64_t v50 = *(void *)(v45 + 32);
          }
          else
          {
            type metadata accessor for KnosisQueryParam();
            uint64_t v50 = sub_1B2E82148();
          }
          uint64_t v75 = v50 + 64;
          sub_1B299F9C0();
          unint64_t v53 = v52 & v51;
          int64_t v80 = (unint64_t)(v54 + 63) >> 6;
          uint64_t v70 = a3 + 1;
          swift_bridgeObjectRetain();
          int64_t v55 = 0;
          while (1)
          {
            if (v53)
            {
              unint64_t v56 = __clz(__rbit64(v53));
              v53 &= v53 - 1;
              unint64_t v57 = v56 | (v55 << 6);
            }
            else
            {
              if (__OFADD__(v55++, 1))
              {
                __break(1u);
LABEL_59:
                __break(1u);
LABEL_60:
                __break(1u);
LABEL_61:
                sub_1B299DFB0();
                goto LABEL_62;
              }
              if (v55 >= v80) {
                goto LABEL_57;
              }
              unint64_t v59 = *(void *)(v75 + 8 * v55);
              if (!v59)
              {
                int64_t v60 = v55 + 1;
                if (v55 + 1 >= v80) {
                  goto LABEL_57;
                }
                unint64_t v59 = *(void *)(v75 + 8 * v60);
                if (!v59)
                {
                  int64_t v60 = v55 + 2;
                  if (v55 + 2 >= v80) {
                    goto LABEL_57;
                  }
                  unint64_t v59 = *(void *)(v75 + 8 * v60);
                  if (!v59)
                  {
                    int64_t v60 = v55 + 3;
                    if (v55 + 3 >= v80)
                    {
LABEL_57:
                      swift_release();
                      return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v109);
                    }
                    unint64_t v59 = *(void *)(v75 + 8 * v60);
                    if (!v59)
                    {
                      while (1)
                      {
                        int64_t v55 = v60 + 1;
                        if (__OFADD__(v60, 1)) {
                          goto LABEL_59;
                        }
                        if (v55 >= v80) {
                          goto LABEL_57;
                        }
                        unint64_t v59 = *(void *)(v75 + 8 * v55);
                        ++v60;
                        if (v59) {
                          goto LABEL_49;
                        }
                      }
                    }
                  }
                }
                int64_t v55 = v60;
              }
LABEL_49:
              unint64_t v53 = (v59 - 1) & v59;
              unint64_t v57 = __clz(__rbit64(v59)) + (v55 << 6);
            }
            uint64_t v61 = *(void *)(*(void *)(v50 + 56) + 8 * v57);
            sub_1B299D804();
            if (*(void *)(v61 + 24))
            {
              sub_1B2D5F670();
              if (!*(void *)(v61 + 24)) {
                goto LABEL_60;
              }
              swift_retain();
              sub_1B2D5DC2C(v114, v61 + 24, v70, a4, a5, a6);
              swift_endAccess();
              swift_release();
            }
          }
        }
      }
      else
      {
        sub_1B2D5F6F0();
      }
    }
    else
    {
      sub_1B299DFB0();
    }
    sub_1B2A349F4((uint64_t)&v105);
    uint64_t v109 = 0;
    uint64_t v110 = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    uint64_t v109 = 0x726F74617265706FLL;
    uint64_t v110 = 0xE900000000000020;
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B29A322C();
  }
  sub_1B2E82518();
  uint64_t v41 = v109;
  uint64_t v42 = v110;
  sub_1B29D53EC();
  uint64_t v43 = swift_allocError();
  *uint64_t v44 = v41;
  v44[1] = v42;
  return sub_1B2D5F6B4(v43, (uint64_t)v44);
}

uint64_t sub_1B2D5E230(uint64_t a1, void *a2, void *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a4 >= 25)
  {
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B2D5F724();
    uint64_t v121 = v34;
    uint64_t v122 = 0x80000001B2E9D8F0;
    *(void *)&long long v116 = 25;
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2D5F68C();
LABEL_16:
    sub_1B2E82518();
    uint64_t v35 = v121;
    uint64_t v36 = v122;
    sub_1B29D53EC();
    uint64_t v37 = swift_allocError();
    *uint64_t v38 = v35;
    v38[1] = v36;
    return sub_1B2D5F6B4(v37, (uint64_t)v38);
  }
  uint64_t v9 = v8;
  uint64_t v125 = a1;
  sub_1B2D5EC1C(a1, a2, a6);
  uint64_t v17 = (void *)*a2;
  if (!*(void *)(*a2 + 48)) {
    v17[6] = 20;
  }
  if (!*(void *)(a7 + 16))
  {
    sub_1B299DFB0();
    goto LABEL_15;
  }
  uint64_t v89 = a6;
  uint64_t v18 = v17[2];
  uint64_t v19 = v17[3];
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1B29DB060(v18, v19, v20, v21, v22, v23, v24, v25, v76, v81, v86, v89, v92, v96, v100, v104, v108, v112, v116,
          *((uint64_t *)&v116 + 1),
          v117,
          v118,
          v119,
          v120,
          v121,
          v122);
  if ((v27 & 1) == 0)
  {
    sub_1B299DFB0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_1B29A2180(v26, *(void *)(a7 + 56), v77, v82, v87, v90, v93, v97, v101, v105, v109, v113);
  swift_bridgeObjectRelease();
  if (!v118)
  {
LABEL_15:
    sub_1B2A349F4((uint64_t)&v116);
    sub_1B299EAF0();
    swift_bridgeObjectRelease();
    sub_1B29A0E80();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B29A322C();
    goto LABEL_16;
  }
  uint64_t v88 = a7;
  sub_1B29D1D20(&v116, (uint64_t)&v121);
  uint64_t v29 = a3[2];
  uint64_t v28 = a3[3];
  uint64_t v30 = qword_1EB7D96D0;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  sub_1B29FB4D4(v29, v28, qword_1EB7F3388);
  char v32 = v31;
  swift_bridgeObjectRelease();
  if (v32 & 1) != 0 || ((uint64_t v40 = (void *)a3[5], v17 == v40) ? (v41 = v40 == 0) : (v41 = 1), !v41 || (a5))
  {
    uint64_t v33 = a8;
    sub_1B2D5F194(v125, a2, v91, v88);
    if (v9) {
      return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v121);
    }
  }
  else
  {
    uint64_t v33 = a8;
  }
  uint64_t v42 = v123;
  uint64_t v43 = v124;
  sub_1B29AEC7C(&v121, v123);
  uint64_t v44 = v91;
  char v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))(v43 + 24))(v125, v91, v88, v33, a2, v42, v43);
  if (!v9)
  {
    if (v45)
    {
      uint64_t v46 = v88;
      if (!*(void *)(v88 + 16)) {
        goto LABEL_78;
      }
      uint64_t v47 = *(void *)(*a2 + 16);
      uint64_t v48 = *(void *)(*a2 + 24);
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1B29DB060(v47, v48, v49, v50, v51, v52, v53, v54, v78, v83, v88, v91, v94, v98, v102, v106, v110, v114, v116,
              *((uint64_t *)&v116 + 1),
              v117,
              v118,
              v119,
              v120,
              v121,
              v122);
      if (v56) {
        sub_1B29A2180(v55, *(void *)(v46 + 56), v79, v84, v88, v91, v95, v99, v103, v107, v111, v115);
      }
      else {
        sub_1B299DFB0();
      }
      swift_bridgeObjectRelease();
      if (!v118)
      {
LABEL_79:
        __break(1u);
        JUMPOUT(0x1B2D5E898);
      }
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v121);
      sub_1B29D1D20(&v116, (uint64_t)&v121);
      sub_1B2D5EC1C(v125, a2, v44);
    }
    uint64_t v57 = *a2;
    switch(*(unsigned char *)(v57 + 64))
    {
      case 1:
        sub_1B2D5F710();
        break;
      case 2:
        swift_bridgeObjectRelease();
        goto LABEL_45;
      case 3:
        uint64_t v58 = sub_1B2D5F6A4();
        goto LABEL_40;
      case 4:
        sub_1B299D59C();
        break;
      case 5:
        sub_1B29A5370();
        break;
      case 6:
        uint64_t v58 = sub_1B2D5F6E0();
LABEL_40:
        sub_1B29A26F8(v58);
        break;
      case 7:
        sub_1B29A4924();
        break;
      case 8:
        sub_1B2D5F6D0();
        break;
      default:
        break;
    }
    char v59 = sub_1B299FB94();
    swift_bridgeObjectRelease();
    if ((v59 & 1) == 0)
    {
      uint64_t v60 = v123;
      uint64_t v61 = v124;
      sub_1B29AEC7C(&v121, v123);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 32))(&v116, v125, v57, v60, v61);
      *(unsigned char *)(v57 + 64) = v116;
    }
LABEL_45:
    BOOL v62 = *(void *)(v57 + 16) == 0x68636165726F66 && *(void *)(v57 + 24) == 0xE700000000000000;
    if (!v62 && (sub_1B2E837A8() & 1) == 0)
    {
      sub_1B299D804();
      if (*(void *)(v57 + 32))
      {
        uint64_t v63 = *(void *)(v57 + 32);
      }
      else
      {
        type metadata accessor for KnosisQueryParam();
        uint64_t v63 = sub_1B2E82148();
      }
      uint64_t v64 = v63 + 64;
      sub_1B299F9C0();
      unint64_t v67 = v66 & v65;
      uint64_t v80 = a4 + 1;
      int64_t v85 = (unint64_t)(v68 + 63) >> 6;
      swift_bridgeObjectRetain();
      int64_t v69 = 0;
      while (1)
      {
        if (v67)
        {
          unint64_t v70 = __clz(__rbit64(v67));
          v67 &= v67 - 1;
          unint64_t v71 = v70 | (v69 << 6);
        }
        else
        {
          if (__OFADD__(v69++, 1))
          {
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            sub_1B299DFB0();
            goto LABEL_79;
          }
          if (v69 >= v85) {
            goto LABEL_74;
          }
          unint64_t v73 = *(void *)(v64 + 8 * v69);
          if (!v73)
          {
            int64_t v74 = v69 + 1;
            if (v69 + 1 >= v85) {
              goto LABEL_74;
            }
            unint64_t v73 = *(void *)(v64 + 8 * v74);
            if (!v73)
            {
              int64_t v74 = v69 + 2;
              if (v69 + 2 >= v85) {
                goto LABEL_74;
              }
              unint64_t v73 = *(void *)(v64 + 8 * v74);
              if (!v73)
              {
                int64_t v74 = v69 + 3;
                if (v69 + 3 >= v85)
                {
LABEL_74:
                  swift_release();
                  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v121);
                }
                unint64_t v73 = *(void *)(v64 + 8 * v74);
                if (!v73)
                {
                  while (1)
                  {
                    int64_t v69 = v74 + 1;
                    if (__OFADD__(v74, 1)) {
                      goto LABEL_76;
                    }
                    if (v69 >= v85) {
                      goto LABEL_74;
                    }
                    unint64_t v73 = *(void *)(v64 + 8 * v69);
                    ++v74;
                    if (v73) {
                      goto LABEL_66;
                    }
                  }
                }
              }
            }
            int64_t v69 = v74;
          }
LABEL_66:
          unint64_t v67 = (v73 - 1) & v73;
          unint64_t v71 = __clz(__rbit64(v73)) + (v69 << 6);
        }
        uint64_t v75 = *(void *)(*(void *)(v63 + 56) + 8 * v71);
        sub_1B299D804();
        if (*(void *)(v75 + 24))
        {
          sub_1B2D5F670();
          if (!*(void *)(v75 + 24)) {
            goto LABEL_77;
          }
          swift_retain();
          sub_1B2D5E230(v125, v75 + 24, v57, v80, 0, v91, v88, v33);
          swift_endAccess();
          swift_release();
        }
      }
    }
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v121);
}

uint64_t sub_1B2D5E8BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v26)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  long long v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void v77[3];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  uint64_t v5 = v4;
  uint64_t v6 = *(void *)result;
  uint64_t v7 = *(void **)(*(void *)result + 40);
  if (!v7) {
    return result;
  }
  uint64_t v11 = (void *)result;
  swift_retain();
  if ((sub_1B2D5F45C(v6, (uint64_t)v7) & 1) == 0) {
    return swift_release();
  }
  if (!*(void *)(a3 + 16))
  {
    sub_1B299DFB0();
    goto LABEL_10;
  }
  uint64_t v12 = v7[2];
  uint64_t v13 = v7[3];
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1B29DB060(v12, v13, v14, v15, v16, v17, v18, v19, v44, v47, v51, v54, v56, v58, v60, v62, v64, v66, v68,
          *((uint64_t *)&v68 + 1),
          v69,
          v70,
          v71,
          v72,
          v73,
          v74);
  if ((v21 & 1) == 0)
  {
    sub_1B2D5F6F0();
    goto LABEL_10;
  }
  sub_1B29A2180(v20, *(void *)(a3 + 56), v45, v48, v52, v55, v57, v59, v61, v63, v65, v67);
  swift_bridgeObjectRelease();
  if (!v70)
  {
LABEL_10:
    sub_1B2A349F4((uint64_t)&v68);
    sub_1B299EAF0();
    swift_bridgeObjectRelease();
    sub_1B29A0E80();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B29A322C();
    sub_1B2E82518();
    char v27 = v73;
    uint64_t v28 = v74;
    sub_1B29D53EC();
    uint64_t v29 = swift_allocError();
    *uint64_t v30 = v27;
    v30[1] = v28;
    sub_1B2D5F6B4(v29, (uint64_t)v30);
    return swift_release();
  }
  uint64_t v49 = a4;
  uint64_t v53 = a2;
  sub_1B29D1D20(&v68, (uint64_t)&v73);
  uint64_t v22 = v76;
  uint64_t v80 = v75;
  sub_1B29AEC7C(&v73, v75);
  uint64_t v23 = v7[2];
  uint64_t v24 = v7[3];
  uint64_t v25 = *(void *)(v22 + 8);
  uint64_t v26 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8);
  swift_bridgeObjectRetain();
  v26(v77, v23, v24, v80, v25);
  if (v5)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v73);
  }
  swift_bridgeObjectRelease();
  char v32 = v78;
  char v31 = v79;
  uint64_t v33 = sub_1B2DC1AE4(v78, v79);
  if (v33)
  {
    uint64_t v34 = v33;
    sub_1B299D804();
    uint64_t v35 = *(void *)(v34 + 24);
    swift_retain();
    swift_release();
    if (v35)
    {
      swift_release();
      goto LABEL_22;
    }
  }
  uint64_t v80 = v32;
  *(void *)(v6 + 40) = 0;
  swift_release();
  uint64_t v36 = v7 + 4;
  swift_beginAccess();
  if (!v7[4])
  {
    type metadata accessor for KnosisQueryParam();
    *uint64_t v36 = sub_1B2E82148();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for KnosisQueryParam();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v37 = swift_retain();
  uint64_t v38 = sub_1B2DC6148(v37);
  uint64_t result = sub_1B2D5F670();
  if (*v36)
  {
    sub_1B2B2A11C(v38, v80, v31, v39, v40, v41, v42, v43, v46, v49);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    *uint64_t v11 = v7;
    if (!v7[5])
    {
      sub_1B2CCEBDC((uint64_t)v77);
      return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v73);
    }
    swift_retain();
    sub_1B2D5E8BC(v11, v53, a3, v50);
LABEL_22:
    sub_1B2CCEBDC((uint64_t)v77);
    swift_release();
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v73);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2D5EC1C(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v38)(uint64_t *__return_ptr, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  uint64_t v89 = a1;
  uint64_t v78 = a2;
  uint64_t v4 = *a2;
  swift_beginAccess();
  if (*(void *)(v4 + 32))
  {
    uint64_t v5 = *(void *)(v4 + 32);
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    uint64_t v5 = sub_1B2E82148();
  }
  uint64_t v76 = v5 + 64;
  sub_1B299F9C0();
  unint64_t v8 = v7 & v6;
  uint64_t v77 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  uint64_t v75 = v5;
  if (!v8) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v11 = __clz(__rbit64(v8));
  uint64_t v12 = (v8 - 1) & v8;
  int64_t v85 = v10;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v16 << 6))
  {
    uint64_t v83 = v12;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
    uint64_t v19 = v18[1];
    uint64_t v87 = *v18;
    uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * i);
    char v21 = (void *)(v20 + 16);
    swift_beginAccess();
    uint64_t v22 = *(void *)(v20 + 16);
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23)
    {
      uint64_t v80 = v20 + 16;
      uint64_t v81 = v20;
      uint64_t v24 = (uint64_t *)(v20 + 24);
      swift_retain_n();
      uint64_t v82 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_beginAccess();
      uint64_t v79 = v22;
      uint64_t v25 = (unint64_t *)(v22 + 40);
      uint64_t v26 = MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v27 = *(v25 - 1);
        unint64_t v28 = *v25;
        uint64_t v29 = *(void *)(a3 + 16);
        swift_bridgeObjectRetain();
        if (v29)
        {
          swift_bridgeObjectRetain();
          uint64_t v36 = sub_1B29DB060(v27, v28, v30, v31, v32, v33, v34, v35, v75, v76, v77, (uint64_t)v78, v79, v80, v81, v82, v83, v85, v87,
                  v89,
                  (uint64_t)v90,
                  v92,
                  v93,
                  v94,
                  v95,
                  v96);
          if (v37)
          {
            uint64_t v38 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(a3 + 56) + 16 * v36);
            swift_retain();
            swift_bridgeObjectRelease();
            v38(&v92, v89);
            swift_release();
            uint64_t v40 = v92;
            char v39 = v93;
            BOOL v41 = v94;
            if (v94)
            {
              swift_retain();
              swift_bridgeObjectRelease();
              *uint64_t v24 = v41;
              swift_release();
              swift_release();
              uint64_t v27 = 0;
              unint64_t v28 = 0xE000000000000000;
            }
            if (v39)
            {
              swift_bridgeObjectRelease();
              uint64_t v27 = v40;
              unint64_t v28 = v39;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v42 = HIBYTE(v28) & 0xF;
        if ((v28 & 0x2000000000000000) == 0) {
          uint64_t v42 = v27 & 0xFFFFFFFFFFFFLL;
        }
        if (v42)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B29B7048();
            uint64_t v26 = v45;
          }
          uint64_t v43 = *(void *)(v26 + 16);
          if (v43 >= *(void *)(v26 + 24) >> 1)
          {
            sub_1B29B7048();
            uint64_t v26 = v46;
          }
          *(void *)(v26 + 16) = v43 + 1;
          uint64_t v44 = v26 + 16 * v43;
          *(void *)(v44 + 32) = v27;
          *(void *)(v44 + 40) = v28;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v25 += 2;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      char v21 = (void *)v80;
      uint64_t v20 = v81;
      uint64_t v5 = v75;
      uint64_t v19 = v82;
    }
    else
    {
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v26 = MEMORY[0x1E4FBC860];
    }
    *char v21 = v26;
    swift_bridgeObjectRelease();
    uint64_t v47 = *v78;
    uint64_t v48 = (uint64_t *)(*v78 + 32);
    swift_beginAccess();
    if (!*(void *)(v47 + 32)) {
      break;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v49 = *v48;
    uint64_t v91 = *v48;
    *uint64_t v48 = 0x8000000000000000;
    uint64_t v50 = v19;
    uint64_t v57 = sub_1B29DB060(v87, v19, v51, v52, v53, v54, v55, v56, v75, v76, v77, (uint64_t)v78, v79, v80, v81, v82, v83, v85, v87,
            v89,
            v91,
            v92,
            v93,
            v94,
            v95,
            v96);
    if (__OFADD__(*(void *)(v49 + 16), (v58 & 1) == 0))
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      break;
    }
    char v59 = v57;
    uint64_t v60 = v58;
    sub_1B29A3EB4(&qword_1EB7D9868);
    if (sub_1B2E83398())
    {
      unint64_t v67 = sub_1B29DB060(v88, v50, v61, v62, v63, v64, v65, v66, v75, v76, v77, (uint64_t)v78, v79, v80, v81, v82, v84, v86, v88,
              v89,
              (uint64_t)v90,
              v92,
              v93,
              v94,
              v95,
              v96);
      if ((v60 & 1) != (v68 & 1)) {
        goto LABEL_58;
      }
      char v59 = v67;
    }
    if (v60)
    {
      int64_t v69 = v90[7];
      swift_release();
      *(void *)(v69 + 8 * v59) = v20;
    }
    else
    {
      v90[(v59 >> 6) + 8] |= 1 << v59;
      unint64_t v70 = (uint64_t *)(v90[6] + 16 * v59);
      *unint64_t v70 = v88;
      v70[1] = v50;
      *(void *)(v90[7] + 8 * v59) = v20;
      unint64_t v71 = v90[2];
      uint64_t v72 = __OFADD__(v71, 1);
      unint64_t v73 = v71 + 1;
      if (v72) {
        goto LABEL_54;
      }
      v90[2] = v73;
      swift_bridgeObjectRetain();
    }
    *uint64_t v48 = (uint64_t)v90;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
    swift_bridgeObjectRelease();
    unint64_t v8 = v84;
    uint64_t v10 = v86;
    if (v84) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_55;
    }
    if (v14 >= v77) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v76 + 8 * v14);
    int64_t v16 = v10 + 1;
    if (!v15)
    {
      int64_t v16 = v10 + 2;
      if (v10 + 2 >= v77) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v76 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v10 + 3;
        if (v10 + 3 >= v77) {
          return swift_release();
        }
        unint64_t v15 = *(void *)(v76 + 8 * v16);
        if (!v15)
        {
          uint64_t v17 = v10 + 4;
          if (v10 + 4 >= v77) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v76 + 8 * v17);
          if (!v15)
          {
            while (1)
            {
              int64_t v16 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_56;
              }
              if (v16 >= v77) {
                return swift_release();
              }
              unint64_t v15 = *(void *)(v76 + 8 * v16);
              ++v17;
              if (v15) {
                goto LABEL_19;
              }
            }
          }
          int64_t v16 = v10 + 4;
        }
      }
    }
LABEL_19:
    uint64_t v12 = (v15 - 1) & v15;
    int64_t v85 = v16;
  }
  __break(1u);
LABEL_58:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2D5F194(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void (*v26)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  long long v33;
  long long v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  uint64_t v5 = v4;
  unint64_t v8 = (void *)*a2;
  uint64_t v9 = (void *)(*a2 + 32);
  uint64_t result = swift_beginAccess();
  if (!v8[4]) {
    return result;
  }
  if (!*(void *)(a4 + 16))
  {
    uint64_t v35 = 0;
    uint64_t v33 = 0u;
    uint64_t v34 = 0u;
LABEL_13:
    sub_1B2A349F4((uint64_t)&v33);
    uint64_t v36 = 0;
    char v37 = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    uint64_t v36 = 0x726F74617265706FLL;
    char v37 = 0xE900000000000020;
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    uint64_t v30 = v36;
    uint64_t v31 = v37;
    sub_1B29D53EC();
    swift_allocError();
    *(void *)uint64_t v32 = v30;
    *(void *)(v32 + 8) = v31;
    *(unsigned char *)(v32 + 16) = 1;
    return swift_willThrow();
  }
  uint64_t v11 = v8[2];
  uint64_t v12 = v8[3];
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1B29DB060(v11, v12, v13, v14, v15, v16, v17, v18, v33, *((uint64_t *)&v33 + 1), v34, *((uint64_t *)&v34 + 1), v35, v36, v37, v38, v39, v40, v41,
          v42,
          v43,
          v44[0],
          v44[1],
          v44[2],
          v45,
          v46);
  if (v20)
  {
    sub_1B29C3B84(*(void *)(a4 + 56) + 40 * v19, (uint64_t)&v33);
  }
  else
  {
    uint64_t v35 = 0;
    uint64_t v33 = 0u;
    uint64_t v34 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v34 + 1)) {
    goto LABEL_13;
  }
  uint64_t v47 = a1;
  sub_1B29D1D20(&v33, (uint64_t)&v36);
  uint64_t v21 = v39;
  uint64_t v22 = v40;
  sub_1B29AEC7C(&v36, v39);
  uint64_t v23 = v8[2];
  uint64_t v24 = v8[3];
  uint64_t v25 = *(void *)(v22 + 8);
  uint64_t v26 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8);
  swift_bridgeObjectRetain();
  v26(v44, v23, v24, v21, v25);
  swift_bridgeObjectRelease();
  if (!v5)
  {
    uint64_t result = swift_beginAccess();
    if (!*v9)
    {
      __break(1u);
      return result;
    }
    uint64_t v27 = v45;
    unint64_t v28 = v46;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1B29B2540(v27, v28);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
    if (!v29)
    {
      if (*(void *)(v47 + 8)) {
        sub_1B2D97D68();
      }
      sub_1B2DC2028(v27, v28);
      swift_bridgeObjectRelease();
    }
    sub_1B2CCEBDC((uint64_t)v44);
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v36);
}

uint64_t sub_1B2D5F45C(uint64_t a1, uint64_t a2)
{
  switch(*(unsigned char *)(a2 + 64))
  {
    case 2:
      swift_bridgeObjectRelease();
      return 0;
    case 3:
      sub_1B2D5F6A4();
      goto LABEL_8;
    case 6:
      sub_1B2D5F6E0();
      goto LABEL_8;
    case 7:
      sub_1B29A4924();
      goto LABEL_8;
    case 8:
      sub_1B2D5F6D0();
      goto LABEL_8;
    default:
LABEL_8:
      char v5 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v5 & 1) == 0)
      {
        BOOL v6 = *(void *)(a2 + 16) == 0x7463656C657371 && *(void *)(a2 + 24) == 0xE700000000000000;
        if (v6 || (v7 = sub_1B2E837A8(), uint64_t result = 0, (v7 & 1) != 0))
        {
          if (*(void *)(a1 + 16) == 7370352 && *(void *)(a1 + 24) == 0xE300000000000000)
          {
            return 1;
          }
          else
          {
            return sub_1B2E837A8();
          }
        }
      }
      return result;
  }
}

uint64_t sub_1B2D5F670()
{
  return swift_beginAccess();
}

uint64_t sub_1B2D5F68C()
{
  return 0x6465686361657220;
}

uint64_t sub_1B2D5F6A4()
{
  return 0x47746E657665;
}

uint64_t sub_1B2D5F6B4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 16) = 1;
  return swift_willThrow();
}

unint64_t sub_1B2D5F6D0()
{
  return 0xD000000000000018;
}

uint64_t sub_1B2D5F6E0()
{
  return 0x476C61636F6CLL;
}

uint64_t sub_1B2D5F6F0()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B2D5F710()
{
  return 0xD000000000000010;
}

uint64_t destroy for Operators()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s20IntelligencePlatform9OperatorsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Operators(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Operators(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for Operators()
{
  return &type metadata for Operators;
}

void sub_1B2D5F8A8(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_1B29AEC7C(a1, v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 16))(v35, v2, v3);
  if (v1) {
    return;
  }
  char v4 = v37;
  uint64_t v5 = v36;
  unint64_t v6 = *(void *)(v36 + 16);
  if ((v37 & 1) == 0 && v6 >= 6)
  {
    sub_1B29A3EB4(&qword_1E9C42098);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1B2EC00A0;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    uint64_t v38 = 5;
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 32) = 0x2065646F4E71676BLL;
    *(void *)(v7 + 40) = 0xE800000000000000;
    sub_1B2E83958();
    swift_bridgeObjectRelease();
LABEL_30:
    sub_1B2CCEBDC((uint64_t)v35);
    return;
  }
  if (!v6) {
    goto LABEL_30;
  }
  unint64_t v8 = 0;
  uint64_t v32 = v36 + 32;
  unint64_t v33 = v6 - 1;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v30 = 16 * v6;
  uint64_t v10 = 5;
  char v29 = v37;
  unint64_t v27 = *(void *)(v36 + 16);
  uint64_t v28 = v36;
  while (1)
  {
    if (v8 >= *(void *)(v5 + 16)) {
      goto LABEL_33;
    }
    uint64_t v11 = (uint64_t *)(v32 + 16 * v8);
    uint64_t v12 = v11[1];
    uint64_t v34 = *v11;
    if ((v4 & 1) == 0 || v8 != v33)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B7048();
        uint64_t v9 = v25;
      }
      unint64_t v23 = *(void *)(v9 + 16);
      if (v23 >= *(void *)(v9 + 24) >> 1)
      {
        sub_1B2D61128();
        uint64_t v9 = v26;
      }
      *(void *)(v9 + 16) = v23 + 1;
      uint64_t v24 = v9 + 16 * v23;
      *(void *)(v24 + 32) = v34;
      *(void *)(v24 + 40) = v12;
      goto LABEL_29;
    }
    if (v6 <= 5) {
      break;
    }
LABEL_29:
    ++v8;
    --v10;
    if (v8 == v6) {
      goto LABEL_30;
    }
  }
  unint64_t v31 = v8;
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  uint64_t v14 = v30;
  while (1)
  {
    uint64_t v38 = v13;
    swift_bridgeObjectRetain();
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    unint64_t v15 = *(void *)(v9 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (v33 + v13 >= v15)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B29B7048();
        uint64_t v9 = v21;
      }
      unint64_t v18 = *(void *)(v9 + 16);
      if (v18 >= *(void *)(v9 + 24) >> 1)
      {
        sub_1B2D61128();
        uint64_t v9 = v22;
      }
      *(void *)(v9 + 16) = v18 + 1;
      uint64_t v19 = v9 + 16 * v18;
      *(void *)(v19 + 32) = v34;
      *(void *)(v19 + 40) = v12;
      goto LABEL_22;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B2CC3374();
      uint64_t v9 = v20;
    }
    if (v33 + v13 >= *(void *)(v9 + 16)) {
      break;
    }
    uint64_t v17 = v9 + v14;
    *(void *)(v17 + 16) = v34;
    *(void *)(v17 + 24) = v12;
    swift_bridgeObjectRelease();
LABEL_22:
    ++v13;
    v14 += 16;
    if (v10 == v13)
    {
      swift_bridgeObjectRelease();
      char v4 = v29;
      unint64_t v6 = v27;
      uint64_t v5 = v28;
      unint64_t v8 = v31;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t sub_1B2D5FC6C(uint64_t a1)
{
  uint64_t v123 = a1;
  uint64_t v120 = sub_1B2E80498();
  sub_1B299D31C();
  uint64_t v118 = v1;
  MEMORY[0x1F4188790](v2);
  sub_1B299E4A0();
  uint64_t v117 = v4 - v3;
  uint64_t v5 = sub_1B2C8FED8();
  uint64_t v151 = MEMORY[0x1E4FBC870];
  uint64_t v119 = v5;
  swift_bridgeObjectRetain();
  sub_1B29A3EB4(&qword_1EB7D9638);
  unint64_t v6 = (void *)sub_1B2E82148();
  if (qword_1EB7D96B0 != -1) {
    goto LABEL_72;
  }
LABEL_2:
  uint64_t v121 = qword_1EB7F3378 + 64;
  sub_1B299F9C0();
  unint64_t v9 = v8 & v7;
  int64_t v124 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v127 = v11;
  char v129 = &v148;
  uint64_t v115 = v124 - 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  if (v9)
  {
LABEL_3:
    unint64_t v13 = __clz(__rbit64(v9));
    uint64_t v14 = (v9 - 1) & v9;
    unint64_t v15 = v13 | (v12 << 6);
    goto LABEL_4;
  }
  while (1)
  {
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (v19 < v124)
    {
      unint64_t v20 = *(void *)(v121 + 8 * v19);
      if (v20) {
        goto LABEL_8;
      }
      v12 += 2;
      if (v19 + 1 >= v124)
      {
        uint64_t v12 = v19;
        goto LABEL_13;
      }
      unint64_t v20 = *(void *)(v121 + 8 * v12);
      if (v20)
      {
        ++v19;
        goto LABEL_8;
      }
      if (v19 + 2 < v124) {
        break;
      }
    }
LABEL_13:
    uint64_t v14 = 0;
    uint64_t v146 = 0;
    long long v144 = 0u;
    long long v145 = 0u;
    long long v143 = 0u;
LABEL_14:
    sub_1B2CCEB28((uint64_t)&v143, (uint64_t)&v147);
    if (!*((void *)&v147 + 1))
    {
      swift_release();
      uint64_t v41 = type metadata accessor for Virtual();
      uint64_t v42 = v123;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 16))(v117, v123, v120);
      sub_1B2E184CC(v117, v151, v43, v44, v45, v46, v47, v48, v114, v115);
      if (v134)
      {
        sub_1B2D60DD4(v123);
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      uint64_t v51 = v49;
      swift_beginAccess();
      uint64_t v52 = *(void *)(v51 + 128);
      uint64_t v120 = v52 + 64;
      sub_1B299F9C0();
      unint64_t v55 = v54 & v53;
      int64_t v122 = (unint64_t)(v56 + 63) >> 6;
      swift_retain();
      uint64_t v126 = v52;
      swift_bridgeObjectRetain();
      int64_t v57 = 0;
      uint64_t v125 = v51;
      if (v55)
      {
LABEL_35:
        unint64_t v58 = __clz(__rbit64(v55));
        uint64_t v59 = (v55 - 1) & v55;
        unint64_t v60 = v58 | (v57 << 6);
        goto LABEL_50;
      }
      while (1)
      {
        int64_t v61 = v57 + 1;
        if (__OFADD__(v57, 1)) {
          break;
        }
        if (v61 >= v122) {
          goto LABEL_66;
        }
        unint64_t v62 = *(void *)(v120 + 8 * v61);
        ++v57;
        if (!v62)
        {
          int64_t v57 = v61 + 1;
          if (v61 + 1 >= v122) {
            goto LABEL_66;
          }
          unint64_t v62 = *(void *)(v120 + 8 * v57);
          if (!v62)
          {
            int64_t v57 = v61 + 2;
            if (v61 + 2 >= v122) {
              goto LABEL_66;
            }
            unint64_t v62 = *(void *)(v120 + 8 * v57);
            if (!v62)
            {
              int64_t v63 = v61 + 3;
              if (v63 >= v122)
              {
LABEL_66:
                sub_1B2D60DD4(v42);
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                return v119;
              }
              unint64_t v62 = *(void *)(v120 + 8 * v63);
              if (!v62)
              {
                while (1)
                {
                  int64_t v57 = v63 + 1;
                  if (__OFADD__(v63, 1)) {
                    break;
                  }
                  if (v57 >= v122) {
                    goto LABEL_66;
                  }
                  unint64_t v62 = *(void *)(v120 + 8 * v57);
                  ++v63;
                  if (v62) {
                    goto LABEL_49;
                  }
                }
                __break(1u);
                goto LABEL_74;
              }
              int64_t v57 = v63;
            }
          }
        }
LABEL_49:
        uint64_t v59 = (v62 - 1) & v62;
        unint64_t v60 = __clz(__rbit64(v62)) + (v57 << 6);
LABEL_50:
        uint64_t v64 = (uint64_t *)(*(void *)(v126 + 48) + 16 * v60);
        uint64_t v65 = *v64;
        uint64_t v66 = v64[1];
        uint64_t v132 = *v64;
        if (v6[2])
        {
          swift_bridgeObjectRetain_n();
          uint64_t v73 = sub_1B29DB060(v65, v66, v67, v68, v69, v70, v71, v72, v114, v116, v117, v118, v119, v120, v122, v123, v125, v126, v127,
                  (uint64_t)v129,
                  v132,
                  v134,
                  v135,
                  *((uint64_t *)&v135 + 1),
                  v136,
                  v137);
          if (v74)
          {
            sub_1B29C3B84(v6[7] + 40 * v73, (uint64_t)&v147);
          }
          else
          {
            long long v149 = 0;
            long long v147 = 0u;
            long long v148 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((void *)&v148 + 1))
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            sub_1B2A349F4((uint64_t)&v147);
            sub_1B29D53EC();
            swift_allocError();
            *(void *)uint64_t v113 = 0xD000000000000020;
            *(void *)(v113 + 8) = 0x80000001B2EA2190;
            *(unsigned char *)(v113 + 16) = 0;
            swift_willThrow();
            sub_1B2D60DD4(v42);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            return swift_release();
          }
        }
        else
        {
          long long v149 = 0;
          long long v147 = 0u;
          long long v148 = 0u;
          swift_bridgeObjectRetain();
        }
        uint64_t v128 = v59;
        uint64_t v130 = v57;
        sub_1B2A349F4((uint64_t)&v147);
        *((void *)&v148 + 1) = v41;
        long long v149 = &off_1F0AC8120;
        *(void *)&long long v147 = v51;
        sub_1B29D1D20(&v147, (uint64_t)&v143);
        swift_retain();
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v142 = v6;
        sub_1B2A49CD8((uint64_t)&v143, *((uint64_t *)&v144 + 1));
        sub_1B299D31C();
        MEMORY[0x1F4188790](v75);
        sub_1B299E4A0();
        uint64_t v78 = (uint64_t *)(v77 - v76);
        (*(void (**)(uint64_t))(v79 + 16))(v77 - v76);
        uint64_t v80 = *v78;
        uint64_t v140 = v41;
        uint64_t v141 = &off_1F0AC8120;
        uint64_t v81 = v41;
        *(void *)&long long v139 = v80;
        uint64_t v88 = sub_1B29DB060(v132, v66, v82, v83, v84, v85, v86, v87, v114, v116, v117, v118, v119, v120, v122, v123, v125, v126, v128,
                v130,
                v132,
                v134,
                v135,
                *((uint64_t *)&v135 + 1),
                v136,
                v137);
        uint64_t v90 = v6[2];
        BOOL v91 = (v89 & 1) == 0;
        unint64_t v6 = (void *)(v90 + v91);
        if (__OFADD__(v90, v91)) {
          goto LABEL_69;
        }
        unint64_t v92 = v88;
        char v93 = v89;
        sub_1B29A3EB4(&qword_1EB7D9870);
        if (sub_1B2E83398())
        {
          uint64_t v100 = sub_1B29DB060(v133, v66, v94, v95, v96, v97, v98, v99, v114, v116, v117, v118, v119, v120, v122, v123, v125, v126, v127,
                   (uint64_t)v129,
                   v133,
                   v134,
                   v135,
                   *((uint64_t *)&v135 + 1),
                   v136,
                   v137);
          if ((v93 & 1) != (v101 & 1)) {
            goto LABEL_75;
          }
          unint64_t v92 = v100;
        }
        unint64_t v6 = v142;
        if (v93)
        {
          uint64_t v102 = v142[7] + 40 * v92;
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v102);
          sub_1B29D1D20(&v139, v102);
        }
        else
        {
          sub_1B2A49CD8((uint64_t)&v139, v140);
          sub_1B299D31C();
          MEMORY[0x1F4188790](v103);
          sub_1B299E4A0();
          uint64_t v106 = (uint64_t *)(v105 - v104);
          (*(void (**)(uint64_t))(v107 + 16))(v105 - v104);
          uint64_t v108 = *v106;
          uint64_t v137 = v81;
          uint64_t v138 = &off_1F0AC8120;
          *(void *)&long long v135 = v108;
          v6[(v92 >> 6) + 8] |= 1 << v92;
          uint64_t v109 = (uint64_t *)(v6[6] + 16 * v92);
          *uint64_t v109 = v133;
          v109[1] = v66;
          sub_1B29D1D20(&v135, v6[7] + 40 * v92);
          uint64_t v110 = v6[2];
          BOOL v111 = __OFADD__(v110, 1);
          uint64_t v112 = v110 + 1;
          if (v111) {
            goto LABEL_70;
          }
          id v6[2] = v112;
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v139);
          swift_bridgeObjectRetain();
        }
        uint64_t v41 = v81;
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v143);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v42 = v123;
        uint64_t v51 = v125;
        unint64_t v55 = v127;
        int64_t v57 = (int64_t)v129;
        if (v127) {
          goto LABEL_35;
        }
      }
LABEL_71:
      __break(1u);
LABEL_72:
      swift_once();
      goto LABEL_2;
    }
    swift_bridgeObjectRelease();
    sub_1B29D1D20(&v148, (uint64_t)&v143);
    uint64_t v21 = *((void *)&v144 + 1);
    uint64_t v22 = v145;
    sub_1B29AEC7C(&v143, *((uint64_t *)&v144 + 1));
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v22 + 16))(v150, v21, v22);
    if (v134)
    {
      swift_bridgeObjectRelease();
      sub_1B2D60DD4(v123);
      swift_release();
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v143);
LABEL_33:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v23 = v150[1];
    uint64_t v131 = v150[0];
    sub_1B29C3B84((uint64_t)&v143, (uint64_t)&v139);
    swift_bridgeObjectRetain();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v135 = v6;
    uint64_t v25 = v140;
    uint64_t v26 = (uint64_t)v141;
    sub_1B2A49CD8((uint64_t)&v139, v140);
    sub_1B299D31C();
    MEMORY[0x1F4188790](v27);
    sub_1B299E4A0();
    unint64_t v28 = v14;
    uint64_t v29 = v12;
    uint64_t v32 = v31 - v30;
    (*(void (**)(uint64_t))(v33 + 16))(v31 - v30);
    uint64_t v34 = v32;
    uint64_t v12 = v29;
    unint64_t v9 = v28;
    sub_1B2D60E30(v34, v131, v23, isUniquelyReferenced_nonNull_native, &v135, v25, v26);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v139);
    unint64_t v6 = (void *)v135;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B2A00B00((uint64_t)&v139, v131, v23, v35, v36, v37, v38, v39, v114, v115);
    sub_1B2CCEBDC((uint64_t)v150);
    swift_bridgeObjectRelease();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v143);
    if (v28) {
      goto LABEL_3;
    }
  }
  unint64_t v20 = *(void *)(v121 + 8 * (v19 + 2));
  if (v20)
  {
    v19 += 2;
    goto LABEL_8;
  }
  int64_t v40 = v19 + 3;
  if (v19 + 3 >= v124)
  {
    uint64_t v12 = v19 + 2;
    goto LABEL_13;
  }
  unint64_t v20 = *(void *)(v121 + 8 * v40);
  if (v20)
  {
    v19 += 3;
LABEL_8:
    uint64_t v14 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v12 = v19;
LABEL_4:
    uint64_t v16 = *(void *)(v127 + 56);
    uint64_t v17 = (void *)(*(void *)(v127 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    *(void *)&long long v143 = *v17;
    *((void *)&v143 + 1) = v18;
    sub_1B29C3B84(v16 + 40 * v15, (uint64_t)&v144);
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v19 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v19 >= v124)
    {
      uint64_t v12 = v115;
      goto LABEL_13;
    }
    unint64_t v20 = *(void *)(v121 + 8 * v19);
    ++v40;
    if (v20) {
      goto LABEL_8;
    }
  }
LABEL_74:
  __break(1u);
LABEL_75:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

#error "1B2D606C0: call analysis failed (funcsize=87)"

uint64_t sub_1B2D607DC()
{
  sub_1B29A3EB4(&qword_1EB7D9940);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B2EE41B0;
  *(void *)(v1 + 32) = 6579297;
  *(void *)(v1 + 40) = 0xE300000000000000;
  type metadata accessor for Add();
  sub_1B299DFC0();
  uint64_t v2 = sub_1B29D4924();
  *(void *)(v1 + 72) = v0;
  *(void *)(v1 + 80) = &off_1F0AC8120;
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 88) = 7105633;
  *(void *)(v1 + 96) = 0xE300000000000000;
  type metadata accessor for All();
  sub_1B299DFC0();
  uint64_t v3 = sub_1B29C6144();
  *(void *)(v1 + 128) = v0;
  *(void *)(v1 + 136) = &off_1F0AC8120;
  *(void *)(v1 + 104) = v3;
  *(void *)(v1 + 144) = 0x796C7069746C756DLL;
  *(void *)(v1 + 152) = 0xE800000000000000;
  type metadata accessor for Multiply();
  sub_1B299DFC0();
  uint64_t v4 = sub_1B29D4924();
  *(void *)(v1 + 184) = v0;
  *(void *)(v1 + 192) = &off_1F0AC8120;
  *(void *)(v1 + 160) = v4;
  *(void *)(v1 + 200) = 0x656469766964;
  *(void *)(v1 + 208) = 0xE600000000000000;
  type metadata accessor for Divide();
  sub_1B299DFC0();
  uint64_t v5 = sub_1B29D4924();
  *(void *)(v1 + 240) = v0;
  *(void *)(v1 + 248) = &off_1F0AC8120;
  *(void *)(v1 + 216) = v5;
  *(void *)(v1 + 256) = 6581857;
  *(void *)(v1 + 264) = 0xE300000000000000;
  type metadata accessor for And();
  sub_1B299DFC0();
  uint64_t v6 = sub_1B29C6B14();
  *(void *)(v1 + 296) = v0;
  *(void *)(v1 + 304) = &off_1F0AC8120;
  *(void *)(v1 + 272) = v6;
  *(void *)(v1 + 312) = 6780513;
  *(void *)(v1 + 320) = 0xE300000000000000;
  type metadata accessor for Avg();
  sub_1B299DFC0();
  uint64_t v7 = sub_1B29D4924();
  *(void *)(v1 + 352) = v0;
  *(void *)(v1 + 360) = &off_1F0AC8120;
  *(void *)(v1 + 328) = v7;
  *(void *)(v1 + 368) = 0x746E756F63;
  *(void *)(v1 + 376) = 0xE500000000000000;
  type metadata accessor for Count();
  sub_1B299DFC0();
  uint64_t v8 = sub_1B2A32778();
  *(void *)(v1 + 408) = v0;
  *(void *)(v1 + 416) = &off_1F0AC8120;
  *(void *)(v1 + 384) = v8;
  *(void *)(v1 + 424) = 0x797469746E65;
  *(void *)(v1 + 432) = 0xE600000000000000;
  type metadata accessor for EntityOperator();
  sub_1B299DFC0();
  uint64_t v9 = sub_1B2A72E0C();
  *(void *)(v1 + 464) = v0;
  *(void *)(v1 + 472) = &off_1F0AC8120;
  *(void *)(v1 + 440) = v9;
  *(void *)(v1 + 480) = 0x68636165726F66;
  *(void *)(v1 + 488) = 0xE700000000000000;
  type metadata accessor for ForEach();
  sub_1B299DFC0();
  uint64_t v10 = sub_1B2B4FE88();
  *(void *)(v1 + 520) = v0;
  *(void *)(v1 + 528) = &off_1F0AC8120;
  *(void *)(v1 + 496) = v10;
  *(void *)(v1 + 536) = 7628135;
  *(void *)(v1 + 544) = 0xE300000000000000;
  type metadata accessor for Get();
  sub_1B299DFC0();
  uint64_t v11 = sub_1B2B7F598();
  *(void *)(v1 + 576) = v0;
  *(void *)(v1 + 584) = &off_1F0AC8120;
  *(void *)(v1 + 552) = v11;
  *(void *)(v1 + 592) = 0x686374616DLL;
  *(void *)(v1 + 600) = 0xE500000000000000;
  type metadata accessor for Match();
  sub_1B299DFC0();
  uint64_t v12 = sub_1B2D4D40C();
  *(void *)(v1 + 632) = v0;
  *(void *)(v1 + 640) = &off_1F0AC8120;
  *(void *)(v1 + 608) = v12;
  *(void *)(v1 + 648) = 29295;
  *(void *)(v1 + 656) = 0xE200000000000000;
  type metadata accessor for Or();
  sub_1B299DFC0();
  uint64_t v13 = sub_1B2D6114C();
  *(void *)(v1 + 688) = v0;
  *(void *)(v1 + 696) = &off_1F0AC8120;
  *(void *)(v1 + 664) = v13;
  *(void *)(v1 + 704) = 7370352;
  *(void *)(v1 + 712) = 0xE300000000000000;
  type metadata accessor for Pvp();
  sub_1B299DFC0();
  uint64_t v14 = sub_1B2D7F404();
  *(void *)(v1 + 744) = v0;
  *(void *)(v1 + 752) = &off_1F0AC8120;
  *(void *)(v1 + 720) = v14;
  *(void *)(v1 + 760) = 1952802673;
  *(void *)(v1 + 768) = 0xE400000000000000;
  type metadata accessor for Qget();
  sub_1B299DFC0();
  uint64_t v15 = sub_1B2D7FF7C();
  *(void *)(v1 + 800) = v0;
  *(void *)(v1 + 808) = &off_1F0AC8120;
  *(void *)(v1 + 776) = v15;
  *(void *)(v1 + 816) = 0x746567706F727071;
  *(void *)(v1 + 824) = 0xE800000000000000;
  type metadata accessor for Qpropget();
  sub_1B299DFC0();
  uint64_t v16 = sub_1B2D8025C();
  *(void *)(v1 + 856) = v0;
  *(void *)(v1 + 864) = &off_1F0AC8120;
  *(void *)(v1 + 832) = v16;
  *(void *)(v1 + 872) = 0x7463656C657371;
  *(void *)(v1 + 880) = 0xE700000000000000;
  type metadata accessor for Qselect();
  sub_1B299DFC0();
  uint64_t v17 = sub_1B2D809BC();
  *(void *)(v1 + 912) = v0;
  *(void *)(v1 + 920) = &off_1F0AC8120;
  *(void *)(v1 + 888) = v17;
  *(void *)(v1 + 928) = 6452595;
  *(void *)(v1 + 936) = 0xE300000000000000;
  type metadata accessor for Sub();
  sub_1B299DFC0();
  uint64_t v18 = sub_1B29D4924();
  *(void *)(v1 + 968) = v0;
  *(void *)(v1 + 976) = &off_1F0AC8120;
  *(void *)(v1 + 944) = v18;
  *(void *)(v1 + 984) = 1954047348;
  *(void *)(v1 + 992) = 0xE400000000000000;
  type metadata accessor for Text();
  sub_1B299DFC0();
  uint64_t v19 = sub_1B2DD6100();
  *(void *)(v1 + 1024) = v0;
  *(void *)(v1 + 1032) = &off_1F0AC8120;
  *(void *)(v1 + 1000) = v19;
  *(void *)(v1 + 1040) = 0x656C70697274;
  *(void *)(v1 + 1048) = 0xE600000000000000;
  type metadata accessor for Triple();
  sub_1B299DFC0();
  uint64_t v20 = sub_1B2DE3618();
  *(void *)(v1 + 1080) = v0;
  *(void *)(v1 + 1088) = &off_1F0AC8120;
  *(void *)(v1 + 1056) = v20;
  strcpy((char *)(v1 + 1096), "renderDateTime");
  *(unsigned char *)(v1 + 1111) = -18;
  type metadata accessor for RenderDateTime();
  sub_1B299DFC0();
  uint64_t v21 = sub_1B2D8D7B0();
  *(void *)(v1 + 1136) = v0;
  *(void *)(v1 + 1144) = &off_1F0AC8120;
  *(void *)(v1 + 1112) = v21;
  *(void *)(v1 + 1152) = 29799;
  *(void *)(v1 + 1160) = 0xE200000000000000;
  type metadata accessor for GreaterThan();
  sub_1B299DFC0();
  uint64_t v22 = sub_1B2C3BC94();
  *(void *)(v1 + 1192) = v0;
  *(void *)(v1 + 1200) = &off_1F0AC8120;
  *(void *)(v1 + 1168) = v22;
  *(void *)(v1 + 1208) = 6648935;
  *(void *)(v1 + 1216) = 0xE300000000000000;
  type metadata accessor for GreaterThanEqual();
  sub_1B299DFC0();
  uint64_t v23 = sub_1B2C3BD5C();
  *(void *)(v1 + 1248) = v0;
  *(void *)(v1 + 1256) = &off_1F0AC8120;
  *(void *)(v1 + 1224) = v23;
  *(void *)(v1 + 1264) = 29804;
  *(void *)(v1 + 1272) = 0xE200000000000000;
  type metadata accessor for LessThan();
  sub_1B299DFC0();
  uint64_t v24 = sub_1B2D2A018();
  *(void *)(v1 + 1304) = v0;
  *(void *)(v1 + 1312) = &off_1F0AC8120;
  *(void *)(v1 + 1280) = v24;
  *(void *)(v1 + 1320) = 6648940;
  *(void *)(v1 + 1328) = 0xE300000000000000;
  type metadata accessor for LessThanEqual();
  sub_1B299DFC0();
  uint64_t v25 = sub_1B2D2A0E0();
  *(void *)(v1 + 1360) = v0;
  *(void *)(v1 + 1368) = &off_1F0AC8120;
  *(void *)(v1 + 1336) = v25;
  *(void *)(v1 + 1376) = 0x6373615F74726F73;
  *(void *)(v1 + 1384) = 0xE800000000000000;
  type metadata accessor for SortAsc();
  sub_1B299DFC0();
  uint64_t v26 = sub_1B2DB4B58();
  *(void *)(v1 + 1416) = v0;
  *(void *)(v1 + 1424) = &off_1F0AC8120;
  *(void *)(v1 + 1392) = v26;
  *(void *)(v1 + 1432) = 0x7365645F74726F73;
  *(void *)(v1 + 1440) = 0xE900000000000063;
  type metadata accessor for SortDesc();
  sub_1B299DFC0();
  uint64_t v27 = sub_1B2DB4B58();
  *(void *)(v1 + 1472) = v0;
  *(void *)(v1 + 1480) = &off_1F0AC8120;
  *(void *)(v1 + 1448) = v27;
  sub_1B29A3EB4(&qword_1EB7D9638);
  uint64_t result = sub_1B2E82148();
  qword_1EB7F3378 = result;
  return result;
}

void sub_1B2D60D84()
{
  sub_1B2A184AC();
  qword_1E9CAF640 = v0;
}

void sub_1B2D60DAC()
{
  sub_1B2A184AC();
  qword_1EB7F3388 = v0;
}

uint64_t sub_1B2D60DD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for KnosisConfig();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B2D60E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v43 = a6;
  uint64_t v44 = a7;
  uint64_t v13 = sub_1B29D1C70((uint64_t *)&v41);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v13, a1, a6);
  uint64_t v14 = (void *)*a5;
  uint64_t v21 = sub_1B29DB060(a2, a3, v15, v16, v17, v18, v19, v20, v40, v41, *((uint64_t *)&v41 + 1), v42, v43, v44, v45, v46, v47, v48, v49,
          v50,
          v51,
          v52,
          v53,
          v54,
          vars0,
          vars8);
  if (__OFADD__(v14[2], (v22 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v23 = v21;
  char v24 = v22;
  sub_1B29A3EB4(&qword_1EB7D9870);
  if ((sub_1B2E83398() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v31 = sub_1B29DB060(a2, a3, v25, v26, v27, v28, v29, v30, v40, v41, *((uint64_t *)&v41 + 1), v42, v43, v44, v45, v46, v47, v48, v49,
          v50,
          v51,
          v52,
          v53,
          v54,
          vars0,
          vars8);
  if ((v24 & 1) != (v32 & 1))
  {
LABEL_10:
    uint64_t result = sub_1B2E83858();
    __break(1u);
    return result;
  }
  unint64_t v23 = v31;
LABEL_5:
  uint64_t v33 = (void *)*a5;
  if (v24)
  {
    uint64_t v34 = v33[7] + 40 * v23;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v34);
    return sub_1B29D1D20(&v41, v34);
  }
  else
  {
    uint64_t v36 = sub_1B2A49CD8((uint64_t)&v41, v43);
    MEMORY[0x1F4188790](v36);
    uint64_t v38 = (char *)&v40 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v39 + 16))(v38);
    sub_1B2D61050(v23, a2, a3, (uint64_t)v38, v33, a6, a7);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v41);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1B2D61050(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  uint64_t v13 = sub_1B29D1C70((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v13, a4, a6);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v14 = (void *)(a5[6] + 16 * a1);
  void *v14 = a2;
  v14[1] = a3;
  uint64_t result = sub_1B29D1D20(&v19, a5[7] + 40 * a1);
  uint64_t v16 = a5[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a5[2] = v18;
  }
  return result;
}

void sub_1B2D61128()
{
  sub_1B29B7048();
}

uint64_t sub_1B2D6114C()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EEB9A0;
  *(void *)(v0 + 32) = &unk_1F0ABE2A8;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EEB9B0;
  *(void *)(v0 + 72) = 0x80000001B2EA21E0;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29B2124(0, 0);
  return v0;
}

double sub_1B2D611E8@<D0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = *a1;
  long long v7 = a1[1];
  long long v8 = a1[2];
  long long v9 = a1[3];
  long long v10 = a1[4];
  uint64_t v11 = *((void *)a1 + 10);
  long long v12 = *(long long *)((char *)a1 + 88);
  char v13 = *((unsigned char *)a1 + 104);
  uint64_t v14 = *(void *)a2;
  uint64_t v15 = *(void *)(a2 + 8);
  uint64_t v16 = *(void *)(a2 + 16);
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v19 = *(void *)(a2 + 40);
  uint64_t v20 = *(void *)(a2 + 48);
  uint64_t v21 = *(void *)(a2 + 56);
  uint64_t v22 = *(void *)(a2 + 64);
  uint64_t v23 = *(void *)(a2 + 72);
  uint64_t v24 = *(void *)(a2 + 80);
  uint64_t v25 = *(void *)(a2 + 88);
  uint64_t v26 = *(void *)(a2 + 96);
  unsigned __int8 v27 = *(unsigned char *)(a2 + 104);
  if ((unint64_t)v12 >> 1 != 0xFFFFFFFF || (v13 & 0x1E) != 0)
  {
    long long v39 = v6;
    long long v40 = v7;
    long long v41 = v8;
    long long v42 = v9;
    long long v43 = v10;
    uint64_t v44 = v11;
    long long v45 = v12;
    char v46 = v13;
    v37[0] = v14;
    v37[1] = v15;
    v37[2] = v16;
    v37[3] = v17;
    v37[4] = v18;
    v37[5] = v19;
    v37[6] = v20;
    v37[7] = v21;
    v37[8] = v22;
    v37[9] = v23;
    v37[10] = v24;
    v37[11] = v25;
    v37[12] = v26;
    unsigned __int8 v38 = v27;
    unsigned __int8 v36 = 1;
    sub_1B2D83BA0((uint64_t)v37, &v36, (uint64_t)v47);
    if (!v3)
    {
      uint64_t v29 = v48;
      char v30 = v49;
      double result = *(double *)v47;
      long long v31 = v47[1];
      long long v32 = v47[2];
      long long v33 = v47[3];
      long long v34 = v47[4];
      long long v35 = v47[5];
      *(_OWORD *)a3 = v47[0];
      *(_OWORD *)(a3 + 16) = v31;
      *(_OWORD *)(a3 + 32) = v32;
      *(_OWORD *)(a3 + 48) = v33;
      *(_OWORD *)(a3 + 64) = v34;
      *(_OWORD *)(a3 + 80) = v35;
      *(void *)(a3 + 96) = v29;
      *(unsigned char *)(a3 + 104) = v30;
    }
  }
  else
  {
    *(void *)a3 = v14;
    *(void *)(a3 + 8) = v15;
    *(void *)(a3 + 16) = v16;
    *(void *)(a3 + 24) = v17;
    *(void *)(a3 + 32) = v18;
    *(void *)(a3 + 40) = v19;
    *(void *)(a3 + 48) = v20;
    *(void *)(a3 + 56) = v21;
    *(void *)(a3 + 64) = v22;
    *(void *)(a3 + 72) = v23;
    *(void *)(a3 + 80) = v24;
    *(void *)(a3 + 88) = v25;
    *(void *)(a3 + 96) = v26;
    *(unsigned char *)(a3 + 104) = v27;
    sub_1B29C6430(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  }
  return result;
}

uint64_t type metadata accessor for Or()
{
  return self;
}

uint64_t type metadata accessor for OrderedDictionary()
{
  return sub_1B29A1278();
}

void sub_1B2D61378()
{
}

void sub_1B2D6138C()
{
  sub_1B299B720();
  v25[0] = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v9 = v8;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)v25 - v12;
  sub_1B299D31C();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v25[1] = v4;
  v20(v13, v4, v7);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v6) == 1)
  {
    uint64_t v21 = *(void (**)(void))(v9 + 8);
    sub_1B299B3A0();
    v21();
    sub_1B2D617D0();
    sub_1B299FBC0();
    (*(void (**)(uint64_t))(v22 + 8))(v2);
    sub_1B299B3A0();
    v21();
    sub_1B299B3A0();
    v21();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v19, v13, v6);
    sub_1B2D615C4();
    sub_1B299FBC0();
    (*(void (**)(uint64_t))(v23 + 8))(v2);
    uint64_t v24 = *(void (**)(void))(v9 + 8);
    sub_1B299B3A0();
    v24();
    sub_1B299B3A0();
    v24();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v6);
  }
  sub_1B299B738();
}

void sub_1B2D615C4()
{
  sub_1B299B720();
  uint64_t v28 = v0;
  uint64_t v29 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 16);
  sub_1B299D31C();
  uint64_t v26 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1B299B6D0();
  uint64_t v27 = v8;
  uint64_t v10 = *(void *)(v9 + 24);
  sub_1B299D31C();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1B299E4A0();
  uint64_t v16 = v15 - v14;
  sub_1B2E82F38();
  sub_1B299D31C();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v26 - v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v16, v3, v10);
  sub_1B2E821C8();
  uint64_t v20 = v28;
  sub_1B2E82128();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v10) == 1)
  {
    uint64_t v21 = sub_1B29A219C();
    v22(v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v27, v20, v5);
    sub_1B2E82968();
    sub_1B2E82918();
    uint64_t v23 = 1;
    uint64_t v24 = v29;
  }
  else
  {
    uint64_t v25 = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v29, v19, v10);
    uint64_t v23 = 0;
    uint64_t v24 = v25;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v24, v23, 1, v10);
  sub_1B299B738();
}

void sub_1B2D617D0()
{
  sub_1B299B720();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v30 = v5;
  uint64_t v6 = *(void *)(v1 + 16);
  sub_1B299D31C();
  uint64_t v27 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  uint64_t v26 = v9;
  uint64_t v11 = *(void *)(v10 + 24);
  sub_1B2E82F38();
  sub_1B299D31C();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v25 - v13;
  sub_1B299D31C();
  uint64_t v28 = v15;
  MEMORY[0x1F4188790](v16);
  sub_1B299B6D0();
  uint64_t v29 = v17;
  uint64_t v18 = *(void *)(v2 + 32);
  sub_1B2E821C8();
  sub_1B2E82118();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, v11) == 1)
  {
    uint64_t v19 = sub_1B29A219C();
    v20(v19);
    uint64_t v21 = 1;
    uint64_t v22 = v30;
LABEL_5:
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v22, v21, 1, v11);
    sub_1B299B738();
    return;
  }
  uint64_t v28 = *(void *)(v28 + 32);
  uint64_t v23 = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v29, v14, v11);
  uint64_t v31 = *v0;
  MEMORY[0x1F4188790](v23);
  *(&v25 - 4) = v6;
  *(&v25 - 3) = v11;
  *(&v25 - 2) = v18;
  *(&v25 - 1) = v4;
  sub_1B2E82968();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1B2E82C38();
  swift_bridgeObjectRelease();
  if ((v32 & 1) == 0)
  {
    uint64_t v24 = v26;
    sub_1B2E82928();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v24, v6);
    uint64_t v22 = v30;
    ((void (*)(uint64_t, uint64_t, uint64_t))v28)(v30, v29, v11);
    uint64_t v21 = 0;
    goto LABEL_5;
  }
  __break(1u);
}

void sub_1B2D61A84()
{
}

uint64_t sub_1B2D61A8C(uint64_t a1)
{
  BOOL v1 = __OFADD__(a1, 1);
  uint64_t result = a1 + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

void sub_1B2D61A9C()
{
  sub_1B299B720();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v21 = v8;
  uint64_t v10 = v9;
  uint64_t v11 = sub_1B2E82F38();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v20 - v12;
  sub_1B299D31C();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1B299E4A0();
  uint64_t v19 = v18 - v17;
  sub_1B2E82998();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v10, v19, v5);
  MEMORY[0x1B3EB09B0](v19, v7, v5, v3, v1);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v3) == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v5);
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 32))(v21, v13, v3);
    sub_1B299B738();
  }
}

void sub_1B2D61C2C()
{
}

uint64_t sub_1B2D61C50(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

void (*sub_1B2D61C60(uint64_t **a1, uint64_t a2, uint64_t a3))(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)malloc(0x40uLL);
  *a1 = v5;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v5[4] = TupleTypeMetadata2;
  uint64_t v9 = *(void *)(TupleTypeMetadata2 - 8);
  v5[5] = v9;
  uint64_t v10 = (char *)malloc(*(void *)(v9 + 64));
  v5[6] = (uint64_t)v10;
  uint64_t v11 = sub_1B2D61E50(v5);
  uint64_t v13 = v12;
  v5[7] = (uint64_t)v11;
  (*(void (**)(char *))(*(void *)(v7 - 8) + 16))(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(&v10[*(int *)(TupleTypeMetadata2 + 48)], v13, v6);
  return sub_1B2D61DD8;
}

void sub_1B2D61DD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  (*(void (**)(void, void))(*(void *)(*a1 + 40) + 8))(*(void *)(*a1 + 48), *(void *)(*a1 + 32));
  uint64_t v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);

  free((void *)v3);
}

void (*sub_1B2D61E50(uint64_t *a1))(void *a1)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  uint64_t v3 = *(void *)(TupleTypeMetadata2 - 8);
  a1[1] = v3;
  a1[2] = (uint64_t)malloc(*(void *)(v3 + 64));
  sub_1B2D61A9C();
  return sub_1B2D61F64;
}

void sub_1B2D61F64(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t sub_1B2D61FD8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B2D61A8C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1B2D62004(uint64_t *a1)
{
  uint64_t result = sub_1B2D61A8C(*a1);
  *a1 = result;
  return result;
}

__n128 sub_1B2D62030@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_1B2D62040(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1B2D62094(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1B2D620E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a1;
  void v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  swift_getTupleTypeMetadata2();
  uint64_t v6 = sub_1B2E82968();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_1B2A4AB2C((void (*)(char *, uint64_t))sub_1B2D624E8, (uint64_t)v11, v6, a2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v8);
  uint64_t v12 = a1;
  swift_getWitnessTable();
  sub_1B2E82158();
  return v9;
}

uint64_t sub_1B2D62204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = *(int *)(v9 + 56);
  uint64_t v13 = &v11[v12];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v11, a1, a2);
  uint64_t v16 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v13, v14, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v11, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v13, a3);
}

uint64_t sub_1B2D6237C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1B2D620E8(a1, a2[2], a2[3], a2[4]);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1B2D623B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((sub_1B2E82978() & 1) == 0) {
    return 0;
  }

  return MEMORY[0x1F41834E0](a2, a4, a5, a6, a7, a8);
}

uint64_t sub_1B2D62448(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  return sub_1B2D623B0(*a1, a1[1], *a2, a2[1], a3[2], a3[3], a3[4], *(void *)(a4 - 8));
}

uint64_t sub_1B2D6246C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2D62488()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2D624A4()
{
  return MEMORY[0x1E4FBB568];
}

uint64_t sub_1B2D624B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2D624CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2D624E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B2D62204(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1B2D6250C()
{
  return sub_1B2E82328() & 1;
}

void sub_1B2D62548(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    unint64_t v8 = 0;
    uint64_t v9 = MEMORY[0x1E4FBC860];
    while (v8 < *(void *)(a1 + 16))
    {
      uint64_t v10 = *(void *)(a1 + 8 * v8 + 32);
      if (*(void *)(v10 + 16) != 2)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B2E831F8();
        swift_bridgeObjectRelease();
        strcpy((char *)v18, "params pair ");
        BYTE5(v18[1]) = 0;
        HIWORD(v18[1]) = -5120;
        MEMORY[0x1B3EB1020](v10, MEMORY[0x1E4FBB1A0]);
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B2E82518();
        uint64_t v12 = v18[0];
        uint64_t v13 = v18[1];
        sub_1B2D6935C();
        swift_allocError();
        *(void *)uint64_t v14 = a2;
        *(void *)(v14 + 8) = a3;
        *(void *)(v14 + 16) = a4;
        *(void *)(v14 + 24) = a5;
        *(void *)(v14 + 32) = v12;
        *(void *)(v14 + 40) = v13;
        *(unsigned char *)(v14 + 48) = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29C0254();
        uint64_t v9 = v19;
      }
      unint64_t v11 = *(void *)(v9 + 16);
      if (v11 >= *(void *)(v9 + 24) >> 1)
      {
        sub_1B29C0254();
        uint64_t v9 = v19;
      }
      ++v8;
      *(void *)(v9 + 16) = v11 + 1;
      *(void *)(v9 + 8 * v11 + 32) = v10;
      if (v6 == v8) {
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B2D62780(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a1;
  uint64_t v52 = a2;
  uint64_t v50 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v4 = v3;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  char v49 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = sub_1B2E81FB8();
  sub_1B299D278();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1B299E4A0();
  uint64_t v16 = v15 - v14;
  sub_1B2E81F38();
  sub_1B299D278();
  uint64_t v47 = v18;
  uint64_t v48 = v17;
  MEMORY[0x1F4188790](v17);
  sub_1B299E4A0();
  uint64_t v21 = v20 - v19;
  uint64_t v42 = type metadata accessor for LogSignpost();
  MEMORY[0x1F4188790](v42);
  sub_1B299E4A0();
  uint64_t v24 = v23 - v22;
  long long v46 = *v2;
  uint64_t v25 = *((void *)v2 + 3);
  uint64_t v45 = *((void *)v2 + 2);
  uint64_t v44 = *((void *)v2 + 4);
  uint64_t v43 = *((void *)v2 + 5);
  if (qword_1EB7E6618 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1B29A4B98(v10, (uint64_t)qword_1EB7E6600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v16, v26, v10);
  sub_1B2E81F18();
  sub_1B2E81F28();
  sub_1B2E81ED8();
  uint64_t v27 = sub_1B2E81F28();
  os_signpost_type_t v28 = sub_1B2E82E68();
  if (sub_1B2E82F28())
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    os_signpost_id_t v30 = sub_1B2E81EE8();
    _os_signpost_emit_with_name_impl(&dword_1B2996000, v27, v28, v30, "Knosis.parseKGQ", "", v29, 2u);
    MEMORY[0x1B3EB30C0](v29, -1, -1);
  }

  uint64_t v31 = v50;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v49, v9, v50);
  sub_1B2E81F78();
  swift_allocObject();
  uint64_t v32 = sub_1B2E81F68();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v31);
  *(void *)uint64_t v24 = "Knosis.parseKGQ";
  *(void *)(v24 + 8) = 15;
  *(unsigned char *)(v24 + 16) = 2;
  *(void *)(v24 + 24) = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v24 + *(int *)(v42 + 24), v21, v48);
  uint64_t v33 = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v34 = v52;
  swift_bridgeObjectRetain();
  uint64_t v35 = v51;
  uint64_t v36 = sub_1B2E824A8();
  uint64_t v58 = v33;
  uint64_t v59 = v25;
  uint64_t v60 = v35;
  uint64_t v61 = v34;
  uint64_t v62 = v36;
  uint64_t v63 = 0;
  uint64_t v64 = MEMORY[0x1E4FBC860];
  uint64_t v65 = -1;
  long long v53 = v46;
  uint64_t v54 = v33;
  uint64_t v55 = v25;
  uint64_t v56 = v44;
  uint64_t v57 = v43;
  uint64_t v37 = v66;
  uint64_t v38 = sub_1B2D63988((uint64_t)&v58);
  if (v37)
  {
    uint64_t v39 = v59;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v40 = v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void *)(v40 + 16);
    swift_retain();
    swift_release();
  }
  sub_1B2D63604(v24);
  sub_1B2A93478(v24);
  return v39;
}

uint64_t sub_1B2D62C00(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_1B2E837A8() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = sub_1B2E837A8();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

uint64_t sub_1B2D62CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v48 = a4;
  uint64_t v49 = a3;
  uint64_t v47 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v6 = sub_1B2E82148();
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v46 = a1;
  if (v7)
  {
    uint64_t v8 = (void *)(a1 + 72);
    while (1)
    {
      uint64_t v9 = *(v8 - 5);
      long long v55 = *((_OWORD *)v8 - 2);
      HIDWORD(v52) = *((unsigned __int8 *)v8 - 16);
      uint64_t v10 = *(v8 - 1);
      uint64_t v11 = *v8;
      swift_bridgeObjectRetain();
      uint64_t v12 = v55;
      swift_bridgeObjectRetain_n();
      uint64_t v13 = *((void *)&v55 + 1);
      swift_bridgeObjectRetain();
      uint64_t v53 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B299B780();
        sub_1B29B7048();
        uint64_t v5 = v42;
      }
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v14 = *(void *)(v5 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1B299B984(v14);
        sub_1B29B7048();
        uint64_t v5 = v43;
      }
      *(void *)(v5 + 16) = v15 + 1;
      uint64_t v16 = v5 + 16 * v15;
      *(void *)(v16 + 32) = v9;
      *(void *)(v16 + 40) = v55;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = sub_1B29DB060(v9, v55, v17, v18, v19, v20, v21, v22, v46, v47, (uint64_t)v48, v49, v5, v7, v52, v53, v55, *((uint64_t *)&v55 + 1), v57,
              v6,
              v59,
              v60,
              v61,
              v62,
              v63,
              v64);
      if (__OFADD__(*(void *)(v6 + 16), (v24 & 1) == 0)) {
        break;
      }
      unint64_t v25 = v23;
      char v26 = v24;
      sub_1B29A3EB4(&qword_1EB7D9860);
      if (sub_1B2E83398())
      {
        uint64_t v33 = sub_1B29DB060(v9, v12, v27, v28, v29, v30, v31, v32, v46, v47, (uint64_t)v48, v49, v50, v51, v52, v54, v56, *((uint64_t *)&v56 + 1), v57,
                v58,
                v59,
                v60,
                v61,
                v62,
                v63,
                v64);
        if ((v26 & 1) != (v34 & 1)) {
          goto LABEL_19;
        }
        unint64_t v25 = v33;
      }
      uint64_t v6 = v58;
      if (v26)
      {
        uint64_t v35 = *(void *)(v58 + 56) + 48 * v25;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)uint64_t v35 = v9;
        *(void *)(v35 + 8) = v12;
        *(void *)(v35 + 16) = v13;
        *(unsigned char *)(v35 + 24) = BYTE4(v52);
        *(void *)(v35 + 32) = v54;
        *(void *)(v35 + 40) = v11;
      }
      else
      {
        sub_1B299D418(v58 + 8 * (v25 >> 6));
        uint64_t v37 = (uint64_t *)(v36 + 16 * v25);
        *uint64_t v37 = v9;
        v37[1] = v12;
        uint64_t v38 = *(void *)(v58 + 56) + 48 * v25;
        *(void *)uint64_t v38 = v9;
        *(_OWORD *)(v38 + 8) = v56;
        *(unsigned char *)(v38 + 24) = BYTE4(v52);
        *(void *)(v38 + 32) = v54;
        *(void *)(v38 + 40) = v11;
        uint64_t v39 = *(void *)(v58 + 16);
        BOOL v40 = __OFADD__(v39, 1);
        uint64_t v41 = v39 + 1;
        if (v40) {
          goto LABEL_18;
        }
        *(void *)(v58 + 16) = v41;
        swift_bridgeObjectRetain();
      }
      v8 += 6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v5 = v50;
      uint64_t v7 = v51 - 1;
      if (v51 == 1) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = sub_1B2E83858();
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B2D2A710(v5, v47);
    *uint64_t v48 = v6;
    v48[1] = v47;
    v48[2] = result;
    v48[3] = v45;
    v48[4] = 500;
    v48[5] = v49;
  }
  return result;
}

void sub_1B2D62FEC(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_1B2CC3394(v3);
    unint64_t v3 = v5;
    *uint64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    sub_1B29BE70C(v6 + 8 * a1 + 40, v7 - 1 - a1, v6 + 8 * a1 + 32);
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    sub_1B2E82878();
  }
}

void sub_1B2D63080(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2CC3440();
    uint64_t v3 = v6;
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    sub_1B29BEFF0((char *)(v3 + 32 * a1 + 64), v4 - 1 - a1, (char *)(v3 + 32 * a1 + 32));
    *(void *)(v3 + 16) = v5;
    *uint64_t v1 = v3;
  }
}

void *sub_1B2D63120()
{
  uint64_t result = (void *)sub_1B2E82148();
  off_1E9C435E0 = result;
  return result;
}

void sub_1B2D6315C()
{
  qword_1E9C435E8 = (uint64_t)&unk_1F0ABB580;
}

uint64_t sub_1B2D63170()
{
  uint64_t v1 = v0;
  *(void *)(v0 + 72) = 0;
  *(_DWORD *)(v0 + 80) = 0;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0xE000000000000000;
  *(void *)(v0 + 40) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v0 + 48) = 0;
  type metadata accessor for KnosisQueryParam();
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  uint64_t v2 = sub_1B2E82148();
  type metadata accessor for QueryNode();
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1B2DC3EA4(0, 0xE000000000000000, v2);
  return v1;
}

uint64_t sub_1B2D63210()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B2D6325C()
{
  sub_1B2D63210();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2D63290()
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  type metadata accessor for Node();
  swift_allocObject();
  uint64_t v0 = sub_1B2D63170();
  MEMORY[0x1B3EB0FE0](v0);
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1B2E828A8();
  }
  sub_1B2E828F8();
  sub_1B2E82878();
  return v2;
}

uint64_t sub_1B2D63338(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_5;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    while (1)
    {
      unint64_t v1 = swift_bridgeObjectRetain();
      uint64_t v2 = sub_1B2A1D230(v1);
      swift_bridgeObjectRelease();
      if (v2) {
        break;
      }
      __break(1u);
LABEL_5:
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1B2E83448();
      swift_bridgeObjectRelease();
      if (!v3) {
        goto LABEL_6;
      }
    }
  }
  else
  {
LABEL_6:
    type metadata accessor for Node();
    uint64_t v2 = swift_allocObject();
    sub_1B2D63170();
  }
  return v2;
}

uint64_t ParserError.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2E83388();
  sub_1B2E82518();
  if (v1)
  {
    sub_1B2E831F8();
    sub_1B2E82518();
    sub_1B2E83388();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
  }
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  return 0;
}

uint64_t sub_1B2D63604(uint64_t a1)
{
  uint64_t v2 = sub_1B2E81F48();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v27 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B2E81F08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B2E81F38();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + *(int *)(v12 + 24), v8);
  uint64_t v28 = *(const char **)a1;
  char v13 = *(unsigned char *)(a1 + 16);
  swift_retain();
  unint64_t v14 = sub_1B2E81F28();
  sub_1B2E81F58();
  int v24 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v23 = v5;
  if ((v13 & 1) == 0)
  {
    uint64_t v16 = v27;
    if (v28)
    {
      uint64_t v18 = v25;
      uint64_t v17 = v26;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v16, v17) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v19 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
        uint64_t v19 = "";
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      os_signpost_id_t v21 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v14, (os_signpost_type_t)v24, v21, v28, v19, v20, 2u);
      MEMORY[0x1B3EB30C0](v20, -1, -1);
      uint64_t v5 = v23;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v16 = v27;
  if ((unint64_t)v28 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v28 >> 11 != 27)
  {
    uint64_t v18 = v25;
    uint64_t v17 = v26;
    if (v28 >> 16 <= 0x10)
    {
      uint64_t v28 = &v29;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1B2D63988(uint64_t a1)
{
  uint64_t v350 = *(void *)v1;
  uint64_t v332 = *(void *)(v1 + 16);
  uint64_t v334 = *(void *)(v1 + 8);
  uint64_t v330 = *(void *)(v1 + 24);
  uint64_t v342 = *(void *)(v1 + 32);
  uint64_t v347 = *(void *)(v1 + 40);
  uint64_t v359 = sub_1B2D63290();
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
LABEL_360:
    __break(1u);
LABEL_361:
    swift_bridgeObjectRetain();
    sub_1B2A14400(19);
    swift_bridgeObjectRelease();
    sub_1B2D693F4();
    sub_1B2D69448(v306 - 2);
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    uint64_t v9 = v355;
    sub_1B2D6935C();
    sub_1B299E4D4();
    uint64_t v302 = 1;
LABEL_356:
    sub_1B2999D68(v301, v302);
    goto LABEL_357;
  }
  HIDWORD(v322) = 0;
  uint64_t v328 = 0;
  v349 = (uint64_t *)(a1 + 48);
  uint64_t v366 = a1;
LABEL_3:
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a1 + 48);
  if (v8 >= *(void *)(v9 + 16))
  {
    uint64_t v3 = sub_1B2D2AC3C();
    uint64_t v12 = v21;
    uint64_t v11 = v22;
    uint64_t v5 = v23;
    swift_bridgeObjectRetain();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B2D693C0();
      uint64_t v9 = isUniquelyReferenced_nonNull_native;
    }
    unint64_t v25 = *(void *)(v9 + 16);
    unint64_t v24 = *(void *)(v9 + 24);
    uint64_t v1 = v25 + 1;
    if (v25 >= v24 >> 1)
    {
      sub_1B299B984(v24);
      sub_1B29B7E20();
      uint64_t v9 = isUniquelyReferenced_nonNull_native;
    }
    *(void *)(v9 + 16) = v1;
    uint64_t v26 = v9 + 32 * v25;
    *(unsigned char *)(v26 + 32) = v3;
    *(void *)(v26 + 40) = v12;
    *(void *)(v26 + 48) = v11;
    *(void *)(v26 + 56) = v5;
    uint64_t *v349 = v9;
    a1 = v366;
  }
  else
  {
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_365;
    }
    uint64_t v10 = v9 + 32 * v8;
    uint64_t v3 = *(unsigned __int8 *)(v10 + 32);
    uint64_t v12 = *(void *)(v10 + 40);
    uint64_t v11 = *(void *)(v10 + 48);
    uint64_t v5 = *(void *)(v10 + 56);
    uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 56) = v8;
  switch((char)v3)
  {
    case 1:
      sub_1B2D2AA00();
      int v126 = v125;
      uint64_t v127 = swift_bridgeObjectRelease();
      if (v126 != 11) {
        goto LABEL_361;
      }
      sub_1B299FBD4(v127, v128, v129, v130, v131, v132, v133, v134, v317, v319, v322, v324, v326, v328, v330, v332, v334, v336, v339,
        v342,
        v344,
        v347);
      sub_1B2D65BD0(1, v12, v11, v5, BYTE4(v322) & 1);
      if ((unint64_t)v359 >> 62)
      {
        if (v359 < 0) {
          unint64_t v2 = v359;
        }
        else {
          unint64_t v2 = v359 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        sub_1B2E83448();
        sub_1B299AD88();
        if (v8)
        {
LABEL_103:
          uint64_t v135 = swift_retain();
          uint64_t v1 = (uint64_t)&v359;
          MEMORY[0x1B3EB0FE0](v135);
          sub_1B2D69520();
          if (v46) {
            sub_1B2D694C8();
          }
          sub_1B2E828F8();
          sub_1B2E82878();
          swift_release();
          HIDWORD(v322) = 0;
          uint64_t v3 = 1;
          goto LABEL_341;
        }
      }
      else if (*(void *)((v359 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_103;
      }
      uint64_t v359 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      goto LABEL_103;
    case 2:
    case 11:
      uint64_t v48 = v12;
      uint64_t v12 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v339 = v3;
        uint64_t v1 = v366;
        *(void *)(v366 + 56) = v12;
        if (v12 >= *(void *)(v9 + 16))
        {
          uint64_t v4 = v351;
          uint64_t v1 = sub_1B2D2AC3C();
          uint64_t v140 = v139;
          uint64_t v142 = v141;
          uint64_t v326 = v143;
          swift_bridgeObjectRetain();
          uint64_t v344 = v5;
          uint64_t v336 = v140;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2D693C0();
            uint64_t v9 = v203;
          }
          unint64_t v144 = *(void *)(v9 + 16);
          if (v144 >= *(void *)(v9 + 24) >> 1)
          {
            sub_1B2D694E4();
            uint64_t v9 = v204;
          }
          *(void *)(v9 + 16) = v144 + 1;
          uint64_t v145 = v9 + 32 * v144;
          *(unsigned char *)(v145 + 32) = v1;
          *(void *)(v145 + 40) = v140;
          *(void *)(v145 + 48) = v142;
          *(void *)(v145 + 56) = v326;
          uint64_t *v349 = v9;
          uint64_t v5 = v344;
          goto LABEL_119;
        }
        uint64_t v4 = v351;
        if ((v12 & 0x8000000000000000) == 0)
        {
          uint64_t v1 = *(unsigned __int8 *)(v9 + 32 * v12 + 32);
          swift_bridgeObjectRetain();
LABEL_119:
          *(void *)(v366 + 56) = v12 - 1;
          if (v1 > 0x10u || ((1 << v1) & 0x12910) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v351 = v4;
            uint64_t v12 = v48;
            a1 = v366;
            uint64_t v3 = v339;
            goto LABEL_341;
          }
          sub_1B2A14400(49);
          swift_bridgeObjectRelease();
          sub_1B2D693F4();
          sub_1B2D69448(v303 + 20);
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          sub_1B2E82518();
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          uint64_t v9 = v355;
          unint64_t v304 = v356;
          sub_1B2D6935C();
          sub_1B299E4D4();
          *(void *)uint64_t v305 = v339;
          *(void *)(v305 + 8) = v48;
          goto LABEL_359;
        }
      }
      __break(1u);
      goto LABEL_386;
    case 3:
    case 6:
      uint64_t v4 = v12;
      uint64_t v27 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_363;
      }
      *(void *)(a1 + 56) = v27;
      uint64_t v344 = v5;
      if (v27 < *(void *)(v9 + 16))
      {
        if ((v27 & 0x8000000000000000) == 0)
        {
          uint64_t v1 = *(unsigned __int8 *)(v9 + 32 * v27 + 32);
          *(void *)(a1 + 56) = v8;
          if (v1 == 8) {
            goto LABEL_289;
          }
          goto LABEL_32;
        }
        __break(1u);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v9 = v354;
        swift_release();
LABEL_370:
        swift_release();
LABEL_408:
        swift_bridgeObjectRelease();
        return v9;
      }
      uint64_t v339 = v11;
      uint64_t v1 = sub_1B2D2AC3C();
      uint64_t v336 = v35;
      uint64_t v37 = v36;
      uint64_t v5 = v38;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B2D693C0();
        uint64_t v9 = v187;
      }
      unint64_t v39 = *(void *)(v9 + 16);
      if (v39 >= *(void *)(v9 + 24) >> 1)
      {
        sub_1B2D694E4();
        uint64_t v9 = v188;
      }
      *(void *)(v9 + 16) = v39 + 1;
      uint64_t v40 = v9 + 32 * v39;
      *(unsigned char *)(v40 + 32) = v1;
      *(void *)(v40 + 40) = v336;
      *(void *)(v40 + 48) = v37;
      *(void *)(v40 + 56) = v5;
      uint64_t v41 = v366;
      *(void *)(v366 + 48) = v9;
      *(void *)(v41 + 56) = v8;
      a1 = v41;
      uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
      uint64_t v11 = v339;
      if (v1 == 8) {
        goto LABEL_289;
      }
LABEL_32:
      if (v1 == 13) {
        goto LABEL_289;
      }
      uint64_t v5 = v344;
      uint64_t v12 = v4;
      if ((v322 & 0x100000000) != 0) {
        goto LABEL_367;
      }
      if (v1 != 2 && v1 != 12 && v1 != 16)
      {
        if (v1 != 11)
        {
          sub_1B2A14400(24);
          swift_bridgeObjectRelease();
          sub_1B2D693F4();
          sub_1B2D69448(v312 + 3);
          sub_1B2E82518();
          swift_bridgeObjectRelease();
LABEL_343:
          uint64_t v9 = v355;
          unint64_t v304 = v356;
          sub_1B2D6935C();
          sub_1B299E4D4();
          uint64_t v290 = v3;
          goto LABEL_344;
        }
LABEL_367:
        sub_1B2A14400(21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v355 = v4;
        unint64_t v356 = v11;
        sub_1B2E82518();
        uint64_t v9 = v355;
        unint64_t v304 = v356;
        sub_1B2D6935C();
        sub_1B299E4D4();
        uint64_t v290 = v3;
LABEL_344:
        *(void *)uint64_t v305 = v290;
        *(void *)(v305 + 8) = v12;
LABEL_359:
        *(void *)(v305 + 16) = v11;
        *(void *)(v305 + 24) = v5;
        *(void *)(v305 + 32) = v9;
        *(void *)(v305 + 40) = v304;
        goto LABEL_406;
      }
      sub_1B299FBD4(isUniquelyReferenced_nonNull_native, v14, v15, v16, v17, v18, v19, v20, v317, v319, v322, v324, v326, v328, v330, v332, v334, v336, v339,
        v342,
        v344,
        v347);
      sub_1B29A0EA0();
      if (!v44)
      {
        sub_1B29A21B4();
        if (v1) {
          goto LABEL_44;
        }
LABEL_231:
        type metadata accessor for Node();
        uint64_t v47 = sub_1B2D693A8();
        sub_1B2D63170();
        goto LABEL_232;
      }
      sub_1B299DFDC();
      sub_1B2E83448();
      sub_1B299B414();
      if (!v1) {
        goto LABEL_231;
      }
LABEL_44:
      uint64_t v45 = v1 - 1;
      if (__OFSUB__(v1, 1))
      {
LABEL_398:
        __break(1u);
        goto LABEL_399;
      }
      if ((v9 & 0xC000000000000001) == 0)
      {
        if ((v45 & 0x8000000000000000) == 0)
        {
          sub_1B2D693E4();
          if (!v46)
          {
            uint64_t v47 = *(void *)(v9 + 8 * v45 + 32);
            swift_retain();
            goto LABEL_232;
          }
LABEL_400:
          __break(1u);
          goto LABEL_401;
        }
LABEL_399:
        __break(1u);
        goto LABEL_400;
      }
      swift_bridgeObjectRetain();
      sub_1B2D69508();
      uint64_t v47 = v221;
      swift_bridgeObjectRelease();
LABEL_232:
      swift_bridgeObjectRelease();
      unint64_t v2 = v351;
      sub_1B2D6772C(v47, v3, v4, v11, v5);
      if (v351)
      {
LABEL_363:
        swift_release();
LABEL_357:
        swift_bridgeObjectRelease();
        goto LABEL_408;
      }
      swift_release();
      sub_1B29A0EA0();
      if (!v207)
      {
        sub_1B29A21B4();
        if (&vars0 != (uint64_t *)224) {
          goto LABEL_235;
        }
LABEL_239:
        type metadata accessor for Node();
        uint64_t v1 = sub_1B2D693A8();
        sub_1B2D63170();
        goto LABEL_240;
      }
      sub_1B299DFDC();
      sub_1B2E83448();
      sub_1B299B414();
      if (&vars0 == (uint64_t *)224) {
        goto LABEL_239;
      }
LABEL_235:
      uint64_t v1 = (uint64_t)&v354 + 7;
      if (!__OFSUB__(&v355, 1))
      {
        char v208 = sub_1B2E2FE2C(v9);
        sub_1B2D69468(v208);
        if (v47)
        {
          sub_1B299EA40();
        }
        else
        {
          swift_bridgeObjectRetain();
          MEMORY[0x1B3EB1A20]((char *)&v354 + 7, v9);
          sub_1B299B414();
        }
LABEL_240:
        swift_bridgeObjectRelease();
        char v209 = *(unsigned char *)(v1 + 83);
        swift_release();
        if ((v209 & 1) == 0)
        {
          uint64_t v9 = v359;
          swift_bridgeObjectRetain_n();
          sub_1B2A6A008(v9);
          sub_1B299B414();
          if (v1)
          {
            unint64_t v210 = swift_bridgeObjectRetain();
            sub_1B2A1D230(v210);
            sub_1B299B414();
          }
          else
          {
            type metadata accessor for Node();
            uint64_t v1 = sub_1B2D693A8();
            sub_1B2D63170();
          }
          swift_bridgeObjectRelease();
          uint64_t v211 = *(void *)(v1 + 72);
          BOOL v168 = __OFADD__(v211, 1);
          uint64_t v212 = v211 + 1;
          if (v168) {
            goto LABEL_411;
          }
          *(void *)(v1 + 72) = v212;
          swift_release();
        }
        HIDWORD(v322) = 0;
        goto LABEL_341;
      }
LABEL_401:
      __break(1u);
LABEL_402:
      sub_1B299DFDC();
      uint64_t v313 = sub_1B2E83448();
      swift_bridgeObjectRelease();
      if (!v313)
      {
LABEL_404:
        swift_bridgeObjectRelease();
LABEL_405:
        sub_1B2D6935C();
        sub_1B299E4D4();
        *uint64_t v314 = 7;
        v314[1] = v12;
        v314[2] = v11;
        v314[3] = v5;
        sub_1B2D693F4();
        *(void *)(v305 + 32) = v315 + 19;
        *(void *)(v305 + 40) = 0x80000001B2EA2310;
LABEL_406:
        *(unsigned char *)(v305 + 48) = 0;
LABEL_407:
        swift_willThrow();
        goto LABEL_408;
      }
      swift_bridgeObjectRetain();
      sub_1B2E83448();
      sub_1B299B414();
LABEL_350:
      swift_bridgeObjectRelease();
      if (v1 != 1) {
        goto LABEL_405;
      }
      uint64_t v9 = v359;
      sub_1B2B47548(0, (v359 & 0xC000000000000001) == 0, v359);
      if ((v9 & 0xC000000000000001) != 0)
      {
LABEL_424:
        uint64_t v9 = MEMORY[0x1B3EB1A20](0, v9);
        goto LABEL_353;
      }
      uint64_t v9 = *(void *)(v9 + 32);
      swift_retain();
LABEL_353:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    case 4:
      HIDWORD(v322) = 1;
      goto LABEL_341;
    case 7:
      uint64_t v295 = *(void *)(a1 + 16);
      uint64_t v296 = *(void *)(a1 + 24);
      long long v360 = *(_OWORD *)a1;
      uint64_t v361 = v295;
      uint64_t v362 = v296;
      long long v363 = *(_OWORD *)(a1 + 32);
      uint64_t v364 = v9;
      uint64_t v365 = v8;
      uint64_t v1 = (uint64_t)&v360;
      char v297 = sub_1B2D2ABA8();
      uint64_t v9 = v298;
      if (v297 != 12)
      {
        swift_bridgeObjectRetain();
        uint64_t v355 = sub_1B2A14400(51);
        unint64_t v356 = v300;
        sub_1B2D693F4();
        sub_1B2E82518();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        uint64_t v9 = v355;
        sub_1B2D6935C();
        sub_1B299E4D4();
        uint64_t v302 = 7;
        goto LABEL_356;
      }
      swift_bridgeObjectRelease();
      sub_1B29A0EA0();
      if (v299) {
        goto LABEL_402;
      }
      sub_1B29A21B4();
      if (&vars0 != (uint64_t *)160) {
        goto LABEL_350;
      }
      goto LABEL_404;
    case 8:
      uint64_t v345 = v5;
      sub_1B2D2AAFC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v337 = type metadata accessor for Node();
      uint64_t v50 = sub_1B2D693A8();
      sub_1B2D63170();
      uint64_t v358 = v50;
      uint64_t v51 = v12;
      uint64_t v340 = v11;
      uint64_t v9 = v11;
      uint64_t v320 = v12;
      while (1)
      {
        uint64_t v52 = *(void *)(a1 + 56);
        uint64_t v53 = v52 + 1;
        if (__OFADD__(v52, 1)) {
          goto LABEL_374;
        }
        *(void *)(a1 + 56) = v53;
        uint64_t v54 = *(void *)(a1 + 48);
        if (v53 >= *(void *)(v54 + 16))
        {
          uint64_t v5 = sub_1B2D2AC3C();
          uint64_t v324 = v56;
          uint64_t v326 = v55;
          uint64_t v58 = v57;
          swift_bridgeObjectRetain();
          uint64_t v59 = v51;
          uint64_t v11 = v12;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B299B780();
            sub_1B29B7E20();
            uint64_t v54 = v120;
          }
          unint64_t v61 = *(void *)(v54 + 16);
          unint64_t v60 = *(void *)(v54 + 24);
          if (v61 >= v60 >> 1)
          {
            sub_1B299B984(v60);
            sub_1B29B7E20();
            uint64_t v54 = v121;
          }
          *(void *)(v54 + 16) = v61 + 1;
          unint64_t v62 = v54 + 32 * v61;
          *(unsigned char *)(v62 + 32) = v5;
          *(void *)(v62 + 40) = v326;
          *(void *)(v62 + 48) = v58;
          *(void *)(v62 + 56) = v324;
          swift_bridgeObjectRelease();
          uint64_t *v349 = v54;
          uint64_t v51 = v59;
        }
        else if (v53 < 0)
        {
          goto LABEL_380;
        }
        *(void *)(v366 + 56) = v53;
        if (qword_1E9C38C98 != -1) {
          swift_once();
        }
        uint64_t v63 = off_1E9C435E0;
        if (!*((void *)off_1E9C435E0 + 2)) {
          goto LABEL_375;
        }
        swift_bridgeObjectRetain();
        uint64_t v70 = sub_1B29DB060(v51, v9, v64, v65, v66, v67, v68, v69, v317, v320, v322, v324, v326, v328, v330, v332, v334, v337, v340,
                v342,
                v345,
                v347,
                (uint64_t)v349,
                v350,
                v351,
                v353);
        if ((v71 & 1) == 0) {
          goto LABEL_429;
        }
        uint64_t v72 = (uint64_t *)(v63[7] + 16 * v70);
        uint64_t v73 = *v72;
        uint64_t v74 = v72[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v75 = sub_1B2D693A8();
        sub_1B2D63170();
        type metadata accessor for KnosisQueryParam();
        uint64_t v76 = sub_1B2E82148();
        type metadata accessor for QueryNode();
        swift_allocObject();
        *(void *)(v75 + 16) = sub_1B2DC3EA4(v73, v74, v76);
        swift_release();
        uint64_t v77 = v366;
        if (!*(void *)(v350 + 16)) {
          goto LABEL_79;
        }
        uint64_t v78 = *(void *)(v75 + 16);
        uint64_t v79 = *(void *)(v78 + 16);
        uint64_t v80 = *(void *)(v78 + 24);
        swift_bridgeObjectRetain();
        uint64_t v81 = v350;
        uint64_t v88 = sub_1B29DB060(v79, v80, v82, v83, v84, v85, v86, v87, v318, v321, v323, v325, v327, v329, v331, v333, v335, v338, v341,
                v343,
                v346,
                v348,
                (uint64_t)v349,
                v350,
                v352,
                v353);
        if ((v89 & 1) == 0) {
          break;
        }
        uint64_t v90 = *(void *)(v81 + 56) + 48 * v88;
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *(void *)(v90 + 8);
        uint64_t v93 = *(void *)(v90 + 16);
        uint64_t v5 = *(unsigned __int8 *)(v90 + 24);
        uint64_t v94 = *(void *)(v90 + 40);
        uint64_t v325 = *(void *)(v90 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v327 = *(void *)(v75 + 64);
        *(void *)(v75 + 24) = v92;
        *(void *)(v75 + 32) = v91;
        *(void *)(v75 + 40) = v93;
        *(unsigned char *)(v75 + 48) = v5;
        *(void *)(v75 + 56) = v325;
        *(void *)(v75 + 64) = v94;
        uint64_t v12 = v321;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v77 = v366;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(unsigned char *)(v75 + 80) = 0;
        uint64_t v95 = swift_bridgeObjectRelease();
LABEL_80:
        uint64_t v354 = v75;
        uint64_t v355 = v350;
        sub_1B2D69424(v95, v96, v97, v98, v99, v100, v101, v102, v318, v321, v323, v325, v327, v329, v331, v333, v335, v338, v341,
          v343,
          v346,
          v348);
        sub_1B2D6650C(v77, &v358, &v354);
        if (v352)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          goto LABEL_408;
        }
        uint64_t v11 = v104;
        swift_release();
        uint64_t v358 = v11;
        uint64_t v105 = *(void *)(v77 + 56);
        uint64_t v4 = v105 + 1;
        if (__OFADD__(v105, 1)) {
          goto LABEL_376;
        }
        *(void *)(v77 + 56) = v4;
        uint64_t v106 = *(void *)(v77 + 48);
        uint64_t v351 = 0;
        if (v4 >= *(void *)(v106 + 16))
        {
          uint64_t v326 = v11;
          uint64_t v109 = v77;
          unsigned __int8 v108 = sub_1B2D2AC3C();
          uint64_t v5 = v110;
          uint64_t v9 = v111;
          uint64_t v113 = v112;
          swift_bridgeObjectRetain();
          char v114 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v109 + 48) = v106;
          uint64_t v115 = v12;
          if ((v114 & 1) == 0)
          {
            sub_1B29B7E20();
            uint64_t v106 = v122;
            uint64_t *v349 = v122;
          }
          unint64_t v116 = *(void *)(v106 + 16);
          if (v116 >= *(void *)(v106 + 24) >> 1)
          {
            sub_1B29B7E20();
            uint64_t *v349 = v123;
          }
          uint64_t v51 = v5;
          uint64_t v117 = sub_1B2E321BC(v116, v108, v5, v9, v113);
          nullsub_1(v117);
          uint64_t v12 = v115;
          uint64_t v11 = v326;
        }
        else
        {
          if (v4 < 0) {
            goto LABEL_381;
          }
          uint64_t v107 = v106 + 32 * v4;
          unsigned __int8 v108 = *(unsigned char *)(v107 + 32);
          uint64_t v51 = *(void *)(v107 + 40);
          uint64_t v9 = *(void *)(v107 + 48);
          swift_bridgeObjectRetain();
        }
        uint64_t v118 = v366;
        *(void *)(v366 + 56) = v4 - 1;
        swift_release();
        int v119 = v108;
        a1 = v118;
        if (v119 != 8)
        {
          swift_bridgeObjectRelease();
          sub_1B29A0EA0();
          if (v147)
          {
            sub_1B29A5390();
            sub_1B2E83448();
            sub_1B299B414();
          }
          else
          {
            sub_1B2D69488();
          }
          if (v118)
          {
            sub_1B29A0EA0();
            if (v148)
            {
              sub_1B29A5390();
              sub_1B2E83448();
              sub_1B299B414();
            }
            else
            {
              sub_1B2D69488();
            }
            uint64_t v9 = v359;
            int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
            uint64_t v359 = v9;
            if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
            {
              sub_1B2CC3394(v9);
              uint64_t v9 = v150;
              uint64_t v359 = v150;
            }
            uint64_t v151 = v9 & 0xFFFFFFFFFFFFFF8;
            uint64_t v152 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v152)
            {
              uint64_t v153 = v152 - 1;
              uint64_t v154 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v153 + 0x20);
              *(void *)(v151 + 16) = v153;
              uint64_t v155 = sub_1B2E82878();
              goto LABEL_152;
            }
LABEL_416:
            __break(1u);
LABEL_417:
            __break(1u);
LABEL_418:
            __break(1u);
LABEL_419:
            __break(1u);
LABEL_420:
            __break(1u);
LABEL_421:
            __break(1u);
LABEL_422:
            __break(1u);
            goto LABEL_423;
          }
          uint64_t v154 = sub_1B2D693A8();
          uint64_t v155 = sub_1B2D63170();
LABEL_152:
          uint64_t v354 = v154;
          uint64_t v355 = v350;
          sub_1B2D69424(v155, v156, v157, v158, v159, v160, v161, v162, v317, v320, v322, v324, v326, v328, v330, v332, v334, v337, v340,
            v342,
            v345,
            v347);
          swift_retain();
          unint64_t v2 = 0;
          sub_1B2D661DC(&v354, v11);
          swift_release();
          uint64_t v9 = v354;
          uint64_t v167 = *(void *)(v354 + 72);
          BOOL v168 = __OFADD__(v167, 1);
          uint64_t v169 = v167 + 1;
          if (v168)
          {
            __break(1u);
LABEL_411:
            __break(1u);
            goto LABEL_412;
          }
          *(void *)(v354 + 72) = v169;
          if ((unint64_t)v359 >> 62)
          {
            if (v359 < 0) {
              unint64_t v2 = v359;
            }
            else {
              unint64_t v2 = v359 & 0xFFFFFFFFFFFFFF8;
            }
            swift_retain();
            swift_bridgeObjectRetain();
            sub_1B2E83448();
            sub_1B299AD88();
LABEL_155:
            uint64_t v359 = MEMORY[0x1E4FBC860];
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v170 = *(void *)((v359 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            if (!v170) {
              goto LABEL_155;
            }
          }
          uint64_t v171 = swift_retain();
          uint64_t v1 = (uint64_t)&v359;
          MEMORY[0x1B3EB0FE0](v171);
          sub_1B2D69520();
          if (v46) {
            sub_1B2D694C8();
          }
          sub_1B2E828F8();
          sub_1B2E82878();
          swift_release();
          swift_release_n();
          uint64_t v3 = 8;
          uint64_t v11 = v339;
          uint64_t v5 = v344;
LABEL_341:
          if (++v328 >= v342)
          {
            sub_1B2A14400(30);
            swift_bridgeObjectRelease();
            sub_1B2D693F4();
            uint64_t v355 = v289 + 1;
            unint64_t v356 = 0x80000001B2EA2340;
            uint64_t v358 = v342;
            sub_1B2E83748();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2E82518();
            goto LABEL_343;
          }
LABEL_289:
          swift_bridgeObjectRelease();
LABEL_290:
          uint64_t v252 = *(void *)(a1 + 56);
          uint64_t v8 = v252 + 1;
          if (__OFADD__(v252, 1)) {
            goto LABEL_360;
          }
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
LABEL_79:
      uint64_t v103 = sub_1B2D693A8();
      sub_1B2D63170();
      swift_bridgeObjectRelease();
      uint64_t v95 = swift_release();
      uint64_t v75 = v103;
      goto LABEL_80;
    case 10:
      sub_1B2D6935C();
      sub_1B299E4D4();
      *(void *)uint64_t v294 = 10;
      *(void *)(v294 + 8) = v12;
      *(void *)(v294 + 16) = v11;
      *(void *)(v294 + 24) = v5;
      *(void *)(v294 + 32) = v12;
      *(void *)(v294 + 40) = v11;
      *(unsigned char *)(v294 + 48) = 2;
      swift_bridgeObjectRetain();
      goto LABEL_407;
    case 12:
      sub_1B29A0EA0();
      if (v28)
      {
        sub_1B29A5390();
        sub_1B2E83448();
        sub_1B299B414();
        if (v1) {
          goto LABEL_19;
        }
      }
      else
      {
        sub_1B2D69488();
        if (v1)
        {
LABEL_19:
          sub_1B29A0EA0();
          if (v29)
          {
            sub_1B29A5390();
            sub_1B2E83448();
            sub_1B299B414();
          }
          else
          {
            sub_1B2D69488();
          }
          uint64_t v9 = v359;
          int v30 = swift_isUniquelyReferenced_nonNull_bridgeObject();
          uint64_t v359 = v9;
          if (!v30 || v9 < 0 || (v9 & 0x4000000000000000) != 0)
          {
            sub_1B2CC3394(v9);
            uint64_t v9 = v31;
            uint64_t v359 = v31;
          }
          uint64_t v32 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v32)
          {
            uint64_t v33 = v32 - 1;
            uint64_t v4 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v33 + 0x20);
            *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v33;
            char v34 = &v359;
            sub_1B2E82878();
            goto LABEL_179;
          }
          __break(1u);
LABEL_374:
          __break(1u);
LABEL_375:
          __break(1u);
LABEL_376:
          __break(1u);
LABEL_377:
          __break(1u);
LABEL_378:
          __break(1u);
LABEL_379:
          __break(1u);
LABEL_380:
          __break(1u);
LABEL_381:
          __break(1u);
LABEL_382:
          __break(1u);
LABEL_383:
          sub_1B2D6935C();
          sub_1B299E4D4();
          *(void *)uint64_t v305 = 13;
          *(void *)(v305 + 8) = v12;
          *(void *)(v305 + 16) = v11;
          *(void *)(v305 + 24) = v5;
          *(void *)(v305 + 32) = 0xD000000000000018;
          *(void *)(v305 + 40) = 0x80000001B2EA2390;
          goto LABEL_406;
        }
      }
      type metadata accessor for Node();
      uint64_t v4 = sub_1B2D693A8();
      char v34 = (uint64_t *)v4;
      sub_1B2D63170();
LABEL_179:
      if (*(unsigned char *)(v4 + 80))
      {
        uint64_t v177 = swift_retain();
        goto LABEL_189;
      }
      sub_1B29A0EA0();
      if (v185)
      {
        sub_1B299DFDC();
        swift_retain();
        sub_1B2E83448();
        sub_1B299B414();
        if (v34) {
          goto LABEL_183;
        }
      }
      else
      {
        sub_1B29A21B4();
        swift_retain();
        if (v34)
        {
LABEL_183:
          unint64_t v186 = swift_bridgeObjectRetain();
          sub_1B2A1D230(v186);
          sub_1B299B414();
          goto LABEL_187;
        }
      }
      type metadata accessor for Node();
      char v34 = (uint64_t *)sub_1B2D693A8();
      sub_1B2D63170();
LABEL_187:
      swift_bridgeObjectRelease();
      uint64_t v189 = v34[2];
      swift_retain();
      swift_release();
      uint64_t v190 = *(void *)(v189 + 16);
      uint64_t v8 = *(void *)(v189 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      sub_1B29FB4D4(v190, v8, v347);
      uint64_t v9 = v191;
      uint64_t v177 = swift_bridgeObjectRelease();
      if (v9) {
        *(unsigned char *)(v4 + 82) = 1;
      }
LABEL_189:
      unint64_t v2 = v351;
      sub_1B299FBD4(v177, v178, v179, v180, v181, v182, v183, v184, v317, v319, v322, v324, v326, v328, v330, v332, v334, v336, v339,
        v342,
        v344,
        v347);
      sub_1B2D65E3C(v4);
      if (v351)
      {
        swift_bridgeObjectRelease();
        swift_release_n();
        goto LABEL_408;
      }
      uint64_t v192 = a1;
      sub_1B2D2AA00();
      int v194 = v193;
      swift_bridgeObjectRelease();
      if (v194 == 4)
      {
        sub_1B29A0EA0();
        if (v195)
        {
          sub_1B29A5390();
          sub_1B2E83448();
          sub_1B299B414();
          if (a1) {
            goto LABEL_194;
          }
        }
        else
        {
          sub_1B2D69488();
          if (a1)
          {
LABEL_194:
            uint64_t v196 = swift_retain();
            uint64_t v1 = (uint64_t)&v359;
            MEMORY[0x1B3EB0FE0](v196);
            if (*(void *)((v359 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v359 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1B2D694C8();
            }
            sub_1B2E828F8();
            sub_1B2E82878();
            swift_bridgeObjectRelease();
            swift_release_n();
            goto LABEL_290;
          }
        }
        uint64_t v359 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRelease();
        goto LABEL_194;
      }
      sub_1B29A0EA0();
      if (v198 == 1)
      {
        if (v197)
        {
          sub_1B299DFDC();
          sub_1B2E83448();
          sub_1B299B414();
        }
        else
        {
          sub_1B29A21B4();
        }
        if (!a1) {
          goto LABEL_293;
        }
        unint64_t v199 = swift_bridgeObjectRetain();
        sub_1B2A1D230(v199);
        sub_1B299B414();
        while (1)
        {
          swift_bridgeObjectRelease();
          uint64_t v253 = *(void *)(v192 + 16);
          uint64_t v9 = *(void *)(v253 + 40);
          *(void *)(v253 + 40) = *(void *)(v4 + 16);
          swift_retain();
          swift_release();
          swift_release();
          swift_release();
          sub_1B29A0EA0();
          if (v254)
          {
            sub_1B299DFDC();
            sub_1B2E83448();
            sub_1B299B414();
            if (!v192)
            {
LABEL_300:
              type metadata accessor for Node();
              uint64_t v255 = sub_1B2D693A8();
              sub_1B2D63170();
              goto LABEL_301;
            }
          }
          else
          {
            sub_1B29A21B4();
            if (!v192) {
              goto LABEL_300;
            }
          }
          BOOL v168 = __OFSUB__(v192, 1);
          uint64_t v255 = v192 - 1;
          if (v168) {
            goto LABEL_377;
          }
          char v256 = sub_1B2E2FE2C(v9);
          sub_1B2D69468(v256);
          if (v8)
          {
            sub_1B299EA40();
          }
          else
          {
            swift_bridgeObjectRetain();
            MEMORY[0x1B3EB1A20](v255, v9);
            sub_1B299B414();
          }
LABEL_301:
          swift_bridgeObjectRelease();
          uint64_t v8 = *(unsigned __int8 *)(v255 + 80);
          swift_release();
          uint64_t v257 = sub_1B2D69554();
          uint64_t v9 = sub_1B2A6A008(v257);
          swift_bridgeObjectRelease();
          if ((v8 & 1) == 0)
          {
            if (v9)
            {
              if (!sub_1B2A6A008(v359)) {
                goto LABEL_417;
              }
              sub_1B2CC3C8C();
              if (!v264)
              {
                uint64_t v265 = sub_1B2A6A008(v359);
                BOOL v168 = __OFSUB__(v265, 1);
                unint64_t v266 = v265 - 1;
                if (!v168)
                {
                  sub_1B2D62FEC(v266);
                  goto LABEL_320;
                }
                __break(1u);
LABEL_426:
                __break(1u);
LABEL_427:
                __break(1u);
LABEL_428:
                __break(1u);
LABEL_429:
                swift_bridgeObjectRelease();
                __break(1u);
                __break(1u);
LABEL_430:
                __break(1u);
                __break(1u);
                __break(1u);
                __break(1u);
LABEL_431:
                __break(1u);
                JUMPOUT(0x1B2D65B90);
              }
LABEL_320:
              uint64_t v9 = v264;
            }
            else
            {
              type metadata accessor for Node();
              uint64_t v9 = sub_1B2D693A8();
              sub_1B2D63170();
            }
            unint64_t v267 = sub_1B2D69554();
            sub_1B2D63338(v267);
            uint64_t v268 = sub_1B299AD88();
            sub_1B2D69400(v268, v269, v270, v271, v272, v273, v274, v275, v317, v319, v322, v324, v326, v328, v330, v332, v334, v336, v339,
              v342);
            uint64_t v357 = v276;
            uint64_t v358 = v8;
            unint64_t v2 = v351;
            sub_1B2D661DC(&v358, v9);
            uint64_t v277 = sub_1B2D69554();
            sub_1B2A6A008(v277);
            sub_1B299AD88();
            uint64_t v351 = 0;
            if (v8)
            {
              if (!sub_1B2A6A008(v359)) {
                goto LABEL_419;
              }
              sub_1B2CC3C8C();
              if (!v278)
              {
                uint64_t v279 = sub_1B2A6A008(v359);
                BOOL v168 = __OFSUB__(v279, 1);
                unint64_t v280 = v279 - 1;
                if (v168) {
                  goto LABEL_427;
                }
                sub_1B2D62FEC(v280);
              }
            }
            else
            {
              type metadata accessor for Node();
              swift_initStackObject();
              sub_1B2D63170();
            }
            swift_release();
            swift_retain();
            uint64_t v281 = swift_bridgeObjectRetain();
            sub_1B2A6A008(v281);
            sub_1B299AD88();
            if (!v8)
            {
              uint64_t v359 = sub_1B29B6A1C(0);
              swift_bridgeObjectRelease();
            }
            uint64_t v282 = swift_retain();
            uint64_t v1 = (uint64_t)&v359;
            MEMORY[0x1B3EB0FE0](v282);
            sub_1B2D69534();
            sub_1B2E828F8();
            sub_1B2E82878();
            swift_release();
            swift_release_n();
            a1 = v366;
LABEL_331:
            sub_1B29A0EA0();
            if (v283)
            {
              sub_1B299DFDC();
              sub_1B2E83448();
              sub_1B299B414();
              if (&v359) {
                goto LABEL_333;
              }
            }
            else
            {
              sub_1B29A21B4();
              if (&v359)
              {
LABEL_333:
                unint64_t v284 = swift_bridgeObjectRetain();
                sub_1B2A1D230(v284);
                sub_1B299B414();
                if (!&v359) {
                  goto LABEL_430;
                }
LABEL_337:
                swift_bridgeObjectRelease();
                char v285 = *(unsigned char *)(v1 + 83);
                swift_release();
                if (v285)
                {
LABEL_340:
                  swift_release();
                  uint64_t v3 = 12;
                  goto LABEL_341;
                }
                unint64_t v286 = sub_1B2D69554();
                uint64_t v9 = sub_1B2D63338(v286);
                swift_bridgeObjectRelease();
                swift_release();
                uint64_t v287 = *(void *)(v9 + 72);
                BOOL v168 = __OFADD__(v287, 1);
                uint64_t v288 = v287 + 1;
                if (!v168)
                {
                  *(void *)(v9 + 72) = v288;
                  goto LABEL_340;
                }
LABEL_412:
                __break(1u);
LABEL_413:
                __break(1u);
LABEL_414:
                __break(1u);
                goto LABEL_415;
              }
            }
            type metadata accessor for Node();
            uint64_t v1 = sub_1B2D693A8();
            sub_1B2D63170();
            goto LABEL_337;
          }
          if (v9)
          {
            if (!sub_1B2A6A008(v359)) {
              goto LABEL_378;
            }
            uint64_t v258 = &v359;
            sub_1B2CC3C8C();
            if (!v259)
            {
              uint64_t v260 = sub_1B2A6A008(v359);
              BOOL v168 = __OFSUB__(v260, 1);
              unint64_t v261 = v260 - 1;
              if (v168) {
                goto LABEL_382;
              }
              sub_1B2D62FEC(v261);
            }
            uint64_t v262 = v259;
            swift_release();
            uint64_t v4 = v262;
          }
          else
          {
            type metadata accessor for Node();
            uint64_t v258 = (uint64_t *)sub_1B2D693A8();
            sub_1B2D63170();
            swift_release();
            uint64_t v4 = (uint64_t)v258;
          }
          uint64_t v9 = v359;
          swift_bridgeObjectRetain_n();
          swift_retain();
          sub_1B2A6A008(v9);
          sub_1B299B414();
          if (v258)
          {
            BOOL v168 = __OFSUB__(v258, 1);
            uint64_t v192 = (uint64_t)v258 - 1;
            if (v168) {
              goto LABEL_379;
            }
            char v263 = sub_1B2E2FE2C(v9);
            sub_1B2D69468(v263);
            if (v8)
            {
              sub_1B299EA40();
            }
            else
            {
              swift_bridgeObjectRetain();
              MEMORY[0x1B3EB1A20](v192, v9);
              sub_1B299B414();
            }
          }
          else
          {
LABEL_293:
            type metadata accessor for Node();
            uint64_t v192 = sub_1B2D693A8();
            sub_1B2D63170();
          }
        }
      }
      if (v197)
      {
        sub_1B29A5390();
        sub_1B2E83448();
        sub_1B299B414();
        if (a1) {
          goto LABEL_204;
        }
      }
      else
      {
        sub_1B2D69488();
        if (a1)
        {
LABEL_204:
          sub_1B29A0EA0();
          if (v200)
          {
            sub_1B299DFDC();
            sub_1B2E83448();
            sub_1B299B414();
          }
          else
          {
            sub_1B29A21B4();
          }
          unint64_t v201 = swift_bridgeObjectRetain();
          sub_1B2A1D230(v201);
          sub_1B299B414();
          uint64_t v222 = swift_bridgeObjectRelease();
          unint64_t v2 = 0;
          sub_1B2D69400(v222, v223, v224, v225, v226, v227, v228, v229, v317, v319, v322, v324, v326, v328, v330, v332, v334, v336, v339,
            v342);
          uint64_t v357 = v230;
          uint64_t v358 = a1;
          sub_1B2D661DC(&v358, v4);
          swift_release();
          uint64_t v9 = v359;
          uint64_t v231 = swift_bridgeObjectRetain();
          sub_1B2A6A008(v231);
          sub_1B299B414();
          if (&vars0 == (uint64_t *)224)
          {
            type metadata accessor for Node();
            swift_initStackObject();
            sub_1B2D63170();
          }
          else
          {
            if (!sub_1B2A6A008(v359)) {
              goto LABEL_418;
            }
            sub_1B2CC3C8C();
            if (!v232)
            {
              uint64_t v233 = sub_1B2A6A008(v359);
              BOOL v168 = __OFSUB__(v233, 1);
              unint64_t v234 = v233 - 1;
              if (v168) {
                goto LABEL_426;
              }
              sub_1B2D62FEC(v234);
            }
          }
          swift_release();
          swift_retain();
          uint64_t v235 = swift_bridgeObjectRetain();
          sub_1B2A6A008(v235);
          sub_1B299AD88();
          if (!v8)
          {
            uint64_t v359 = sub_1B29B6A1C(0);
            swift_bridgeObjectRelease();
          }
          uint64_t v236 = swift_retain();
          uint64_t v1 = (uint64_t)&v359;
          MEMORY[0x1B3EB0FE0](v236);
          sub_1B2D69534();
          sub_1B2E828F8();
          sub_1B2E82878();
          swift_release_n();
          goto LABEL_331;
        }
      }
      swift_release();
      swift_bridgeObjectRetain();
      sub_1B2A14400(36);
      swift_bridgeObjectRelease();
      sub_1B2D693F4();
      uint64_t v355 = v310 + 15;
      unint64_t v356 = 0x80000001B2EA23D0;
      uint64_t v358 = v5;
      sub_1B2E83748();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      uint64_t v9 = v355;
      sub_1B2D6935C();
      sub_1B299E4D4();
      sub_1B2999D68(v311, 12);
      swift_bridgeObjectRelease();
      goto LABEL_370;
    case 13:
      if (v8)
      {
        if ((unint64_t)(v8 - 1) >= *(void *)(v9 + 16)) {
          goto LABEL_390;
        }
        uint64_t v136 = v9 + 32 * (v8 - 1);
        uint64_t v137 = *(void *)(v136 + 40);
        uint64_t v9 = *(void *)(v136 + 48);
        swift_bridgeObjectRetain();
        if (v137 == 0x7079547865646E69 && v9 == 0xE900000000000065)
        {
LABEL_138:
          swift_bridgeObjectRelease();
          uint64_t v164 = v359;
          if ((unint64_t)v359 >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v9 = sub_1B2E83448();
            swift_bridgeObjectRelease();
            if (v9)
            {
LABEL_140:
              unint64_t v2 = v9 - 1;
              if (__OFSUB__(v9, 1)) {
                goto LABEL_413;
              }
              if ((v164 & 0xC000000000000001) != 0)
              {
                uint64_t v165 = v12;
                uint64_t v12 = v5;
                swift_bridgeObjectRetain();
                uint64_t v9 = MEMORY[0x1B3EB1A20](v9 - 1, v164);
                swift_bridgeObjectRelease();
              }
              else
              {
                if ((v2 & 0x8000000000000000) != 0) {
                  goto LABEL_414;
                }
                if (v2 >= *(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
LABEL_415:
                  __break(1u);
                  __break(1u);
                  goto LABEL_416;
                }
                uint64_t v165 = v12;
                uint64_t v12 = v5;
                uint64_t v9 = *(void *)(v164 + 8 * v2 + 32);
                swift_retain();
              }
              goto LABEL_249;
            }
          }
          else
          {
            uint64_t v9 = *(void *)((v359 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v9) {
              goto LABEL_140;
            }
          }
          uint64_t v165 = v12;
          uint64_t v12 = v5;
          type metadata accessor for Node();
          uint64_t v9 = sub_1B2D693A8();
          sub_1B2D63170();
LABEL_249:
          swift_bridgeObjectRelease();
          uint64_t v1 = a1;
          sub_1B2D2AA00();
          uint64_t v217 = a1;
          uint64_t v218 = *(void *)(a1 + 56);
          BOOL v168 = __OFADD__(v218, 1);
          uint64_t v219 = v218 + 1;
          if (!v168)
          {
            LOBYTE(v5) = v213;
            a1 = v214;
            uint64_t v3 = v215;
            uint64_t v4 = v216;
            *(void *)(v217 + 56) = v219;
            uint64_t v355 = v214;
            unint64_t v356 = v215;
            swift_bridgeObjectRetain();
            v220._uint64_t countAndFlagsBits = sub_1B2E82618();
            KnosisIndexType.init(rawValue:)(v220);
            if (v358 != 9)
            {
              *(unsigned char *)(*(void *)(v9 + 16) + 64) = v358;
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v3 = 13;
              uint64_t v5 = v12;
              uint64_t v12 = v165;
              goto LABEL_288;
            }
LABEL_365:
            swift_bridgeObjectRetain();
            sub_1B2A14400(21);
            swift_bridgeObjectRelease();
            uint64_t v355 = 0xD000000000000013;
            unint64_t v356 = 0x80000001B2EA23B0;
            swift_bridgeObjectRetain();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            uint64_t v307 = v355;
            unint64_t v308 = v356;
            sub_1B2D6935C();
            sub_1B299E4D4();
            *(void *)uint64_t v309 = v5;
            *(void *)(v309 + 8) = a1;
            *(void *)(v309 + 16) = v3;
            *(void *)(v309 + 24) = v4;
            *(void *)(v309 + 32) = v307;
            *(void *)(v309 + 40) = v308;
            *(unsigned char *)(v309 + 48) = 1;
            swift_willThrow();
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_357;
          }
LABEL_387:
          __break(1u);
          goto LABEL_388;
        }
      }
      else
      {
        sub_1B2D693F4();
        uint64_t v137 = v163 + 13;
        uint64_t v9 = v317 | 0x8000000000000000;
      }
      if (sub_1B299D7C8()) {
        goto LABEL_138;
      }
      BOOL v166 = v137 == 0x74696D696CLL && v9 == 0xE500000000000000;
      if (v166 || (sub_1B299D7C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1B29A0EA0();
        if (v172)
        {
          sub_1B299DFDC();
          sub_1B2E83448();
          sub_1B299B414();
          if (v137)
          {
LABEL_161:
            unint64_t v2 = v137 - 1;
            if (__OFSUB__(v137, 1)) {
              goto LABEL_421;
            }
            if ((v9 & 0xC000000000000001) != 0)
            {
              swift_bridgeObjectRetain();
              sub_1B2D69508();
              swift_bridgeObjectRelease();
            }
            else
            {
              if ((v2 & 0x8000000000000000) != 0) {
                goto LABEL_422;
              }
              sub_1B2D693E4();
              if (v46)
              {
LABEL_423:
                __break(1u);
                goto LABEL_424;
              }
              swift_retain();
            }
            goto LABEL_279;
          }
        }
        else
        {
          sub_1B29A21B4();
          if (v137) {
            goto LABEL_161;
          }
        }
        type metadata accessor for Node();
        sub_1B2D693A8();
        sub_1B2D63170();
LABEL_279:
        swift_bridgeObjectRelease();
        uint64_t v237 = v366;
        sub_1B2D2AA00();
        uint64_t v238 = *(void *)(v237 + 56);
        BOOL v168 = __OFADD__(v238, 1);
        uint64_t v239 = v238 + 1;
        if (v168) {
          goto LABEL_420;
        }
        sub_1B2D694B0(v239);
        uint64_t v1 = (uint64_t)&v355;
        uint64_t v240 = sub_1B2D69494();
        sub_1B2D66D9C(v240, v241, v242, v243, v244);
LABEL_286:
        uint64_t v351 = v2;
        if (v2)
        {
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_357;
        }
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v3 = 13;
LABEL_288:
        a1 = v366;
        goto LABEL_341;
      }
      if (v137 == 0x736D61726170 && v9 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v137 = sub_1B299D7C8();
        swift_bridgeObjectRelease();
        if ((v137 & 1) == 0) {
          goto LABEL_383;
        }
      }
      sub_1B29A0EA0();
      if (v174)
      {
        sub_1B299DFDC();
        sub_1B2E83448();
        sub_1B299B414();
        if (v137)
        {
LABEL_175:
          unint64_t v175 = swift_bridgeObjectRetain();
          uint64_t v176 = sub_1B2A1D230(v175);
          swift_bridgeObjectRelease();
          if (!v176) {
            goto LABEL_431;
          }
          goto LABEL_284;
        }
      }
      else
      {
        sub_1B29A21B4();
        if (v137) {
          goto LABEL_175;
        }
      }
      type metadata accessor for Node();
      sub_1B2D693A8();
      sub_1B2D63170();
LABEL_284:
      swift_bridgeObjectRelease();
      uint64_t v1 = v366;
      sub_1B2D2AA00();
      uint64_t v245 = *(void *)(v1 + 56);
      BOOL v168 = __OFADD__(v245, 1);
      uint64_t v246 = v245 + 1;
      if (v168) {
        goto LABEL_428;
      }
      sub_1B2D694B0(v246);
      uint64_t v247 = sub_1B2D69494();
      sub_1B2D67140(v247, v248, v249, v250, v251);
      goto LABEL_286;
    case 15:
      sub_1B29A0EA0();
      if (v49)
      {
        sub_1B299DFDC();
        sub_1B2E83448();
        sub_1B299B414();
        if (v1) {
          goto LABEL_55;
        }
      }
      else
      {
        sub_1B29A21B4();
        if (v1)
        {
LABEL_55:
          unint64_t v2 = v1 - 1;
          if (__OFSUB__(v1, 1))
          {
LABEL_388:
            __break(1u);
LABEL_389:
            __break(1u);
LABEL_390:
            __break(1u);
LABEL_391:
            __break(1u);
            goto LABEL_392;
          }
          if ((v9 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            sub_1B2D69508();
            sub_1B299B414();
          }
          else
          {
            if ((v2 & 0x8000000000000000) != 0)
            {
LABEL_392:
              __break(1u);
LABEL_393:
              __break(1u);
              goto LABEL_394;
            }
            sub_1B2D693E4();
            if (v46)
            {
LABEL_394:
              __break(1u);
              goto LABEL_395;
            }
            sub_1B299EA40();
          }
LABEL_211:
          swift_bridgeObjectRelease();
          *(unsigned char *)(v1 + 83) = 1;
          swift_release();
          uint64_t v3 = 15;
          goto LABEL_341;
        }
      }
      type metadata accessor for Node();
      uint64_t v1 = sub_1B2D693A8();
      sub_1B2D63170();
      goto LABEL_211;
    case 16:
      sub_1B29A0EA0();
      if (v124)
      {
        sub_1B299DFDC();
        sub_1B2E83448();
        sub_1B299B414();
        if (v1)
        {
LABEL_94:
          unint64_t v2 = v1 - 1;
          if (__OFSUB__(v1, 1)) {
            goto LABEL_389;
          }
          if ((v9 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            sub_1B2D69508();
            sub_1B299B414();
          }
          else
          {
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_393;
            }
            sub_1B2D693E4();
            if (v46)
            {
LABEL_395:
              __break(1u);
LABEL_396:
              __break(1u);
LABEL_397:
              __break(1u);
              goto LABEL_398;
            }
            sub_1B299EA40();
          }
LABEL_214:
          swift_bridgeObjectRelease();
          *(unsigned char *)(v1 + 83) = 0;
          swift_release();
          sub_1B29A0EA0();
          if (v202)
          {
            sub_1B299DFDC();
            sub_1B2E83448();
            sub_1B299B414();
            if (v1)
            {
LABEL_216:
              unint64_t v2 = v1 - 1;
              if (__OFSUB__(v1, 1)) {
                goto LABEL_391;
              }
              if ((v9 & 0xC000000000000001) != 0)
              {
                swift_bridgeObjectRetain();
                sub_1B2D69508();
                sub_1B299B414();
              }
              else
              {
                if ((v2 & 0x8000000000000000) != 0) {
                  goto LABEL_396;
                }
                sub_1B2D693E4();
                if (v46) {
                  goto LABEL_397;
                }
                sub_1B299EA40();
              }
LABEL_223:
              swift_bridgeObjectRelease();
              uint64_t v205 = *(void *)(v1 + 72);
              BOOL v168 = __OFADD__(v205, 1);
              uint64_t v206 = v205 + 1;
              if (!v168)
              {
                *(void *)(v1 + 72) = v206;
                swift_release();
                uint64_t v3 = 16;
                goto LABEL_341;
              }
LABEL_386:
              __break(1u);
              goto LABEL_387;
            }
          }
          else
          {
            sub_1B29A21B4();
            if (v1) {
              goto LABEL_216;
            }
          }
          type metadata accessor for Node();
          uint64_t v1 = sub_1B2D693A8();
          sub_1B2D63170();
          goto LABEL_223;
        }
      }
      else
      {
        sub_1B29A21B4();
        if (v1) {
          goto LABEL_94;
        }
      }
      type metadata accessor for Node();
      uint64_t v1 = sub_1B2D693A8();
      sub_1B2D63170();
      goto LABEL_214;
    default:
      sub_1B2D6935C();
      sub_1B299E4D4();
      void *v291 = v3;
      v291[1] = v12;
      v291[2] = v11;
      v291[3] = v5;
      sub_1B2D693F4();
      *(void *)(v293 + 32) = v292 + 6;
      *(void *)(v293 + 40) = 0x80000001B2EA22B0;
      *(unsigned char *)(v293 + 48) = 2;
      goto LABEL_407;
  }
}

uint64_t sub_1B2D65BD0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = *v5;
  if (a1 == 8)
  {
    if (qword_1E9C38C98 != -1) {
      swift_once();
    }
    uint64_t v10 = off_1E9C435E0;
    swift_bridgeObjectRetain();
    a2 = sub_1B29B2544(a2, a3, v10);
    uint64_t v12 = v11;
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12)
    {
      __break(1u);
      return result;
    }
    a3 = v12;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  type metadata accessor for Node();
  uint64_t v14 = swift_allocObject();
  sub_1B2D63170();
  type metadata accessor for KnosisQueryParam();
  uint64_t v15 = sub_1B2E82148();
  type metadata accessor for QueryNode();
  swift_allocObject();
  *(void *)(v14 + 16) = sub_1B2DC3EA4(a2, a3, v15);
  swift_release();
  uint64_t v16 = *(void *)(v14 + 16);
  uint64_t v17 = *(void *)(v16 + 16);
  uint64_t v18 = *(void *)(v16 + 24);
  swift_bridgeObjectRetain();
  sub_1B29B2620(v21, v17, v18, v9);
  swift_bridgeObjectRelease();
  sub_1B2A844A0((uint64_t)v21, (uint64_t)&v22, &qword_1EB7D9630);
  if (*((void *)&v22 + 1))
  {
    long long v25 = v22;
    long long v26 = v23;
    long long v27 = v24;
    long long v28 = v22;
    uint64_t v29 = v23;
    sub_1B2A844A0((uint64_t)&v27, (uint64_t)v30, &qword_1EB7D9790);
    long long v19 = v26;
    *(_OWORD *)(v14 + 24) = v25;
    *(_OWORD *)(v14 + 40) = v19;
    *(_OWORD *)(v14 + 56) = v27;
    sub_1B2A28D1C((uint64_t)&v28);
    sub_1B2AE7004((uint64_t)&v29);
    sub_1B2A28D1C((uint64_t)v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A227D4((uint64_t)&v28);
    sub_1B2AE7030((uint64_t)&v29);
    sub_1B2A227D4((uint64_t)v30);
    *(unsigned char *)(v14 + 80) = a5 & 1;
  }
  else
  {
    uint64_t v20 = swift_allocObject();
    sub_1B2D63170();
    swift_release();
    return v20;
  }
  return v14;
}

uint64_t sub_1B2D65E3C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  swift_bridgeObjectRetain();
  sub_1B2D68274(&v17, v4, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1)
  {
    uint64_t v7 = *(void **)(a1 + 16);
    BOOL v8 = v7[2] == 26217 && v7[3] == 0xE200000000000000;
    if (v8 || (sub_1B2E837A8()) && *(void *)(a1 + 72) == 2)
    {
      long long v23 = v17;
      sub_1B2A227D4((uint64_t)&v23);
      uint64_t v22 = v18;
      uint64_t v9 = &v21;
      uint64_t v10 = &v22;
LABEL_22:
      sub_1B2AE7030((uint64_t)v10);
      sub_1B2A844A0((uint64_t)v20, (uint64_t)v9, &qword_1EB7D9790);
      return sub_1B2A227D4((uint64_t)v9);
    }
    uint64_t v30 = v18;
    uint64_t v11 = *(void *)(v18 + 16);
    if ((*(unsigned char *)(a1 + 82) & 1) != 0 || (*(unsigned char *)(a1 + 81) & 1) == 0 && *(unsigned char *)(a1 + 80) == 1)
    {
      swift_beginAccess();
      uint64_t v12 = v7[4];
      if (v12 && v11 - 1 == *(void *)(v12 + 16)) {
        sub_1B2D683D0(a1);
      }
    }
    uint64_t v13 = *(void *)(a1 + 72);
    if (v11 == v13 || (v19 & 1) != 0)
    {
      if (v13 >= v11)
      {
        long long v27 = v17;
        sub_1B2A227D4((uint64_t)&v27);
        uint64_t v9 = &v26;
        uint64_t v10 = &v30;
        goto LABEL_22;
      }
      char v14 = v19;
      long long v25 = v17;
      sub_1B2A227D4((uint64_t)&v25);
      sub_1B2AE7030((uint64_t)&v30);
      sub_1B2A844A0((uint64_t)v20, (uint64_t)v24, &qword_1EB7D9790);
      uint64_t result = sub_1B2A227D4((uint64_t)v24);
      if ((v14 & 1) == 0) {
        return result;
      }
    }
    else
    {
      long long v29 = v17;
      sub_1B2A227D4((uint64_t)&v29);
      sub_1B2AE7030((uint64_t)&v30);
      sub_1B2A844A0((uint64_t)v20, (uint64_t)v28, &qword_1EB7D9790);
      sub_1B2A227D4((uint64_t)v28);
    }
    *(void *)&long long v16 = 0;
    *((void *)&v16 + 1) = 0xE000000000000000;
    sub_1B2E831F8();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2D6935C();
    swift_allocError();
    *(_OWORD *)uint64_t v15 = 0u;
    *(_OWORD *)(v15 + 16) = 0u;
    *(_OWORD *)(v15 + 32) = v16;
    *(unsigned char *)(v15 + 48) = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B2D661DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 16);
  uint64_t v7 = *(void *)(v5 + 16);
  unint64_t v6 = *(void *)(v5 + 24);
  uint64_t v8 = v7 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0) {
    uint64_t v9 = HIBYTE(v6) & 0xF;
  }
  else {
    uint64_t v9 = v8;
  }
  if (!v9)
  {
    swift_retain();
    uint64_t result = swift_release();
    *a1 = a2;
    return result;
  }
  uint64_t result = sub_1B2D67F24(v4);
  if (v2) {
    return result;
  }
  uint64_t v12 = result;
  uint64_t v13 = v11;
  uint64_t v14 = *(void *)(v4 + 16);
  swift_beginAccess();
  if (!*(void *)(v14 + 32))
  {
    swift_endAccess();
    goto LABEL_12;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1B29B2540(v12, v13);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  if (!v15)
  {
LABEL_12:
    type metadata accessor for KnosisQueryParam();
    swift_allocObject();
    uint64_t v18 = swift_retain();
    uint64_t v15 = sub_1B2DC6148(v18);
    goto LABEL_13;
  }
  if (*(unsigned char *)(v4 + 83) == 1)
  {
    uint64_t v16 = *(void *)(a2 + 16);
    swift_beginAccess();
    *(void *)(v15 + 24) = v16;
    swift_retain();
    swift_release();
LABEL_13:
    swift_retain();
    swift_retain();
    sub_1B2DC2100(v12, v13, v15);
    swift_release();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  *(void *)&long long v20 = 0x206D61726170;
  *((void *)&v20 + 1) = 0xE600000000000000;
  swift_retain();
  sub_1B29A3EB4(&qword_1E9C435F8);
  sub_1B2E823E8();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2D6935C();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_OWORD *)(v19 + 32) = v20;
  *(unsigned char *)(v19 + 48) = 1;
  swift_willThrow();
  return swift_release();
}

void sub_1B2D6650C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v92 = *v3;
  uint64_t v7 = v3[2];
  uint64_t v101 = (_OWORD *)v3[1];
  uint64_t v8 = v3[3];
  uint64_t v90 = v3[4];
  uint64_t v91 = v3[5];
  if (qword_1E9C38CA0 != -1) {
    swift_once();
  }
  uint64_t v9 = v100;
  uint64_t v10 = qword_1E9C435E8;
  uint64_t v11 = *a3;
  uint64_t v12 = sub_1B2D62C00(*(void *)(*(void *)(*a3 + 16) + 16), *(void *)(*(void *)(*a3 + 16) + 24), (void *)qword_1E9C435E8);
  if ((v13 & 1) != 0
    || (uint64_t v14 = v12,
        uint64_t v15 = (void *)v10,
        uint64_t v16 = *a2,
        uint64_t v17 = sub_1B2D62C00(*(void *)(*(void *)(*a2 + 16) + 16), *(void *)(*(void *)(*a2 + 16) + 24), v15),
        (v18 & 1) != 0)
    || *(uint64_t *)(v16 + 72) < 1)
  {
LABEL_13:
    uint64_t v94 = v92;
    uint64_t v95 = v101;
    uint64_t v30 = v7;
    uint64_t v96 = v7;
    uint64_t v97 = v8;
    uint64_t v31 = v8;
    uint64_t v8 = v90;
    uint64_t v7 = v91;
    uint64_t v98 = v90;
    uint64_t v99 = v91;
    long long v32 = *(_OWORD *)(a1 + 16);
    uint64_t v9[4] = *(_OWORD *)a1;
    void v9[5] = v32;
    long long v33 = *(_OWORD *)(a1 + 48);
    v9[6] = *(_OWORD *)(a1 + 32);
    v9[7] = v33;
    unsigned __int8 v34 = sub_1B2D2ABA8();
    sub_1B2D6772C(v11, v34, v35, v36, v37);
    if (!v4)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void *)(v11 + 72);
      BOOL v20 = __OFADD__(v38, 1);
      uint64_t v39 = v38 + 1;
      if (v20)
      {
        __break(1u);
      }
      else
      {
        *(void *)(v11 + 72) = v39;
        uint64_t v94 = v92;
        uint64_t v95 = v101;
        uint64_t v96 = v30;
        uint64_t v97 = v31;
        uint64_t v98 = v90;
        uint64_t v99 = v91;
        sub_1B2D2AA00();
        uint64_t v44 = *(void *)(a1 + 56);
        BOOL v20 = __OFADD__(v44, 1);
        uint64_t v45 = v44 + 1;
        if (!v20)
        {
          *(void *)(a1 + 56) = v45;
          sub_1B2D6772C(v11, v40, v41, v42, v43);
          swift_bridgeObjectRelease();
          uint64_t v46 = *(void *)(v11 + 72);
          BOOL v20 = __OFADD__(v46, 1);
          uint64_t v47 = v46 + 1;
          if (!v20)
          {
            *(void *)(v11 + 72) = v47;
LABEL_21:
            swift_retain();
            return;
          }
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
      }
      __break(1u);
      goto LABEL_48;
    }
    goto LABEL_17;
  }
  if (v17 < v14)
  {
    uint64_t v9 = v101;
    uint64_t v94 = v92;
    uint64_t v95 = v101;
    uint64_t v96 = v7;
    uint64_t v97 = v8;
    uint64_t v98 = v90;
    uint64_t v99 = v91;
    sub_1B2D661DC(a3, v16);
    if (v4) {
      return;
    }
    uint64_t v16 = *a3;
    uint64_t v19 = *(void *)(*a3 + 72);
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20)
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    *(void *)(v16 + 72) = v21;
    uint64_t v94 = v92;
    uint64_t v95 = v9;
    uint64_t v96 = v7;
    uint64_t v97 = v8;
    uint64_t v98 = v90;
    uint64_t v99 = v91;
    sub_1B2D2AA00();
    uint64_t v26 = *(void *)(a1 + 56);
    BOOL v20 = __OFADD__(v26, 1);
    uint64_t v27 = v26 + 1;
    if (v20)
    {
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    uint64_t v11 = v24;
    *(void *)(a1 + 56) = v27;
    sub_1B2D6772C(v16, v22, v23, v24, v25);
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void *)(v16 + 72);
    BOOL v20 = __OFADD__(v28, 1);
    uint64_t v29 = v28 + 1;
    if (!v20) {
      goto LABEL_32;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (v14 == v17)
  {
    uint64_t v94 = v92;
    uint64_t v95 = v101;
    uint64_t v96 = v7;
    uint64_t v97 = v8;
    uint64_t v98 = v90;
    uint64_t v99 = v91;
    sub_1B2D2AA00();
    uint64_t v52 = *(void *)(a1 + 56);
    BOOL v20 = __OFADD__(v52, 1);
    uint64_t v53 = v52 + 1;
    if (v20)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    *(void *)(a1 + 56) = v53;
    sub_1B2D6772C(v16, v48, v49, v50, v51);
    if (!v4)
    {
      swift_bridgeObjectRelease();
      uint64_t v59 = *(void *)(v16 + 72);
      BOOL v20 = __OFADD__(v59, 1);
      uint64_t v29 = v59 + 1;
      if (!v20)
      {
LABEL_32:
        *(void *)(v16 + 72) = v29;
        goto LABEL_21;
      }
      goto LABEL_57;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v94 = v92;
  uint64_t v95 = v101;
  uint64_t v96 = v7;
  uint64_t v97 = v8;
  uint64_t v98 = v90;
  uint64_t v99 = v91;
  uint64_t v54 = sub_1B2D67AAC(v16);
  if (!v4)
  {
    uint64_t v56 = v16;
    uint64_t v57 = v55;
    uint64_t v87 = v54;
    uint64_t v85 = v56;
    uint64_t v58 = *(void *)(v56 + 16);
    swift_beginAccess();
    if (*(void *)(v58 + 32))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v86 = sub_1B29B2540(v87, v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v86)
      {
        swift_beginAccess();
        if (*(void *)(v86 + 24))
        {
          uint64_t v94 = v92;
          uint64_t v95 = v101;
          uint64_t v96 = v7;
          uint64_t v97 = v8;
          uint64_t v98 = v90;
          uint64_t v99 = v91;
          char v89 = (void *)swift_retain();
          v93[0] = sub_1B2D67CD4(v89);
          uint64_t v94 = v92;
          uint64_t v95 = v101;
          uint64_t v96 = v7;
          uint64_t v97 = v8;
          uint64_t v98 = v90;
          uint64_t v99 = v91;
          sub_1B2D6650C(a1, v93, a3);
          uint64_t v76 = *(void *)(v85 + 16);
          swift_beginAccess();
          if (*(void *)(v76 + 32))
          {
            type metadata accessor for KnosisQueryParam();
            swift_allocObject();
            swift_retain();
            uint64_t v77 = swift_retain();
            uint64_t v78 = sub_1B2DC6148(v77);
            sub_1B2D691C8(v78, v87, v57);
            swift_endAccess();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
          }
          swift_release();
          swift_release();
          goto LABEL_21;
        }
        swift_beginAccess();
        if (*(void *)(*(void *)(v86 + 16) + 16))
        {
          uint64_t v94 = v92;
          uint64_t v95 = v101;
          uint64_t v96 = v7;
          uint64_t v97 = v8;
          uint64_t v98 = v90;
          uint64_t v99 = v91;
          long long v60 = *(_OWORD *)(a1 + 16);
          v100[0] = *(_OWORD *)a1;
          long long v61 = *(_OWORD *)(a1 + 32);
          long long v62 = *(_OWORD *)(a1 + 48);
          v100[1] = v60;
          v100[2] = v61;
          v100[3] = v62;
          unsigned __int8 v63 = sub_1B2D2ABA8();
          sub_1B2D6772C(v11, v63, v64, v65, v66);
          swift_bridgeObjectRelease();
          uint64_t v67 = *(void *)(v11 + 72);
          BOOL v20 = __OFADD__(v67, 1);
          uint64_t v68 = v67 + 1;
          if (v20)
          {
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          *(void *)(v11 + 72) = v68;
          uint64_t v94 = v92;
          uint64_t v95 = v101;
          uint64_t v96 = v7;
          uint64_t v97 = v8;
          uint64_t v98 = v90;
          uint64_t v99 = v91;
          sub_1B2D2AA00();
          uint64_t v73 = *(void *)(a1 + 56);
          BOOL v20 = __OFADD__(v73, 1);
          uint64_t v74 = v73 + 1;
          if (v20)
          {
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          *(void *)(a1 + 56) = v74;
          sub_1B2D6772C(v11, v69, v70, v71, v72);
          swift_bridgeObjectRelease();
          uint64_t v79 = *(void *)(v11 + 72);
          BOOL v20 = __OFADD__(v79, 1);
          uint64_t v80 = v79 + 1;
          if (v20) {
            goto LABEL_60;
          }
          *(void *)(v11 + 72) = v80;
          uint64_t v81 = *(void *)(v85 + 16);
          swift_beginAccess();
          if (*(void *)(v81 + 32))
          {
            swift_retain();
            sub_1B2B29910(v87, v57);
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
LABEL_49:
            uint64_t v82 = *(void *)(v85 + 72);
            BOOL v20 = __OFSUB__(v82, 1);
            uint64_t v83 = v82 - 1;
            if (v20)
            {
LABEL_61:
              __break(1u);
              return;
            }
            *(void *)(v85 + 72) = v83;
            uint64_t v94 = v92;
            uint64_t v95 = v101;
            uint64_t v96 = v7;
            uint64_t v97 = v8;
            uint64_t v98 = v90;
            uint64_t v99 = v91;
            sub_1B2D661DC(a2, v11);
            swift_release();
            uint64_t v16 = *a2;
            uint64_t v84 = *(void *)(*a2 + 72);
            BOOL v20 = __OFADD__(v84, 1);
            uint64_t v29 = v84 + 1;
            if (!v20) {
              goto LABEL_32;
            }
            __break(1u);
            goto LABEL_53;
          }
LABEL_48:
          swift_endAccess();
          swift_bridgeObjectRelease();
          goto LABEL_49;
        }
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    sub_1B2D6935C();
    swift_allocError();
    *(_OWORD *)uint64_t v75 = 0u;
    *(_OWORD *)(v75 + 16) = 0u;
    *(void *)(v75 + 32) = 0xD00000000000001FLL;
    *(void *)(v75 + 40) = 0x80000001B2EA24B0;
    *(unsigned char *)(v75 + 48) = 0;
    swift_willThrow();
  }
}

uint64_t sub_1B2D66D9C(uint64_t result, unsigned __int8 a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9 = HIBYTE(a4) & 0xF;
  uint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v11 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {
LABEL_46:
    unint64_t v33 = 0;
    uint64_t v34 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    unint64_t v33 = 0xD000000000000013;
    uint64_t v34 = 0x80000001B2EA23B0;
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    unint64_t v26 = v33;
    uint64_t v27 = v34;
    sub_1B2D6935C();
    swift_allocError();
    *(void *)uint64_t v28 = a2;
    *(void *)(v28 + 8) = a3;
    *(void *)(v28 + 16) = a4;
    *(void *)(v28 + 24) = a5;
    *(void *)(v28 + 32) = v26;
    *(void *)(v28 + 40) = v27;
    *(unsigned char *)(v28 + 48) = 1;
    return swift_willThrow();
  }
  uint64_t v12 = result;
  if ((a4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B2A71148(a3, a4, 10);
    char v16 = v32;
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  if ((a4 & 0x2000000000000000) == 0)
  {
    if ((a3 & 0x1000000000000000) != 0) {
      char v13 = (unsigned __int8 *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      char v13 = (unsigned __int8 *)sub_1B2E83298();
    }
    uint64_t result = (uint64_t)sub_1B2A71130(v13, v10);
    uint64_t v14 = result;
    char v16 = v15 & 1;
LABEL_44:
    if ((v16 & 1) == 0)
    {
      *(void *)(*(void *)(v12 + 16) + 48) = v14;
      return result;
    }
    goto LABEL_46;
  }
  unint64_t v33 = a3;
  uint64_t v34 = a4 & 0xFFFFFFFFFFFFFFLL;
  if (a3 == 43)
  {
    if (!v9) {
      goto LABEL_56;
    }
    if (v9 == 1 || (BYTE1(a3) - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v14 = (BYTE1(a3) - 48);
    if (v9 != 2)
    {
      if ((BYTE2(a3) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v14 = 10 * (BYTE1(a3) - 48) + (BYTE2(a3) - 48);
      uint64_t v17 = v9 - 3;
      if (v17)
      {
        char v18 = (unsigned __int8 *)&v33 + 3;
        while (1)
        {
          unsigned int v19 = *v18 - 48;
          if (v19 > 9) {
            goto LABEL_31;
          }
          uint64_t v20 = 10 * v14;
          if ((unsigned __int128)(v14 * (__int128)10) >> 64 != (10 * v14) >> 63) {
            goto LABEL_31;
          }
          uint64_t v14 = v20 + v19;
          if (__OFADD__(v20, v19)) {
            goto LABEL_31;
          }
          char v16 = 0;
          ++v18;
          if (!--v17) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_43:
    char v16 = 0;
    goto LABEL_44;
  }
  if (a3 != 45)
  {
    if (!v9 || (a3 - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v14 = (a3 - 48);
    if (v9 != 1)
    {
      if ((BYTE1(a3) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v14 = 10 * (a3 - 48) + (BYTE1(a3) - 48);
      uint64_t v21 = v9 - 2;
      if (v21)
      {
        unsigned __int8 v22 = (unsigned __int8 *)&v33 + 2;
        while (1)
        {
          unsigned int v23 = *v22 - 48;
          if (v23 > 9) {
            goto LABEL_31;
          }
          uint64_t v24 = 10 * v14;
          if ((unsigned __int128)(v14 * (__int128)10) >> 64 != (10 * v14) >> 63) {
            goto LABEL_31;
          }
          uint64_t v14 = v24 + v23;
          if (__OFADD__(v24, v23)) {
            goto LABEL_31;
          }
          char v16 = 0;
          ++v22;
          if (!--v21) {
            goto LABEL_44;
          }
        }
      }
    }
    goto LABEL_43;
  }
  if (v9)
  {
    if (v9 != 1 && (BYTE1(a3) - 48) <= 9u)
    {
      if (v9 == 2)
      {
        char v16 = 0;
        uint64_t v14 = -(uint64_t)(BYTE1(a3) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(a3) - 48) <= 9u)
      {
        uint64_t v14 = -10 * (BYTE1(a3) - 48) - (BYTE2(a3) - 48);
        uint64_t v25 = v9 - 3;
        if (!v25) {
          goto LABEL_43;
        }
        uint64_t v29 = (unsigned __int8 *)&v33 + 3;
        while (1)
        {
          unsigned int v30 = *v29 - 48;
          if (v30 > 9) {
            break;
          }
          uint64_t v31 = 10 * v14;
          if ((unsigned __int128)(v14 * (__int128)10) >> 64 != (10 * v14) >> 63) {
            break;
          }
          uint64_t v14 = v31 - v30;
          if (__OFSUB__(v31, v30)) {
            break;
          }
          char v16 = 0;
          ++v29;
          if (!--v25) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_31:
    uint64_t v14 = 0;
    char v16 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_56:
  __break(1u);
  return result;
}

void sub_1B2D67140(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  HIDWORD(v76) = a2;
  uint64_t v71 = a1;
  uint64_t v86 = sub_1B2E800E8();
  sub_1B299D278();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1B299E4A0();
  uint64_t v15 = v14 - v13;
  uint64_t v77 = a3;
  sub_1B29C3640();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1B2E83048();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v73 = a4;
    uint64_t v74 = a5;
    uint64_t v75 = v5;
    uint64_t v93 = MEMORY[0x1E4FBC860];
    sub_1B29C0254();
    uint64_t v72 = v16;
    uint64_t v79 = v16 + 32;
    uint64_t v84 = (void (**)(uint64_t, uint64_t))(v11 + 8);
    sub_1B2A90BE4();
    uint64_t v18 = 0;
    uint64_t v78 = v17;
    do
    {
      uint64_t v82 = v18;
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1B2E83048();
      uint64_t v20 = *(void *)(v19 + 16);
      if (v20)
      {
        uint64_t v90 = MEMORY[0x1E4FBC860];
        sub_1B29BFD80();
        uint64_t v80 = v19;
        uint64_t v21 = v19 + 56;
        do
        {
          swift_bridgeObjectRetain();
          sub_1B2E800B8();
          uint64_t v22 = sub_1B2E83008();
          uint64_t v24 = v23;
          (*v84)(v15, v86);
          swift_bridgeObjectRelease();
          uint64_t v25 = v90;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B29BFD80();
            uint64_t v25 = v90;
          }
          unint64_t v27 = *(void *)(v25 + 16);
          unint64_t v26 = *(void *)(v25 + 24);
          if (v27 >= v26 >> 1)
          {
            sub_1B299B984(v26);
            sub_1B29BFD80();
            uint64_t v25 = v90;
          }
          *(void *)(v25 + 16) = v27 + 1;
          unint64_t v28 = v25 + 16 * v27;
          *(void *)(v28 + 32) = v22;
          *(void *)(v28 + 40) = v24;
          v21 += 32;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v17 = v78;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = MEMORY[0x1E4FBC860];
      }
      uint64_t v29 = v93;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29C0254();
        uint64_t v29 = v93;
      }
      uint64_t v30 = v82;
      unint64_t v32 = *(void *)(v29 + 16);
      unint64_t v31 = *(void *)(v29 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1B299B984(v31);
        sub_1B29C0254();
        uint64_t v30 = v82;
        uint64_t v29 = v93;
      }
      uint64_t v18 = v30 + 1;
      *(void *)(v29 + 16) = v32 + 1;
      *(void *)(v29 + 8 * v32 + 32) = v25;
    }
    while (v18 != v17);
    swift_bridgeObjectRelease();
    a5 = v74;
    uint64_t v6 = v5;
    a4 = v73;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  sub_1B2D62548(v29, BYTE4(v76), v77, a4, a5);
  if (!v6)
  {
    uint64_t v34 = v33;
    uint64_t v85 = *(void *)(v33 + 16);
    if (v85)
    {
      uint64_t v81 = 0;
      swift_bridgeObjectRetain();
      uint64_t v35 = 0;
      uint64_t v36 = MEMORY[0x1E4FBC868];
      uint64_t v83 = v34;
      while (1)
      {
        uint64_t v37 = *(void *)(v34 + 8 * v35 + 32);
        uint64_t v38 = *(void *)(v37 + 16);
        if (!v38) {
          break;
        }
        if (v38 == 1) {
          goto LABEL_40;
        }
        uint64_t v39 = *(void *)(v37 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1B2E82618();
        uint64_t v42 = v41;
        uint64_t v88 = sub_1B2E82618();
        uint64_t v44 = v43;
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v51 = sub_1B29DB060(v40, v42, v45, v46, v47, v48, v49, v50, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81,
                v83,
                v85,
                v35,
                v88,
                v90,
                v36,
                v39);
        if (__OFADD__(*(void *)(v36 + 16), (v52 & 1) == 0)) {
          goto LABEL_41;
        }
        unint64_t v53 = v51;
        char v54 = v52;
        sub_1B29A3EB4(&qword_1EB7D9850);
        if (sub_1B2E83398())
        {
          uint64_t v61 = sub_1B29DB060(v40, v42, v55, v56, v57, v58, v59, v60, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81,
                  v83,
                  v85,
                  v87,
                  v89,
                  v90,
                  v91,
                  v92);
          if ((v54 & 1) != (v62 & 1)) {
            goto LABEL_43;
          }
          unint64_t v53 = v61;
        }
        uint64_t v36 = v91;
        if (v54)
        {
          unsigned __int8 v63 = (uint64_t *)(*(void *)(v91 + 56) + 16 * v53);
          swift_bridgeObjectRelease();
          *unsigned __int8 v63 = v89;
          v63[1] = v44;
        }
        else
        {
          sub_1B299D418(v91 + 8 * (v53 >> 6));
          uint64_t v65 = (uint64_t *)(v64 + 16 * v53);
          *uint64_t v65 = v40;
          v65[1] = v42;
          uint64_t v66 = (uint64_t *)(*(void *)(v91 + 56) + 16 * v53);
          *uint64_t v66 = v89;
          v66[1] = v44;
          uint64_t v67 = *(void *)(v91 + 16);
          BOOL v68 = __OFADD__(v67, 1);
          uint64_t v69 = v67 + 1;
          if (v68) {
            goto LABEL_42;
          }
          *(void *)(v91 + 16) = v69;
          swift_bridgeObjectRetain();
        }
        uint64_t v35 = v87 + 1;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v34 = v83;
        if (v85 == v87 + 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      sub_1B2E83858();
      __break(1u);
    }
    else
    {
      uint64_t v36 = MEMORY[0x1E4FBC868];
LABEL_35:
      swift_bridgeObjectRelease();
      if (*(void *)(v36 + 16))
      {
        uint64_t v70 = *(void *)(v71 + 16);
        swift_beginAccess();
        *(void *)(v70 + 72) = v36;
      }
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1B2D6772C(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1B2D67F24(a1);
  if (v5) {
    return result;
  }
  uint64_t v13 = result;
  uint64_t v14 = v12;
  uint64_t v15 = *(void *)(a1 + 16);
  swift_beginAccess();
  if (!*(void *)(v15 + 32))
  {
    swift_endAccess();
LABEL_7:
    sub_1B29A3EB4(&qword_1EB7E5B00);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1B2EC00A0;
    *(void *)(v20 + 32) = a3;
    *(void *)(v20 + 40) = a4;
    type metadata accessor for KnosisQueryParam();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1B2DC60E4(v20);
    uint64_t v16 = v21;
    if (a2 == 3) {
      *(unsigned char *)(v21 + 32) = 3;
    }
    goto LABEL_9;
  }
  uint64_t v23 = a5;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1B29B2540(v13, v14);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_7;
  }
  if (*(unsigned char *)(a1 + 83) == 1)
  {
    swift_beginAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B2E31454();
    uint64_t v17 = *(void *)(*(void *)(v16 + 16) + 16);
    sub_1B2E31A98(v17);
    uint64_t v18 = *(void *)(v16 + 16);
    *(void *)(v18 + 16) = v17 + 1;
    uint64_t v19 = v18 + 16 * v17;
    *(void *)(v19 + 32) = a3;
    *(void *)(v19 + 40) = a4;
    swift_endAccess();
    swift_release();
LABEL_9:
    swift_retain();
    swift_retain();
    sub_1B2DC2100(v13, v14, v16);
    swift_release();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  *(void *)&long long v24 = 0x206D61726170;
  *((void *)&v24 + 1) = 0xE600000000000000;
  swift_retain();
  sub_1B29A3EB4(&qword_1E9C435F8);
  sub_1B2E823E8();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2D6935C();
  swift_allocError();
  *(void *)uint64_t v22 = a2;
  *(void *)(v22 + 8) = a3;
  *(void *)(v22 + 16) = a4;
  *(void *)(v22 + 24) = v23;
  *(_OWORD *)(v22 + 32) = v24;
  *(unsigned char *)(v22 + 48) = 1;
  swift_willThrow();
  return swift_release();
}

uint64_t sub_1B2D67AAC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  swift_bridgeObjectRetain();
  sub_1B2D68274(&v14, v4, v5);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    char v6 = v16;
    long long v19 = v14;
    sub_1B2A227D4((uint64_t)&v19);
    uint64_t v20 = v15;
    sub_1B2AE7030((uint64_t)&v20);
    sub_1B2A844A0((uint64_t)&v17, (uint64_t)v18, &qword_1EB7D9790);
    sub_1B2A227D4((uint64_t)v18);
    if ((v6 & 1) == 0)
    {
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      uint64_t v4 = 0x80000001B2EA24D0;
      unint64_t v7 = 0xD00000000000002ALL;
LABEL_8:
      sub_1B2D6935C();
      swift_allocError();
      *(_OWORD *)uint64_t v12 = 0u;
      *(_OWORD *)(v12 + 16) = 0u;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v4;
      *(unsigned char *)(v12 + 48) = 1;
      swift_willThrow();
      return v4;
    }
    if (*(uint64_t *)(a1 + 72) < 1
      || (uint64_t v8 = *(void *)(a1 + 16), swift_beginAccess(), !*(void *)(v8 + 32))
      || (v9 = swift_bridgeObjectRetain(), uint64_t v4 = sub_1B2C4328C(v9), v11 = v10, swift_bridgeObjectRelease(), !v11))
    {
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      unint64_t v7 = 0xD000000000000024;
      uint64_t v4 = 0x80000001B2EA2500;
      goto LABEL_8;
    }
  }
  return v4;
}

uint64_t sub_1B2D67CD4(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  swift_bridgeObjectRetain();
  sub_1B29B2620(v11, v4, v5, v3);
  swift_bridgeObjectRelease();
  sub_1B2A844A0((uint64_t)v11, (uint64_t)v12, &qword_1EB7D9630);
  if (*((void *)&v12[0] + 1))
  {
    long long v13 = v12[0];
    long long v14 = v12[1];
    long long v15 = v12[2];
    type metadata accessor for Node();
    uint64_t v6 = swift_allocObject();
    sub_1B2D63170();
    *(void *)(v6 + 16) = a1;
    swift_retain();
    swift_release();
    swift_beginAccess();
    uint64_t v7 = a1[4];
    if (v7) {
      uint64_t v7 = *(void *)(v7 + 16);
    }
    *(void *)(v6 + 72) = v7;
    long long v16 = v13;
    uint64_t v17 = v14;
    sub_1B2A844A0((uint64_t)&v15, (uint64_t)v18, &qword_1EB7D9790);
    *(_OWORD *)(v6 + 24) = v13;
    long long v8 = v15;
    *(_OWORD *)(v6 + 40) = v14;
    *(_OWORD *)(v6 + 56) = v8;
    sub_1B2A28D1C((uint64_t)&v16);
    sub_1B2AE7004((uint64_t)&v17);
    sub_1B2A28D1C((uint64_t)v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2A227D4((uint64_t)&v16);
    sub_1B2AE7030((uint64_t)&v17);
    sub_1B2A227D4((uint64_t)v18);
  }
  else
  {
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    uint64_t v6 = 0x726F74617265706FLL;
    sub_1B2D6935C();
    swift_allocError();
    *(_OWORD *)uint64_t v9 = 0u;
    *(_OWORD *)(v9 + 16) = 0u;
    *(void *)(v9 + 32) = 0x726F74617265706FLL;
    *(void *)(v9 + 40) = 0xE900000000000020;
    *(unsigned char *)(v9 + 48) = 1;
    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1B2D67F24(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  long long v6 = *(_OWORD *)(v1 + 16);
  v21[0] = *(_OWORD *)v1;
  v21[1] = v6;
  uint64_t v22 = v4;
  uint64_t v23 = v5;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = *(void *)(v7 + 24);
  swift_bridgeObjectRetain();
  uint64_t v10 = v21;
  sub_1B2D68274(&v24, v8, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v2) {
    return (uint64_t)v10;
  }
  uint64_t v34 = v25;
  unint64_t v12 = *(void *)(v25 + 16);
  int64_t v13 = *(void *)(a1 + 72);
  if (v13 >= (uint64_t)v12 && (v26 & 1) == 0)
  {
    *(void *)&v21[0] = 0;
    *((void *)&v21[0] + 1) = 0xE000000000000000;
    sub_1B2E831F8();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    long long v33 = v24;
    sub_1B2A227D4((uint64_t)&v33);
    sub_1B2AE7030((uint64_t)&v34);
    sub_1B2A844A0((uint64_t)v27, (uint64_t)v32, &qword_1EB7D9790);
    sub_1B2A227D4((uint64_t)v32);
    uint64_t result = sub_1B2E82518();
    if (!__OFADD__(*(void *)(a1 + 72), 1))
    {
      sub_1B2E83748();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      uint64_t v16 = *((void *)&v21[0] + 1);
      uint64_t v10 = *(_OWORD **)&v21[0];
      sub_1B2D6935C();
      swift_allocError();
      *(_OWORD *)uint64_t v17 = 0u;
      *(_OWORD *)(v17 + 16) = 0u;
      *(void *)(v17 + 32) = v10;
      *(void *)(v17 + 40) = v16;
      *(unsigned char *)(v17 + 48) = 1;
      swift_willThrow();
      return (uint64_t)v10;
    }
    __break(1u);
    goto LABEL_16;
  }
  if ((v26 & 1) == 0 || (unint64_t v15 = v13 - (v12 - 1), v13 < (uint64_t)(v12 - 1)))
  {
    if (v13 < v12)
    {
      uint64_t v10 = *(_OWORD **)(v25 + 16 * v13 + 32);
      long long v29 = v24;
      swift_bridgeObjectRetain();
      sub_1B2A227D4((uint64_t)&v29);
      sub_1B2AE7030((uint64_t)&v34);
      sub_1B2A844A0((uint64_t)v27, (uint64_t)v28, &qword_1EB7D9790);
      sub_1B2A227D4((uint64_t)v28);
      return (uint64_t)v10;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v12)
  {
    uint64_t v18 = v25 + 16 * (v12 - 1);
    uint64_t v19 = *(void *)(v18 + 32);
    uint64_t v20 = *(void *)(v18 + 40);
    *(void *)&v21[0] = v15;
    swift_bridgeObjectRetain();
    sub_1B2E83748();
    *(void *)&v21[0] = v19;
    *((void *)&v21[0] + 1) = v20;
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    uint64_t v10 = *(_OWORD **)&v21[0];
    long long v31 = v24;
    sub_1B2A227D4((uint64_t)&v31);
    sub_1B2AE7030((uint64_t)&v34);
    sub_1B2A844A0((uint64_t)v27, (uint64_t)v30, &qword_1EB7D9790);
    sub_1B2A227D4((uint64_t)v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_17:
  __break(1u);
  return result;
}

#error "1B2D682C4: call analysis failed (funcsize=84)"

uint64_t sub_1B2D683D0(uint64_t a1)
{
  uint64_t v2 = sub_1B2E82148();
  uint64_t v3 = *(void *)(a1 + 40);
  unint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    goto LABEL_72;
  }
  uint64_t v5 = v2;
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  char v8 = 0;
  BOOL v9 = v4 == 1;
  uint64_t v10 = v4 - 2;
  uint64_t v122 = v4 - 2;
  uint64_t v123 = a1;
  do
  {
    uint64_t v11 = *(void *)(v3 + v6 + 32);
    uint64_t v12 = *(void *)(v3 + v6 + 40);
    if ((v8 & 1) == 0)
    {
      uint64_t v13 = *(void *)(a1 + 64);
      if (!v13) {
        goto LABEL_19;
      }
      if (v11 != *(void *)(a1 + 56) || v13 != v12)
      {
        uint64_t v15 = *(void *)(v3 + v6 + 40);
        uint64_t v16 = *(void *)(v3 + v6 + 32);
        uint64_t v17 = v5;
        BOOL v18 = v9;
        char v19 = sub_1B2E837A8();
        BOOL v9 = v18;
        uint64_t v5 = v17;
        a1 = v123;
        uint64_t v11 = v16;
        uint64_t v12 = v15;
        if ((v19 & 1) == 0)
        {
LABEL_19:
          if (v9) {
            goto LABEL_29;
          }
          char v8 = 0;
          goto LABEL_26;
        }
      }
      if (v7 == v4) {
        goto LABEL_28;
      }
    }
    if (v7 < v4 - 1)
    {
      if (v7 + 1 < v4)
      {
        LODWORD(v124) = v9;
        uint64_t v20 = *(void *)(v3 + v6 + 56);
        uint64_t v126 = *(void *)(v3 + v6 + 48);
        uint64_t v21 = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v22 = v12;
        uint64_t v12 = v21;
        uint64_t v23 = v22;
        uint64_t v30 = sub_1B29DB060(v21, v22, v24, v25, v26, v27, v28, v29, v120, v121, v122, v123, v124, v126, v20, v5, v129, v130, v131,
                (uint64_t)v132,
                v133,
                v134,
                v135,
                v136,
                v137,
                v138);
        if (__OFADD__(*(void *)(v5 + 16), (v31 & 1) == 0)) {
          goto LABEL_69;
        }
        unint64_t v32 = v30;
        char v33 = v31;
        sub_1B29A3EB4(&qword_1EB7D9850);
        char v34 = sub_1B2E83398();
        uint64_t v41 = v21;
        if (v34)
        {
          uint64_t v42 = sub_1B29DB060(v21, v23, v35, v36, v37, v38, v39, v40, v120, v121, v122, v123, v124, v125, v127, (uint64_t)v128, v129, v130, v131,
                  (uint64_t)v132,
                  v133,
                  v134,
                  v135,
                  v136,
                  v137,
                  v138);
          if ((v33 & 1) != (v43 & 1)) {
            goto LABEL_76;
          }
          unint64_t v32 = v42;
          uint64_t v41 = v21;
        }
        uint64_t v5 = (uint64_t)v128;
        if (v33)
        {
          uint64_t v44 = (uint64_t *)(v128[7] + 16 * v32);
          swift_bridgeObjectRelease();
          *uint64_t v44 = v125;
          v44[1] = v127;
        }
        else
        {
          v128[(v32 >> 6) + 8] |= 1 << v32;
          uint64_t v45 = (uint64_t *)(v128[6] + 16 * v32);
          *uint64_t v45 = v41;
          v45[1] = v23;
          uint64_t v46 = (uint64_t *)(v128[7] + 16 * v32);
          *uint64_t v46 = v125;
          v46[1] = v127;
          uint64_t v47 = v128[2];
          BOOL v48 = __OFADD__(v47, 1);
          uint64_t v49 = v47 + 1;
          if (v48) {
            goto LABEL_70;
          }
          v128[2] = v49;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v122;
        a1 = v123;
        LOBYTE(v9) = v124;
        goto LABEL_24;
      }
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
LABEL_24:
    if (v9) {
      goto LABEL_30;
    }
    char v8 = 1;
LABEL_26:
    BOOL v9 = v10 == v7;
    uint64_t v3 = *(void *)(a1 + 40);
    unint64_t v4 = *(void *)(v3 + 16);
    v6 += 16;
    ++v7;
  }
  while (v7 < v4);
  __break(1u);
LABEL_28:
  uint64_t v50 = v11;
  swift_bridgeObjectRetain();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v128 = (void *)v5;
  sub_1B29DEBA4(0, 0xE000000000000000, v50, v12, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_29:
  if (!*(void *)(v5 + 16))
  {
LABEL_66:
    sub_1B2E831F8();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2D6935C();
    swift_allocError();
    *(_OWORD *)uint64_t v119 = 0u;
    *(_OWORD *)(v119 + 16) = 0u;
    *(void *)(v119 + 32) = 0;
    *(void *)(v119 + 40) = 0xE000000000000000;
    *(unsigned char *)(v119 + 48) = 1;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
LABEL_30:
  unint64_t v52 = *(void *)(*(void *)(a1 + 40) + 16);
  if (v52 >= 2)
  {
    uint64_t v56 = v52 - 1;
    uint64_t v57 = 16 * v52;
    while (1)
    {
      --v56;
      uint64_t v58 = *(void *)(a1 + 40);
      if ((unint64_t)v56 >= *(void *)(v58 + 16)) {
        goto LABEL_71;
      }
      uint64_t v59 = (uint64_t *)(v58 + v57);
      uint64_t v61 = *v59;
      uint64_t v60 = v59[1];
      uint64_t v62 = *(void *)(a1 + 16);
      swift_beginAccess();
      uint64_t v63 = *(void *)(v62 + 32);
      if (!v63)
      {
        swift_endAccess();
        goto LABEL_66;
      }
      uint64_t v64 = *(void *)(v63 + 16);
      swift_bridgeObjectRetain();
      if (!v64)
      {
        swift_retain();
LABEL_65:
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_66;
      }
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v71 = sub_1B29DB060(v61, v60, v65, v66, v67, v68, v69, v70, v120, v121, v122, v123, v124, v125, v127, (uint64_t)v128, v129, v130, v131,
              (uint64_t)v132,
              v133,
              v134,
              v135,
              v136,
              v137,
              v138);
      if ((v72 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_65;
      }
      uint64_t v73 = *(void *)(*(void *)(v63 + 56) + 8 * v71);
      swift_endAccess();
      swift_retain();
      swift_release();
      swift_bridgeObjectRelease();
      if (!*(void *)(v5 + 16)) {
        goto LABEL_55;
      }
      swift_bridgeObjectRetain();
      uint64_t v80 = sub_1B29DB060(v61, v60, v74, v75, v76, v77, v78, v79, v120, v121, v122, v123, v124, v125, v73, (uint64_t)v128, v129, v130, v131,
              (uint64_t)v132,
              v133,
              v134,
              v135,
              v136,
              v137,
              v138);
      if (v81) {
        break;
      }
      swift_release();
      swift_bridgeObjectRelease_n();
LABEL_60:
      v57 -= 16;
      if (v56 < 1) {
        goto LABEL_31;
      }
    }
    uint64_t v82 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v80);
    uint64_t v125 = *v82;
    uint64_t v83 = v82[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v84 = *(void *)(a1 + 16);
    uint64_t v85 = (void **)(v84 + 32);
    swift_beginAccess();
    if (*(void *)(v84 + 32))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B29DB060(v61, v60, v86, v87, v88, v89, v90, v91, v120, v121, v122, v123, v84, v125, v127, (uint64_t)v128, v129, v130, v131,
        (uint64_t)v132,
        v133,
        v134,
        v135,
        v136,
        v137,
        v138);
      char v93 = v92;
      swift_bridgeObjectRelease();
      if (v93)
      {
        LODWORD(v122) = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v132 = *v85;
        *uint64_t v85 = (void *)0x8000000000000000;
        sub_1B29A3EB4(&qword_1EB7D9868);
        sub_1B2E83398();
        swift_bridgeObjectRelease();
        type metadata accessor for KnosisQueryParam();
        sub_1B2E833B8();
        *uint64_t v85 = v132;
        swift_bridgeObjectRelease();
      }
      uint64_t v94 = v83;
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      a1 = v123;
    }
    else
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v94 = v83;
    }
    uint64_t v95 = *(void *)(a1 + 16);
    swift_beginAccess();
    if (*(void *)(v95 + 32))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v96 = *(void *)(v95 + 32);
      *(void *)(v95 + 32) = 0x8000000000000000;
      uint64_t v103 = sub_1B29DB060(v125, v94, v97, v98, v99, v100, v101, v102, v120, v121, v122, v123, v95, v125, v127, (uint64_t)v128, v129, v130, v131,
               v96,
               v133,
               v134,
               v135,
               v136,
               v137,
               v138);
      if (__OFADD__(*(void *)(v96 + 16), (v104 & 1) == 0)) {
        goto LABEL_73;
      }
      unint64_t v105 = v103;
      char v106 = v104;
      sub_1B29A3EB4(&qword_1EB7D9868);
      a1 = v123;
      if (sub_1B2E83398())
      {
        uint64_t v113 = sub_1B29DB060(v125, v83, v107, v108, v109, v110, v111, v112, v120, v121, v122, v123, v124, v125, v127, (uint64_t)v128, v129, v130, v131,
                 (uint64_t)v132,
                 v133,
                 v134,
                 v135,
                 v136,
                 v137,
                 v138);
        if ((v106 & 1) != (v114 & 1)) {
          goto LABEL_76;
        }
        unint64_t v105 = v113;
      }
      if (v106)
      {
        uint64_t v115 = v132[7];
        swift_release();
        *(void *)(v115 + 8 * v105) = v127;
      }
      else
      {
        v132[(v105 >> 6) + 8] |= 1 << v105;
        unint64_t v116 = (uint64_t *)(v132[6] + 16 * v105);
        *unint64_t v116 = v125;
        v116[1] = v83;
        *(void *)(v132[7] + 8 * v105) = v127;
        uint64_t v117 = v132[2];
        BOOL v48 = __OFADD__(v117, 1);
        uint64_t v118 = v117 + 1;
        if (v48) {
          goto LABEL_75;
        }
        v132[2] = v118;
        swift_bridgeObjectRetain();
      }
      *(void *)(v124 + 32) = v132;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_endAccess();
LABEL_55:
      swift_bridgeObjectRelease();
    }
    swift_release();
    goto LABEL_60;
  }
LABEL_31:
  *(unsigned char *)(a1 + 81) = 1;
  uint64_t v53 = *(void *)(a1 + 72);
  BOOL v48 = __OFADD__(v53, 1);
  uint64_t v54 = v53 + 1;
  if (!v48)
  {
    *(void *)(a1 + 72) = v54;
    return swift_bridgeObjectRelease();
  }
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Node()
{
  return self;
}

uint64_t initializeWithCopy for ParserError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ParserError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for ParserError(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParserError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParserError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ParserError()
{
}

uint64_t destroy for Parser()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Parser(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Parser(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Parser(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for Parser()
{
}

unsigned char *sub_1B2D69078(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D69144);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ParserError.ErrorType()
{
}

unint64_t sub_1B2D6917C()
{
  unint64_t result = qword_1E9C435F0;
  if (!qword_1E9C435F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C435F0);
  }
  return result;
}

uint64_t sub_1B2D691C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v3;
  *int v3 = 0x8000000000000000;
  uint64_t v9 = sub_1B2D69254(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *unsigned int v4 = v11;
  swift_bridgeObjectRelease();
  return v9;
}

#error "1B2D69290: call analysis failed (funcsize=65)"

unint64_t sub_1B2D6935C()
{
  unint64_t result = qword_1E9C38368;
  if (!qword_1E9C38368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C38368);
  }
  return result;
}

uint64_t sub_1B2D693A8()
{
  return swift_allocObject();
}

void sub_1B2D693C0()
{
  sub_1B29B7E20();
}

void sub_1B2D69400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(void *)(v21 - 224) = v20;
  *(void *)(v21 - 216) = a17;
  *(void *)(v21 - 208) = a16;
  *(void *)(v21 - 200) = a15;
  *(void *)(v21 - 192) = a20;
}

void sub_1B2D69424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v22 - 216) = a17;
  *(void *)(v22 - 208) = a16;
  *(void *)(v22 - 200) = a15;
  *(void *)(v22 - 192) = a20;
  *(void *)(v22 - 184) = a22;
}

uint64_t sub_1B2D69448@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 224) = a1;
  *(void *)(v2 - 216) = (v1 - 32) | 0x8000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2D69468(char a1)
{
  return sub_1B2B47548(v2, a1 & 1, v1);
}

uint64_t sub_1B2D69494()
{
  return v0;
}

void sub_1B2D694B0(uint64_t a1@<X8>)
{
  *(void *)(v1 + 56) = a1;
}

uint64_t sub_1B2D694C8()
{
  return sub_1B2E828A8();
}

void sub_1B2D694E4()
{
  sub_1B29B7E20();
}

void sub_1B2D69508()
{
  JUMPOUT(0x1B3EB1A20);
}

uint64_t sub_1B2D69534()
{
  uint64_t v2 = *(void *)((*(void *)(v0 - 168) & 0xFFFFFFFFFFFFFF8) + 0x10);
  return sub_1B2E31C60(v2);
}

uint64_t sub_1B2D69554()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2D6956C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2CC3460();
    uint64_t v2 = v5;
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v3;
  uint64_t result = sub_1B2CA5224(v6);
  *a1 = v2;
  return result;
}

uint64_t static ParserV2.parse(kgq:)@<X0>(void *a1@<X8>)
{
  id v3 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  id v4 = sub_1B2D6DC08(0xD000000000000014, 0x80000001B2EA2550, 0);
  if (v1)
  {
  }
  else
  {
    uint64_t v5 = v4;
    if (v4)
    {
      unsigned int v6 = (void *)sub_1B2E82348();
      uint64_t v7 = sub_1B2E824A8();
      char v8 = (void *)sub_1B2E82348();
      id v9 = objc_msgSend(v5, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v6, 0, 0, v7, v8);

      sub_1B2E82378();
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRetain();
LABEL_6:
  v14[0] = 0x5941444F54;
  v14[1] = 0xE500000000000000;
  sub_1B29C3640();
  uint64_t v10 = sub_1B2E83018();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  sub_1B2D2BF44(v10, v12, (uint64_t)v14);
  sub_1B2D6DCE4((uint64_t)v14);
  sub_1B2D69860(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2D2E6E8(0, 0, 0, 0xFCu);
  return sub_1B2D6DD30((uint64_t)v14);
}

uint64_t sub_1B2D69860@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v53 = MEMORY[0x1E4FBC870];
  sub_1B2D2C960((uint64_t)&v50);
  unsigned int v5 = v52;
  sub_1B2D2E6E8(v50, *((uint64_t *)&v50 + 1), v51, v52);
  if (v5 <= 0xFB)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    while (1)
    {
      sub_1B2D69CC8((uint64_t)&v50);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      long long v7 = v50;
      uint64_t v8 = v51;
      uint64_t v9 = v52;
      sub_1B29FC29C(v50, v53);
      if (v10)
      {
        sub_1B2CA5188(*((uint64_t *)&v7 + 1), v8, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2D6E2AC();
        sub_1B299E4D4();
        *(_OWORD *)uint64_t v37 = xmmword_1B2ECFD90;
        *(unsigned char *)(v37 + 16) = 2;
        return swift_willThrow();
      }
      sub_1B2A025C0(&v50, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B299B8BC();
        sub_1B29B9EC0();
        uint64_t v6 = v34;
      }
      uint64_t v11 = *(void *)(v6 + 16);
      sub_1B2D6EAA0();
      if (v13)
      {
        sub_1B29999F8(v12);
        sub_1B29B9EC0();
        uint64_t v6 = v35;
      }
      *(void *)(v6 + 16) = &v53;
      uint64_t v14 = v6 + 32 * v11;
      *(_OWORD *)(v14 + 32) = v7;
      *(void *)(v14 + 48) = v8;
      *(unsigned char *)(v14 + 56) = v9;
      sub_1B2D2C960((uint64_t)&v50);
      sub_1B2D6EA78();
      if (!v15 & v13)
      {
        sub_1B2D6E628();
        sub_1B2D6E4DC(8);
      }
      else
      {
        uint64_t v46 = v8;
        uint64_t v47 = v9;
        uint64_t v48 = v11;
        unsigned __int8 v49 = v4;
        uint64_t v42 = 8;
        uint64_t v43 = 0;
        uint64_t v44 = 0;
        char v45 = -32;
        sub_1B2D2BBF0(v8, v9, v11, v4);
        char v16 = sub_1B2D2DAAC((uint64_t)&v46, (uint64_t)&v42);
        sub_1B2D2BC44(v46, v47, v48, v49);
        uint64_t result = sub_1B2D6E628();
        if (v16) {
          goto LABEL_18;
        }
      }
      sub_1B2D2C960((uint64_t)&v50);
      sub_1B2D6EA78();
      if (!v15 & v13)
      {
        sub_1B2D6E628();
        sub_1B2D6E4DC(7);
        goto LABEL_27;
      }
      uint64_t v46 = v8;
      uint64_t v47 = v9;
      uint64_t v48 = v11;
      unsigned __int8 v49 = v4;
      uint64_t v42 = 7;
      uint64_t v43 = 0;
      uint64_t v44 = 0;
      char v45 = -32;
      sub_1B2D2BBF0(v8, v9, v11, v4);
      char v18 = sub_1B2D2DAAC((uint64_t)&v46, (uint64_t)&v42);
      sub_1B2D2BC44(v46, v47, v48, v49);
      uint64_t result = sub_1B2D6E628();
      if ((v18 & 1) == 0) {
        goto LABEL_27;
      }
LABEL_18:
      uint64_t v19 = *(void *)(v4 + 72);
      uint64_t v20 = *(void *)(v19 + 16);
      if (v20)
      {
        uint64_t v21 = *(void *)(v19 + 32);
        uint64_t v22 = *(void *)(v19 + 40);
        uint64_t v23 = *(void *)(v19 + 48);
        unsigned __int8 v24 = *(unsigned char *)(v19 + 56);
        swift_bridgeObjectRetain();
        uint64_t v40 = v22;
        uint64_t v39 = v23;
        sub_1B2D6E4B4(v21, v22, v23, v24);
        swift_bridgeObjectRetain();
        uint64_t v25 = swift_dynamicCastClass();
        if (!v25)
        {
          swift_bridgeObjectRelease();
          uint64_t v25 = MEMORY[0x1E4FBC860];
        }
        uint64_t v26 = *(void *)(v25 + 16);
        swift_release();
        if (v26 == v20 - 1)
        {
          uint64_t v27 = swift_dynamicCastClass();
          if (!v27)
          {
            swift_bridgeObjectRelease();
            uint64_t v27 = MEMORY[0x1E4FBC860];
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_1B2A46C04();
          uint64_t v27 = v36;
        }
        swift_bridgeObjectRelease();
        *(void *)(v4 + 72) = v27;
        sub_1B2D2E6E8(*(void *)(v4 + 80), *(void *)(v4 + 88), *(void *)(v4 + 96), *(unsigned char *)(v4 + 104));
        *(void *)(v4 + 80) = v21;
        *(void *)(v4 + 88) = v40;
        *(void *)(v4 + 96) = v39;
        *(unsigned char *)(v4 + 104) = v24;
      }
      else
      {
        uint64_t v28 = *(void *)(v4 + 112);
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29)
        {
          __break(1u);
          return result;
        }
        *(void *)(v4 + 112) = v30;
        sub_1B2D2BF74((uint64_t)&v50);
        long long v41 = v50;
        uint64_t v31 = v51;
        unsigned __int8 v32 = v52;
        sub_1B2D2E6E8(*(void *)(v4 + 80), *(void *)(v4 + 88), *(void *)(v4 + 96), *(unsigned char *)(v4 + 104));
        *(_OWORD *)(v4 + 80) = v41;
        *(void *)(v4 + 96) = v31;
        *(unsigned char *)(v4 + 104) = v32;
      }
LABEL_27:
      sub_1B2D2C960((uint64_t)&v50);
      unsigned int v33 = v52;
      sub_1B2D2E6E8(v50, *((uint64_t *)&v50 + 1), v51, v52);
      if (v33 > 0xFB) {
        goto LABEL_32;
      }
    }
  }
  uint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_32:
  uint64_t v54 = v6;
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B2D6956C(&v54);
  *a1 = v54;
  return result;
}

uint64_t sub_1B2D69CC8@<X0>(uint64_t a1@<X8>)
{
  sub_1B2D2C72C((uint64_t)&v19);
  if (v22 > 0xFBu) {
    goto LABEL_9;
  }
  uint64_t v3 = v19;
  if ((v22 & 0xE0) != 0xC0)
  {
    sub_1B2D2E6E8(v19, v20, v21, v22);
LABEL_9:
    sub_1B2D6E2AC();
    sub_1B299E4D4();
    *(void *)uint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    *(unsigned char *)(v11 + 16) = 2;
    return swift_willThrow();
  }
  sub_1B2D2C72C((uint64_t)&v19);
  unsigned __int8 v4 = v22;
  if (v22 > 0xFBu) {
    goto LABEL_6;
  }
  uint64_t v6 = v19;
  uint64_t v5 = v20;
  uint64_t v7 = v21;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  char v18 = -32;
  if ((sub_1B2D2DAAC((uint64_t)&v19, (uint64_t)&v15) & 1) == 0)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0xE000000000000000;
    sub_1B2E831F8();
    uint64_t v15 = v19;
    uint64_t v16 = v20;
    sub_1B2E82518();
    uint64_t v19 = v6;
    uint64_t v20 = v5;
    uint64_t v21 = v7;
    unsigned __int8 v22 = v4;
    sub_1B2E83388();
    sub_1B2D6EA58();
    uint64_t v12 = v15;
    uint64_t v13 = v16;
    sub_1B2D6E2AC();
    sub_1B299E4D4();
    *(void *)uint64_t v14 = v12;
    *(void *)(v14 + 8) = v13;
    *(unsigned char *)(v14 + 16) = 0;
    return swift_willThrow();
  }
  sub_1B2D6EA58();
LABEL_6:
  uint64_t result = sub_1B2D69E70();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = result;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
  }
  return result;
}

uint64_t sub_1B2D69E70()
{
  sub_1B2D2C960((uint64_t)&v10);
  if (v12 > 0xFBu) {
    goto LABEL_35;
  }
  if (v12 < 0xE0u)
  {
LABEL_34:
    sub_1B2D2E6E8(v10, v11, *((uint64_t *)&v11 + 1), v12);
LABEL_35:
    sub_1B2D6E2AC();
    sub_1B299E4D4();
    sub_1B2D6E8B0(v8, (uint64_t)"function must be all/get/compute/filter");
    return v0;
  }
  if (v12 == 224 && v10 == 15 && v11 == 0)
  {
    sub_1B2D69F98();
    sub_1B2D6E6A0();
    uint64_t v6 = 15;
    goto LABEL_33;
  }
  if (v12 == 224 && v10 == 16 && v11 == 0)
  {
    sub_1B2D6AE38();
    sub_1B2D6E6A0();
    uint64_t v6 = 16;
    goto LABEL_33;
  }
  BOOL v5 = v12 == 224 && v10 == 17;
  if (!v5 || v11 != 0)
  {
    BOOL v7 = v12 == 224 && v10 == 18;
    if (v7 && v11 == 0)
    {
      sub_1B2D6B130();
      sub_1B2D6E6A0();
      uint64_t v6 = 18;
      goto LABEL_33;
    }
    goto LABEL_34;
  }
  sub_1B2D6AF8C();
  sub_1B2D6E6A0();
  uint64_t v6 = 17;
LABEL_33:
  sub_1B2D6E4DC(v6);
  return v0;
}

uint64_t sub_1B2D69F98()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for KGQ.Value();
  sub_1B299D278();
  unint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v11 = (char *)&v128 - v10;
  uint64_t result = sub_1B2D6B198((uint64_t)&unk_1F0AC1C50, &v145);
  if (v1) {
    return result;
  }
  unint64_t v129 = v5;
  uint64_t v139 = v3;
  uint64_t v141 = v11;
  uint64_t v148 = 0;
  sub_1B2D2BC44(v145, *((uint64_t *)&v145 + 1), v146, v147);
  int v13 = 0;
  *(void *)&long long v14 = 136315138;
  long long v132 = v14;
  uint64_t v131 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v134 = MEMORY[0x1E4FBC860];
  uint64_t v142 = MEMORY[0x1E4FBC860];
  uint64_t v140 = (uint64_t *)v9;
  do
  {
    while (2)
    {
      HIDWORD(v130) = v13;
      while (1)
      {
        while (1)
        {
          uint64_t v15 = *(void *)(v2 + 72);
          if (*(void *)(v15 + 16))
          {
            uint64_t v16 = *(void *)(v15 + 32);
            uint64_t v17 = *(void *)(v15 + 40);
            uint64_t v18 = *(void *)(v15 + 48);
            uint64_t v144 = *(void *)(v2 + 72);
            unsigned int v19 = *(unsigned __int8 *)(v15 + 56);
            uint64_t v20 = *(void *)(v2 + 80);
            uint64_t v21 = *(void *)(v2 + 88);
            uint64_t v22 = *(void *)(v2 + 96);
            unsigned __int8 v23 = *(unsigned char *)(v2 + 104);
            sub_1B2D6E660();
            sub_1B2D2E6E8(v20, v21, v22, v23);
            *(void *)(v2 + 80) = v16;
            *(void *)(v2 + 88) = v17;
            *(void *)(v2 + 96) = v18;
            *(unsigned char *)(v2 + 104) = v19;
            sub_1B2D6E660();
          }
          else
          {
            sub_1B2D6EA14();
            if (v25)
            {
              __break(1u);
LABEL_153:
              __break(1u);
              goto LABEL_154;
            }
            sub_1B2D6E810(v24);
            unsigned int v19 = v147;
            if (v147 > 0xFBu) {
              return v142;
            }
            uint64_t v17 = *((void *)&v145 + 1);
            uint64_t v16 = v145;
            uint64_t v18 = v146;
            sub_1B2D2E6E8(*(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(unsigned char *)(v2 + 104));
            *(_OWORD *)(v2 + 80) = __PAIR128__(v17, v16);
            *(void *)(v2 + 96) = v18;
            *(unsigned char *)(v2 + 104) = v19;
            sub_1B2D6E660();
            sub_1B2D6E660();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B2D6E8F0();
              uint64_t v15 = v94;
            }
            unint64_t v27 = *(void *)(v15 + 16);
            unint64_t v26 = *(void *)(v15 + 24);
            if (v27 >= v26 >> 1)
            {
              sub_1B299B984(v26);
              sub_1B29B9DF0();
              uint64_t v15 = v95;
            }
            *(void *)(v15 + 16) = v27 + 1;
            uint64_t v28 = v15 + 32 * v27;
            *(void *)(v28 + 32) = v16;
            *(void *)(v28 + 40) = v17;
            *(void *)(v28 + 48) = v18;
            *(unsigned char *)(v28 + 56) = v19;
            uint64_t v144 = v15;
            *(void *)(v2 + 72) = v15;
          }
          if (v19 >= 0xE0) {
            break;
          }
LABEL_45:
          uint64_t v1 = v148;
          char v38 = sub_1B2D6B384();
          uint64_t v144 = v40;
          uint64_t v148 = v1;
          if (v1)
          {
            sub_1B2D2E6E8(v16, v17, v18, v19);
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          char v41 = v38;
          char v42 = v39;
          uint64_t v143 = v18;
          if (sub_1B2CA6C38(v38) == 1701869940 && v43 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            uint64_t v46 = v140;
            goto LABEL_57;
          }
          char v45 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          uint64_t v46 = v140;
          if (v45)
          {
LABEL_57:
            uint64_t v51 = *(void *)(v144 + 16);
            if (v51)
            {
              uint64_t v63 = v144
                  + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
              uint64_t v138 = *(void *)(v129 + 72);
              do
              {
                sub_1B2C9F51C(v63, (uint64_t)v141);
                uint64_t v64 = sub_1B2ADAA58();
                sub_1B2C9F51C(v64, v65);
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 6)
                {
                  unint64_t v84 = sub_1B2E834D8();
                  swift_bridgeObjectRelease();
                  if (v84 >= 4)
                  {
                    if (v84 == 4)
                    {
                      LOBYTE(v84) = 4;
                    }
                    else if (v84 != 5)
                    {
                      goto LABEL_95;
                    }
                  }
                  uint64_t v85 = v142;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_1B29B9E80();
                    uint64_t v85 = v89;
                  }
                  unint64_t v87 = *(void *)(v85 + 16);
                  unint64_t v86 = *(void *)(v85 + 24);
                  uint64_t v142 = v85;
                  if (v87 >= v86 >> 1)
                  {
                    sub_1B29999F8(v86);
                    sub_1B29B9E80();
                    uint64_t v142 = v90;
                  }
                  uint64_t v88 = v142;
                  *(void *)(v142 + 16) = v87 + 1;
                  *(unsigned char *)(v88 + v87 + 32) = v84;
                  uint64_t v46 = v140;
                }
                else
                {
                  if (EnumCaseMultiPayload)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    *(void *)&long long v145 = 0;
                    *((void *)&v145 + 1) = 0xE000000000000000;
                    sub_1B2E831F8();
                    sub_1B299F3A0();
                    sub_1B2E82518();
                    uint64_t v121 = (uint64_t)v141;
                    sub_1B2E83388();
                    sub_1B2D6E914();
                    sub_1B2D6E2AC();
                    uint64_t v122 = sub_1B299E4D4();
                    sub_1B2D6E6CC(v122, v123);
                    sub_1B2D6EB18();
                    sub_1B2C9F368(v121);
                    return sub_1B2C9F368((uint64_t)v46);
                  }
                  uint64_t v1 = *v46;
                  uint64_t v67 = v46[1];
                  swift_bridgeObjectRetain();
                  uint64_t v137 = v1;
                  unint64_t v68 = sub_1B2E834D8();
                  swift_bridgeObjectRelease();
                  if (v68 > 5)
                  {
                    if (qword_1EB7E30F0 != -1) {
                      swift_once();
                    }
                    uint64_t v73 = sub_1B2E81FB8();
                    sub_1B29A4B98(v73, (uint64_t)qword_1EB7E30D8);
                    swift_bridgeObjectRetain();
                    uint64_t v74 = sub_1B2E81F98();
                    os_log_type_t v75 = sub_1B2E82DB8();
                    uint64_t v136 = v74;
                    HIDWORD(v135) = v75;
                    if (os_log_type_enabled(v74, v75))
                    {
                      uint64_t v76 = swift_slowAlloc();
                      uint64_t v133 = swift_slowAlloc();
                      *(void *)&long long v145 = v133;
                      *(_DWORD *)uint64_t v76 = v132;
                      swift_bridgeObjectRetain();
                      sub_1B29BF6BC(v137, v67, (uint64_t)&v145, v77, v78, v79, v80, v81, v128, v129, v130, v131, v132, *((uint64_t *)&v132 + 1), v133, v134, v135, (uint64_t)v136, v137,
                        v138);
                      *(void *)(v76 + 4) = v82;
                      swift_bridgeObjectRelease_n();
                      _os_log_impl(&dword_1B2996000, v136, BYTE4(v135), "type %s not found", (uint8_t *)v76, 0xCu);
                      uint64_t v83 = v133;
                      swift_arrayDestroy();
                      MEMORY[0x1B3EB30C0](v83, -1, -1);
                      MEMORY[0x1B3EB30C0](v76, -1, -1);
                    }
                    else
                    {
                      swift_bridgeObjectRelease_n();
                    }
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      sub_1B299B8BC();
                      sub_1B29B9E80();
                      uint64_t v142 = v91;
                    }
                    unint64_t v70 = *(void *)(v142 + 16);
                    unint64_t v69 = *(void *)(v142 + 24);
                    uint64_t v71 = v70 + 1;
                    if (v70 >= v69 >> 1)
                    {
                      sub_1B299B984(v69);
                      uint64_t v137 = v92;
                      sub_1B29B9E80();
                      uint64_t v71 = v137;
                      uint64_t v142 = v93;
                    }
                    uint64_t v72 = v142;
                    *(void *)(v142 + 16) = v71;
                    *(unsigned char *)(v72 + v70 + 32) = v68;
                  }
                }
LABEL_95:
                sub_1B2C9F368((uint64_t)v141);
                v63 += v138;
                --v51;
              }
              while (v51);
              sub_1B2D6EB18();
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_1B2D2E6E8(v16, v17, v143, v19);
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B2D6E9D0();
              uint64_t v134 = v98;
            }
            uint64_t v47 = v134;
            unint64_t v48 = *(void *)(v134 + 16);
            if (v48 >= *(void *)(v134 + 24) >> 1) {
              sub_1B29B9E4C();
            }
            *(void *)(v47 + 16) = v48 + 1;
            uint64_t v134 = v47;
            uint64_t v49 = v47 + 24 * v48;
            *(unsigned char *)(v49 + 32) = v41;
            uint64_t v50 = v143;
            *(void *)(v49 + 40) = v144;
            *(unsigned char *)(v49 + 48) = v42;
            sub_1B2D2E6E8(v16, v17, v50, v19);
          }
        }
        uint64_t v29 = v18 | v17;
        BOOL v30 = v19 == 224 && v16 == 3;
        if (!v30 || v29 != 0) {
          break;
        }
        uint64_t v52 = v144;
        uint64_t v53 = *(void *)(v144 + 16);
        if (v53)
        {
          uint64_t v54 = *(void *)(v144 + 32);
          uint64_t v55 = *(void *)(v144 + 40);
          uint64_t v56 = *(void *)(v144 + 48);
          unsigned __int8 v57 = *(unsigned char *)(v144 + 56);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2D6E4B4(v54, v55, v56, v57);
          uint64_t v58 = sub_1B2D6EAAC();
          if (!v58)
          {
            swift_bridgeObjectRelease();
            uint64_t v58 = MEMORY[0x1E4FBC860];
          }
          uint64_t v59 = *(void *)(v58 + 16);
          swift_release();
          uint64_t v60 = v53 - 1;
          if (v59 == v60)
          {
            uint64_t v61 = (void *)swift_dynamicCastClass();
            if (v61) {
              goto LABEL_66;
            }
            swift_bridgeObjectRelease();
LABEL_65:
            uint64_t v61 = (void *)MEMORY[0x1E4FBC860];
            goto LABEL_66;
          }
          swift_bridgeObjectRelease();
          if (!v60) {
            goto LABEL_65;
          }
          sub_1B29A3EB4(&qword_1E9C39A80);
          uint64_t v61 = (void *)sub_1B29C42B8();
          size_t v96 = j__malloc_size(v61);
          v61[2] = v60;
          v61[3] = 2 * ((uint64_t)(v96 - 32) / 32);
          BOOL v97 = v52 + 64 >= (unint64_t)&v61[4 * v60 + 4] || (unint64_t)(v61 + 4) >= v52 + 64 + 32 * v60;
          if (!v97) {
            goto LABEL_156;
          }
          swift_arrayInitWithCopy();
LABEL_66:
          swift_bridgeObjectRelease();
          sub_1B2D6E680();
          *(void *)(v2 + 72) = v61;
          *(void *)(v2 + 80) = v54;
          *(void *)(v2 + 88) = v55;
          *(void *)(v2 + 96) = v56;
          *(unsigned char *)(v2 + 104) = v57;
        }
        else
        {
          sub_1B2D6EA14();
          if (v25) {
            goto LABEL_153;
          }
          sub_1B2D6E810(v62);
          sub_1B2D6E418(3);
        }
      }
      BOOL v33 = v16 == 6 && v29 == 0 && v19 == 224;
      int v13 = v33;
      if (v33)
      {
        uint64_t v99 = *(void *)(v144 + 16);
        if (v99)
        {
          sub_1B2D6EB6C();
          swift_bridgeObjectRetain();
          uint64_t v143 = v1;
          sub_1B2D6E4B4(v1, v18, v16, v17);
          swift_bridgeObjectRetain();
          uint64_t v100 = swift_dynamicCastClass();
          if (!v100)
          {
            swift_bridgeObjectRelease();
            uint64_t v100 = MEMORY[0x1E4FBC860];
          }
          uint64_t v101 = *(void *)(v100 + 16);
          swift_release();
          uint64_t v102 = v99 - 1;
          if (v101 == v102)
          {
            uint64_t v103 = (const void *)sub_1B2D6EAAC();
            uint64_t v104 = v143;
            if (!v103)
            {
              swift_bridgeObjectRelease();
              uint64_t v103 = (const void *)MEMORY[0x1E4FBC860];
            }
LABEL_110:
            swift_bridgeObjectRelease();
            sub_1B2D6E450();
            *(void *)(v2 + 72) = v103;
            *(void *)(v2 + 80) = v104;
            *(void *)(v2 + 88) = v18;
            *(void *)(v2 + 96) = v16;
            *(unsigned char *)(v2 + 104) = v17;
LABEL_120:
            if ((v130 & 0x100000000) != 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B2D6E2AC();
              sub_1B299E4D4();
              sub_1B299F3A0();
              *(void *)uint64_t v125 = v124 | 7;
              *(void *)(v125 + 8) = 0x80000001B2EA2640;
              *(unsigned char *)(v125 + 16) = 0;
              return swift_willThrow();
            }
            continue;
          }
          swift_bridgeObjectRelease();
          if (v102)
          {
            sub_1B29A3EB4(&qword_1E9C39A80);
            uint64_t v103 = (const void *)sub_1B29C42B8();
            size_t v113 = j__malloc_size(v103);
            unint64_t v114 = sub_1B2D6E5C8(v113);
            if (!v97 && v114 < v115) {
              goto LABEL_156;
            }
            swift_arrayInitWithCopy();
          }
          else
          {
            uint64_t v103 = (const void *)MEMORY[0x1E4FBC860];
          }
          uint64_t v104 = v143;
          goto LABEL_110;
        }
        sub_1B2D6EA14();
        if (!v25)
        {
          sub_1B2D6E810(v111);
          sub_1B2D6E418(6);
          goto LABEL_120;
        }
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        sub_1B2D6E878();
        sub_1B29A1F1C();
        __break(1u);
        JUMPOUT(0x1B2D6ADD0);
      }
      break;
    }
    if (v19 != 224 || v16 != 7 || v29 != 0)
    {
      if (v19 == 224 && v16 == 8 && v29 == 0) {
        return v142;
      }
      goto LABEL_45;
    }
    uint64_t v105 = *(void *)(v144 + 16);
    if (v105)
    {
      sub_1B2D6EB6C();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v143 = v1;
      sub_1B2D6E4B4(v1, v18, v16, v17);
      uint64_t v106 = sub_1B2D6EAAC();
      if (!v106)
      {
        swift_bridgeObjectRelease();
        uint64_t v106 = MEMORY[0x1E4FBC860];
      }
      uint64_t v107 = *(void *)(v106 + 16);
      swift_release();
      uint64_t v108 = v105 - 1;
      if (v107 == v108)
      {
        uint64_t v109 = (const void *)sub_1B2D6EAAC();
        if (!v109)
        {
          swift_bridgeObjectRelease();
          uint64_t v109 = (const void *)MEMORY[0x1E4FBC860];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        if (v108)
        {
          sub_1B29A3EB4(&qword_1E9C39A80);
          uint64_t v109 = (const void *)sub_1B29C42B8();
          size_t v117 = j__malloc_size(v109);
          unint64_t v118 = sub_1B2D6E5C8(v117);
          if (!v97 && v118 < v119) {
            goto LABEL_156;
          }
          swift_arrayInitWithCopy();
        }
        else
        {
          uint64_t v109 = (const void *)MEMORY[0x1E4FBC860];
        }
      }
      swift_bridgeObjectRelease();
      sub_1B2D6E56C();
      uint64_t v110 = v143;
      *(void *)(v2 + 72) = v109;
      *(void *)(v2 + 80) = v110;
      *(void *)(v2 + 88) = v18;
      *(void *)(v2 + 96) = v16;
      *(unsigned char *)(v2 + 104) = v17;
    }
    else
    {
      sub_1B2D6EA14();
      if (v25) {
        goto LABEL_155;
      }
      sub_1B2D6E810(v112);
      sub_1B2D6E418(7);
    }
  }
  while ((v130 & 0x100000000) == 0);
  uint64_t result = v142;
  if (!*(void *)(v142 + 16) || !*(void *)(v134 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2D6E2AC();
    sub_1B299E4D4();
    sub_1B299F3A0();
    sub_1B2D6E6B4(v127, v126 + 30);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B2D6AE38()
{
  sub_1B2D6B198((uint64_t)&unk_1F0AC1C90, &v9);
  if (!v1)
  {
    sub_1B2D2BC44(v9, *((uint64_t *)&v9 + 1), v10, v11);
    uint64_t v2 = sub_1B2D6CC84();
    uint64_t v0 = v2;
    if (!*(void *)(v3 + 16)) {
      goto LABEL_10;
    }
    if (sub_1B2CA6C38(*(unsigned char *)(v3 + 32)) == 0x65756C6176 && v4 == 0xE500000000000000)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v6 = sub_1B2E837A8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_10:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B2D6E2AC();
        sub_1B299E4D4();
        sub_1B2D6E6B4(v7, 0xD000000000000033);
        swift_willThrow();
        return v0;
      }
    }
    swift_bridgeObjectRelease();
  }
  return v0;
}

uint64_t sub_1B2D6AF8C()
{
  uint64_t v1 = sub_1B2D6B198((uint64_t)&unk_1F0AC1D90, &v31);
  if (!v0)
  {
    sub_1B2D6E9B4(v1, v2, v3, v4, v5, v6, v7, v8, v31, v32, *((uint64_t *)&v32 + 1), v33);
    uint64_t v9 = sub_1B2D6B198((uint64_t)&unk_1F0AC1D10, &v31);
    sub_1B2D6E9B4(v9, v10, v11, v12, v13, v14, v15, v16, v31, v32, *((uint64_t *)&v32 + 1), v33);
    sub_1B2D2C72C((uint64_t)&v31);
    if (v33 <= 0xFBu)
    {
      if (v33 >= 0xE0u)
      {
        BOOL v17 = v33 == 224 && v31 == 19;
        if (v17 && v32 == 0)
        {
          sub_1B2D6E9F0();
          sub_1B2D6EA4C();
          sub_1B2D6E4DC(19);
LABEL_35:
          uint64_t v21 = sub_1B2D6B198((uint64_t)&unk_1F0AC1D50, &v31);
          sub_1B2D6E9B4(v21, v24, v25, v26, v27, v28, v29, v30, v31, v32, *((uint64_t *)&v32 + 1), v33);
          return sub_1B299EB30();
        }
        BOOL v18 = v33 == 224 && v31 == 20;
        if (v18 && v32 == 0)
        {
          sub_1B2D6E9F0();
          sub_1B2D6EA4C();
          sub_1B2D6E4DC(20);
          goto LABEL_35;
        }
        BOOL v19 = v33 == 224 && v31 == 21;
        if (v19 && v32 == 0)
        {
          sub_1B2D6E9F0();
          sub_1B2D6EA4C();
          sub_1B2D6E4DC(21);
          goto LABEL_35;
        }
        BOOL v20 = v33 == 224 && v31 == 22;
        if (v20 && v32 == 0)
        {
          sub_1B2D6E9F0();
          sub_1B2D6EA4C();
          sub_1B2D6E4DC(22);
          goto LABEL_35;
        }
      }
      sub_1B2D2E6E8(v31, v32, *((uint64_t *)&v32 + 1), v33);
    }
    sub_1B2D6E2AC();
    sub_1B299E4D4();
    sub_1B2D6E8B0(v22, (uint64_t)"expected valid compute function");
  }
  return sub_1B299EB30();
}

uint64_t sub_1B2D6B130()
{
  uint64_t result = sub_1B2D6B198((uint64_t)&unk_1F0AC1CD0, &v2);
  if (!v0)
  {
    sub_1B2D2BC44(v2, *((uint64_t *)&v2 + 1), v3, v4);
    return sub_1B2D6CC84();
  }
  return result;
}

uint64_t sub_1B2D6B198@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B2D2C960((uint64_t)&v18);
  long long v4 = v18;
  uint64_t v5 = v19;
  unsigned __int8 v6 = v20;
  if (v20 <= 0xFBu && (uint64_t v7 = *(void *)(a1 + 16)) != 0)
  {
    uint64_t v21 = a2;
    sub_1B2D2E6FC(v18, *((uint64_t *)&v18 + 1), v19, v20);
    swift_bridgeObjectRetain();
    uint64_t v8 = (unsigned __int8 *)(a1 + 56);
    while (1)
    {
      unsigned __int8 v9 = *v8;
      uint64_t v10 = *((void *)v8 - 1);
      long long v18 = *(_OWORD *)(v8 - 24);
      uint64_t v19 = v10;
      unsigned __int8 v20 = v9;
      long long v15 = v4;
      uint64_t v16 = v5;
      unsigned __int8 v17 = v6;
      if (sub_1B2D2DAAC((uint64_t)&v18, (uint64_t)&v15)) {
        break;
      }
      v8 += 32;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        sub_1B2D6EAC4();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1B2D6EAC4();
    sub_1B2D2C72C((uint64_t)&v18);
    uint64_t result = sub_1B2D2E6E8(v18, *((uint64_t *)&v18 + 1), v19, v20);
    uint64_t v14 = v21;
    *uint64_t v21 = v4;
    *((void *)v14 + 2) = v5;
    *((unsigned char *)v14 + 24) = v6;
  }
  else
  {
LABEL_7:
    *(void *)&long long v18 = 0;
    *((void *)&v18 + 1) = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    *(void *)&long long v15 = 0x6465746365707865;
    *((void *)&v15 + 1) = 0xE900000000000020;
    MEMORY[0x1B3EB1020](a1, &unk_1F0AC1740);
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2E82518();
    long long v18 = v4;
    uint64_t v19 = v5;
    unsigned __int8 v20 = v6;
    sub_1B29A3EB4(&qword_1E9C43608);
    sub_1B2E823E8();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B2D6E2AC();
    uint64_t v11 = sub_1B299E4D4();
    return sub_1B2D6E6CC(v11, v12);
  }
  return result;
}

uint64_t sub_1B2D6B384()
{
  sub_1B2D2C72C((uint64_t)&v19);
  if (v21 > 0xFBu) {
    goto LABEL_6;
  }
  if ((v21 & 0xE0) != 0x80)
  {
    sub_1B2D6E84C();
LABEL_6:
    sub_1B2ABB1E4();
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B299F3A0();
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    unsigned __int8 v7 = *(unsigned char *)(v0 + 104);
    uint64_t v19 = *(void *)(v0 + 80);
    *(void *)&long long v20 = v5;
    *((void *)&v20 + 1) = v6;
    unsigned __int8 v21 = v7;
    sub_1B2D2E6FC(v19, v5, v6, v7);
    sub_1B29A3EB4(&qword_1E9C43608);
    sub_1B2E823E8();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1B2D2BBF0(v19, v20, *((uint64_t *)&v20 + 1), v21);
  uint64_t v3 = sub_1B2CA72F4();
  if (v3 == 26)
  {
    sub_1B2ABB1E4();
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    sub_1B299F3A0();
    uint64_t v19 = v4 + 16;
    *(void *)&long long v20 = 0x80000001B2EA2690;
    sub_1B2E82518();
    sub_1B2D6E84C();
    sub_1B2E82518();
LABEL_7:
    sub_1B2D6E2AC();
    uint64_t v8 = sub_1B299E4D4();
    sub_1B2D6E6CC(v8, v9);
    return v2;
  }
  uint64_t v2 = v3;
  sub_1B2D6E84C();
  sub_1B2D6B198((uint64_t)&unk_1F0AC1A70, &v19);
  if (!v1)
  {
    uint64_t v11 = v19;
    long long v12 = v20;
    unsigned __int8 v13 = v21;
    if (v21 >= 0xE0u
      && (!(*((void *)&v20 + 1) | (unint64_t)v20 | v19) && v21 == 224
       || (v21 == 224 ? (BOOL v14 = v19 == 2) : (BOOL v14 = 0),
           v14 && v20 == 0 || (v21 == 224 ? (BOOL v15 = v19 == 10) : (BOOL v15 = 0), v15 && v20 == 0))))
    {
      sub_1B2D6B664(0);
    }
    else
    {
      sub_1B2ABB1E4();
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      sub_1B299F3A0();
      uint64_t v19 = v16;
      *(void *)&long long v20 = 0x80000001B2EA26C0;
      sub_1B2CA7B5C();
      MEMORY[0x1B3EB1020]();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2D6E2AC();
      uint64_t v17 = sub_1B299E4D4();
      sub_1B2D6E6CC(v17, v18);
      sub_1B2D2BC44(v11, v12, *((uint64_t *)&v12 + 1), v13);
    }
  }
  return v2;
}

uint64_t sub_1B2D6B664(int a1)
{
  uint64_t v3 = v1;
  int v168 = a1;
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7D87C0);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1B299B6D0();
  uint64_t v181 = v5;
  uint64_t v180 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1B299B6D0();
  uint64_t v179 = v9;
  type metadata accessor for KGQ.Value();
  sub_1B299D278();
  uint64_t v184 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1B2999940();
  sub_1B299B810();
  MEMORY[0x1F4188790](v12);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v13);
  sub_1B29A43C0();
  uint64_t v183 = v14;
  MEMORY[0x1F4188790](v15);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v16);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v17);
  sub_1B29A43C0();
  sub_1B299B810();
  MEMORY[0x1F4188790](v18);
  sub_1B29A43C0();
  sub_1B299B810();
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v174 = (double *)((char *)&v167 - v21);
  int v22 = 0;
  int v23 = 0;
  uint64_t v200 = MEMORY[0x1E4FBC860];
  uint64_t v197 = 0;
  unint64_t v198 = 0xE000000000000000;
  uint64_t v173 = (void (**)(uint64_t, uint64_t, unint64_t))(v7 + 32);
  uint64_t v172 = (void (**)(uint64_t *, uint64_t, unint64_t))(v7 + 16);
  uint64_t v171 = (void (**)(uint64_t, unint64_t))(v7 + 8);
  uint64_t v185 = v20;
  uint64_t v187 = v1;
  while (1)
  {
    int v24 = v22;
    uint64_t v25 = v3[9];
    uint64_t v26 = *(void *)(v25 + 16);
    unsigned int v191 = v23;
    LODWORD(v190) = v24;
    if (!v26) {
      break;
    }
    uint64_t v7 = *(void *)(v25 + 32);
    uint64_t v27 = *(void *)(v25 + 40);
    uint64_t v28 = *(void *)(v25 + 48);
    unint64_t v189 = v25;
    uint64_t v29 = *(unsigned __int8 *)(v25 + 56);
    uint64_t v1 = (uint64_t *)v3[10];
    uint64_t v30 = v3[11];
    uint64_t v25 = v3[12];
    unint64_t v2 = *((unsigned __int8 *)v3 + 104);
    sub_1B2D6E82C();
    sub_1B2D2E6E8((uint64_t)v1, v30, v25, v2);
    v3[10] = v7;
    v3[11] = v27;
    v3[12] = v28;
    *((unsigned char *)v3 + 104) = v29;
    sub_1B2D6E82C();
LABEL_11:
    switch(v29 >> 5)
    {
      case 1u:
        sub_1B2D6E86C();
        if (v3)
        {
          sub_1B2D6E540();
          swift_bridgeObjectRetain();
          sub_1B2D6E470();
          if (!sub_1B2D6E6E8()) {
            swift_bridgeObjectRelease();
          }
          swift_release();
          sub_1B2D6EA08();
          if (v65)
          {
            sub_1B2D6E704();
            sub_1B2D6E5B8();
            if (!v36)
            {
              swift_bridgeObjectRelease();
              uint64_t v1 = (uint64_t *)MEMORY[0x1E4FBC860];
            }
          }
          else
          {
            sub_1B299B66C();
            sub_1B2999D8C();
            sub_1B2D6E5B8();
          }
          swift_bridgeObjectRelease();
          sub_1B2D6E3E0();
        }
        else
        {
          sub_1B299FBF8();
          if (v32) {
            goto LABEL_283;
          }
          sub_1B29A0EAC(v80);
          sub_1B29A21D0();
        }
        if (v190)
        {
          *(void *)&long long v192 = v7;
          sub_1B2E83748();
          goto LABEL_128;
        }
        double *v174 = (double)v7;
        swift_storeEnumTagMultiPayload();
        uint64_t v7 = v200;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        int v83 = v191;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v7 = sub_1B2D6E75C();
        }
        sub_1B2D6EAA0();
        if (v34) {
          uint64_t v7 = sub_1B2D6E960(v84);
        }
        sub_1B2D6E780();
        unint64_t v86 = &v201;
        goto LABEL_134;
      case 2u:
        sub_1B2D6E86C();
        if (v3)
        {
          sub_1B2D6E540();
          swift_bridgeObjectRetain();
          sub_1B2D6E470();
          if (!sub_1B2D6E6E8()) {
            swift_bridgeObjectRelease();
          }
          swift_release();
          sub_1B2D6EA08();
          if (v65)
          {
            sub_1B2D6E704();
            sub_1B2D6E5B8();
            if (!v37)
            {
              swift_bridgeObjectRelease();
              uint64_t v1 = (uint64_t *)MEMORY[0x1E4FBC860];
            }
          }
          else
          {
            sub_1B299B66C();
            sub_1B2999D8C();
            sub_1B2D6E5B8();
          }
          swift_bridgeObjectRelease();
          sub_1B2D6E3E0();
        }
        else
        {
          sub_1B299FBF8();
          if (v32) {
            goto LABEL_284;
          }
          sub_1B29A0EAC(v87);
          sub_1B29A21D0();
        }
        if (v190)
        {
          sub_1B2E82A88();
LABEL_128:
          uint64_t v7 = v81;
          uint64_t v1 = &v197;
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          int v22 = 1;
          int v23 = v191;
        }
        else
        {
          *unint64_t v175 = v7;
          swift_storeEnumTagMultiPayload();
          uint64_t v7 = v200;
          char v88 = swift_isUniquelyReferenced_nonNull_native();
          int v83 = v191;
          if ((v88 & 1) == 0) {
            uint64_t v7 = sub_1B2D6E75C();
          }
          sub_1B2D6EAA0();
          if (v34) {
            uint64_t v7 = sub_1B2D6E960(v89);
          }
          sub_1B2D6E780();
          unint64_t v86 = &v202;
LABEL_134:
          sub_1B2D6E2F8(*(v86 - 32), v85);
          int v22 = 0;
          uint64_t v200 = v7;
          int v23 = v83;
        }
        continue;
      case 3u:
        sub_1B2D2BBF0(v7, v27, v28, v29);
        sub_1B2D2C72C((uint64_t)&v192);
        sub_1B2D2E6E8(v192, *((uint64_t *)&v192 + 1), v193, v194);
        uint64_t v38 = v181;
        sub_1B2ADAA58();
        sub_1B2D6D4FC(v39);
        unint64_t v2 = v180;
        if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v38, 1, v180) != 1)
        {
          sub_1B299EB10();
          uint64_t v76 = v179;
          (*v173)(v179, v38, v2);
          uint64_t v1 = v178;
          (*v172)(v178, v76, v2);
          swift_storeEnumTagMultiPayload();
          if ((sub_1B2D6EB80() & 1) == 0) {
            uint64_t v1 = (uint64_t *)sub_1B2D6E51C();
          }
          sub_1B2D6E938();
          if (v34) {
            uint64_t v1 = (uint64_t *)sub_1B2D6E738(v77);
          }
          sub_1B2D6E4F8();
          sub_1B2D6E2F8((uint64_t)v178, v78);
          sub_1B2D2E6E8(v7, v27, v28, v29);
          uint64_t v200 = (uint64_t)v1;
          (*v171)(v179, v2);
          goto LABEL_186;
        }
        sub_1B2B2D5F8(v38);
        sub_1B2ADAA58();
        uint64_t v40 = sub_1B2D6D930();
        if (v41)
        {
          sub_1B2D2BBF0(v7, v27, v28, v29);
          uint64_t v109 = sub_1B2ADAA58();
          EntityIdentifier.init(_:)(v109, v110, v111);
          if (BYTE8(v192))
          {
            char v112 = sub_1B299B040();
            if (v112 == 26)
            {
              size_t v113 = v169;
              *uint64_t v169 = v7;
              v113[1] = v27;
            }
            else
            {
              char v127 = v112;
              sub_1B2D6EA20();
              *(unsigned char *)uint64_t v25 = v127;
            }
          }
          else
          {
            uint64_t v120 = v192;
            sub_1B2D6EA20();
            *(void *)uint64_t v25 = v120;
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v1 = &v200;
          sub_1B2E31A24();
          sub_1B2E32094(*(void *)(v200 + 16));
          uint64_t v99 = sub_1B299EB30();
          goto LABEL_185;
        }
        uint64_t v1 = (uint64_t *)v40;
        sub_1B299EB10();
        *uint64_t v170 = v1;
        swift_storeEnumTagMultiPayload();
        if ((sub_1B2D6EB80() & 1) == 0) {
          uint64_t v1 = (uint64_t *)sub_1B2D6E51C();
        }
        sub_1B2D6E938();
        if (v34) {
          uint64_t v1 = (uint64_t *)sub_1B2D6E738(v42);
        }
        sub_1B2D6E4F8();
        uint64_t v44 = (uint64_t *)&v199;
        goto LABEL_143;
      case 4u:
        unint64_t v2 = v189;
        uint64_t v45 = *(void *)(v189 + 16);
        if (v45)
        {
          uint64_t v1 = (uint64_t *)(v189 + 32);
          uint64_t v46 = *(void *)(v189 + 32);
          uint64_t v188 = v28;
          uint64_t v47 = *(void *)(v189 + 40);
          uint64_t v48 = *(void *)(v189 + 48);
          uint64_t v49 = (2 * v45) | 1;
          LODWORD(v186) = v29;
          uint64_t v29 = v7;
          uint64_t v50 = v27;
          char v51 = *(unsigned char *)(v189 + 56);
          uint64_t v52 = sub_1B299EB30();
          sub_1B2D6E99C(v52, v53);
          unint64_t v54 = v49;
          uint64_t v3 = v187;
          v3[9] = sub_1B2D2BE1C(v2, v2 + 32, 1, v54);
          v3[10] = v46;
          v3[11] = v47;
          v3[12] = v48;
          uint64_t v28 = v188;
          *((unsigned char *)v3 + 104) = v51;
          uint64_t v27 = v50;
          uint64_t v7 = v29;
          LOBYTE(v29) = v186;
        }
        else
        {
          sub_1B2D6E58C();
          if (v32) {
            goto LABEL_285;
          }
          sub_1B29A0EAC(v90);
          uint64_t v91 = v193;
          unsigned __int8 v92 = v194;
          *((_OWORD *)v3 + 5) = v192;
          v3[12] = v91;
          *((unsigned char *)v3 + 104) = v92;
        }
        uint64_t v93 = sub_1B299B040();
        if (v93 == 26)
        {
          uint64_t v94 = v177;
          *uint64_t v177 = v7;
          v94[1] = v27;
          swift_storeEnumTagMultiPayload();
          if ((sub_1B2D6EB80() & 1) == 0) {
            uint64_t v1 = (uint64_t *)sub_1B2D6E51C();
          }
          sub_1B2D6E938();
          if (v34) {
            uint64_t v1 = (uint64_t *)sub_1B2D6E738(v95);
          }
          sub_1B2D6E4F8();
          uint64_t v44 = &v203;
LABEL_143:
          sub_1B2D6E2F8(*(v44 - 32), v43);
          sub_1B2D2E6E8(v7, v27, v28, v29);
          uint64_t v200 = (uint64_t)v1;
        }
        else
        {
          uint64_t v96 = v93;
          sub_1B299EB10();
          *uint64_t v176 = v96;
          swift_storeEnumTagMultiPayload();
          if ((sub_1B2D6EB80() & 1) == 0)
          {
            uint64_t v96 = sub_1B2D6E51C();
            uint64_t v200 = v96;
          }
          unint64_t v98 = *(void *)(v96 + 16);
          unint64_t v97 = *(void *)(v96 + 24);
          if (v98 >= v97 >> 1)
          {
            char v146 = sub_1B2D6EB98(v97);
            uint64_t v200 = sub_1B29B9E04(v146, v147, v148, v96);
          }
          uint64_t v1 = &v200;
          uint64_t v99 = v98;
          uint64_t v100 = (uint64_t)v176;
LABEL_185:
          uint64_t v128 = sub_1B2E32340(v99, v100);
          nullsub_1(v128);
          sub_1B299EB10();
        }
LABEL_186:
        int v22 = v190;
        int v23 = v191;
        continue;
      case 5u:
        sub_1B2D6E86C();
        if (v3)
        {
          uint64_t v186 = v27;
          uint64_t v188 = v28;
          uint64_t v55 = *(void *)(v2 + 32);
          uint64_t v56 = *(void *)(v2 + 40);
          uint64_t v57 = *(void *)(v2 + 48);
          unsigned __int8 v58 = *(unsigned char *)(v2 + 56);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v182 = v55;
          uint64_t v59 = sub_1B299EB30();
          uint64_t v190 = v57;
          sub_1B2D6E4B4(v59, v60, v57, v58);
          if (!sub_1B2D6E6E8()) {
            swift_bridgeObjectRelease();
          }
          swift_release();
          sub_1B2D6EA08();
          if (v65)
          {
            uint64_t v143 = sub_1B2D6E704();
            uint64_t v144 = v188;
            uint64_t v145 = v182;
            if (!v143)
            {
              swift_bridgeObjectRelease();
              uint64_t v143 = MEMORY[0x1E4FBC860];
            }
          }
          else
          {
            sub_1B299B66C();
            sub_1B2999D8C();
            uint64_t v143 = v142;
            uint64_t v144 = v188;
            uint64_t v145 = v182;
          }
          swift_bridgeObjectRelease();
          sub_1B2D2E6E8(v7, v186, v144, v29);
          uint64_t v3 = v187;
          v187[9] = v143;
          v3[10] = v145;
          uint64_t v61 = v190;
          v3[11] = v56;
          v3[12] = v61;
          unint64_t v2 = 0xE200000000000000;
          uint64_t v62 = v7;
          *((unsigned char *)v3 + 104) = v58;
          uint64_t v7 = v191;
          switch(v62)
          {
            case 1:
              goto LABEL_151;
            case 2:
              goto LABEL_187;
            case 3:
              goto LABEL_188;
            case 4:
              goto LABEL_189;
            case 5:
            case 9:
              goto LABEL_193;
            case 6:
              goto LABEL_190;
            case 7:
              goto LABEL_191;
            case 8:
              goto LABEL_192;
            case 10:
              goto LABEL_194;
            case 11:
              goto LABEL_195;
            case 12:
              goto LABEL_196;
            case 13:
              goto LABEL_197;
            case 14:
              goto LABEL_198;
            case 15:
              goto LABEL_199;
            case 16:
              goto LABEL_200;
            default:
              break;
          }
        }
        else
        {
          sub_1B299FBF8();
          if (v32) {
            goto LABEL_286;
          }
          sub_1B29A0EAC(v101);
          sub_1B29A21D0();
          unint64_t v2 = 0xE200000000000000;
          uint64_t v102 = v7;
          uint64_t v7 = v191;
          switch(v102)
          {
            case 1:
LABEL_151:
              unint64_t v2 = 0xE300000000000000;
              break;
            case 2:
LABEL_187:
              unint64_t v2 = 0xE300000000000000;
              break;
            case 3:
LABEL_188:
              unint64_t v2 = 0xE900000000000054;
              break;
            case 4:
LABEL_189:
              unint64_t v2 = 0xE700000000000000;
              break;
            case 5:
            case 9:
LABEL_193:
              unint64_t v2 = 0xEA00000000005452;
              break;
            case 6:
LABEL_190:
              unint64_t v2 = 0xE800000000000000;
              break;
            case 7:
LABEL_191:
              unint64_t v2 = 0xEB00000000545241;
              break;
            case 8:
LABEL_192:
              unint64_t v2 = 0xE900000000000044;
              break;
            case 10:
LABEL_194:
              unint64_t v2 = 0xE800000000000000;
              break;
            case 11:
LABEL_195:
              unint64_t v2 = 0xE500000000000000;
              break;
            case 12:
LABEL_196:
              unint64_t v2 = 0xE600000000000000;
              break;
            case 13:
LABEL_197:
              unint64_t v2 = 0xE700000000000000;
              break;
            case 14:
LABEL_198:
              unint64_t v2 = 0xE600000000000000;
              break;
            case 15:
LABEL_199:
              unint64_t v2 = 0xED0000454D49545FLL;
              break;
            case 16:
LABEL_200:
              unint64_t v2 = 0xEB00000000454D49;
              break;
            default:
              break;
          }
        }
        uint64_t v1 = &v197;
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        int v22 = 1;
        int v23 = v7;
        continue;
      case 6u:
        sub_1B2D6E86C();
        if (v3)
        {
          sub_1B2D6E540();
          swift_bridgeObjectRetain();
          sub_1B2D6E470();
          if (!sub_1B2D6E6E8()) {
            swift_bridgeObjectRelease();
          }
          swift_release();
          sub_1B2D6EA08();
          if (v65)
          {
            sub_1B2D6E704();
            sub_1B2D6E5B8();
            if (!v63) {
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            sub_1B299B66C();
            sub_1B2999D8C();
            sub_1B2D6E5B8();
          }
          swift_bridgeObjectRelease();
          sub_1B2D6E3E0();
        }
        else
        {
          sub_1B299FBF8();
          if (v32) {
            goto LABEL_287;
          }
          sub_1B29A0EAC(v103);
          sub_1B29A21D0();
        }
        *uint64_t v183 = v7;
        swift_storeEnumTagMultiPayload();
        uint64_t v7 = v200;
        char v104 = swift_isUniquelyReferenced_nonNull_native();
        int v105 = v191;
        unint64_t v2 = v190;
        if ((v104 & 1) == 0)
        {
          uint64_t v7 = sub_1B2D6E75C();
          uint64_t v200 = v7;
        }
        unint64_t v107 = *(void *)(v7 + 16);
        unint64_t v106 = *(void *)(v7 + 24);
        if (v107 >= v106 >> 1)
        {
          char v139 = sub_1B2D6EB98(v106);
          uint64_t v200 = sub_1B29B9E04(v139, v140, v141, v7);
        }
        uint64_t v1 = &v200;
        uint64_t v108 = sub_1B2E32340(v107, (uint64_t)v183);
        nullsub_1(v108);
        int v22 = v2;
        int v23 = v105;
        continue;
      case 7u:
        uint64_t v64 = v28 | v27;
        BOOL v65 = v29 == 224 && v7 == 3;
        if (v65 && v64 == 0)
        {
          sub_1B2D6E86C();
          if (v3)
          {
            sub_1B29A4938();
            swift_bridgeObjectRetain();
            sub_1B2D6E36C();
            if (!sub_1B2D6E648()) {
              swift_bridgeObjectRelease();
            }
            swift_release();
            sub_1B299B324();
            if (v65)
            {
              uint64_t v150 = sub_1B2D6E648();
              if (!v150)
              {
                swift_bridgeObjectRelease();
                uint64_t v150 = MEMORY[0x1E4FBC860];
              }
            }
            else
            {
              sub_1B2D6E71C();
              sub_1B2D6E598();
              uint64_t v150 = v149;
            }
            swift_bridgeObjectRelease();
            sub_1B2D6E4DC(3);
            uint64_t v3 = v187;
            v187[9] = v150;
            v3[10] = (uint64_t)v1;
            v3[11] = v28;
            v3[12] = v29;
            int v23 = 1;
            char v79 = v190;
            int v22 = v190;
            *((unsigned char *)v3 + 104) = v7;
          }
          else
          {
            sub_1B299FBF8();
            if (v32) {
              goto LABEL_288;
            }
            sub_1B29A0EAC(v119);
            sub_1B2D6E680();
            MEMORY[0x50] = v192;
            MEMORY[0x60] = v193;
            MEMORY[0x68] = v194;
            int v23 = 1;
            char v79 = v190;
            int v22 = v190;
          }
          if ((v191 & 1) == 0)
          {
            if ((v79 & 1) == 0) {
              goto LABEL_279;
            }
            goto LABEL_274;
          }
        }
        else
        {
          BOOL v68 = v29 == 224 && v7 == 4 && v64 == 0;
          unint64_t v2 = v189;
          if (v68)
          {
            uint64_t v114 = *(void *)(v189 + 16);
            if (v114)
            {
              sub_1B2D6EB58();
              swift_bridgeObjectRetain();
              sub_1B2D6E36C();
              swift_bridgeObjectRetain();
              uint64_t v115 = swift_dynamicCastClass();
              if (!v115)
              {
                swift_bridgeObjectRelease();
                uint64_t v115 = MEMORY[0x1E4FBC860];
              }
              uint64_t v116 = *(void *)(v115 + 16);
              swift_release();
              uint64_t v117 = v114 - 1;
              if (v116 == v117)
              {
                uint64_t v118 = swift_dynamicCastClass();
                uint64_t v3 = v187;
                if (!v118) {
                  swift_bridgeObjectRelease();
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                uint64_t v3 = v187;
                if (v117)
                {
                  sub_1B29A3EB4(&qword_1E9C39A80);
                  uint64_t v151 = (void *)sub_1B29C42B8();
                  sub_1B2D6E7A4(v151);
                }
              }
              swift_bridgeObjectRelease();
              sub_1B2D6EB38();
              sub_1B2D6E8D8();
            }
            else
            {
              sub_1B2D6E58C();
              if (v32) {
                goto LABEL_289;
              }
              sub_1B29A0EAC(v126);
              sub_1B2D6EB38();
              sub_1B2D6E7EC();
            }
          }
          else
          {
            if (v29 == 224 && v7 == 5 && v64 == 0)
            {
              sub_1B2D2C72C((uint64_t)&v192);
              sub_1B2D2E6E8(v192, *((uint64_t *)&v192 + 1), v193, v194);
              if ((v191 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1B2D6E2AC();
                sub_1B299E4D4();
                *(void *)uint64_t v166 = 0xD000000000000017;
                *(void *)(v166 + 8) = 0x80000001B2EA26E0;
LABEL_281:
                *(unsigned char *)(v166 + 16) = 0;
LABEL_271:
                swift_willThrow();
                return v7;
              }
LABEL_278:
              if ((v190 & 1) == 0)
              {
LABEL_279:
                swift_bridgeObjectRelease();
                return v200;
              }
LABEL_274:
              swift_bridgeObjectRelease();
              goto LABEL_275;
            }
            if (v29 == 224 && v7 == 6 && v64 == 0)
            {
              uint64_t v121 = *(void *)(v189 + 16);
              if (v121)
              {
                sub_1B2D6EB58();
                swift_unknownObjectRetain();
                swift_bridgeObjectRetain();
                sub_1B2D6E36C();
                uint64_t v122 = sub_1B2D6E6E8();
                if (!v122)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v122 = MEMORY[0x1E4FBC860];
                }
                uint64_t v123 = *(void *)(v122 + 16);
                swift_release();
                uint64_t v124 = v121 - 1;
                if (v123 == v124)
                {
                  uint64_t v125 = swift_dynamicCastClass();
                  uint64_t v3 = v187;
                  if (!v125) {
                    swift_bridgeObjectRelease();
                  }
                }
                else
                {
                  swift_bridgeObjectRelease();
                  uint64_t v3 = v187;
                  if (v124)
                  {
                    sub_1B29A3EB4(&qword_1E9C39A80);
                    uint64_t v152 = (void *)sub_1B29C42B8();
                    sub_1B2D6E7A4(v152);
                  }
                }
                swift_bridgeObjectRelease();
                sub_1B2D6E450();
                sub_1B2D6E8D8();
              }
              else
              {
                sub_1B2D6E58C();
                if (v32) {
                  goto LABEL_290;
                }
                sub_1B29A0EAC(v130);
                sub_1B2D6E450();
                sub_1B2D6E7EC();
              }
              if ((v168 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1B2D6E2AC();
                sub_1B299E4D4();
                *(_OWORD *)uint64_t v166 = xmmword_1B2EEBD00;
                goto LABEL_281;
              }
            }
            else
            {
              if (v29 == 224 && v7 == 7 && v64 == 0) {
                goto LABEL_278;
              }
              BOOL v75 = v29 == 224 && v7 == 11;
              if (!v75 || v64)
              {
                BOOL v129 = v29 == 224 && v7 == 12;
                if (!v129 || v64)
                {
                  BOOL v131 = v29 == 224 && v7 == 13;
                  if (!v131 || v64)
                  {
                    BOOL v133 = v29 == 224 && v7 == 14;
                    if (!v133 || v64)
                    {
LABEL_272:
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v195 = sub_1B2A14400(2);
                      uint64_t v196 = v158;
                      *(void *)&long long v192 = v7;
                      *((void *)&v192 + 1) = v27;
                      uint64_t v193 = v28;
                      unsigned __int8 v194 = v29;
                      sub_1B2E83388();
                      uint64_t v159 = v195;
                      uint64_t v160 = v196;
                      sub_1B2D6E2AC();
                      sub_1B299E4D4();
                      *(void *)uint64_t v161 = v159;
                      *(void *)(v161 + 8) = v160;
                      *(unsigned char *)(v161 + 16) = 0;
                      swift_willThrow();
                      sub_1B299EB10();
                      return v7;
                    }
                    sub_1B2D6E86C();
                    if (v3)
                    {
                      sub_1B29A4938();
                      swift_bridgeObjectRetain();
                      sub_1B2D6E36C();
                      if (!sub_1B2D6E648()) {
                        swift_bridgeObjectRelease();
                      }
                      swift_release();
                      sub_1B299B324();
                      if (v65)
                      {
                        uint64_t v30 = sub_1B2D6E648();
                        if (!v30)
                        {
                          swift_bridgeObjectRelease();
                          LODWORD(v30) = MEMORY[0x1E4FBC860];
                        }
                      }
                      else
                      {
                        sub_1B2D6E71C();
                        sub_1B2D6E598();
                        LODWORD(v30) = v156;
                      }
                      swift_bridgeObjectRelease();
                      sub_1B2D6E3A4(14);
                    }
                    else
                    {
                      sub_1B299FBF8();
                      if (v32) {
                        goto LABEL_294;
                      }
                      sub_1B29A0EAC(v136);
                      sub_1B29A3250(14);
                    }
                    if (v190)
                    {
                      uint64_t v1 = &v197;
LABEL_264:
                      sub_1B2E82518();
                      int v22 = 1;
                      int v23 = v30;
                    }
                  }
                  else
                  {
                    uint64_t v3 = *(uint64_t **)(v189 + 16);
                    if (v3)
                    {
                      sub_1B29A4938();
                      swift_bridgeObjectRetain();
                      sub_1B2D6E36C();
                      if (!sub_1B2D6E648()) {
                        swift_bridgeObjectRelease();
                      }
                      swift_release();
                      sub_1B299B324();
                      if (v65)
                      {
                        uint64_t v30 = sub_1B2D6E648();
                        if (!v30)
                        {
                          swift_bridgeObjectRelease();
                          LODWORD(v30) = MEMORY[0x1E4FBC860];
                        }
                      }
                      else
                      {
                        sub_1B2D6E71C();
                        sub_1B2D6E598();
                        LODWORD(v30) = v155;
                      }
                      swift_bridgeObjectRelease();
                      sub_1B2D6E3A4(13);
                    }
                    else
                    {
                      sub_1B299FBF8();
                      if (v32) {
                        goto LABEL_293;
                      }
                      sub_1B29A0EAC(v135);
                      sub_1B29A3250(13);
                    }
                    if (v190)
                    {
                      uint64_t v1 = &v197;
                      goto LABEL_264;
                    }
                  }
                }
                else
                {
                  uint64_t v3 = *(uint64_t **)(v189 + 16);
                  if (v3)
                  {
                    sub_1B29A4938();
                    swift_bridgeObjectRetain();
                    sub_1B2D6E36C();
                    if (!sub_1B2D6E648()) {
                      swift_bridgeObjectRelease();
                    }
                    swift_release();
                    sub_1B299B324();
                    if (v65)
                    {
                      uint64_t v30 = sub_1B2D6E648();
                      if (!v30)
                      {
                        swift_bridgeObjectRelease();
                        LODWORD(v30) = MEMORY[0x1E4FBC860];
                      }
                    }
                    else
                    {
                      sub_1B2D6E71C();
                      sub_1B2D6E598();
                      LODWORD(v30) = v154;
                    }
                    swift_bridgeObjectRelease();
                    sub_1B2D6E3A4(12);
                  }
                  else
                  {
                    sub_1B299FBF8();
                    if (v32) {
                      goto LABEL_292;
                    }
                    sub_1B29A0EAC(v134);
                    sub_1B29A3250(12);
                  }
                  if (v190)
                  {
                    uint64_t v1 = &v197;
                    goto LABEL_264;
                  }
                }
              }
              else
              {
                uint64_t v3 = *(uint64_t **)(v189 + 16);
                if (v3)
                {
                  sub_1B29A4938();
                  swift_bridgeObjectRetain();
                  sub_1B2D6E36C();
                  if (!sub_1B2D6E648()) {
                    swift_bridgeObjectRelease();
                  }
                  swift_release();
                  sub_1B299B324();
                  if (v65)
                  {
                    uint64_t v30 = sub_1B2D6E648();
                    if (!v30)
                    {
                      swift_bridgeObjectRelease();
                      LODWORD(v30) = MEMORY[0x1E4FBC860];
                    }
                  }
                  else
                  {
                    sub_1B2D6E71C();
                    sub_1B2D6E598();
                    LODWORD(v30) = v153;
                  }
                  swift_bridgeObjectRelease();
                  sub_1B2D6E3A4(11);
                }
                else
                {
                  sub_1B299FBF8();
                  if (v32) {
                    goto LABEL_291;
                  }
                  sub_1B29A0EAC(v132);
                  sub_1B29A3250(11);
                }
                if (v190)
                {
                  uint64_t v1 = &v197;
                  goto LABEL_264;
                }
              }
            }
          }
        }
        break;
      default:
        goto LABEL_272;
    }
  }
  sub_1B2D6E58C();
  if (v32)
  {
    __break(1u);
LABEL_283:
    __break(1u);
LABEL_284:
    __break(1u);
LABEL_285:
    __break(1u);
LABEL_286:
    __break(1u);
LABEL_287:
    __break(1u);
LABEL_288:
    __break(1u);
LABEL_289:
    __break(1u);
LABEL_290:
    __break(1u);
LABEL_291:
    __break(1u);
LABEL_292:
    __break(1u);
LABEL_293:
    __break(1u);
LABEL_294:
    __break(1u);
    JUMPOUT(0x1B2D6CBE0);
  }
  sub_1B29A0EAC(v31);
  uint64_t v29 = v194;
  if (v194 <= 0xFBu)
  {
    uint64_t v27 = *((void *)&v192 + 1);
    uint64_t v7 = v192;
    uint64_t v28 = v193;
    sub_1B2D2E6E8(v3[10], v3[11], v3[12], *((unsigned char *)v3 + 104));
    v3[10] = v7;
    v3[11] = v27;
    v3[12] = v28;
    *((unsigned char *)v3 + 104) = v29;
    sub_1B2D2BBF0(v7, v27, v28, v29);
    sub_1B2D6E82C();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299B8BC();
      sub_1B29B9DF0();
      uint64_t v25 = v137;
    }
    uint64_t v30 = *(void *)(v25 + 16);
    sub_1B2D6EAA0();
    if (v34)
    {
      sub_1B29999F8(v33);
      sub_1B29B9DF0();
      uint64_t v25 = v138;
    }
    *(void *)(v25 + 16) = v1;
    uint64_t v35 = v25 + 32 * v30;
    *(void *)(v35 + 32) = v7;
    *(void *)(v35 + 40) = v27;
    *(void *)(v35 + 48) = v28;
    *(unsigned char *)(v35 + 56) = v29;
    unint64_t v189 = v25;
    v3[9] = v25;
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  if ((v190 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1B2D6E2AC();
    sub_1B299E4D4();
    *(void *)uint64_t v157 = 0;
    *(void *)(v157 + 8) = 0;
    *(unsigned char *)(v157 + 16) = 2;
    goto LABEL_271;
  }
LABEL_275:
  sub_1B29A3EB4(&qword_1E9C39A90);
  unint64_t v162 = (*(unsigned __int8 *)(v184 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v184 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B2EC00A0;
  uint64_t v163 = (void *)(v7 + v162);
  unint64_t v164 = v198;
  *uint64_t v163 = v197;
  v163[1] = v164;
  swift_storeEnumTagMultiPayload();
  return v7;
}

uint64_t sub_1B2D6CC84()
{
  uint64_t v2 = v1;
  uint64_t v97 = type metadata accessor for KGQ.Value();
  sub_1B299D278();
  uint64_t v93 = v3;
  MEMORY[0x1F4188790](v4);
  sub_1B2999940();
  uint64_t v96 = (uint64_t *)v5;
  MEMORY[0x1F4188790](v6);
  unint64_t v98 = (char *)&v93 - v7;
  int v8 = 0;
  uint64_t v95 = MEMORY[0x1E4FBC860];
  uint64_t v99 = MEMORY[0x1E4FBC860];
  uint64_t v107 = v0;
LABEL_2:
  int v94 = v8;
  while (1)
  {
    while (1)
    {
      uint64_t v9 = *(void *)(v0 + 72);
      if (*(void *)(v9 + 16))
      {
        uint64_t v10 = *(void *)(v9 + 32);
        uint64_t v11 = *(void *)(v9 + 40);
        uint64_t v12 = *(void *)(v9 + 48);
        uint64_t v100 = v2;
        uint64_t v101 = v9;
        unsigned int v13 = *(unsigned __int8 *)(v9 + 56);
        uint64_t v14 = *(void *)(v0 + 80);
        uint64_t v15 = *(void *)(v107 + 88);
        uint64_t v16 = *(void *)(v107 + 96);
        unsigned __int8 v17 = *(unsigned char *)(v107 + 104);
        sub_1B2D6E99C(v10, v11);
        uint64_t v0 = v107;
        unsigned __int8 v18 = v17;
        uint64_t v2 = v100;
        sub_1B2D2E6E8(v14, v15, v16, v18);
        *(void *)(v0 + 80) = v10;
        *(void *)(v0 + 88) = v11;
        *(void *)(v0 + 96) = v12;
        *(unsigned char *)(v0 + 104) = v13;
        uint64_t v102 = v11;
        sub_1B2D6E99C(v10, v11);
      }
      else
      {
        uint64_t v19 = *(void *)(v0 + 112);
        BOOL v20 = __OFADD__(v19, 1);
        uint64_t v21 = v19 + 1;
        if (v20)
        {
          __break(1u);
          goto LABEL_98;
        }
        *(void *)(v0 + 112) = v21;
        sub_1B2D2BF74((uint64_t)&v103);
        unsigned int v13 = v106;
        if (v106 > 0xFBu) {
          return v99;
        }
        uint64_t v10 = v103;
        uint64_t v22 = v104;
        uint64_t v12 = v105;
        sub_1B2D2E6E8(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(unsigned char *)(v0 + 104));
        *(void *)(v0 + 80) = v10;
        *(void *)(v0 + 88) = v22;
        *(void *)(v0 + 96) = v12;
        *(unsigned char *)(v0 + 104) = v13;
        sub_1B2D6E99C(v10, v22);
        uint64_t v102 = v22;
        sub_1B2D6E99C(v10, v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B2D6E8F0();
          uint64_t v9 = v60;
        }
        unint64_t v24 = *(void *)(v9 + 16);
        unint64_t v23 = *(void *)(v9 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1B299B984(v23);
          sub_1B29B9DF0();
          uint64_t v9 = v61;
        }
        *(void *)(v9 + 16) = v24 + 1;
        uint64_t v25 = v9 + 32 * v24;
        uint64_t v26 = v102;
        *(void *)(v25 + 32) = v10;
        *(void *)(v25 + 40) = v26;
        *(void *)(v25 + 48) = v12;
        *(unsigned char *)(v25 + 56) = v13;
        uint64_t v0 = v107;
        uint64_t v101 = v9;
        *(void *)(v107 + 72) = v9;
      }
      if (v13 >= 0xE0)
      {
        uint64_t v27 = v12 | v102;
        BOOL v29 = v10 == 6 && v27 == 0 && v13 == 224;
        int v8 = v29;
        if (v29)
        {
          uint64_t v64 = *(void *)(v101 + 16);
          if (v64)
          {
            sub_1B2D6E984();
            swift_bridgeObjectRetain();
            uint64_t v102 = v1;
            sub_1B2D6E4B4(v1, v2, v12, v13);
            swift_bridgeObjectRetain();
            uint64_t v65 = swift_dynamicCastClass();
            if (!v65)
            {
              swift_bridgeObjectRelease();
              uint64_t v65 = MEMORY[0x1E4FBC860];
            }
            uint64_t v66 = *(void *)(v65 + 16);
            swift_release();
            uint64_t v67 = v64 - 1;
            if (v66 == v67)
            {
              uint64_t v0 = v101;
              if (!swift_dynamicCastClass()) {
                swift_bridgeObjectRelease();
              }
LABEL_59:
              swift_bridgeObjectRelease();
              sub_1B2D6E450();
              sub_1B2D6E948();
LABEL_69:
              if ((v94 & 1) == 0) {
                goto LABEL_2;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B2D6E2AC();
              sub_1B299E4D4();
              *(void *)uint64_t v91 = 0xD00000000000001ALL;
              *(void *)(v91 + 8) = 0x80000001B2EA2780;
              *(unsigned char *)(v91 + 16) = 0;
              return swift_willThrow();
            }
            swift_bridgeObjectRelease();
            if (v67)
            {
              sub_1B29A3EB4(&qword_1E9C39A80);
              uint64_t v76 = (const void *)sub_1B29C42B8();
              size_t v77 = j__malloc_size(v76);
              unint64_t v78 = sub_1B2D6E5F8(v77);
              BOOL v80 = v80 || v78 >= v79;
              if (!v80)
              {
LABEL_102:
                sub_1B2D6E878();
                uint64_t result = sub_1B29A1F1C();
                __break(1u);
                return result;
              }
              swift_arrayInitWithCopy();
            }
            uint64_t v0 = v101;
            goto LABEL_59;
          }
          uint64_t v72 = *(void *)(v0 + 112);
          BOOL v20 = __OFADD__(v72, 1);
          uint64_t v73 = v72 + 1;
          if (!v20)
          {
            *(void *)(v0 + 112) = v73;
            sub_1B2D2BF74((uint64_t)&v103);
            sub_1B2D6E450();
            sub_1B2D6E894();
            goto LABEL_69;
          }
          __break(1u);
LABEL_101:
          __break(1u);
          goto LABEL_102;
        }
        BOOL v30 = v13 == 224 && v10 == 7;
        if (v30 && v27 == 0)
        {
          uint64_t v68 = *(void *)(v101 + 16);
          if (v68)
          {
            sub_1B2D6E984();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v102 = v1;
            sub_1B2D6E4B4(v1, v2, v12, v13);
            sub_1B299EB30();
            uint64_t v69 = swift_dynamicCastClass();
            if (!v69)
            {
              swift_bridgeObjectRelease();
              uint64_t v69 = MEMORY[0x1E4FBC860];
            }
            uint64_t v70 = *(void *)(v69 + 16);
            swift_release();
            uint64_t v71 = v68 - 1;
            if (v70 == v71)
            {
              uint64_t v0 = v101;
              if (!swift_dynamicCastClass()) {
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              if (v71)
              {
                sub_1B29A3EB4(&qword_1E9C39A80);
                uint64_t v81 = (const void *)sub_1B29C42B8();
                size_t v82 = j__malloc_size(v81);
                unint64_t v83 = sub_1B2D6E5F8(v82);
                if (!v80 && v83 < v84) {
                  goto LABEL_102;
                }
                swift_arrayInitWithCopy();
              }
              uint64_t v0 = v101;
            }
            swift_bridgeObjectRelease();
            sub_1B2D6E56C();
            sub_1B2D6E948();
          }
          else
          {
            uint64_t v74 = *(void *)(v0 + 112);
            BOOL v20 = __OFADD__(v74, 1);
            uint64_t v75 = v74 + 1;
            if (v20) {
              goto LABEL_101;
            }
            *(void *)(v0 + 112) = v75;
            sub_1B2D2BF74((uint64_t)&v103);
            sub_1B2D6E56C();
            sub_1B2D6E894();
          }
          if ((v94 & 1) == 0) {
            goto LABEL_2;
          }
          if (*(void *)(v99 + 16) && *(void *)(v95 + 16)) {
            return v99;
          }
LABEL_98:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B2D6E2AC();
          sub_1B299E4D4();
          sub_1B2D6E6B4(v92, 0xD000000000000031);
          return swift_willThrow();
        }
      }
      uint64_t v32 = v10;
      uint64_t v1 = v2;
      char v33 = sub_1B2D6B384();
      if (v2)
      {
        sub_1B2D6EAE4();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      char v36 = v33;
      uint64_t v37 = v34;
      char v38 = v35;
      uint64_t v101 = v12;
      if (sub_1B2CA6C38(v33) == 0x656372756F73 && v39 == 0xE600000000000000) {
        break;
      }
      char v41 = sub_1B2E837A8();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_42;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v42 = v95;
      }
      else
      {
        sub_1B2D6E9D0();
        uint64_t v42 = v62;
      }
      unint64_t v44 = *(void *)(v42 + 16);
      unint64_t v43 = *(void *)(v42 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_1B29999F8(v43);
        sub_1B29B9E4C();
        uint64_t v42 = v63;
      }
      *(void *)(v42 + 16) = v44 + 1;
      uint64_t v95 = v42;
      uint64_t v45 = v42 + 24 * v44;
      *(unsigned char *)(v45 + 32) = v36;
      *(void *)(v45 + 40) = v37;
      *(unsigned char *)(v45 + 48) = v38;
      sub_1B2D6EAE4();
      uint64_t v0 = v107;
    }
    swift_bridgeObjectRelease();
LABEL_42:
    uint64_t v46 = *(void *)(v37 + 16);
    if (v46) {
      break;
    }
LABEL_43:
    sub_1B2D2E6E8(v32, v102, v101, v13);
    swift_bridgeObjectRelease();
    uint64_t v0 = v107;
  }
  uint64_t v47 = v37 + ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80));
  uint64_t v48 = *(void *)(v93 + 72);
  uint64_t v100 = 0;
  uint64_t v49 = (uint64_t)v98;
  while (1)
  {
    sub_1B2C9F51C(v47, v49);
    uint64_t v50 = v96;
    sub_1B2C9F51C(v49, (uint64_t)v96);
    if (swift_getEnumCaseMultiPayload() != 5) {
      break;
    }
    uint64_t v51 = *v50;
    uint64_t v52 = v99;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B299B8BC();
      sub_1B29B9E8C();
      uint64_t v52 = v58;
    }
    uint64_t v53 = v52;
    unint64_t v54 = *(void *)(v52 + 16);
    uint64_t v99 = v53;
    unint64_t v55 = *(void *)(v53 + 24);
    uint64_t v56 = (uint64_t)v98;
    if (v54 >= v55 >> 1)
    {
      sub_1B299B984(v55);
      sub_1B29B9E8C();
      uint64_t v56 = (uint64_t)v98;
      uint64_t v99 = v59;
    }
    uint64_t v57 = v99;
    *(void *)(v99 + 16) = v54 + 1;
    *(void *)(v57 + 8 * v54 + 32) = v51;
    uint64_t v49 = v56;
    sub_1B2C9F368(v56);
    v47 += v48;
    --v46;
    uint64_t v2 = v100;
    if (!v46) {
      goto LABEL_43;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v103 = 0;
  unint64_t v104 = 0xE000000000000000;
  sub_1B2E831F8();
  sub_1B2E82518();
  uint64_t v87 = (uint64_t)v98;
  sub_1B2E83388();
  sub_1B2D6E914();
  sub_1B2D6E2AC();
  uint64_t v88 = (uint64_t)v50;
  uint64_t v89 = sub_1B299E4D4();
  sub_1B2D6E6CC(v89, v90);
  sub_1B2D2E6E8(v32, v102, v101, v13);
  sub_1B2C9F368(v87);
  return sub_1B2C9F368(v88);
}

uint64_t sub_1B2D6D4FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v40 = v2;
  MEMORY[0x1F4188790](v3);
  sub_1B299E4A0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_1B29A3EB4(&qword_1EB7D87C0);
  MEMORY[0x1F4188790](v7 - 8);
  sub_1B299E4A0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_1B29A3EB4(&qword_1E9C41CC8);
  MEMORY[0x1F4188790](v11 - 8);
  sub_1B299E4A0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_1B2E806F8();
  sub_1B299D278();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  sub_1B299E4A0();
  uint64_t v21 = v20 - v19;
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  sub_1B2E806C8();
  unint64_t v23 = (void *)sub_1B2E806D8();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v21, v15);
  objc_msgSend(v22, sel_setLocale_, v23);

  sub_1B2E80798();
  uint64_t v24 = sub_1B2E807B8();
  uint64_t v25 = 0;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v14, 1, v24) != 1)
  {
    uint64_t v25 = (void *)sub_1B2E807A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v14, v24);
  }
  objc_msgSend(v22, sel_setTimeZone_, v25, a1);

  sub_1B29A3EB4(&qword_1EB7E5B00);
  uint64_t result = swift_initStackObject();
  uint64_t v27 = result;
  unint64_t v28 = 0;
  *(_OWORD *)(result + 16) = xmmword_1B2EC89C0;
  *(void *)(result + 32) = 0x2D4D4D2D79797979;
  *(void *)(result + 40) = 0xEA00000000006464;
  BOOL v29 = (uint64_t *)(result + 40);
  *(void *)(result + 48) = 0x79792D64642D4D4DLL;
  *(void *)(result + 56) = 0xEA00000000007979;
  *(void *)(result + 64) = 0x797979792D4D4DLL;
  *(void *)(result + 72) = 0xE700000000000000;
  *(void *)(result + 80) = 2038004089;
  *(void *)(result + 88) = 0xE400000000000000;
  BOOL v30 = (void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32);
  while (v28 < *(void *)(v27 + 16))
  {
    uint64_t v32 = *(v29 - 1);
    uint64_t v31 = *v29;
    swift_bridgeObjectRetain();
    sub_1B2D6E248(v32, v31, v22);
    char v33 = (void *)sub_1B2E82348();
    id v34 = objc_msgSend(v22, sel_dateFromString_, v33);

    if (v34)
    {
      sub_1B2E80618();

      char v35 = *v30;
      (*v30)(v10, v6, v1);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v10, 0, 1, v1);
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v10, 1, v1) != 1)
      {

        swift_setDeallocating();
        sub_1B2D98FCC();
        uint64_t v36 = v39;
        v35(v39, v10, v1);
        uint64_t v37 = 0;
        return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v36, v37, 1, v1);
      }
    }
    else
    {
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v10, 1, 1, v1);
    }
    ++v28;
    uint64_t result = sub_1B2B2D5F8(v10);
    v29 += 2;
    if (v28 == 4)
    {
      swift_setDeallocating();
      sub_1B2D98FCC();

      uint64_t v37 = 1;
      uint64_t v36 = v39;
      return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v36, v37, 1, v1);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2D6D930()
{
  sub_1B29C3640();
  uint64_t v0 = sub_1B2E83048();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = v0 + 56;
    double v3 = 0.0;
    while (1)
    {
      unint64_t v4 = *(void *)(v2 - 24);
      unint64_t v5 = *(void *)(v2 - 16);
      swift_bridgeObjectRetain_n();
      sub_1B2D6EB04();
      if (__OFSUB__(sub_1B2E82F78(), 1)) {
        break;
      }
      uint64_t v6 = sub_1B2E82F68();
      if (v7) {
        unint64_t v8 = v5;
      }
      else {
        unint64_t v8 = v6;
      }
      if (v4 >> 14 > v8 >> 14) {
        goto LABEL_43;
      }
      uint64_t v22 = v1;
      sub_1B2D6EB04();
      sub_1B2E82F98();
      swift_bridgeObjectRelease();
      uint64_t v9 = sub_1B2E82AC8();
      uint64_t v1 = v9;
      if (v10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v1;
      }
      if (v4 >> 14 == v5 >> 14)
      {
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
      double v11 = *(double *)&v9;
      sub_1B2D6EA8C();
      sub_1B2E82F58();
      sub_1B2D6EA8C();
      uint64_t v12 = sub_1B2E82F88();
      uint64_t v14 = v13;
      swift_bridgeObjectRelease();
      BOOL v15 = v12 == 100 && v14 == 0xE100000000000000;
      if (v15 || (sub_1B29A30FC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = v22;
        double v11 = v11 * 86400.0;
      }
      else
      {
        BOOL v17 = v12 == 104 && v14 == 0xE100000000000000;
        if (v17 || (sub_1B29A30FC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v16 = v22;
          double v11 = v11 * 3600.0;
        }
        else
        {
          BOOL v18 = v12 == 109 && v14 == 0xE100000000000000;
          if (v18 || (sub_1B29A30FC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v16 = v22;
            double v11 = v11 * 60.0;
          }
          else if (v12 == 115 && v14 == 0xE100000000000000)
          {
            swift_bridgeObjectRelease();
            uint64_t v16 = v22;
          }
          else
          {
            char v20 = sub_1B29A30FC();
            swift_bridgeObjectRelease();
            uint64_t v16 = v22;
            if ((v20 & 1) == 0) {
              goto LABEL_40;
            }
          }
        }
      }
      double v3 = v3 + v11;
      v2 += 32;
      uint64_t v1 = v16 - 1;
      if (!v1)
      {
        swift_bridgeObjectRelease();
        return *(void *)&v3;
      }
    }
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v1;
}

id sub_1B2D6DC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v5 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1B2D6DCE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2D6DD30(uint64_t a1)
{
  return a1;
}

uint64_t destroy for ParserV2(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unsigned int v3 = *(unsigned __int8 *)(a1 + 104);
  if (v3 <= 0xFB)
  {
    uint64_t v4 = *(void *)(a1 + 80);
    uint64_t v5 = *(void *)(a1 + 88);
    uint64_t v6 = *(void *)(a1 + 96);
    return sub_1B2D2BC44(v4, v5, v6, v3);
  }
  return result;
}

uint64_t initializeWithCopy for ParserV2(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 <= 0xFB)
  {
    uint64_t v8 = *(void *)(a2 + 80);
    uint64_t v9 = *(void *)(a2 + 88);
    uint64_t v10 = *(void *)(a2 + 96);
    sub_1B2D2BBF0(v8, v9, v10, v7);
    *(void *)(a1 + 80) = v8;
    *(void *)(a1 + 88) = v9;
    *(void *)(a1 + 96) = v10;
    *(unsigned char *)(a1 + 104) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t assignWithCopy for ParserV2(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 80);
  uint64_t v5 = (_OWORD *)(a2 + 80);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 104);
  if (*(unsigned __int8 *)(a1 + 104) <= 0xFBu)
  {
    if (v6 <= 0xFB)
    {
      uint64_t v12 = *(void *)(a2 + 80);
      uint64_t v13 = *(void *)(a2 + 88);
      uint64_t v14 = *(void *)(a2 + 96);
      sub_1B2D2BBF0(v12, v13, v14, *(unsigned char *)(a2 + 104));
      uint64_t v15 = *(void *)(a1 + 80);
      uint64_t v16 = *(void *)(a1 + 88);
      uint64_t v17 = *(void *)(a1 + 96);
      *(void *)(a1 + 80) = v12;
      *(void *)(a1 + 88) = v13;
      *(void *)(a1 + 96) = v14;
      unsigned __int8 v18 = *(unsigned char *)(a1 + 104);
      *(unsigned char *)(a1 + 104) = v6;
      sub_1B2D2BC44(v15, v16, v17, v18);
    }
    else
    {
      sub_1B2D6E054(a1 + 80);
      long long v8 = *(_OWORD *)(a2 + 89);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 89) = v8;
    }
  }
  else if (v6 <= 0xFB)
  {
    uint64_t v9 = *(void *)(a2 + 80);
    uint64_t v10 = *(void *)(a2 + 88);
    uint64_t v11 = *(void *)(a2 + 96);
    sub_1B2D2BBF0(v9, v10, v11, *(unsigned char *)(a2 + 104));
    *(void *)(a1 + 80) = v9;
    *(void *)(a1 + 88) = v10;
    *(void *)(a1 + 96) = v11;
    *(unsigned char *)(a1 + 104) = v6;
  }
  else
  {
    long long v7 = *v5;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    *uint64_t v4 = v7;
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t sub_1B2D6E054(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for ParserV2(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t assignWithTake for ParserV2(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  unsigned int v6 = *(unsigned __int8 *)(a1 + 104);
  if (v6 <= 0xFB)
  {
    unsigned int v7 = *(unsigned __int8 *)(a2 + 104);
    if (v7 <= 0xFB)
    {
      uint64_t v8 = *(void *)(a2 + 96);
      uint64_t v9 = *(void *)(a1 + 80);
      uint64_t v10 = *(void *)(a1 + 88);
      uint64_t v11 = *(void *)(a1 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(void *)(a1 + 96) = v8;
      *(unsigned char *)(a1 + 104) = v7;
      sub_1B2D2BC44(v9, v10, v11, v6);
      goto LABEL_6;
    }
    sub_1B2D6E054(a1 + 80);
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
LABEL_6:
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParserV2(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParserV2(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParserV2()
{
  return &type metadata for ParserV2;
}

void sub_1B2D6E248(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1B2E82348();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setDateFormat_, v4);
}

unint64_t sub_1B2D6E2AC()
{
  unint64_t result = qword_1E9C43600;
  if (!qword_1E9C43600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43600);
  }
  return result;
}

uint64_t sub_1B2D6E2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for KGQ.Value();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ParserV2Error()
{
  return &type metadata for ParserV2Error;
}

uint64_t sub_1B2D6E36C()
{
  sub_1B2D2BBF0(v1, v2, v3, v0);
  return sub_1B2E837E8();
}

uint64_t sub_1B2D6E3A4(uint64_t a1)
{
  uint64_t result = sub_1B2D2E6E8(a1, 0, 0, 0xE0u);
  uint64_t v8 = *(void *)(v6 - 200);
  *(void *)(v8 + 72) = v3;
  *(void *)(v8 + 80) = v2;
  *(void *)(v8 + 88) = v4;
  *(void *)(v8 + 96) = v5;
  *(unsigned char *)(v8 + 104) = v1;
  return result;
}

uint64_t sub_1B2D6E3E0()
{
  uint64_t result = sub_1B2D2E6E8(v0, *(void *)(v7 - 208), v2, v5);
  uint64_t v9 = *(void *)(v7 - 200);
  *(void *)(v9 + 72) = v1;
  *(void *)(v9 + 80) = v6;
  *(void *)(v9 + 88) = v4;
  *(void *)(v9 + 96) = v3;
  *(unsigned char *)(v9 + 104) = *(_DWORD *)(v7 - 240);
  return result;
}

__n128 sub_1B2D6E418(uint64_t a1)
{
  sub_1B2D2E6E8(a1, 0, 0, 0xE0u);
  unint64_t v3 = *(void *)(v2 - 112);
  unsigned __int8 v4 = *(unsigned char *)(v2 - 104);
  __n128 result = *(__n128 *)(v2 - 128);
  v1[5] = result;
  v1[6].n128_u64[0] = v3;
  v1[6].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1B2D6E450()
{
  return sub_1B2D2E6E8(6, 0, 0, 0xE0u);
}

uint64_t sub_1B2D6E470()
{
  *(void *)(v4 - 248) = v1;
  *(_DWORD *)(v4 - 240) = v3;
  sub_1B2D2BBF0(v0, v1, v2, v3);
  return sub_1B2E837E8();
}

uint64_t sub_1B2D6E4B4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  sub_1B2D2BBF0(a1, a2, a3, a4);
  return sub_1B2E837E8();
}

uint64_t sub_1B2D6E4DC(uint64_t a1)
{
  return sub_1B2D2E6E8(a1, 0, 0, 0xE0u);
}

void sub_1B2D6E4F8()
{
  *(void *)(v0 + 16) = v1;
}

uint64_t sub_1B2D6E51C()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return sub_1B29B9E04(0, v2, 1, v0);
}

uint64_t sub_1B2D6E540()
{
  *(void *)(v2 - 208) = v1;
  *(void *)(v2 - 192) = v0;
  return swift_unknownObjectRetain();
}

uint64_t sub_1B2D6E56C()
{
  return sub_1B2D2E6E8(7, 0, 0, 0xE0u);
}

void sub_1B2D6E598()
{
  sub_1B2A46C04();
}

uint64_t sub_1B2D6E5C8(uint64_t a1)
{
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = 2 * ((a1 - 32) / 32);
  return v1 + 32;
}

uint64_t sub_1B2D6E5F8(uint64_t a1)
{
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = 2 * ((a1 - 32) / 32);
  return v1 + 32;
}

uint64_t sub_1B2D6E628()
{
  return sub_1B2D2E6E8(v3, v2, v1, v0);
}

uint64_t sub_1B2D6E648()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1B2D6E660()
{
  return sub_1B2D2BBF0(v1, v2, v0, v3);
}

uint64_t sub_1B2D6E680()
{
  return sub_1B2D2E6E8(3, 0, 0, 0xE0u);
}

void sub_1B2D6E6B4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(unsigned char *)(a1 + 16) = 1;
}

uint64_t sub_1B2D6E6CC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_1B2D6E6E8()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1B2D6E704()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1B2D6E71C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D6E738@<X0>(unint64_t a1@<X8>)
{
  return sub_1B29B9E04(a1 > 1, v2, 1, v1);
}

uint64_t sub_1B2D6E75C()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return sub_1B29B9E04(0, v2, 1, v0);
}

void sub_1B2D6E780()
{
  *(void *)(v0 + 16) = v1;
}

uint64_t sub_1B2D6E7A4(void *a1)
{
  size_t v3 = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(v3 - 32) / 32);
  return sub_1B2AF0D48();
}

__n128 sub_1B2D6E7EC()
{
  unint64_t v2 = *(void *)(v1 - 144);
  unsigned __int8 v3 = *(unsigned char *)(v1 - 136);
  __n128 result = *(__n128 *)(v1 - 160);
  v0[5] = result;
  v0[6].n128_u64[0] = v2;
  v0[6].n128_u8[8] = v3;
  return result;
}

double sub_1B2D6E810@<D0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 112) = a1;
  return sub_1B2D2BF74(v2 - 128);
}

uint64_t sub_1B2D6E82C()
{
  return sub_1B2D2BBF0(v0, v3, v1, v2);
}

uint64_t sub_1B2D6E84C()
{
  return sub_1B2D2E6E8(v3, v2, v1, v0);
}

__n128 sub_1B2D6E894()
{
  unint64_t v2 = *(void *)(v1 - 96);
  unsigned __int8 v3 = *(unsigned char *)(v1 - 88);
  __n128 result = *(__n128 *)(v1 - 112);
  v0[5] = result;
  v0[6].n128_u64[0] = v2;
  v0[6].n128_u8[8] = v3;
  return result;
}

uint64_t sub_1B2D6E8B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = v2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  *(void *)(a1 + 8) = (a2 - 32) | 0x8000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  return swift_willThrow();
}

void sub_1B2D6E8D8()
{
  *(void *)(v3 + 72) = v2;
  *(void *)(v3 + 80) = v1;
  *(void *)(v3 + 88) = v4;
  *(void *)(v3 + 96) = v5;
  *(unsigned char *)(v3 + 104) = v0;
}

void sub_1B2D6E8F0()
{
  sub_1B29B9DF0();
}

uint64_t sub_1B2D6E914()
{
  return sub_1B2E82518();
}

void sub_1B2D6E948()
{
  uint64_t v6 = *(void *)(v5 - 72);
  *(void *)(v6 + 72) = v1;
  *(void *)(v6 + 80) = v0;
  *(void *)(v6 + 88) = v2;
  *(void *)(v6 + 96) = v3;
  *(unsigned char *)(v6 + 104) = v4;
}

uint64_t sub_1B2D6E960@<X0>(unint64_t a1@<X8>)
{
  return sub_1B29B9E04(a1 > 1, v2, 1, v1);
}

uint64_t sub_1B2D6E984()
{
  *(void *)(v2 - 136) = v1;
  return v0;
}

uint64_t sub_1B2D6E99C(uint64_t a1, uint64_t a2)
{
  return sub_1B2D2BBF0(a1, a2, v2, v3);
}

uint64_t sub_1B2D6E9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  return sub_1B2D2BC44(a9, a10, a11, a12);
}

void sub_1B2D6E9D0()
{
  sub_1B29B9E4C();
}

uint64_t sub_1B2D6E9F0()
{
  return sub_1B2D6B664(1);
}

uint64_t sub_1B2D6EA20()
{
  return sub_1B2D2E6E8(v0, v3, v1, v2);
}

uint64_t sub_1B2D6EA58()
{
  return sub_1B2D2E6E8(v3, v2, v1, v0);
}

uint64_t sub_1B2D6EAAC()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1B2D6EAC4()
{
  return sub_1B2D2E6E8(v3, v2, v1, v0);
}

uint64_t sub_1B2D6EAE4()
{
  uint64_t v5 = *(void *)(v3 - 120);
  return sub_1B2D2E6E8(v0, v5, v1, v2);
}

uint64_t sub_1B2D6EB18()
{
  uint64_t v5 = *(void *)(v3 - 144);
  return sub_1B2D2E6E8(v0, v1, v5, v2);
}

uint64_t sub_1B2D6EB38()
{
  return sub_1B2D2E6E8(4, 0, 0, 0xE0u);
}

uint64_t sub_1B2D6EB58()
{
  return v0;
}

uint64_t sub_1B2D6EB6C()
{
  return v0;
}

uint64_t sub_1B2D6EB80()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

BOOL sub_1B2D6EB98@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t PartOfDay.description.getter()
{
  uint64_t result = 0x6E776F6E6B6E55;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1852993357;
      goto LABEL_5;
    case 2:
      uint64_t result = 0x6F6F6E7265746641;
      break;
    case 3:
      unsigned int v2 = 1852143173;
LABEL_5:
      uint64_t result = v2 | 0x676E6900000000;
      break;
    case 4:
      uint64_t result = 0x746867694ELL;
      break;
    default:
      return result;
  }
  return result;
}

IntelligencePlatform::PartOfDay __swiftcall PartOfDay.init(hour:)(Swift::Int hour)
{
  if ((unint64_t)(hour - 17) < 4) {
    char v2 = 3;
  }
  else {
    char v2 = 4;
  }
  if ((unint64_t)(hour - 12) >= 5) {
    char v3 = v2;
  }
  else {
    char v3 = 2;
  }
  if ((unint64_t)(hour - 6) >= 6) {
    char v4 = v3;
  }
  else {
    char v4 = 1;
  }
  *uint64_t v1 = v4;
  return (char)hour;
}

IntelligencePlatform::PartOfDay_optional __swiftcall PartOfDay.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (IntelligencePlatform::PartOfDay_optional)rawValue;
}

uint64_t PartOfDay.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1B2D6ECA0()
{
  unint64_t result = qword_1E9C43610;
  if (!qword_1E9C43610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43610);
  }
  return result;
}

IntelligencePlatform::PartOfDay_optional sub_1B2D6ECEC(Swift::Int *a1)
{
  return PartOfDay.init(rawValue:)(*a1);
}

uint64_t sub_1B2D6ECF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PartOfDay.rawValue.getter();
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for PartOfDay(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D6EDECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PartOfDay()
{
  return &type metadata for PartOfDay;
}

uint64_t sub_1B2D6EE24@<X0>(uint64_t a1@<X8>)
{
  return static Paths.createBaseDirectory()(a1);
}

uint64_t static Paths.createBaseDirectory()@<X0>(uint64_t a1@<X8>)
{
  _OWORD v27[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1B2E803C8();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790]();
  sub_1B299E4A0();
  uint64_t v6 = v5 - v4;
  sub_1B29A3EB4(&qword_1EB7E69E0);
  MEMORY[0x1F4188790]();
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_1B2E80498();
  sub_1B299D278();
  uint64_t v26 = v11;
  MEMORY[0x1F4188790]();
  sub_1B299E4A0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_defaultManager);
  id v17 = objc_msgSend(v16, sel_URLsForDirectory_inDomains_, 5, 1);

  sub_1B2E82838();
  sub_1B2A17654();
  swift_bridgeObjectRelease();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, 1, v10) == 1)
  {
    sub_1B29E9E40(v9);
    sub_1B2D6F484();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v14, v9, v10);
    v27[0] = (id)0xD000000000000014;
    v27[1] = (id)0x80000001B2EEBE60;
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E4F276A8], v1);
    sub_1B29C3640();
    sub_1B2E80488();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v1);
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(v15, sel_defaultManager);
    char v20 = (void *)sub_1B2E803F8();
    v27[0] = 0;
    unsigned __int8 v21 = objc_msgSend(v19, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v20, 1, 0, v27);

    if (v21)
    {
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      id v23 = v27[0];
    }
    else
    {
      id v24 = v27[0];
      sub_1B2E80388();

      swift_willThrow();
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v22(a1, v10);
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v22)(v14, v10);
  }
}

unint64_t sub_1B2D6F484()
{
  unint64_t result = qword_1E9C43628;
  if (!qword_1E9C43628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43628);
  }
  return result;
}

uint64_t sub_1B2D6F4D0()
{
  uint64_t v0 = sub_1B2E80498();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2D6EE24((uint64_t)v3);
  uint64_t v4 = sub_1B2E803D8();
  uint64_t v6 = v5;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1E9C43618 = v4;
  unk_1E9C43620 = v6;
  return result;
}

uint64_t static Paths.baseDirectory.getter()
{
  if (qword_1E9C38CA8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E9C43618;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1B2D6F618()
{
  uint64_t v0 = sub_1B2E80498();
  sub_1B2A4A2A8(v0, qword_1EB7E52C0);
  uint64_t v1 = sub_1B29A4B98(v0, (uint64_t)qword_1EB7E52C0);
  return sub_1B2D6EE24(v1);
}

ValueMetadata *type metadata accessor for Paths()
{
  return &type metadata for Paths;
}

unsigned char *storeEnumTagSinglePayload for Paths.BaseDirectoryError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2D6F710);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Paths.BaseDirectoryError()
{
  return &type metadata for Paths.BaseDirectoryError;
}

unint64_t sub_1B2D6F748()
{
  return 0xD000000000000029;
}

unint64_t sub_1B2D6F76C()
{
  unint64_t result = qword_1E9C43630[0];
  if (!qword_1E9C43630[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C43630);
  }
  return result;
}

uint64_t sub_1B2D6F7B8()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v0 = sub_1B2E82F38();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_1B2D6F8CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(v9 + 64);
  }
  else {
    size_t v12 = *(void *)(v9 + 64) + 1;
  }
  unint64_t v13 = ((v12
        + 7
        + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~(unint64_t)v10)) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unsigned int v14 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  int v15 = (*(_DWORD *)(v6 + 80) | v10) & 0x100000;
  if (v14 > 7 || v15 != 0 || v13 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v25 = AssociatedTypeWitness;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    id v19 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    char v20 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *id v19 = *v20;
    unsigned __int8 v21 = (void *)(((unint64_t)v19 + v11 + 8) & ~v11);
    uint64_t v22 = (const void *)(((unint64_t)v20 + v11 + 8) & ~v11);
    swift_bridgeObjectRetain();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v22, 1, v25))
    {
      memcpy(v21, v22, v12);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v21, v22, v25);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v21, 0, 1, v25);
    }
    *(void *)(((unint64_t)v21 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v22 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  return a1;
}

uint64_t sub_1B2D6FB18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v6, 1, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_1B2D6FC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  size_t v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  unint64_t v13 = (const void *)(((unint64_t)v8 + v11 + 8) & ~v11);
  swift_bridgeObjectRetain();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, AssociatedTypeWitness))
  {
    int v14 = *(_DWORD *)(v10 + 84);
    uint64_t v15 = *(void *)(v10 + 64);
    if (v14) {
      size_t v16 = *(void *)(v10 + 64);
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v12, v13, v16);
  }
  else
  {
    uint64_t v18 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
    uint64_t v17 = v10 + 16;
    v18(v12, v13, AssociatedTypeWitness);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, AssociatedTypeWitness);
    int v14 = *(_DWORD *)(v17 + 68);
    uint64_t v15 = *(void *)(v17 + 48);
  }
  if (v14) {
    uint64_t v19 = v15;
  }
  else {
    uint64_t v19 = v15 + 1;
  }
  *(void *)(((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B2D6FDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  size_t v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  unint64_t v13 = (const void *)(((unint64_t)v8 + v11 + 8) & ~v11);
  LODWORD(v7) = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v12, 1, AssociatedTypeWitness);
  int v14 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, AssociatedTypeWitness);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v15 = *(_DWORD *)(v10 + 84);
    size_t v16 = *(void *)(v10 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 24))(v12, v13, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
    int v15 = *(_DWORD *)(v10 + 84);
    size_t v16 = *(void *)(v10 + 64);
  }
  if (v15) {
    size_t v17 = v16;
  }
  else {
    size_t v17 = v16 + 1;
  }
  memcpy(v12, v13, v17);
LABEL_12:
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v18 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v10 + 64) + 1;
  }
  *(void *)(((unint64_t)v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B2D6FFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  size_t v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  unint64_t v13 = (const void *)(((unint64_t)v8 + v11 + 8) & ~v11);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, AssociatedTypeWitness))
  {
    int v14 = *(_DWORD *)(v10 + 84);
    size_t v15 = *(void *)(v10 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v12, v13, v16);
  }
  else
  {
    uint64_t v18 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
    uint64_t v17 = v10 + 32;
    v18(v12, v13, AssociatedTypeWitness);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, AssociatedTypeWitness);
    int v14 = *(_DWORD *)(v17 + 52);
    size_t v15 = *(void *)(v17 + 32);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  *(void *)(((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B2D70170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  size_t v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  unint64_t v13 = (const void *)(((unint64_t)v8 + v11 + 8) & ~v11);
  LODWORD(v7) = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v12, 1, AssociatedTypeWitness);
  int v14 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v12, v13, AssociatedTypeWitness);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v15 = *(_DWORD *)(v10 + 84);
    size_t v16 = *(void *)(v10 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 40))(v12, v13, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
    int v15 = *(_DWORD *)(v10 + 84);
    size_t v16 = *(void *)(v10 + 64);
  }
  if (v15) {
    size_t v17 = v16;
  }
  else {
    size_t v17 = v16 + 1;
  }
  memcpy(v12, v13, v17);
LABEL_12:
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v18 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v10 + 64) + 1;
  }
  *(void *)(((unint64_t)v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B2D70374(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  unsigned int v11 = v10 - 1;
  if (!v10) {
    unsigned int v11 = 0;
  }
  if (v7 <= v11) {
    unsigned int v12 = v11;
  }
  else {
    unsigned int v12 = v7;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = *(void *)(v6 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = 7;
  if (!v10) {
    uint64_t v16 = 8;
  }
  if (!a2) {
    return 0;
  }
  if (v13 < a2)
  {
    unint64_t v17 = ((v16
          + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64)
          + ((v15 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    uint64_t v18 = v17 & 0xFFFFFFF8;
    if ((v17 & 0xFFFFFFF8) != 0) {
      unsigned int v19 = 2;
    }
    else {
      unsigned int v19 = a2 - v13 + 1;
    }
    if (v19 >= 0x10000) {
      unsigned int v20 = 4;
    }
    else {
      unsigned int v20 = 2;
    }
    if (v19 < 0x100) {
      unsigned int v20 = 1;
    }
    if (v19 >= 2) {
      uint64_t v21 = v20;
    }
    else {
      uint64_t v21 = 0;
    }
    switch(v21)
    {
      case 1:
        int v22 = *((unsigned __int8 *)a1 + v17);
        if (!v22) {
          break;
        }
        goto LABEL_28;
      case 2:
        int v22 = *(unsigned __int16 *)((char *)a1 + v17);
        if (v22) {
          goto LABEL_28;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B2D705D4);
      case 4:
        int v22 = *(_DWORD *)((char *)a1 + v17);
        if (!v22) {
          break;
        }
LABEL_28:
        int v23 = v22 - 1;
        if (v18)
        {
          int v23 = 0;
          LODWORD(v18) = *a1;
        }
        return v13 + (v18 | v23) + 1;
      default:
        break;
    }
  }
  if (v7 == v13)
  {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, v7, v5);
  }
  uint64_t v25 = (unint64_t *)(((unint64_t)a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  if ((v12 & 0x80000000) != 0)
  {
    if (v10 >= 2)
    {
      unsigned int v27 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(((unint64_t)v25 + v15 + 8) & ~v15, v10, AssociatedTypeWitness);
      if (v27 >= 2) {
        return v27 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v26 = *v25;
  if (v26 >= 0xFFFFFFFF) {
    LODWORD(v26) = -1;
  }
  return (v26 + 1);
}

void sub_1B2D705E8(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  unsigned int v13 = v12 - 1;
  if (!v12) {
    unsigned int v13 = 0;
  }
  if (v9 > v13) {
    unsigned int v13 = v9;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(void *)(v8 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v18 = 7;
  if (!v12) {
    uint64_t v18 = 8;
  }
  size_t v19 = ((v18 + v17 + ((v16 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v18 + v17 + ((v16 + ((v15 + 7) & 0xFFFFFFF8) + 8) & ~v16)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v20 = a3 - v14 + 1;
  }
  else {
    unsigned int v20 = 2;
  }
  if (v20 >= 0x10000) {
    int v21 = 4;
  }
  else {
    int v21 = 2;
  }
  if (v20 < 0x100) {
    int v21 = 1;
  }
  if (v20 >= 2) {
    unsigned int v22 = v21;
  }
  else {
    unsigned int v22 = 0;
  }
  if (v14 < a3) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = 0;
  }
  if (a2 > v14)
  {
    if (v19) {
      int v24 = 1;
    }
    else {
      int v24 = a2 - v14;
    }
    if (v19)
    {
      int v25 = ~v14 + a2;
      bzero(a1, v19);
      *a1 = v25;
    }
    switch(v23)
    {
      case 1:
        *((unsigned char *)a1 + v19) = v24;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v19) = v24;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)((char *)a1 + v19) = v24;
        return;
      default:
        return;
    }
  }
  uint64_t v26 = AssociatedTypeWitness;
  switch(v23)
  {
    case 1:
      *((unsigned char *)a1 + v19) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 2:
      *(_WORD *)((char *)a1 + v19) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x1B2D70890);
    case 4:
      *(_DWORD *)((char *)a1 + v19) = 0;
      goto LABEL_38;
    default:
LABEL_38:
      if (!a2) {
        return;
      }
LABEL_39:
      if (v9 == v14)
      {
        uint64_t v27 = (uint64_t)a1;
        uint64_t v28 = a2;
        uint64_t v12 = v9;
        uint64_t v26 = v7;
      }
      else
      {
        BOOL v29 = (void *)(((unint64_t)a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
        if ((v13 & 0x80000000) == 0)
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v30 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v30 = (a2 - 1);
          }
          *BOOL v29 = v30;
          return;
        }
        if (v12 < 2) {
          return;
        }
        uint64_t v27 = ((unint64_t)v29 + v16 + 8) & ~v16;
        uint64_t v28 = (a2 + 1);
      }
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v27, v28, v12, v26);
      return;
  }
}

uint64_t type metadata accessor for PeekableIterator()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2D708D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  v31[1] = *(void *)(a1 + 16);
  v31[2] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = sub_1B2E82F38();
  sub_1B299D31C();
  uint64_t v7 = v6;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unsigned int v13 = (char *)v31 - v12;
  uint64_t v32 = *(int *)(a1 + 36);
  uint64_t v14 = *(void *)(v2 + v32);
  *(void *)&long long v37 = v14;
  sub_1B2E82968();
  swift_getWitnessTable();
  sub_1B2E82CA8();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v15 = v13;
    uint64_t v17 = v33;
    uint64_t v16 = v34;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v15, v33);
    uint64_t v19 = *(int *)(a1 + 44);
    uint64_t v20 = *(void *)(v2 + v19);
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v2 + v19) = v22;
      sub_1B2E82FA8();
      uint64_t v23 = v2 + *(int *)(a1 + 40);
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v23, v11, v17);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v16, v23, v17);
    }
  }
  else
  {
    sub_1B299D31C();
    uint64_t v25 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v34, v13, AssociatedTypeWitness);
    *(void *)&long long v35 = v14;
    swift_bridgeObjectRetain();
    sub_1B2E82CF8();
    long long v35 = v37;
    long long v36 = v38;
    sub_1B2E83068();
    swift_getWitnessTable();
    uint64_t v27 = sub_1B2E82988();
    swift_bridgeObjectRelease();
    uint64_t v28 = v33;
    *(void *)(v2 + v32) = v27;
    uint64_t v29 = v2 + *(int *)(a1 + 40);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v29, v28);
    uint64_t v30 = v34;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v29, v34, AssociatedTypeWitness);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v29, 0, 1, AssociatedTypeWitness);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v30, 0, 1, AssociatedTypeWitness);
  }
  return result;
}

uint64_t RecordCursor.peekable.getter()
{
  type metadata accessor for PeekableRecordCursor();
  uint64_t v0 = swift_retain();
  return PeekableRecordCursor.__allocating_init(_:)(v0);
}

uint64_t type metadata accessor for PeekableRecordCursor()
{
  return sub_1B29A1278();
}

uint64_t PeekableRecordCursor.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  PeekableRecordCursor.init(_:)(a1);
  return v2;
}

void *PeekableRecordCursor.init(_:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 80);
  uint64_t v7 = sub_1B2E82F38();
  sub_1B299D278();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v15 - v11;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v3 + *(void *)(v5 + 104), 1, 1, v6);
  v3[2] = a1;
  sub_1B2E80A88();
  swift_retain();
  swift_getWitnessTable();
  sub_1B2E80C08();
  swift_release();
  if (v2)
  {
    swift_release();
  }
  else
  {
    unsigned int v13 = (char *)v3 + *(void *)(*v3 + 104);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v13, v12, v7);
    swift_endAccess();
  }
  return v3;
}

uint64_t PeekableRecordCursor.next()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B2E82F38();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v13[-v8];
  uint64_t v10 = (char *)v1 + *(void *)(v3 + 104);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(a1, v10, v4);
  sub_1B2E80A88();
  swift_getWitnessTable();
  uint64_t v11 = v14;
  sub_1B2E80C08();
  if (v11) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  }
  swift_beginAccess();
  (*(void (**)(char *, unsigned char *, uint64_t))(v6 + 40))(v10, v9, v4);
  return swift_endAccess();
}

uint64_t PeekableRecordCursor.peek()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  uint64_t v4 = sub_1B2E82F38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PeekableRecordCursor.deinit()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = sub_1B2E82F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t PeekableRecordCursor.__deallocating_deinit()
{
  PeekableRecordCursor.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2D711C4()
{
  uint64_t result = sub_1B2E82F38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PeekableRecordCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PeekableRecordCursor);
}

uint64_t dispatch thunk of PeekableRecordCursor.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for PeopleSubgraphView()
{
  return &type metadata for PeopleSubgraphView;
}

unint64_t sub_1B2D712B8(char a1)
{
  unint64_t result = 0x7463656A627573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7461636964657270;
      break;
    case 2:
      unint64_t result = 0x6E6F6974616C6572;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0x7463656A626FLL;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SubgraphColumn(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D71444);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubgraphColumn()
{
  return &type metadata for SubgraphColumn;
}

uint64_t sub_1B2D7147C()
{
  unint64_t v0 = sub_1B2E834D8();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B2D714C8()
{
  return sub_1B29AE640(*v0);
}

uint64_t sub_1B2D714D0()
{
  return sub_1B29F97B4();
}

uint64_t sub_1B2D714D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B2D7147C();
  *a1 = result;
  return result;
}

unint64_t sub_1B2D71508@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B2D712B8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B2D71534(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1B2D717F4();

  return MEMORY[0x1F411AD50](a1, a2, v4);
}

uint64_t sub_1B2D71580(uint64_t a1)
{
  unint64_t v2 = sub_1B2D71840();

  return MEMORY[0x1F411AD38](a1, v2);
}

uint64_t sub_1B2D715CC(uint64_t a1)
{
  unint64_t v2 = sub_1B2D71758();

  return MEMORY[0x1F411AF58](a1, v2);
}

uint64_t sub_1B2D71618(uint64_t a1)
{
  unint64_t v2 = sub_1B2D71758();

  return MEMORY[0x1F411AF50](a1, v2);
}

unint64_t sub_1B2D71668()
{
  unint64_t result = qword_1E9C43740;
  if (!qword_1E9C43740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43740);
  }
  return result;
}

unint64_t sub_1B2D716B8()
{
  unint64_t result = qword_1E9C43748;
  if (!qword_1E9C43748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43748);
  }
  return result;
}

unint64_t sub_1B2D71708()
{
  unint64_t result = qword_1E9C43750;
  if (!qword_1E9C43750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43750);
  }
  return result;
}

unint64_t sub_1B2D71758()
{
  unint64_t result = qword_1E9C43758;
  if (!qword_1E9C43758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43758);
  }
  return result;
}

unint64_t sub_1B2D717A8()
{
  unint64_t result = qword_1E9C43760;
  if (!qword_1E9C43760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43760);
  }
  return result;
}

unint64_t sub_1B2D717F4()
{
  unint64_t result = qword_1E9C43768;
  if (!qword_1E9C43768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43768);
  }
  return result;
}

unint64_t sub_1B2D71840()
{
  unint64_t result = qword_1E9C43770;
  if (!qword_1E9C43770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43770);
  }
  return result;
}

IntelligencePlatform::PersonalKnowledgeToolResultAttributeSemanticType_optional __swiftcall PersonalKnowledgeToolResultAttributeSemanticType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1B2E83808();
  result.value = swift_bridgeObjectRelease();
  char v5 = 19;
  if (v3 < 0x13) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t PersonalKnowledgeToolResultAttributeSemanticType.rawValue.getter()
{
  uint64_t result = 0x6E6F73726570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x49746361746E6F63;
      break;
    case 2:
      uint64_t result = 0x746E657665;
      break;
    case 3:
      uint64_t result = 1701667182;
      break;
    case 4:
      uint64_t result = 0x6D614E7473726966;
      break;
    case 5:
      uint64_t result = 0x656D614E7473616CLL;
      break;
    case 6:
      uint64_t result = 0x7961646874726962;
      break;
    case 7:
      uint64_t result = 0x6D754E656E6F6870;
      break;
    case 8:
      uint64_t result = 0x6464416C69616D65;
      break;
    case 9:
      uint64_t result = sub_1B29A2920(0x616C6572u);
      break;
    case 0xA:
      uint64_t result = 0x746361746E6F63;
      break;
    case 0xB:
      uint64_t result = sub_1B29A2920(0x61636F6Cu);
      break;
    case 0xC:
      uint64_t result = 0xD000000000000010;
      break;
    case 0xD:
      uint64_t result = 0x7473657265746E69;
      break;
    case 0xE:
      uint64_t result = 0x7461447472617473;
      break;
    case 0xF:
      uint64_t result = 0x65746144646E65;
      break;
    case 0x10:
      uint64_t result = sub_1B29A2920(0x61727564u);
      break;
    case 0x11:
      uint64_t result = 0x69746E6565726373;
      break;
    case 0x12:
      uint64_t result = 0x6765746143707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2D71B2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B29AB7D8(*a1, *a2);
}

uint64_t sub_1B2D71B38()
{
  return sub_1B29AEAA4();
}

uint64_t sub_1B2D71B40(uint64_t a1)
{
  return sub_1B2AA4E70(a1, *v1);
}

uint64_t sub_1B2D71B48()
{
  return sub_1B29F8E64();
}

IntelligencePlatform::PersonalKnowledgeToolResultAttributeSemanticType_optional sub_1B2D71B50(Swift::String *a1)
{
  return PersonalKnowledgeToolResultAttributeSemanticType.init(rawValue:)(*a1);
}

uint64_t sub_1B2D71B5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PersonalKnowledgeToolResultAttributeSemanticType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

IntelligencePlatform::PersonalKnowledgeToolResultAttributeDataType_optional __swiftcall PersonalKnowledgeToolResultAttributeDataType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t PersonalKnowledgeToolResultAttributeDataType.rawValue.getter()
{
  uint64_t result = 0x676E69727473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x72656765746E69;
      break;
    case 2:
      uint64_t result = 0x656C62756F64;
      break;
    case 3:
      uint64_t result = sub_1B29A2920(0x61727564u);
      break;
    case 4:
      uint64_t result = 1702125924;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B2D71C70(unsigned __int8 *a1, char *a2)
{
  return sub_1B29AB7F0(*a1, *a2);
}

uint64_t sub_1B2D71C7C()
{
  return sub_1B29AEA8C(*v0);
}

uint64_t sub_1B2D71C84(uint64_t a1)
{
  return sub_1B2AA4E88(a1, *v1);
}

uint64_t sub_1B2D71C8C()
{
  return sub_1B29F8E7C();
}

IntelligencePlatform::PersonalKnowledgeToolResultAttributeDataType_optional sub_1B2D71C94(Swift::String *a1)
{
  return PersonalKnowledgeToolResultAttributeDataType.init(rawValue:)(*a1);
}

uint64_t sub_1B2D71CA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PersonalKnowledgeToolResultAttributeDataType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void PersonalKnowledgeToolResultAttribute.semanticType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void PersonalKnowledgeToolResultAttribute.dataType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

BOOL static PersonalKnowledgeToolResultAttributeError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PersonalKnowledgeToolResultAttributeError.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t PersonalKnowledgeToolResultAttributeError.hashValue.getter()
{
  return sub_1B2E839E8();
}

unint64_t sub_1B2D71D78()
{
  unint64_t result = qword_1E9C43780;
  if (!qword_1E9C43780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43780);
  }
  return result;
}

unint64_t sub_1B2D71DC8()
{
  unint64_t result = qword_1E9C43788;
  if (!qword_1E9C43788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43788);
  }
  return result;
}

unint64_t sub_1B2D71E18()
{
  unint64_t result = qword_1E9C43790;
  if (!qword_1E9C43790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43790);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PersonalKnowledgeToolResultAttributeSemanticType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEE)
  {
    if (a2 + 18 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 18) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 19;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v5 = v6 - 19;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for PersonalKnowledgeToolResultAttributeSemanticType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *unint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D71FB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

void type metadata accessor for PersonalKnowledgeToolResultAttributeSemanticType()
{
}

unsigned char *storeEnumTagSinglePayload for PersonalKnowledgeToolResultAttributeDataType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D720B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for PersonalKnowledgeToolResultAttributeDataType()
{
}

uint64_t getEnumTagSinglePayload for PersonalKnowledgeToolResultAttribute(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 65284 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65284 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 16)) - 65285;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalKnowledgeToolResultAttribute(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65284 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65284 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 252;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D72244);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for PersonalKnowledgeToolResultAttribute()
{
}

unsigned char *storeEnumTagSinglePayload for PersonalKnowledgeToolResultAttributeError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D72344);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for PersonalKnowledgeToolResultAttributeError()
{
}

uint64_t sub_1B2D72378(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1B29C125C();
    uint64_t v2 = v12;
    unsigned int v4 = (unint64_t *)(a1 + 136);
    do
    {
      uint64_t v5 = *(v4 - 3);
      unint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      unint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      sub_1B29F4F7C(v5, v6);
      sub_1B29F4F7C(v7, v8);
      sub_1B29A3EB4((uint64_t *)&unk_1E9C3D6D0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29C125C();
        uint64_t v2 = v12;
      }
      unint64_t v9 = *(void *)(v2 + 16);
      if (v9 >= *(void *)(v2 + 24) >> 1)
      {
        sub_1B29C125C();
        uint64_t v2 = v12;
      }
      *(void *)(v2 + 16) = v9 + 1;
      sub_1B2D20894(v11, (_OWORD *)(v2 + 48 * v9 + 32));
      v4 += 14;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1B2D72504(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1B29C125C();
    uint64_t v2 = v10;
    unsigned int v4 = (void *)(a1 + 72);
    do
    {
      uint64_t v5 = v4[5];
      unint64_t v6 = v4[6];
      sub_1B29F4F7C(v4[3], v4[4]);
      sub_1B29F4F7C(v5, v6);
      sub_1B29A3EB4((uint64_t *)&unk_1E9C3D6D0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29C125C();
        uint64_t v2 = v10;
      }
      unint64_t v7 = *(void *)(v2 + 16);
      if (v7 >= *(void *)(v2 + 24) >> 1)
      {
        sub_1B29C125C();
        uint64_t v2 = v10;
      }
      *(void *)(v2 + 16) = v7 + 1;
      sub_1B2D20894(v9, (_OWORD *)(v2 + 48 * v7 + 32));
      v4 += 12;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1B2D72680(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1B29C15DC();
    uint64_t v2 = v10;
    uint64_t v4 = a1 + 48;
    do
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B29A3EB4(&qword_1E9C39A70);
      sub_1B29A3EB4(&qword_1E9C3D6C8);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29C15DC();
        uint64_t v2 = v10;
      }
      unint64_t v5 = *(void *)(v2 + 16);
      if (v5 >= *(void *)(v2 + 24) >> 1)
      {
        sub_1B29C15DC();
        uint64_t v2 = v10;
      }
      *(void *)(v2 + 16) = v5 + 1;
      uint64_t v6 = v2 + 24 * v5;
      *(_OWORD *)(v6 + 32) = v8;
      *(void *)(v6 + 48) = v9;
      v4 += 24;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t PersonalKnowledgeToolExecution.init(knosisServer:ecrServer:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  return sub_1B29D1D20(a2, (uint64_t)(a3 + 1));
}

uint64_t PersonalKnowledgeToolExecution.execute(kgqString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[108] = v4;
  v5[107] = a4;
  v5[106] = a3;
  v5[105] = a2;
  v5[104] = a1;
  return MEMORY[0x1F4188298](sub_1B2D7282C, 0, 0);
}

uint64_t sub_1B2D7282C()
{
  uint64_t v43 = v0;
  uint64_t v1 = v0 + 368;
  *(void *)(v0 + 816) = MEMORY[0x1E4FBC860];
  id v2 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  id v3 = sub_1B2D6DC08(0xD000000000000014, 0x80000001B2EA2550, 0);
  uint64_t v6 = v3;
  if (v3)
  {
    unint64_t v7 = (void *)sub_1B2E82348();
    uint64_t v8 = sub_1B2E824A8();
    uint64_t v9 = (void *)sub_1B2E82348();
    id v10 = objc_msgSend(v6, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v7, 0, 0, v8, v9);

    uint64_t v1 = v0 + 368;
    uint64_t v5 = sub_1B2E82378();
    uint64_t v4 = v11;
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 856);
    swift_bridgeObjectRetain();
    uint64_t v5 = *(void *)(v0 + 848);
  }
  *(void *)(v0 + 600) = v5;
  *(void *)(v0 + 608) = v4;
  *(void *)(v0 + 584) = 0x5941444F54;
  *(void *)(v0 + 592) = 0xE500000000000000;
  *(void *)(v0 + 568) = 5721934;
  *(void *)(v0 + 576) = 0xE300000000000000;
  *(void *)(v0 + 872) = sub_1B29C3640();
  sub_1B2D74210();
  uint64_t v12 = sub_1B2E83018();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  sub_1B2D2BF44(v12, v14, v1);
  uint64_t v15 = *(void *)(v0 + 376);
  uint64_t v16 = *(void *)(v0 + 400);
  uint64_t v17 = *(void *)(v0 + 424);
  char v18 = *(unsigned char *)(v0 + 432);
  v31[1] = *(void *)(v0 + 368);
  v31[2] = v15;
  long long v32 = *(_OWORD *)(v0 + 384);
  uint64_t v33 = v16;
  long long v34 = *(_OWORD *)(v0 + 408);
  uint64_t v35 = v17;
  char v36 = v18;
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  char v41 = -4;
  uint64_t v42 = 0;
  sub_1B2D6DCE4(v1);
  sub_1B2D69860(v31);
  uint64_t v19 = v1;
  uint64_t v20 = *(void ***)(v0 + 864);
  uint64_t v21 = v38;
  uint64_t v23 = v39;
  uint64_t v22 = v40;
  unsigned __int8 v24 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2D2E6E8(v21, v23, v22, v24);
  sub_1B2D6DD30(v19);
  uint64_t v25 = v31[0];
  uint64_t v26 = *v20;
  sub_1B29C3B84((uint64_t)(v20 + 1), v0 + 448);
  *(void *)(v0 + 440) = v26;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 488) = v25;
  *(void *)(v0 + 496) = v27;
  id v28 = v26;
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 880) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_1B2D72D48;
  return sub_1B2CA2008();
}

uint64_t sub_1B2D72D48(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 888) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1B2D73AC8;
  }
  else
  {
    *(void *)(v4 + 896) = a1;
    uint64_t v5 = sub_1B2D72E70;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1B2D72E70()
{
  uint64_t v149 = v0;
  uint64_t v1 = sub_1B2D72680(*(void *)(v0 + 896));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 816) = v1;
  if (qword_1E9C38C50 != -1) {
    swift_once();
  }
  id v2 = (uint64_t *)(v0 + 816);
  uint64_t v3 = sub_1B2E81FB8();
  sub_1B29A4B98(v3, (uint64_t)qword_1E9C3EBF0);
  uint64_t v4 = sub_1B2E81F98();
  os_log_type_t v5 = sub_1B2E82DA8();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = MEMORY[0x1E4FBC840];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    v148[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_beginAccess();
    uint64_t v9 = *(void *)(v0 + 816);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B29A3EB4(&qword_1E9C3D6C8);
    uint64_t v11 = MEMORY[0x1B3EB1020](v9, v10);
    uint64_t v13 = v12;
    uint64_t v7 = MEMORY[0x1E4FBC840];
    swift_bridgeObjectRelease();
    sub_1B29BF6BC(v11, v13, (uint64_t)v148, v14, v15, v16, v17, v18, v96, v99, v102, v105, v108, v112, v116, v120, v124, v128, v132,
      v136);
    *(void *)(v0 + 824) = v19;
    sub_1B2E82FB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B2996000, v4, v5, "kgq to vop: %s", v8, 0xCu);
    swift_arrayDestroy();
    sub_1B299B750();
    sub_1B299B750();
  }
  else
  {
  }
  sub_1B2D73DC8(v0 + 440);
  swift_beginAccess();
  uint64_t v20 = *(void *)(*v2 + 16);
  if (v20)
  {
    uint64_t v121 = v0 + 648;
    uint64_t v125 = v0 + 632;
    uint64_t v113 = v0 + 680;
    uint64_t v117 = v0 + 664;
    uint64_t v137 = v0 + 808;
    BOOL v133 = (void *)(v0 + 784);
    uint64_t v21 = (uint64_t *)(*v2 + 48);
    uint64_t v109 = *v2;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v141 = v20 - 1;
    char v23 = 1;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    uint64_t v129 = v7 + 8;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v143 = v21;
      uint64_t v144 = v24;
      uint64_t v145 = *(v21 - 2);
      uint64_t v26 = *v21;
      v148[0] = *(v21 - 1);
      swift_retain();
      uint64_t v142 = v26;
      swift_bridgeObjectRetain();
      uint64_t v27 = VOPBuilder.toString.getter();
      uint64_t v29 = v27;
      uint64_t v30 = v28;
      if (v23) {
        goto LABEL_11;
      }
      *(void *)(v0 + 728) = v27;
      *(void *)(v0 + 736) = v28;
      *(void *)(v0 + 712) = 0;
      *(void *)(v0 + 720) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1B2D74228();
      sub_1B2E82298();
      *(void *)(v0 + 760) = v22;
      sub_1B2E83748();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v0 + 720);
      *(void *)(v0 + 696) = *(void *)(v0 + 712);
      *(void *)(v0 + 704) = v31;
      uint64_t v32 = v22;
      char v33 = sub_1B2E83038();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v33 & 1) == 0)
      {
LABEL_11:
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v34 = *(void *)(v0 + 872);
        *(void *)(v0 + 680) = v29;
        *(void *)(v0 + 688) = v30;
        *(void *)(v0 + 664) = 0;
        *(void *)(v0 + 672) = 0xE000000000000000;
        sub_1B2D74228();
        sub_1B2E82298();
        *(void *)(v0 + 792) = v32;
        sub_1B2E83748();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        uint64_t v35 = *(void *)(v0 + 672);
        *(void *)(v0 + 648) = *(void *)(v0 + 664);
        *(void *)(v0 + 656) = v35;
        uint64_t v36 = sub_1B2D73C90(v25);
        uint64_t v38 = v37;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 632) = v36;
        *(void *)(v0 + 640) = v38;
        uint64_t v102 = v34;
        uint64_t v105 = v34;
        unint64_t v99 = v34;
        uint64_t v96 = MEMORY[0x1E4FBB1A0];
        sub_1B2D74210();
        uint64_t v29 = sub_1B2E83018();
        uint64_t v40 = v39;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v30 = v40;
      }
      __src[0] = 0;
      __src[1] = 0;
      __src[2] = v29;
      __src[3] = v30;
      memset(&__src[4], 0, 24);
      LOWORD(__src[7]) = 257;
      KnosisServer.executeKGQ(request:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      memcpy((void *)(v0 + 200), v148, 0xA8uLL);
      memcpy(__dst, v148, sizeof(__dst));
      sub_1B2CCE9E0((void *)(v0 + 200));
      sub_1B2CCE9E0((void *)(v0 + 200));
      char v41 = sub_1B2E81F98();
      os_log_type_t v42 = sub_1B2E82DA8();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        v148[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 136315394;
        *(void *)(v0 + 552) = 0;
        *(void *)(v0 + 560) = 0xE000000000000000;
        sub_1B2D74228();
        sub_1B2E82298();
        *(void *)(v0 + 768) = v145;
        sub_1B2E83748();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B29BF6BC(*(void *)(v0 + 552), *(void *)(v0 + 560), (uint64_t)v148, v44, v45, v46, v47, v48, v96, v99, v102, v105, v109, v113, v117, v121, v125, v129, (uint64_t)v133,
          v137);
        *(void *)(v0 + 752) = v49;
        sub_1B2E82FB8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 12) = 2080;
        sub_1B2CCE9E0((void *)(v0 + 200));
        sub_1B2CC8730();
        uint64_t v51 = v50;
        uint64_t v53 = v52;
        sub_1B2A1B9C8((void *)(v0 + 200));
        sub_1B29BF6BC(v51, v53, (uint64_t)v148, v54, v55, v56, v57, v58, v97, v100, v103, v106, v110, v114, v118, v122, v126, v130, v134,
          v138);
        *(void *)(v0 + 744) = v59;
        sub_1B2E82FB8();
        swift_bridgeObjectRelease();
        sub_1B2A1B9C8((void *)(v0 + 200));
        sub_1B2A1B9C8((void *)(v0 + 200));
        _os_log_impl(&dword_1B2996000, v41, v42, "execution result for %s: %s", (uint8_t *)v43, 0x16u);
        swift_arrayDestroy();
        sub_1B299B750();
        sub_1B299B750();
      }
      else
      {
        sub_1B2A1B9C8((void *)(v0 + 200));
        sub_1B2A1B9C8((void *)(v0 + 200));
      }

      sub_1B2CCE9E0((void *)(v0 + 200));
      sub_1B2CCE9E0((void *)(v0 + 200));
      uint64_t v60 = sub_1B2E81F98();
      os_log_type_t v61 = sub_1B2E82DA8();
      if (os_log_type_enabled(v60, v61))
      {
        os_log_type_t v140 = v61;
        uint64_t v62 = swift_slowAlloc();
        v148[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v62 = 136315394;
        *(void *)(v0 + 616) = 0;
        uint64_t v63 = 0xE000000000000000;
        *(void *)(v0 + 624) = 0xE000000000000000;
        sub_1B2D74228();
        sub_1B2E82298();
        *(void *)(v0 + 808) = v145;
        sub_1B2E83748();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        sub_1B29BF6BC(*(void *)(v0 + 616), *(void *)(v0 + 624), (uint64_t)v148, v64, v65, v66, v67, v68, v96, v99, v102, v105, v109, v113, v117, v121, v125, v129, (uint64_t)v133,
          v137);
        *(void *)(v0 + 800) = v69;
        sub_1B2E82FB8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v62 + 12) = 2080;
        uint64_t v75 = *(void *)(v0 + 352);
        if (v75)
        {
          uint64_t v76 = *(void *)(v0 + 344);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2CC88C8();
          uint64_t v78 = v77;
          uint64_t v63 = v79;
          sub_1B29E4D3C(v76, v75);
        }
        else
        {
          uint64_t v78 = 0;
        }
        sub_1B29BF6BC(v78, v63, (uint64_t)v148, v70, v71, v72, v73, v74, v98, v101, v104, v107, v111, v115, v119, v123, v127, v131, v135,
          v139);
        *BOOL v133 = v80;
        sub_1B2E82FB8();
        swift_bridgeObjectRelease();
        sub_1B2A1B9C8((void *)(v0 + 200));
        sub_1B2A1B9C8((void *)(v0 + 200));
        _os_log_impl(&dword_1B2996000, v60, v140, "execution debug for %s: %s", (uint8_t *)v62, 0x16u);
        swift_arrayDestroy();
        sub_1B299B750();
        sub_1B299B750();
      }
      else
      {
        sub_1B2A1B9C8((void *)(v0 + 200));
        sub_1B2A1B9C8((void *)(v0 + 200));
      }

      uint64_t v24 = v144;
      uint64_t v21 = v143 + 3;
      switch(*(unsigned char *)(v0 + 240))
      {
        case 1:
        case 2:
        case 3:
          char v81 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          if ((v81 & 1) == 0) {
            goto LABEL_31;
          }
          break;
        default:
          swift_bridgeObjectRelease();
          break;
      }
      if (!*(void *)(*(void *)(v0 + 232) + 16))
      {
LABEL_31:
        unint64_t v86 = *(__int16 **)(v0 + 840);
        uint64_t v87 = *(void **)(v0 + 832);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        memcpy(v87, (const void *)(v0 + 200), 0xA8uLL);
        sub_1B2A17588(v142, v86);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
      sub_1B2CCE9E0((void *)(v0 + 200));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B9ED4();
        uint64_t v24 = v84;
      }
      unint64_t v82 = *(void *)(v24 + 16);
      if (v82 >= *(void *)(v24 + 24) >> 1)
      {
        sub_1B29B9ED4();
        uint64_t v24 = v85;
      }
      memcpy(__src, __dst, sizeof(__src));
      *(void *)(v24 + 16) = v82 + 1;
      unint64_t v83 = (void *)(v24 + 184 * v82);
      v83[4] = v145;
      memcpy(v83 + 5, __src, 0xA8uLL);
      v83[26] = v142;
      memcpy(v148, (const void *)(v0 + 200), 0xA8uLL);
      uint64_t v25 = KnosisResult.answerIds.getter();
      swift_release();
      sub_1B2A1B9C8((void *)(v0 + 200));
      if (!v141) {
        break;
      }
      char v23 = 0;
      --v141;
      uint64_t v22 = v145;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
  }
  uint64_t v88 = *(void *)(v24 + 16);
  if (v88)
  {
    memcpy((void *)(v0 + 16), (const void *)(v24 + 184 * v88 - 152), 0xB8uLL);
    sub_1B2D73E1C((void *)(v0 + 16));
    swift_bridgeObjectRelease();
    uint64_t v89 = *(void *)(v0 + 192);
    sub_1B2D73E1C((void *)(v0 + 16));
    sub_1B2A1B9C8((void *)(v0 + 24));
    if (*(void *)(v89 + 16))
    {
      __int16 v90 = *(_WORD *)(v89 + 32);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      __int16 v90 = 1280;
    }
    uint64_t v93 = *(__int16 **)(v0 + 840);
    int v94 = *(void **)(v0 + 832);
    swift_bridgeObjectRelease();
    memcpy(v94, (const void *)(v0 + 24), 0xA8uLL);
    *uint64_t v93 = v90;
LABEL_40:
    sub_1B299AD7C();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1B2D73EF0();
    swift_allocError();
    *uint64_t v91 = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_1B299AD7C();
  }
  return v92();
}

uint64_t sub_1B2D73AC8()
{
  sub_1B2D73DC8(v0 + 440);
  id v2 = *(void **)(v0 + 888);
  if (qword_1E9C38C50 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1B2E81FB8();
  sub_1B29A4B98(v3, (uint64_t)qword_1E9C3EBF0);
  id v4 = v2;
  id v5 = v2;
  BOOL v6 = sub_1B2E81F98();
  os_log_type_t v7 = sub_1B2E82DB8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)sub_1B29A0EC8();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v2;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    sub_1B29A3294(v11);
    void *v9 = v1;

    _os_log_impl(&dword_1B2996000, v6, v7, "kgq v2 parsing error: %@", v8, 0xCu);
    sub_1B29A3EB4(&qword_1EB7E3110);
    swift_arrayDestroy();
    sub_1B299B750();
    sub_1B299B750();
  }
  else
  {
  }
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_1B299AD7C();
  return v12();
}

uint64_t sub_1B2D73C90(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  sub_1B29A3EB4(&qword_1EB7E3B30);
  sub_1B2A20660();
  sub_1B2E822D8();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  return 10075;
}

BOOL static PersonalKnowledgeToolError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PersonalKnowledgeToolError.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t PersonalKnowledgeToolError.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t sub_1B2D73DC8(uint64_t a1)
{
  return a1;
}

void *sub_1B2D73E1C(void *a1)
{
  uint64_t v2 = a1[12];
  uint64_t v3 = a1[13];
  uint64_t v5 = a1[20];
  uint64_t v6 = a1[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2CC2F38(v2, v3);
  sub_1B29E4D80(v6, v5);
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1B2D73EF0()
{
  unint64_t result = qword_1E9C437A0;
  if (!qword_1E9C437A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C437A0);
  }
  return result;
}

unint64_t sub_1B2D73F40()
{
  unint64_t result = qword_1E9C437A8;
  if (!qword_1E9C437A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C437A8);
  }
  return result;
}

uint64_t destroy for PersonalKnowledgeToolExecution(id *a1)
{
  uint64_t v1 = (uint64_t)(a1 + 1);

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v1);
}

uint64_t initializeWithCopy for PersonalKnowledgeToolExecution(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  id v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for PersonalKnowledgeToolExecution(void **a1, void **a2)
{
  uint64_t v4 = (uint64_t *)(a2 + 1);
  uint64_t v3 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  long long v6 = (uint64_t *)(a1 + 1);
  id v7 = v3;

  sub_1B2B385E4(v6, v4);
  return a1;
}

uint64_t assignWithTake for PersonalKnowledgeToolExecution(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for PersonalKnowledgeToolExecution()
{
  return &type metadata for PersonalKnowledgeToolExecution;
}

unsigned char *storeEnumTagSinglePayload for PersonalKnowledgeToolError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D741D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalKnowledgeToolError()
{
  return &type metadata for PersonalKnowledgeToolError;
}

uint64_t PersonEntityCard.subject.getter()
{
  return *(void *)v0;
}

uint64_t PersonEntityCard.subject.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*PersonEntityCard.subject.modify())(void)
{
  return nullsub_1;
}

uint64_t PersonEntityCard.summaryInfos.getter()
{
  return sub_1B2999874();
}

uint64_t PersonEntityCard.summaryInfos.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v0;
  return result;
}

uint64_t (*PersonEntityCard.summaryInfos.modify())(void)
{
  return nullsub_1;
}

uint64_t PersonEntityCard.summaryAllTime.getter()
{
  return sub_1B2999874();
}

uint64_t PersonEntityCard.summaryAllTime.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  return result;
}

uint64_t (*PersonEntityCard.summaryAllTime.modify())(void)
{
  return nullsub_1;
}

uint64_t PersonEntityCard.summaryAllTimeWithLocations.getter()
{
  return sub_1B2999874();
}

uint64_t PersonEntityCard.summaryAllTimeWithLocations.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0;
  return result;
}

uint64_t (*PersonEntityCard.summaryAllTimeWithLocations.modify())(void)
{
  return nullsub_1;
}

uint64_t PersonEntityCard.name.getter()
{
  return sub_1B2999874();
}

uint64_t PersonEntityCard.name.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v0;
  return result;
}

uint64_t (*PersonEntityCard.name.modify())(void)
{
  return nullsub_1;
}

uint64_t PersonEntityCard.currentUser.getter()
{
  return sub_1B2999874();
}

uint64_t PersonEntityCard.currentUser.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = v0;
  return result;
}

uint64_t (*PersonEntityCard.currentUser.modify())(void)
{
  return nullsub_1;
}

uint64_t PersonEntityCard.relationship.getter()
{
  return sub_1B2999874();
}

uint64_t PersonEntityCard.relationship.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = v2;
  *(void *)(v1 + 96) = v0;
  return result;
}

uint64_t (*PersonEntityCard.relationship.modify())(void)
{
  return nullsub_1;
}

uint64_t PersonEntityCard.summaryAllTimeActivities.getter()
{
  return sub_1B2999874();
}

uint64_t PersonEntityCard.summaryAllTimeActivities.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = v2;
  *(void *)(v1 + 112) = v0;
  return result;
}

uint64_t (*PersonEntityCard.summaryAllTimeActivities.modify())(void)
{
  return nullsub_1;
}

uint64_t PersonEntityCard.summaryAllTimeSpantext.getter()
{
  return sub_1B2999874();
}

uint64_t PersonEntityCard.summaryAllTimeSpantext.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 120) = v2;
  *(void *)(v1 + 128) = v0;
  return result;
}

uint64_t (*PersonEntityCard.summaryAllTimeSpantext.modify())(void)
{
  return nullsub_1;
}

uint64_t PersonEntityCard.summaryAllTimeWithLocationsActivities.getter()
{
  return sub_1B2999874();
}

uint64_t PersonEntityCard.summaryAllTimeWithLocationsActivities.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 136) = v2;
  *(void *)(v1 + 144) = v0;
  return result;
}

uint64_t (*PersonEntityCard.summaryAllTimeWithLocationsActivities.modify())(void)
{
  return nullsub_1;
}

uint64_t PersonEntityCard.summaryAllTimeWithLocationsSpantext.getter()
{
  return sub_1B2999874();
}

uint64_t PersonEntityCard.summaryAllTimeWithLocationsSpantext.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 152) = v2;
  *(void *)(v1 + 160) = v0;
  return result;
}

uint64_t (*PersonEntityCard.summaryAllTimeWithLocationsSpantext.modify())(void)
{
  return nullsub_1;
}

uint64_t PersonEntityCard.summaryAllTimeWithLocationsLocations.getter()
{
  return sub_1B2999874();
}

uint64_t PersonEntityCard.summaryAllTimeWithLocationsLocations.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 168) = v2;
  *(void *)(v1 + 176) = v0;
  return result;
}

uint64_t (*PersonEntityCard.summaryAllTimeWithLocationsLocations.modify())(void)
{
  return nullsub_1;
}

uint64_t PersonEntityCard.summaryAllTimeWithLocationsLocNames.getter()
{
  return sub_1B2999874();
}

uint64_t PersonEntityCard.summaryAllTimeWithLocationsLocNames.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 184) = v2;
  *(void *)(v1 + 192) = v0;
  return result;
}

uint64_t (*PersonEntityCard.summaryAllTimeWithLocationsLocNames.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1B2D74864(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x497972616D6D7573 && a2 == 0xEC000000736F666ELL;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x417972616D6D7573 && a2 == 0xEE00656D69546C6CLL;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001B2EA2820 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 1701667182 && a2 == 0xE400000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x55746E6572727563 && a2 == 0xEB00000000726573;
          if (v9 || (sub_1B2E837A8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v10 = a1 == 0x6E6F6974616C6572 && a2 == 0xEC00000070696873;
            if (v10 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000018 && a2 == 0x80000001B2EA1940 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001B2EA1960 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000025 && a2 == 0x80000001B2EA2840 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000023 && a2 == 0x80000001B2EA2870 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else if (a1 == 0xD000000000000024 && a2 == 0x80000001B2EA28A0 || (sub_1B2E837A8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else if (a1 == 0xD000000000000023 && a2 == 0x80000001B2EA28D0)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else
            {
              char v11 = sub_1B2E837A8();
              swift_bridgeObjectRelease();
              if (v11) {
                return 12;
              }
              else {
                return 13;
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1B2D74DA4(char a1)
{
  unint64_t result = 0x7463656A627573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x497972616D6D7573;
      break;
    case 2:
      unint64_t result = 0x417972616D6D7573;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 1701667182;
      break;
    case 5:
      unint64_t result = 0x55746E6572727563;
      break;
    case 6:
      unint64_t result = 0x6E6F6974616C6572;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0xD000000000000025;
      break;
    case 10:
    case 12:
      unint64_t result = 0xD000000000000023;
      break;
    case 11:
      unint64_t result = 0xD000000000000024;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B2D74F50()
{
  return sub_1B2D74DA4(*v0);
}

uint64_t sub_1B2D74F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D74864(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2D74F80(uint64_t a1)
{
  unint64_t v2 = sub_1B2D75380();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D74FBC(uint64_t a1)
{
  unint64_t v2 = sub_1B2D75380();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PersonEntityCard.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C437B0);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = v1[1];
  v23[21] = v1[2];
  v23[22] = v8;
  uint64_t v9 = v1[3];
  v23[19] = v1[4];
  v23[20] = v9;
  uint64_t v10 = v1[5];
  v23[17] = v1[6];
  v23[18] = v10;
  uint64_t v11 = v1[7];
  v23[15] = v1[8];
  v23[16] = v11;
  uint64_t v12 = v1[9];
  v23[13] = v1[10];
  v23[14] = v12;
  uint64_t v13 = v1[12];
  v23[11] = v1[11];
  v23[12] = v13;
  uint64_t v14 = v1[13];
  v23[9] = v1[14];
  v23[10] = v14;
  uint64_t v15 = v1[15];
  v23[7] = v1[16];
  v23[8] = v15;
  uint64_t v16 = v1[17];
  v23[5] = v1[18];
  v23[6] = v16;
  v23[4] = v1[19];
  v23[3] = v1[20];
  v23[2] = v1[21];
  v23[1] = v1[22];
  uint64_t v17 = v1[24];
  uint64_t v18 = a1[3];
  uint64_t v19 = a1;
  uint64_t v20 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B29AEC7C(v19, v18);
  sub_1B2D75380();
  sub_1B2E83A38();
  char v37 = 0;
  uint64_t v21 = v24;
  sub_1B2E836F8();
  if (!v21)
  {
    uint64_t v24 = v17;
    char v36 = 1;
    sub_1B2D7731C();
    char v35 = 2;
    sub_1B2D7731C();
    char v34 = 3;
    sub_1B2D7731C();
    char v33 = 4;
    sub_1B2D7731C();
    char v32 = 5;
    sub_1B2D7731C();
    char v31 = 6;
    sub_1B2D7731C();
    char v30 = 7;
    sub_1B2D7731C();
    char v29 = 8;
    sub_1B2D7731C();
    char v28 = 9;
    sub_1B2D7731C();
    char v27 = 10;
    sub_1B2E83628();
    char v26 = 11;
    sub_1B2E83628();
    char v25 = 12;
    sub_1B2E83628();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v20, v3);
}

unint64_t sub_1B2D75380()
{
  unint64_t result = qword_1E9C437B8;
  if (!qword_1E9C437B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C437B8);
  }
  return result;
}

uint64_t PersonEntityCard.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C437C0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D75380();
  sub_1B2E83A18();
  uint64_t v48 = (uint64_t)a1;
  if (v2)
  {
    sub_1B29A32BC();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v47 = a2;
    uint64_t v6 = sub_1B2E835D8();
    uint64_t v7 = sub_1B2D77338();
    uint64_t v9 = v8;
    uint64_t v46 = v7;
    sub_1B2D7736C(2);
    uint64_t v45 = sub_1B2D77338();
    uint64_t v50 = v10;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1B2D77338();
    uint64_t v44 = v11;
    sub_1B2D7736C(4);
    uint64_t v41 = sub_1B2D77338();
    uint64_t v42 = v12;
    sub_1B2D7736C(5);
    uint64_t v39 = sub_1B2D77338();
    uint64_t v40 = v13;
    sub_1B2D7736C(6);
    uint64_t v37 = sub_1B2D77338();
    uint64_t v38 = v14;
    sub_1B2D7736C(7);
    uint64_t v35 = sub_1B2D77338();
    uint64_t v36 = v6;
    uint64_t v16 = v15;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1B2D77338();
    uint64_t v34 = v18;
    sub_1B2D7736C(9);
    uint64_t v19 = sub_1B2E83508();
    uint64_t v33 = v20;
    uint64_t v21 = v19;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1B2D77384();
    uint64_t v32 = v22;
    LOBYTE(v52[0]) = 11;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1B2D77384();
    uint64_t v49 = v23;
    char v53 = 12;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1B2D77384();
    uint64_t v25 = v24;
    uint64_t v26 = sub_1B29A220C();
    v27(v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v51[0] = v36;
    v51[1] = v46;
    v51[2] = v9;
    v51[3] = v45;
    v51[4] = v50;
    v51[5] = v43;
    v51[6] = v44;
    v51[7] = v41;
    v51[8] = v42;
    v51[9] = v39;
    v51[10] = v40;
    v51[11] = v37;
    v51[12] = v38;
    void v51[13] = v35;
    v51[14] = v16;
    v51[15] = v17;
    v51[16] = v34;
    v51[17] = v21;
    v51[18] = v33;
    v51[19] = v31;
    v51[20] = v32;
    v51[21] = v30;
    v51[22] = v49;
    v51[23] = v29;
    v51[24] = v25;
    sub_1B2D75BC8((uint64_t)v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v47, v51, 0xC8uLL);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v48);
    v52[0] = v36;
    v52[1] = v46;
    v52[2] = v9;
    v52[3] = v45;
    v52[4] = v50;
    v52[5] = v43;
    v52[6] = v44;
    v52[7] = v41;
    v52[8] = v42;
    v52[9] = v39;
    v52[10] = v40;
    v52[11] = v37;
    v52[12] = v38;
    v52[13] = v35;
    v52[14] = v16;
    v52[15] = v17;
    v52[16] = v34;
    v52[17] = v21;
    v52[18] = v33;
    v52[19] = v31;
    v52[20] = v32;
    v52[21] = v30;
    v52[22] = v49;
    v52[23] = v29;
    v52[24] = v25;
    return sub_1B2D75CA4((uint64_t)v52);
  }
}

uint64_t sub_1B2D75BC8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2D75CA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2D75D80@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PersonEntityCard.init(from:)(a1, a2);
}

uint64_t sub_1B2D75D98(void *a1)
{
  return PersonEntityCard.encode(to:)(a1);
}

uint64_t sub_1B2D75DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2D7721C();

  return MEMORY[0x1F411AC60](a1, a2, a3, v6);
}

uint64_t sub_1B2D75E1C()
{
  sub_1B2D771D0();

  return sub_1B2E80FD8();
}

uint64_t sub_1B2D75E80()
{
  return sub_1B2E80FC8();
}

uint64_t sub_1B2D75EC8()
{
  return sub_1B2E80FB8();
}

uint64_t sub_1B2D75F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2D77184();

  return MEMORY[0x1F411ABF8](a1, a2, a3, v6);
}

uint64_t ViewService.personEntityCardsView.getter@<X0>(void *a1@<X8>)
{
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  uint64_t v5 = (void *)sub_1B2E82348();
  v17[0] = 0;
  id v6 = objc_msgSend(v4, sel_requestAssertionForViewName_error_, v5, v17);

  id v7 = v17[0];
  if (v6)
  {
    uint64_t v8 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    uint64_t v9 = v8[5];
    uint64_t v10 = v8[6];
    sub_1B29AEC7C(v8 + 2, v9);
    uint64_t v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 8);
    id v12 = v7;
    uint64_t v13 = v11(v6, v9, v10);
    if (v2) {
      return swift_unknownObjectRelease();
    }
    else {
      return sub_1B2D76100(v6, v13, v14, a1);
    }
  }
  else
  {
    id v16 = v17[0];
    sub_1B2E80388();

    return swift_willThrow();
  }
}

uint64_t sub_1B2D76100@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(a1, sel_viewArtifactTableName);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1B2E82378();
    unint64_t v12 = v11;
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    unint64_t v12 = 0x80000001B2EA2920;
    uint64_t v10 = 0xD000000000000016;
  }
  uint64_t result = swift_unknownObjectRelease();
  *a4 = a1;
  a4[1] = v10;
  a4[2] = v12;
  a4[3] = a2;
  a4[4] = a3;
  return result;
}

uint64_t ViewService.PersonEntityCardsView.getEntityCard(personId:)()
{
  return sub_1B2E80C28();
}

void *sub_1B2D76260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v18 = a3;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C43818);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C43820);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1B2E814F8();
  v24[0] = a2;
  LOBYTE(v24[1]) = 0;
  sub_1B2E81478();
  sub_1B29D22C4(&qword_1E9C43828, &qword_1E9C43818);
  sub_1B2D77268();
  uint64_t v12 = v20;
  sub_1B2E80A08();
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1B2D772B4((uint64_t)v25, (uint64_t)v23);
  sub_1B2D772B4((uint64_t)v23, (uint64_t)v24);
  if (sub_1B2D49D3C((uint64_t)v24) == 1)
  {
    unint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    unint64_t v21 = 0xD00000000000001FLL;
    unint64_t v22 = 0x80000001B2EA2900;
    v25[27] = a2;
    sub_1B2E83748();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    unint64_t v13 = v21;
    unint64_t v14 = v22;
    sub_1B2A823FC();
    swift_allocError();
    *(void *)uint64_t v15 = v13;
    *(void *)(v15 + 8) = v14;
    *(unsigned char *)(v15 + 16) = 1;
    swift_willThrow();
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return memcpy(v18, v24, 0xC8uLL);
}

void *sub_1B2D76598@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B2D76260(a1, *(void *)(v2 + 24), a2);
}

uint64_t ViewService.PersonEntityCardsView.getEntityCards(personIds:)()
{
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1E9C437C8);
  uint64_t result = sub_1B2E80C28();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B2D76660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v17 = a3;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C43818);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B29A3EB4(&qword_1E9C43820);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1B2E814F8();
  void v21[6] = a2;
  v20[3] = sub_1B2E81508();
  v20[4] = MEMORY[0x1E4F62E90];
  sub_1B29D1C70(v20);
  sub_1B2E81518();
  v21[3] = sub_1B2E80BE8();
  v21[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v21);
  sub_1B29A3EB4(&qword_1E9C433E8);
  sub_1B29D22C4(&qword_1E9C433F0, &qword_1E9C433E8);
  sub_1B2E82648();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v20);
  sub_1B2E81498();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v21);
  sub_1B29D22C4(&qword_1E9C43828, &qword_1E9C43818);
  sub_1B2D77268();
  uint64_t v12 = v19;
  uint64_t v13 = v4;
  uint64_t v14 = sub_1B2E809F8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!v12) {
    *uint64_t v17 = v14;
  }
  return result;
}

uint64_t sub_1B2D7693C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2D76660(a1, *(void *)(v2 + 24), a2);
}

unint64_t sub_1B2D7695C()
{
  unint64_t result = qword_1E9C437D0;
  if (!qword_1E9C437D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C437D0);
  }
  return result;
}

unint64_t sub_1B2D769AC()
{
  unint64_t result = qword_1E9C437D8;
  if (!qword_1E9C437D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C437D8);
  }
  return result;
}

unint64_t sub_1B2D769FC()
{
  unint64_t result = qword_1E9C437E0;
  if (!qword_1E9C437E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C437E0);
  }
  return result;
}

uint64_t destroy for PersonEntityCard()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PersonEntityCard(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  uint64_t v11 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v11;
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  uint64_t v13 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PersonEntityCard(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  a1[22] = a2[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[23] = a2[23];
  a1[24] = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for PersonEntityCard(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC8uLL);
}

uint64_t assignWithTake for PersonEntityCard(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonEntityCard(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 200))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonEntityCard(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 200) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonEntityCard()
{
  return &type metadata for PersonEntityCard;
}

ValueMetadata *type metadata accessor for ViewService.PersonEntityCardsView()
{
  return &type metadata for ViewService.PersonEntityCardsView;
}

unsigned char *storeEnumTagSinglePayload for PersonEntityCard.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D7705CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonEntityCard.CodingKeys()
{
  return &type metadata for PersonEntityCard.CodingKeys;
}

unint64_t sub_1B2D77098()
{
  unint64_t result = qword_1E9C437E8;
  if (!qword_1E9C437E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C437E8);
  }
  return result;
}

unint64_t sub_1B2D770E8()
{
  unint64_t result = qword_1E9C437F0;
  if (!qword_1E9C437F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C437F0);
  }
  return result;
}

unint64_t sub_1B2D77138()
{
  unint64_t result = qword_1E9C437F8;
  if (!qword_1E9C437F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C437F8);
  }
  return result;
}

unint64_t sub_1B2D77184()
{
  unint64_t result = qword_1E9C43800;
  if (!qword_1E9C43800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43800);
  }
  return result;
}

unint64_t sub_1B2D771D0()
{
  unint64_t result = qword_1E9C43808;
  if (!qword_1E9C43808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43808);
  }
  return result;
}

unint64_t sub_1B2D7721C()
{
  unint64_t result = qword_1E9C43810;
  if (!qword_1E9C43810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43810);
  }
  return result;
}

unint64_t sub_1B2D77268()
{
  unint64_t result = qword_1E9C43830;
  if (!qword_1E9C43830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43830);
  }
  return result;
}

uint64_t sub_1B2D772B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C43838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2D7731C()
{
  return sub_1B2E83628();
}

uint64_t sub_1B2D77338()
{
  return sub_1B2E83508();
}

uint64_t sub_1B2D77354()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D7736C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 432) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2D77384()
{
  return sub_1B2E83508();
}

uint64_t sub_1B2D773A0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D773B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D773D0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D773E8()
{
  return swift_bridgeObjectRelease();
}

IntelligencePlatform::PersonMatcherInferenceInterface::Input __swiftcall PersonMatcherInferenceInterface.Input.init(string:charList:)(Swift::String string, Swift::String charList)
{
  *uint64_t v2 = string;
  v2[1] = charList;
  result.charList = charList;
  result.string = string;
  return result;
}

unint64_t static PersonMatcherInferenceInterface.interfaceId.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1B2D77428(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E69727473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7473694C72616863 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2D77510(char a1)
{
  if (a1) {
    return 0x7473694C72616863;
  }
  else {
    return 0x676E69727473;
  }
}

uint64_t sub_1B2D77544()
{
  return sub_1B2D77510(*v0);
}

uint64_t sub_1B2D7754C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D77428(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2D77574(uint64_t a1)
{
  unint64_t v2 = sub_1B2D77724();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D775B0(uint64_t a1)
{
  unint64_t v2 = sub_1B2D77724();

  return MEMORY[0x1F41862B0](a1, v2);
}

void PersonMatcherInferenceInterface.Input.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C43840);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v9 = v8 - v7;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2D77724();
  sub_1B2E83A38();
  sub_1B2E83688();
  if (!v0) {
    sub_1B2E83688();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  sub_1B29998C8();
}

unint64_t sub_1B2D77724()
{
  unint64_t result = qword_1E9C43848;
  if (!qword_1E9C43848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43848);
  }
  return result;
}

void PersonMatcherInferenceInterface.Input.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B29A3EB4(&qword_1E9C43850);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2D77724();
  sub_1B2E83A18();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_1B2E83568();
    uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B2E83568();
    uint64_t v11 = v10;
    uint64_t v14 = v9;
    uint64_t v12 = sub_1B299F450();
    v13(v12);
    *uint64_t v4 = v6;
    v4[1] = v8;
    _OWORD v4[2] = v14;
    void v4[3] = v11;
    swift_bridgeObjectRetain();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B29998C8();
}

void sub_1B2D77924()
{
}

void sub_1B2D7793C()
{
}

uint64_t PersonMatcherInferenceInterface.Output.embedding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C3A230);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_1B2D779C0(uint64_t a1)
{
  unint64_t v2 = sub_1B2D77B74();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D779FC(uint64_t a1)
{
  unint64_t v2 = sub_1B2D77B74();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PersonMatcherInferenceInterface.Output.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C43858);
  sub_1B299D278();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v8 = v7 - v6;
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D77B74();
  sub_1B2E83A38();
  sub_1B29A3EB4(&qword_1E9C3A230);
  sub_1B2D77E10(&qword_1E9C43190);
  sub_1B2E836D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

unint64_t sub_1B2D77B74()
{
  unint64_t result = qword_1E9C43860;
  if (!qword_1E9C43860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43860);
  }
  return result;
}

void PersonMatcherInferenceInterface.Output.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  uint64_t v20 = v3;
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A230);
  sub_1B299D278();
  uint64_t v19 = v5;
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  uint64_t v22 = v8 - v7;
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C43868);
  sub_1B299D278();
  uint64_t v21 = v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PersonMatcherInferenceInterface.Output();
  MEMORY[0x1F4188790](v14 - 8);
  sub_1B299E4A0();
  uint64_t v17 = v16 - v15;
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2D77B74();
  sub_1B2E83A18();
  if (!v0)
  {
    sub_1B2D77E10(&qword_1E9C431A0);
    sub_1B2E835B8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v17, v22, v4);
    sub_1B2D77E74(v17, v20);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  sub_1B29998C8();
}

uint64_t type metadata accessor for PersonMatcherInferenceInterface.Output()
{
  uint64_t result = qword_1E9C37800;
  if (!qword_1E9C37800) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B2D77E10(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B29C3588(&qword_1E9C3A230);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B2D77E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersonMatcherInferenceInterface.Output();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B2D77ED8()
{
}

uint64_t sub_1B2D77EF0(void *a1)
{
  return PersonMatcherInferenceInterface.Output.encode(to:)(a1);
}

uint64_t static PersonMatcherInferenceInterface.Errors.InitError.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1B2D77F10(uint64_t a1)
{
  unint64_t v2 = sub_1B2D78120();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D77F4C(uint64_t a1)
{
  unint64_t v2 = sub_1B2D78120();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2D77F88(uint64_t a1)
{
  unint64_t v2 = sub_1B2D7816C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D77FC4(uint64_t a1)
{
  unint64_t v2 = sub_1B2D7816C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void PersonMatcherInferenceInterface.Errors.InitError.encode(to:)()
{
  sub_1B299F300();
  uint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1E9C43870);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299ADB4();
  sub_1B29A3EB4(&qword_1E9C43878);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29AEC7C(v1, v1[3]);
  sub_1B2D78120();
  sub_1B299BD14();
  sub_1B2D7816C();
  sub_1B2D43824();
  uint64_t v4 = sub_1B2D4380C();
  v5(v4);
  uint64_t v6 = sub_1B29A0594();
  v7(v6);
  sub_1B29998C8();
}

unint64_t sub_1B2D78120()
{
  unint64_t result = qword_1E9C43880;
  if (!qword_1E9C43880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43880);
  }
  return result;
}

unint64_t sub_1B2D7816C()
{
  unint64_t result = qword_1E9C43888;
  if (!qword_1E9C43888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43888);
  }
  return result;
}

void PersonMatcherInferenceInterface.Errors.InitError.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C43890);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B2999928();
  sub_1B29A3EB4(&qword_1E9C43898);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  unint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  sub_1B29AEC7C(v2, v5);
  sub_1B2D78120();
  sub_1B2D437E8();
  if (v0) {
    goto LABEL_6;
  }
  if (!*(void *)(sub_1B2D43858() + 16) || (uint64_t v7 = sub_1B29A4898(), sub_1B29B142C(v7), sub_1B299EAD0(), v6 != v5 >> 1))
  {
    sub_1B2E83288();
    swift_allocError();
    sub_1B29A3EB4(&qword_1E9C39038);
    sub_1B299BCF4((uint64_t)&type metadata for PersonMatcherInferenceInterface.Errors.InitError);
    sub_1B29A48B4();
    uint64_t v8 = sub_1B2D43844();
    v9(v8);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v10 = sub_1B2D43878();
    v11(v10);
LABEL_6:
    uint64_t v16 = (uint64_t)v2;
    goto LABEL_7;
  }
  sub_1B2D7816C();
  sub_1B29A2060();
  uint64_t v12 = sub_1B299FB30();
  v13(v12);
  swift_unknownObjectRelease();
  uint64_t v14 = sub_1B2D437CC();
  v15(v14);
  uint64_t v16 = (uint64_t)v2;
LABEL_7:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v16);
  sub_1B29998C8();
}

uint64_t sub_1B2D783EC()
{
  return PersonMatcherInferenceInterface.Errors.RunError.hashValue.getter();
}

uint64_t sub_1B2D78404()
{
  return PersonMatcherInferenceInterface.Errors.RunError.hash(into:)();
}

void sub_1B2D7841C()
{
}

void sub_1B2D78434()
{
}

uint64_t static PersonMatcherInferenceInterface.Errors.RunError.== infix(_:_:)()
{
  return 1;
}

uint64_t PersonMatcherInferenceInterface.Errors.RunError.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t sub_1B2D7847C(uint64_t a1)
{
  unint64_t v2 = sub_1B2D78910();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D784B8(uint64_t a1)
{
  unint64_t v2 = sub_1B2D78910();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2D784F4(uint64_t a1)
{
  unint64_t v2 = sub_1B2D7895C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D78530(uint64_t a1)
{
  unint64_t v2 = sub_1B2D7895C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void PersonMatcherInferenceInterface.Errors.RunError.encode(to:)()
{
  sub_1B299F300();
  uint64_t v1 = v0;
  sub_1B29A3EB4(&qword_1E9C438A0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B299ADB4();
  sub_1B29A3EB4(&qword_1E9C438A8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29AEC7C(v1, v1[3]);
  sub_1B2D78910();
  sub_1B299BD14();
  sub_1B2D7895C();
  sub_1B2D43824();
  uint64_t v4 = sub_1B2D4380C();
  v5(v4);
  uint64_t v6 = sub_1B29A0594();
  v7(v6);
  sub_1B29998C8();
}

void PersonMatcherInferenceInterface.Errors.RunError.init(from:)()
{
  sub_1B299F300();
  uint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C438C0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B2999928();
  sub_1B29A3EB4(&qword_1E9C438C8);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  unint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  sub_1B29AEC7C(v2, v5);
  sub_1B2D78910();
  sub_1B2D437E8();
  if (v0) {
    goto LABEL_6;
  }
  if (!*(void *)(sub_1B2D43858() + 16) || (uint64_t v7 = sub_1B29A4898(), sub_1B29B142C(v7), sub_1B299EAD0(), v6 != v5 >> 1))
  {
    sub_1B2E83288();
    swift_allocError();
    sub_1B29A3EB4(&qword_1E9C39038);
    sub_1B299BCF4((uint64_t)&type metadata for PersonMatcherInferenceInterface.Errors.RunError);
    sub_1B29A48B4();
    uint64_t v8 = sub_1B2D43844();
    v9(v8);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v10 = sub_1B2D43878();
    v11(v10);
LABEL_6:
    uint64_t v16 = (uint64_t)v2;
    goto LABEL_7;
  }
  sub_1B2D7895C();
  sub_1B29A2060();
  uint64_t v12 = sub_1B299FB30();
  v13(v12);
  swift_unknownObjectRelease();
  uint64_t v14 = sub_1B2D437CC();
  v15(v14);
  uint64_t v16 = (uint64_t)v2;
LABEL_7:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v16);
  sub_1B29998C8();
}

void sub_1B2D788C0()
{
}

void sub_1B2D788D8()
{
}

unint64_t sub_1B2D788F0()
{
  return 0xD000000000000016;
}

unint64_t sub_1B2D78910()
{
  unint64_t result = qword_1E9C438B0;
  if (!qword_1E9C438B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C438B0);
  }
  return result;
}

unint64_t sub_1B2D7895C()
{
  unint64_t result = qword_1E9C438B8;
  if (!qword_1E9C438B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C438B8);
  }
  return result;
}

unint64_t sub_1B2D789AC()
{
  unint64_t result = qword_1E9C438D0;
  if (!qword_1E9C438D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C438D0);
  }
  return result;
}

unint64_t sub_1B2D789FC()
{
  unint64_t result = qword_1E9C438D8;
  if (!qword_1E9C438D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C438D8);
  }
  return result;
}

unint64_t sub_1B2D78A4C()
{
  unint64_t result = qword_1E9C438E0;
  if (!qword_1E9C438E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C438E0);
  }
  return result;
}

unint64_t sub_1B2D78A9C()
{
  unint64_t result = qword_1E9C438E8;
  if (!qword_1E9C438E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C438E8);
  }
  return result;
}

unint64_t sub_1B2D78AEC()
{
  unint64_t result = qword_1E9C438F0;
  if (!qword_1E9C438F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C438F0);
  }
  return result;
}

void type metadata accessor for PersonMatcherInferenceInterface()
{
}

void type metadata accessor for PersonMatcherInferenceInterface.Input()
{
}

uint64_t getEnumTagSinglePayload for PersonMatcherInferenceInterface.Output(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2D78B64);
}

uint64_t sub_1B2D78B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A230);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PersonMatcherInferenceInterface.Output(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2D78BC4);
}

uint64_t sub_1B2D78BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A230);

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, v4);
}

void type metadata accessor for PersonMatcherInferenceInterface.Errors()
{
}

void type metadata accessor for PersonMatcherInferenceInterface.Errors.InitError()
{
}

void type metadata accessor for PersonMatcherInferenceInterface.Errors.RunError()
{
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceInterface.Errors.RunError.CodingKeys()
{
  return &type metadata for PersonMatcherInferenceInterface.Errors.RunError.CodingKeys;
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys()
{
  return &type metadata for PersonMatcherInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys;
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceInterface.Errors.InitError.CodingKeys()
{
  return &type metadata for PersonMatcherInferenceInterface.Errors.InitError.CodingKeys;
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceInterface.Errors.InitError.InvalidModelCodingKeys()
{
  return &type metadata for PersonMatcherInferenceInterface.Errors.InitError.InvalidModelCodingKeys;
}

unsigned char *_s20IntelligencePlatform31PersonMatcherInferenceInterfaceO6ErrorsO9InitErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2D78D18);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceInterface.Output.CodingKeys()
{
  return &type metadata for PersonMatcherInferenceInterface.Output.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PersonMatcherInferenceInterface.Input.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D78E1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceInterface.Input.CodingKeys()
{
  return &type metadata for PersonMatcherInferenceInterface.Input.CodingKeys;
}

unint64_t sub_1B2D78E58()
{
  unint64_t result = qword_1E9C438F8;
  if (!qword_1E9C438F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C438F8);
  }
  return result;
}

unint64_t sub_1B2D78EA8()
{
  unint64_t result = qword_1E9C43900;
  if (!qword_1E9C43900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43900);
  }
  return result;
}

unint64_t sub_1B2D78EF8()
{
  unint64_t result = qword_1E9C43908;
  if (!qword_1E9C43908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43908);
  }
  return result;
}

unint64_t sub_1B2D78F48()
{
  unint64_t result = qword_1E9C43910;
  if (!qword_1E9C43910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43910);
  }
  return result;
}

unint64_t sub_1B2D78F98()
{
  unint64_t result = qword_1E9C43918;
  if (!qword_1E9C43918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43918);
  }
  return result;
}

unint64_t sub_1B2D78FE8()
{
  unint64_t result = qword_1E9C43920;
  if (!qword_1E9C43920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43920);
  }
  return result;
}

unint64_t sub_1B2D79038()
{
  unint64_t result = qword_1E9C43928;
  if (!qword_1E9C43928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43928);
  }
  return result;
}

unint64_t sub_1B2D79088()
{
  unint64_t result = qword_1E9C43930;
  if (!qword_1E9C43930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43930);
  }
  return result;
}

unint64_t sub_1B2D790D8()
{
  unint64_t result = qword_1E9C43938;
  if (!qword_1E9C43938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43938);
  }
  return result;
}

unint64_t sub_1B2D79128()
{
  unint64_t result = qword_1E9C43940;
  if (!qword_1E9C43940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43940);
  }
  return result;
}

unint64_t sub_1B2D79178()
{
  unint64_t result = qword_1E9C43948;
  if (!qword_1E9C43948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43948);
  }
  return result;
}

unint64_t sub_1B2D791C8()
{
  unint64_t result = qword_1E9C43950;
  if (!qword_1E9C43950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43950);
  }
  return result;
}

unint64_t sub_1B2D79218()
{
  unint64_t result = qword_1E9C43958;
  if (!qword_1E9C43958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43958);
  }
  return result;
}

unint64_t sub_1B2D79268()
{
  unint64_t result = qword_1E9C43960;
  if (!qword_1E9C43960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43960);
  }
  return result;
}

unint64_t sub_1B2D792B8()
{
  unint64_t result = qword_1E9C43968;
  if (!qword_1E9C43968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43968);
  }
  return result;
}

unint64_t sub_1B2D79308()
{
  unint64_t result = qword_1E9C43970;
  if (!qword_1E9C43970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43970);
  }
  return result;
}

unint64_t static PersonMatcherInferenceServiceDefinition.definitionId.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1B2D79374(uint64_t a1)
{
  unint64_t v2 = sub_1B2D794EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D793B0(uint64_t a1)
{
  unint64_t v2 = sub_1B2D794EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PersonMatcherInferenceServiceDefinition.ConfigParameters.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C43978);
  sub_1B299D278();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1B29A0480();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D794EC();
  sub_1B2E83A38();
  sub_1B2E83688();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

unint64_t sub_1B2D794EC()
{
  unint64_t result = qword_1E9C43980;
  if (!qword_1E9C43980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43980);
  }
  return result;
}

uint64_t PersonMatcherInferenceServiceDefinition.ConfigParameters.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C43988);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29A0480();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D794EC();
  sub_1B2E83A18();
  if (!v2)
  {
    uint64_t v6 = sub_1B2E83568();
    uint64_t v8 = v7;
    uint64_t v9 = sub_1B299F318();
    v10(v9);
    *a2 = v6;
    a2[1] = v8;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
}

uint64_t sub_1B2D79650@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PersonMatcherInferenceServiceDefinition.ConfigParameters.init(from:)(a1, a2);
}

uint64_t sub_1B2D79668(void *a1)
{
  return PersonMatcherInferenceServiceDefinition.ConfigParameters.encode(to:)(a1);
}

void PersonMatcherInferenceServiceDefinition.Runner.cost.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 112);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1B2D79694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[3] = a3;
  v4[4] = v3;
  _OWORD v4[2] = a2;
  v4[5] = *(void *)v3;
  swift_defaultActor_initialize();
  *(void *)(v3 + 128) = a1;
  *(void *)(v3 + 136) = a2;
  *(void *)(v3 + 112) = 0;
  *(unsigned char *)(v3 + 120) = 1;
  id v7 = objc_allocWithZone(MEMORY[0x1E4F1E990]);
  swift_bridgeObjectRetain();
  id v8 = objc_msgSend(v7, sel_init);
  v4[6] = v8;
  objc_msgSend(v8, sel_setComputeUnits_, 2);
  objc_msgSend(v8, sel_setAllowBackgroundGPUCompute_, 1);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9C3E340 + dword_1E9C3E340);
  id v9 = v8;
  uint64_t v10 = (void *)swift_task_alloc();
  v4[7] = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_1B2D79824;
  return v12(a1, a2, 0x614D6E6F73726570, 0xED00007265686374, (uint64_t)v8);
}

uint64_t sub_1B2D79824(uint64_t a1)
{
  sub_1B299B708();
  uint64_t v5 = v4;
  sub_1B299F388();
  *uint64_t v6 = v5;
  id v8 = *(void **)(v7 + 48);
  uint64_t v9 = *v2;
  sub_1B299F388();
  *uint64_t v10 = v9;
  v5[8] = a1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v11 = (void *)v5[6];
    swift_bridgeObjectRelease();
LABEL_3:

    swift_bridgeObjectRelease();
    swift_defaultActor_destroy();
    swift_release();
    swift_deallocPartialClassInstance();
    sub_1B299AD7C();
    return v12();
  }
  swift_bridgeObjectRelease();
  if (!a1)
  {
    uint64_t v11 = (void *)v5[6];
    sub_1B2D78A4C();
    swift_allocError();
    swift_willThrow();
    goto LABEL_3;
  }
  uint64_t v14 = v5[4];
  *(void *)(v14 + 144) = a1;
  swift_retain();
  return MEMORY[0x1F4188298](sub_1B2D444F0, v14, 0);
}

uint64_t PersonMatcherInferenceServiceDefinition.Runner.run(input:context:)()
{
  sub_1B299F394();
  uint64_t v3 = v2;
  *(void *)(v1 + 104) = v4;
  *(void *)(v1 + 112) = v0;
  *(void *)(v1 + 96) = v5;
  sub_1B29A3EB4(&qword_1E9C3D200);
  *(void *)(v1 + 120) = swift_task_alloc();
  *(void *)(v1 + 128) = swift_task_alloc();
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C3A230);
  *(void *)(v1 + 136) = v6;
  *(void *)(v1 + 144) = *(void *)(v6 - 8);
  *(void *)(v1 + 152) = swift_task_alloc();
  *(void *)(v1 + 160) = swift_task_alloc();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *v3;
  *(void *)(v1 + 168) = v7;
  *(void *)(v1 + 176) = v8;
  *(_OWORD *)(v1 + 184) = *(_OWORD *)(v3 + 1);
  *(void *)(v1 + 200) = v3[3];
  return MEMORY[0x1F4188298](sub_1B2D79B30, v0, 0);
}

uint64_t sub_1B2D79B30()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  String.oneHotEncoding(charList:)(v0[25], v1);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v2) == 1)
  {
    sub_1B2AD97E0(v0[16]);
    sub_1B2D78A9C();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B299AD7C();
    return v14();
  }
  else
  {
    uint64_t v3 = v0[20];
    uint64_t v4 = v0[21];
    uint64_t v5 = v0[17];
    uint64_t v6 = v0[18];
    uint64_t v7 = v0[16];
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v0[26] = (uint64_t)v8;
    v0[27] = (v6 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v8(v4, v7, v5);
    sub_1B29A3EB4(&qword_1E9C43998);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
    *(void *)(inited + 32) = 0x315F7475706E69;
    *(void *)(inited + 40) = 0xE700000000000000;
    unint64_t v10 = sub_1B2D7A588();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v4, v5);
    sub_1B29D22C4((unint64_t *)&qword_1E9C3D208, &qword_1E9C3A230);
    uint64_t v11 = sub_1B2E82D88();
    *(void *)(inited + 72) = v10;
    *(void *)(inited + 48) = v11;
    sub_1B2E82148();
    id v12 = objc_allocWithZone(MEMORY[0x1E4F1E930]);
    id v13 = sub_1B2D3876C();
    v0[28] = (uint64_t)v13;
    uint64_t v18 = (uint64_t (*)(uint64_t))((char *)&dword_1E9C42F38 + dword_1E9C42F38);
    id v16 = v13;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[29] = (uint64_t)v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1B2D79E18;
    return v18((uint64_t)v16);
  }
}

uint64_t sub_1B2D79E18()
{
  sub_1B299F394();
  uint64_t v2 = *v1;
  sub_1B299F388();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1B299F388();
  *uint64_t v6 = v5;
  *(void *)(v8 + 240) = v7;
  *(void *)(v8 + 248) = v0;
  swift_task_dealloc();
  uint64_t v9 = *(void **)(v2 + 224);
  uint64_t v10 = *(void *)(v2 + 112);

  if (v0) {
    uint64_t v11 = sub_1B2D7A18C;
  }
  else {
    uint64_t v11 = sub_1B2D79F5C;
  }
  return MEMORY[0x1F4188298](v11, v10, 0);
}

uint64_t sub_1B2D79F5C()
{
  uint64_t v1 = (void *)v0[30];
  uint64_t v2 = (void *)sub_1B2E82348();
  id v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  uint64_t v4 = v0[17];
  uint64_t v5 = v0[15];
  if (!v3)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0[15], 1, 1, v0[17]);
    goto LABEL_7;
  }
  sub_1B2E82DE8();

  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v5, 1, v4) == 1)
  {
LABEL_7:
    sub_1B2AD97E0(v0[15]);
    return sub_1B2E83418();
  }
  uint64_t v6 = (void *)v0[28];
  uint64_t v7 = (void (*)(uint64_t, uint64_t, uint64_t))v0[26];
  uint64_t v8 = v0[21];
  uint64_t v9 = v0[18];
  uint64_t v10 = v0[19];
  uint64_t v11 = v0[17];
  uint64_t v12 = v0[15];
  uint64_t v13 = v0[12];
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v11);
  v7(v10, v12, v11);
  v7(v13, v10, v11);
  uint64_t v14 = v13 + *(int *)(sub_1B29A3EB4(&qword_1E9C439A0) + 28);
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v15();
}

uint64_t sub_1B2D7A18C()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v4();
}

uint64_t String.oneHotEncoding(charList:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A230);
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1B29A0480();
  sub_1B29A3EB4(&qword_1EB7E56F0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B2EC89A0;
  *(void *)(v8 + 32) = 1;
  *(void *)(v8 + 40) = sub_1B2E824A8();
  *(void *)(v8 + 48) = sub_1B2E824A8();
  sub_1B29D22C4((unint64_t *)&qword_1E9C3D208, &qword_1E9C3A230);
  uint64_t v31 = v2;
  uint64_t v9 = v4;
  sub_1B2E82018();
  sub_1B2E823F8();
  uint64_t v10 = sub_1B2E82548();
  if (v11)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v11;
    uint64_t v28 = v6;
    char v14 = 0;
    uint64_t v15 = 0;
    uint64_t v30 = a1;
    uint64_t result = a1;
    do
    {
      if (__OFADD__(v15, 1)) {
        goto LABEL_21;
      }
      swift_bridgeObjectRetain();
      uint64_t result = sub_1B2E82548();
      if (v17)
      {
        uint64_t v18 = result;
        uint64_t v19 = v17;
        uint64_t v20 = 0;
        while (!__OFADD__(v20, 1))
        {
          uint64_t v21 = (void *)MEMORY[0x1B3EB2480]();
          BOOL v22 = v12 == v18 && v13 == v19;
          if (v22 || (sub_1B2E837A8() & 1) != 0)
          {
            uint64_t v23 = swift_allocObject();
            *(_OWORD *)(v23 + 16) = xmmword_1B2EC89A0;
            *(void *)(v23 + 32) = 0;
            *(void *)(v23 + 40) = v15;
            *(void *)(v23 + 48) = v20;
            sub_1B2E82008();
            char v14 = 1;
          }
          swift_bridgeObjectRelease();
          uint64_t result = sub_1B2E82548();
          uint64_t v18 = result;
          uint64_t v19 = v24;
          ++v20;
          if (!v24) {
            goto LABEL_14;
          }
        }
        __break(1u);
LABEL_21:
        __break(1u);
        return result;
      }
LABEL_14:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_1B2E82548();
      uint64_t v13 = v25;
      ++v15;
      uint64_t result = v30;
    }
    while (v25);
    swift_bridgeObjectRelease();
    if (v14)
    {
      uint64_t v6 = v28;
      uint64_t v26 = a2;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(a2, v31, v9);
      uint64_t v27 = 0;
    }
    else
    {
      uint64_t v27 = 1;
      uint64_t v6 = v28;
      uint64_t v26 = a2;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = 1;
    uint64_t v26 = a2;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v26, v27, 1, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v31, v9);
}

unint64_t sub_1B2D7A588()
{
  unint64_t result = qword_1E9C42F18;
  if (!qword_1E9C42F18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9C42F18);
  }
  return result;
}

uint64_t PersonMatcherInferenceServiceDefinition.Runner.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t PersonMatcherInferenceServiceDefinition.Runner.__deallocating_deinit()
{
  PersonMatcherInferenceServiceDefinition.Runner.deinit();

  return MEMORY[0x1F4188210](v0);
}

void PersonMatcherInferenceServiceDefinition.Runner.unownedExecutor.getter()
{
}

void sub_1B2D7A62C()
{
}

void sub_1B2D7A648(uint64_t a1@<X8>)
{
}

uint64_t sub_1B2D7A66C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B2D7A720;
  return PersonMatcherInferenceServiceDefinition.Runner.run(input:context:)();
}

uint64_t sub_1B2D7A720()
{
  sub_1B299B708();
  uint64_t v1 = *v0;
  sub_1B299F388();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1B299AD7C();
  return v3();
}

uint64_t static PersonMatcherInferenceServiceDefinition.buildRunner(config:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  v2[2] = a2;
  v2[3] = v3;
  v2[4] = v4;
  return MEMORY[0x1F4188298](sub_1B2D7A810, 0, 0);
}

uint64_t sub_1B2D7A810()
{
  sub_1B299F394();
  type metadata accessor for PersonMatcherInferenceServiceDefinition.Runner();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B2D7A8E0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = v0[2];
  return sub_1B2D79694(v3, v2, v4);
}

uint64_t sub_1B2D7A8E0(uint64_t a1)
{
  sub_1B299B708();
  uint64_t v4 = *v2;
  sub_1B299F388();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v1) {
    uint64_t v6 = a1;
  }
  return v7(v6);
}

unint64_t sub_1B2D7A9B8()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1B2D7A9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1B2A12A64;
  return static PersonMatcherInferenceServiceDefinition.buildRunner(config:context:)(a2, a3);
}

uint64_t type metadata accessor for PersonMatcherInferenceServiceDefinition.Runner()
{
  return self;
}

unint64_t sub_1B2D7AA9C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B2D7AACC();
  unint64_t result = sub_1B2D7AB18();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B2D7AACC()
{
  unint64_t result = qword_1E9C439B8;
  if (!qword_1E9C439B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C439B8);
  }
  return result;
}

unint64_t sub_1B2D7AB18()
{
  unint64_t result = qword_1E9C439C0;
  if (!qword_1E9C439C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C439C0);
  }
  return result;
}

unint64_t sub_1B2D7AB64(uint64_t a1)
{
  unint64_t result = sub_1B2D7AB8C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B2D7AB8C()
{
  unint64_t result = qword_1E9C439C8;
  if (!qword_1E9C439C8)
  {
    type metadata accessor for PersonMatcherInferenceServiceDefinition.Runner();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C439C8);
  }
  return result;
}

uint64_t sub_1B2D7ABD8()
{
  return sub_1B29D22C4((unint64_t *)&unk_1E9C439D0, &qword_1E9C439A0);
}

unint64_t sub_1B2D7AC18()
{
  unint64_t result = qword_1E9C439E0;
  if (!qword_1E9C439E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C439E0);
  }
  return result;
}

unint64_t sub_1B2D7AC68()
{
  unint64_t result = qword_1E9C439E8;
  if (!qword_1E9C439E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C439E8);
  }
  return result;
}

void type metadata accessor for PersonMatcherInferenceServiceDefinition()
{
}

void type metadata accessor for PersonMatcherInferenceServiceDefinition.ConfigParameters()
{
}

uint64_t method lookup function for PersonMatcherInferenceServiceDefinition.Runner(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PersonMatcherInferenceServiceDefinition.Runner);
}

unsigned char *storeEnumTagSinglePayload for PersonMatcherInferenceServiceDefinition.ConfigParameters.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2D7AD84);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceServiceDefinition.ConfigParameters.CodingKeys()
{
  return &type metadata for PersonMatcherInferenceServiceDefinition.ConfigParameters.CodingKeys;
}

unint64_t sub_1B2D7ADC0()
{
  unint64_t result = qword_1E9C439F8;
  if (!qword_1E9C439F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C439F8);
  }
  return result;
}

unint64_t sub_1B2D7AE10()
{
  unint64_t result = qword_1E9C43A00;
  if (!qword_1E9C43A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A00);
  }
  return result;
}

unint64_t sub_1B2D7AE60()
{
  unint64_t result = qword_1E9C43A08;
  if (!qword_1E9C43A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A08);
  }
  return result;
}

uint64_t sub_1B2D7AEAC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2DCA640();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1B2D7CBE8(v6);
  *a1 = v2;
  return result;
}

uint64_t PersonRankingServiceError.description.getter(uint64_t a1)
{
  if (!a1) {
    return 0xD000000000000034;
  }
  uint64_t result = sub_1B2E83828();
  __break(1u);
  return result;
}

uint64_t PersonRankingServiceError.init(rawValue:)()
{
  return 0;
}

unint64_t static PersonRankingServiceError._nsErrorDomain.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_1B2D7AF9C()
{
  return sub_1B29AE8E0();
}

uint64_t sub_1B2D7AFA4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1B2D7DAB0();

  return MEMORY[0x1F40E3B98](a1, a2, v4);
}

uint64_t sub_1B2D7AFF0()
{
  return sub_1B29F90E8();
}

uint64_t sub_1B2D7AFF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = PersonRankingServiceError.init(rawValue:)();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1B2D7B02C(uint64_t a1)
{
  unint64_t v2 = sub_1B2D7DAB0();

  return MEMORY[0x1F40E3BA8](a1, v2);
}

uint64_t sub_1B2D7B068(uint64_t a1)
{
  unint64_t v2 = sub_1B2D7DAB0();

  return MEMORY[0x1F40E3BA0](a1, v2);
}

unint64_t sub_1B2D7B0A4()
{
  PersonRankingServiceError.description.getter(*v0);
  return 0xD000000000000034;
}

unint64_t sub_1B2D7B0C8()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_1B2D7B0E8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1B2D7DAB0();

  return MEMORY[0x1F40E3B90](a1, a2, v4);
}

id PersonRankingService.__allocating_init(config:)(uint64_t a1)
{
  char v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC20IntelligencePlatform20PersonRankingService_config] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id PersonRankingService.init(config:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC20IntelligencePlatform20PersonRankingService_config] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for PersonRankingService();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for PersonRankingService()
{
  return self;
}

uint64_t sub_1B2D7B218(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574696D696C6E75 && a2 == 0xE900000000000064;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7368564 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B2D7B304(char a1)
{
  if (a1) {
    return 7368564;
  }
  else {
    return 0x6574696D696C6E75;
  }
}

uint64_t sub_1B2D7B338()
{
  return sub_1B2D7B304(*v0);
}

uint64_t sub_1B2D7B340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D7B218(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2D7B368(uint64_t a1)
{
  unint64_t v2 = sub_1B2D7B708();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D7B3A4(uint64_t a1)
{
  unint64_t v2 = sub_1B2D7B708();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2D7B3E0(uint64_t a1)
{
  unint64_t v2 = sub_1B2D7B754();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D7B41C(uint64_t a1)
{
  unint64_t v2 = sub_1B2D7B754();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2D7B458(uint64_t a1)
{
  unint64_t v2 = sub_1B2D7B7A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D7B494(uint64_t a1)
{
  unint64_t v2 = sub_1B2D7B7A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PersonRankingService.RankingMode.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C43A18);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C43A20);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C43A28);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299B3C8();
  int v6 = *(unsigned __int8 *)(v1 + 8);
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D7B708();
  sub_1B2E83A38();
  if (v6 == 1)
  {
    sub_1B2D7B7A0();
    sub_1B2E83618();
  }
  else
  {
    sub_1B2D7B754();
    sub_1B2E83618();
    sub_1B2E836C8();
  }
  sub_1B299B798();
  v7();
  uint64_t v8 = sub_1B29A4974();
  return v9(v8);
}

unint64_t sub_1B2D7B708()
{
  unint64_t result = qword_1E9C43A30;
  if (!qword_1E9C43A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A30);
  }
  return result;
}

unint64_t sub_1B2D7B754()
{
  unint64_t result = qword_1E9C43A38;
  if (!qword_1E9C43A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A38);
  }
  return result;
}

unint64_t sub_1B2D7B7A0()
{
  unint64_t result = qword_1E9C43A40;
  if (!qword_1E9C43A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A40);
  }
  return result;
}

uint64_t PersonRankingService.RankingMode.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C43A48);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299E4A0();
  sub_1B29A3EB4(&qword_1E9C43A50);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299E4A0();
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C43A58);
  sub_1B299D278();
  uint64_t v29 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1B299B3C8();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D7B708();
  sub_1B2E83A18();
  if (v30) {
    goto LABEL_7;
  }
  uint64_t v31 = a1;
  uint64_t v9 = sub_1B2E835F8();
  if (!*(void *)(v9 + 16)
    || (char v10 = *(unsigned char *)(v9 + 32), sub_1B29B142C(1),
                                   uint64_t v12 = v11,
                                   unint64_t v14 = v13,
                                   swift_bridgeObjectRelease(),
                                   v12 != v14 >> 1))
  {
    uint64_t v15 = v2;
    uint64_t v16 = sub_1B2E83288();
    swift_allocError();
    uint64_t v18 = v17;
    sub_1B29A3EB4(&qword_1E9C39038);
    *uint64_t v18 = &type metadata for PersonRankingService.RankingMode;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x1E4FBBA70], v16);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v15, v6);
    a1 = v31;
LABEL_7:
    uint64_t v19 = (uint64_t)a1;
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v19);
  }
  if (v10)
  {
    sub_1B2D7B754();
    sub_1B2D7DB74();
    uint64_t v24 = sub_1B2E835A8();
    sub_1B299B798();
    v25();
    swift_unknownObjectRelease();
    uint64_t v26 = sub_1B2D7DB60();
    v27(v26);
  }
  else
  {
    sub_1B2D7B7A0();
    sub_1B2D7DB74();
    sub_1B299B798();
    v21();
    swift_unknownObjectRelease();
    uint64_t v22 = sub_1B2D7DAFC();
    v23(v22);
    uint64_t v24 = 0;
  }
  *(void *)a2 = v24;
  *(unsigned char *)(a2 + 8) = v10 ^ 1;
  uint64_t v19 = (uint64_t)v31;
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v19);
}

uint64_t sub_1B2D7BC14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PersonRankingService.RankingMode.init(from:)(a1, a2);
}

uint64_t sub_1B2D7BC2C(void *a1)
{
  return PersonRankingService.RankingMode.encode(to:)(a1);
}

uint64_t sub_1B2D7BC44(uint64_t a1)
{
  uint64_t v2 = a1;
  char v3 = 0;
  return sub_1B2D7BD38((uint64_t)&v2);
}

uint64_t sub_1B2D7BD38(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = *(void *)a1;
  int v5 = *(unsigned __int8 *)(a1 + 8);
  type metadata accessor for ViewService();
  uint64_t v6 = static ViewService.clientService.getter();
  type metadata accessor for EntityResolutionRankingService();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = (void *)v6;
  uint64_t v9 = v7;
  char v10 = EntityResolutionRankingService.init(config:viewService:)((uint64_t)&v82, v8);
  uint64_t v11 = v2;
  if (!v2)
  {
    uint64_t v12 = v10;
    HIDWORD(v70) = v5;
    sub_1B29A3EB4((uint64_t *)&unk_1EB7E5AF0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
    static EntityClass.person.getter();
    sub_1B2A18314(inited, v14, v15, v16, v17, v18, v19, v20, v65, v67, v68, v70, v4, v73, v3, v76, v78, v80, (uint64_t)v82,
      v83,
      *((uint64_t *)&v83 + 1),
      v84,
      *((uint64_t *)&v84 + 1),
      v85,
      v86,
      v87,
      v88,
      v89,
      v90[0],
      v90[1],
      v90[2],
      v90[3],
      v90[4],
      v90[5]);
    uint64_t v74 = v21;
    unint64_t v82 = (void *)v21;
    long long v83 = 0u;
    long long v84 = 0u;
    BYTE2(v85) = -1;
    LOWORD(v85) = 0;
    uint64_t v86 = 0;
    LOBYTE(v87) = 2;
    uint64_t v88 = 0;
    LOBYTE(v89) = 1;
    sub_1B2ABE030(0, (uint64_t)&v82, v90);
    unint64_t v22 = v90[0];
    sub_1B2A4B170();
    uint64_t v23 = (void *)sub_1B2E82148();
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v24 = sub_1B2E83448();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v69 = (uint64_t)v12;
    if (v24)
    {
      uint64_t v77 = v22;
      unint64_t v79 = v22 & 0xC000000000000001;
      uint64_t v25 = 4;
      while (1)
      {
        unint64_t v26 = v25 - 4;
        if (v79)
        {
          uint64_t v27 = MEMORY[0x1B3EB1A20](v25 - 4, v22);
        }
        else
        {
          uint64_t v27 = *(void *)(v22 + 8 * v25);
          swift_retain();
        }
        if (__OFADD__(v26, 1)) {
          break;
        }
        uint64_t v81 = v25 - 3;
        uint64_t v11 = (void *)v24;
        uint64_t v28 = *(void *)(v27 + 16);
        uint64_t v29 = *(void *)(v27 + 24);
        swift_isUniquelyReferenced_nonNull_native();
        unint64_t v82 = v23;
        unint64_t v30 = sub_1B29DAE70();
        if (__OFADD__(v23[2], (v31 & 1) == 0)) {
          goto LABEL_28;
        }
        unint64_t v26 = v30;
        char v32 = v31;
        sub_1B29A3EB4(&qword_1E9C3E058);
        if (sub_1B2E83398())
        {
          unint64_t v33 = sub_1B29DAE70();
          if ((v32 & 1) != (v34 & 1))
          {
            uint64_t result = sub_1B2E83858();
            __break(1u);
            return result;
          }
          unint64_t v26 = v33;
        }
        uint64_t v23 = v82;
        if (v32)
        {
          *(void *)(v82[7] + 8 * v26) = v29;
        }
        else
        {
          v82[(v26 >> 6) + 8] |= 1 << v26;
          *(void *)(v23[6] + 8 * v26) = v28;
          *(void *)(v23[7] + 8 * v26) = v29;
          uint64_t v35 = v23[2];
          BOOL v36 = __OFADD__(v35, 1);
          uint64_t v37 = v35 + 1;
          if (v36) {
            goto LABEL_29;
          }
          v23[2] = v37;
        }
        swift_release();
        swift_bridgeObjectRelease();
        ++v25;
        uint64_t v24 = (uint64_t)v11;
        unint64_t v22 = v77;
        if ((void *)v81 == v11) {
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      swift_once();
      uint64_t v38 = sub_1B2E81FB8();
      sub_1B29A4B98(v38, (uint64_t)qword_1E9C37A08);
      id v39 = v11;
      id v40 = v11;
      uint64_t v41 = sub_1B2E81F98();
      os_log_type_t v42 = sub_1B2E82DD8();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        uint64_t v44 = (void *)swift_slowAlloc();
        uint64_t v81 = v26;
        *(_DWORD *)uint64_t v43 = 138412290;
        id v45 = v11;
        uint64_t v46 = _swift_stdlib_bridgeErrorToNSError();
        unint64_t v82 = (void *)v46;
        sub_1B2E82FB8();
        *uint64_t v44 = v46;

        _os_log_impl(&dword_1B2996000, v41, v42, "Error in fetching ranked entities: %@", v43, 0xCu);
        sub_1B29A3EB4(&qword_1EB7E3110);
        swift_arrayDestroy();
        MEMORY[0x1B3EB30C0](v44, -1, -1);
        MEMORY[0x1B3EB30C0](v43, -1, -1);
      }
      else
      {
      }
      sub_1B2A4B170();
      uint64_t v47 = sub_1B2E82148();
      uint64_t v9 = v75;
      sub_1B2D7C310(v47);
      uint64_t v48 = swift_bridgeObjectRelease();
      if (v26)
      {

        swift_bridgeObjectRelease();
        sub_1B2D7DB18();
      }
      else
      {
        uint64_t v9 = sub_1B29A0EE8(v48, v49, v50, v51, v52, v53, v54, v55, v66, 0, v69, *(int *)v71, v71[4], v72, v74, v75, v77, v79, v81,
               (uint64_t)v82,
               v83);
        swift_bridgeObjectRelease();
        sub_1B2ABB9B8(0, 0, 0, 0, 16711680);
        sub_1B2AC5440(0, 2);

        swift_release();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
LABEL_19:
      swift_bridgeObjectRelease_n();
      sub_1B2D7C310((uint64_t)v23);
      uint64_t v57 = swift_bridgeObjectRelease();
      uint64_t v9 = sub_1B29A0EE8(v57, v58, v59, v60, v61, v62, v63, v64, v66, 0, v69, *(int *)v71, v71[4], v72, v74, v75, v77, v79, v81,
             (uint64_t)v82,
             v83);
      swift_bridgeObjectRelease();
      sub_1B2D7DB18();
      swift_bridgeObjectRelease();
    }
  }
  return v9;
}

uint64_t sub_1B2D7C310(uint64_t a1)
{
  type metadata accessor for ViewService();
  uint64_t v4 = (void *)static ViewService.clientService.getter();
  ViewService.entityImportanceSignalsView.getter(v26);

  if (!v1)
  {
    uint64_t v23 = a1;
    v28[0] = v26[0];
    v28[1] = v26[1];
    uint64_t v29 = v27;
    *(void *)&v26[0] = MEMORY[0x1E4FBC860];
    uint64_t ObjectType = swift_getObjectType();
    MEMORY[0x1F4188790](ObjectType);
    sub_1B29A3EB4(&qword_1E9C3C1B8);
    sub_1B2E80C28();
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)(v25 + 16);
    if (v7)
    {
      uint64_t v8 = (uint64_t *)(v25 + 56);
      uint64_t v2 = MEMORY[0x1E4FBC860];
      do
      {
        char v9 = *((unsigned char *)v8 - 16);
        char v10 = *((unsigned char *)v8 - 15);
        char v11 = *((unsigned char *)v8 - 14);
        uint64_t v12 = *(v8 - 1);
        uint64_t v13 = *v8;
        double v14 = 0.0;
        uint64_t v24 = *(v8 - 3);
        if (*(void *)(v23 + 16))
        {
          unint64_t v15 = sub_1B29DAE70();
          if (v16) {
            double v14 = *(double *)(*(void *)(v23 + 56) + 8 * v15);
          }
        }
        swift_bridgeObjectRetain();
        double v17 = sub_1B2D7C598(v9, v10, v11, v12, v13, v14);
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29B9FB0();
          uint64_t v2 = v21;
        }
        unint64_t v18 = *(void *)(v2 + 16);
        uint64_t v19 = v24;
        if (v18 >= *(void *)(v2 + 24) >> 1)
        {
          sub_1B29B9FB0();
          uint64_t v2 = v22;
          uint64_t v19 = v24;
        }
        *(void *)(v2 + 16) = v18 + 1;
        uint64_t v20 = v2 + 16 * v18;
        *(void *)(v20 + 32) = v19;
        *(double *)(v20 + 40) = v17;
        v8 += 4;
        --v7;
      }
      while (v7);
    }
    else
    {
      uint64_t v2 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    sub_1B2B876B4((uint64_t)v28);
  }
  return v2;
}

double sub_1B2D7C598(char a1, char a2, char a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v13 = *(void **)(v6 + OBJC_IVAR____TtC20IntelligencePlatform20PersonRankingService_config);
  objc_msgSend(v13, sel_isFavoriteMultiplier);
  uint64_t v14 = 1;
  if (v15 != 0.0 && (a1 & 1) != 0)
  {
    objc_msgSend(v13, sel_isFavoriteMultiplier);
    a6 = v16 + a6;
    uint64_t v14 = 2;
  }
  objc_msgSend(v13, sel_emergencyContactMultiplier);
  if (v17 != 0.0 && (a2 & 1) != 0)
  {
    objc_msgSend(v13, sel_emergencyContactMultiplier);
    a6 = a6 + v18;
    ++v14;
  }
  objc_msgSend(v13, sel_iCloudFamilyMemberMultiplier);
  if (v19 != 0.0 && (a3 & 1) != 0)
  {
    objc_msgSend(v13, sel_iCloudFamilyMemberMultiplier);
    a6 = a6 + v20;
    ++v14;
  }
  objc_msgSend(v13, sel_relationshipTagMultiplier);
  if (v21 != 0.0 && a5 != 0)
  {
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 0x726170646E617267;
    unint64_t v26 = 0xEB00000000746E65;
    sub_1B29C3640();
    if (sub_1B299D840()) {
      goto LABEL_28;
    }
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 0x72656E74726170;
    unint64_t v26 = 0xE700000000000000;
    if (sub_1B299D840()) {
      goto LABEL_28;
    }
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 0xD000000000000010;
    unint64_t v26 = 0x80000001B2EA2B20;
    if (sub_1B299D840()) {
      goto LABEL_28;
    }
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 0x646E65697266;
    unint64_t v26 = 0xE600000000000000;
    if (sub_1B299D840()) {
      goto LABEL_28;
    }
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 0x746E65726170;
    unint64_t v26 = 0xE600000000000000;
    if (sub_1B299D840()) {
      goto LABEL_28;
    }
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 0x796C696D6166;
    unint64_t v26 = 0xE600000000000000;
    if (sub_1B299D840()) {
      goto LABEL_28;
    }
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 0x646C696863;
    unint64_t v26 = 0xE500000000000000;
    if (sub_1B299D840()) {
      goto LABEL_28;
    }
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 0x676E696C626973;
    unint64_t v26 = 0xE700000000000000;
    if (sub_1B299D840()) {
      goto LABEL_28;
    }
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 0x726574736973;
    unint64_t v26 = 0xE600000000000000;
    if (sub_1B299D840()) {
      goto LABEL_28;
    }
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 0x726568746F7262;
    unint64_t v26 = 0xE700000000000000;
    if (sub_1B299D840()) {
      goto LABEL_28;
    }
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 0x726568746F6DLL;
    unint64_t v26 = 0xE600000000000000;
    if (sub_1B299D840()) {
      goto LABEL_28;
    }
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 0x726568746166;
    unint64_t v26 = 0xE600000000000000;
    if (sub_1B299D840()) {
      goto LABEL_28;
    }
    uint64_t v27 = a4;
    uint64_t v28 = a5;
    unint64_t v25 = 7237491;
    unint64_t v26 = 0xE300000000000000;
    if ((sub_1B299D840() & 1) != 0
      || (v27 = a4, v28 = a5, unint64_t v25 = 0x7265746867756164, v26 = 0xE800000000000000, (sub_1B299D840() & 1) != 0))
    {
LABEL_28:
      objc_msgSend(v13, sel_relationshipTagMultiplier, v25, v26, v27, v28);
      a6 = a6 + v23;
      ++v14;
    }
  }
  return a6 / (double)v14;
}

uint64_t sub_1B2D7C91C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  v22[0] = a1;
  swift_bridgeObjectRetain();
  sub_1B2D7AEAC(v22);
  if (!v2)
  {
    uint64_t v5 = v22[0];
    uint64_t v6 = *(void *)(v22[0] + 16);
    if (v6)
    {
      uint64_t v23 = v3;
      v22[0] = MEMORY[0x1E4FBC860];
      sub_1B29C03A0();
      uint64_t v7 = v22[0];
      unint64_t v8 = *(void *)(v22[0] + 16);
      uint64_t v9 = 32;
      do
      {
        uint64_t v10 = *(void *)(v5 + v9);
        v22[0] = v7;
        if (v8 >= *(void *)(v7 + 24) >> 1)
        {
          sub_1B29C03A0();
          uint64_t v7 = v22[0];
        }
        *(void *)(v7 + 16) = v8 + 1;
        *(void *)(v7 + 8 * v8 + 32) = v10;
        v9 += 16;
        ++v8;
        --v6;
      }
      while (v6);
      swift_release();
      uint64_t v3 = v23;
      if (v4) {
        goto LABEL_9;
      }
    }
    else
    {
      swift_release();
      uint64_t v7 = MEMORY[0x1E4FBC860];
      if (v4) {
        goto LABEL_9;
      }
    }
    uint64_t v11 = sub_1B2C7B7C4(v3, v7);
    uint64_t v7 = sub_1B2D2BE34(v11, v12, v13, v14);
LABEL_9:
    type metadata accessor for ViewService();
    double v15 = (void *)static ViewService.clientService.getter();
    double v16 = ViewService.siriPersonView.getter();
    sub_1B29A3EB4(&qword_1EB7E2560);
    swift_allocObject();
    uint64_t v17 = swift_retain();
    uint64_t v18 = sub_1B29C83C8(v17);
    v22[0] = (uint64_t)v16;
    v22[1] = v18;
    SiriPersonView.fetchValues(entityIdentifier:)(v7);
    uint64_t v21 = v20;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    return v21;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

id PersonRankingService.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void PersonRankingService.init()()
{
}

id PersonRankingService.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PersonRankingService();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B2D7CBE8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1B2D7D1F4(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1B29B6FBC(v3 / 2);
  uint64_t v87 = a1;
  uint64_t v88 = result;
  unint64_t v92 = v6;
  uint64_t v90 = v3;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    unint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_90:
    if (v31 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v90 >= -1)
      {
        *(void *)(v88 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    uint64_t v80 = *v87;
    while (1)
    {
      unint64_t v81 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v80) {
        goto LABEL_133;
      }
      uint64_t v82 = *(void *)(v9 + 32 + 16 * v81);
      uint64_t v83 = *(void *)(v9 + 32 + 16 * (v31 - 1) + 8);
      uint64_t result = sub_1B2D7D260((double *)(v80 + 16 * v82), (double *)(v80 + 16 * *(void *)(v9 + 32 + 16 * (v31 - 1))), v80 + 16 * v83, v92);
      if (v1) {
        goto LABEL_86;
      }
      if (v83 < v82) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B2DCA54C();
        uint64_t v9 = result;
      }
      if (v81 >= *(void *)(v9 + 16)) {
        goto LABEL_120;
      }
      long long v84 = (void *)(v9 + 32 + 16 * v81);
      *long long v84 = v82;
      v84[1] = v83;
      unint64_t v85 = *(void *)(v9 + 16);
      if (v31 > v85) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v31 - 1)), (const void *)(v9 + 32 + 16 * v31), 16 * (v85 - v31));
      *(void *)(v9 + 16) = v85 - 1;
      unint64_t v31 = v85 - 1;
      if (v85 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v86 = *a1 + 40;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v89 = v5;
  uint64_t v91 = *a1;
  while (1)
  {
    uint64_t v10 = v7++;
    if (v7 < v3)
    {
      double v11 = *(double *)(v8 + 16 * v7 + 8);
      double v12 = *(double *)(v8 + 16 * v10 + 8);
      uint64_t v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        uint64_t v13 = (double *)(v86 + 16 * v10);
        double v14 = v11;
        while (1)
        {
          double v15 = v14;
          double v14 = *v13;
          if (v12 < v11 == v15 >= *v13) {
            break;
          }
          ++v7;
          v13 += 2;
          if (v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v12 < v11)
      {
        if (v7 < v10) {
          goto LABEL_126;
        }
        if (v10 < v7)
        {
          uint64_t v16 = 16 * v7;
          uint64_t v17 = 16 * v10;
          uint64_t v18 = v7;
          uint64_t v19 = v10;
          do
          {
            if (v19 != --v18)
            {
              if (!v8) {
                goto LABEL_132;
              }
              uint64_t v20 = v8 + v16;
              uint64_t v21 = *(void *)(v8 + v17);
              uint64_t v22 = *(void *)(v8 + v17 + 8);
              *(_OWORD *)(v8 + v17) = *(_OWORD *)(v8 + v16 - 16);
              *(void *)(v20 - 16) = v21;
              *(void *)(v20 - 8) = v22;
            }
            ++v19;
            v16 -= 16;
            v17 += 16;
          }
          while (v19 < v18);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_123;
      }
      if (v7 - v10 < v5)
      {
        uint64_t v23 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_127;
        }
        if (v23 >= v3) {
          uint64_t v23 = v3;
        }
        if (v23 < v10) {
          goto LABEL_128;
        }
        if (v7 != v23)
        {
          uint64_t v24 = (double *)(v8 + 16 * v7);
          do
          {
            double v25 = *(double *)(v8 + 16 * v7 + 8);
            uint64_t v26 = v10;
            uint64_t v27 = v24;
            do
            {
              if (*(v27 - 1) >= v25) {
                break;
              }
              if (!v8) {
                goto LABEL_130;
              }
              double v28 = *v27;
              *(_OWORD *)uint64_t v27 = *((_OWORD *)v27 - 1);
              *(v27 - 1) = v25;
              *(v27 - 2) = v28;
              v27 -= 2;
              ++v26;
            }
            while (v7 != v26);
            ++v7;
            v24 += 2;
          }
          while (v7 != v23);
          uint64_t v7 = v23;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v30 = *(void *)(v9 + 16);
    unint64_t v29 = *(void *)(v9 + 24);
    unint64_t v31 = v30 + 1;
    uint64_t v8 = v91;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454((char *)(v29 > 1), v30 + 1, 1, (char *)v9);
      uint64_t v8 = v91;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v31;
    uint64_t v32 = v9 + 32;
    unint64_t v33 = (uint64_t *)(v9 + 32 + 16 * v30);
    *unint64_t v33 = v10;
    v33[1] = v7;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_81:
    uint64_t v5 = v89;
    uint64_t v3 = v90;
    if (v7 >= v90) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    unint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      unint64_t v39 = v32 + 16 * v31;
      uint64_t v40 = *(void *)(v39 - 64);
      uint64_t v41 = *(void *)(v39 - 56);
      BOOL v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_107;
      }
      uint64_t v44 = *(void *)(v39 - 48);
      uint64_t v43 = *(void *)(v39 - 40);
      BOOL v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      char v38 = v45;
      if (v45) {
        goto LABEL_108;
      }
      unint64_t v46 = v31 - 2;
      uint64_t v47 = (uint64_t *)(v32 + 16 * (v31 - 2));
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      BOOL v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_109;
      }
      BOOL v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_111;
      }
      if (v51 >= v42)
      {
        uint64_t v69 = (uint64_t *)(v32 + 16 * v34);
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        BOOL v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_117;
        }
        BOOL v62 = v37 < v72;
        goto LABEL_70;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *(void *)(v9 + 32);
        uint64_t v64 = *(void *)(v9 + 40);
        BOOL v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        char v57 = v45;
        goto LABEL_64;
      }
      uint64_t v36 = *(void *)(v9 + 32);
      uint64_t v35 = *(void *)(v9 + 40);
      BOOL v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      char v38 = v45;
    }
    if (v38) {
      goto LABEL_110;
    }
    unint64_t v46 = v31 - 2;
    uint64_t v52 = (uint64_t *)(v32 + 16 * (v31 - 2));
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    BOOL v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    char v57 = v55;
    if (v55) {
      goto LABEL_112;
    }
    uint64_t v58 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    BOOL v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_114;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_116;
    }
    if (v56 + v61 >= v37)
    {
      BOOL v62 = v37 < v61;
LABEL_70:
      if (v62) {
        unint64_t v34 = v46;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v57) {
      goto LABEL_113;
    }
    uint64_t v65 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    BOOL v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_115;
    }
    if (v68 < v56) {
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v73 = v9;
    unint64_t v74 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    uint64_t v75 = (uint64_t *)(v32 + 16 * v74);
    uint64_t v76 = *v75;
    uint64_t v77 = (void *)(v32 + 16 * v34);
    uint64_t v78 = v77[1];
    uint64_t result = sub_1B2D7D260((double *)(v8 + 16 * *v75), (double *)(v8 + 16 * *v77), v8 + 16 * v78, v92);
    if (v1) {
      break;
    }
    if (v78 < v76) {
      goto LABEL_104;
    }
    if (v34 > *(void *)(v73 + 16)) {
      goto LABEL_105;
    }
    *uint64_t v75 = v76;
    *(void *)(v32 + 16 * v74 + 8) = v78;
    unint64_t v79 = *(void *)(v73 + 16);
    if (v34 >= v79) {
      goto LABEL_106;
    }
    uint64_t v9 = v73;
    unint64_t v31 = v79 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v32 + 16 * v34), v77 + 2, 16 * (v79 - 1 - v34));
    *(void *)(v73 + 16) = v79 - 1;
    uint64_t v8 = v91;
    if (v79 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v90 < -1) {
    goto LABEL_125;
  }
  *(void *)(v88 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D7D1F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 16 * a3;
    while (2)
    {
      double v6 = *(double *)(v4 + 16 * a3 + 8);
      uint64_t v7 = result;
      uint64_t v8 = (double *)v5;
      do
      {
        if (*(v8 - 1) >= v6) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        double v9 = *v8;
        *(_OWORD *)uint64_t v8 = *((_OWORD *)v8 - 1);
        *(v8 - 1) = v6;
        *(v8 - 2) = v9;
        v8 -= 2;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 16;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1B2D7D260(double *a1, double *a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4;
  double v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = ((char *)a2 - (char *)a1) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    sub_1B29BE7D4(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    unint64_t v12 = v4 + 16 * v11;
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_45;
    }
    uint64_t v20 = (double *)(a3 - 16);
    while (1)
    {
      uint64_t v21 = v20 + 2;
      if (*(v6 - 1) >= *(double *)(v12 - 8))
      {
        uint64_t v22 = (double *)(v12 - 16);
        BOOL v24 = v21 != (double *)v12 || (unint64_t)v20 >= v12;
        v12 -= 16;
        if (!v24) {
          goto LABEL_41;
        }
      }
      else
      {
        uint64_t v22 = v6 - 2;
        BOOL v23 = v21 != v6 || v20 >= v6;
        v6 -= 2;
        if (!v23) {
          goto LABEL_41;
        }
      }
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v22;
LABEL_41:
      v20 -= 2;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_45;
      }
    }
  }
  sub_1B29BE7D4(a1, ((char *)a2 - (char *)a1) / 16, a4);
  unint64_t v12 = v4 + 16 * v9;
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    do
    {
      if (*(double *)(v4 + 8) >= v6[1])
      {
        BOOL v14 = v7 == (double *)v4;
        double v15 = (_OWORD *)v4;
        v4 += 16;
        if (v14 && (unint64_t)v7 < v4) {
          goto LABEL_18;
        }
      }
      else
      {
        BOOL v14 = v7 == v6;
        double v15 = v6;
        v6 += 2;
        if (v14 && v7 < v6) {
          goto LABEL_18;
        }
      }
      *(_OWORD *)uint64_t v7 = *v15;
LABEL_18:
      v7 += 2;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  double v6 = v7;
LABEL_45:
  sub_1B29BE7D4(v4, (uint64_t)(v12 - v4) / 16, v6);
  return 1;
}

unint64_t sub_1B2D7D3E8()
{
  unint64_t result = qword_1E9C43A60;
  if (!qword_1E9C43A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A60);
  }
  return result;
}

unint64_t sub_1B2D7D438()
{
  unint64_t result = qword_1E9C43A68;
  if (!qword_1E9C43A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A68);
  }
  return result;
}

unint64_t sub_1B2D7D48C()
{
  unint64_t result = qword_1E9C43A70;
  if (!qword_1E9C43A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A70);
  }
  return result;
}

unint64_t sub_1B2D7D4E0()
{
  unint64_t result = qword_1E9C43A78;
  if (!qword_1E9C43A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A78);
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonRankingServiceError()
{
  return &type metadata for PersonRankingServiceError;
}

uint64_t method lookup function for PersonRankingService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PersonRankingService);
}

uint64_t dispatch thunk of PersonRankingService.__allocating_init(config:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PersonRankingService.rankedPersonsForObjC(maxCount:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of PersonRankingService.rankedPersons(rankingMode:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

ValueMetadata *type metadata accessor for PersonRankingService.RankingMode()
{
  return &type metadata for PersonRankingService.RankingMode;
}

unsigned char *storeEnumTagSinglePayload for PersonRankingService.RankingMode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D7D6D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonRankingService.RankingMode.CodingKeys()
{
  return &type metadata for PersonRankingService.RankingMode.CodingKeys;
}

ValueMetadata *type metadata accessor for PersonRankingService.RankingMode.UnlimitedCodingKeys()
{
  return &type metadata for PersonRankingService.RankingMode.UnlimitedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PersonRankingService.RankingMode.TopCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2D7D7B8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonRankingService.RankingMode.TopCodingKeys()
{
  return &type metadata for PersonRankingService.RankingMode.TopCodingKeys;
}

unint64_t sub_1B2D7D7F4()
{
  unint64_t result = qword_1E9C43A80;
  if (!qword_1E9C43A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A80);
  }
  return result;
}

unint64_t sub_1B2D7D844()
{
  unint64_t result = qword_1E9C43A88;
  if (!qword_1E9C43A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A88);
  }
  return result;
}

unint64_t sub_1B2D7D894()
{
  unint64_t result = qword_1E9C43A90;
  if (!qword_1E9C43A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A90);
  }
  return result;
}

unint64_t sub_1B2D7D8E4()
{
  unint64_t result = qword_1E9C43A98;
  if (!qword_1E9C43A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43A98);
  }
  return result;
}

unint64_t sub_1B2D7D934()
{
  unint64_t result = qword_1E9C43AA0;
  if (!qword_1E9C43AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43AA0);
  }
  return result;
}

unint64_t sub_1B2D7D984()
{
  unint64_t result = qword_1E9C43AA8;
  if (!qword_1E9C43AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43AA8);
  }
  return result;
}

unint64_t sub_1B2D7D9D4()
{
  unint64_t result = qword_1E9C43AB0;
  if (!qword_1E9C43AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43AB0);
  }
  return result;
}

unint64_t sub_1B2D7DA24()
{
  unint64_t result = qword_1E9C43AB8;
  if (!qword_1E9C43AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43AB8);
  }
  return result;
}

unint64_t sub_1B2D7DA70()
{
  unint64_t result = qword_1E9C43AC0;
  if (!qword_1E9C43AC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9C43AC0);
  }
  return result;
}

unint64_t sub_1B2D7DAB0()
{
  unint64_t result = qword_1E9C43AC8;
  if (!qword_1E9C43AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43AC8);
  }
  return result;
}

uint64_t sub_1B2D7DAFC()
{
  return v0;
}

uint64_t sub_1B2D7DB18()
{
  sub_1B2ABB9B8(0, 0, 0, 0, 16711680);
  sub_1B2AC5440(0, 2);
  return swift_release();
}

uint64_t sub_1B2D7DB60()
{
  return v0;
}

uint64_t sub_1B2D7DB74()
{
  return sub_1B2E834E8();
}

uint64_t sub_1B2D7DB94()
{
  uint64_t v0 = sub_1B29A3EB4(&qword_1EB7E2E90);
  sub_1B2A4A2A8(v0, qword_1E9C43AD0);
  sub_1B29A4B98(v0, (uint64_t)qword_1E9C43AD0);
  return sub_1B2E814D8();
}

uint64_t PHPersonIdentifierMapView.identifier(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1B29A3EB4(&qword_1EB7E5B00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1B2A184AC();
  swift_getObjectType();
  sub_1B29A3EB4((uint64_t *)&unk_1E9C434B0);
  sub_1B2E80C28();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_1B2A172F8(v9, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t PHPersonIdentifierMapView.identifiers(for:)(uint64_t a1)
{
  return sub_1B2D55894(a1, (uint64_t *)&unk_1E9C434B0);
}

uint64_t sub_1B2D7DD40@<X0>(unint64_t a1@<X0>, const char *a2@<X1>, uint64_t **a3@<X8>)
{
  unint64_t v56 = a1;
  uint64_t v50 = a3;
  unint64_t isUniquelyReferenced_nonNull_native = sub_1B29A3EB4(&qword_1EB7E2E90);
  uint64_t v5 = *(void *)(isUniquelyReferenced_nonNull_native - 8);
  MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = sub_1B29A3EB4(&qword_1EB7E2790);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1E9C38CB8 != -1) {
LABEL_32:
  }
    swift_once();
  uint64_t v12 = sub_1B29A4B98(isUniquelyReferenced_nonNull_native, (uint64_t)qword_1E9C43AD0);
  (*(void (**)(char *, uint64_t, unint64_t))(v5 + 16))(v7, v12, isUniquelyReferenced_nonNull_native);
  uint64_t v68 = a2;
  uint64_t v61 = sub_1B2E81508();
  uint64_t v62 = MEMORY[0x1E4F62E90];
  sub_1B29D1C70((uint64_t *)&v58);
  BOOL v55 = "familyandfriends";
  sub_1B2E81518();
  uint64_t v66 = sub_1B2E80BE8();
  uint64_t v67 = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(&v63);
  sub_1B29A3EB4(&qword_1EB7E4A80);
  sub_1B29D22C4(&qword_1EB7D9520, &qword_1EB7E4A80);
  sub_1B2E82648();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v58);
  sub_1B2E81498();
  (*(void (**)(char *, unint64_t))(v5 + 8))(v7, isUniquelyReferenced_nonNull_native);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v63);
  sub_1B29D22C4(qword_1EB7E31A0, &qword_1EB7E2790);
  uint64_t v13 = v57;
  unint64_t isUniquelyReferenced_nonNull_native = sub_1B2E80A58();
  uint64_t v14 = v13;
  uint64_t result = (*(uint64_t (**)(uint64_t *, unint64_t))(v9 + 8))(v11, v8);
  if (!v13)
  {
    a2 = v55;
    if (isUniquelyReferenced_nonNull_native >> 62)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v8 = sub_1B2E83448();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v8 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v11 = (uint64_t *)MEMORY[0x1E4FBC868];
    if (v8)
    {
      uint64_t v5 = 4;
      BOOL v55 = (const char *)((unint64_t)a2 | 0x8000000000000000);
      unint64_t v56 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
      unint64_t v51 = v8;
      unint64_t v52 = isUniquelyReferenced_nonNull_native;
      while (1)
      {
        uint64_t v9 = v5 - 4;
        if (v56)
        {
          uint64_t v7 = (char *)MEMORY[0x1B3EB1A20](v5 - 4, isUniquelyReferenced_nonNull_native);
        }
        else
        {
          uint64_t v7 = *(char **)(isUniquelyReferenced_nonNull_native + 8 * v5);
          swift_retain();
        }
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        uint64_t v57 = v5 - 3;
        sub_1B2A1F188();
        if (v14) {
          break;
        }
        uint64_t v9 = v16;
        uint64_t v18 = v17;
        sub_1B2D7EAFC((uint64_t)&v63);
        if (v64)
        {
          swift_bridgeObjectRetain();
          sub_1B29DB060(v9, v18, v19, v20, v21, v22, v23, v24, (uint64_t)v50, v51, v52, v53, v54, (uint64_t)v55, v56, v57, (uint64_t)v58, v59, v60,
            v61,
            v62,
            v63,
            v64,
            v65,
            v66,
            v67);
          a2 = (const char *)v25;
          swift_bridgeObjectRelease();
          if (a2)
          {
            swift_isUniquelyReferenced_nonNull_native();
            uint64_t v58 = v11;
            sub_1B29A3EB4(&qword_1E9C37B00);
            a2 = (const char *)&v58;
            unint64_t v8 = v51;
            unint64_t isUniquelyReferenced_nonNull_native = v52;
            sub_1B2E83398();
            uint64_t v11 = v58;
            swift_bridgeObjectRelease();
            sub_1B2E833B8();
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_release();
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v53 = 0;
          uint64_t v54 = v63;
          unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          a2 = (const char *)v11;
          uint64_t v32 = sub_1B29DB060(v9, v18, v26, v27, v28, v29, v30, v31, (uint64_t)v50, v51, v52, v53, v54, (uint64_t)v55, v56, v57, (uint64_t)v11, v59, v60,
                  v61,
                  v62,
                  v63,
                  v64,
                  v65,
                  v66,
                  v67);
          uint64_t v34 = v11[2];
          BOOL v35 = (v33 & 1) == 0;
          uint64_t v11 = (uint64_t *)(v34 + v35);
          if (__OFADD__(v34, v35)) {
            goto LABEL_30;
          }
          unint64_t v8 = v32;
          char v36 = v33;
          sub_1B29A3EB4(&qword_1E9C37B00);
          a2 = (const char *)&v58;
          char v37 = sub_1B2E83398();
          unint64_t isUniquelyReferenced_nonNull_native = v52;
          if (v37)
          {
            a2 = (const char *)v58;
            uint64_t v44 = sub_1B29DB060(v9, v18, v38, v39, v40, v41, v42, v43, (uint64_t)v50, v51, v52, v53, v54, (uint64_t)v55, v56, v57, (uint64_t)v58, v59, v60,
                    v61,
                    v62,
                    v63,
                    v64,
                    v65,
                    v66,
                    v67);
            if ((v36 & 1) != (v45 & 1)) {
              goto LABEL_35;
            }
            unint64_t v8 = v44;
          }
          uint64_t v11 = v58;
          if (v36)
          {
            *(void *)(v58[7] + 8 * v8) = v54;
          }
          else
          {
            v58[(v8 >> 6) + 8] |= 1 << v8;
            unint64_t v46 = (uint64_t *)(v11[6] + 16 * v8);
            *unint64_t v46 = v9;
            v46[1] = v18;
            *(void *)(v11[7] + 8 * v8) = v54;
            uint64_t v47 = v11[2];
            BOOL v48 = __OFADD__(v47, 1);
            uint64_t v49 = v47 + 1;
            if (v48) {
              goto LABEL_31;
            }
            void v11[2] = v49;
            swift_bridgeObjectRetain();
          }
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v14 = v53;
          unint64_t v8 = v51;
        }
        ++v5;
        if (v57 == v8) {
          goto LABEL_27;
        }
      }
      swift_unexpectedError();
      __break(1u);
LABEL_35:
      uint64_t result = sub_1B2E83858();
      __break(1u);
    }
    else
    {
LABEL_27:
      uint64_t result = swift_bridgeObjectRelease_n();
      *uint64_t v50 = v11;
    }
  }
  return result;
}

uint64_t PHPersonIdentifierMapView.phPersonIdentifier(for:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *v1;
  sub_1B29A3EB4(&qword_1EB7D98E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
  *(void *)(inited + 32) = v3;
  sub_1B2A17D40();
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1E9C434C0);
  uint64_t v6 = v4;
  sub_1B2E80C28();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v6 = sub_1B2A175EC(v8);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t PHPersonIdentifierMapView.phPersonIdentifiers(for:)(uint64_t a1)
{
  return sub_1B2D55894(a1, &qword_1E9C434C0);
}

uint64_t sub_1B2D7E4B4@<X0>(char *a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  uint64_t v39 = a1;
  char v33 = a3;
  uint64_t v4 = sub_1B29A3EB4(&qword_1EB7E2E90);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (unint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1B29A3EB4(&qword_1EB7E2790);
  uint64_t isUniquelyReferenced_nonNull_native = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9C38CB8 != -1) {
LABEL_29:
  }
    swift_once();
  uint64_t v11 = sub_1B29A4B98(v4, (uint64_t)qword_1E9C43AD0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  v42[6] = (uint64_t)a2;
  v41[3] = sub_1B2E81508();
  v41[4] = MEMORY[0x1E4F62E90];
  sub_1B29D1C70(v41);
  sub_1B2E81518();
  v42[3] = sub_1B2E80BE8();
  v42[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v42);
  sub_1B29A3EB4(&qword_1EB7E2BD0);
  sub_1B29D22C4((unint64_t *)&qword_1EB7D9510, &qword_1EB7E2BD0);
  sub_1B2A28C38();
  sub_1B2E82648();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v41);
  sub_1B2E81498();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v7, v4);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v42);
  sub_1B29D22C4(qword_1EB7E31A0, &qword_1EB7E2790);
  uint64_t v12 = v38;
  uint64_t v13 = (char *)v40;
  unint64_t v14 = sub_1B2E80A58();
  unint64_t v7 = (unint64_t)v13;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(isUniquelyReferenced_nonNull_native + 8))(v10, v12);
  if (v13) {
    return result;
  }
  uint64_t isUniquelyReferenced_nonNull_native = v14;
  if (!(v14 >> 62))
  {
    uint64_t v4 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_5;
    }
LABEL_31:
    uint64_t v16 = (uint64_t *)MEMORY[0x1E4FBC868];
LABEL_32:
    uint64_t result = swift_bridgeObjectRelease_n();
    *char v33 = v16;
    return result;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1B2E83448();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_31;
  }
LABEL_5:
  unint64_t v37 = v14 & 0xC000000000000001;
  uint64_t v16 = (uint64_t *)MEMORY[0x1E4FBC868];
  uint64_t v5 = 4;
  uint64_t v35 = v4;
  unint64_t v36 = 0x80000001B2EA2B40;
  uint64_t v34 = isUniquelyReferenced_nonNull_native;
  while (1)
  {
    a2 = (uint64_t *)(v5 - 4);
    if (v37)
    {
      uint64_t v17 = MEMORY[0x1B3EB1A20](v5 - 4, isUniquelyReferenced_nonNull_native);
    }
    else
    {
      uint64_t v17 = *(void *)(isUniquelyReferenced_nonNull_native + 8 * v5);
      swift_retain();
    }
    if (__OFADD__(a2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v40 = v5 - 3;
    sub_1B2A201E0();
    if (v7) {
      break;
    }
    uint64_t v18 = v42[0];
    uint64_t v19 = sub_1B2A22298();
    if (v20)
    {
      uint64_t v10 = v20;
      uint64_t v38 = v17;
      uint64_t v39 = 0;
      uint64_t v21 = v19;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v41[0] = (uint64_t)v16;
      a2 = v16;
      unint64_t v22 = sub_1B29DAE70();
      if (__OFADD__(v16[2], (v23 & 1) == 0)) {
        goto LABEL_27;
      }
      unint64_t v7 = v22;
      uint64_t v4 = v23;
      sub_1B29A3EB4(&qword_1E9C41C98);
      a2 = v41;
      char v24 = sub_1B2E83398();
      uint64_t isUniquelyReferenced_nonNull_native = v34;
      if (v24)
      {
        a2 = (uint64_t *)v41[0];
        unint64_t v25 = sub_1B29DAE70();
        if ((v4 & 1) != (v26 & 1)) {
          goto LABEL_35;
        }
        unint64_t v7 = v25;
      }
      uint64_t v16 = (uint64_t *)v41[0];
      if (v4)
      {
        uint64_t v27 = (uint64_t *)(*(void *)(v41[0] + 56) + 16 * v7);
        *uint64_t v27 = v21;
        v27[1] = (uint64_t)v10;
        swift_bridgeObjectRelease();
      }
      else
      {
        *(void *)(v41[0] + 8 * (v7 >> 6) + 64) |= 1 << v7;
        *(void *)(v16[6] + 8 * v7) = v18;
        uint64_t v29 = (uint64_t *)(v16[7] + 16 * v7);
        *uint64_t v29 = v21;
        v29[1] = (uint64_t)v10;
        uint64_t v30 = v16[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_28;
        }
        v16[2] = v32;
      }
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v7 = (unint64_t)v39;
    }
    else
    {
      sub_1B29DAE70();
      if (v28)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v41[0] = (uint64_t)v16;
        sub_1B29A3EB4(&qword_1E9C41C98);
        uint64_t isUniquelyReferenced_nonNull_native = v34;
        sub_1B2E83398();
        uint64_t v16 = (uint64_t *)v41[0];
        sub_1B2A4B170();
        sub_1B2E833B8();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    uint64_t v4 = v35;
    ++v5;
    if (v40 == v35) {
      goto LABEL_32;
    }
  }
  swift_unexpectedError();
  __break(1u);
LABEL_35:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2D7EAB4@<X0>(unint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1B2D7DD40(a1, *(const char **)(v2 + 16), a2);
}

uint64_t sub_1B2D7EAD0@<X0>(char *a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1B2D7E4B4(a1, *(uint64_t **)(v2 + 16), a2);
}

ValueMetadata *type metadata accessor for PHPersonIdentifierMapView()
{
  return &type metadata for PHPersonIdentifierMapView;
}

uint64_t sub_1B2D7EAFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1B2E81378();
  if (v3)
  {
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 8) = 1;
  }
  else
  {
    sub_1B29D1C24();
    return sub_1B2E811F8();
  }
  return result;
}

uint64_t sub_1B2D7EB70()
{
  sub_1B2E81378();
  if (v1) {
    return 0;
  }
  sub_1B2A7EA00();
  uint64_t result = sub_1B2E811F8();
  if (!v0) {
    return v3;
  }
  return result;
}

uint64_t sub_1B2D7EBEC@<X0>(unint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1B2D7EAB4(a1, a2);
}

uint64_t sub_1B2D7EC04@<X0>(char *a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1B2D7EAD0(a1, a2);
}

double PriorityQueue.init(usingComparator:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_retain();
  Heap.init(usingComparator:)(a1, a2, &v8);
  uint64_t v6 = v9;
  double result = *(double *)&v8;
  *(_OWORD *)a3 = v8;
  *(void *)(a3 + 16) = v6;
  *(void *)(a3 + 24) = a1;
  *(void *)(a3 + 32) = a2;
  return result;
}

void PriorityQueue.push(_:)()
{
  type metadata accessor for Heap();

  Heap.append(_:)();
}

uint64_t PriorityQueue.peek()()
{
  return sub_1B2E82CA8();
}

void PriorityQueue.pop()()
{
  type metadata accessor for Heap();

  Heap.removeRoot()();
}

void static PriorityQueue<A>.== infix(_:_:)()
{
}

void sub_1B2D7EDF0()
{
}

void PriorityQueue.count.getter()
{
}

uint64_t type metadata accessor for PriorityQueue()
{
  return sub_1B29A1278();
}

void sub_1B2D7EF0C()
{
  static PriorityQueue<A>.== infix(_:_:)();
}

void PriorityQueue.Iterator.next()()
{
  type metadata accessor for PriorityQueue();

  PriorityQueue.pop()();
}

uint64_t PriorityQueue.makeIterator()@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  swift_retain();
  swift_bridgeObjectRetain();

  return sub_1B2C79A44(v5);
}

uint64_t sub_1B2D7EFBC@<X0>(void *a1@<X8>)
{
  PriorityQueue.makeIterator()(a1);
  uint64_t v2 = *(void *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_release();

  return sub_1B2AF182C(v2);
}

void PriorityQueue.description.getter()
{
}

uint64_t sub_1B2D7F094()
{
  sub_1B2E83748();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B2C79A44(v0);
  swift_getWitnessTable();
  sub_1B2E82988();
  sub_1B2E82968();
  swift_getWitnessTable();
  sub_1B2E83788();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1B2D7F1A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B2D7F1DC(uint64_t a1)
{
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    return swift_release();
  }
  return result;
}

void *sub_1B2D7F234(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v6 = a2 + 3;
  uint64_t v5 = a2[3];
  swift_retain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = a2[4];
    a1[3] = v5;
    a1[4] = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v6;
  }
  return a1;
}

void *sub_1B2D7F2B0(void *a1, void *a2)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = (_OWORD *)a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1B299E01C();
  if (!v8)
  {
    if (v7)
    {
      uint64_t v10 = a2[4];
      a1[3] = v7;
      a1[4] = v10;
      swift_retain();
      return a1;
    }
LABEL_7:
    *uint64_t v6 = *v2;
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = a2[4];
  a1[3] = v7;
  a1[4] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1B2D7F35C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  sub_1B299E01C();
  if (!v7)
  {
    if (v6)
    {
      uint64_t v9 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = v9;
      return a1;
    }
LABEL_7:
    *uint64_t v2 = *v3;
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v8;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for PriorityQueue.Iterator()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2D7F404()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EEDBC0;
  *(void *)(v0 + 32) = &unk_1F0AC0878;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EEDBD0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EEDBE0;
  *(void *)(v0 + 72) = 0x80000001B2EA2BA0;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29B2124(0, 0);
  return v0;
}

uint64_t sub_1B2D7F4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (((1 << *(unsigned char *)(a6 + 64)) & 0x1FA) == 0
    || (uint64_t v10 = (void *)(a6 + 32), swift_beginAccess(), !*(void *)(a6 + 32)))
  {
LABEL_17:
    sub_1B299E030();
    *(_OWORD *)(a1 + 88) = xmmword_1B2EC01D0;
    *(unsigned char *)(a1 + 104) = 0;
    return v22 & 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1B29B2540(112, 0xE100000000000000);
  swift_bridgeObjectRelease();
  if (!v11)
  {
LABEL_12:
    if (qword_1EB7E30F0 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1B2E81FB8();
    sub_1B29A4B98(v23, (uint64_t)qword_1EB7E30D8);
    char v24 = sub_1B2E81F98();
    os_log_type_t v25 = sub_1B2E82DB8();
    if (os_log_type_enabled(v24, v25))
    {
      char v26 = (_WORD *)swift_slowAlloc();
      *char v26 = 0;
      sub_1B29A1994(&dword_1B2996000, v27, v28, "Pvp operator has empty predicates");
      MEMORY[0x1B3EB30C0](v26, -1, -1);
    }

    goto LABEL_17;
  }
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v13 = sub_1B2DDC660(v12);
  if (!*(void *)(v13 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v14 = a2 + *(int *)(type metadata accessor for QueryContext() + 32);
  unint64_t v15 = *(void *)(v14 + 88);
  char v16 = *(unsigned char *)(v14 + 104);
  if (v15 >> 1 != 0xFFFFFFFF || (v16 & 0x1E) != 0)
  {
    uint64_t v18 = *(void *)(v14 + 96);
    uint64_t v19 = *(void *)(v14 + 80);
    long long v20 = *(_OWORD *)(v14 + 16);
    v70[0] = *(_OWORD *)v14;
    v70[1] = v20;
    long long v21 = *(_OWORD *)(v14 + 48);
    v70[2] = *(_OWORD *)(v14 + 32);
    v70[3] = v21;
    v70[4] = *(_OWORD *)(v14 + 64);
    uint64_t v71 = v19;
    unint64_t v72 = v15;
    uint64_t v73 = v18;
    char v74 = v16;
    memset(v63, 0, 24);
    v63[3] = v13;
    long long v64 = 0u;
    long long v65 = 0u;
    long long v66 = 0u;
    long long v67 = 0u;
    uint64_t v68 = 0;
    char v69 = 32;
    LOBYTE(v78) = 0;
    sub_1B2D83BA0((uint64_t)v63, (unsigned __int8 *)&v78, (uint64_t)v75);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v6) {
      return v22 & 1;
    }
    uint64_t v46 = v76;
    char v47 = v77;
    long long v48 = v75[1];
    *(_OWORD *)a1 = v75[0];
    *(_OWORD *)(a1 + 16) = v48;
    long long v49 = v75[3];
    *(_OWORD *)(a1 + 32) = v75[2];
    *(_OWORD *)(a1 + 48) = v49;
    long long v50 = v75[5];
    *(_OWORD *)(a1 + 64) = v75[4];
    *(_OWORD *)(a1 + 80) = v50;
    *(void *)(a1 + 96) = v46;
    goto LABEL_52;
  }
  v63[0] = 0;
  uint64_t v30 = MEMORY[0x1E4FBC870];
  uint64_t v78 = MEMORY[0x1E4FBC870];
  swift_beginAccess();
  if (*v10 && (uint64_t v31 = sub_1B29B2540(111, 0xE100000000000000)) != 0)
  {
    uint64_t v32 = v31;
    swift_endAccess();
    swift_beginAccess();
    uint64_t v33 = *(void *)(v32 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    swift_endAccess();
    uint64_t v33 = MEMORY[0x1E4FBC860];
  }
  uint64_t v34 = *(void *)(v33 + 16);
  if (v34)
  {
    uint64_t v61 = v13;
    uint64_t v35 = (uint64_t *)(v33 + 40);
    while (1)
    {
      uint64_t v37 = *(v35 - 1);
      uint64_t v36 = *v35;
      swift_bridgeObjectRetain();
      if (sub_1B2E825D8())
      {
        if (!v78) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v43 = v63[0];
        if (!v63[0]) {
          uint64_t v43 = v30;
        }
        v63[0] = v43;
      }
      sub_1B2A00B00((uint64_t)v70, v37, v36, v38, v39, v40, v41, v42, v61, v62);
LABEL_32:
      swift_bridgeObjectRelease();
      v35 += 2;
      if (!--v34)
      {
        swift_bridgeObjectRelease();
        uint64_t v44 = v63[0];
        uint64_t v45 = v78;
        uint64_t v13 = v61;
        goto LABEL_37;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v44 = 0;
  uint64_t v45 = MEMORY[0x1E4FBC870];
LABEL_37:
  sub_1B29A3EB4(&qword_1E9C37F48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EBFA40;
  *(void *)(inited + 32) = v44;
  *(void *)(inited + 40) = v45;
  char v52 = sub_1B2DE35E4(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2D98F60();
  if ((v52 & 1) == 0)
  {
    if (v45)
    {
      if (!*(void *)(v45 + 16))
      {
        swift_bridgeObjectRelease();
        uint64_t v60 = 0;
        uint64_t v59 = 0;
        uint64_t v45 = 0;
LABEL_50:
        char v47 = 32;
        goto LABEL_51;
      }
      if (v44)
      {
        sub_1B29A3EB4((uint64_t *)&unk_1EB7D9AE0);
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_1B2EBFA40;
        *(void *)(v59 + 32) = 0;
        *(void *)(v59 + 40) = 0;
        *(void *)(v59 + 48) = 0;
        *(void *)(v59 + 56) = v13;
        *(void *)(v59 + 64) = 0;
        *(void *)(v59 + 72) = v44;
        *(_OWORD *)(v59 + 80) = 0u;
        *(_OWORD *)(v59 + 96) = 0u;
        *(_OWORD *)(v59 + 112) = 0u;
        *(void *)(v59 + 128) = 0;
        *(unsigned char *)(v59 + 136) = 32;
        *(void *)(v59 + 144) = 0;
        *(void *)(v59 + 152) = 0;
        *(void *)(v59 + 160) = 0;
        *(void *)(v59 + 168) = v13;
        *(void *)(v59 + 176) = 0;
        *(void *)(v59 + 184) = 0;
        *(void *)(v59 + 192) = 0;
        *(void *)(v59 + 200) = v45;
        *(_OWORD *)(v59 + 208) = 0u;
        *(_OWORD *)(v59 + 224) = 0u;
        *(void *)(v59 + 240) = 0;
        *(unsigned char *)(v59 + 248) = 32;
        swift_bridgeObjectRetain();
        uint64_t v13 = 0;
        uint64_t v44 = 0;
        uint64_t v45 = 0;
        char v47 = 0;
        uint64_t v60 = 1;
LABEL_51:
        *(void *)a1 = v60;
        *(void *)(a1 + 8) = v59;
        *(void *)(a1 + 16) = 0;
        *(void *)(a1 + 24) = v13;
        *(void *)(a1 + 32) = 0;
        *(void *)(a1 + 40) = v44;
        *(void *)(a1 + 48) = 0;
        *(void *)(a1 + 56) = v45;
        *(_OWORD *)(a1 + 64) = 0u;
        *(_OWORD *)(a1 + 80) = 0u;
        *(void *)(a1 + 96) = 0;
LABEL_52:
        char v22 = 1;
        *(unsigned char *)(a1 + 104) = v47;
        return v22 & 1;
      }
      swift_bridgeObjectRelease_n();
    }
    uint64_t v60 = 0;
    uint64_t v59 = 0;
    goto LABEL_50;
  }
  swift_bridgeObjectRelease();
  if (qword_1EB7E30F0 != -1) {
    swift_once();
  }
  uint64_t v53 = sub_1B2E81FB8();
  sub_1B29A4B98(v53, (uint64_t)qword_1EB7E30D8);
  uint64_t v54 = sub_1B2E81F98();
  os_log_type_t v55 = sub_1B2E82DB8();
  if (os_log_type_enabled(v54, v55))
  {
    unint64_t v56 = (_WORD *)swift_slowAlloc();
    *unint64_t v56 = 0;
    sub_1B29A1994(&dword_1B2996000, v57, v58, "Pvp operator has empty terms for O arg");
    MEMORY[0x1B3EB30C0](v56, -1, -1);
  }

  sub_1B299E030();
  *(_OWORD *)(a1 + 88) = xmmword_1B2EC01D0;
  *(unsigned char *)(a1 + 104) = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v22 = 0;
  return v22 & 1;
}

uint64_t sub_1B2D7FA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1B2DC1414(112, 0xE100000000000000);
  uint64_t v5 = sub_1B2DC1414(111, 0xE100000000000000);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v44 = *(void *)(a3 + 16);
  if (!v44)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_69:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for ResultGraph();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_1B2E82148();
    *(void *)(v37 + 24) = v6;
    v55[0] = 0;
    uint64_t v38 = swift_bridgeObjectRetain();
    sub_1B2D97CC8(v38, v55);
    swift_bridgeObjectRelease();
    return v9;
  }
  uint64_t v47 = *(void *)(v4 + 16);
  uint64_t v43 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)v4;
  uint64_t v8 = 0;
  uint64_t v41 = v7;
  uint64_t v39 = (void *)(v5 + 72);
  uint64_t v40 = v7 + 9;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v42 = (void *)v5;
  while (1)
  {
    uint64_t v52 = v9;
    uint64_t v10 = (uint64_t *)(v43 + 88 * v8);
    uint64_t v54 = v10[1];
    uint64_t v11 = v10[7];
    uint64_t v12 = v10[9];
    uint64_t v53 = v10[10];
    uint64_t v48 = v10[8];
    uint64_t v49 = v10[6];
    if (v11) {
      uint64_t v13 = v10[6];
    }
    else {
      uint64_t v13 = 0;
    }
    if (v11) {
      unint64_t v14 = v10[7];
    }
    else {
      unint64_t v14 = 0xE000000000000000;
    }
    if (v12) {
      uint64_t v15 = v10[8];
    }
    else {
      uint64_t v15 = 0;
    }
    if (v12) {
      unint64_t v16 = v10[9];
    }
    else {
      unint64_t v16 = 0xE000000000000000;
    }
    if (!v47) {
      goto LABEL_33;
    }
    uint64_t v17 = v10[2];
    uint64_t v45 = *v10;
    uint64_t v46 = v10[3];
    uint64_t v50 = v10[5];
    uint64_t v51 = v10[4];
    BOOL v18 = v41[4] == v13 && v41[5] == v14;
    if (!v18 && (sub_1B29A32E4() & 1) == 0)
    {
      if (v47 == 1) {
        goto LABEL_33;
      }
      if (v41[6] != v13 || v41[7] != v14)
      {
        uint64_t result = sub_1B29A32E4();
        if ((result & 1) == 0) {
          break;
        }
      }
    }
LABEL_21:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v19 = v42[2];
    if (!v19 || (v42[4] == v15 ? (BOOL v20 = v42[5] == v16) : (BOOL v20 = 0), v20 || (sub_1B2D7FF60() & 1) != 0))
    {
LABEL_27:
      swift_bridgeObjectRelease();
      uint64_t v9 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B7480();
        uint64_t v9 = v35;
      }
      unint64_t v21 = *(void *)(v9 + 16);
      uint64_t v22 = v50;
      if (v21 >= *(void *)(v9 + 24) >> 1)
      {
        sub_1B29B7480();
        uint64_t v22 = v50;
        uint64_t v9 = v36;
      }
      *(void *)(v9 + 16) = v21 + 1;
      uint64_t v23 = (void *)(v9 + 88 * v21);
      v23[4] = v45;
      v23[5] = v54;
      v23[6] = v17;
      v23[7] = v46;
      v23[8] = v51;
      v23[9] = v22;
      v23[10] = v49;
      v23[11] = v11;
      v23[12] = v48;
      v23[13] = v12;
      v23[14] = v53;
      goto LABEL_34;
    }
    if (v19 != 1)
    {
      if (v42[6] == v15 && v42[7] == v16) {
        goto LABEL_27;
      }
      uint64_t result = sub_1B2D7FF60();
      if (result) {
        goto LABEL_27;
      }
      if (v19 != 2)
      {
        uint64_t v31 = v39;
        uint64_t v32 = 2;
        do
        {
          uint64_t v33 = v32 + 1;
          if (__OFADD__(v32, 1)) {
            goto LABEL_71;
          }
          if (*(v31 - 1) == v15 && *v31 == v16) {
            goto LABEL_27;
          }
          uint64_t result = sub_1B2D7FF60();
          if (result) {
            goto LABEL_27;
          }
          v31 += 2;
          ++v32;
        }
        while (v33 != v19);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v52;
LABEL_34:
    if (++v8 == v44)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = MEMORY[0x1E4FBC860];
      goto LABEL_69;
    }
  }
  if (v47 == 2)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v52;
    goto LABEL_34;
  }
  char v26 = v40;
  uint64_t v27 = 2;
  while (1)
  {
    uint64_t v28 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (*(v26 - 1) == v13 && *v26 == v14) {
      goto LABEL_21;
    }
    uint64_t result = sub_1B29A32E4();
    if (result) {
      goto LABEL_21;
    }
    v26 += 2;
    ++v27;
    if (v28 == v47) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Pvp()
{
  return self;
}

uint64_t sub_1B2D7FF60()
{
  return sub_1B2E837A8();
}

uint64_t sub_1B2D7FF7C()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EEDC00;
  *(void *)(v0 + 32) = &unk_1F0AC1390;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EC01E0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EEDC10;
  *(void *)(v0 + 72) = 0x80000001B2EA2BF0;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29B2124(0, 0);
  return v0;
}

uint64_t sub_1B2D80020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    uint64_t v7 = 112;
    while (1)
    {
      uint64_t v8 = *(void *)(a3 + v7);
      uint64_t v9 = *(void *)(v8 + 16);
      uint64_t v10 = *(void *)(v6 + 16);
      if (__OFADD__(v10, v9)) {
        break;
      }
      swift_bridgeObjectRetain();
      if (!swift_isUniquelyReferenced_nonNull_native() || v10 + v9 > *(void *)(v6 + 24) >> 1)
      {
        sub_1B29B7480();
        uint64_t v6 = v11;
      }
      if (*(void *)(v8 + 16))
      {
        uint64_t v12 = *(void *)(v6 + 16);
        if ((*(void *)(v6 + 24) >> 1) - v12 < v9) {
          goto LABEL_24;
        }
        unint64_t v13 = v6 + 88 * v12 + 32;
        if (v8 + 32 < v13 + 88 * v9 && v13 < v8 + 32 + 88 * v9) {
          goto LABEL_26;
        }
        swift_arrayInitWithCopy();
        if (v9)
        {
          uint64_t v15 = *(void *)(v6 + 16);
          BOOL v16 = __OFADD__(v15, v9);
          uint64_t v17 = v15 + v9;
          if (v16) {
            goto LABEL_25;
          }
          *(void *)(v6 + 16) = v17;
        }
      }
      else if (v9)
      {
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      v7 += 88;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = MEMORY[0x1E4FBC860];
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    uint64_t result = sub_1B2E834A8();
    __break(1u);
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_21:
    type metadata accessor for ResultGraph();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_1B2E82148();
    *(void *)(v18 + 24) = v4;
    char v21 = 2;
    uint64_t v19 = swift_bridgeObjectRetain();
    sub_1B2D97CC8(v19, &v21);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t type metadata accessor for Qget()
{
  return self;
}

uint64_t sub_1B2D8025C()
{
  uint64_t v0 = sub_1B2D7FF7C();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  *(_OWORD *)(v0 + 16) = xmmword_1B2EEDC30;
  *(void *)(v0 + 32) = &unk_1F0AC1E50;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EC01E0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EEDC40;
  *(void *)(v0 + 72) = 0x80000001B2EA2C50;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  sub_1B29B2124(v1, v2);
  return v0;
}

void sub_1B2D8030C(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  switch(*(unsigned char *)(a1 + 64))
  {
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      *a2 = *(unsigned char *)(a1 + 64);
      break;
    case 2:
      sub_1B29D53EC();
      swift_allocError();
      *(void *)uint64_t v2 = 0xD000000000000028;
      *(void *)(v2 + 8) = 0x80000001B2EA2CA0;
      *(unsigned char *)(v2 + 16) = 2;
      swift_willThrow();
      break;
    default:
      *a2 = 6;
      break;
  }
}

uint64_t sub_1B2D803DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (((1 << *(unsigned char *)(a6 + 64)) & 0x1FA) != 0)
  {
    uint64_t v10 = (void *)(a6 + 32);
    sub_1B299DEC4();
    if (*(void *)(a6 + 32) && (uint64_t v11 = sub_1B29B2540(115, 0xE100000000000000)) != 0)
    {
      uint64_t v12 = v11;
      swift_endAccess();
      swift_beginAccess();
      uint64_t v13 = *(void *)(v12 + 16);
      swift_bridgeObjectRetain();
      swift_release();
    }
    else
    {
      swift_endAccess();
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
    uint64_t v14 = sub_1B2DDC660(v13);
    sub_1B299DEC4();
    if (*v10 && (uint64_t v15 = sub_1B29B2540(112, 0xE100000000000000)) != 0)
    {
      uint64_t v16 = v15;
      swift_endAccess();
      swift_beginAccess();
      uint64_t v17 = *(void *)(v16 + 16);
      swift_bridgeObjectRetain();
      swift_release();
    }
    else
    {
      swift_endAccess();
      uint64_t v17 = MEMORY[0x1E4FBC860];
    }
    uint64_t v18 = sub_1B2DDC660(v17);
    sub_1B29A3EB4(&qword_1E9C37F48);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B2EBFA40;
    *(void *)(inited + 32) = v14;
    *(void *)(inited + 40) = v18;
    char v20 = sub_1B2DE35E4(inited);
    swift_setDeallocating();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2D98F60();
    if ((v20 & 1) == 0)
    {
      char v26 = (long long *)(a2 + *(int *)(type metadata accessor for QueryContext() + 32));
      unint64_t v27 = *((void *)v26 + 11);
      char v28 = *((unsigned char *)v26 + 104);
      char v29 = 32;
      if (v27 >> 1 != 0xFFFFFFFF || (*((unsigned char *)v26 + 104) & 0x1E) != 0)
      {
        uint64_t v37 = *((void *)v26 + 12);
        uint64_t v38 = *((void *)v26 + 10);
        long long v39 = v26[1];
        long long v54 = *v26;
        long long v40 = v26[2];
        long long v41 = v26[3];
        long long v55 = v39;
        long long v56 = v40;
        long long v42 = v26[4];
        long long v57 = v41;
        long long v58 = v42;
        uint64_t v59 = v38;
        unint64_t v60 = v27;
        uint64_t v61 = v37;
        char v62 = v28;
        memset(v45, 0, sizeof(v45));
        uint64_t v46 = 0;
        uint64_t v47 = v14;
        uint64_t v48 = 0;
        uint64_t v49 = v18;
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        uint64_t v50 = 0;
        char v53 = 32;
        unsigned __int8 v44 = 1;
        sub_1B2D83BA0((uint64_t)v45, &v44, (uint64_t)v63);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        if (v6) {
          return v25 & 1;
        }
        long long v31 = v63[0];
        long long v34 = v63[1];
        long long v35 = v63[2];
        uint64_t v30 = v64;
        long long v32 = v65;
        long long v33 = v66;
        long long v36 = v67;
        char v29 = v68;
      }
      else
      {
        uint64_t v30 = 0;
        long long v31 = 0uLL;
        long long v32 = (unint64_t)v14;
        long long v33 = (unint64_t)v18;
        long long v34 = 0uLL;
        long long v35 = 0uLL;
        long long v36 = 0uLL;
      }
      *(_OWORD *)a1 = v31;
      *(_OWORD *)(a1 + 16) = v34;
      *(_OWORD *)(a1 + 32) = v35;
      *(void *)(a1 + 48) = v30;
      *(_OWORD *)(a1 + 56) = v32;
      *(_OWORD *)(a1 + 72) = v33;
      *(_OWORD *)(a1 + 88) = v36;
      char v25 = 1;
      *(unsigned char *)(a1 + 104) = v29;
      return v25 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB7E30F0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1B2E81FB8();
    sub_1B29A4B98(v21, (uint64_t)qword_1EB7E30D8);
    uint64_t v22 = sub_1B2E81F98();
    os_log_type_t v23 = sub_1B2E82DB8();
    if (os_log_type_enabled(v22, v23))
    {
      char v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v24 = 0;
      _os_log_impl(&dword_1B2996000, v22, v23, "Qpropget operator has all empty terms", v24, 2u);
      MEMORY[0x1B3EB30C0](v24, -1, -1);
    }
  }
  char v25 = 0;
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 88) = xmmword_1B2EC01D0;
  *(unsigned char *)(a1 + 104) = 0;
  return v25 & 1;
}

uint64_t type metadata accessor for Qpropget()
{
  return self;
}

uint64_t sub_1B2D807C4(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v45 = a2;
    uint64_t v58 = v2;
    uint64_t v69 = MEMORY[0x1E4FBC860];
    sub_1B29C0098(0, v3, 0);
    uint64_t v5 = v69;
    uint64_t v6 = a1 + 72;
    while (1)
    {
      uint64_t v46 = v3;
      uint64_t v56 = v5;
      uint64_t v7 = *(void *)(v6 - 32);
      uint64_t v8 = *(void *)(v6 - 24);
      uint64_t v9 = *(void *)(v6 - 16);
      uint64_t v10 = *(void *)(v6 - 8);
      uint64_t v11 = *(void *)v6;
      uint64_t v12 = *(void *)(v6 + 8);
      uint64_t v13 = *(void *)(v6 + 16);
      uint64_t v14 = *(void *)(v6 + 24);
      uint64_t v15 = *(void *)(v6 + 32);
      uint64_t v16 = *(void *)(v6 + 40);
      uint64_t v17 = *(void *)(v6 + 48);
      uint64_t v5 = *(void *)(v6 + 56);
      unsigned __int8 v18 = *(unsigned char *)(v6 + 64);
      v59[0] = *(void *)(v6 - 40);
      v59[1] = v7;
      v59[2] = v8;
      v59[3] = v9;
      v59[4] = v10;
      v59[5] = v11;
      v59[6] = v12;
      v59[7] = v13;
      v59[8] = v14;
      v59[9] = v15;
      v59[10] = v16;
      v59[11] = v17;
      v59[12] = v5;
      unsigned __int8 v60 = v18;
      uint64_t v54 = v7;
      *(void *)&long long v53 = v8;
      *(void *)&long long v52 = v9;
      *(void *)&long long v51 = v10;
      uint64_t v49 = v12;
      *(void *)&long long v50 = v11;
      uint64_t v48 = v13;
      sub_1B29C64D0(v59[0], v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v5, v18);
      uint64_t v19 = sub_1B2D8197C(&v61, v59);
      if (v58) {
        break;
      }
      uint64_t v58 = 0;
      sub_1B2D83684((uint64_t)v19, v20, v21, v22, v23, v24, v25, v26, v39, v40, v41, v42, v43, v44, v45, v46, v48, v49, v50,
        *((uint64_t *)&v50 + 1),
        v51,
        *((uint64_t *)&v51 + 1),
        v52,
        *((uint64_t *)&v52 + 1),
        v53,
        *((uint64_t *)&v53 + 1),
        v54);
      long long v27 = v61;
      long long v28 = v62;
      long long v29 = v63;
      long long v30 = v64;
      long long v31 = v65;
      long long v32 = v66;
      uint64_t v33 = v67;
      char v34 = v68;
      uint64_t v5 = v56;
      unint64_t v36 = *(void *)(v56 + 16);
      unint64_t v35 = *(void *)(v56 + 24);
      uint64_t v69 = v56;
      if (v36 >= v35 >> 1)
      {
        long long v55 = v62;
        long long v57 = v61;
        long long v52 = v64;
        long long v53 = v63;
        long long v50 = v66;
        long long v51 = v65;
        sub_1B29C0098(v35 > 1, v36 + 1, 1);
        long long v32 = v50;
        long long v31 = v51;
        long long v30 = v52;
        long long v29 = v53;
        long long v28 = v55;
        long long v27 = v57;
        uint64_t v5 = v69;
      }
      v6 += 112;
      *(void *)(v5 + 16) = v36 + 1;
      uint64_t v37 = v5 + 112 * v36;
      *(_OWORD *)(v37 + 32) = v27;
      *(_OWORD *)(v37 + 48) = v28;
      *(_OWORD *)(v37 + 64) = v29;
      *(_OWORD *)(v37 + 80) = v30;
      *(_OWORD *)(v37 + 96) = v31;
      *(_OWORD *)(v37 + 112) = v32;
      *(void *)(v37 + 128) = v33;
      *(unsigned char *)(v37 + 136) = v34;
      int64_t v3 = v47 - 1;
      if (v47 == 1)
      {
        swift_release();
        return v5;
      }
    }
    sub_1B2D83684((uint64_t)v19, v20, v21, v22, v23, v24, v25, v26, v39, v40, v41, v42, v43, v44, v45, v46, v48, v49, v50,
      *((uint64_t *)&v50 + 1),
      v51,
      *((uint64_t *)&v51 + 1),
      v52,
      *((uint64_t *)&v52 + 1),
      v53,
      *((uint64_t *)&v53 + 1),
      v54);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  return v5;
}

uint64_t sub_1B2D809BC()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EEDC60;
  *(void *)(v0 + 32) = &unk_1F0AC1840;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EC01E0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EEDC70;
  *(void *)(v0 + 72) = 0x80000001B2EA2D00;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29B2124(0, 0);
  return v0;
}

uint64_t sub_1B2D80A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = *a5;
  if (sub_1B2D80B30(*a5)) {
    return 0;
  }
  uint64_t result = swift_beginAccess();
  if (*(void *)(v5 + 32))
  {
    uint64_t v7 = sub_1B29A53B0();
    uint64_t v9 = sub_1B29B2540(v7, v8);
    if (v9)
    {
      uint64_t v10 = v9;
      swift_endAccess();
      sub_1B299D804();
      if (*(void *)(v10 + 24))
      {
        uint64_t v11 = swift_retain();
        sub_1B2D80C3C(v11, 1);
        swift_release();
      }
      swift_release();
    }
    else
    {
      swift_endAccess();
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2D80B30(uint64_t a1)
{
  switch(*(unsigned char *)(a1 + 64))
  {
    case 1:
      sub_1B299E734();
      break;
    case 2:
      swift_bridgeObjectRelease();
      char v1 = 0;
      return v1 & 1;
    case 3:
      uint64_t v2 = 0x47746E657665;
      goto LABEL_8;
    case 4:
      sub_1B29A4988();
      break;
    case 5:
      sub_1B2D836E0();
      break;
    case 6:
      uint64_t v2 = 0x476C61636F6CLL;
LABEL_8:
      sub_1B2D8373C(v2);
      break;
    case 7:
      sub_1B29A4924();
      break;
    default:
      break;
  }
  sub_1B2D836C0();
  char v3 = sub_1B2E837A8();
  swift_bridgeObjectRelease();
  char v1 = v3 ^ 1;
  return v1 & 1;
}

uint64_t sub_1B2D80C3C(uint64_t a1, uint64_t a2)
{
  if (a2 > 24)
  {
    sub_1B2E831F8();
    sub_1B2E82518();
    swift_bridgeObjectRetain();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    sub_1B29D53EC();
    swift_allocError();
    *(void *)uint64_t v20 = 0;
    *(void *)(v20 + 8) = 0xE000000000000000;
    *(unsigned char *)(v20 + 16) = 3;
    return swift_willThrow();
  }
  *(unsigned char *)(a1 + 64) = 2;
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 32);
  if (!v6) {
    goto LABEL_31;
  }
  uint64_t v7 = v6 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v6 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v21 = a2 + 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (v10)
  {
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_19:
    uint64_t v18 = *(void *)(*(void *)(v6 + 56) + 8 * v14);
    uint64_t result = swift_beginAccess();
    if (*(void *)(v18 + 24))
    {
      swift_retain();
      uint64_t v19 = swift_retain();
      sub_1B2D80C3C(v19, v21);
      if (v2)
      {
        swift_release();
        swift_release();
        return swift_release();
      }
      swift_release();
      uint64_t result = swift_release();
    }
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v12 >= v11) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v7 + 8 * v12);
  if (v16)
  {
LABEL_18:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_19;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v11) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_17;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v11) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_17;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v11) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_17:
    int64_t v12 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v11) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v7 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1B2D80EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((sub_1B2D80B30(a6) & 1) == 0)
  {
    uint64_t v19 = a2 + *(int *)(type metadata accessor for QueryContext() + 32);
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 32);
    uint64_t v25 = *(void *)(v19 + 40);
    uint64_t v26 = *(void *)(v19 + 48);
    uint64_t v27 = *(void *)(v19 + 56);
    uint64_t v28 = *(void *)(v19 + 64);
    uint64_t v29 = *(void *)(v19 + 72);
    uint64_t v30 = *(void *)(v19 + 80);
    unint64_t v31 = *(void *)(v19 + 88);
    uint64_t v32 = *(void *)(v19 + 96);
    LOBYTE(v19) = *(unsigned char *)(v19 + 104);
    *(void *)a1 = v20;
    *(void *)(a1 + 8) = v21;
    *(void *)(a1 + 16) = v22;
    *(void *)(a1 + 24) = v23;
    *(void *)(a1 + 32) = v24;
    *(void *)(a1 + 40) = v25;
    *(void *)(a1 + 48) = v26;
    *(void *)(a1 + 56) = v27;
    *(void *)(a1 + 64) = v28;
    *(void *)(a1 + 72) = v29;
    *(void *)(a1 + 80) = v30;
    *(void *)(a1 + 88) = v31;
    *(void *)(a1 + 96) = v32;
    *(unsigned char *)(a1 + 104) = v19;
    sub_1B2A349B4(v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v19);
LABEL_7:
    char v18 = 0;
    return v18 & 1;
  }
  uint64_t v361 = a3;
  uint64_t v13 = sub_1B29A53B0();
  uint64_t v15 = sub_1B2DC1AE4(v13, v14);
  if (v15)
  {
    uint64_t v16 = v15;
    sub_1B299D804();
    uint64_t v17 = *(void *)(v16 + 24);
    swift_retain();
    swift_release();
    if (v17)
    {
      uint64_t v417 = v17;
      sub_1B2D60674(v414, a2, &v417, v361, a4, a5);
      if (v6)
      {
        swift_release();
        return v18 & 1;
      }
      uint64_t v351 = v415;
      uint64_t v37 = v416;
      uint64_t v38 = a4;
      uint64_t v39 = (void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v416 + 64);
      sub_1B29AEC7C(v414, v415);
      uint64_t v343 = *v39;
      swift_retain();
      uint64_t v317 = a5;
      v343(&v400, a2, v361, v38, a5, v17, a6, v351);
      swift_release();
      uint64_t v40 = v400;
      unint64_t v41 = v401;
      uint64_t v42 = v402;
      uint64_t v43 = v409;
      unsigned __int8 v359 = v413;
      uint64_t v344 = v408;
      uint64_t v352 = v405;
      if (v411 >> 1 == 0xFFFFFFFF && (v413 & 0x1E) == 0)
      {
        uint64_t v44 = v404;
        uint64_t v45 = v403;
        uint64_t v46 = v402;
        unint64_t v47 = v401;
        uint64_t v48 = v400;
        uint64_t v318 = v409;
        uint64_t v326 = v410;
        unint64_t v334 = v411;
        uint64_t v362 = v412;
        unint64_t v49 = v406;
        uint64_t v50 = v407;
        swift_release();
        *(void *)a1 = v48;
        *(void *)(a1 + 8) = v47;
        *(void *)(a1 + 16) = v46;
        *(void *)(a1 + 24) = v45;
        *(void *)(a1 + 32) = v44;
        *(void *)(a1 + 40) = v352;
        *(void *)(a1 + 48) = v49;
        *(void *)(a1 + 56) = v50;
        *(void *)(a1 + 64) = v344;
        *(void *)(a1 + 72) = v318;
        *(void *)(a1 + 80) = v326;
        *(void *)(a1 + 88) = v334;
        *(void *)(a1 + 96) = v362;
        *(unsigned char *)(a1 + 104) = v359;
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v414);
        goto LABEL_7;
      }
      uint64_t v303 = v406;
      uint64_t v310 = v407;
      uint64_t v289 = v403;
      uint64_t v296 = v404;
      uint64_t v282 = v402;
      if ((v413 & 0x10) != 0)
      {
        uint64_t v400 = 0;
        unint64_t v401 = 0xE000000000000000;
        unint64_t v59 = v406;
        unint64_t v60 = v405;
        uint64_t v61 = v404;
        uint64_t v62 = v403;
        uint64_t v63 = v41;
        uint64_t v64 = v40;
        uint64_t v327 = v410;
        unint64_t v335 = v411;
        uint64_t v363 = v412;
        sub_1B2E831F8();
        uint64_t v386 = v400;
        unint64_t v387 = v401;
        sub_1B2E82518();
        uint64_t v400 = v64;
        unint64_t v401 = v63;
        uint64_t v402 = v42;
        uint64_t v403 = v62;
        uint64_t v404 = v61;
        unint64_t v405 = v60;
        unint64_t v406 = v59;
        uint64_t v407 = v310;
        uint64_t v408 = v344;
        uint64_t v409 = v43;
        uint64_t v410 = v327;
        unint64_t v411 = v335;
        uint64_t v412 = v363;
        unsigned __int8 v413 = v359;
        sub_1B2E83388();
        sub_1B2A34A54(v64, v63, v282, v289, v296, v352, v303, v310, v344, v43, v327, v335, v363, v359);
        unint64_t v65 = v387;
        sub_1B29D53EC();
        swift_allocError();
        *(void *)uint64_t v66 = v386;
        *(void *)(v66 + 8) = v65;
        *(unsigned char *)(v66 + 16) = 2;
        swift_willThrow();
        swift_release();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v414);
        return v18 & 1;
      }
      uint64_t v386 = v400;
      unint64_t v387 = v401;
      uint64_t v388 = v402;
      uint64_t v389 = v403;
      uint64_t v390 = v404;
      unint64_t v391 = v405;
      unint64_t v392 = v406;
      uint64_t v393 = v407;
      uint64_t v394 = v408;
      uint64_t v395 = v409;
      uint64_t v396 = v410;
      uint64_t v397 = v411;
      uint64_t v398 = v412;
      unsigned __int8 v399 = v413;
      uint64_t v275 = v400;
      sub_1B2D8197C((uint64_t)&v386, (uint64_t)&v400);
      sub_1B299FC08(v51, v52, v53, v54, v55, v56, v57, v58, v37, v121, v128, v135, v142, v149, v156, v163, v170, v177, v184,
        v191,
        v198,
        v205,
        v212,
        v219,
        v226,
        v233,
        v240,
        v247,
        v254,
        v262,
        v17,
        v275,
        v282,
        v289,
        v296,
        v303,
        v310,
        v317,
        a2,
        v38,
        v344,
        v352,
        v359);
      uint64_t v68 = v400;
      uint64_t v69 = v401;
      uint64_t v70 = v404;
      uint64_t v345 = v403;
      unint64_t v353 = v406;
      unint64_t v71 = v407;
      unint64_t v304 = v408;
      uint64_t v311 = v402;
      unint64_t v297 = v409;
      unint64_t v283 = v405;
      unint64_t v290 = v410;
      sub_1B2D83720();
      uint64_t v72 = sub_1B2D81D9C(a6, *(void *)(v328 + 8));
      if (*(void *)(v72 + 16))
      {
        sub_1B29A3EB4((uint64_t *)&unk_1EB7D9AE0);
        uint64_t v73 = swift_allocObject();
        uint64_t v74 = v69;
        uint64_t v69 = v73;
        *(_OWORD *)(v73 + 16) = xmmword_1B2EBFA40;
        *(void *)(v73 + 32) = v68;
        *(void *)(v73 + 40) = v74;
        *(void *)(v73 + 48) = v311;
        *(void *)(v73 + 56) = v345;
        *(void *)(v73 + 64) = v70;
        *(void *)(v73 + 72) = v283;
        *(void *)(v73 + 80) = v353;
        *(void *)(v73 + 88) = v71;
        *(void *)(v73 + 96) = v304;
        *(void *)(v73 + 104) = v297;
        *(void *)(v73 + 112) = v290;
        *(void *)(v73 + 120) = v276;
        *(void *)(v73 + 128) = v263;
        *(unsigned char *)(v73 + 136) = BYTE4(v255);
        uint64_t v75 = sub_1B2DDC660(v72);
        uint64_t v234 = 0;
        uint64_t v241 = 0;
        unint64_t v304 = 0;
        uint64_t v311 = 0;
        uint64_t v345 = 0;
        unint64_t v353 = 0;
        unint64_t v283 = 0;
        unint64_t v290 = 0;
        unint64_t v76 = 0;
        unint64_t v297 = 0;
        uint64_t v276 = 0;
        uint64_t v263 = 0;
        HIDWORD(v255) = 0;
        *(void *)(v69 + 144) = 0;
        *(void *)(v69 + 152) = v75;
        *(unsigned char *)(v69 + 248) = 32;
        *(_OWORD *)(v69 + 160) = 0u;
        *(_OWORD *)(v69 + 176) = 0u;
        *(_OWORD *)(v69 + 192) = 0u;
        *(_OWORD *)(v69 + 208) = 0u;
        *(_OWORD *)(v69 + 224) = 0u;
        *(void *)(v69 + 240) = 0;
      }
      else
      {
        uint64_t v234 = v68;
        swift_bridgeObjectRelease();
        uint64_t v241 = v70;
        unint64_t v76 = v71;
      }
      uint64_t v77 = sub_1B2D83784();
      uint64_t v79 = sub_1B2DC1AE4(v77, v78);
      unint64_t v248 = v76;
      uint64_t v227 = v69;
      if (v79 && (uint64_t v80 = v79, sub_1B299D804(), v81 = *(void *)(v80 + 24), swift_retain(), swift_release(), v81))
      {
        uint64_t v385 = v81;
        uint64_t v82 = v345;
        unint64_t v83 = v353;
        if (*(unsigned char *)(v81 + 80))
        {
          swift_release();
          swift_release();
          goto LABEL_30;
        }
        uint64_t v220 = v81;
        sub_1B2D60674((void *)((char *)v382 + 1), v328, &v385, v361, v336, v319);
        uint64_t v84 = v383;
        uint64_t v85 = v384;
        sub_1B29AEC7C((void *)((char *)v382 + 1), v383);
        uint64_t v86 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 64);
        swift_retain();
        v86(&v400, v328, v361, v336, v319, v81, a6, v84);
        swift_release();
        uint64_t v185 = v400;
        uint64_t v192 = v401;
        uint64_t v199 = v402;
        uint64_t v206 = v403;
        uint64_t v213 = v404;
        uint64_t v320 = v405;
        uint64_t v337 = v406;
        uint64_t v364 = v407;
        uint64_t v171 = v409;
        uint64_t v178 = v408;
        uint64_t v164 = v410;
        if (v411 >> 1 != 0xFFFFFFFF || (v413 & 0x1E) != 0)
        {
          uint64_t v87 = v383;
          uint64_t v88 = v384;
          sub_1B29AEC7C((void *)((char *)v382 + 1), v383);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 88))(v382, v328, v220, a6, v87, v88);
          if (LOBYTE(v382[0]) && LOBYTE(v382[0]) != 1)
          {
            sub_1B2D83700();
            uint64_t v89 = v276;
            sub_1B29A0F14(v283, v85, v122, v129, v136, v143, v150, v157, v164, v171, v178, v185, v192, v199, v206, v213, v220, v227, v234,
              v241,
              v248,
              v255,
              v263,
              v269,
              v276,
              v283,
              v290,
              v297,
              v304,
              v311,
              v320,
              v328,
              v337,
              v345,
              v353);
            uint64_t v397 = v89;
            uint64_t v90 = v265;
            uint64_t v398 = v265;
            unsigned __int8 v91 = BYTE4(v257);
            unsigned __int8 v399 = BYTE4(v257);
            sub_1B29A3300(4u, v117, v124, v131, v138, v145, v152, v159, v166, v173, v180, v187, v194, v201, v208, v215, v222, v229, v236,
              v243,
              v250,
              v257,
              v265,
              v271,
              v278,
              v285,
              v292,
              v299,
              v306,
              v313,
              v322,
              v330,
              v339,
              v347,
              v355,
              0,
              v364,
              v367,
              v368,
              v369,
              v370,
              v371,
              v372,
              v373,
              v374,
              v375,
              v376,
              v377,
              v378,
              v379,
              v380,
              *(__int16 *)v381,
              *(__int16 *)&v381[2],
              v381[4]);
            sub_1B2A34B34(v237, v230, v314, v348, v244, v286, v356, v251, v307, v300, v293, v89, v90, v91);
            swift_release();
            uint64_t v92 = swift_release();
            sub_1B299E048(v92, v93, v94, v95, v96, v97, v98, v99, v118, v125, v132, v139, v146, v153, v160, v167, v174, v181, v188,
              v195,
              v202,
              v209,
              v216,
              v223,
              v230,
              v237,
              v244,
              v251,
              v258,
              v266,
              v272,
              v279,
              v286,
              v293,
              v300,
              v307,
              v314,
              v323,
              v331,
              v340,
              v348,
              v356,
              v360,
              v365);
          }
          else
          {
            sub_1B2D83700();
            sub_1B29A0F14(v283, v85, v122, v129, v136, v143, v150, v157, v164, v171, v178, v185, v192, v199, v206, v213, v220, v227, v234,
              v241,
              v248,
              v255,
              v263,
              v269,
              v276,
              v283,
              v290,
              v297,
              v304,
              v311,
              v320,
              v328,
              v337,
              v345,
              v353);
            uint64_t v397 = v277;
            uint64_t v398 = v264;
            unsigned __int8 v399 = BYTE4(v256);
            sub_1B29A3300(1u, v116, v123, v130, v137, v144, v151, v158, v165, v172, v179, v186, v193, v200, v207, v214, v221, v228, v235,
              v242,
              v249,
              v256,
              v264,
              v270,
              v277,
              v284,
              v291,
              v298,
              v305,
              v312,
              v321,
              v329,
              v338,
              v346,
              v354,
              0,
              v364,
              v367,
              v368,
              v369,
              v370,
              v371,
              v372,
              v373,
              v374,
              v375,
              v376,
              v377,
              v378,
              v379,
              v380,
              *(__int16 *)v381,
              *(__int16 *)&v381[2],
              v381[4]);
            sub_1B2D83640(v100, v101, v102, v103, v104, v105, v106, v107, v119, v126, v133, v140, v147, v154, v161, v168, v175, v182, v189,
              v196,
              v203,
              v210,
              v217,
              v224,
              v231,
              v238,
              v245,
              v252,
              v259,
              v261,
              v267,
              v273,
              v280,
              v287,
              v294,
              v301,
              v308,
              v315,
              v324,
              v332,
              v341,
              v349,
              v357);
            swift_release();
            uint64_t v108 = swift_release();
            sub_1B299E048(v108, v109, v110, v111, v112, v113, v114, v115, v120, v127, v134, v141, v148, v155, v162, v169, v176, v183, v190,
              v197,
              v204,
              v211,
              v218,
              v225,
              v232,
              v239,
              v246,
              v253,
              v260,
              v268,
              v274,
              v281,
              v288,
              v295,
              v302,
              v309,
              v316,
              v325,
              v333,
              v342,
              v350,
              v358,
              0,
              v366);
          }
          uint64_t v227 = v401;
          uint64_t v234 = v400;
          unint64_t v283 = v405;
          uint64_t v345 = v403;
          unint64_t v353 = v406;
          uint64_t v241 = v404;
          unint64_t v248 = v407;
          unint64_t v304 = v408;
          uint64_t v311 = v402;
          unint64_t v290 = v410;
          unint64_t v297 = v409;
          sub_1B2D83720();
        }
        else
        {
          swift_release();
          swift_release();
        }
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v382 + 1);
      }
      else
      {
        swift_release();
      }
      uint64_t v82 = v345;
      unint64_t v83 = v353;
LABEL_30:
      *(void *)a1 = v234;
      *(void *)(a1 + 8) = v227;
      *(void *)(a1 + 16) = v311;
      *(void *)(a1 + 24) = v82;
      *(void *)(a1 + 32) = v241;
      *(void *)(a1 + 40) = v283;
      *(void *)(a1 + 48) = v83;
      *(void *)(a1 + 56) = v248;
      *(void *)(a1 + 64) = v304;
      *(void *)(a1 + 72) = v297;
      *(void *)(a1 + 80) = v290;
      *(void *)(a1 + 88) = v276;
      *(void *)(a1 + 96) = v263;
      *(unsigned char *)(a1 + 104) = BYTE4(v255);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v414);
      char v18 = 1;
      return v18 & 1;
    }
  }
  if (qword_1EB7E30F0 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1B2E81FB8();
  sub_1B29A4B98(v33, (uint64_t)qword_1EB7E30D8);
  char v34 = sub_1B2E81F98();
  os_log_type_t v35 = sub_1B2E82DB8();
  if (os_log_type_enabled(v34, v35))
  {
    unint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v36 = 0;
    _os_log_impl(&dword_1B2996000, v34, v35, "Qselect operator has empty filter node", v36, 2u);
    MEMORY[0x1B3EB30C0](v36, -1, -1);
  }

  char v18 = 0;
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 88) = xmmword_1B2EC01D0;
  *(unsigned char *)(a1 + 104) = 0;
  return v18 & 1;
}

void sub_1B2D8197C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 88);
  unsigned int v17 = *(unsigned __int8 *)(a1 + 104);
  uint64_t v18 = *(void *)(a1 + 96);
  switch(v17 >> 5)
  {
    case 1u:
      *(void *)a2 = *(void *)a1 & 1;
      *(void *)(a2 + 8) = v5;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = v9 & 1;
      *(void *)(a2 + 40) = v10;
      *(void *)(a2 + 48) = 0;
      *(void *)(a2 + 56) = 0;
      *(void *)(a2 + 64) = v7 & 1;
      *(void *)(a2 + 72) = v8;
      *(void *)(a2 + 88) = 0;
      *(void *)(a2 + 96) = 0;
      *(void *)(a2 + 80) = 0;
      *(unsigned char *)(a2 + 104) = 32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 2u:
      *(void *)a2 = *(void *)a1 & 1;
      *(void *)(a2 + 8) = v5;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 40) = v10 & 1;
      *(void *)(a2 + 48) = v11;
      *(void *)(a2 + 56) = 0;
      *(void *)(a2 + 64) = 0;
      *(void *)(a2 + 72) = v8 & 1;
      *(void *)(a2 + 88) = 0;
      *(void *)(a2 + 96) = 0;
      *(void *)(a2 + 80) = v9;
      *(unsigned char *)(a2 + 104) = 65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_8:
      swift_bridgeObjectRetain();
      return;
    case 3u:
    case 4u:
      *(void *)a2 = v6;
      *(void *)(a2 + 8) = v5;
      *(void *)(a2 + 16) = v7;
      *(void *)(a2 + 24) = v8;
      *(void *)(a2 + 32) = v9;
      *(void *)(a2 + 40) = v10;
      *(void *)(a2 + 48) = v11;
      *(void *)(a2 + 56) = v12;
      *(void *)(a2 + 64) = v13;
      *(void *)(a2 + 72) = v14;
      *(void *)(a2 + 80) = v15;
      *(void *)(a2 + 88) = v16;
      *(void *)(a2 + 96) = v18;
      *(unsigned char *)(a2 + 104) = v17;
      sub_1B2D83790();
      sub_1B29C64D0(v6, v5, v19, v20, v21, v10, v22, v23, v24, v25, v15, v48, v51, v54);
      return;
    case 5u:
      uint64_t v70 = *(void *)(a1 + 32);
      uint64_t v72 = *(void *)(a1 + 48);
      uint64_t v64 = *(void *)(a1 + 8);
      uint64_t v68 = *(void *)(a1 + 24);
      uint64_t v74 = *(void *)(a1 + 56);
      uint64_t v59 = v3;
      uint64_t v61 = *(void *)a1;
      uint64_t v28 = *(void *)(a1 + 16);
      uint64_t v29 = *(void *)(a1 + 64);
      uint64_t v30 = *(void *)(a1 + 72);
      swift_retain();
      sub_1B2D83790();
      uint64_t v57 = v15;
      uint64_t v45 = v30;
      uint64_t v66 = v30;
      unsigned __int8 v31 = v61;
      sub_1B29C64D0(v61, v64, v28, v68, v70, v10, v72, v74, v29, v45, v15, v48, v51, v54);
      uint64_t v32 = sub_1B2D807C4(v64, v2);
      if (v59)
      {
        sub_1B29A2224(v32, v33, v34, v35, v36, v37, v38, v39, v44, v46, v47, v50, v53, v56, v16, v15, v59, v61, v28,
          v64,
          v66,
          v29,
          v68,
          v70,
          v72);
        return;
      }
      uint64_t v42 = v32;
      sub_1B29A2224(v32, v33, v34, v35, v36, v37, v38, v39, v44, v46, v47, v50, v53, v56, v16, v57, 0, v61, v28,
        v64,
        v66,
        v29,
        v68,
        v70,
        v72);
      uint64_t v43 = 4;
      if (v31 != 1) {
        uint64_t v43 = v31;
      }
      *(void *)a2 = v43;
      *(void *)(a2 + 8) = v42;
      goto LABEL_17;
    case 6u:
      sub_1B2E831F8();
      sub_1B2E82518();
      sub_1B2E83388();
      sub_1B2E82518();
      sub_1B29D53EC();
      swift_allocError();
      *(void *)uint64_t v40 = 0;
      *(void *)(v40 + 8) = 0xE000000000000000;
      *(unsigned char *)(v40 + 16) = 1;
      swift_willThrow();
      return;
    default:
      uint64_t v69 = *(void *)(a1 + 32);
      uint64_t v71 = *(void *)(a1 + 48);
      uint64_t v67 = *(void *)(a1 + 24);
      uint64_t v73 = *(void *)(a1 + 56);
      uint64_t v58 = v3;
      uint64_t v62 = *(void *)(a1 + 16);
      uint64_t v63 = *(void *)(a1 + 8);
      uint64_t v26 = *(void *)(a1 + 64);
      uint64_t v65 = *(void *)(a1 + 72);
      swift_retain();
      sub_1B2D83790();
      uint64_t v60 = v10;
      sub_1B29C64D0(v6, v63, v62, v67, v69, v10, v71, v73, v26, v65, v15, v48, v51, v54);
      uint64_t v27 = sub_1B2D807C4(v63, v2);
      sub_1B2D83790();
      sub_1B2A34B34(v6, v63, v62, v67, v69, v60, v71, v73, v26, v65, v15, v49, v52, v55);
      if (v6)
      {
        if (!v58)
        {
          *(void *)a2 = 1;
          *(void *)(a2 + 8) = v27;
          *(double *)&long long v41 = sub_1B2D83770();
          *(_OWORD *)(a2 + 89) = v41;
        }
      }
      else if (!v58)
      {
        *(void *)a2 = 4;
        *(void *)(a2 + 8) = v27;
LABEL_17:
        sub_1B2D83770();
        *(void *)(a2 + 96) = 0;
        *(unsigned char *)(a2 + 104) = -96;
      }
      return;
  }
}

uint64_t sub_1B2D81D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1B2D83784();
  uint64_t result = sub_1B2DC1414(v3, v4);
  uint64_t v15 = result;
  if (*(void *)(result + 16) && a2)
  {
    swift_retain();
    uint64_t v6 = sub_1B2D984EC();
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v14 = MEMORY[0x1E4FBC860];
      sub_1B29BFD80();
      uint64_t v8 = (uint64_t *)(v6 + 64);
      do
      {
        uint64_t v10 = *(v8 - 1);
        uint64_t v9 = *v8;
        unint64_t v12 = *(void *)(v14 + 16);
        unint64_t v11 = *(void *)(v14 + 24);
        swift_bridgeObjectRetain();
        if (v12 >= v11 >> 1) {
          sub_1B29BFD80();
        }
        *(void *)(v14 + 16) = v12 + 1;
        uint64_t v13 = v14 + 16 * v12;
        *(void *)(v13 + 32) = v10;
        *(void *)(v13 + 40) = v9;
        v8 += 11;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
    sub_1B2AD2DD4();
    swift_release();
    return v15;
  }
  return result;
}

uint64_t sub_1B2D81ED4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t Context = type metadata accessor for QueryContext();
  MEMORY[0x1F4188790](Context - 8);
  uint64_t v152 = (uint64_t)&v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1B2D80B30(a5)) {
    return sub_1B2A33434(a1, a2, a3, a4, a5, a6, a7);
  }
  uint64_t v151 = a7;
  uint64_t v146 = a2;
  uint64_t v19 = sub_1B2D83784();
  uint64_t v21 = sub_1B2DC1AE4(v19, v20);
  if (!v21 || (sub_1B2D82C7C((uint64_t)a1, v21, a5, v146, a3, a4, v151), uint64_t result = swift_release(), !v7))
  {
    uint64_t v22 = sub_1B29A53B0();
    uint64_t v24 = sub_1B2DC1AE4(v22, v23);
    if (!v24 || (uint64_t v25 = v24, sub_1B299D804(), v26 = *(void *)(v25 + 24), swift_retain(), swift_release(), !v26))
    {
      uint64_t v174 = 0;
      uint64_t v175 = 0xE000000000000000;
      sub_1B2E831F8();
      swift_bridgeObjectRelease();
      sub_1B29D53EC();
      swift_allocError();
      *(void *)uint64_t v27 = 0xD00000000000001FLL;
      *(void *)(v27 + 8) = 0x80000001B2EA2D30;
      *(unsigned char *)(v27 + 16) = 1;
      return swift_willThrow();
    }
    uint64_t v188 = v26;
    if ((sub_1B2DC1F00() & 1) == 0)
    {
      *(unsigned char *)(v26 + 80) = 1;
      uint64_t v28 = a1[1];
      uint64_t v145 = a1;
      uint64_t v141 = a4;
      uint64_t v140 = a3;
      if (v28) {
        uint64_t v29 = sub_1B2D984EC();
      }
      else {
        uint64_t v29 = 0;
      }
      uint64_t v142 = type metadata accessor for ResultGraph();
      uint64_t v30 = swift_allocObject();
      uint64_t v31 = MEMORY[0x1E4FBC860];
      *(void *)(v30 + 16) = sub_1B2E82148();
      *(void *)(v30 + 24) = v31;
      swift_release();
      v145[1] = v30;
      uint64_t v32 = sub_1B2E82148();
      if (!v29) {
        goto LABEL_67;
      }
      uint64_t v33 = v32;
      uint64_t v34 = v29;
      uint64_t v168 = v33;
      uint64_t v35 = *(void *)(v29 + 16);
      uint64_t v36 = v152;
      uint64_t v144 = a5;
      uint64_t v37 = v151;
      uint64_t v148 = v35;
      if (v35)
      {
        unint64_t v38 = 0;
        uint64_t v147 = v29 + 32;
        uint64_t v167 = MEMORY[0x1E4FBC860];
        uint64_t v143 = v29;
        do
        {
          if (v38 >= *(void *)(v34 + 16)) {
            goto LABEL_62;
          }
          uint64_t v39 = (uint64_t *)(v147 + 88 * v38);
          uint64_t v40 = v39[10];
          uint64_t v41 = *(void *)(v40 + 16);
          if (v41)
          {
            unint64_t v149 = v38;
            uint64_t v150 = v8;
            uint64_t v42 = v39[1];
            uint64_t v156 = *v39;
            uint64_t v43 = v39[2];
            uint64_t v44 = v39[4];
            uint64_t v155 = v39[3];
            uint64_t v45 = v39[5];
            uint64_t v154 = v39[6];
            uint64_t v46 = v39[7];
            uint64_t v153 = v39[8];
            uint64_t v169 = v39[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t v172 = v44;
            swift_bridgeObjectRetain();
            uint64_t v171 = v45;
            swift_bridgeObjectRetain();
            uint64_t v170 = v46;
            swift_bridgeObjectRetain();
            uint64_t v47 = (uint64_t *)(v40 + 56);
            uint64_t v157 = v42;
            while (1)
            {
              uint64_t v166 = v41;
              uint64_t v48 = *(v47 - 3);
              uint64_t v49 = *(v47 - 2);
              uint64_t v50 = *(v47 - 1);
              uint64_t v51 = v47[1];
              uint64_t v165 = *v47;
              uint64_t v52 = v47[2];
              uint64_t v162 = v47[3];
              uint64_t v53 = v47[4];
              uint64_t v160 = v47[5];
              uint64_t v54 = v47[7];
              uint64_t v159 = v47[6];
              swift_bridgeObjectRetain();
              uint64_t v158 = v54;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v164 = v51;
              swift_bridgeObjectRetain();
              uint64_t v163 = v52;
              swift_bridgeObjectRetain();
              uint64_t v161 = v53;
              swift_bridgeObjectRetain();
              uint64_t v55 = v168;
              swift_isUniquelyReferenced_nonNull_native();
              uint64_t v173 = v48;
              uint64_t v174 = (void *)v55;
              uint64_t v62 = sub_1B29DB060(v48, v49, v56, v57, v58, v59, v60, v61, v140, v141, v142, v143, v144, (uint64_t)v145, v146, v147, v148, v149, v150,
                      v151,
                      v152,
                      v153,
                      v154,
                      v155,
                      v156,
                      v157);
              if (__OFADD__(*(void *)(v55 + 16), (v63 & 1) == 0))
              {
                __break(1u);
                goto LABEL_54;
              }
              unint64_t v64 = v62;
              char v65 = v63;
              sub_1B29A3EB4(&qword_1E9C43AE8);
              if (sub_1B2E83398())
              {
                uint64_t v72 = sub_1B29DB060(v173, v49, v66, v67, v68, v69, v70, v71, v140, v141, v142, v143, v144, (uint64_t)v145, v146, v147, v148, v149, v150,
                        v151,
                        v152,
                        v153,
                        v154,
                        v155,
                        v156,
                        v157);
                if ((v65 & 1) != (v73 & 1)) {
                  goto LABEL_68;
                }
                unint64_t v64 = v72;
              }
              uint64_t v74 = v174;
              uint64_t v168 = (uint64_t)v174;
              if (v65)
              {
                uint64_t v75 = (void *)(v174[7] + 88 * v64);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v76 = v157;
                *uint64_t v75 = v156;
                v75[1] = v76;
                v75[2] = v43;
                uint64_t v77 = v172;
                v75[3] = v155;
                v75[4] = v77;
                uint64_t v78 = v154;
                v75[5] = v171;
                _OWORD v75[6] = v78;
                uint64_t v79 = v153;
                v75[7] = v170;
                v75[8] = v79;
                v75[9] = v169;
                v75[10] = v40;
              }
              else
              {
                v174[(v64 >> 6) + 8] |= 1 << v64;
                uint64_t v80 = (void *)(v74[6] + 16 * v64);
                *uint64_t v80 = v173;
                v80[1] = v49;
                uint64_t v81 = (void *)(v74[7] + 88 * v64);
                uint64_t v82 = v157;
                *uint64_t v81 = v156;
                v81[1] = v82;
                v81[2] = v43;
                uint64_t v83 = v172;
                v81[3] = v155;
                v81[4] = v83;
                uint64_t v84 = v154;
                v81[5] = v171;
                v81[6] = v84;
                uint64_t v85 = v153;
                v81[7] = v170;
                v81[8] = v85;
                v81[9] = v169;
                v81[10] = v40;
                uint64_t v86 = v74[2];
                BOOL v87 = __OFADD__(v86, 1);
                uint64_t v88 = v86 + 1;
                if (v87)
                {
                  __break(1u);
LABEL_62:
                  __break(1u);
LABEL_63:
                  __break(1u);
LABEL_64:
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
LABEL_66:
                  __break(1u);
LABEL_67:
                  __break(1u);
LABEL_68:
                  uint64_t result = sub_1B2E83858();
                  __break(1u);
                  return result;
                }
                v74[2] = v88;
                swift_bridgeObjectRetain();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v89 = v167;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1B299B8BC();
                sub_1B29B7480();
                uint64_t v89 = v96;
              }
              unint64_t v90 = *(void *)(v89 + 16);
              if (v90 >= *(void *)(v89 + 24) >> 1)
              {
                sub_1B29B7480();
                uint64_t v89 = v97;
              }
              *(void *)(v89 + 16) = v90 + 1;
              uint64_t v167 = v89;
              unsigned __int8 v91 = (void *)(v89 + 88 * v90);
              v91[4] = v173;
              v91[5] = v49;
              v91[6] = v50;
              uint64_t v92 = v164;
              v91[7] = v165;
              v91[8] = v92;
              uint64_t v93 = v162;
              v91[9] = v163;
              v91[10] = v93;
              uint64_t v94 = v160;
              v91[11] = v161;
              v91[12] = v94;
              uint64_t v95 = v158;
              v91[13] = v159;
              v91[14] = v95;
              v47 += 11;
              uint64_t v41 = v166 - 1;
              if (v166 == 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                uint64_t v8 = v150;
                uint64_t v36 = v152;
                a5 = v144;
                uint64_t v37 = v151;
                uint64_t v34 = v143;
                unint64_t v38 = v149;
                break;
              }
            }
          }
          ++v38;
        }
        while (v38 != v148);
      }
      else
      {
        uint64_t v167 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v168 + 16))
      {
        uint64_t v98 = swift_allocObject();
        uint64_t v99 = (void *)v36;
        uint64_t v100 = MEMORY[0x1E4FBC860];
        *(void *)(v98 + 16) = sub_1B2E82148();
        *(void *)(v98 + 24) = v100;
        LOBYTE(v174) = 0;
        uint64_t v101 = swift_bridgeObjectRetain();
        sub_1B2D97CC8(v101, &v174);
        swift_bridgeObjectRelease();
        sub_1B2D87CF8(v99);
        swift_retain();
        swift_release();
        v99[1] = v98;
        if (__OFADD__(v37, 1)) {
          goto LABEL_63;
        }
        uint64_t v102 = sub_1B2D5CB70((uint64_t)&v174, (uint64_t)v99, (uint64_t)&v188, a5, v37 + 1, v146, v140, v141);
        if (v8)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          sub_1B2A32B10((uint64_t)v99);
        }
        else
        {
          uint64_t v103 = v102;
          uint64_t v158 = v98;
          uint64_t v150 = 0;
          sub_1B2A34A54((uint64_t)v174, v175, v176, v177, v178, v179, v180, v181, v182, v183, v184, v185, v186, v187);
          uint64_t v157 = v103;
          uint64_t v104 = sub_1B2D984EC();
          uint64_t v105 = *(void *)(v104 + 16);
          uint64_t v159 = v104;
          if (v105)
          {
            uint64_t v106 = (uint64_t *)(v104 + 64);
            uint64_t v107 = MEMORY[0x1E4FBC860];
            while (1)
            {
              uint64_t v170 = v107;
              uint64_t v108 = *(v106 - 3);
              uint64_t v109 = *v106;
              uint64_t v110 = v106[1];
              uint64_t v111 = v106[5];
              uint64_t v112 = v168;
              if (!*(void *)(v168 + 16)) {
                goto LABEL_64;
              }
              uint64_t v169 = v105;
              uint64_t v113 = *(v106 - 2);
              uint64_t v114 = *(v106 - 4);
              uint64_t v164 = v111;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain_n();
              uint64_t v166 = v109;
              swift_bridgeObjectRetain();
              uint64_t v165 = v110;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v121 = sub_1B29DB060(v114, v108, v115, v116, v117, v118, v119, v120, v140, v141, v142, v143, v144, (uint64_t)v145, v146, v147, v148, v149, v150,
                       v151,
                       v152,
                       v153,
                       v154,
                       v155,
                       v156,
                       v157);
              if ((v122 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                goto LABEL_66;
              }
              uint64_t v123 = (uint64_t *)(*(void *)(v112 + 56) + 88 * v121);
              uint64_t v124 = v123[1];
              uint64_t v161 = *v123;
              uint64_t v125 = v123[4];
              uint64_t v162 = v123[3];
              uint64_t v126 = v123[5];
              uint64_t v163 = v123[6];
              uint64_t v127 = v123[7];
              uint64_t v160 = v123[8];
              uint64_t v128 = v123[9];
              uint64_t v129 = v123[10];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v171 = v125;
              swift_bridgeObjectRetain();
              uint64_t v173 = v126;
              swift_bridgeObjectRetain();
              uint64_t v172 = v127;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              if (!v124) {
                goto LABEL_66;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v107 = v170;
              uint64_t v130 = v129;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1B299B8BC();
                sub_1B29B7480();
                uint64_t v107 = v138;
              }
              unint64_t v131 = *(void *)(v107 + 16);
              if (v131 >= *(void *)(v107 + 24) >> 1)
              {
                sub_1B29B7480();
                uint64_t v107 = v139;
              }
              *(void *)(v107 + 16) = v131 + 1;
              uint64_t v132 = (void *)(v107 + 88 * v131);
              uint64_t v133 = v161;
              v132[4] = v161;
              v132[5] = v124;
              v132[6] = v113;
              uint64_t v134 = v171;
              v132[7] = v162;
              v132[8] = v134;
              uint64_t v135 = v172;
              uint64_t v136 = v163;
              v132[9] = v173;
              v132[10] = v136;
              uint64_t v137 = v160;
              v132[11] = v135;
              v132[12] = v137;
              v132[13] = v128;
              v132[14] = v130;
              sub_1B2D835C0(v133, v124);
              v106 += 11;
              uint64_t v105 = v169 - 1;
              if (v169 == 1) {
                goto LABEL_55;
              }
            }
          }
LABEL_54:
          uint64_t v107 = MEMORY[0x1E4FBC860];
LABEL_55:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v144 + 80) = 1;
          if (v145[1])
          {
            LOBYTE(v174) = 2;
            sub_1B2D97CC8(v107, &v174);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
          }
          swift_release();
          sub_1B2A32B10(v152);
        }
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B2D82C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a3;
  uint64_t Context = type metadata accessor for QueryContext();
  MEMORY[0x1F4188790](Context - 8);
  uint64_t v16 = (uint64_t *)((char *)&v24[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  if (*(void *)(a2 + 24))
  {
    uint64_t v26 = *(void *)(a2 + 24);
    uint64_t result = sub_1B2DC1F00();
    if ((result & 1) == 0)
    {
      swift_retain();
      uint64_t result = sub_1B2D87CF8(v16);
      if (__OFADD__(a7, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v18 = sub_1B2D5CB70((uint64_t)v24, (uint64_t)v16, (uint64_t)&v26, v28, a7 + 1, a4, a5, a6);
        if (v7)
        {
          sub_1B2A32B10((uint64_t)v16);
          return swift_release();
        }
        else
        {
          uint64_t v22 = v18;
          sub_1B2A34A54(v24[0], v24[1], v24[2], v24[3], v24[4], v24[5], v24[6], v24[7], v24[8], v24[9], v24[10], v24[11], v24[12], v25);
          sub_1B2A32B10((uint64_t)v16);
          swift_release();
          uint64_t result = swift_release();
          *(void *)(a1 + 8) = v22;
        }
      }
    }
  }
  else
  {
    uint64_t result = swift_beginAccess();
    if (!*(void *)(*(void *)(a2 + 16) + 16))
    {
      uint64_t v26 = 0;
      unint64_t v27 = 0xE000000000000000;
      sub_1B2E831F8();
      sub_1B2E82518();
      sub_1B2E82518();
      sub_1B2CAF284();
      uint64_t v19 = v26;
      unint64_t v20 = v27;
      sub_1B29D53EC();
      swift_allocError();
      *(void *)uint64_t v21 = v19;
      *(void *)(v21 + 8) = v20;
      *(unsigned char *)(v21 + 16) = 1;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1B2D82EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v4 = *(void *)(a3 + 16) == 7370352 && *(void *)(a3 + 24) == 0xE300000000000000;
  if (!v4 && (sub_1B2E837A8() & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v5 = sub_1B2DC1AE4(111, 0xE100000000000000);
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v5;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 24);
  if (!v7)
  {
    swift_release();
LABEL_10:
    int v9 = 1;
    return sub_1B2D80B30(a2) & v9 & 1;
  }
  type metadata accessor for QueryNode();
  swift_retain_n();
  swift_retain();
  int v8 = sub_1B2DC1B88(v7, a2);
  swift_release_n();
  swift_release();
  swift_release();
  int v9 = v8 ^ 1;
  return sub_1B2D80B30(a2) & v9 & 1;
}

uint64_t sub_1B2D82FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v51 = a3;
  uint64_t v53 = a1;
  type metadata accessor for ResultGraph();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 16) = sub_1B2E82148();
  *(void *)(v6 + 24) = v7;
  uint64_t v52 = v6;
  switch(*(unsigned char *)(a2 + 64))
  {
    case 1:
      sub_1B299E734();
      break;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t i = v53;
      goto LABEL_11;
    case 3:
      uint64_t v9 = 0x47746E657665;
      goto LABEL_8;
    case 4:
      sub_1B29A4988();
      break;
    case 5:
      sub_1B2D836E0();
      break;
    case 6:
      uint64_t v9 = 0x476C61636F6CLL;
LABEL_8:
      sub_1B2D8373C(v9);
      break;
    case 7:
      sub_1B29A4924();
      break;
    default:
      break;
  }
  sub_1B2D836C0();
  char v10 = sub_1B2E837A8();
  swift_bridgeObjectRelease();
  uint64_t i = v53;
  if (v10)
  {
LABEL_11:
    uint64_t v11 = sub_1B29A53B0();
    uint64_t v13 = sub_1B2DC1AE4(v11, v12);
    if (!v13) {
      goto LABEL_25;
    }
    uint64_t v14 = v13;
    sub_1B299D804();
    uint64_t v15 = *(void *)(v14 + 24);
    swift_retain();
    swift_release();
    if (v15)
    {
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v16 = *(void *)(v15 + 24);
      uint64_t v18 = qword_1EB7D96B0;
      swift_bridgeObjectRetain();
      if (v18 != -1) {
        goto LABEL_66;
      }
      goto LABEL_14;
    }
LABEL_24:
    for (uint64_t i = v53; ; uint64_t i = v53)
    {
LABEL_25:
      uint64_t v31 = sub_1B2D83784();
      uint64_t v33 = sub_1B2DC1AE4(v31, v32);
      uint64_t v58 = *(void *)(v51 + 16);
      if (!v58)
      {
        swift_release();
        break;
      }
      uint64_t v49 = v4;
      uint64_t v54 = v33 + 16;
      uint64_t v55 = v51 + 32;
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
      uint64_t v59 = MEMORY[0x1E4FBC860];
      while (1)
      {
        if (v33)
        {
          uint64_t v34 = v55 + 88 * v4;
          uint64_t v56 = *(void *)(v34 + 8);
          uint64_t v57 = *(void *)v34;
          uint64_t v35 = *(void *)(v34 + 16);
          uint64_t v36 = *(void *)(v34 + 24);
          uint64_t v17 = *(void *)(v34 + 32);
          long long v60 = *(_OWORD *)(v34 + 56);
          long long v61 = *(_OWORD *)(v34 + 40);
          uint64_t v16 = *(void *)(v34 + 72);
          uint64_t v37 = *(void *)(v34 + 80);
          sub_1B299D804();
          unint64_t v38 = *(void **)v54;
          uint64_t v39 = *(void *)(*(void *)v54 + 16);
          if (v39)
          {
            BOOL v40 = v38[4] == v36 && v38[5] == v17;
            if (v40 || (sub_1B2D83754() & 1) != 0)
            {
LABEL_40:
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1B299B8BC();
                sub_1B29B7480();
                uint64_t v59 = v46;
              }
              unint64_t v42 = *(void *)(v59 + 16);
              if (v42 >= *(void *)(v59 + 24) >> 1)
              {
                sub_1B29B7480();
                uint64_t v59 = v47;
              }
              *(void *)(v59 + 16) = v42 + 1;
              uint64_t v43 = v59 + 88 * v42;
              *(void *)(v43 + 32) = v57;
              *(void *)(v43 + 40) = v56;
              *(void *)(v43 + 48) = v35;
              *(void *)(v43 + 56) = v36;
              *(void *)(v43 + 64) = v17;
              *(_OWORD *)(v43 + 72) = v61;
              *(_OWORD *)(v43 + 88) = v60;
              *(void *)(v43 + 104) = v16;
              *(void *)(v43 + 112) = v37;
              swift_release();
LABEL_45:
              uint64_t i = v53;
              goto LABEL_46;
            }
            if (v39 != 1)
            {
              BOOL v41 = v38[6] == v36 && v38[7] == v17;
              if (v41 || (sub_1B2D83754() & 1) != 0) {
                goto LABEL_40;
              }
              if (v39 != 2) {
                break;
              }
            }
          }
        }
LABEL_46:
        if (++v4 == v58)
        {
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_60;
        }
      }
      uint64_t v44 = v38 + 9;
      uint64_t v15 = 2;
      while (!__OFADD__(v15, 1))
      {
        if (*(v44 - 1) == v36 && *v44 == v17) {
          goto LABEL_40;
        }
        uint64_t v50 = v15 + 1;
        if (sub_1B2D83754()) {
          goto LABEL_40;
        }
        v44 += 2;
        ++v15;
        if (v50 == v39) {
          goto LABEL_45;
        }
      }
      __break(1u);
LABEL_66:
      swift_once();
LABEL_14:
      uint64_t v19 = qword_1EB7F3378;
      if (*(void *)(qword_1EB7F3378 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_1B29DB060(v17, v16, v20, v21, v22, v23, v24, v25, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                v59,
                v60,
                *((uint64_t *)&v60 + 1),
                v61,
                *((uint64_t *)&v61 + 1),
                v62,
                *((uint64_t *)&v62 + 1));
        if (v27)
        {
          sub_1B29C3B84(*(void *)(v19 + 56) + 40 * v26, (uint64_t)&v62);
        }
        else
        {
          uint64_t v64 = 0;
          long long v62 = 0u;
          long long v63 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v64 = 0;
        long long v62 = 0u;
        long long v63 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v63 + 1))
      {
        swift_release();
        sub_1B2A349F4((uint64_t)&v62);
        goto LABEL_24;
      }
      sub_1B29D1D20(&v62, (uint64_t)v65);
      uint64_t v28 = v66;
      uint64_t v29 = v67;
      sub_1B29AEC7C(v65, v66);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 80))(v53, v15, v51, v28, v29);
      swift_release();
      if (v4)
      {
        swift_release();
        return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v65);
      }
      swift_release();
      swift_bridgeObjectRelease();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v65);
    }
  }
  uint64_t v59 = MEMORY[0x1E4FBC860];
LABEL_60:
  if (*(void *)(i + 8) && !sub_1B2D971EC())
  {
    LOBYTE(v62) = 2;
    swift_retain();
    sub_1B2D97CC8(v51, &v62);
    swift_release();
    return v59;
  }
  else
  {
    swift_bridgeObjectRelease();
    LOBYTE(v62) = 2;
    sub_1B2D97CC8(v51, &v62);
    return swift_bridgeObjectRetain();
  }
}

uint64_t type metadata accessor for Qselect()
{
  return self;
}

uint64_t sub_1B2D835C0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2D83640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,unsigned __int8 a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  return sub_1B2A34B34(a26, a25, a38, a42, a27, a34, a43, a28, a37, a36, a35, a33, a31, a30);
}

uint64_t sub_1B2D83684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return sub_1B2A34B34(v33, a27, a25, a23, a21, a19, a18, a17, v27, v28, v29, v30, v31, v32);
}

uint64_t sub_1B2D836E0()
{
  return 0x49747865746E6F63;
}

uint64_t sub_1B2D8373C(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
}

uint64_t sub_1B2D83754()
{
  return sub_1B2E837A8();
}

double sub_1B2D83770()
{
  double result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  return result;
}

uint64_t sub_1B2D83784()
{
  return 115;
}

void sub_1B2D8379C(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)v3;
  uint64_t v6 = *(void *)(v3 + 8);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v3 + 24);
  uint64_t v10 = *(void *)(v3 + 56);
  uint64_t v52 = *(void *)(v3 + 64);
  uint64_t v51 = *(void *)(v3 + 72);
  uint64_t v11 = *(void *)(v3 + 88);
  uint64_t v50 = *(void *)(v3 + 80);
  unsigned __int8 v12 = *(unsigned char *)(v3 + 104);
  unsigned __int8 v66 = *(unsigned char *)(a2 + 104);
  uint64_t v64 = *(void *)(a2 + 88);
  uint64_t v65 = *(void *)(a2 + 96);
  uint64_t v62 = *(void *)(a2 + 72);
  uint64_t v63 = *(void *)(a2 + 80);
  uint64_t v60 = *(void *)(a2 + 8);
  uint64_t v61 = *(void *)(a2 + 64);
  uint64_t v57 = *(void *)(a2 + 48);
  uint64_t v58 = *(void *)(a2 + 56);
  uint64_t v55 = *(void *)(a2 + 32);
  uint64_t v56 = *(void *)(a2 + 40);
  uint64_t v54 = *(void *)(a2 + 16);
  uint64_t v59 = *(void *)a2;
  uint64_t v53 = *(void *)(v3 + 96);
  if ((v12 & 0x10) != 0)
  {
    uint64_t v49 = *(void *)(v3 + 88);
    LODWORD(v46) = *(unsigned __int8 *)(v3 + 104);
    sub_1B2E831F8();
    sub_1B2D86CB0();
    sub_1B2E83388();
    uint64_t v15 = sub_1B2CF3864();
    sub_1B2D86BE8(v15, v16, v17, v18, v19, v20, v21, v22, v33, v34, v35, v36, v37, v38, v39, v41, v43, v44, v46,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v5,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65);
  }
  else
  {
    uint64_t v42 = *(void *)(v3 + 16);
    uint64_t v45 = *(void *)(v3 + 32);
    uint64_t v47 = *(void *)(v3 + 40);
    uint64_t v48 = *(void *)(v3 + 48);
    if ((*(unsigned char *)(a2 + 104) & 0x10) == 0)
    {
      uint64_t v40 = *a1;
      sub_1B29A3EB4((uint64_t *)&unk_1EB7D9AE0);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1B2EC00A0;
      *(void *)(v13 + 32) = v7;
      *(void *)(v13 + 40) = v6;
      *(void *)(v13 + 48) = v8;
      *(void *)(v13 + 56) = v9;
      *(void *)(v13 + 64) = v45;
      *(void *)(v13 + 72) = v47;
      *(void *)(v13 + 80) = v48;
      *(void *)(v13 + 88) = v10;
      *(void *)(v13 + 96) = v52;
      *(void *)(v13 + 104) = v51;
      *(void *)(v13 + 112) = v50;
      *(void *)(v13 + 120) = v11;
      *(void *)(v13 + 128) = v53;
      *(unsigned char *)(v13 + 136) = v12;
      sub_1B29C6430(v7, v6, v8, v9, v45, v47, v48, v10, v52, v51, v50, v11, v53, v12);
      sub_1B29C6430(v59, v60, v54, v5, v55, v56, v57, v58, v61, v62, v63, v64, v65, v66);
      sub_1B29B76B4();
      *(void *)(v14 + 16) = 2;
      *(void *)(v14 + 144) = v59;
      *(void *)(v14 + 152) = v60;
      *(void *)(v14 + 160) = v54;
      *(void *)(v14 + 168) = v5;
      *(void *)(v14 + 176) = v55;
      *(void *)(v14 + 184) = v56;
      *(void *)(v14 + 192) = v57;
      *(void *)(v14 + 200) = v58;
      *(void *)(v14 + 208) = v61;
      *(void *)(v14 + 216) = v62;
      *(void *)(v14 + 224) = v63;
      *(void *)(v14 + 232) = v64;
      *(void *)(v14 + 240) = v65;
      *(unsigned char *)(v14 + 248) = v66;
      *(void *)a3 = v40;
      *(void *)(a3 + 8) = v14;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)(a3 + 48) = 0u;
      *(_OWORD *)(a3 + 64) = 0u;
      *(_OWORD *)(a3 + 80) = 0u;
      *(void *)(a3 + 96) = 0;
      *(unsigned char *)(a3 + 104) = -96;
      return;
    }
    sub_1B2E831F8();
    sub_1B2E82518();
    sub_1B2999DAC();
    uint64_t v23 = sub_1B2CF3864();
    sub_1B2D86BE8(v23, v24, v25, v26, v27, v28, v29, v30, v33, v34, v35, v36, v37, v38, v39, v42, v9, v45, v47,
      v48,
      v50,
      v51,
      v52,
      v53,
      v54,
      v5,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65);
  }
  sub_1B2E83388();
  sub_1B2A32704();
  uint64_t v31 = swift_allocError();
  sub_1B2D86D6C(v31, v32);
}

uint64_t sub_1B2D83BA0@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v51 = *(void *)(a1 + 8);
  uint64_t v52 = *(void *)(a1 + 16);
  uint64_t v53 = *(void *)(a1 + 24);
  uint64_t v56 = *(void *)(a1 + 40);
  uint64_t v58 = *(void *)a1;
  uint64_t v59 = *(void *)(a1 + 48);
  uint64_t v61 = *(void *)(a1 + 56);
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 48);
  uint64_t v49 = *(void *)(v3 + 56);
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = *(void *)(v3 + 72);
  uint64_t v9 = *(void *)(v3 + 80);
  uint64_t v8 = *(void *)(v3 + 88);
  unsigned __int8 v10 = *(unsigned char *)(v3 + 104);
  if ((v10 & 0x10) == 0)
  {
    uint64_t v38 = *(void *)(v3 + 8);
    uint64_t v39 = *(void *)(v3 + 24);
    uint64_t v41 = *(void *)(v3 + 40);
    uint64_t v42 = *(void *)(v3 + 16);
    uint64_t v40 = *(void *)(v3 + 32);
    uint64_t v44 = *(void *)(a1 + 96);
    uint64_t v45 = *(void *)(a1 + 88);
    uint64_t v46 = *(void *)(a1 + 80);
    uint64_t v47 = *(void *)(a1 + 72);
    uint64_t v48 = *(void *)(a1 + 64);
    uint64_t v54 = *(void *)(a1 + 32);
    unsigned __int8 v43 = *(unsigned char *)(a1 + 104);
    if ((v43 & 0x10) == 0)
    {
      uint64_t v37 = *a2;
      uint64_t v11 = *(void *)(v3 + 96);
      sub_1B29A3EB4((uint64_t *)&unk_1EB7D9AE0);
      uint64_t v13 = swift_allocObject();
      *(void *)a3 = v37;
      *(_OWORD *)(v13 + 16) = xmmword_1B2EBFA40;
      *(void *)(v13 + 32) = v4;
      *(void *)(v13 + 40) = v38;
      *(void *)(v13 + 48) = v42;
      *(void *)(v13 + 56) = v39;
      *(void *)(v13 + 64) = v40;
      *(void *)(v13 + 72) = v41;
      *(void *)(v13 + 80) = v5;
      *(void *)(v13 + 88) = v49;
      *(void *)(v13 + 96) = v6;
      *(void *)(v13 + 104) = v7;
      *(void *)(v13 + 112) = v9;
      *(void *)(v13 + 120) = v8;
      *(void *)(v13 + 128) = v11;
      *(unsigned char *)(v13 + 136) = v10;
      *(void *)(v13 + 144) = v58;
      *(void *)(v13 + 152) = v51;
      *(void *)(v13 + 160) = v52;
      *(void *)(v13 + 168) = v53;
      *(void *)(v13 + 176) = v54;
      *(void *)(v13 + 184) = v56;
      *(void *)(v13 + 192) = v59;
      *(void *)(v13 + 200) = v61;
      *(void *)(v13 + 208) = v48;
      *(void *)(v13 + 216) = v47;
      *(void *)(v13 + 224) = v46;
      *(void *)(v13 + 232) = v45;
      *(void *)(v13 + 240) = v44;
      *(unsigned char *)(v13 + 248) = v43;
      *(void *)(a3 + 8) = v13;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)(a3 + 48) = 0u;
      *(_OWORD *)(a3 + 64) = 0u;
      *(_OWORD *)(a3 + 80) = 0u;
      *(_OWORD *)(a3 + 89) = 0u;
      sub_1B29C6430((uint64_t)v4, v38, v42, v39, v40, v41, v5, v49, v6, v7, v9, v8, v11, v10);
      return sub_1B29C6430(v58, v51, v52, v53, v54, v56, v59, v61, v48, v47, v46, v45, v44, v43);
    }
    goto LABEL_5;
  }
  if ((*(unsigned char *)(a1 + 104) & 0x10) == 0)
  {
LABEL_5:
    sub_1B2E831F8();
    sub_1B2D86CB0();
    sub_1B2999DAC();
    sub_1B2CF3864();
    sub_1B29A3374();
    sub_1B2999DAC();
    sub_1B2A32704();
    uint64_t v15 = swift_allocError();
    return sub_1B2D86D6C(v15, v16);
  }
  uint64_t v55 = v58 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v58 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v58 + 64);
  int64_t v57 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = 0;
  int64_t v21 = 0;
  if (!v19) {
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v60 = (v19 - 1) & v19;
  int64_t v62 = v21;
  for (unint64_t i = __clz(__rbit64(v19)) | (v21 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v25 << 6))
  {
    uint64_t v27 = *(void *)(v58 + 48) + 24 * i;
    uint64_t v28 = *(void *)v27;
    uint64_t v29 = *(void *)(v27 + 8);
    char v30 = *(unsigned char *)(v27 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2AF182C((uint64_t)v20);
    swift_isUniquelyReferenced_nonNull_native();
    unint64_t v31 = sub_1B2D86DBC();
    if (__OFADD__(v4[2], (v32 & 1) == 0))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    unint64_t v33 = v31;
    char v34 = v32;
    sub_1B29A3EB4(&qword_1E9C43B78);
    if (sub_1B2E83398())
    {
      unint64_t v35 = sub_1B2D86DBC();
      if ((v34 & 1) != (v36 & 1)) {
        goto LABEL_36;
      }
      unint64_t v33 = v35;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((v34 & 1) == 0)
    {
      sub_1B29E0090(v33, v28, v29, v30, MEMORY[0x1E4FBC870], v4);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_1B2A6DAD8();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_1B2AEE250;
    int64_t v21 = v62;
    unint64_t v19 = v60;
    if (v60) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v23 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      goto LABEL_34;
    }
    if (v23 >= v57) {
      goto LABEL_32;
    }
    unint64_t v24 = *(void *)(v55 + 8 * v23);
    int64_t v25 = v21 + 1;
    if (!v24)
    {
      int64_t v25 = v21 + 2;
      if (v21 + 2 >= v57) {
        goto LABEL_32;
      }
      unint64_t v24 = *(void *)(v55 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = v21 + 3;
        if (v21 + 3 >= v57) {
          goto LABEL_32;
        }
        unint64_t v24 = *(void *)(v55 + 8 * v25);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v60 = (v24 - 1) & v24;
    int64_t v62 = v25;
  }
  uint64_t v26 = v21 + 4;
  if (v21 + 4 >= v57)
  {
LABEL_32:
    swift_release();
    *(void *)a3 = v4;
    *(void *)(a3 + 8) = v51;
    *(void *)(a3 + 16) = v52;
    *(void *)(a3 + 24) = (unsigned __int16)v53;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(void *)(a3 + 96) = 0;
    *(unsigned char *)(a3 + 104) = 16;
    sub_1B29C65EC(v51, v52, v53);
    return sub_1B2AF182C((uint64_t)v20);
  }
  unint64_t v24 = *(void *)(v55 + 8 * v26);
  if (v24)
  {
    int64_t v25 = v21 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v25 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v25 >= v57) {
      goto LABEL_32;
    }
    unint64_t v24 = *(void *)(v55 + 8 * v25);
    ++v26;
    if (v24) {
      goto LABEL_23;
    }
  }
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t IndexQuery.impl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = sub_1B29A226C(a1);
  return sub_1B29C6430(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12, v13, v14, v15);
}

__n128 IndexQuery.impl.setter(long long *a1)
{
  long long v22 = a1[1];
  long long v23 = *a1;
  long long v21 = a1[2];
  long long v19 = a1[4];
  long long v20 = a1[3];
  __n128 v18 = (__n128)a1[5];
  uint64_t v2 = *((void *)a1 + 12);
  char v3 = *((unsigned char *)a1 + 104);
  __n128 v4 = sub_1B2D86CD4();
  sub_1B2A34A94(v5, v6, v7, v8, v9, v10, v11, v12, v4.n128_i64[0], v4.n128_i64[1], v15, v16, v13, v14);
  *(_OWORD *)uint64_t v1 = v23;
  *(_OWORD *)(v1 + 16) = v22;
  *(_OWORD *)(v1 + 32) = v21;
  *(_OWORD *)(v1 + 48) = v20;
  __n128 result = v18;
  *(_OWORD *)(v1 + 64) = v19;
  *(__n128 *)(v1 + 80) = v18;
  *(void *)(v1 + 96) = v2;
  *(unsigned char *)(v1 + 104) = v3;
  return result;
}

uint64_t (*IndexQuery.impl.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1B2D8431C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001B2EA2E40 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001B2EA2E60)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1B2D84408(char a1)
{
  if (a1) {
    return 0xD000000000000020;
  }
  else {
    return 0xD000000000000011;
  }
}

unint64_t sub_1B2D84444()
{
  return sub_1B2D84408(*v0);
}

uint64_t sub_1B2D8444C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D8431C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2D84474(uint64_t a1)
{
  unint64_t v2 = sub_1B2D84954();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D844B0(uint64_t a1)
{
  unint64_t v2 = sub_1B2D84954();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2D844EC(uint64_t a1)
{
  unint64_t v2 = sub_1B2D849A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D84528(uint64_t a1)
{
  unint64_t v2 = sub_1B2D849A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B2D84564(uint64_t a1)
{
  unint64_t v2 = sub_1B2D84A38();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D845A0(uint64_t a1)
{
  unint64_t v2 = sub_1B2D84A38();

  return MEMORY[0x1F41862B0](a1, v2);
}

void IndexQuery.IndexQueryImpl.encode(to:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1EB7D9F60);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B299B3C8();
  sub_1B29A3EB4(&qword_1EB7D9F68);
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B29A3EB4(&qword_1EB7D9F70);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B299ADB4();
  char v6 = *(unsigned char *)(v0 + 104);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2D84954();
  sub_1B2E83A38();
  if ((v6 & 0x10) != 0)
  {
    sub_1B2D849A0();
    sub_1B2E83618();
    sub_1B2D86DFC();
    sub_1B2D849EC();
  }
  else
  {
    sub_1B2D84A38();
    sub_1B2E83618();
    sub_1B2D86DFC();
    sub_1B2D84A84();
  }
  sub_1B2E836D8();
  sub_1B299B798();
  v7();
  sub_1B299B798();
  v8();
  sub_1B29998C8();
}

unint64_t sub_1B2D84954()
{
  unint64_t result = qword_1EB7D9E38;
  if (!qword_1EB7D9E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E38);
  }
  return result;
}

unint64_t sub_1B2D849A0()
{
  unint64_t result = qword_1E9C43AF0;
  if (!qword_1E9C43AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43AF0);
  }
  return result;
}

unint64_t sub_1B2D849EC()
{
  unint64_t result = qword_1E9C43AF8;
  if (!qword_1E9C43AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43AF8);
  }
  return result;
}

unint64_t sub_1B2D84A38()
{
  unint64_t result = qword_1EB7D9E20;
  if (!qword_1EB7D9E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E20);
  }
  return result;
}

unint64_t sub_1B2D84A84()
{
  unint64_t result = qword_1EB7D9E08;
  if (!qword_1EB7D9E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E08);
  }
  return result;
}

void IndexQuery.IndexQueryImpl.init(from:)()
{
  sub_1B299F300();
  uint64_t v3 = v2;
  uint64_t v36 = v4;
  sub_1B29A3EB4(&qword_1E9C43B00);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29A3EB4(&qword_1E9C43B08);
  sub_1B299D278();
  MEMORY[0x1F4188790](v6);
  sub_1B299B3C8();
  uint64_t v7 = sub_1B29A3EB4(&qword_1E9C43B10);
  sub_1B299D278();
  uint64_t v37 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1B299ADB4();
  sub_1B29AEC7C(v3, v3[3]);
  sub_1B2D84954();
  sub_1B2E83A18();
  if (v0) {
    goto LABEL_9;
  }
  uint64_t v46 = v3;
  uint64_t v10 = sub_1B2E835F8();
  uint64_t v11 = v7;
  if (!*(void *)(v10 + 16))
  {
    uint64_t v12 = v1;
    goto LABEL_7;
  }
  uint64_t v12 = v1;
  char v13 = *(unsigned char *)(v10 + 32);
  sub_1B29B142C(1);
  uint64_t v15 = v14;
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v15 != v17 >> 1)
  {
LABEL_7:
    uint64_t v18 = sub_1B2E83288();
    swift_allocError();
    long long v20 = v19;
    sub_1B29A3EB4(&qword_1E9C39038);
    *long long v20 = &type metadata for IndexQuery.IndexQueryImpl;
    sub_1B2E834F8();
    sub_1B2E83278();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x1E4FBBA70], v18);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v12, v11);
    uint64_t v3 = v46;
LABEL_9:
    uint64_t v21 = (uint64_t)v3;
    goto LABEL_10;
  }
  if (v13)
  {
    LOBYTE(v38) = 1;
    sub_1B2D849A0();
    sub_1B2D86E30();
    sub_1B2D85D28();
    sub_1B2E835B8();
    sub_1B299B798();
    v22();
    swift_unknownObjectRelease();
    uint64_t v23 = sub_1B299BD34();
    v24(v23);
    uint64_t v25 = v38;
    long long v26 = v39;
    long long v27 = 0uLL;
    long long v28 = (unsigned __int16)v40;
    char v29 = 16;
    long long v30 = 0uLL;
    long long v31 = 0uLL;
    long long v32 = 0uLL;
  }
  else
  {
    LOBYTE(v38) = 0;
    sub_1B2D84A38();
    sub_1B2D86E30();
    sub_1B2D85D74();
    sub_1B2E835B8();
    sub_1B299B798();
    v33();
    swift_unknownObjectRelease();
    uint64_t v34 = sub_1B299BD34();
    v35(v34);
    uint64_t v25 = v38;
    long long v26 = v39;
    long long v28 = v40;
    long long v27 = v41;
    long long v30 = v42;
    long long v31 = v43;
    long long v32 = v44;
    char v29 = v45;
  }
  *(void *)uint64_t v36 = v25;
  *(_OWORD *)(v36 + 8) = v26;
  *(_OWORD *)(v36 + 24) = v28;
  *(_OWORD *)(v36 + 40) = v27;
  *(_OWORD *)(v36 + 56) = v30;
  *(_OWORD *)(v36 + 72) = v31;
  *(_OWORD *)(v36 + 88) = v32;
  *(unsigned char *)(v36 + 104) = v29;
  uint64_t v21 = (uint64_t)v46;
LABEL_10:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v21);
  sub_1B29998C8();
}

void sub_1B2D84FA4()
{
}

void sub_1B2D84FBC()
{
}

uint64_t IndexQuery.TriplesIndexQuery.query.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = sub_1B29A226C(a1);
  return sub_1B29C64D0(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12, v13, v14, v15);
}

uint64_t IndexQuery.TriplesIndexQuery.description.getter()
{
  memcpy(__dst, v0, 0x69uLL);
  sub_1B2E831F8();
  sub_1B2E82518();
  sub_1B2D85DC0((uint64_t)__dst);
  sub_1B2CAF3F8(__dst);
  sub_1B2D85DC0((uint64_t)__dst);
  sub_1B2E82518();
  return 0;
}

uint64_t IndexQuery.TriplesIndexQuery.combine(query:combineType:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = *(void *)a1;
  uint64_t v27 = *(void *)(a1 + 8);
  uint64_t v25 = *(void *)(a1 + 16);
  uint64_t v31 = *(void *)(a1 + 24);
  uint64_t v32 = *(void *)(a1 + 32);
  uint64_t v33 = *(void *)(a1 + 40);
  uint64_t v34 = *(void *)(a1 + 48);
  uint64_t v35 = *(void *)(a1 + 56);
  uint64_t v22 = *(void *)(a1 + 72);
  uint64_t v23 = *(void *)(a1 + 64);
  uint64_t v24 = *(void *)(a1 + 80);
  uint64_t v26 = *(void *)(a1 + 88);
  uint64_t v29 = *(void *)(a1 + 96);
  unsigned __int8 v28 = *(unsigned char *)(a1 + 104);
  uint64_t v21 = *a2;
  sub_1B2D86CF4();
  uint64_t v5 = *(void *)(v3 + 40);
  uint64_t v16 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 48);
  uint64_t v6 = *(void *)(v3 + 56);
  uint64_t v9 = *(void *)(v3 + 64);
  uint64_t v8 = *(void *)(v3 + 72);
  uint64_t v10 = *(void *)(v3 + 80);
  uint64_t v11 = *(void *)(v3 + 88);
  uint64_t v12 = *(void *)(v3 + 96);
  unsigned __int8 v13 = *(unsigned char *)(v3 + 104);
  sub_1B29A3EB4((uint64_t *)&unk_1EB7D9AE0);
  uint64_t v14 = swift_allocObject();
  *(void *)a3 = v21;
  *(_OWORD *)(v14 + 16) = xmmword_1B2EBFA40;
  *(void *)(v14 + 32) = v20;
  *(void *)(v14 + 40) = v19;
  *(void *)(v14 + 48) = v18;
  *(void *)(v14 + 56) = v17;
  *(void *)(v14 + 64) = v16;
  *(void *)(v14 + 72) = v5;
  *(void *)(v14 + 80) = v7;
  *(void *)(v14 + 88) = v6;
  *(void *)(v14 + 96) = v9;
  *(void *)(v14 + 104) = v8;
  *(void *)(v14 + 112) = v10;
  *(void *)(v14 + 120) = v11;
  *(void *)(v14 + 128) = v12;
  *(unsigned char *)(v14 + 136) = v13;
  *(void *)(v14 + 144) = v30;
  *(void *)(v14 + 152) = v27;
  *(void *)(v14 + 160) = v25;
  *(void *)(v14 + 168) = v31;
  *(void *)(v14 + 176) = v32;
  *(void *)(v14 + 184) = v33;
  *(void *)(v14 + 192) = v34;
  *(void *)(v14 + 200) = v35;
  *(void *)(v14 + 208) = v23;
  *(void *)(v14 + 216) = v22;
  *(void *)(v14 + 224) = v24;
  *(void *)(v14 + 232) = v26;
  *(void *)(v14 + 240) = v29;
  *(unsigned char *)(v14 + 248) = v28;
  *(void *)(a3 + 8) = v14;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(void *)(a3 + 96) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  sub_1B29C64D0(v20, v19, v18, v17, v16, v5, v7, v6, v9, v8, v10, v11, v12, v13);
  return sub_1B29C64D0(v30, v27, v25, v31, v32, v33, v34, v35, v23, v22, v24, v26, v29, v28);
}

BOOL static IndexQuery.CombineType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

double IndexQuery.TriplesIndexQuery.join(joinCondition:incomingQuery:)@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = *a1;
  uint64_t v28 = *(void *)(a2 + 8);
  uint64_t v29 = *(void *)a2;
  uint64_t v26 = *(void *)(a2 + 24);
  uint64_t v27 = *(void *)(a2 + 16);
  uint64_t v24 = *(void *)(a2 + 40);
  uint64_t v25 = *(void *)(a2 + 32);
  uint64_t v22 = *(void *)(a2 + 56);
  uint64_t v23 = *(void *)(a2 + 48);
  uint64_t v35 = *(void *)(a2 + 72);
  uint64_t v36 = *(void *)(a2 + 64);
  uint64_t v33 = *(void *)(a2 + 88);
  uint64_t v34 = *(void *)(a2 + 80);
  uint64_t v32 = *(void *)(a2 + 96);
  unsigned __int8 v31 = *(unsigned char *)(a2 + 104);
  sub_1B2D86CF4();
  uint64_t v5 = *(void *)(v3 + 40);
  uint64_t v6 = *(void *)(v3 + 48);
  uint64_t v16 = *(void *)(v3 + 56);
  uint64_t v17 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t v8 = *(void *)(v3 + 72);
  uint64_t v9 = *(void *)(v3 + 80);
  uint64_t v10 = *(void *)(v3 + 88);
  uint64_t v11 = *(void *)(v3 + 96);
  unsigned __int8 v12 = *(unsigned char *)(v3 + 104);
  sub_1B29A3EB4((uint64_t *)&unk_1EB7D9AE0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B2EC00A0;
  *(void *)(v13 + 32) = v21;
  *(void *)(v13 + 40) = v20;
  *(void *)(v13 + 48) = v19;
  *(void *)(v13 + 56) = v18;
  *(void *)(v13 + 64) = v17;
  *(void *)(v13 + 72) = v5;
  *(void *)(v13 + 80) = v6;
  *(void *)(v13 + 88) = v16;
  *(void *)(v13 + 96) = v7;
  *(void *)(v13 + 104) = v8;
  *(void *)(v13 + 112) = v9;
  *(void *)(v13 + 120) = v10;
  *(void *)(v13 + 128) = v11;
  *(unsigned char *)(v13 + 136) = v12;
  sub_1B29C64D0(v21, v20, v19, v18, v17, v5, v6, v16, v7, v8, v9, v10, v11, v12);
  sub_1B29C64D0(v29, v28, v27, v26, v25, v24, v23, v22, v36, v35, v34, v33, v32, v31);
  sub_1B29B76B4();
  *(void *)(v14 + 16) = 2;
  *(void *)(v14 + 144) = v29;
  *(void *)(v14 + 152) = v28;
  *(void *)(v14 + 160) = v27;
  *(void *)(v14 + 168) = v26;
  *(void *)(v14 + 176) = v25;
  *(void *)(v14 + 184) = v24;
  *(void *)(v14 + 192) = v23;
  *(void *)(v14 + 200) = v22;
  *(void *)(v14 + 208) = v36;
  *(void *)(v14 + 216) = v35;
  *(void *)(v14 + 224) = v34;
  *(void *)(v14 + 232) = v33;
  *(void *)(v14 + 240) = v32;
  *(unsigned char *)(v14 + 248) = v31;
  *(void *)a3 = v30;
  *(void *)(a3 + 8) = v14;
  double result = 0.0;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(void *)(a3 + 96) = 0;
  *(unsigned char *)(a3 + 104) = -96;
  return result;
}

uint64_t sub_1B2D854E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7972657571 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2D85564()
{
  return 0x7972657571;
}

uint64_t sub_1B2D8557C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D854E4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2D855A8(uint64_t a1)
{
  unint64_t v2 = sub_1B2D85E18();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D855E4(uint64_t a1)
{
  unint64_t v2 = sub_1B2D85E18();

  return MEMORY[0x1F41862B0](a1, v2);
}

void IndexQuery.TriplesIndexQuery.encode(to:)()
{
  sub_1B299F300();
  sub_1B29A3EB4(&qword_1EB7D9F58);
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B2D86C4C();
  sub_1B2D85E18();
  sub_1B2D86E10();
  sub_1B29A0F44();
  sub_1B2D85E64();
  sub_1B2D86DDC();
  uint64_t v1 = sub_1B2D86D2C();
  v2(v1);
  sub_1B29998C8();
}

void IndexQuery.TriplesIndexQuery.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C43B28);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2D85E18();
  sub_1B29A4EDC();
  if (!v0)
  {
    sub_1B2D85EB0();
    sub_1B2D86D48();
    uint64_t v4 = sub_1B2D86D10();
    v5(v4);
    sub_1B29A53C4();
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  sub_1B29998C8();
}

void sub_1B2D857E4()
{
}

void sub_1B2D857FC()
{
}

uint64_t IndexQuery.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  unsigned __int8 v4 = *(unsigned char *)(v0 + 104);
  if ((v4 & 0x10) != 0) {
    return LiveGlobalKnowledge.IdSearchRequest.description.getter();
  }
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v27 = *(void *)(v0 + 88);
  uint64_t v28 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 48);
  uint64_t v31 = *(void *)(v0 + 40);
  uint64_t v29 = *(void *)(v0 + 56);
  uint64_t v30 = *(void *)(v0 + 32);
  v32[0] = *(void *)v0;
  v32[1] = v1;
  v32[2] = v3;
  void v32[3] = v2;
  v32[4] = v30;
  v32[5] = v31;
  v32[6] = v8;
  v32[7] = v29;
  uint64_t v26 = v6;
  v32[8] = v7;
  v32[9] = v28;
  v32[10] = v6;
  v32[11] = v27;
  uint64_t v9 = v6;
  v32[12] = v5;
  uint64_t v10 = v5;
  uint64_t v25 = v5;
  unsigned __int8 v33 = v4;
  sub_1B2E831F8();
  sub_1B2E82518();
  uint64_t v11 = sub_1B2D86D90();
  sub_1B29C64D0(v11, v12, v13, v14, v15, v16, v8, v29, v7, v28, v9, v27, v10, v4);
  sub_1B2CAF3F8(v32);
  uint64_t v17 = sub_1B2D86D90();
  sub_1B2A34A94(v17, v18, v19, v20, v21, v22, v23, v29, v7, v28, v26, v27, v25, v4);
  sub_1B2E82518();
  return 0;
}

uint64_t sub_1B2D85984(uint64_t a1, uint64_t a2)
{
  if (a1 == 1819307369 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B2D859FC()
{
  return 1819307369;
}

uint64_t sub_1B2D85A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B2D85984(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B2D85A3C(uint64_t a1)
{
  unint64_t v2 = sub_1B2D85EFC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D85A78(uint64_t a1)
{
  unint64_t v2 = sub_1B2D85EFC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void IndexQuery.encode(to:)()
{
  sub_1B299F300();
  sub_1B29A3EB4(&qword_1EB7D9F78);
  sub_1B299D278();
  MEMORY[0x1F4188790](v0);
  sub_1B2D86C4C();
  sub_1B2D85EFC();
  sub_1B2D86E10();
  sub_1B29A0F44();
  sub_1B2D85F48();
  sub_1B2D86DDC();
  uint64_t v1 = sub_1B2D86D2C();
  v2(v1);
  sub_1B29998C8();
}

void IndexQuery.init(from:)()
{
  sub_1B299F300();
  unint64_t v2 = v1;
  sub_1B29A3EB4(&qword_1E9C43B38);
  sub_1B299D278();
  MEMORY[0x1F4188790](v3);
  sub_1B29AEC7C(v2, v2[3]);
  sub_1B2D85EFC();
  sub_1B29A4EDC();
  if (!v0)
  {
    sub_1B2D85F94();
    sub_1B2D86D48();
    uint64_t v4 = sub_1B2D86D10();
    v5(v4);
    sub_1B29A53C4();
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  sub_1B29998C8();
}

void sub_1B2D85C78()
{
}

void sub_1B2D85C90()
{
}

uint64_t IndexQuery.CombineType.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t IndexQuery.CombineType.hashValue.getter()
{
  return sub_1B2E839E8();
}

unint64_t sub_1B2D85D28()
{
  unint64_t result = qword_1E9C43B18;
  if (!qword_1E9C43B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43B18);
  }
  return result;
}

unint64_t sub_1B2D85D74()
{
  unint64_t result = qword_1E9C43B20;
  if (!qword_1E9C43B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43B20);
  }
  return result;
}

uint64_t sub_1B2D85DC0(uint64_t a1)
{
  sub_1B2D86DA8();
  v8(v2, v3, v4, v5, v6, v7);
  return a1;
}

unint64_t sub_1B2D85E18()
{
  unint64_t result = qword_1EB7D9DF0;
  if (!qword_1EB7D9DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9DF0);
  }
  return result;
}

unint64_t sub_1B2D85E64()
{
  unint64_t result = qword_1EB7D9F40;
  if (!qword_1EB7D9F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9F40);
  }
  return result;
}

unint64_t sub_1B2D85EB0()
{
  unint64_t result = qword_1E9C43B30;
  if (!qword_1E9C43B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43B30);
  }
  return result;
}

unint64_t sub_1B2D85EFC()
{
  unint64_t result = qword_1EB7D9E58;
  if (!qword_1EB7D9E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E58);
  }
  return result;
}

unint64_t sub_1B2D85F48()
{
  unint64_t result = qword_1EB7D9E50;
  if (!qword_1EB7D9E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E50);
  }
  return result;
}

unint64_t sub_1B2D85F94()
{
  unint64_t result = qword_1E9C43B40;
  if (!qword_1E9C43B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43B40);
  }
  return result;
}

unint64_t sub_1B2D85FE4()
{
  unint64_t result = qword_1E9C43B48;
  if (!qword_1E9C43B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43B48);
  }
  return result;
}

uint64_t destroy for IndexQuery.IndexQueryImpl(uint64_t a1, uint64_t a2)
{
  return sub_1B2D86124(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B2A34A94);
}

uint64_t initializeWithCopy for IndexQuery.IndexQueryImpl(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B2D86190(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1B29C6430);
}

uint64_t assignWithCopy for IndexQuery.IndexQueryImpl(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B2D862A8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1B29C6430, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2A34A94);
}

void *_s6ClauseV11MatchClauseVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x69uLL);
}

uint64_t assignWithTake for IndexQuery.IndexQueryImpl(uint64_t a1)
{
  return sub_1B2D863CC(a1);
}

void type metadata accessor for IndexQuery()
{
}

uint64_t sub_1B2D860C0(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 104) >> 4) & 1;
}

uint64_t sub_1B2D860CC(uint64_t result)
{
  *(unsigned char *)(result + 104) &= ~0x10u;
  return result;
}

uint64_t sub_1B2D860DC(uint64_t result, char a2)
{
  char v2 = *(unsigned char *)(result + 104) & 0xE1 | (16 * (a2 & 1));
  *(void *)(result + 88) &= 1uLL;
  *(unsigned char *)(result + 104) = v2;
  return result;
}

void type metadata accessor for IndexQuery.IndexQueryImpl()
{
}

uint64_t destroy for IndexQuery.TriplesIndexQuery(uint64_t a1, uint64_t a2)
{
  return sub_1B2D86124(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B2A34B34);
}

uint64_t sub_1B2D86124(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 104);
  return a3(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), v4);
}

uint64_t initializeWithCopy for IndexQuery.TriplesIndexQuery(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B2D86190(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1B29C64D0);
}

uint64_t sub_1B2D86190(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v12 = a2[7];
  uint64_t v13 = a2[8];
  uint64_t v15 = a2[9];
  uint64_t v16 = a2[10];
  uint64_t v17 = a2[11];
  uint64_t v18 = a2[12];
  char v19 = *((unsigned char *)a2 + 104);
  a4(*a2, v6, v7, v8, v9, v10, v11, v12, v13, v15, v16, v17, v18, v19);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v16;
  *(void *)(a1 + 88) = v17;
  *(void *)(a1 + 96) = v18;
  *(unsigned char *)(a1 + 104) = v19;
  return a1;
}

uint64_t assignWithCopy for IndexQuery.TriplesIndexQuery(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B2D862A8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1B29C64D0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B2A34B34);
}

uint64_t sub_1B2D862A8(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v11 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v13 = a2[7];
  uint64_t v14 = a2[8];
  uint64_t v22 = a2[9];
  uint64_t v23 = a2[10];
  uint64_t v24 = a2[11];
  uint64_t v25 = a2[12];
  char v26 = *((unsigned char *)a2 + 104);
  a4(*a2, v7, v8, v9, v10, v11, v12, v13, v14, v22, v23, v24, v25, v26);
  sub_1B2D86CD4();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v22;
  *(void *)(a1 + 80) = v23;
  *(void *)(a1 + 88) = v24;
  *(void *)(a1 + 96) = v25;
  *(unsigned char *)(a1 + 104) = v26;
  a5(v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for IndexQuery.TriplesIndexQuery(uint64_t a1)
{
  return sub_1B2D863CC(a1);
}

uint64_t sub_1B2D863CC(uint64_t a1)
{
  sub_1B2D86DA8();
  long long v3 = v2[1];
  *(_OWORD *)a1 = *v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = v2[3];
  *(_OWORD *)(a1 + 32) = v2[2];
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = v2[5];
  *(_OWORD *)(a1 + 64) = v2[4];
  *(_OWORD *)(a1 + 80) = v5;
  *(void *)(a1 + 96) = v6;
  *(unsigned char *)(a1 + 104) = v7;
  v13(v8, v14, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TriplesQuery(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 105))
    {
      int v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *(void *)(a1 + 88) >> 1;
      if (v2 > 0x80000000) {
        int v3 = ~v2;
      }
      else {
        int v3 = -1;
      }
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for TriplesQuery(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 104) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 80) = 0;
      *(void *)(a1 + 88) = 2 * -a2;
      *(void *)(a1 + 96) = 0;
      *(unsigned char *)(a1 + 104) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for IndexQuery.TriplesIndexQuery()
{
}

void type metadata accessor for IndexQuery.CombineType()
{
}

ValueMetadata *type metadata accessor for IndexQuery.CodingKeys()
{
  return &type metadata for IndexQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for IndexQuery.TriplesIndexQuery.CodingKeys()
{
  return &type metadata for IndexQuery.TriplesIndexQuery.CodingKeys;
}

unsigned char *_s20IntelligencePlatform10IndexQueryV11CombineTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D8661CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IndexQuery.IndexQueryImpl.CodingKeys()
{
  return &type metadata for IndexQuery.IndexQueryImpl.CodingKeys;
}

ValueMetadata *type metadata accessor for IndexQuery.IndexQueryImpl.TriplesIndexQueryCodingKeys()
{
  return &type metadata for IndexQuery.IndexQueryImpl.TriplesIndexQueryCodingKeys;
}

unsigned char *_s20IntelligencePlatform10IndexQueryV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2D86700);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IndexQuery.IndexQueryImpl.LiveGlobalKnowledgeIdSearchQueryCodingKeys()
{
  return &type metadata for IndexQuery.IndexQueryImpl.LiveGlobalKnowledgeIdSearchQueryCodingKeys;
}

unint64_t sub_1B2D8673C()
{
  unint64_t result = qword_1E9C43B50;
  if (!qword_1E9C43B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43B50);
  }
  return result;
}

unint64_t sub_1B2D8678C()
{
  unint64_t result = qword_1E9C43B58;
  if (!qword_1E9C43B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43B58);
  }
  return result;
}

unint64_t sub_1B2D867DC()
{
  unint64_t result = qword_1E9C43B60;
  if (!qword_1E9C43B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43B60);
  }
  return result;
}

unint64_t sub_1B2D8682C()
{
  unint64_t result = qword_1E9C43B68;
  if (!qword_1E9C43B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43B68);
  }
  return result;
}

unint64_t sub_1B2D8687C()
{
  unint64_t result = qword_1E9C43B70;
  if (!qword_1E9C43B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43B70);
  }
  return result;
}

unint64_t sub_1B2D868CC()
{
  unint64_t result = qword_1EB7D9E68;
  if (!qword_1EB7D9E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E68);
  }
  return result;
}

unint64_t sub_1B2D8691C()
{
  unint64_t result = qword_1EB7D9E60;
  if (!qword_1EB7D9E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E60);
  }
  return result;
}

unint64_t sub_1B2D8696C()
{
  unint64_t result = qword_1EB7D9E00;
  if (!qword_1EB7D9E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E00);
  }
  return result;
}

unint64_t sub_1B2D869BC()
{
  unint64_t result = qword_1EB7D9DF8;
  if (!qword_1EB7D9DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9DF8);
  }
  return result;
}

unint64_t sub_1B2D86A0C()
{
  unint64_t result = qword_1EB7D9E30;
  if (!qword_1EB7D9E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E30);
  }
  return result;
}

unint64_t sub_1B2D86A5C()
{
  unint64_t result = qword_1EB7D9E28;
  if (!qword_1EB7D9E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E28);
  }
  return result;
}

unint64_t sub_1B2D86AAC()
{
  unint64_t result = qword_1EB7D9E18;
  if (!qword_1EB7D9E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E18);
  }
  return result;
}

unint64_t sub_1B2D86AFC()
{
  unint64_t result = qword_1EB7D9E10;
  if (!qword_1EB7D9E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E10);
  }
  return result;
}

unint64_t sub_1B2D86B4C()
{
  unint64_t result = qword_1EB7D9E48;
  if (!qword_1EB7D9E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E48);
  }
  return result;
}

unint64_t sub_1B2D86B9C()
{
  unint64_t result = qword_1EB7D9E40;
  if (!qword_1EB7D9E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7D9E40);
  }
  return result;
}

uint64_t sub_1B2D86BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  *(void *)(v37 - 216) = a31;
  *(void *)(v37 - 208) = a32;
  *(void *)(v37 - 200) = a25;
  *(void *)(v37 - 192) = a26;
  *(void *)(v37 - 184) = a27;
  *(void *)(v37 - 176) = a28;
  *(void *)(v37 - 168) = a29;
  *(void *)(v37 - 160) = a30;
  *(void *)(v37 - 152) = a33;
  *(void *)(v37 - 144) = a34;
  *(void *)(v37 - 136) = a35;
  *(void *)(v37 - 128) = a36;
  *(void *)(v37 - 120) = a37;
  *(unsigned char *)(v37 - 112) = *(_DWORD *)(v37 - 68);
  return v37 - 216;
}

void *sub_1B2D86C4C()
{
  long long v3 = *v0;
  *(_OWORD *)(v2 - 240) = v0[1];
  *(_OWORD *)(v2 - 224) = v3;
  *(_OWORD *)(v2 - 256) = v0[2];
  *(_OWORD *)(v2 - 272) = v0[3];
  *(_OWORD *)(v2 - 288) = v0[4];
  *(_OWORD *)(v2 - 304) = v0[5];
  return sub_1B29AEC7C(v1, v1[3]);
}

uint64_t sub_1B2D86CB0()
{
  return sub_1B2E82518();
}

__n128 sub_1B2D86CD4()
{
  return v0[4];
}

uint64_t sub_1B2D86D10()
{
  return v0;
}

uint64_t sub_1B2D86D2C()
{
  return v0;
}

uint64_t sub_1B2D86D48()
{
  return sub_1B2E835B8();
}

uint64_t sub_1B2D86D6C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_1B2D86D90()
{
  return v0;
}

__n128 sub_1B2D86DA8()
{
  return v0[4];
}

unint64_t sub_1B2D86DBC()
{
  return sub_1B29DB174();
}

uint64_t sub_1B2D86DDC()
{
  return sub_1B2E836D8();
}

void sub_1B2D86DFC()
{
  uint64_t v1 = *(void *)(v0 - 232);
  *(void *)(v0 - 200) = *(void *)(v0 - 240);
  *(void *)(v0 - 192) = v1;
}

uint64_t sub_1B2D86E10()
{
  return sub_1B2E83A38();
}

uint64_t sub_1B2D86E30()
{
  return sub_1B2E834E8();
}

void *sub_1B2D86E50(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    char v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    char v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = a3[7];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1B2E80668();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    swift_retain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[8];
    uint64_t v15 = (void *)((char *)v7 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    unint64_t v17 = *(void *)((char *)a2 + v14 + 88);
    unsigned __int8 v18 = *((unsigned char *)a2 + v14 + 104);
    if (v17 >> 1 == 0xFFFFFFFF && (v18 & 0x1E) == 0)
    {
      memcpy(v15, v16, 0x69uLL);
    }
    else
    {
      uint64_t v20 = *v16;
      uint64_t v21 = v16[1];
      uint64_t v22 = v16[2];
      uint64_t v23 = v16[3];
      uint64_t v39 = v16[5];
      uint64_t v40 = v16[4];
      uint64_t v37 = v16[7];
      uint64_t v38 = v16[6];
      uint64_t v41 = v16[8];
      uint64_t v42 = v16[9];
      uint64_t v43 = v16[10];
      uint64_t v44 = v16[12];
      sub_1B29C6430(*v16, v21, v22, v23, v40, v39, v38, v37, v41, v42, v43, v17, v44, v18);
      *uint64_t v15 = v20;
      v15[1] = v21;
      void v15[2] = v22;
      v15[3] = v23;
      v15[4] = v40;
      v15[5] = v39;
      void v15[6] = v38;
      v15[7] = v37;
      v15[8] = v41;
      v15[9] = v42;
      v15[10] = v43;
      v15[11] = v17;
      v15[12] = v44;
      *((unsigned char *)v15 + 104) = v18;
    }
    uint64_t v24 = a3[10];
    *(void *)((char *)v7 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *(void *)((char *)v7 + v24) = *(void *)((char *)a2 + v24);
    uint64_t v25 = a3[11];
    char v26 = (char *)v7 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = *(void *)((char *)a2 + v25);
    uint64_t v29 = *(void *)((char *)a2 + v25 + 8);
    unsigned __int8 v30 = *((unsigned char *)a2 + v25 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B29C65EC(v28, v29, v30);
    *(void *)char v26 = v28;
    *((void *)v26 + 1) = v29;
    v26[16] = v30;
    *((void *)v26 + 3) = *((void *)v27 + 3);
    uint64_t v31 = a3[12];
    uint64_t v32 = a3[13];
    unsigned __int8 v33 = (void *)((char *)v7 + v31);
    uint64_t v34 = (void *)((char *)a2 + v31);
    uint64_t v35 = v34[1];
    *unsigned __int8 v33 = *v34;
    v33[1] = v35;
    v33[2] = v34[2];
    *((unsigned char *)v7 + v32) = *((unsigned char *)a2 + v32);
    *((unsigned char *)v7 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1B2D870C0(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[8];
  unint64_t v7 = *(void *)(v6 + 88);
  unsigned __int8 v8 = *(unsigned char *)(v6 + 104);
  if (v7 >> 1 != 0xFFFFFFFF || (v8 & 0x1E) != 0) {
    sub_1B2A34A94(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(void *)(v6 + 72), *(void *)(v6 + 80), v7, *(void *)(v6 + 96), v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2A2A2C8(*(void *)(a1 + a2[11]), *(void *)(a1 + a2[11] + 8), *(unsigned char *)(a1 + a2[11] + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1B2D871F0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  unsigned __int8 v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  unint64_t v15 = *(void *)((char *)a2 + v12 + 88);
  unsigned __int8 v16 = *((unsigned char *)a2 + v12 + 104);
  if (v15 >> 1 == 0xFFFFFFFF && (v16 & 0x1E) == 0)
  {
    memcpy(v13, v14, 0x69uLL);
  }
  else
  {
    uint64_t v18 = *v14;
    uint64_t v19 = v14[1];
    uint64_t v20 = v14[2];
    uint64_t v21 = v14[3];
    uint64_t v37 = v14[5];
    uint64_t v38 = v14[4];
    uint64_t v35 = v14[7];
    uint64_t v36 = v14[6];
    uint64_t v39 = v14[8];
    uint64_t v40 = v14[9];
    uint64_t v41 = v14[10];
    uint64_t v42 = v14[12];
    sub_1B29C6430(*v14, v19, v20, v21, v38, v37, v36, v35, v39, v40, v41, v15, v42, v16);
    *uint64_t v13 = v18;
    v13[1] = v19;
    void v13[2] = v20;
    v13[3] = v21;
    v13[4] = v38;
    void v13[5] = v37;
    v13[6] = v36;
    v13[7] = v35;
    v13[8] = v39;
    v13[9] = v40;
    v13[10] = v41;
    v13[11] = v15;
    v13[12] = v42;
    *((unsigned char *)v13 + 104) = v16;
  }
  uint64_t v22 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
  uint64_t v23 = a3[11];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)((char *)a2 + v23);
  uint64_t v27 = *(void *)((char *)a2 + v23 + 8);
  unsigned __int8 v28 = *((unsigned char *)a2 + v23 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29C65EC(v26, v27, v28);
  *(void *)uint64_t v24 = v26;
  *((void *)v24 + 1) = v27;
  unsigned char v24[16] = v28;
  *((void *)v24 + 3) = *((void *)v25 + 3);
  uint64_t v29 = a3[12];
  uint64_t v30 = a3[13];
  uint64_t v31 = (void *)((char *)a1 + v29);
  uint64_t v32 = (void *)((char *)a2 + v29);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  v31[2] = v32[2];
  *((unsigned char *)a1 + v30) = *((unsigned char *)a2 + v30);
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1B2D87414(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  unsigned __int8 v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (void *)((char *)a2 + v10);
  unint64_t v13 = *(void *)((char *)a1 + v10 + 88);
  int v14 = *((unsigned char *)a1 + v10 + 104) & 0x1E;
  unint64_t v15 = *(void *)((char *)a2 + v10 + 88);
  unsigned __int8 v16 = *((unsigned char *)a2 + v10 + 104);
  BOOL v18 = (v16 & 0x1E) == 0 && v15 >> 1 == 0xFFFFFFFF;
  if (v13 >> 1 == 0xFFFFFFFF && v14 == 0)
  {
    if (!v18)
    {
      uint64_t v38 = v12[1];
      uint64_t v39 = v12[2];
      uint64_t v40 = v12[3];
      uint64_t v41 = v12[5];
      uint64_t v62 = v41;
      uint64_t v64 = v12[4];
      uint64_t v42 = v12[7];
      uint64_t v58 = v42;
      uint64_t v60 = v12[6];
      uint64_t v66 = v12[8];
      uint64_t v68 = v12[9];
      uint64_t v70 = v12[10];
      uint64_t v72 = v12[12];
      uint64_t v43 = *v12;
      sub_1B29C6430(v43, v38, v39, v40, v64, v41, v60, v42, v66, v68, v70, v15, v72, v16);
      *(void *)uint64_t v11 = v43;
      *((void *)v11 + 1) = v38;
      *((void *)v11 + 2) = v39;
      *((void *)v11 + 3) = v40;
      *((void *)v11 + 4) = v64;
      *((void *)v11 + 5) = v62;
      *((void *)v11 + 6) = v60;
      *((void *)v11 + 7) = v58;
      *((void *)v11 + 8) = v66;
      *((void *)v11 + 9) = v68;
      *((void *)v11 + 10) = v70;
      *((void *)v11 + 11) = v15;
      *((void *)v11 + 12) = v72;
      v11[104] = v16;
      goto LABEL_17;
    }
  }
  else
  {
    if (!v18)
    {
      uint64_t v20 = v12[1];
      uint64_t v63 = v20;
      uint64_t v65 = *v12;
      uint64_t v21 = v12[2];
      uint64_t v22 = v12[3];
      uint64_t v23 = v12[4];
      uint64_t v24 = v12[6];
      uint64_t v59 = v24;
      uint64_t v61 = v12[5];
      uint64_t v57 = v12[7];
      uint64_t v67 = v12[8];
      uint64_t v69 = v12[9];
      uint64_t v71 = v12[10];
      uint64_t v25 = v12[12];
      sub_1B29C6430(v65, v20, v21, v22, v23, v61, v24, v57, v67, v69, v71, v15, v25, v16);
      uint64_t v26 = *(void *)v11;
      uint64_t v27 = *((void *)v11 + 1);
      uint64_t v28 = *((void *)v11 + 2);
      uint64_t v29 = *((void *)v11 + 3);
      uint64_t v30 = *((void *)v11 + 4);
      uint64_t v31 = *((void *)v11 + 5);
      uint64_t v32 = *((void *)v11 + 6);
      uint64_t v33 = *((void *)v11 + 7);
      long long v34 = *((_OWORD *)v11 + 4);
      long long v35 = *((_OWORD *)v11 + 5);
      uint64_t v36 = *((void *)v11 + 12);
      unsigned __int8 v37 = v11[104];
      *(void *)uint64_t v11 = v65;
      *((void *)v11 + 1) = v63;
      *((void *)v11 + 2) = v21;
      *((void *)v11 + 3) = v22;
      *((void *)v11 + 4) = v23;
      *((void *)v11 + 5) = v61;
      *((void *)v11 + 6) = v59;
      *((void *)v11 + 7) = v57;
      *((void *)v11 + 8) = v67;
      *((void *)v11 + 9) = v69;
      *((void *)v11 + 10) = v71;
      *((void *)v11 + 11) = v15;
      *((void *)v11 + 12) = v25;
      v11[104] = v16;
      sub_1B2A34A94(v26, v27, v28, v29, v30, v31, v32, v33, v34, *((uint64_t *)&v34 + 1), v35, *((uint64_t *)&v35 + 1), v36, v37);
      goto LABEL_17;
    }
    sub_1B2C40FF8((uint64_t)v11);
  }
  memcpy(v11, v12, 0x69uLL);
LABEL_17:
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[11];
  char v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  uint64_t v47 = *(void *)((char *)a2 + v44);
  uint64_t v48 = *(void *)((char *)a2 + v44 + 8);
  unsigned __int8 v49 = *((unsigned char *)a2 + v44 + 16);
  sub_1B29C65EC(v47, v48, v49);
  uint64_t v50 = *(void *)v45;
  uint64_t v51 = *((void *)v45 + 1);
  *(void *)char v45 = v47;
  *((void *)v45 + 1) = v48;
  unsigned __int8 v52 = v45[16];
  v45[16] = v49;
  sub_1B2A2A2C8(v50, v51, v52);
  *((void *)v45 + 3) = *((void *)v46 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[12];
  uint64_t v54 = (void *)((char *)a1 + v53);
  uint64_t v55 = (char *)a2 + v53;
  *uint64_t v54 = *(void *)((char *)a2 + v53);
  v54[1] = *(void *)((char *)a2 + v53 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54[2] = *((void *)v55 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  return a1;
}

uint64_t sub_1B2D87788(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  memcpy((void *)(a1 + a3[8]), (const void *)(a2 + a3[8]), 0x69uLL);
  uint64_t v10 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[11];
  uint64_t v12 = a3[12];
  long long v13 = *(_OWORD *)(a2 + v11);
  long long v14 = *(_OWORD *)(a2 + v11 + 16);
  unint64_t v15 = (_OWORD *)(a1 + v11);
  *unint64_t v15 = v13;
  v15[1] = v14;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  uint64_t v18 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  return a1;
}

void *sub_1B2D87884(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (_OWORD *)((char *)a2 + v10);
  unint64_t v13 = *(void *)((char *)a1 + v10 + 88);
  unsigned __int8 v14 = *((unsigned char *)v11 + 104);
  if (v13 >> 1 == 0xFFFFFFFF && (v14 & 0x1E) == 0) {
    goto LABEL_11;
  }
  unint64_t v16 = *((void *)v12 + 11);
  char v17 = *((unsigned char *)v12 + 104);
  if (v16 >> 1 == 0xFFFFFFFF && (v17 & 0x1E) == 0)
  {
    sub_1B2C40FF8((uint64_t)v11);
LABEL_11:
    memcpy(v11, v12, 0x69uLL);
    goto LABEL_12;
  }
  uint64_t v19 = *((void *)v12 + 10);
  uint64_t v20 = *((void *)v12 + 12);
  uint64_t v21 = *v11;
  uint64_t v22 = v11[1];
  uint64_t v23 = v11[2];
  uint64_t v24 = v11[3];
  uint64_t v25 = v11[4];
  uint64_t v26 = v11[5];
  uint64_t v27 = v11[6];
  uint64_t v28 = v11[7];
  long long v29 = *((_OWORD *)v11 + 4);
  uint64_t v30 = v11[10];
  uint64_t v31 = v11[12];
  long long v32 = v12[1];
  *(_OWORD *)uint64_t v11 = *v12;
  *((_OWORD *)v11 + 1) = v32;
  long long v33 = v12[3];
  *((_OWORD *)v11 + 2) = v12[2];
  *((_OWORD *)v11 + 3) = v33;
  *((_OWORD *)v11 + 4) = v12[4];
  v11[10] = v19;
  v11[11] = v16;
  v11[12] = v20;
  *((unsigned char *)v11 + 104) = v17;
  sub_1B2A34A94(v21, v22, v23, v24, v25, v26, v27, v28, v29, *((uint64_t *)&v29 + 1), v30, v13, v31, v14);
LABEL_12:
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[11];
  long long v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  LOBYTE(v34) = *((unsigned char *)a2 + v34 + 16);
  uint64_t v37 = *(void *)v35;
  uint64_t v38 = *((void *)v35 + 1);
  *(_OWORD *)long long v35 = *(_OWORD *)v36;
  unsigned __int8 v39 = v35[16];
  v35[16] = v34;
  sub_1B2A2A2C8(v37, v38, v39);
  *((void *)v35 + 3) = *((void *)v36 + 3);
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[12];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = *(void *)((char *)a2 + v40 + 8);
  *uint64_t v41 = *(void *)((char *)a2 + v40);
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v41[2] = *((void *)v42 + 2);
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *((unsigned char *)a1 + v44) = *((unsigned char *)a2 + v44);
  return a1;
}

uint64_t sub_1B2D87A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2D87AA8);
}

uint64_t sub_1B2D87AA8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1B2E80668();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 28);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1B2D87B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2D87B44);
}

void *sub_1B2D87B44(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1B2E80668();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 28);
    return (void *)_s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for QueryContext()
{
  uint64_t result = qword_1EB7D95D8;
  if (!qword_1EB7D95D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B2D87C0C()
{
  uint64_t result = sub_1B2E80668();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B2D87CF8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v41 = *v1;
  if (v3)
  {
    swift_retain();
  }
  else
  {
    type metadata accessor for ResultGraph();
    uint64_t v3 = swift_allocObject();
    swift_retain();
    *(void *)(v3 + 16) = sub_1B2E82148();
    *(void *)(v3 + 24) = v4;
  }
  uint64_t v40 = v3;
  uint64_t v39 = v1[2];
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v6 = Context[7];
  uint64_t v7 = (char *)v1 + v6;
  uint64_t v8 = (char *)a1 + v6;
  uint64_t v9 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v8, v7, v9);
  uint64_t v10 = (char *)v1 + Context[8];
  uint64_t v11 = *((void *)v10 + 1);
  uint64_t v35 = *(void *)v10;
  uint64_t v12 = *((void *)v10 + 2);
  uint64_t v42 = *((void *)v10 + 3);
  uint64_t v31 = *((void *)v10 + 4);
  uint64_t v32 = *((void *)v10 + 5);
  uint64_t v33 = *((void *)v10 + 6);
  uint64_t v34 = *((void *)v10 + 7);
  uint64_t v13 = *((void *)v10 + 9);
  uint64_t v46 = *((void *)v10 + 8);
  uint64_t v14 = *((void *)v10 + 10);
  unint64_t v15 = *((void *)v10 + 11);
  uint64_t v16 = *((void *)v10 + 12);
  uint64_t v45 = *(void *)((char *)v1 + Context[9]);
  unsigned __int8 v17 = v10[104];
  char v37 = *((unsigned char *)v1 + Context[13]);
  uint64_t v30 = *(void *)((char *)v1 + Context[10]);
  uint64_t v18 = (char *)v1 + Context[11];
  uint64_t v43 = *(void *)v18;
  uint64_t v44 = *((void *)v18 + 1);
  uint64_t v47 = *((void *)v18 + 3);
  char v38 = *((unsigned char *)v1 + Context[14]);
  unsigned __int8 v19 = v18[16];
  unsigned __int8 v36 = v19;
  swift_retain();
  sub_1B2A349B4(v35, v11, v12, v42, v31, v32, v33, v34, v46, v13, v14, v15, v16, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29C65EC(v43, v44, v19);
  swift_bridgeObjectRetain();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v22 = Context[8];
  uint64_t v23 = Context[10];
  uint64_t v24 = Context[12];
  uint64_t v25 = Context[13];
  uint64_t v26 = Context[14];
  *a1 = v41;
  a1[1] = v40;
  a1[2] = v39;
  uint64_t v27 = (char *)a1 + v22;
  *(void *)uint64_t v27 = v35;
  *((void *)v27 + 1) = v11;
  *((void *)v27 + 2) = v12;
  *((void *)v27 + 3) = v42;
  *((void *)v27 + 4) = v31;
  *((void *)v27 + 5) = v32;
  *((void *)v27 + 6) = v33;
  *((void *)v27 + 7) = v34;
  *((void *)v27 + 8) = v46;
  *((void *)v27 + 9) = v13;
  *((void *)v27 + 10) = v14;
  *((void *)v27 + 11) = v15;
  *((void *)v27 + 12) = v16;
  v27[104] = v17;
  *(void *)((char *)a1 + Context[9]) = v45;
  *((unsigned char *)a1 + v25) = v37;
  uint64_t v28 = (void *)((char *)a1 + v24);
  v28[1] = v20;
  _OWORD v28[2] = v20;
  *uint64_t v28 = 0;
  *(void *)((char *)a1 + v23) = v30;
  long long v29 = (char *)a1 + Context[11];
  *(void *)long long v29 = v43;
  *((void *)v29 + 1) = v44;
  v29[16] = v36;
  *((void *)v29 + 3) = v47;
  *((unsigned char *)a1 + v26) = v38;
  return result;
}

void sub_1B2D87FDC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v62 = *(void *)(a2 + 64);
  uint64_t v63 = *(void *)(a2 + 56);
  uint64_t v60 = *(void *)(a2 + 80);
  uint64_t v61 = *(void *)(a2 + 72);
  uint64_t v58 = *(void *)(a2 + 96);
  uint64_t v59 = *(void *)(a2 + 88);
  HIDWORD(v57) = *(unsigned __int8 *)(a2 + 104);
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v14 = v3 + Context[8];
  unint64_t v15 = *(void *)(v14 + 88);
  int v16 = *(unsigned char *)(v14 + 104) & 0x1E;
  if (v15 >> 1 == 0xFFFFFFFF && v16 == 0)
  {
    *(_OWORD *)a3 = xmmword_1B2EEE440;
    a3[2] = 0x80000001B2EA2EF0;
  }
  else
  {
    uint64_t v18 = *(void *)(a1 + 48);
    uint64_t v19 = 50 * v18;
    if ((unsigned __int128)(v18 * (__int128)50) >> 64 == (50 * v18) >> 63)
    {
      uint64_t v20 = Context[12];
      uint64_t v21 = *(void *)(v3 + v20);
      BOOL v22 = __OFADD__(v21, 1);
      uint64_t v23 = v21 + 1;
      if (!v22)
      {
        char v24 = *(unsigned char *)(a1 + 64);
        uint64_t v25 = v12;
        uint64_t v26 = *(void *)(v3 + Context[10]);
        uint64_t v27 = v3 + Context[11];
        uint64_t v28 = v11;
        uint64_t v29 = v10;
        uint64_t v31 = *(void *)v27;
        uint64_t v30 = *(void *)(v27 + 8);
        uint64_t v32 = v9;
        unsigned __int8 v33 = *(unsigned char *)(v27 + 16);
        uint64_t v34 = v8;
        uint64_t v35 = *(void *)(v27 + 24);
        *(void *)(v3 + v20) = v23;
        *(unsigned char *)(a1 + 80) = 1;
        uint64_t v36 = *(void *)(v3 + Context[9]);
        uint64_t v72 = v35;
        uint64_t v73 = v36;
        LOBYTE(v70[0]) = v24;
        v70[1] = v19;
        v70[2] = v26;
        v70[3] = v31;
        v70[4] = v30;
        unsigned __int8 v71 = v33;
        v68[0] = v6;
        v68[1] = (uint64_t)v7;
        v68[2] = v34;
        v68[3] = v32;
        v68[4] = v29;
        v68[5] = v28;
        v68[6] = v25;
        v68[7] = v63;
        v68[8] = v62;
        v68[9] = v61;
        v68[10] = v60;
        v68[11] = v59;
        v68[12] = v58;
        char v69 = BYTE4(v57);
        swift_bridgeObjectRetain();
        sub_1B29C65EC(v31, v30, v33);
        swift_bridgeObjectRetain();
        sub_1B2C45950((unsigned __int8 *)v70, v68, a3);
        swift_bridgeObjectRelease();
        sub_1B2A2A2C8(v31, v30, v33);
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    swift_once();
    uint64_t v37 = sub_1B2E81FB8();
    sub_1B29A4B98(v37, (uint64_t)qword_1EB7E30D8);
    id v38 = (id)a1;
    id v39 = (id)a1;
    uint64_t v40 = sub_1B2E81F98();
    os_log_type_t v41 = sub_1B2E82DB8();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      v68[0] = v43;
      *(_DWORD *)uint64_t v42 = 136315138;
      v70[0] = a1;
      id v44 = (id)a1;
      sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
      uint64_t v45 = sub_1B2E823E8();
      sub_1B29BF6BC(v45, v46, (uint64_t)v68, v47, v48, v49, v50, v51, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66,
        v67);
      v70[0] = v52;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B2996000, v40, v41, "QueryContext: indexExecute: error from index handler execution: %s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3EB30C0](v43, -1, -1);
      MEMORY[0x1B3EB30C0](v42, -1, -1);
    }
    else
    {
    }
    swift_getErrorValue();
    uint64_t v53 = sub_1B2E838A8();
    uint64_t v55 = v54;

    void *v7 = 0;
    v7[1] = v53;
    v7[2] = v55;
  }
}

ValueMetadata *type metadata accessor for QueryContextRanker()
{
  return &type metadata for QueryContextRanker;
}

uint64_t sub_1B2D883C4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2DCA5B0();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1B2D887D8(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1B2D88430(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v34 = *a2;
  uint64_t v32 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v33 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v9 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(a1 + 48) + 8 * i);
    uint64_t v36 = v16;
    unsigned __int8 v17 = sub_1B2D8917C(&v36, a3);
    if (v4)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    uint64_t v18 = v17;
    uint64_t v36 = v34;
    uint64_t v4 = 0;
    sub_1B2D8917C(&v36, a3);
    sub_1B29A3EB4(&qword_1E9C43B80);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
    *(void *)(inited + 32) = v16;
    *(void *)(inited + 40) = v18;
    sub_1B29A3EB4(&qword_1E9C42F20);
    sub_1B2A4B170();
    uint64_t v20 = sub_1B2E82148();
    uint64_t v21 = MEMORY[0x1F4188790](v20);
    sub_1B2D88DF4(v21, (double (*)(uint64_t *, void *, uint64_t))sub_1B2D887D0);
    uint64_t v23 = sub_1B2AF89F0(v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_1B2A17390(v23);
    char v26 = v25;
    swift_bridgeObjectRelease();
    if (v26)
    {
      uint64_t v24 = 0;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_19;
      }
    }
    else if (swift_isUniquelyReferenced_nonNull_native())
    {
      goto LABEL_19;
    }
    sub_1B29B805C();
    uint64_t v10 = v29;
LABEL_19:
    unint64_t v27 = *(void *)(v10 + 16);
    if (v27 >= *(void *)(v10 + 24) >> 1)
    {
      sub_1B29B805C();
      uint64_t v10 = v30;
    }
    *(void *)(v10 + 16) = v27 + 1;
    uint64_t v28 = v10 + 16 * v27;
    *(void *)(v28 + 32) = v16;
    *(void *)(v28 + 40) = v24;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v9 >= v33) {
      goto LABEL_30;
    }
    unint64_t v14 = *(void *)(v32 + 8 * v9);
    if (!v14) {
      break;
    }
LABEL_15:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v9 + 1;
  if (v9 + 1 >= v33) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v9 + 2;
  if (v9 + 2 >= v33) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14)
  {
LABEL_14:
    int64_t v9 = v15;
    goto LABEL_15;
  }
  int64_t v15 = v9 + 3;
  if (v9 + 3 < v33)
  {
    unint64_t v14 = *(void *)(v32 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v9 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v9 >= v33) {
          goto LABEL_30;
        }
        unint64_t v14 = *(void *)(v32 + 8 * v9);
        ++v15;
        if (v14) {
          goto LABEL_15;
        }
      }
    }
    goto LABEL_14;
  }
LABEL_30:
  swift_release();
  uint64_t v36 = v10;
  swift_bridgeObjectRetain_n();
  sub_1B2D883C4(&v36);
  if (!v4)
  {
    swift_bridgeObjectRelease_n();
    return v36;
  }
LABEL_34:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1B2D887D0(void *a1, void *a2, uint64_t a3)
{
  return sub_1B2D8A6AC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1B2D887D8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1B2D7D1F4(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1B29B6AE4(v3 / 2);
  BOOL v87 = a1;
  uint64_t v88 = result;
  unint64_t v92 = v6;
  uint64_t v90 = v3;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    unint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_90:
    if (v31 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v90 >= -1)
      {
        *(void *)(v88 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    uint64_t v80 = *v87;
    while (1)
    {
      unint64_t v81 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v80) {
        goto LABEL_133;
      }
      uint64_t v82 = *(void *)(v9 + 32 + 16 * v81);
      uint64_t v83 = *(void *)(v9 + 32 + 16 * (v31 - 1) + 8);
      uint64_t result = sub_1B2D7D260((double *)(v80 + 16 * v82), (double *)(v80 + 16 * *(void *)(v9 + 32 + 16 * (v31 - 1))), v80 + 16 * v83, v92);
      if (v1) {
        goto LABEL_86;
      }
      if (v83 < v82) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B2DCA54C();
        uint64_t v9 = result;
      }
      if (v81 >= *(void *)(v9 + 16)) {
        goto LABEL_120;
      }
      uint64_t v84 = (void *)(v9 + 32 + 16 * v81);
      *uint64_t v84 = v82;
      v84[1] = v83;
      unint64_t v85 = *(void *)(v9 + 16);
      if (v31 > v85) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v31 - 1)), (const void *)(v9 + 32 + 16 * v31), 16 * (v85 - v31));
      *(void *)(v9 + 16) = v85 - 1;
      unint64_t v31 = v85 - 1;
      if (v85 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v86 = *a1 + 40;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v89 = v5;
  uint64_t v91 = *a1;
  while (1)
  {
    uint64_t v10 = v7++;
    if (v7 < v3)
    {
      double v11 = *(double *)(v8 + 16 * v7 + 8);
      double v12 = *(double *)(v8 + 16 * v10 + 8);
      uint64_t v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        uint64_t v13 = (double *)(v86 + 16 * v10);
        double v14 = v11;
        while (1)
        {
          double v15 = v14;
          double v14 = *v13;
          if (v12 < v11 == v15 >= *v13) {
            break;
          }
          ++v7;
          v13 += 2;
          if (v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v12 < v11)
      {
        if (v7 < v10) {
          goto LABEL_126;
        }
        if (v10 < v7)
        {
          uint64_t v16 = 16 * v7;
          uint64_t v17 = 16 * v10;
          uint64_t v18 = v7;
          uint64_t v19 = v10;
          do
          {
            if (v19 != --v18)
            {
              if (!v8) {
                goto LABEL_132;
              }
              uint64_t v20 = v8 + v16;
              uint64_t v21 = *(void *)(v8 + v17);
              uint64_t v22 = *(void *)(v8 + v17 + 8);
              *(_OWORD *)(v8 + v17) = *(_OWORD *)(v8 + v16 - 16);
              *(void *)(v20 - 16) = v21;
              *(void *)(v20 - 8) = v22;
            }
            ++v19;
            v16 -= 16;
            v17 += 16;
          }
          while (v19 < v18);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_123;
      }
      if (v7 - v10 < v5)
      {
        uint64_t v23 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_127;
        }
        if (v23 >= v3) {
          uint64_t v23 = v3;
        }
        if (v23 < v10) {
          goto LABEL_128;
        }
        if (v7 != v23)
        {
          uint64_t v24 = (double *)(v8 + 16 * v7);
          do
          {
            double v25 = *(double *)(v8 + 16 * v7 + 8);
            uint64_t v26 = v10;
            unint64_t v27 = v24;
            do
            {
              if (*(v27 - 1) >= v25) {
                break;
              }
              if (!v8) {
                goto LABEL_130;
              }
              double v28 = *v27;
              *(_OWORD *)unint64_t v27 = *((_OWORD *)v27 - 1);
              *(v27 - 1) = v25;
              *(v27 - 2) = v28;
              v27 -= 2;
              ++v26;
            }
            while (v7 != v26);
            ++v7;
            v24 += 2;
          }
          while (v7 != v23);
          uint64_t v7 = v23;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v30 = *(void *)(v9 + 16);
    unint64_t v29 = *(void *)(v9 + 24);
    unint64_t v31 = v30 + 1;
    uint64_t v8 = v91;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B2DCA454((char *)(v29 > 1), v30 + 1, 1, (char *)v9);
      uint64_t v8 = v91;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v31;
    uint64_t v32 = v9 + 32;
    int64_t v33 = (uint64_t *)(v9 + 32 + 16 * v30);
    *int64_t v33 = v10;
    v33[1] = v7;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_81:
    uint64_t v5 = v89;
    uint64_t v3 = v90;
    if (v7 >= v90) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    unint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      unint64_t v39 = v32 + 16 * v31;
      uint64_t v40 = *(void *)(v39 - 64);
      uint64_t v41 = *(void *)(v39 - 56);
      BOOL v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_107;
      }
      uint64_t v44 = *(void *)(v39 - 48);
      uint64_t v43 = *(void *)(v39 - 40);
      BOOL v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      char v38 = v45;
      if (v45) {
        goto LABEL_108;
      }
      unint64_t v46 = v31 - 2;
      uint64_t v47 = (uint64_t *)(v32 + 16 * (v31 - 2));
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      BOOL v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_109;
      }
      BOOL v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_111;
      }
      if (v51 >= v42)
      {
        char v69 = (uint64_t *)(v32 + 16 * v34);
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        BOOL v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_117;
        }
        BOOL v62 = v37 < v72;
        goto LABEL_70;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *(void *)(v9 + 32);
        uint64_t v64 = *(void *)(v9 + 40);
        BOOL v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        char v57 = v45;
        goto LABEL_64;
      }
      uint64_t v36 = *(void *)(v9 + 32);
      uint64_t v35 = *(void *)(v9 + 40);
      BOOL v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      char v38 = v45;
    }
    if (v38) {
      goto LABEL_110;
    }
    unint64_t v46 = v31 - 2;
    uint64_t v52 = (uint64_t *)(v32 + 16 * (v31 - 2));
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    BOOL v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    char v57 = v55;
    if (v55) {
      goto LABEL_112;
    }
    uint64_t v58 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    BOOL v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_114;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_116;
    }
    if (v56 + v61 >= v37)
    {
      BOOL v62 = v37 < v61;
LABEL_70:
      if (v62) {
        unint64_t v34 = v46;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v57) {
      goto LABEL_113;
    }
    uint64_t v65 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    BOOL v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_115;
    }
    if (v68 < v56) {
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v73 = v9;
    unint64_t v74 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    uint64_t v75 = (uint64_t *)(v32 + 16 * v74);
    uint64_t v76 = *v75;
    uint64_t v77 = (void *)(v32 + 16 * v34);
    uint64_t v78 = v77[1];
    uint64_t result = sub_1B2D7D260((double *)(v8 + 16 * *v75), (double *)(v8 + 16 * *v77), v8 + 16 * v78, v92);
    if (v1) {
      break;
    }
    if (v78 < v76) {
      goto LABEL_104;
    }
    if (v34 > *(void *)(v73 + 16)) {
      goto LABEL_105;
    }
    *uint64_t v75 = v76;
    *(void *)(v32 + 16 * v74 + 8) = v78;
    unint64_t v79 = *(void *)(v73 + 16);
    if (v34 >= v79) {
      goto LABEL_106;
    }
    uint64_t v9 = v73;
    unint64_t v31 = v79 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v32 + 16 * v34), v77 + 2, 16 * (v79 - 1 - v34));
    *(void *)(v73 + 16) = v79 - 1;
    uint64_t v8 = v91;
    if (v79 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v90 < -1) {
    goto LABEL_125;
  }
  *(void *)(v88 + 16) = 0;
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for QueryContextSimilarity()
{
  return &type metadata for QueryContextSimilarity;
}

void sub_1B2D88DF4(uint64_t a1, double (*a2)(uint64_t *, void *, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1B29C0330();
    uint64_t v4 = v20;
    uint64_t v5 = sub_1B2B1D160(a1);
    if ((v5 & 0x8000000000000000) == 0)
    {
      unint64_t v7 = v5;
      if (v5 < 1 << *(unsigned char *)(a1 + 32))
      {
        int v8 = v6;
        uint64_t v9 = a1 + 64;
        while ((*(void *)(v9 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
        {
          if (v8 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v17 = v2;
          uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8 * v7);
          v18[0] = *(void *)(*(void *)(a1 + 48) + 8 * v7);
          v18[1] = v10;
          swift_bridgeObjectRetain();
          double v11 = a2(&v19, v18, v10);
          swift_bridgeObjectRelease();
          uint64_t v12 = v19;
          uint64_t v20 = v4;
          unint64_t v13 = *(void *)(v4 + 16);
          if (v13 >= *(void *)(v4 + 24) >> 1)
          {
            sub_1B29C0330();
            uint64_t v4 = v20;
          }
          *(void *)(v4 + 16) = v13 + 1;
          uint64_t v14 = v4 + 16 * v13;
          *(void *)(v14 + 32) = v12;
          *(double *)(v14 + 40) = v11;
          if ((uint64_t)v7 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v9 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v7 >> 6)) & (1 << v7)) == 0) {
            goto LABEL_20;
          }
          if (v8 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v15 = sub_1B2E830E8();
          uint64_t v2 = v17 - 1;
          if (v17 == 1) {
            return;
          }
          unint64_t v7 = v15;
          if ((v15 & 0x8000000000000000) == 0)
          {
            int v8 = *(_DWORD *)(a1 + 36);
            if (v15 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

char *sub_1B2D88FF4(char *result, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)result;
  uint64_t v5 = *a2;
  if (*(void *)result != *a2)
  {
    uint64_t v13 = *(void *)result;
    uint64_t result = sub_1B2D8917C(&v13, a3);
    if (!v3)
    {
      unint64_t v7 = result;
      uint64_t v13 = v5;
      sub_1B2D8917C(&v13, a3);
      sub_1B29A3EB4(&qword_1E9C43B80);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
      *(void *)(inited + 32) = v4;
      *(void *)(inited + 40) = v7;
      sub_1B29A3EB4(&qword_1E9C42F20);
      sub_1B2A4B170();
      uint64_t v9 = sub_1B2E82148();
      uint64_t v10 = MEMORY[0x1F4188790](v9);
      sub_1B2D88DF4(v10, (double (*)(uint64_t *, void *, uint64_t))sub_1B2D887D0);
      uint64_t v12 = sub_1B2AF89F0(v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2A17390(v12);
      return (char *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *sub_1B2D8917C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = sub_1B29A3EB4(&qword_1E9C43B88);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  int v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v53 - v9;
  uint64_t v11 = sub_1B29A3EB4(&qword_1E9C3A148);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v53 - v16;
  uint64_t v59 = *a1;
  sub_1B2D89DF4(a2, 0xD00000000000001DLL, 0x80000001B2EA2F10);
  if (!v2)
  {
    uint64_t v58 = (uint8_t *)a2;
    sub_1B29B2858();
    swift_bridgeObjectRelease();
    int v18 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v11);
    BOOL v55 = v8;
    if (v18 == 1)
    {
      BOOL v62 = &unk_1F0ABB050;
      sub_1B29A3EB4(&qword_1E9C42F20);
      sub_1B29D22C4(&qword_1E9C43B90, &qword_1E9C42F20);
      sub_1B2E81FD8();
      sub_1B2D899C0((uint64_t)v10);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    }
    uint64_t v57 = sub_1B29D22C4(&qword_1E9C43B98, &qword_1E9C3A148);
    uint64_t v19 = sub_1B2E81FF8();
    char v20 = sub_1B2AA7F54(v19, (uint64_t)&unk_1F0ABAFB0);
    swift_bridgeObjectRelease();
    if (v20)
    {
      uint64_t v56 = v12;
      if (qword_1E9C37A28 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1B2E81FB8();
      sub_1B29A4B98(v21, (uint64_t)qword_1E9C37A08);
      uint64_t v22 = sub_1B2E81F98();
      os_log_type_t v23 = sub_1B2E82DB8();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        BOOL v62 = (void *)swift_slowAlloc();
        uint64_t v54 = v15;
        *(_DWORD *)uint64_t v24 = 136315138;
        uint64_t v53 = v24 + 4;
        uint64_t v60 = v59;
        uint64_t v25 = EntityIdentifier.stringValue.getter();
        sub_1B29BF6BC(v25, v26, (uint64_t)&v62, v27, v28, v29, v30, v31, (uint64_t)v53, (unint64_t)v54, (uint64_t)v55, v56, v57, (uint64_t)v58, v59, v60, v61, (uint64_t)v62, v63,
          v64);
        sub_1B299DE8C(v32);
        uint64_t v15 = v54;
        sub_1B2E82FB8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B2996000, v22, v23, "Failed to find embedding vector for %s in feature entity_popularity_day_of_week", v24, 0xCu);
        swift_arrayDestroy();
        sub_1B299B750();
        sub_1B299B750();
      }

      uint64_t v12 = v56;
    }
    sub_1B2D89DF4((uint64_t)v58, 0xD00000000000001DLL, 0x80000001B2EA2F30);
    uint64_t v34 = (uint64_t)v55;
    sub_1B29B2858();
    swift_bridgeObjectRelease();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v34, 1, v11) == 1)
    {
      BOOL v62 = &unk_1F0ABAFD8;
      sub_1B29A3EB4(&qword_1E9C42F20);
      sub_1B29D22C4(&qword_1E9C43B90, &qword_1E9C42F20);
      sub_1B2E81FD8();
      sub_1B2D899C0(v34);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v15, v34, v11);
    }
    uint64_t v35 = sub_1B2E81FF8();
    char v36 = sub_1B2AA7F54(v35, (uint64_t)&unk_1F0ABB028);
    swift_bridgeObjectRelease();
    if (v36)
    {
      uint64_t v56 = v12;
      if (qword_1E9C37A28 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1B2E81FB8();
      sub_1B29A4B98(v37, (uint64_t)qword_1E9C37A08);
      char v38 = sub_1B2E81F98();
      os_log_type_t v39 = sub_1B2E82DB8();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        uint64_t v54 = v15;
        uint64_t v41 = (uint8_t *)v40;
        BOOL v62 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = 136315138;
        uint64_t v58 = v41 + 4;
        uint64_t v60 = v59;
        uint64_t v42 = EntityIdentifier.stringValue.getter();
        sub_1B29BF6BC(v42, v43, (uint64_t)&v62, v44, v45, v46, v47, v48, (uint64_t)v53, (unint64_t)v54, (uint64_t)v55, v56, v57, (uint64_t)v58, v59, v60, v61, (uint64_t)v62, v63,
          v64);
        sub_1B299DE8C(v49);
        sub_1B2E82FB8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B2996000, v38, v39, "Failed to find embedding vector for %s in feature entity_popularity_hour_of_day", v41, 0xCu);
        swift_arrayDestroy();
        sub_1B299B750();
        uint64_t v15 = v54;
        sub_1B299B750();
      }

      uint64_t v12 = v56;
    }
    uint64_t v50 = sub_1B2E81FF8();
    uint64_t v51 = sub_1B2E81FF8();
    uint64_t v10 = (char *)sub_1B2D89884(v50, v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = *(void (**)(char *, uint64_t))(v12 + 8);
    v52(v15, v11);
    v52(v17, v11);
  }
  return v10;
}

uint64_t sub_1B2D89884(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  do
  {
    if (v4)
    {
      double v8 = *(double *)(v5 + 8 * v6);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B29B7848();
        uint64_t v7 = v13;
      }
      uint64_t v9 = 0;
      unint64_t v10 = *(void *)(v7 + 16);
      do
      {
        double v11 = *(double *)(a2 + 8 * v9 + 32);
        if (v10 >= *(void *)(v7 + 24) >> 1)
        {
          sub_1B29B7848();
          uint64_t v7 = v12;
        }
        ++v9;
        *(void *)(v7 + 16) = v10 + 1;
        *(double *)(v7 + 8 * v10++ + 32) = v8 * v11;
      }
      while (v4 != v9);
      swift_bridgeObjectRelease();
    }
    ++v6;
  }
  while (v6 != v2);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B2D899C0(uint64_t a1)
{
  uint64_t v2 = sub_1B29A3EB4(&qword_1E9C43B88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B2D89A20(uint64_t a1, void (*a2)(void *, id))
{
  char v36 = a2;
  uint64_t v3 = sub_1B29A3EB4(&qword_1E9C43BA8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1B29A3EB4(&qword_1E9C3A158);
  uint64_t v31 = *(void *)(v35 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v35);
  uint64_t v34 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v30 = (uint64_t)&v29 - v8;
  sub_1B2B1D124(v38, a1);
  uint64_t v9 = v38[0];
  int64_t v39 = v38[3];
  unint64_t v10 = v38[4];
  uint64_t v32 = v38[1];
  int64_t v33 = (unint64_t)(v38[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v12 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v39 << 6);
      goto LABEL_20;
    }
    int64_t v15 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v15 >= v33) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v32 + 8 * v15);
    int64_t v17 = v39 + 1;
    if (!v16)
    {
      int64_t v17 = v39 + 2;
      if (v39 + 2 >= v33) {
        goto LABEL_27;
      }
      unint64_t v16 = *(void *)(v32 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v39 + 3;
        if (v39 + 3 >= v33) {
          goto LABEL_27;
        }
        unint64_t v16 = *(void *)(v32 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v39 + 4;
          if (v39 + 4 >= v33) {
            goto LABEL_27;
          }
          unint64_t v16 = *(void *)(v32 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v39 + 5;
            if (v39 + 5 >= v33) {
              goto LABEL_27;
            }
            unint64_t v16 = *(void *)(v32 + 8 * v17);
            if (!v16)
            {
              int64_t v18 = v39 + 6;
              while (v18 < v33)
              {
                unint64_t v16 = *(void *)(v32 + 8 * v18++);
                if (v16)
                {
                  int64_t v17 = v18 - 1;
                  goto LABEL_19;
                }
              }
LABEL_27:
              swift_release();
              return v12;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    int64_t v39 = v17;
LABEL_20:
    uint64_t v19 = (void *)(*(void *)(v9 + 48) + 48 * v14);
    uint64_t v20 = v19[1];
    uint64_t v21 = v19[2];
    uint64_t v22 = v19[3];
    uint64_t v23 = v19[4];
    uint64_t v24 = v19[5];
    uint64_t v25 = *(void **)(*(void *)(v9 + 56) + 8 * v14);
    v37[0] = *v19;
    v37[1] = v20;
    v37[2] = v21;
    v37[3] = v22;
    v37[4] = v23;
    v37[5] = v24;
    v37[6] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = v25;
    v36(v37, v26);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v5, 1, v35) == 1)
    {
      uint64_t result = sub_1B2A10B50((uint64_t)v5, &qword_1E9C43BA8);
    }
    else
    {
      uint64_t v27 = v30;
      sub_1B2D8A714((uint64_t)v5, v30);
      sub_1B2D8A714(v27, v34);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_1B29B7EA8();
      }
      unint64_t v28 = *(void *)(v12 + 16);
      if (v28 >= *(void *)(v12 + 24) >> 1) {
        uint64_t v12 = sub_1B29B7EA8();
      }
      *(void *)(v12 + 16) = v28 + 1;
      uint64_t result = sub_1B2D8A714(v34, v12+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v28);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2D89DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = ViewService.entitySimilarityFeatureView.getter();
  if (!v3)
  {
    swift_bridgeObjectRetain();
    sub_1B2B48074();
    uint64_t v8 = v7;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = swift_unknownObjectRelease();
    if (*(void *)(v8 + 16))
    {
      MEMORY[0x1F4188790](v9);
      uint64_t v10 = sub_1B2D89A20(v8, (void (*)(void *, id))sub_1B2D8A6C0);
      swift_bridgeObjectRelease();
      return sub_1B2AF89D0(v10);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1B2D8A6C8();
      swift_allocError();
      *(void *)uint64_t v11 = a2;
      *(void *)(v11 + 8) = a3;
      *(unsigned char *)(v11 + 16) = 1;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1B2D89F78(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  double v3 = 0.0;
  if (v2)
  {
    uint64_t v4 = (double *)(result + 32);
    uint64_t v5 = *(void *)(result + 16);
    do
    {
      double v6 = *v4++;
      double v3 = v3 + v6;
      --v5;
    }
    while (v5);
  }
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    uint64_t v8 = (double *)(a2 + 32);
    double v9 = 0.0;
    uint64_t v10 = (double *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 16);
    do
    {
      double v12 = *v10++;
      double v9 = v9 + v12;
      --v11;
    }
    while (v11);
    double v13 = 0.0;
    if (v2)
    {
      if (v3 != 0.0 && v9 != 0.0)
      {
        unint64_t v14 = (double *)(result + 32);
        uint64_t v15 = v7 - 1;
        uint64_t v16 = v2 - 1;
        do
        {
          double v17 = *v14++;
          double v18 = v17;
          double v19 = *v8++;
          double v20 = v18 / v3;
          double v21 = v19 / v9;
          if (v19 / v9 < v20) {
            double v20 = v21;
          }
          double v13 = v13 + v20;
          if (!v16) {
            break;
          }
          uint64_t v22 = v15--;
          --v16;
        }
        while (v22);
      }
    }
  }
  return result;
}

uint64_t sub_1B2D8A020@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v59 = (uint8_t *)a2;
  uint64_t v60 = a4;
  uint64_t v6 = sub_1B29A3EB4(&qword_1E9C43B88);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B29A3EB4(&qword_1E9C3A148);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  double v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[1];
  unint64_t v14 = a1[2];
  uint64_t v57 = (uint8_t *)*a1;
  os_log_t v58 = v14;
  uint64_t v15 = a1[4];
  unint64_t v16 = a1[5];
  sub_1B2E82DE8();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_1B2A10B50((uint64_t)v8, &qword_1E9C43B88);
    if (qword_1E9C37A28 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1B2E81FB8();
    sub_1B29A4B98(v17, (uint64_t)qword_1E9C37A08);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    double v18 = sub_1B2E81F98();
    os_log_type_t v19 = sub_1B2E82DB8();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v63 = v21;
      *(_DWORD *)uint64_t v20 = 136315394;
      swift_bridgeObjectRetain();
      sub_1B29BF6BC((uint64_t)v59, a3, (uint64_t)&v63, v22, v23, v24, v25, v26, v56, (unint64_t)v57, (uint64_t)v58, (uint64_t)v59, (uint64_t)v60, (uint64_t)v61, v62, v63, v64, v65, v66,
        v67);
      uint64_t v61 = (uint8_t *)v27;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v61 = v57;
      uint64_t v62 = v13;
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B2E82518();
      swift_bridgeObjectRetain();
      sub_1B2E82518();
      swift_bridgeObjectRelease();
      sub_1B29BF6BC((uint64_t)v61, v62, (uint64_t)&v63, v28, v29, v30, v31, v32, v56, (unint64_t)v57, (uint64_t)v58, (uint64_t)v59, (uint64_t)v60, (uint64_t)v61, v62, v63, v64, v65, v66,
        v67);
      uint64_t v61 = (uint8_t *)v33;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B2996000, v18, v19, "Failed to load feature '%s' for %s.", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1B3EB30C0](v21, -1, -1);
      MEMORY[0x1B3EB30C0](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
LABEL_15:
    uint64_t v54 = sub_1B29A3EB4(&qword_1E9C3A158);
    uint64_t v52 = v60;
    uint64_t v53 = 1;
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v52, v53, 1, v54);
  }
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v34(v12, v8, v9);
  swift_bridgeObjectRetain();
  EntityIdentifier.init(_:)(v15, v16, (uint64_t)&v61);
  if (v62 == 1)
  {
    if (qword_1E9C37A28 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1B2E81FB8();
    sub_1B29A4B98(v35, (uint64_t)qword_1E9C37A08);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    char v36 = sub_1B2E81F98();
    os_log_type_t v37 = sub_1B2E82DB8();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      os_log_t v58 = v36;
      int64_t v39 = (uint8_t *)v38;
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = v59;
      *(_DWORD *)int64_t v39 = 136315138;
      uint64_t v57 = v39 + 4;
      swift_bridgeObjectRetain();
      sub_1B29BF6BC(v15, v16, (uint64_t)&v61, v40, v41, v42, v43, v44, v56, (unint64_t)v57, (uint64_t)v58, (uint64_t)v59, (uint64_t)v60, (uint64_t)v61, v62, v63, v64, v65, v66,
        v67);
      uint64_t v63 = v45;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      os_log_t v46 = v58;
      _os_log_impl(&dword_1B2996000, v58, v37, "Failed to parse identifier %s", v39, 0xCu);
      uint64_t v47 = (uint64_t)v59;
      swift_arrayDestroy();
      MEMORY[0x1B3EB30C0](v47, -1, -1);
      MEMORY[0x1B3EB30C0](v39, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_15;
  }
  uint64_t v48 = (uint64_t)v61;
  uint64_t v49 = sub_1B29A3EB4(&qword_1E9C3A158);
  uint64_t v50 = v60;
  uint64_t v51 = (char *)v60 + *(int *)(v49 + 48);
  *uint64_t v60 = v48;
  v34(v51, v12, v9);
  uint64_t v52 = v50;
  uint64_t v53 = 0;
  uint64_t v54 = v49;
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v52, v53, 1, v54);
}

uint64_t sub_1B2D8A6AC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  *a1 = *a2;
  return sub_1B2D89F78(a3, a4);
}

uint64_t sub_1B2D8A6C0@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2D8A020(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_1B2D8A6C8()
{
  unint64_t result = qword_1E9C43BA0;
  if (!qword_1E9C43BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43BA0);
  }
  return result;
}

uint64_t sub_1B2D8A714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B29A3EB4(&qword_1E9C3A158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for QueryContextError()
{
  return &type metadata for QueryContextError;
}

uint64_t destroy for ReadableViewDatabaseTable()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReadableViewDatabaseTable(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ReadableViewDatabaseTable(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ReadableViewDatabaseTable(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ReadableViewDatabaseTable()
{
  return &type metadata for ReadableViewDatabaseTable;
}

BOOL static RelationshipIdentifier.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

BOOL static RelationshipIdentifier.< infix(_:_:)(void *a1, void *a2)
{
  return *a1 < *a2;
}

void RelationshipIdentifier.entityClass.getter(uint64_t a1@<X8>)
{
  EntityClass.init(intValue:)(*(unsigned char *)(v1 + 7), a1);
}

void RelationshipIdentifier.init(_:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = a2;
  uint64_t v6 = HIBYTE(a2) & 0xF;
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = 0;
LABEL_57:
    char v36 = 0;
LABEL_58:
    *(void *)a3 = v13;
    *(unsigned char *)(a3 + 8) = v36;
    return;
  }
  uint64_t v8 = a1;
  if (sub_1B2E825D8())
  {
    unint64_t v9 = sub_1B2E824A8();
    unint64_t v10 = sub_1B2A6FFBC(v9, v8, v4);
    uint64_t v8 = MEMORY[0x1B3EB0C00](v10);
    unint64_t v4 = v11;
    swift_bridgeObjectRelease();
    unint64_t v12 = HIBYTE(v4);
    uint64_t v7 = v8 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v12 = HIBYTE(v4);
  }
  unint64_t v14 = v12 & 0xF;
  if ((v4 & 0x2000000000000000) != 0) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = v7;
  }
  if (!v15) {
    goto LABEL_54;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1B29A4150();
    uint64_t v13 = sub_1B2A71148(v51, v52, 10);
    char v3 = v53;
    swift_bridgeObjectRelease();
    goto LABEL_53;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((v8 & 0x1000000000000000) != 0)
    {
      unint64_t v16 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      sub_1B29A4150();
      unint64_t v16 = (unsigned __int8 *)sub_1B2E83298();
      uint64_t v7 = v54;
    }
    uint64_t v13 = (uint64_t)sub_1B2A71130(v16, v7);
    char v3 = v17 & 1;
LABEL_53:
    if ((v3 & 1) == 0)
    {
LABEL_56:
      swift_bridgeObjectRelease();
      goto LABEL_57;
    }
LABEL_54:
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1B29A4150();
    unint64_t v34 = sub_1B2A70588(v32, v33);
    if (v35)
    {
      if (qword_1EB7E5AE0 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1B2E81FB8();
      sub_1B29A4B98(v37, (uint64_t)qword_1EB7E5AC0);
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_1B2E81F98();
      os_log_type_t v39 = sub_1B2E82DB8();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        unint64_t v56 = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136380675;
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_1B29A4150();
        sub_1B29BF6BC(v41, v42, v43, v44, v45, v46, v47, v48, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65,
          v66);
        sub_1B2E82FB8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B2996000, v38, v39, "RelationshipIdentifier: attempted initialization with non-numeric value: %{private}s", v40, 0xCu);
        char v36 = 1;
        swift_arrayDestroy();
        sub_1B299B750();
        sub_1B299B750();

        uint64_t v13 = 0;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v13 = 0;
        char v36 = 1;
      }
      goto LABEL_58;
    }
    uint64_t v13 = v34;
    goto LABEL_56;
  }
  uint64_t v57 = v4 & 0xFFFFFFFFFFFFFFLL;
  if (v8 == 43)
  {
    if (!v14) {
      goto LABEL_74;
    }
    if (v14 == 1) {
      goto LABEL_39;
    }
    sub_1B299F518();
    if (!v21 & v20) {
      goto LABEL_39;
    }
    uint64_t v13 = v23;
    if (v22 != 2)
    {
      sub_1B299F518();
      if (!v21 & v20) {
        goto LABEL_39;
      }
      uint64_t v13 = 10 * v13 + v25;
      if (v24 != 3)
      {
        while (1)
        {
          sub_1B299E61C();
          if (!v21 & v20) {
            goto LABEL_39;
          }
          sub_1B2CA97BC();
          if (!v21) {
            goto LABEL_39;
          }
          uint64_t v13 = v27 + v26;
          if (__OFADD__(v27, v26)) {
            goto LABEL_39;
          }
          sub_1B29A1E8C();
          if (v21) {
            goto LABEL_53;
          }
        }
      }
    }
LABEL_52:
    char v3 = 0;
    goto LABEL_53;
  }
  if (v8 != 45)
  {
    if (!v14 || (v8 - 48) > 9u) {
      goto LABEL_39;
    }
    uint64_t v13 = (v8 - 48);
    if (v14 != 1)
    {
      sub_1B299F518();
      if (!v21 & v20) {
        goto LABEL_39;
      }
      uint64_t v13 = 10 * (v8 - 48) + v29;
      if (v28 != 2)
      {
        while (1)
        {
          sub_1B299E61C();
          if (!v21 & v20) {
            goto LABEL_39;
          }
          sub_1B2CA97BC();
          if (!v21) {
            goto LABEL_39;
          }
          uint64_t v13 = v31 + v30;
          if (__OFADD__(v31, v30)) {
            goto LABEL_39;
          }
          sub_1B29A1E8C();
          if (v21) {
            goto LABEL_53;
          }
        }
      }
    }
    goto LABEL_52;
  }
  if (v14)
  {
    if (v14 != 1)
    {
      sub_1B299F518();
      if (!(!v21 & v20))
      {
        if (v18 == 2)
        {
          char v3 = 0;
          uint64_t v13 = -(uint64_t)v19;
          goto LABEL_53;
        }
        if ((BYTE2(v8) - 48) <= 9u)
        {
          uint64_t v13 = -10 * v19 - (BYTE2(v8) - 48);
          if (v18 == 3) {
            goto LABEL_52;
          }
          while (1)
          {
            sub_1B299E61C();
            if (!v21 & v20) {
              break;
            }
            sub_1B2CA97BC();
            if (!v21) {
              break;
            }
            uint64_t v13 = v50 - v49;
            if (__OFSUB__(v50, v49)) {
              break;
            }
            sub_1B29A1E8C();
            if (v21) {
              goto LABEL_53;
            }
          }
        }
      }
    }
LABEL_39:
    uint64_t v13 = 0;
    char v3 = 1;
    goto LABEL_53;
  }
  __break(1u);
LABEL_74:
  __break(1u);
}

void static RelationshipIdentifier.null.getter(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t static RelationshipIdentifier.stringValuePrefix.getter()
{
  return 3828082;
}

uint64_t RelationshipIdentifier.init(intValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t RelationshipIdentifier.init(entityClass:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *(unsigned __int8 *)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = sub_1B2D8B770(0xFFFFFFFFFFFFFFuLL);
  *a2 = (result + 1) | (v3 << 56);
  return result;
}

uint64_t RelationshipIdentifier.init(entityClass:hash:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(unsigned __int8 *)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3230);
  sub_1B2E82098();
  if (v10)
  {
    uint64_t result = sub_1B2E83418();
    __break(1u);
  }
  else
  {
    uint64_t v6 = sub_1B2E820A8();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a2, v6);
    *((void *)&v8 + 1) = v5;
    *(void *)&long long v8 = v9;
    *a3 = v8 >> 8;
  }
  return result;
}

uint64_t sub_1B2D8AF78(uint64_t a1)
{
  unint64_t v2 = sub_1B2D8B7FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B2D8AFB4(uint64_t a1)
{
  unint64_t v2 = sub_1B2D8B7FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RelationshipIdentifier.encode(to:)(void *a1)
{
  sub_1B29A3EB4(&qword_1E9C43BB0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v2);
  sub_1B29A0480();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D8B7FC();
  sub_1B2E83A38();
  sub_1B2E83708();
  uint64_t v3 = sub_1B299F318();
  return v4(v3);
}

uint64_t RelationshipIdentifier.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B29A3EB4(&qword_1E9C43BC0);
  sub_1B299D278();
  MEMORY[0x1F4188790](v5);
  sub_1B29A0480();
  sub_1B29AEC7C(a1, a1[3]);
  sub_1B2D8B7FC();
  sub_1B2E83A18();
  if (!v2)
  {
    uint64_t v6 = sub_1B2E835E8();
    uint64_t v7 = sub_1B299F318();
    v8(v7);
    *a2 = v6;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
}

uint64_t sub_1B2D8B1E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return RelationshipIdentifier.init(from:)(a1, a2);
}

uint64_t sub_1B2D8B1FC(void *a1)
{
  return RelationshipIdentifier.encode(to:)(a1);
}

void RelationshipIdentifier.databaseValue.getter()
{
}

uint64_t static RelationshipIdentifier.fromDatabaseValue(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1B2E80B98();
  sub_1B299D278();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1B2E83948();
  char v12 = v11;
  if (v11)
  {
    if (qword_1EB7E5AE0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1B2E81FB8();
    sub_1B29A4B98(v13, (uint64_t)qword_1EB7E5AC0);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v4);
    unint64_t v14 = sub_1B2E81F98();
    os_log_type_t v15 = sub_1B2E82DB8();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      unint64_t v30 = swift_slowAlloc();
      v32[0] = v30;
      *(_DWORD *)unint64_t v16 = 136380675;
      unsigned __int8 v29 = v16 + 4;
      sub_1B2A710E0();
      uint64_t v17 = sub_1B2E83748();
      sub_1B29BF6BC(v17, v18, (uint64_t)v32, v19, v20, v21, v22, v23, (uint64_t)v29, v30, v31, v32[0], v32[1], v32[2], v32[3], v32[4], v32[5], v32[6], v32[7],
        v32[8]);
      uint64_t v31 = v24;
      sub_1B2E82FB8();
      swift_bridgeObjectRelease();
      uint64_t v25 = sub_1B299F528();
      v26(v25);
      _os_log_impl(&dword_1B2996000, v14, v15, "RelationshipIdentifier: failed to initialize from database value: %{private}s", v16, 0xCu);
      swift_arrayDestroy();
      sub_1B299B750();
      sub_1B299B750();
    }
    else
    {
      uint64_t v27 = sub_1B299F528();
      v28(v27);
    }

    uint64_t result = 0;
  }
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v12 & 1;
  return result;
}

uint64_t sub_1B2D8B460(uint64_t a1)
{
  unint64_t v2 = sub_1B2A207B4();

  return MEMORY[0x1F411AFE0](a1, v2);
}

uint64_t sub_1B2D8B4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1B2A207B4();

  return MEMORY[0x1F411AFF0](a1, a2, a3, v6);
}

uint64_t RelationshipIdentifier.hash(into:)()
{
  return sub_1B2E839C8();
}

uint64_t RelationshipIdentifier.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t RelationshipIdentifier.stringValue.getter()
{
  return 3828082;
}

unint64_t RelationshipIdentifier.description.getter()
{
  EntityClass.init(intValue:)(HIBYTE(*v0), (uint64_t)&v4);
  uint64_t v1 = v5;
  if (v5)
  {
    uint64_t v2 = v4;
    swift_bridgeObjectRetain();
    sub_1B29D1EF4(v2, v1);
  }
  unint64_t v4 = 0;
  unint64_t v5 = 0xE000000000000000;
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  unint64_t v4 = 0xD00000000000001ALL;
  unint64_t v5 = 0x80000001B2EA2FD0;
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2E83748();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  sub_1B2E83748();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  return v4;
}

unint64_t sub_1B2D8B770(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x1B3EB30E0](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x1B3EB30E0](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1B2D8B7FC()
{
  unint64_t result = qword_1E9C43BB8;
  if (!qword_1E9C43BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43BB8);
  }
  return result;
}

unint64_t sub_1B2D8B84C()
{
  unint64_t result = qword_1EB7E39E8;
  if (!qword_1EB7E39E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E39E8);
  }
  return result;
}

unint64_t sub_1B2D8B89C()
{
  unint64_t result = qword_1EB7E28D0[0];
  if (!qword_1EB7E28D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB7E28D0);
  }
  return result;
}

unint64_t sub_1B2D8B8EC()
{
  unint64_t result = qword_1EB7E3E98;
  if (!qword_1EB7E3E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB7E3E98);
  }
  return result;
}

ValueMetadata *type metadata accessor for RelationshipIdentifier()
{
  return &type metadata for RelationshipIdentifier;
}

unsigned char *storeEnumTagSinglePayload for RelationshipIdentifier.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B2D8B9E4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RelationshipIdentifier.CodingKeys()
{
  return &type metadata for RelationshipIdentifier.CodingKeys;
}

unint64_t sub_1B2D8BA20()
{
  unint64_t result = qword_1E9C43BC8;
  if (!qword_1E9C43BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43BC8);
  }
  return result;
}

unint64_t sub_1B2D8BA70()
{
  unint64_t result = qword_1E9C43BD0;
  if (!qword_1E9C43BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43BD0);
  }
  return result;
}

unint64_t sub_1B2D8BAC0()
{
  unint64_t result = qword_1E9C43BD8[0];
  if (!qword_1E9C43BD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9C43BD8);
  }
  return result;
}

uint64_t sub_1B2D8BB10()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B2D8BB6C(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 160) = a2;
  *(void *)(v3 + 168) = v2;
  *(void *)(v3 + 152) = a1;
  unsigned int v4 = (_OWORD *)*v2;
  uint64_t v5 = sub_1B29A22C0();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for InferenceMessageResponseError();
  *(void *)(v3 + 176) = v7;
  sub_1B299D2A8(v7);
  *(void *)(v3 + 184) = v8;
  *(void *)(v3 + 192) = swift_task_alloc();
  uint64_t v9 = sub_1B29A22C0();
  *(void *)(v3 + 200) = v9;
  long long v10 = v4[7];
  long long v11 = v4[8];
  long long v12 = v4[9];
  *(void *)(v3 + 16) = v9;
  *(void *)(v3 + 24) = v5;
  *(_OWORD *)(v3 + 32) = v10;
  *(void *)(v3 + 48) = AssociatedConformanceWitness;
  *(_OWORD *)(v3 + 56) = v11;
  *(_OWORD *)(v3 + 72) = v12;
  uint64_t v13 = type metadata accessor for InferenceMessageRemoteServerResponse();
  *(void *)(v3 + 208) = v13;
  sub_1B299D2A8(v13);
  *(void *)(v3 + 216) = v14;
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B2D8BD2C, 0, 0);
}

uint64_t sub_1B2D8BD2C()
{
  unint64_t v1 = (void *)MEMORY[0x1B3EB2480]();
  sub_1B2D8C3A8(v0 + 17);
  unint64_t v2 = (void *)v0[21];
  uint64_t v4 = v0[17];
  uint64_t v3 = v0[18];
  v0[30] = v4;
  v0[31] = v3;
  uint64_t v5 = v2[11];
  uint64_t v6 = v2[12];
  sub_1B29AEC7C(v2 + 8, v5);
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  v0[32] = v7;
  uint64_t v9 = v2[4];
  uint64_t v10 = v2[5];
  v0[33] = v10;
  uint64_t v11 = v2[6];
  uint64_t v12 = v2[7];
  v0[34] = v12;
  v0[11] = v8;
  v0[12] = v7;
  v0[13] = v9;
  v0[14] = v10;
  v0[15] = v11;
  v0[16] = v12;
  os_log_type_t v15 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[35] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1B2D8BF38;
  return v15(v0 + 11, v4, v3, v5, v6);
}

uint64_t sub_1B2D8BF38()
{
  sub_1B299B708();
  v3[36] = v1;
  v3[37] = v2;
  v3[38] = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v4 = sub_1B2D8C324;
  }
  else {
    uint64_t v4 = sub_1B2D8C06C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1B2D8C06C()
{
  uint64_t v1 = v0[38];
  uint64_t v2 = (void *)MEMORY[0x1B3EB2480]();
  sub_1B2D8C4AC();
  if (v1)
  {
    uint64_t v4 = v0[36];
    unint64_t v3 = v0[37];
    uint64_t v6 = v0[30];
    unint64_t v5 = v0[31];
    sub_1B29C34DC(v6, v5);
    sub_1B29C34DC(v4, v3);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1B299AD7C();
    goto LABEL_7;
  }
  uint64_t v8 = v0[28];
  uint64_t v7 = v0[29];
  uint64_t v9 = v0[26];
  uint64_t v10 = v0[27];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v13 = v0[36];
  unint64_t v12 = v0[37];
  unint64_t v14 = v0[31];
  uint64_t v28 = v0[30];
  uint64_t v15 = v0[28];
  uint64_t v17 = v0[26];
  uint64_t v16 = v0[27];
  if (EnumCaseMultiPayload == 1)
  {
    unint64_t v26 = v0[31];
    uint64_t v27 = v0[29];
    uint64_t v18 = v0[23];
    uint64_t v19 = v0[24];
    uint64_t v20 = v0[22];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v19, v15, v20);
    swift_getWitnessTable();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v21, v19, v20);
    swift_willThrow();
    sub_1B29C34DC(v13, v12);
    sub_1B29C34DC(v28, v26);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v27, v17);
    goto LABEL_5;
  }
  uint64_t v23 = v0[19];
  (*(void (**)(void, uint64_t))(v16 + 8))(v0[29], v17);
  sub_1B29C34DC(v13, v12);
  sub_1B29C34DC(v28, v14);
  uint64_t v24 = type metadata accessor for InferenceMessageResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, v15, v24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
LABEL_7:
  return v22();
}

uint64_t sub_1B2D8C324()
{
  sub_1B29C34DC(*(void *)(v0 + 240), *(void *)(v0 + 248));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1B299AD7C();
  return v1();
}

uint64_t sub_1B2D8C3A8@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for InferenceMessageRequest();
  swift_getWitnessTable();
  uint64_t result = sub_1B2E7FFD8();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_1B2D8C4AC()
{
  return sub_1B2E7FF78();
}

uint64_t sub_1B2D8C620()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 64);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B2D8C680()
{
  sub_1B2D8C620();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteInferenceServiceInstanceClient()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B2D8C6CC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1B2AC6360;
  return sub_1B2D8BB6C(a1, a2);
}

uint64_t sub_1B2D8C7C4()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC20IntelligencePlatformP33_68BBD1BF2B042DA1870C4C06E01085D319ViewAccessAssertion_viewName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B2D8C8E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1
     + OBJC_IVAR____TtC20IntelligencePlatformP33_68BBD1BF2B042DA1870C4C06E01085D319ViewAccessAssertion_viewArtifactURL;
  uint64_t v4 = sub_1B2E80498();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1B2D8C9B0()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC20IntelligencePlatformP33_68BBD1BF2B042DA1870C4C06E01085D319ViewAccessAssertion_viewArtifactTableName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B2D8CA14()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20IntelligencePlatformP33_68BBD1BF2B042DA1870C4C06E01085D319ViewAccessAssertion_alwaysAvailable);
}

id sub_1B2D8CA24(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  unint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = sub_1B2E80498();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = &v5[OBJC_IVAR____TtC20IntelligencePlatformP33_68BBD1BF2B042DA1870C4C06E01085D319ViewAccessAssertion_viewName];
  *(void *)uint64_t v15 = a1;
  *((void *)v15 + 1) = a2;
  uint64_t v16 = v5;
  sub_1B2E80808();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v16[OBJC_IVAR____TtC20IntelligencePlatformP33_68BBD1BF2B042DA1870C4C06E01085D319ViewAccessAssertion_viewArtifactURL], v14, v11);
  uint64_t v17 = sub_1B2D8D74C(a3);
  uint64_t v18 = (uint64_t *)&v16[OBJC_IVAR____TtC20IntelligencePlatformP33_68BBD1BF2B042DA1870C4C06E01085D319ViewAccessAssertion_viewArtifactTableName];
  *uint64_t v18 = v17;
  v18[1] = v19;
  unsigned __int8 v20 = objc_msgSend(a3, sel_alwaysAvailable);
  v16[OBJC_IVAR____TtC20IntelligencePlatformP33_68BBD1BF2B042DA1870C4C06E01085D319ViewAccessAssertion_alwaysAvailable] = v20;
  uint64_t v21 = &v16[OBJC_IVAR____TtC20IntelligencePlatformP33_68BBD1BF2B042DA1870C4C06E01085D319ViewAccessAssertion_token];
  uint64_t v22 = sub_1B2E80818();
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, a4, v22);

  v26.receiver = v16;
  v26.super_class = ObjectType;
  id v24 = objc_msgSendSuper2(&v26, sel_init);

  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a4, v22);
  return v24;
}

void sub_1B2D8CC18()
{
}

id sub_1B2D8CD48(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC20IntelligencePlatform25RemoteViewAccessRequester_remoteAccessRequester] = a1;
  *(void *)&v2[OBJC_IVAR____TtC20IntelligencePlatform25RemoteViewAccessRequester_useCase] = a2;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RemoteViewAccessRequester.reportUnknownError(_:)(Swift::String a1)
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC20IntelligencePlatform25RemoteViewAccessRequester_remoteAccessRequester);
  uint64_t v3 = (void *)sub_1B2E82348();
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC20IntelligencePlatform25RemoteViewAccessRequester_useCase);
  v7[0] = 0;
  LODWORD(v2) = objc_msgSend(v2, sel_reportUnknownError_useCase_error_, v3, v4, v7);

  if (v2)
  {
    id v5 = v7[0];
  }
  else
  {
    id v6 = v7[0];
    sub_1B2E80388();

    swift_willThrow();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RemoteViewAccessRequester.reportSQLiteError(_:sqliteErrorCode:)(Swift::String _, Swift::Int64 sqliteErrorCode)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC20IntelligencePlatform25RemoteViewAccessRequester_remoteAccessRequester);
  id v5 = (void *)sub_1B2E82348();
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC20IntelligencePlatform25RemoteViewAccessRequester_useCase);
  v9[0] = 0;
  LODWORD(sqliteErrorCode) = objc_msgSend(v4, sel_reportSQLiteError_sqliteErrorCode_useCase_error_, v5, sqliteErrorCode, v6, v9);

  if (sqliteErrorCode)
  {
    id v7 = v9[0];
  }
  else
  {
    id v8 = v9[0];
    sub_1B2E80388();

    swift_willThrow();
  }
}

id RemoteViewAccessRequester.requestAssertion(forViewName:)()
{
  v32[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1B2E80818();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  id v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v7 = (char *)&v28 - v6;
  sub_1B2E807E8();
  if (!sub_1B2E807C8())
  {
    uint64_t v17 = *(void **)(v0 + OBJC_IVAR____TtC20IntelligencePlatform25RemoteViewAccessRequester_remoteAccessRequester);
    uint64_t v18 = (void *)sub_1B2E82348();
    uint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC20IntelligencePlatform25RemoteViewAccessRequester_useCase);
    v32[0] = 0;
    id v14 = objc_msgSend(v17, sel_requestAssertionForViewName_useCase_error_, v18, v19, v32);

    goto LABEL_8;
  }
  uint64_t v29 = v2;
  uint64_t v30 = v8;
  id v9 = objc_msgSend(self, sel_current);
  unsigned int v10 = objc_msgSend(v9, sel_canPerformGlobalMachLookup_report_, *MEMORY[0x1E4F4FAC8], 0);

  uint64_t v11 = sub_1B2E82348();
  uint64_t v12 = (void *)v11;
  if (!v10)
  {
    v32[0] = 0;
    id v14 = sub_1B299E088(v11, sel_requestAssertionForViewName_useCase_error_);

LABEL_8:
    if (v14)
    {
      id v20 = v32[0];
      return v14;
    }
LABEL_10:
    id v21 = v32[0];
    sub_1B2E80388();

    swift_willThrow();
    return v14;
  }
  v32[0] = 0;
  id v13 = sub_1B299E088(v11, sel_requestInfoForViewName_useCase_error_);

  id v14 = v32[0];
  if (!v13) {
    goto LABEL_10;
  }
  uint64_t v28 = v13;
  id v15 = v32[0];
  id v14 = (id)sub_1B2E80838();
  sub_1B2E82378();
  uint64_t v16 = v31;
  sub_1B2E807F8();
  swift_bridgeObjectRelease();
  if (v16)
  {
  }
  else
  {
    uint64_t v23 = sub_1B2E80828();
    uint64_t v25 = v24;
    uint64_t v26 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v5, v7, v1);
    id v27 = objc_allocWithZone((Class)type metadata accessor for ViewAccessAssertion());
    id v14 = sub_1B2D8CA24(v23, v25, v28, (uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v1);
  }
  return v14;
}

uint64_t type metadata accessor for ViewAccessAssertion()
{
  uint64_t result = qword_1E9C43CB0;
  if (!qword_1E9C43CB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id RemoteViewAccessRequester.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void RemoteViewAccessRequester.init()()
{
}

uint64_t sub_1B2D8D5D0()
{
  return type metadata accessor for ViewAccessAssertion();
}

uint64_t sub_1B2D8D5D8()
{
  uint64_t result = sub_1B2E80498();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1B2E80818();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for RemoteViewAccessRequester()
{
  return self;
}

uint64_t method lookup function for RemoteViewAccessRequester(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RemoteViewAccessRequester);
}

uint64_t sub_1B2D8D74C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_tableName);
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B2E82378();

  return v3;
}

uint64_t sub_1B2D8D7B0()
{
  *(_OWORD *)(v0 + 16) = xmmword_1B2EEEA10;
  *(void *)(v0 + 32) = &unk_1F0AB8298;
  *(_OWORD *)(v0 + 40) = xmmword_1B2EEDBD0;
  *(_OWORD *)(v0 + 56) = xmmword_1B2EEEA20;
  *(void *)(v0 + 72) = 0x80000001B2EA31B0;
  *(_OWORD *)(v0 + 80) = xmmword_1B2EBF940;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1B29B2124(0, 0);
  return v0;
}

uint64_t sub_1B2D8D854()
{
  uint64_t v0 = (void *)sub_1B2DC1414(1701869940, 0xE400000000000000);
  if (v0[2])
  {
    uint64_t v1 = v0[5];
    uint64_t v50 = v0[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1B2DC1414(111, 0xE100000000000000);
    uint64_t v4 = *(void *)(v2 + 16);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    uint64_t v43 = v2;
    if (v4)
    {
      uint64_t v6 = (uint64_t *)(v2 + 40);
      *(void *)&long long v3 = 136315394;
      long long v47 = v3;
      unint64_t v45 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v7 = MEMORY[0x1E4FBC860];
      uint64_t v58 = v1;
      do
      {
        uint64_t v9 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain();
        sub_1B2D8DCD0(v50, v1, v9, v8, (unint64_t)&v60);
        uint64_t v10 = v61;
        if (v61)
        {
          uint64_t v11 = v9;
          uint64_t v12 = v62;
          uint64_t v13 = v63;
          uint64_t v52 = v60;
          uint64_t v54 = v7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2E82518();
          sub_1B2D8E480();
          uint64_t v56 = v12;
          uint64_t v14 = v11;
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          sub_1B2D8E480();
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          sub_1B2D8E480();
          sub_1B2E82518();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v15 = v60;
          uint64_t v16 = v61;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B29B7480();
            uint64_t v7 = v37;
          }
          unint64_t v17 = *(void *)(v7 + 16);
          uint64_t v18 = v7;
          if (v17 >= *(void *)(v7 + 24) >> 1)
          {
            sub_1B29B7480();
            uint64_t v18 = v38;
          }
          *(void *)(v18 + 16) = v17 + 1;
          uint64_t v7 = v18;
          uint64_t v19 = (void *)(v18 + 88 * v17);
          v19[4] = v15;
          v19[5] = v16;
          v19[6] = 0;
          v19[7] = v52;
          v19[8] = v10;
          v19[9] = 0;
          uint64_t v1 = v58;
          v19[10] = v56;
          v19[11] = v13;
          v19[12] = v14;
          v19[13] = v8;
          uint64_t v5 = MEMORY[0x1E4FBC860];
          v19[14] = MEMORY[0x1E4FBC860];
        }
        else
        {
          if (qword_1EB7E30F0 != -1) {
            swift_once();
          }
          uint64_t v20 = sub_1B2E81FB8();
          sub_1B29A4B98(v20, (uint64_t)qword_1EB7E30D8);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          id v21 = sub_1B2E81F98();
          os_log_type_t v22 = sub_1B2E82DB8();
          if (os_log_type_enabled(v21, v22))
          {
            uint64_t v23 = v7;
            uint64_t v24 = swift_slowAlloc();
            uint64_t v60 = swift_slowAlloc();
            *(_DWORD *)uint64_t v24 = v47;
            swift_bridgeObjectRetain();
            sub_1B29BF6BC(v9, v8, (uint64_t)&v60, v25, v26, v27, v28, v29, v43, v45, v47, *((uint64_t *)&v47 + 1), v50, v52, v54, v56, v58, v60, v61,
              v62);
            *(void *)(v24 + 4) = v30;
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v24 + 12) = 2080;
            swift_bridgeObjectRetain();
            sub_1B29BF6BC(v51, v59, (uint64_t)&v60, v31, v32, v33, v34, v35, v44, v46, v48, v49, v51, v53, v55, v57, v59, v60, v61,
              v62);
            *(void *)(v24 + 14) = v36;
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1B2996000, v21, v22, "Error converting %s of type %s to string value", (uint8_t *)v24, 0x16u);
            swift_arrayDestroy();
            uint64_t v1 = v58;
            sub_1B299B750();
            uint64_t v7 = v23;
            sub_1B299B750();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
        }
        v6 += 2;
        --v4;
      }
      while (v4);
    }
    else
    {
      uint64_t v7 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for ResultGraph();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = sub_1B2E82148();
    *(void *)(v40 + 24) = v5;
    LOBYTE(v60) = 0;
    uint64_t v41 = swift_bridgeObjectRetain();
    sub_1B2D97CC8(v41, &v60);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for ResultGraph();
    uint64_t v39 = swift_allocObject();
    uint64_t v7 = MEMORY[0x1E4FBC860];
    *(void *)(v39 + 16) = sub_1B2E82148();
    *(void *)(v39 + 24) = v7;
  }
  return v7;
}

void sub_1B2D8DCD0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X8>)
{
  sub_1B2E80218();
  sub_1B299D278();
  uint64_t v71 = v11;
  uint64_t v72 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B2E80668();
  sub_1B299D278();
  uint64_t v73 = v14;
  uint64_t v74 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  id v21 = (char *)&v67 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v67 - v22;
  sub_1B2E80788();
  sub_1B299D278();
  uint64_t v69 = v25;
  uint64_t v70 = v24;
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1B2A10088(a3, a4);
  if (v28)
  {
    if (qword_1EB7E30F0 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_1B2E81FB8();
    sub_1B29A4B98(v52, (uint64_t)qword_1EB7E30D8);
    swift_bridgeObjectRetain_n();
    uint64_t v53 = sub_1B2E81F98();
    os_log_type_t v54 = sub_1B2E82DB8();
    if (!os_log_type_enabled(v53, v54))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_20;
    }
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    uint64_t v81 = swift_slowAlloc();
    *(_DWORD *)uint64_t v55 = 136315138;
    swift_bridgeObjectRetain();
    sub_1B29BF6BC(a3, a4, (uint64_t)&v81, v56, v57, v58, v59, v60, (uint64_t)v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
      v78);
    uint64_t v76 = v61;
    sub_1B2E82FB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B2996000, v53, v54, "cannot convert %s to Double", v55, 0xCu);
    swift_arrayDestroy();
    sub_1B299B750();
  }
  else
  {
    uint64_t v82 = 0;
    unint64_t v83 = 0xE000000000000000;
    static EntityPredicate.empty.getter((uint64_t)&v81);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v29 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
    if (v29 || (sub_1B2D8E49C() & 1) != 0)
    {
      unint64_t v68 = a5;
      sub_1B2E80768();
      sub_1B2E80658();
      sub_1B2E80658();
      sub_1B2E805D8();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v74 + 8);
      v74 += 8;
      uint64_t v67 = v30;
      v30(v18, v73);
      sub_1B29A3EB4(&qword_1E9C41CD8);
      sub_1B2E80778();
      sub_1B299D278();
      uint64_t v32 = v31;
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1B2EC89A0;
      uint64_t v34 = *(void (**)(void))(v32 + 104);
      sub_1B29A33D8();
      v34();
      sub_1B29A33D8();
      v34();
      sub_1B29A33D8();
      v34();
      sub_1B2A18CE8(v33);
      sub_1B2E80718();
      swift_bridgeObjectRelease();
      uint64_t v35 = sub_1B2E801E8();
      if ((v36 & 1) == 0)
      {
        uint64_t v37 = v35;
        uint64_t v38 = sub_1B2E801F8();
        if ((v39 & 1) == 0)
        {
          uint64_t v40 = v38;
          uint64_t v41 = sub_1B2E801C8();
          if ((v42 & 1) == 0)
          {
            uint64_t v43 = v41;
            uint64_t v76 = 0;
            uint64_t v77 = 0xE000000000000000;
            sub_1B2E831F8();
            swift_bridgeObjectRelease();
            uint64_t v76 = 0x203A7372616559;
            uint64_t v77 = 0xE700000000000000;
            uint64_t v75 = v37;
            sub_1B29A22E0();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2E82518();
            uint64_t v75 = v40;
            sub_1B29A22E0();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2E82518();
            uint64_t v75 = v43;
            sub_1B29A22E0();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
            sub_1B2E82518();
            swift_bridgeObjectRelease();
          }
        }
      }
      static EntityPredicate.duration.getter();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v13, v72);
      uint64_t v44 = v73;
      unint64_t v45 = v67;
      v67(v21, v73);
      v45(v23, v44);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v27, v70);
      uint64_t v46 = v76;
      uint64_t v47 = v77;
      uint64_t v48 = v78;
      uint64_t v49 = v79;
      __int16 v50 = v80;
      a5 = v68;
      goto LABEL_12;
    }
    BOOL v62 = a1 == 0x656D697465746164 && a2 == 0xE800000000000000;
    if (v62 || (sub_1B2D8E49C() & 1) != 0)
    {
      sub_1B2E805B8();
      uint64_t v82 = sub_1B2E80648();
      unint64_t v83 = v63;
      sub_1B2A7C538(0x91uLL, (uint64_t)&v76);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v18, v73);
      uint64_t v46 = v76;
      uint64_t v47 = v77;
      uint64_t v48 = v78;
      uint64_t v49 = v79;
      __int16 v50 = v80;
LABEL_12:
      unint64_t v51 = v83;
      *(void *)a5 = v82;
      *(void *)(a5 + 8) = v51;
      *(void *)(a5 + 16) = v46;
      *(void *)(a5 + 24) = v47;
      *(void *)(a5 + 32) = v48;
      *(void *)(a5 + 40) = v49;
      *(_WORD *)(a5 + 48) = v50;
      return;
    }
    if (qword_1EB7E30F0 != -1) {
      swift_once();
    }
    uint64_t v64 = sub_1B2E81FB8();
    sub_1B29A4B98(v64, (uint64_t)qword_1EB7E30D8);
    uint64_t v53 = sub_1B2E81F98();
    os_log_type_t v65 = sub_1B2E82DB8();
    if (!os_log_type_enabled(v53, v65)) {
      goto LABEL_18;
    }
    uint64_t v66 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v66 = 0;
    _os_log_impl(&dword_1B2996000, v53, v65, "unknown conversion type", v66, 2u);
  }
  sub_1B299B750();
LABEL_18:

LABEL_20:
  *(_WORD *)(a5 + 48) = 0;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)a5 = 0u;
}

uint64_t type metadata accessor for RenderDateTime()
{
  return self;
}

uint64_t sub_1B2D8E480()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2D8E49C()
{
  return sub_1B2E837A8();
}

void *sub_1B2D8E4BC(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t Context = (int *)type metadata accessor for QueryContext();
    uint64_t v9 = Context[7];
    uint64_t v10 = (char *)v6 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1B2E80668();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    swift_retain();
    v13(v10, v11, v12);
    uint64_t v14 = Context[8];
    uint64_t v15 = (void *)((char *)v6 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    unint64_t v17 = *(void *)((char *)a2 + v14 + 88);
    unsigned __int8 v18 = *((unsigned char *)a2 + v14 + 104);
    if (v17 >> 1 == 0xFFFFFFFF && (v18 & 0x1E) == 0)
    {
      memcpy(v15, v16, 0x69uLL);
    }
    else
    {
      uint64_t v20 = *v16;
      uint64_t v21 = v16[1];
      uint64_t v22 = v16[2];
      uint64_t v23 = v16[3];
      uint64_t v42 = v16[5];
      uint64_t v43 = v16[4];
      uint64_t v40 = v16[7];
      uint64_t v41 = v16[6];
      uint64_t v44 = v16[8];
      uint64_t v45 = v16[9];
      uint64_t v46 = v16[10];
      uint64_t v47 = v16[12];
      sub_1B29C6430(*v16, v21, v22, v23, v43, v42, v41, v40, v44, v45, v46, v17, v47, v18);
      *uint64_t v15 = v20;
      v15[1] = v21;
      void v15[2] = v22;
      v15[3] = v23;
      v15[4] = v43;
      v15[5] = v42;
      void v15[6] = v41;
      v15[7] = v40;
      v15[8] = v44;
      v15[9] = v45;
      v15[10] = v46;
      v15[11] = v17;
      v15[12] = v47;
      *((unsigned char *)v15 + 104) = v18;
    }
    *(void *)((char *)v6 + Context[9]) = *(void *)((char *)a2 + Context[9]);
    *(void *)((char *)v6 + Context[10]) = *(void *)((char *)a2 + Context[10]);
    uint64_t v24 = Context[11];
    uint64_t v25 = (char *)v6 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = *(void *)((char *)a2 + v24);
    uint64_t v28 = *(void *)((char *)a2 + v24 + 8);
    unsigned __int8 v29 = *((unsigned char *)a2 + v24 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B29C65EC(v27, v28, v29);
    *(void *)uint64_t v25 = v27;
    *((void *)v25 + 1) = v28;
    v25[16] = v29;
    *((void *)v25 + 3) = *((void *)v26 + 3);
    uint64_t v30 = Context[12];
    uint64_t v31 = (void *)((char *)v6 + v30);
    uint64_t v32 = (void *)((char *)a2 + v30);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    v31[2] = v32[2];
    *((unsigned char *)v6 + Context[13]) = *((unsigned char *)a2 + Context[13]);
    *((unsigned char *)v6 + Context[14]) = *((unsigned char *)a2 + Context[14]);
    uint64_t v34 = a3[6];
    *(void *)((char *)v6 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)v6 + v34) = *(void *)((char *)a2 + v34);
    uint64_t v35 = a3[7];
    char v36 = *(void **)((char *)a2 + v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v37 = v36;
    *(void *)((char *)v6 + v35) = v36;
    uint64_t v38 = a3[9];
    *((unsigned char *)v6 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)v6 + v38) = *(void *)((char *)a2 + v38);
    *(void *)((char *)v6 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t sub_1B2D8E7A0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v5 = a1 + Context[7];
  uint64_t v6 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + Context[8];
  unint64_t v8 = *(void *)(v7 + 88);
  unsigned __int8 v9 = *(unsigned char *)(v7 + 104);
  if (v8 >> 1 != 0xFFFFFFFF || (v9 & 0x1E) != 0) {
    sub_1B2A34A94(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(void *)(v7 + 72), *(void *)(v7 + 80), v8, *(void *)(v7 + 96), v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2A2A2C8(*(void *)(a1 + Context[11]), *(void *)(a1 + Context[11] + 8), *(unsigned char *)(a1 + Context[11] + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_1B2D8E90C(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v7 = Context[7];
  unint64_t v8 = (char *)a1 + v7;
  unsigned __int8 v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = Context[8];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  unint64_t v15 = *(void *)((char *)a2 + v12 + 88);
  unsigned __int8 v16 = *((unsigned char *)a2 + v12 + 104);
  if (v15 >> 1 == 0xFFFFFFFF && (v16 & 0x1E) == 0)
  {
    memcpy(v13, v14, 0x69uLL);
  }
  else
  {
    uint64_t v18 = *v14;
    uint64_t v19 = v14[1];
    uint64_t v20 = v14[2];
    uint64_t v21 = v14[3];
    uint64_t v40 = v14[5];
    uint64_t v41 = v14[4];
    uint64_t v38 = v14[7];
    uint64_t v39 = v14[6];
    uint64_t v42 = v14[8];
    uint64_t v43 = v14[9];
    uint64_t v44 = v14[10];
    uint64_t v45 = v14[12];
    sub_1B29C6430(*v14, v19, v20, v21, v41, v40, v39, v38, v42, v43, v44, v15, v45, v16);
    *uint64_t v13 = v18;
    v13[1] = v19;
    void v13[2] = v20;
    v13[3] = v21;
    v13[4] = v41;
    void v13[5] = v40;
    v13[6] = v39;
    v13[7] = v38;
    v13[8] = v42;
    v13[9] = v43;
    v13[10] = v44;
    v13[11] = v15;
    v13[12] = v45;
    *((unsigned char *)v13 + 104) = v16;
  }
  *(void *)((char *)a1 + Context[9]) = *(void *)((char *)a2 + Context[9]);
  *(void *)((char *)a1 + Context[10]) = *(void *)((char *)a2 + Context[10]);
  uint64_t v22 = Context[11];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)((char *)a2 + v22);
  uint64_t v26 = *(void *)((char *)a2 + v22 + 8);
  unsigned __int8 v27 = *((unsigned char *)a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29C65EC(v25, v26, v27);
  *(void *)uint64_t v23 = v25;
  *((void *)v23 + 1) = v26;
  v23[16] = v27;
  *((void *)v23 + 3) = *((void *)v24 + 3);
  uint64_t v28 = Context[12];
  unsigned __int8 v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v31 = v30[1];
  *unsigned __int8 v29 = *v30;
  v29[1] = v31;
  _OWORD v29[2] = v30[2];
  *((unsigned char *)a1 + Context[13]) = *((unsigned char *)a2 + Context[13]);
  *((unsigned char *)a1 + Context[14]) = *((unsigned char *)a2 + Context[14]);
  uint64_t v32 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
  uint64_t v33 = a3[7];
  uint64_t v34 = *(void **)((char *)a2 + v33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v35 = v34;
  *(void *)((char *)a1 + v33) = v34;
  uint64_t v36 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v36) = *(void *)((char *)a2 + v36);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1B2D8EBA4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v7 = Context[7];
  unint64_t v8 = (char *)a1 + v7;
  unsigned __int8 v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = Context[8];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (void *)((char *)a2 + v11);
  unint64_t v14 = *(void *)((char *)a1 + v11 + 88);
  int v15 = *((unsigned char *)a1 + v11 + 104) & 0x1E;
  unint64_t v16 = *(void *)((char *)a2 + v11 + 88);
  unsigned __int8 v17 = *((unsigned char *)a2 + v11 + 104);
  BOOL v19 = (v17 & 0x1E) == 0 && v16 >> 1 == 0xFFFFFFFF;
  if (v14 >> 1 == 0xFFFFFFFF && v15 == 0)
  {
    if (!v19)
    {
      uint64_t v39 = v13[1];
      uint64_t v40 = v13[2];
      uint64_t v41 = v13[4];
      uint64_t v68 = v41;
      uint64_t v70 = v13[3];
      uint64_t v42 = v13[6];
      uint64_t v64 = v42;
      uint64_t v66 = v13[5];
      uint64_t v62 = v13[7];
      uint64_t v72 = v13[8];
      uint64_t v74 = v13[9];
      uint64_t v76 = v13[10];
      uint64_t v78 = v13[12];
      uint64_t v43 = *v13;
      sub_1B29C6430(v43, v39, v40, v70, v41, v66, v42, v62, v72, v74, v76, v16, v78, v17);
      *(void *)uint64_t v12 = v43;
      *((void *)v12 + 1) = v39;
      *((void *)v12 + 2) = v40;
      *((void *)v12 + 3) = v70;
      *((void *)v12 + 4) = v68;
      *((void *)v12 + 5) = v66;
      *((void *)v12 + 6) = v64;
      *((void *)v12 + 7) = v62;
      *((void *)v12 + 8) = v72;
      *((void *)v12 + 9) = v74;
      *((void *)v12 + 10) = v76;
      *((void *)v12 + 11) = v16;
      *((void *)v12 + 12) = v78;
      v12[104] = v17;
      goto LABEL_17;
    }
  }
  else
  {
    if (!v19)
    {
      uint64_t v21 = v13[1];
      uint64_t v69 = v21;
      uint64_t v71 = *v13;
      uint64_t v22 = v13[2];
      uint64_t v23 = v13[3];
      uint64_t v24 = v13[5];
      uint64_t v65 = v24;
      uint64_t v67 = v13[4];
      uint64_t v25 = v13[7];
      uint64_t v61 = v25;
      uint64_t v63 = v13[6];
      uint64_t v73 = v13[8];
      uint64_t v75 = v13[9];
      uint64_t v77 = v13[10];
      uint64_t v26 = v13[12];
      sub_1B29C6430(v71, v21, v22, v23, v67, v24, v63, v25, v73, v75, v77, v16, v26, v17);
      uint64_t v27 = *(void *)v12;
      uint64_t v28 = *((void *)v12 + 1);
      uint64_t v29 = *((void *)v12 + 2);
      uint64_t v30 = *((void *)v12 + 3);
      uint64_t v31 = *((void *)v12 + 4);
      uint64_t v32 = *((void *)v12 + 5);
      uint64_t v33 = *((void *)v12 + 6);
      uint64_t v34 = *((void *)v12 + 7);
      long long v35 = *((_OWORD *)v12 + 4);
      long long v36 = *((_OWORD *)v12 + 5);
      uint64_t v37 = *((void *)v12 + 12);
      unsigned __int8 v38 = v12[104];
      *(void *)uint64_t v12 = v71;
      *((void *)v12 + 1) = v69;
      *((void *)v12 + 2) = v22;
      *((void *)v12 + 3) = v23;
      *((void *)v12 + 4) = v67;
      *((void *)v12 + 5) = v65;
      *((void *)v12 + 6) = v63;
      *((void *)v12 + 7) = v61;
      *((void *)v12 + 8) = v73;
      *((void *)v12 + 9) = v75;
      *((void *)v12 + 10) = v77;
      *((void *)v12 + 11) = v16;
      *((void *)v12 + 12) = v26;
      v12[104] = v17;
      sub_1B2A34A94(v27, v28, v29, v30, v31, v32, v33, v34, v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37, v38);
      goto LABEL_17;
    }
    sub_1B2C40FF8((uint64_t)v12);
  }
  memcpy(v12, v13, 0x69uLL);
LABEL_17:
  *(void *)((char *)a1 + Context[9]) = *(void *)((char *)a2 + Context[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + Context[10]) = *(void *)((char *)a2 + Context[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = Context[11];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  uint64_t v47 = *(void *)((char *)a2 + v44);
  uint64_t v48 = *(void *)((char *)a2 + v44 + 8);
  unsigned __int8 v49 = *((unsigned char *)a2 + v44 + 16);
  sub_1B29C65EC(v47, v48, v49);
  uint64_t v50 = *(void *)v45;
  uint64_t v51 = *((void *)v45 + 1);
  *(void *)uint64_t v45 = v47;
  *((void *)v45 + 1) = v48;
  unsigned __int8 v52 = v45[16];
  v45[16] = v49;
  sub_1B2A2A2C8(v50, v51, v52);
  *((void *)v45 + 3) = *((void *)v46 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = Context[12];
  os_log_type_t v54 = (void *)((char *)a1 + v53);
  uint64_t v55 = (char *)a2 + v53;
  *os_log_type_t v54 = *(void *)((char *)a2 + v53);
  v54[1] = *(void *)((char *)a2 + v53 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54[2] = *((void *)v55 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + Context[13]) = *((unsigned char *)a2 + Context[13]);
  *((unsigned char *)a1 + Context[14]) = *((unsigned char *)a2 + Context[14]);
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  uint64_t v56 = a3[7];
  uint64_t v57 = *(void **)((char *)a1 + v56);
  uint64_t v58 = *(void **)((char *)a2 + v56);
  id v59 = v58;
  *(void *)((char *)a1 + v56) = v58;

  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2D8EFB0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v7 = Context[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  memcpy((void *)(a1 + Context[8]), (const void *)(a2 + Context[8]), 0x69uLL);
  *(void *)(a1 + Context[9]) = *(void *)(a2 + Context[9]);
  *(void *)(a1 + Context[10]) = *(void *)(a2 + Context[10]);
  uint64_t v11 = Context[11];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = Context[12];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(unsigned char *)(a1 + Context[13]) = *(unsigned char *)(a2 + Context[13]);
  *(unsigned char *)(a1 + Context[14]) = *(unsigned char *)(a2 + Context[14]);
  uint64_t v18 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  return a1;
}

void *sub_1B2D8F100(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v7 = Context[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = Context[8];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  unint64_t v14 = *(void *)((char *)a1 + v11 + 88);
  unsigned __int8 v15 = *((unsigned char *)v12 + 104);
  if (v14 >> 1 == 0xFFFFFFFF && (v15 & 0x1E) == 0) {
    goto LABEL_11;
  }
  unint64_t v17 = *((void *)v13 + 11);
  char v18 = *((unsigned char *)v13 + 104);
  if (v17 >> 1 == 0xFFFFFFFF && (v18 & 0x1E) == 0)
  {
    sub_1B2C40FF8((uint64_t)v12);
LABEL_11:
    memcpy(v12, v13, 0x69uLL);
    goto LABEL_12;
  }
  uint64_t v20 = *((void *)v13 + 10);
  uint64_t v21 = *((void *)v13 + 12);
  uint64_t v22 = *v12;
  uint64_t v23 = v12[1];
  uint64_t v24 = v12[2];
  uint64_t v25 = v12[3];
  uint64_t v26 = v12[4];
  uint64_t v27 = v12[5];
  uint64_t v28 = v12[6];
  uint64_t v29 = v12[7];
  long long v30 = *((_OWORD *)v12 + 4);
  uint64_t v31 = v12[10];
  uint64_t v32 = v12[12];
  long long v33 = v13[1];
  *(_OWORD *)uint64_t v12 = *v13;
  *((_OWORD *)v12 + 1) = v33;
  long long v34 = v13[3];
  *((_OWORD *)v12 + 2) = v13[2];
  *((_OWORD *)v12 + 3) = v34;
  *((_OWORD *)v12 + 4) = v13[4];
  v12[10] = v20;
  v12[11] = v17;
  v12[12] = v21;
  *((unsigned char *)v12 + 104) = v18;
  sub_1B2A34A94(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, v14, v32, v15);
LABEL_12:
  *(void *)((char *)a1 + Context[9]) = *(void *)((char *)a2 + Context[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + Context[10]) = *(void *)((char *)a2 + Context[10]);
  swift_bridgeObjectRelease();
  uint64_t v35 = Context[11];
  long long v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  LOBYTE(v35) = *((unsigned char *)a2 + v35 + 16);
  uint64_t v38 = *(void *)v36;
  uint64_t v39 = *((void *)v36 + 1);
  *(_OWORD *)long long v36 = *(_OWORD *)v37;
  unsigned __int8 v40 = v36[16];
  v36[16] = v35;
  sub_1B2A2A2C8(v38, v39, v40);
  *((void *)v36 + 3) = *((void *)v37 + 3);
  swift_bridgeObjectRelease();
  uint64_t v41 = Context[12];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = *(void *)((char *)a2 + v41 + 8);
  *uint64_t v42 = *(void *)((char *)a2 + v41);
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v42[2] = *((void *)v43 + 2);
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + Context[13]) = *((unsigned char *)a2 + Context[13]);
  *((unsigned char *)a1 + Context[14]) = *((unsigned char *)a2 + Context[14]);
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_release();
  uint64_t v45 = a3[7];
  uint64_t v46 = *(void **)((char *)a1 + v45);
  *(void *)((char *)a1 + v45) = *(void *)((char *)a2 + v45);

  uint64_t v47 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v47) = *(void *)((char *)a2 + v47);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2D8F384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2D8F398);
}

uint64_t sub_1B2D8F39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2D8F3B0);
}

uint64_t type metadata accessor for Renderer(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1EB7D9720);
}

uint64_t sub_1B2D8F3D4()
{
  uint64_t result = type metadata accessor for QueryContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B2D8F4A0(uint64_t a1)
{
  sub_1B2B1D124(v29, a1);
  uint64_t v2 = v29[0];
  int64_t v3 = v29[3];
  unint64_t v4 = v29[4];
  uint64_t v26 = v29[1];
  int64_t v27 = (unint64_t)(v29[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  unint64_t v7 = v6 | (v3 << 6);
  while (1)
  {
    uint64_t v11 = (void *)(*(void *)(v2 + 48) + 16 * v7);
    uint64_t v12 = v11[1];
    uint64_t v13 = *(void *)(*(void *)(v2 + 56) + 8 * v7);
    v28[0] = *v11;
    v28[1] = v12;
    _OWORD v28[2] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2D9428C((uint64_t)v28, &v30);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v30;
    uint64_t v15 = *(void *)(v30 + 16);
    uint64_t v16 = *(void *)(v5 + 16);
    if (__OFADD__(v16, v15)) {
      break;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v16 + v15 > *(void *)(v5 + 24) >> 1)
    {
      sub_1B29B717C();
      uint64_t v5 = v17;
    }
    if (*(void *)(v14 + 16))
    {
      uint64_t v18 = *(void *)(v5 + 16);
      if ((*(void *)(v5 + 24) >> 1) - v18 < v15) {
        goto LABEL_43;
      }
      unint64_t v19 = v5 + 112 * v18 + 32;
      if (v14 + 32 < v19 + 112 * v15 && v19 < v14 + 32 + 112 * v15) {
        goto LABEL_46;
      }
      swift_arrayInitWithCopy();
      if (v15)
      {
        uint64_t v21 = *(void *)(v5 + 16);
        BOOL v22 = __OFADD__(v21, v15);
        uint64_t v23 = v21 + v15;
        if (v22) {
          goto LABEL_45;
        }
        *(void *)(v5 + 16) = v23;
      }
    }
    else if (v15)
    {
      goto LABEL_42;
    }
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v8 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_44;
    }
    if (v8 >= v27) {
      goto LABEL_39;
    }
    unint64_t v9 = *(void *)(v26 + 8 * v8);
    if (!v9)
    {
      int64_t v10 = v3 + 2;
      if (v3 + 2 >= v27) {
        goto LABEL_39;
      }
      unint64_t v9 = *(void *)(v26 + 8 * v10);
      if (v9) {
        goto LABEL_12;
      }
      int64_t v10 = v3 + 3;
      if (v3 + 3 >= v27) {
        goto LABEL_39;
      }
      unint64_t v9 = *(void *)(v26 + 8 * v10);
      if (v9) {
        goto LABEL_12;
      }
      int64_t v10 = v3 + 4;
      if (v3 + 4 >= v27) {
        goto LABEL_39;
      }
      unint64_t v9 = *(void *)(v26 + 8 * v10);
      if (v9)
      {
LABEL_12:
        int64_t v8 = v10;
      }
      else
      {
        int64_t v8 = v3 + 5;
        if (v3 + 5 >= v27) {
          goto LABEL_39;
        }
        unint64_t v9 = *(void *)(v26 + 8 * v8);
        if (!v9)
        {
          int64_t v24 = v3 + 6;
          while (v24 < v27)
          {
            unint64_t v9 = *(void *)(v26 + 8 * v24++);
            if (v9)
            {
              int64_t v8 = v24 - 1;
              goto LABEL_13;
            }
          }
LABEL_39:
          swift_release();
          return v5;
        }
      }
    }
LABEL_13:
    unint64_t v4 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v8 << 6);
    int64_t v3 = v8;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

void sub_1B2D8F7B4()
{
  sub_1B2A2D8C0();
  uint64_t v138 = v0;
  unint64_t v131 = v1;
  uint64_t v127 = (int *)type metadata accessor for AnswerRenderIterator(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v2);
  sub_1B299B860();
  uint64_t v5 = v3 - v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v126 = (uint64_t)&v123 - v7;
  uint64_t v8 = sub_1B2E81F08();
  sub_1B299D278();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  sub_1B299B860();
  uint64_t v14 = v12 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v123 - v16;
  uint64_t v18 = sub_1B2E81FB8();
  sub_1B299D278();
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v21);
  unint64_t v23 = (unint64_t)&v123 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1B2E81F38();
  sub_1B299D278();
  *(void *)&long long v139 = v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v123 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for LogSignpost();
  sub_1B2999864();
  MEMORY[0x1F4188790](v29);
  sub_1B299B6D0();
  uint64_t v132 = v30;
  if (qword_1EB7E6618 != -1) {
    goto LABEL_61;
  }
  while (2)
  {
    uint64_t v31 = sub_1B29A4B98(v18, (uint64_t)qword_1EB7E6600);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 16))(v23, v31, v18);
    sub_1B2E81F18();
    sub_1B2E81F28();
    sub_1B2E81ED8();
    uint64_t v32 = sub_1B2E81F28();
    os_signpost_type_t v33 = sub_1B2E82E68();
    if (sub_1B2E82F28())
    {
      long long v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v136 = v10;
      uint64_t v35 = v24;
      uint64_t v36 = v14;
      uint64_t v37 = v8;
      uint64_t v38 = v5;
      uint64_t v39 = v34;
      *(_WORD *)long long v34 = 0;
      os_signpost_id_t v40 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v32, v33, v40, "Knosis.renderAll", "", v39, 2u);
      uint64_t v5 = v38;
      uint64_t v8 = v37;
      uint64_t v14 = v36;
      uint64_t v24 = v35;
      uint64_t v10 = v136;
      sub_1B299B750();
    }

    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v14, v17, v8);
    sub_1B2E81F78();
    swift_allocObject();
    uint64_t v41 = sub_1B2E81F68();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v8);
    uint64_t v42 = v132;
    *uint64_t v132 = "Knosis.renderAll";
    v42[1] = 16;
    *((unsigned char *)v42 + 16) = 2;
    v42[3] = v41;
    (*(void (**)(char *, char *, uint64_t))(v139 + 32))((char *)v42 + *(int *)(v137 + 24), v28, v24);
    uint64_t v43 = type metadata accessor for Renderer(0);
    uint64_t v17 = v138;
    uint64_t v44 = *(void **)&v138[*(int *)(v43 + 28)];
    if (v44)
    {
      uint64_t v46 = *(void *)(*(void *)v138 + 16);
      uint64_t v45 = *(void *)(*(void *)v138 + 24);
      uint64_t v48 = *(void *)(*(void *)v138 + 32);
      uint64_t v47 = *(void *)(*(void *)v138 + 40);
      type metadata accessor for QueryContext();
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      sub_1B2D96EF4();
      if (v53)
      {
        os_log_type_t v54 = &v17[*(int *)(v52 + 48)];
        uint64_t v49 = *(void *)v54;
        uint64_t v50 = *((void *)v54 + 1);
        uint64_t v51 = *((void *)v54 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v141 = 0;
      unint64_t v142 = 0xE000000000000000;
      *(void *)&v140[0] = v44;
      id v55 = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
      sub_1B2E83388();
      uint64_t v56 = v141;
      unint64_t v57 = v142;

      uint64_t v58 = v131;
      *unint64_t v131 = v46;
      v58[1] = v45;
      v58[2] = v48;
      v58[3] = v47;
      v58[4] = MEMORY[0x1E4FBC860];
      *((unsigned char *)v58 + 40) = 2;
      v58[6] = v56;
      v58[7] = v57;
      sub_1B2D96E98();
      v59[17] = 0;
      v59[18] = v49;
      v59[19] = v50;
      v59[20] = v51;
      goto LABEL_58;
    }
    uint64_t v60 = v43;
    if (v138[*(int *)(v43 + 32)] == 4) {
      uint64_t v61 = 0;
    }
    else {
      uint64_t v61 = v138[*(int *)(v43 + 32)];
    }
    if (!sub_1B2D971EC())
    {
LABEL_15:
      switch(v61)
      {
        case 0:
          goto LABEL_20;
        case 1:
          goto LABEL_16;
        case 2:
          uint64_t v61 = 2;
          goto LABEL_20;
        case 3:
          goto LABEL_19;
        default:
          JUMPOUT(0);
      }
    }
    switch(v61)
    {
      case 3:
        swift_bridgeObjectRelease();
LABEL_19:
        uint64_t v61 = 3;
LABEL_20:
        char v63 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        if (v63) {
          goto LABEL_21;
        }
        uint64_t v125 = v61;
        sub_1B2D90708();
        uint64_t v77 = v76;
        int v124 = v78;
        uint64_t v10 = v126;
        sub_1B2D94F00((uint64_t)v17, v126, (void (*)(void))type metadata accessor for QueryContext);
        unint64_t v23 = *(void *)&v17[*(int *)(v60 + 20)];
        uint64_t v123 = *(int *)(v60 + 40);
        uint64_t v18 = *(void *)&v17[v123];
        uint64_t v79 = *(void *)(v77 + 16);
        __int16 v80 = v127;
        uint64_t v81 = v10 + v127[8];
        *(void *)(v10 + v127[5]) = v23;
        *(void *)(v10 + v80[6]) = v77;
        *(void *)(v10 + v80[7]) = v79;
        *(void *)uint64_t v81 = 0;
        *(unsigned char *)(v81 + 8) = 1;
        *(void *)(v10 + v80[9]) = v18;
        sub_1B2D94F00(v10, v5, (void (*)(void))type metadata accessor for AnswerRenderIterator);
        uint64_t v130 = v80[6];
        uint64_t v82 = *(void *)(*(void *)(v5 + v130) + 16);
        if (v82)
        {
          uint64_t v24 = v5 + v80[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v14 = MEMORY[0x1E4FBC860];
          uint64_t v129 = v5;
          uint64_t v128 = v24;
          while (1)
          {
            if (*(unsigned char *)(v24 + 8))
            {
              uint64_t v20 = 0;
              *(void *)uint64_t v24 = 0;
              *(unsigned char *)(v24 + 8) = 0;
LABEL_35:
              unint64_t v23 = v5;
              sub_1B2D90F8C();
              goto LABEL_36;
            }
            uint64_t v83 = *(void *)v24;
            if (*(void *)v24 >= v82 - 1) {
              goto LABEL_45;
            }
            *(unsigned char *)(v24 + 8) = 0;
            uint64_t v20 = v83 + 1;
            *(void *)uint64_t v24 = v83 + 1;
            if (v83 == -1)
            {
              uint64_t v20 = 0;
              goto LABEL_35;
            }
            uint64_t v84 = *(void *)(v5 + v127[7]);
            if (v84 && (v84 == -1 || !(v20 % v84))) {
              goto LABEL_35;
            }
LABEL_36:
            if (v20 < 0) {
              break;
            }
            uint64_t v18 = *(void *)(v5 + v130);
            if ((unint64_t)v20 >= *(void *)(v18 + 16)) {
              goto LABEL_60;
            }
            uint64_t v85 = v18 + 112 * v20;
            uint64_t v86 = *(void *)(v85 + 32);
            uint64_t v87 = *(void *)(v85 + 40);
            uint64_t v10 = *(void *)(v85 + 48);
            uint64_t v28 = *(char **)(v85 + 56);
            uint64_t v88 = *(unsigned __int16 *)(v85 + 64);
            uint64_t v8 = *(unsigned __int8 *)(v85 + 66);
            uint64_t v89 = *(void *)(v85 + 72);
            uint64_t v90 = *(void *)(v85 + 80);
            uint64_t v91 = *(void *)(v85 + 96);
            uint64_t v134 = *(void *)(v85 + 88);
            uint64_t v135 = v89;
            long long v139 = *(_OWORD *)(v85 + 104);
            uint64_t v92 = *(void *)(v85 + 120);
            int v133 = *(unsigned __int8 *)(v85 + 128);
            uint64_t v93 = v14;
            uint64_t v94 = *(void *)(v85 + 136);
            uint64_t v136 = v86;
            sub_1B29C5A24(v86, v87, v10, (uint64_t)v28, v88, v8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v137 = v94;
            uint64_t v95 = v93;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B299B8BC();
              sub_1B29B7370();
              uint64_t v95 = v99;
            }
            unint64_t v23 = *(void *)(v95 + 16);
            unint64_t v96 = *(void *)(v95 + 24);
            uint64_t v97 = v95;
            if (v23 >= v96 >> 1)
            {
              sub_1B299B984(v96);
              sub_1B29B7370();
              uint64_t v97 = v100;
            }
            *(void *)(v97 + 16) = v23 + 1;
            uint64_t v14 = v97;
            unint64_t v98 = v97 + 112 * v23;
            *(void *)(v98 + 32) = v136;
            *(void *)(v98 + 40) = v87;
            *(void *)(v98 + 48) = v10;
            *(void *)(v98 + 56) = v28;
            *(_WORD *)(v98 + 64) = v88;
            *(unsigned char *)(v98 + 66) = v8;
            *(void *)(v98 + 72) = v135;
            *(void *)(v98 + 80) = v90;
            *(void *)(v98 + 88) = v134;
            *(void *)(v98 + 96) = v91;
            *(_OWORD *)(v98 + 104) = v139;
            *(void *)(v98 + 120) = v92;
            *(unsigned char *)(v98 + 128) = v133;
            uint64_t v17 = v138;
            *(void *)(v98 + 136) = v137;
            uint64_t v82 = *(void *)(v18 + 16);
            uint64_t v5 = v129;
            uint64_t v24 = v128;
            if (!v82) {
              goto LABEL_45;
            }
          }
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          swift_once();
          continue;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_45:
        sub_1B2D94F60(v5, (void (*)(void))type metadata accessor for AnswerRenderIterator);
        uint64_t v101 = *(void *)(*(void *)&v17[v123] + 16);
        if (v101)
        {
          uint64_t v102 = qword_1E9C38AE8;
          swift_bridgeObjectRetain();
          if (v102 != -1) {
            swift_once();
          }
          for (uint64_t i = 0; i != v101; ++i)
          {
            uint64_t v104 = qword_1E9CAF800;
            if (*(void *)(qword_1E9CAF800 + 16))
            {
              unint64_t v105 = sub_1B29DAF2C();
              if (v106)
              {
                sub_1B29C3B84(*(void *)(v104 + 56) + 40 * v105, (uint64_t)v140);
                sub_1B29D1D20(v140, (uint64_t)&v141);
                uint64_t v107 = v143;
                uint64_t v108 = v144;
                sub_1B29AEC7C(&v141, v143);
                uint64_t v109 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v108 + 16))(v14, v17, v107, v108);
                swift_bridgeObjectRelease();
                _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v141);
                uint64_t v14 = v109;
              }
            }
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v110 = *(void *)v17;
        uint64_t v112 = *(void *)(*(void *)v17 + 16);
        uint64_t v111 = *(void *)(*(void *)v17 + 24);
        uint64_t v114 = *(void *)(*(void *)v17 + 32);
        uint64_t v113 = *(void *)(*(void *)v17 + 40);
        type metadata accessor for QueryContext();
        uint64_t v115 = 0;
        uint64_t v116 = 0;
        uint64_t v117 = 0;
        sub_1B2D96EF4();
        if (v53)
        {
          uint64_t v119 = &v17[*(int *)(v118 + 48)];
          uint64_t v115 = *(void *)v119;
          uint64_t v116 = *((void *)v119 + 1);
          uint64_t v117 = *((void *)v119 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        char v120 = v124 & 1;
        uint64_t v121 = v131;
        *unint64_t v131 = v112;
        v121[1] = v111;
        v121[2] = v114;
        v121[3] = v113;
        v121[4] = v14;
        *((unsigned char *)v121 + 40) = v125;
        v121[6] = 0;
        v121[7] = 0xE000000000000000;
        *((_OWORD *)v121 + 4) = *(_OWORD *)(v110 + 88);
        *((unsigned char *)v121 + 80) = v120;
        *(_OWORD *)(v121 + 11) = 0u;
        *(_OWORD *)(v121 + 13) = 0u;
        *(_OWORD *)(v121 + 15) = 0u;
        v121[17] = 0;
        v121[18] = v115;
        v121[19] = v116;
        v121[20] = v117;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B2D94F60(v126, (void (*)(void))type metadata accessor for AnswerRenderIterator);
LABEL_58:
        char v122 = v132;
        sub_1B2D90384((uint64_t)v132);
        sub_1B2D94F60((uint64_t)v122, (void (*)(void))type metadata accessor for LogSignpost);
        sub_1B29E5528();
        return;
      default:
        char v62 = sub_1B2E837A8();
        swift_bridgeObjectRelease();
        if (v62) {
          goto LABEL_15;
        }
LABEL_16:
        swift_bridgeObjectRelease();
LABEL_21:
        uint64_t v65 = *(void *)(*(void *)v17 + 16);
        uint64_t v64 = *(void *)(*(void *)v17 + 24);
        uint64_t v67 = *(void *)(*(void *)v17 + 32);
        uint64_t v66 = *(void *)(*(void *)v17 + 40);
        type metadata accessor for QueryContext();
        uint64_t v68 = 0;
        uint64_t v69 = 0;
        uint64_t v70 = 0;
        sub_1B2D96EF4();
        if (v53)
        {
          uint64_t v72 = &v17[*(int *)(v71 + 48)];
          uint64_t v68 = *(void *)v72;
          uint64_t v69 = *((void *)v72 + 1);
          uint64_t v70 = *((void *)v72 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v73 = v131;
        *unint64_t v131 = v65;
        v73[1] = v64;
        uint64_t v74 = MEMORY[0x1E4FBC860];
        v73[2] = v67;
        v73[3] = v66;
        v73[4] = v74;
        *((unsigned char *)v73 + 40) = 1;
        v73[6] = 0;
        v73[7] = 0xE000000000000000;
        sub_1B2D96E98();
        v75[17] = 0;
        v75[18] = v68;
        v75[19] = v69;
        v75[20] = v70;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_58;
    }
  }
}

uint64_t sub_1B2D90384(uint64_t a1)
{
  uint64_t v2 = sub_1B2E81F48();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v27 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B2E81F08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B2E81F38();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + *(int *)(v12 + 24), v8);
  uint64_t v28 = *(const char **)a1;
  char v13 = *(unsigned char *)(a1 + 16);
  swift_retain();
  uint64_t v14 = sub_1B2E81F28();
  sub_1B2E81F58();
  int v24 = sub_1B2E82E58();
  uint64_t result = sub_1B2E82F28();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v23 = v5;
  if ((v13 & 1) == 0)
  {
    uint64_t v16 = v27;
    if (v28)
    {
      uint64_t v18 = v25;
      uint64_t v17 = v26;
LABEL_9:
      swift_retain();
      sub_1B2E81F88();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v16, v17) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v19 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
        uint64_t v19 = "";
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      os_signpost_id_t v21 = sub_1B2E81EE8();
      _os_signpost_emit_with_name_impl(&dword_1B2996000, v14, (os_signpost_type_t)v24, v21, v28, v19, v20, 2u);
      MEMORY[0x1B3EB30C0](v20, -1, -1);
      uint64_t v5 = v23;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v16 = v27;
  if ((unint64_t)v28 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v28 >> 11 != 27)
  {
    uint64_t v18 = v25;
    uint64_t v17 = v26;
    if (v28 >> 16 <= 0x10)
    {
      uint64_t v28 = &v29;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_1B2D90708()
{
  sub_1B2A2D8C0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  type metadata accessor for Renderer(0);
  uint64_t v4 = sub_1B2D97DCC();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    unint64_t v7 = 0;
    uint64_t v49 = v4 + 32;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v50 = v1;
    uint64_t v47 = v4;
    uint64_t v48 = v1;
    uint64_t v46 = *(void *)(v4 + 16);
    while (v7 < *(void *)(v5 + 16))
    {
      if (v3 < 1)
      {
        uint64_t v61 = v8;
        uint64_t v9 = v49 + 40 * v7;
        uint64_t v11 = *(void *)v9;
        uint64_t v10 = *(void *)(v9 + 8);
        uint64_t v12 = *(void *)(v9 + 24);
        char v13 = *(unsigned char *)(v9 + 32);
        if (v1 >= 1)
        {
          uint64_t v14 = v50 - 1;
          if (__OFSUB__(v50, 1)) {
            goto LABEL_29;
          }
          --v50;
          if (v14 < 0)
          {
LABEL_26:
            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
        }
        char v59 = v13;
        unint64_t v60 = v7;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        GraphNode.init(id:)(v11, v10, (uint64_t)&v62);
        uint64_t v56 = *((void *)&v62 + 1);
        uint64_t v57 = v62;
        uint64_t v54 = *((void *)&v63 + 1);
        uint64_t v55 = v63;
        char v52 = BYTE2(v64);
        __int16 v53 = v64;
        sub_1B29A3EB4(&qword_1E9C41EB8);
        sub_1B29C58F8();
        uint64_t v51 = sub_1B2E82148();
        uint64_t v15 = swift_bridgeObjectRetain();
        sub_1B2DCA660(v15);
        uint64_t v17 = v16;
        swift_bridgeObjectRelease();
        *(void *)&long long v62 = v17;
        swift_retain();
        sub_1B2D97CCC((uint64_t *)&v62);
        uint64_t v58 = v3;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v18 = *(void *)(v62 + 16);
        if (v18)
        {
          uint64_t v19 = v62 + 56;
          uint64_t v20 = MEMORY[0x1E4FBC860];
          do
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1B2CBF68C();
            uint64_t v22 = v66;
            uint64_t v21 = v67;
            uint64_t v24 = v68;
            uint64_t v23 = v69;
            __int16 v25 = v70;
            sub_1B29A3EB4(&qword_1E9C43CD8);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
            *(void *)(inited + 32) = v22;
            *(void *)(inited + 40) = v21;
            *(void *)(inited + 48) = v24;
            *(void *)(inited + 56) = v23;
            *(_WORD *)(inited + 64) = v25;
            sub_1B29A3EB4(&qword_1E9C39FA0);
            uint64_t v27 = swift_allocObject();
            long long v28 = v62;
            *(_OWORD *)(v27 + 16) = xmmword_1B2EC00A0;
            *(_OWORD *)(v27 + 32) = v28;
            long long v29 = v64;
            *(_OWORD *)(v27 + 48) = v63;
            *(_OWORD *)(v27 + 64) = v29;
            *(void *)(v27 + 80) = v65;
            *(void *)(v27 + 88) = v22;
            *(void *)(v27 + 96) = v21;
            *(void *)(v27 + 104) = v24;
            *(void *)(v27 + 112) = v23;
            *(_WORD *)(v27 + 120) = v25;
            long long v30 = v71;
            long long v31 = v72;
            long long v32 = v73[0];
            *(void *)(v27 + 168) = *(void *)((char *)v73 + 14);
            *(_OWORD *)(v27 + 154) = v32;
            *(_OWORD *)(v27 + 138) = v31;
            *(_OWORD *)(v27 + 122) = v30;
            *(void *)(inited + 72) = v27;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v33 = sub_1B2E82148();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B299B8BC();
              sub_1B29B7370();
              uint64_t v20 = v38;
            }
            unint64_t v35 = *(void *)(v20 + 16);
            unint64_t v34 = *(void *)(v20 + 24);
            if (v35 >= v34 >> 1)
            {
              sub_1B299B984(v34);
              sub_1B29B7370();
              uint64_t v20 = v39;
            }
            *(void *)(v20 + 16) = v35 + 1;
            uint64_t v36 = v20 + 112 * v35;
            *(_OWORD *)(v36 + 32) = 0u;
            *(_OWORD *)(v36 + 48) = 0u;
            *(_WORD *)(v36 + 64) = 0;
            *(unsigned char *)(v36 + 66) = 4;
            *(_OWORD *)(v36 + 72) = 0u;
            *(_OWORD *)(v36 + 88) = 0u;
            *(void *)(v36 + 104) = v33;
            uint64_t v37 = MEMORY[0x1E4FBC860];
            *(void *)(v36 + 112) = MEMORY[0x1E4FBC860];
            *(void *)(v36 + 120) = 0;
            *(unsigned char *)(v36 + 128) = 0;
            *(void *)(v36 + 136) = v37;
            v19 += 88;
            --v18;
          }
          while (v18);
        }
        else
        {
          uint64_t v20 = MEMORY[0x1E4FBC860];
        }
        swift_release();
        uint64_t v8 = v61;
        uint64_t v3 = v58;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B299B8BC();
          sub_1B29B7370();
          uint64_t v8 = v44;
        }
        uint64_t v5 = v47;
        uint64_t v1 = v48;
        uint64_t v6 = v46;
        unint64_t v41 = *(void *)(v8 + 16);
        unint64_t v40 = *(void *)(v8 + 24);
        unint64_t v7 = v60;
        char v42 = v59;
        if (v41 >= v40 >> 1)
        {
          sub_1B299B984(v40);
          sub_1B29B7370();
          char v42 = v59;
          unint64_t v7 = v60;
          uint64_t v8 = v45;
        }
        *(void *)(v8 + 16) = v41 + 1;
        uint64_t v43 = v8 + 112 * v41;
        *(void *)(v43 + 32) = v57;
        *(void *)(v43 + 40) = v56;
        *(void *)(v43 + 48) = v55;
        *(void *)(v43 + 56) = v54;
        *(_WORD *)(v43 + 64) = v53;
        *(unsigned char *)(v43 + 66) = v52;
        *(_OWORD *)(v43 + 72) = 0u;
        *(_OWORD *)(v43 + 88) = 0u;
        *(void *)(v43 + 104) = v51;
        *(void *)(v43 + 112) = v20;
        *(void *)(v43 + 120) = v12;
        *(unsigned char *)(v43 + 128) = v42;
        *(void *)(v43 + 136) = MEMORY[0x1E4FBC860];
      }
      else
      {
        --v3;
      }
      if (++v7 == v6) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
    swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_27:
    sub_1B29E5528();
  }
}

uint64_t sub_1B2D90D9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2D94F00(v1, a1, (void (*)(void))type metadata accessor for AnswerRenderIterator);
}

void sub_1B2D90DD0(uint64_t a1@<X8>)
{
  uint64_t v3 = (int *)type metadata accessor for AnswerRenderIterator(0);
  uint64_t v4 = v3[6];
  uint64_t v5 = *(void *)(*(void *)(v1 + v4) + 16);
  if (!v5) {
    goto LABEL_7;
  }
  uint64_t v6 = (uint64_t *)(v1 + v3[8]);
  if (v6[1])
  {
    uint64_t v7 = 0;
    *uint64_t v6 = 0;
    *((unsigned char *)v6 + 8) = 0;
LABEL_11:
    sub_1B2D90F8C();
    goto LABEL_12;
  }
  uint64_t v8 = *v6;
  if (*v6 >= v5 - 1)
  {
LABEL_7:
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return;
  }
  *((unsigned char *)v6 + 8) = 0;
  uint64_t v7 = v8 + 1;
  *uint64_t v6 = v8 + 1;
  if (v8 == -1)
  {
    uint64_t v7 = 0;
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(v1 + v3[7]);
  if (v9 == -1 || v9 && !(v7 % v9)) {
    goto LABEL_11;
  }
LABEL_12:
  if (v7 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)(v1 + v4);
  if ((unint64_t)v7 >= *(void *)(v10 + 16))
  {
LABEL_18:
    __break(1u);
    return;
  }
  uint64_t v11 = v10 + 112 * v7;
  uint64_t v12 = *(void *)(v11 + 32);
  uint64_t v13 = *(void *)(v11 + 40);
  uint64_t v14 = *(void *)(v11 + 48);
  uint64_t v15 = *(void *)(v11 + 56);
  uint64_t v16 = *(void *)(v11 + 72);
  uint64_t v17 = *(void *)(v11 + 96);
  uint64_t v18 = *(void *)(v11 + 104);
  uint64_t v20 = *(void *)(v11 + 112);
  uint64_t v19 = *(void *)(v11 + 120);
  uint64_t v21 = *(unsigned __int8 *)(v11 + 128);
  uint64_t v22 = *(void *)(v11 + 136);
  uint64_t v23 = *(unsigned __int16 *)(v11 + 64);
  unsigned __int8 v24 = *(unsigned char *)(v11 + 66);
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = v14;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = (unsigned __int16)v23 | ((unint64_t)v24 << 16);
  *(void *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v11 + 80);
  *(void *)(a1 + 64) = v17;
  *(void *)(a1 + 72) = v18;
  *(void *)(a1 + 80) = v20;
  *(void *)(a1 + 88) = v19;
  *(void *)(a1 + 96) = v21;
  *(void *)(a1 + 104) = v22;
  sub_1B29C5A24(v12, v13, v14, v15, v23, v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AnswerRenderIterator(uint64_t a1)
{
  return sub_1B29DAD3C(a1, (uint64_t *)&unk_1EB7D9690);
}

void sub_1B2D90F8C()
{
  sub_1B2A2D8C0();
  uint64_t v1 = sub_1B2E81FB8();
  sub_1B299D278();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1B299B860();
  uint64_t v7 = v5 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t)&v427 - v9;
  type metadata accessor for AnswerRenderIterator(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v11);
  sub_1B299B6D0();
  uint64_t v468 = v13;
  uint64_t v14 = v0 + v12[8];
  if (*(unsigned char *)(v14 + 8)) {
    goto LABEL_320;
  }
  int64_t v15 = *(void *)v14;
  uint64_t v16 = *(void *)(v0 + v12[7]);
  BOOL v17 = __OFADD__(v15, v16);
  uint64_t v18 = v15 + v16;
  if (v17) {
    goto LABEL_345;
  }
  uint64_t v432 = v7;
  v445 = (uint64_t *)(v0 + v12[6]);
  uint64_t v19 = *v445;
  if (*(void *)(*v445 + 16) < v18) {
    uint64_t v18 = *(void *)(*v445 + 16);
  }
  BOOL v17 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v17)
  {
LABEL_346:
    __break(1u);
LABEL_347:
    __break(1u);
LABEL_348:
    __break(1u);
LABEL_349:
    __break(1u);
LABEL_350:
    __break(1u);
LABEL_351:
    __break(1u);
    goto LABEL_352;
  }
  uint64_t v469 = v20;
  int64_t v451 = v15;
  uint64_t v430 = v3;
  uint64_t v431 = v1;
  uint64_t v21 = v12;
  sub_1B29A3EB4(&qword_1E9C41EB8);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v437 = sub_1B2E82148();
  v454 = v21;
  uint64_t v441 = v21[9];
  uint64_t v3 = *(void *)(v0 + v441);
  uint64_t v23 = *(void *)(v3 + 16);
  uint64_t v446 = v0;
  if (!v23)
  {
LABEL_15:
    if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for QueryContext() + 56)))
    {
      id v442 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v469 < v451) {
        goto LABEL_355;
      }
      uint64_t v3 = ((uint64_t (*)(void))sub_1B2D2A480)();
      *(void *)&v512[0] = v22;
      unint64_t v29 = (v28 >> 1) - v27;
      if (v28 >> 1 == v27)
      {
        swift_unknownObjectRelease();
        uint64_t v30 = MEMORY[0x1E4FBC860];
      }
      else
      {
        if ((uint64_t)(v28 >> 1) <= v27) {
          goto LABEL_359;
        }
        uint64_t v31 = v26;
        uint64_t v32 = v27;
        uint64_t v33 = v19;
        swift_unknownObjectRetain();
        uint64_t v34 = v31 + 112 * v32;
        do
        {
          uint64_t v35 = *(void *)v34;
          uint64_t v36 = *(unsigned __int8 *)(v34 + 34);
          v34 += 112;
          unint64_t v37 = 0xE000000000000000;
          uint64_t v38 = 0;
          switch(v36)
          {
            case 1:
              *(void *)&v488[0] = v35;
              uint64_t v38 = EntityIdentifier.stringValue.getter();
              unint64_t v37 = v39;
              break;
            case 4:
              break;
            default:
              uint64_t v38 = v35;
              unint64_t v37 = swift_bridgeObjectRetain();
              break;
          }
          uint64_t v40 = *(void *)&v512[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B2C83E7C();
            sub_1B29B7048();
            uint64_t v40 = v43;
            *(void *)&v512[0] = v43;
          }
          uint64_t v41 = *(void *)(v40 + 16);
          sub_1B2E31A98(v41);
          uint64_t v42 = sub_1B2E320F4(v41, v38, v37);
          nullsub_1(v42);
          --v29;
        }
        while (v29);
        swift_unknownObjectRelease_n();
        uint64_t v30 = *(void *)&v512[0];
        uint64_t v19 = v33;
      }
      uint64_t v44 = sub_1B2DDC660(v30);
      *(void *)&v512[0] = 0;
      *((void *)&v512[0] + 1) = v44;
      memset(&v512[1], 0, 88);
      BYTE8(v512[6]) = 32;
      uint64_t v45 = sub_1B2D93CE0((uint64_t)v512);
      id v442 = 0;
      uint64_t v437 = v45;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
    }
    goto LABEL_35;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v24 = 0;
  uint64_t v0 = v446;
  while (1)
  {
    if (!*(unsigned char *)(v3 + v24 + 32))
    {
      sub_1B2C9FA60();
      goto LABEL_12;
    }
    if (*(unsigned char *)(v3 + v24 + 32) != 2) {
      break;
    }
LABEL_12:
    char v25 = sub_1B299FC40();
    swift_bridgeObjectRelease();
    if (v25)
    {
      sub_1B2999CA4();
      goto LABEL_34;
    }
    if (v23 == ++v24)
    {
      sub_1B2999CA4();
      uint64_t v22 = MEMORY[0x1E4FBC860];
      goto LABEL_15;
    }
  }
  sub_1B2999CA4();
  sub_1B2D96F34();
LABEL_34:
  id v442 = 0;
LABEL_35:
  sub_1B2A4B170();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v435 = sub_1B2E82148();
  id v69 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v69, sel_setTimeStyle_, 0);
  objc_msgSend(v69, sel_setDateStyle_, 3);
  uint64_t v10 = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend((id)v10, sel_setTimeStyle_, 2);
  objc_msgSend((id)v10, sel_setDateStyle_, 3);
  id v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C00]), sel_init);
  objc_msgSend(v70, sel_setUnitsStyle_, 3);
  objc_msgSend(v70, sel_setMaximumUnitCount_, 2);
  sub_1B2E7FF98();
  uint64_t v0 = swift_allocObject();
  uint64_t v434 = sub_1B2E7FF88();
  uint64_t Context = type metadata accessor for QueryContext();
  uint64_t v72 = v446;
  uint64_t v440 = *(int *)(Context + 56);
  int v73 = *(unsigned __int8 *)(v446 + v440);
  id v436 = v69;
  id v443 = v70;
  id v444 = (id)v10;
  if (v73 != 1)
  {
    id v81 = v69;
    id v82 = (id)v10;
    id v83 = v70;
    uint64_t v433 = MEMORY[0x1E4FBC860];
    uint64_t v22 = v10;
    goto LABEL_270;
  }
  if (v469 < v451) {
    goto LABEL_354;
  }
  uint64_t v10 = ((uint64_t (*)(void))sub_1B2D2A480)();
  *(void *)&v488[0] = v3;
  unint64_t v77 = (v76 >> 1) - v75;
  uint64_t v22 = (uint64_t)v444;
  if (v76 >> 1 == v75)
  {
    id v78 = v436;
    id v79 = (id)v22;
    id v80 = v443;
    swift_unknownObjectRelease();
  }
  else
  {
    if ((uint64_t)(v76 >> 1) <= v75) {
      goto LABEL_357;
    }
    uint64_t v84 = v74;
    uint64_t v85 = v75;
    id v86 = v436;
    id v87 = (id)v22;
    id v88 = v443;
    uint64_t v89 = (void *)(v84 + 112 * v85 + 104);
    do
    {
      __int16 v90 = *((_WORD *)v89 - 36);
      char v91 = *((unsigned char *)v89 - 70);
      uint64_t v92 = *(v89 - 2);
      char v93 = *((unsigned char *)v89 - 8);
      uint64_t v94 = *v89;
      long long v96 = *((_OWORD *)v89 - 3);
      long long v95 = *((_OWORD *)v89 - 2);
      long long v97 = *(_OWORD *)(v89 - 11);
      long long v98 = *((_OWORD *)v89 - 4);
      v512[0] = *(_OWORD *)(v89 - 13);
      v512[1] = v97;
      LOWORD(v512[2]) = v90;
      BYTE2(v512[2]) = v91;
      *(_OWORD *)((char *)&v512[2] + 8) = v98;
      *(_OWORD *)((char *)&v512[3] + 8) = v96;
      *(_OWORD *)((char *)&v512[4] + 8) = v95;
      *((void *)&v512[5] + 1) = v92;
      LOBYTE(v512[6]) = v93;
      *((void *)&v512[6] + 1) = v94;
      sub_1B2CB8620();
      sub_1B2AD307C();
      v89 += 14;
      --v77;
    }
    while (v77);
    swift_unknownObjectRelease();
  }
  uint64_t v463 = sub_1B2DDC524();
  uint64_t v461 = sub_1B2C8DC9C();
  uint64_t v99 = sub_1B2D2A480(v451, v469, v19);
  uint64_t v462 = v102;
  v505[0] = v3;
  if (v100 != v101 >> 1)
  {
    uint64_t v3 = v101 >> 1;
    uint64_t v433 = v99;
    uint64_t v0 = v100;
    swift_unknownObjectRetain();
    uint64_t v124 = v3;
    uint64_t v125 = v0;
    uint64_t v447 = v3;
    while (1)
    {
      if (v124 <= v125) {
        goto LABEL_356;
      }
      uint64_t v460 = v125;
      uint64_t v126 = v462 + 112 * v125;
      uint64_t v127 = *(void *)v126;
      uint64_t v128 = *(void *)(v126 + 16);
      uint64_t v129 = *(void *)(v126 + 24);
      uint64_t v130 = *(unsigned __int16 *)(v126 + 32);
      unsigned int v131 = *(unsigned __int8 *)(v126 + 34);
      uint64_t v132 = *(void *)(v126 + 72);
      uint64_t v10 = *(void *)(v126 + 80);
      uint64_t v133 = *(void *)(v126 + 104);
      uint64_t v134 = *(void *)(v126 + 64);
      uint64_t v0 = *(void *)(v126 + 48);
      v455 = *(void **)(v126 + 8);
      uint64_t v456 = v127;
      uint64_t v452 = v129;
      uint64_t v453 = v128;
      unsigned int v449 = v131;
      LODWORD(v450) = v130;
      sub_1B29C5A24(v127, (uint64_t)v455, v128, v129, v130, v131);
      uint64_t v458 = v134;
      swift_bridgeObjectRetain();
      uint64_t v457 = v132;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v448 = v133;
      swift_bridgeObjectRetain();
      uint64_t v459 = v0;
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1B29B6A04(0);
      uint64_t v490 = v3;
      uint64_t v135 = sub_1B2A6A084(v10);
      *((void *)&v465 + 1) = v10;
      v466 = (char *)v135;
      if (v135)
      {
        LODWORD(v465) = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
        uint64_t v464 = v10 + 32;
        swift_bridgeObjectRetain();
        uint64_t v136 = 0;
        while (1)
        {
          if ((v465 & 1) == 0) {
            goto LABEL_369;
          }
          if (__OFADD__(v136, 1)) {
            goto LABEL_342;
          }
          uint64_t v467 = v136 + 1;
          uint64_t v137 = v464 + 112 * v136;
          uint64_t v138 = *(void *)v137;
          uint64_t v139 = *(void *)(v137 + 8);
          uint64_t v140 = *(void *)(v137 + 16);
          v483 = *(NSObject **)(v137 + 24);
          LODWORD(v479) = *(unsigned __int16 *)(v137 + 32);
          int v141 = *(unsigned __int8 *)(v137 + 34);
          uint64_t v143 = *(void *)(v137 + 72);
          uint64_t v142 = *(void *)(v137 + 80);
          sub_1B2D96F60();
          sub_1B29C5A24(v138, v139, v140, v144, v145, v141);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v477 = v139;
          uint64_t v478 = v138;
          uint64_t v146 = v139;
          uint64_t v147 = v483;
          LODWORD(v471) = v141;
          uint64_t v480 = v140;
          sub_1B29C5A24(v138, v146, v140, (uint64_t)v483, v479, v141);
          uint64_t v470 = v0;
          swift_bridgeObjectRetain();
          v476 = (void *)v3;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          uint64_t v473 = v142;
          swift_bridgeObjectRetain();
          uint64_t v472 = v132;
          swift_bridgeObjectRetain();
          *(void *)&v488[0] = sub_1B29B69A4(0);
          sub_1B2B1D124(v508, v143);
          uint64_t v148 = v508[0];
          uint64_t v482 = v508[1];
          uint64_t v22 = v508[3];
          uint64_t v10 = v508[4];
          uint64_t v3 = (unint64_t)(v508[2] + 64) >> 6;
          uint64_t v474 = v143;
          swift_bridgeObjectRetain();
          while (1)
          {
            if (v10)
            {
              sub_1B2D96E84();
              uint64_t v150 = v149 | (v22 << 6);
              goto LABEL_69;
            }
            uint64_t v151 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_327;
            }
            if (v151 >= v3)
            {
              uint64_t v10 = v480;
              goto LABEL_97;
            }
            uint64_t v10 = v480;
            if (!*(void *)(v482 + 8 * v151))
            {
              if (v22 + 2 >= v3) {
                goto LABEL_97;
              }
              sub_1B2D96F28();
              if (!v153)
              {
                if (v152 + 2 >= v3) {
                  goto LABEL_97;
                }
                sub_1B2D96F28();
                if (!v155)
                {
                  if (v154 + 3 >= v3) {
                    goto LABEL_97;
                  }
                  sub_1B2D96F28();
                  if (!v157)
                  {
                    if (v156 + 4 >= v3) {
                      goto LABEL_97;
                    }
                    sub_1B2D96F28();
                    if (!v159)
                    {
                      uint64_t v175 = v158 + 5;
                      if (v175 >= v3) {
                        goto LABEL_97;
                      }
                      if (!*(void *)(v482 + 8 * v175)) {
                        break;
                      }
                    }
                  }
                }
              }
            }
LABEL_68:
            sub_1B2D96EDC();
            uint64_t v22 = v160;
LABEL_69:
            uint64_t v161 = *(void *)(*(void *)(v148 + 56) + 8 * v150);
            uint64_t v162 = sub_1B2A6A00C(v161);
            uint64_t v163 = *(void *)&v488[0];
            uint64_t v164 = sub_1B2A6A00C(*(uint64_t *)&v488[0]);
            uint64_t v165 = v164 + v162;
            if (__OFADD__(v164, v162))
            {
              __break(1u);
LABEL_322:
              __break(1u);
LABEL_323:
              __break(1u);
LABEL_324:
              __break(1u);
LABEL_325:
              __break(1u);
LABEL_326:
              __break(1u);
LABEL_327:
              __break(1u);
LABEL_328:
              __break(1u);
LABEL_329:
              __break(1u);
LABEL_330:
              __break(1u);
LABEL_331:
              __break(1u);
LABEL_332:
              __break(1u);
LABEL_333:
              __break(1u);
LABEL_334:
              sub_1B2D0CAE0(v22);
              __break(1u);
LABEL_335:
              sub_1B2D0CAE0(v22);
              __break(1u);
LABEL_336:
              __break(1u);
LABEL_337:
              __break(1u);
              goto LABEL_338;
            }
            swift_bridgeObjectRetain();
            if (!swift_isUniquelyReferenced_nonNull_native()
              || (uint64_t v166 = *(void *)(v163 + 24) >> 1, v166 < v165))
            {
              sub_1B29B707C();
              uint64_t v163 = v167;
              *(void *)&v488[0] = v167;
              sub_1B2D96ED0();
            }
            uint64_t v168 = v166 - *(void *)(v163 + 16);
            if (sub_1B2A6A084(v161))
            {
              if (v168 < v162) {
                goto LABEL_323;
              }
              if (v162 < 0) {
                goto LABEL_373;
              }
              sub_1B29A4750();
              BOOL v171 = v171 || v169 >= v170;
              if (!v171) {
                goto LABEL_373;
              }
              swift_arrayInitWithCopy();
              if (v162)
              {
                uint64_t v172 = *(void *)(v163 + 16);
                BOOL v17 = __OFADD__(v172, v162);
                uint64_t v173 = v172 + v162;
                if (v17) {
                  goto LABEL_326;
                }
                *(void *)(v163 + 16) = v173;
              }
            }
            else
            {
              if (v162 > 0) {
                goto LABEL_322;
              }
              uint64_t v162 = 0;
            }
            uint64_t v174 = swift_bridgeObjectRelease();
            if (v162 == v168) {
              *(void *)&v488[0] = v163;
            }
            else {
              nullsub_1(v174);
            }
            uint64_t v147 = v483;
          }
          uint64_t v176 = v22 + 7;
          while (v176 < v3)
          {
            if (*(void *)(v482 + 8 * v176++)) {
              goto LABEL_68;
            }
          }
LABEL_97:
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v179 = v477;
          uint64_t v178 = v478;
          uint64_t v180 = v10;
          uint64_t v10 = v479;
          sub_1B29C5B68(v478, v477, v180, (uint64_t)v147, v479, v471);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v3 = v470;
          swift_bridgeObjectRelease();
          uint64_t v181 = *(void *)&v488[0];
          uint64_t v0 = sub_1B29B6A04(0);
          uint64_t v489 = v0;
          uint64_t v182 = sub_1B2A6A084(v181);
          if (!v182)
          {
            swift_bridgeObjectRelease();
            sub_1B29C5B68(v178, v179, v480, (uint64_t)v147, v10, v471);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_106;
          }
          uint64_t v183 = v182;
          uint64_t v475 = v181;
          if (v182 < 1) {
            goto LABEL_348;
          }
          uint64_t v184 = v475;
          char v185 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
          swift_bridgeObjectRetain();
          if ((v185 & 1) == 0) {
            goto LABEL_371;
          }
          uint64_t v186 = 32;
          uint64_t v188 = v477;
          uint64_t v187 = v478;
          uint64_t v189 = v479;
          do
          {
            memcpy(v488, (const void *)(v184 + v186), sizeof(v488));
            KnosisFact.splitSubentityIdentifier()((uint64_t)&v491);
            uint64_t v190 = v493;
            if (v493)
            {
              uint64_t v481 = v496;
              uint64_t v482 = v497;
              uint64_t v191 = v495;
              uint64_t v192 = v494;
              uint64_t v193 = v492;
              uint64_t v194 = (uint64_t)v491;
              sub_1B2E3152C();
              uint64_t v195 = *(void *)(v489 + 16);
              sub_1B2E31B70(v195);
              v484[0] = v194;
              v484[1] = v193;
              v484[2] = v190;
              v484[3] = v192;
              uint64_t v188 = v477;
              uint64_t v187 = v478;
              v484[4] = v191;
              uint64_t v189 = v479;
              __int16 v485 = v481;
              uint64_t v486 = v482;
              uint64_t v196 = v195;
              uint64_t v184 = v475;
              sub_1B2E32184(v196, (uint64_t)v484);
              nullsub_1(v197);
            }
            v186 += 144;
            --v183;
          }
          while (v183);
          swift_bridgeObjectRelease_n();
          sub_1B29C5B68(v187, v188, v480, (uint64_t)v483, v189, v471);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v0 = v489;
LABEL_106:
          uint64_t v132 = sub_1B2A6A084(v0);
          uint64_t v3 = v490;
          uint64_t v198 = sub_1B2A6A084(v490);
          uint64_t v10 = v198 + v132;
          if (__OFADD__(v198, v132)) {
            goto LABEL_343;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || (uint64_t v199 = *(void *)(v3 + 24) >> 1, v199 < v10))
          {
            sub_1B2D96F04();
            sub_1B29B75A4();
            uint64_t v3 = v200;
            uint64_t v490 = v200;
            sub_1B2D96ED0();
          }
          uint64_t v201 = *(void *)(v3 + 16);
          uint64_t v10 = v199 - v201;
          if (!sub_1B2A6A084(v0))
          {
            if (v132 <= 0)
            {
              uint64_t v132 = 0;
              goto LABEL_123;
            }
            goto LABEL_344;
          }
          if (v10 < v132) {
            goto LABEL_349;
          }
          if (v132 < 0) {
            goto LABEL_373;
          }
          unint64_t v202 = v3 + 56 * v201 + 32;
          if (v0 + 32 < v202 + 56 * v132 && v202 < v0 + 32 + 56 * v132) {
            goto LABEL_373;
          }
          sub_1B29A3EB4(&qword_1E9C3A1F0);
          swift_arrayInitWithCopy();
          if (v132)
          {
            uint64_t v204 = *(void *)(v3 + 16);
            BOOL v17 = __OFADD__(v204, v132);
            uint64_t v205 = v204 + v132;
            if (v17) {
              goto LABEL_353;
            }
            *(void *)(v3 + 16) = v205;
          }
LABEL_123:
          uint64_t v206 = swift_bridgeObjectRelease();
          if (v132 == v10)
          {
            uint64_t v490 = v3;
          }
          else
          {
            uint64_t v0 = (uint64_t)&v490;
            nullsub_1(v206);
          }
          uint64_t v10 = *((void *)&v465 + 1);
          uint64_t v136 = v467;
          if ((char *)v467 == v466)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v3 = v490;
            goto LABEL_129;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_129:
      *(void *)&v488[0] = sub_1B29B69E0(0);
      uint64_t v207 = sub_1B2A6A084(v3);
      if (v207)
      {
        uint64_t v208 = v207;
        if (v207 < 1)
        {
          __break(1u);
LABEL_362:
          __break(1u);
LABEL_363:
          __break(1u);
LABEL_364:
          __break(1u);
LABEL_365:
          __break(1u);
LABEL_366:
          __break(1u);
LABEL_367:
          sub_1B2D0CC28(0);
          __break(1u);
LABEL_368:
          sub_1B2D0C9B4(0);
          __break(1u);
LABEL_369:
          sub_1B2D0CAE0(0);
          __break(1u);
LABEL_370:
          sub_1B2D0C9B4(0);
          __break(1u);
LABEL_371:
          sub_1B2D0C9B4(0);
          __break(1u);
LABEL_372:
          sub_1B2D0CAE0(0);
          __break(1u);
LABEL_373:
          sub_1B299D294();
          sub_1B2E834A8();
          __break(1u);
          JUMPOUT(0x1B2D93CCCLL);
        }
        char v209 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
        swift_bridgeObjectRetain();
        uint64_t v210 = (_WORD *)(v3 + 72);
        do
        {
          if ((v209 & 1) == 0) {
            goto LABEL_367;
          }
          uint64_t v212 = *((void *)v210 - 4);
          uint64_t v211 = *((void *)v210 - 3);
          uint64_t v213 = *((void *)v210 - 2);
          uint64_t v214 = *((void *)v210 - 1);
          __int16 v215 = *v210;
          v210 += 28;
          v513[0] = v212;
          v513[1] = v211;
          v513[2] = v213;
          v513[3] = v214;
          __int16 v514 = v215;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B2E31514();
          uint64_t v216 = *(void *)(*(void *)&v488[0] + 16);
          sub_1B2E31B10(v216);
          sub_1B2E3215C(v216, (uint64_t)v513);
          nullsub_1(v217);
          --v208;
        }
        while (v208);
        sub_1B2999CA4();
        uint64_t v10 = *((void *)&v465 + 1);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v429 = *(void *)&v488[0];
      swift_bridgeObjectRetain();
      uint64_t v218 = sub_1B29B69E0(0);
      *(void *)&v488[0] = v218;
      uint64_t v22 = (uint64_t)v444;
      uint64_t v3 = v463;
      if (!v466)
      {
        uint64_t v305 = v218;
        swift_bridgeObjectRelease();
        goto LABEL_265;
      }
      uint64_t v0 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
      int64_t v439 = v10 + 32;
      swift_bridgeObjectRetain();
      uint64_t v219 = 0;
      HIDWORD(v428) = v0;
      do
      {
        if ((v0 & 1) == 0) {
          goto LABEL_372;
        }
        v438 = v219 + 1;
        if (__OFADD__(v219, 1))
        {
          __break(1u);
LABEL_359:
          __break(1u);
LABEL_360:
          swift_once();
          goto LABEL_316;
        }
        int64_t v220 = v439 + 112 * (void)v219;
        uint64_t v221 = *(void *)v220;
        v476 = *(void **)(v220 + 8);
        uint64_t v477 = v221;
        uint64_t v222 = *(void *)(v220 + 16);
        uint64_t v223 = *(void *)(v220 + 24);
        uint64_t v224 = *(unsigned __int16 *)(v220 + 32);
        int v225 = *(unsigned __int8 *)(v220 + 34);
        uint64_t v227 = *(void *)(v220 + 72);
        uint64_t v226 = *(void *)(v220 + 80);
        sub_1B2D96F60();
        sub_1B29C5A24(v228, v229, v222, v223, v224, v225);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v470 = v222;
        uint64_t v467 = v223;
        LODWORD(v465) = v224;
        LODWORD(v464) = v225;
        sub_1B29C5A24(v477, (uint64_t)v476, v222, v223, v224, v225);
        uint64_t v475 = v0;
        swift_bridgeObjectRetain();
        uint64_t v473 = v3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        uint64_t v472 = v226;
        swift_bridgeObjectRetain();
        uint64_t v471 = v22;
        swift_bridgeObjectRetain();
        v491 = (void *)sub_1B29B69A4(0);
        uint64_t v0 = v227;
        sub_1B2B1D124(v509, v227);
        uint64_t v3 = v509[0];
        v483 = v509[1];
        uint64_t v230 = v509[3];
        uint64_t v10 = v509[4];
        int64_t v231 = (unint64_t)(v509[2] + 64) >> 6;
        uint64_t v474 = v0;
        swift_bridgeObjectRetain();
        while (1)
        {
          if (v10)
          {
            sub_1B2D96E84();
            uint64_t v233 = v232 | (v230 << 6);
            goto LABEL_155;
          }
          int64_t v234 = v230 + 1;
          if (__OFADD__(v230, 1)) {
            goto LABEL_341;
          }
          if (v234 >= v231) {
            goto LABEL_181;
          }
          if (!v483[v234].isa)
          {
            if (v230 + 2 >= v231) {
              goto LABEL_181;
            }
            sub_1B2D96F54();
            if (!v236)
            {
              if (v235 + 2 >= v231) {
                goto LABEL_181;
              }
              sub_1B2D96F54();
              if (!v238)
              {
                if (v237 + 3 >= v231) {
                  goto LABEL_181;
                }
                sub_1B2D96F54();
                if (!v240)
                {
                  if (v239 + 4 >= v231) {
                    goto LABEL_181;
                  }
                  sub_1B2D96F54();
                  if (!v242)
                  {
                    int64_t v256 = v241 + 5;
                    if (v256 >= v231) {
                      goto LABEL_181;
                    }
                    if (!v483[v256].isa) {
                      break;
                    }
                  }
                }
              }
            }
          }
LABEL_154:
          sub_1B2D96EDC();
          uint64_t v230 = v243;
LABEL_155:
          uint64_t v0 = *(void *)(*(void *)(v3 + 56) + 8 * v233);
          uint64_t v244 = sub_1B2A6A00C(v0);
          uint64_t v22 = (uint64_t)v491;
          uint64_t v245 = sub_1B2A6A00C((uint64_t)v491);
          uint64_t v246 = v245 + v244;
          if (__OFADD__(v245, v244)) {
            goto LABEL_331;
          }
          swift_bridgeObjectRetain();
          if (!swift_isUniquelyReferenced_nonNull_native()
            || (uint64_t v247 = *(void *)(v22 + 24) >> 1, v247 < v246))
          {
            sub_1B29B707C();
            uint64_t v22 = v248;
            v491 = (void *)v248;
            sub_1B2D96ED0();
          }
          uint64_t v249 = v247 - *(void *)(v22 + 16);
          if (sub_1B2A6A084(v0))
          {
            if (v249 < v244) {
              goto LABEL_336;
            }
            if (v244 < 0) {
              goto LABEL_373;
            }
            sub_1B29A4750();
            if (!v171 && v250 < v251) {
              goto LABEL_373;
            }
            swift_arrayInitWithCopy();
            if (v244)
            {
              uint64_t v253 = *(void *)(v22 + 16);
              BOOL v17 = __OFADD__(v253, v244);
              uint64_t v254 = v253 + v244;
              if (!v17)
              {
                *(void *)(v22 + 16) = v254;
                goto LABEL_172;
              }
              __break(1u);
LABEL_341:
              __break(1u);
LABEL_342:
              __break(1u);
LABEL_343:
              __break(1u);
LABEL_344:
              __break(1u);
LABEL_345:
              __break(1u);
              goto LABEL_346;
            }
          }
          else
          {
            if (v244 > 0) {
              goto LABEL_332;
            }
            uint64_t v244 = 0;
          }
LABEL_172:
          uint64_t v255 = swift_bridgeObjectRelease();
          if (v244 == v249)
          {
            v491 = (void *)v22;
          }
          else
          {
            uint64_t v0 = (uint64_t)&v491;
            nullsub_1(v255);
          }
        }
        int64_t v257 = v230 + 7;
        while (v257 < v231)
        {
          if (v483[v257++].isa) {
            goto LABEL_154;
          }
        }
LABEL_181:
        swift_bridgeObjectRelease();
        swift_release();
        sub_1B29A53F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v3 = (uint64_t)v491;
        uint64_t v259 = sub_1B2B34500();
        v491 = (void *)v259;
        uint64_t v479 = sub_1B2A6A084(v3);
        if (v479)
        {
          LODWORD(v481) = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
          uint64_t v260 = 0;
          uint64_t v480 = v3 + 32;
          uint64_t v478 = v3;
          while (1)
          {
            uint64_t v0 = v481;
            sub_1B2B47524(v260, v481 & 1, v3);
            if ((v0 & 1) == 0) {
              goto LABEL_370;
            }
            memcpy(v512, (const void *)(v480 + 144 * v260), sizeof(v512));
            uint64_t v261 = *((void *)&v512[8] + 1);
            v515[0] = *((void *)&v512[8] + 1);
            BOOL v17 = __OFADD__(v260, 1);
            uint64_t v10 = v260 + 1;
            if (v17) {
              goto LABEL_347;
            }
            uint64_t v482 = v10;
            sub_1B29C5944((uint64_t)v512);
            sub_1B29C5944((uint64_t)v512);
            sub_1B2AE7004((uint64_t)v515);
            uint64_t v490 = sub_1B29B69A4(0);
            uint64_t v22 = v261 + 64;
            uint64_t v262 = 1 << *(unsigned char *)(v261 + 32);
            if (v262 < 64) {
              uint64_t v263 = ~(-1 << v262);
            }
            else {
              uint64_t v263 = -1;
            }
            uint64_t v10 = v263 & *(void *)(v261 + 64);
            v483 = ((unint64_t)(v262 + 63) >> 6);
            swift_bridgeObjectRetain();
            uint64_t v264 = 0;
            while (1)
            {
              if (v10)
              {
                sub_1B2D96E84();
                unint64_t v266 = v265 | (v264 << 6);
                goto LABEL_211;
              }
              BOOL v17 = __OFADD__(v264++, 1);
              if (v17) {
                goto LABEL_330;
              }
              if (v264 >= (uint64_t)v483) {
                break;
              }
              unint64_t v267 = *(void *)(v22 + 8 * v264);
              if (!v267)
              {
                sub_1B2D96F1C();
                if (v269 == v17) {
                  break;
                }
                unint64_t v267 = *(void *)(v22 + 8 * v268);
                if (!v267)
                {
                  sub_1B2D96F1C();
                  if (v269 == v17) {
                    break;
                  }
                  unint64_t v267 = *(void *)(v22 + 8 * v268);
                  if (!v267)
                  {
                    sub_1B2D96F1C();
                    if (v269 == v17) {
                      break;
                    }
                    unint64_t v267 = *(void *)(v22 + 8 * v268);
                    if (!v267)
                    {
                      sub_1B2D96F1C();
                      if (v269 == v17) {
                        break;
                      }
                      unint64_t v267 = *(void *)(v22 + 8 * v268);
                      if (!v267)
                      {
                        sub_1B2D96F1C();
                        if (v269 == v17) {
                          break;
                        }
                        unint64_t v267 = *(void *)(v22 + 8 * v268);
                        if (!v267)
                        {
                          while (1)
                          {
                            uint64_t v264 = v268 + 1;
                            if (__OFADD__(v268, 1)) {
                              break;
                            }
                            if (v264 >= (uint64_t)v483) {
                              goto LABEL_235;
                            }
                            unint64_t v267 = *(void *)(v22 + 8 * v264);
                            ++v268;
                            if (v267) {
                              goto LABEL_210;
                            }
                          }
LABEL_352:
                          __break(1u);
LABEL_353:
                          __break(1u);
LABEL_354:
                          __break(1u);
LABEL_355:
                          __break(1u);
LABEL_356:
                          __break(1u);
LABEL_357:
                          __break(1u);
                          swift_once();
                          uint64_t v46 = sub_1B29A4B98(v3, (uint64_t)qword_1EB7E30D8);
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(v430 + 16))(v10, v46, v3);
                          uint64_t v47 = swift_allocObject();
                          *(void *)(v47 + 16) = v0;
                          id v48 = (id)v0;
                          id v49 = (id)v0;
                          uint64_t v50 = sub_1B2E81F98();
                          os_log_type_t v51 = sub_1B2E82DB8();
                          uint64_t v52 = sub_1B2ADAC1C();
                          *(unsigned char *)(v52 + 16) = 32;
                          uint64_t v53 = sub_1B2ADAC1C();
                          *(unsigned char *)(v53 + 16) = 8;
                          uint64_t v54 = sub_1B29A2D00();
                          *(void *)(v54 + 16) = sub_1B2D95714;
                          *(void *)(v54 + 24) = v47;
                          uint64_t v55 = sub_1B29A2D00();
                          *(void *)(v55 + 16) = sub_1B2C342EC;
                          *(void *)(v55 + 24) = v54;
                          sub_1B29A3EB4(qword_1EB7E5068);
                          uint64_t v56 = swift_allocObject();
                          *(_OWORD *)(v56 + 16) = xmmword_1B2EC89A0;
                          *(void *)(v56 + 32) = sub_1B2C342E0;
                          *(void *)(v56 + 40) = v52;
                          *(void *)(v56 + 48) = sub_1B2C35D58;
                          *(void *)(v56 + 56) = v53;
                          *(void *)(v56 + 64) = sub_1B2C342F4;
                          *(void *)(v56 + 72) = v55;
                          swift_setDeallocating();
                          swift_retain();
                          swift_retain();
                          swift_retain();
                          swift_retain();
                          swift_retain();
                          sub_1B2D98F18();
                          v483 = v50;
                          if (os_log_type_enabled(v50, v51))
                          {
                            uint64_t v57 = (uint8_t *)swift_slowAlloc();
                            uint64_t v482 = sub_1B2C36DF0();
                            *(void *)&v512[0] = v482;
                            *(_WORD *)uint64_t v57 = 258;
                            v57[2] = 32;
                            swift_release();
                            v57[3] = 8;
                            swift_release();
                            id v58 = v442;
                            *(void *)&v488[0] = v442;
                            id v59 = v442;
                            sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
                            uint64_t v60 = sub_1B2E823E8();
                            sub_1B29BF6BC(v60, v61, (uint64_t)v512, v62, v63, v64, v65, v66, v427, v428, v429, v430, v431, v432, v433, v434, v435, (uint64_t)v436, v437,
                              (uint64_t)v438);
                            *(void *)&v488[0] = v67;
                            sub_1B2E82FB8();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_bridgeObjectRelease();

                            uint64_t v68 = v483;
                            _os_log_impl(&dword_1B2996000, v483, v51, "KGRenderer: getEntityFacts failed: %s", v57, 0xCu);
                            swift_arrayDestroy();
                            sub_1B299B750();
                            sub_1B299B750();
                          }
                          else
                          {
                            id v306 = v442;

                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                            swift_release();
                          }
                          (*(void (**)(uint64_t, uint64_t))(v430 + 8))(v10, v431);
                          goto LABEL_320;
                        }
                      }
                    }
                  }
                }
                uint64_t v264 = v268;
              }
LABEL_210:
              uint64_t v10 = (v267 - 1) & v267;
              unint64_t v266 = __clz(__rbit64(v267)) + (v264 << 6);
LABEL_211:
              uint64_t v0 = *(void *)(*(void *)(v261 + 56) + 8 * v266);
              uint64_t v270 = sub_1B2A6A00C(v0);
              uint64_t v271 = v490;
              uint64_t v272 = sub_1B2A6A00C(v490);
              uint64_t v273 = v272 + v270;
              if (__OFADD__(v272, v270)) {
                goto LABEL_324;
              }
              swift_bridgeObjectRetain();
              if (!swift_isUniquelyReferenced_nonNull_native()
                || (uint64_t v274 = *(void *)(v271 + 24) >> 1, v274 < v273))
              {
                sub_1B29B707C();
                uint64_t v271 = v275;
                uint64_t v490 = v275;
                sub_1B2D96ED0();
              }
              uint64_t v3 = *(void *)(v271 + 16);
              uint64_t v276 = v274 - v3;
              if (sub_1B2A6A084(v0))
              {
                if (v276 < v270) {
                  goto LABEL_328;
                }
                if (v270 < 0) {
                  goto LABEL_373;
                }
                sub_1B29A4750();
                if (!v171 && v277 < v278) {
                  goto LABEL_373;
                }
                swift_arrayInitWithCopy();
                if (v270)
                {
                  uint64_t v280 = *(void *)(v271 + 16);
                  BOOL v17 = __OFADD__(v280, v270);
                  uint64_t v281 = v280 + v270;
                  if (v17) {
                    goto LABEL_329;
                  }
                  *(void *)(v271 + 16) = v281;
                }
              }
              else
              {
                if (v270 > 0) {
                  goto LABEL_325;
                }
                uint64_t v270 = 0;
              }
              uint64_t v282 = swift_bridgeObjectRelease();
              if (v270 == v276)
              {
                uint64_t v490 = v271;
              }
              else
              {
                uint64_t v0 = (uint64_t)&v490;
                nullsub_1(v282);
              }
            }
LABEL_235:
            uint64_t v260 = v482;
            swift_release();
            sub_1B2AE7030((uint64_t)v515);
            sub_1B29C5A88((uint64_t)v512);
            uint64_t v283 = sub_1B2A6A084(v490);
            swift_bridgeObjectRelease();
            uint64_t v3 = v478;
            if (v283)
            {
              sub_1B2D0D550();
              uint64_t v284 = v491[2];
              sub_1B2D0D76C(v284);
              uint64_t v285 = sub_1B2D0D94C(v284, v512);
              nullsub_1(v285);
            }
            else
            {
              sub_1B29C5A88((uint64_t)v512);
            }
            if (v260 == v479)
            {
              swift_bridgeObjectRelease();
              uint64_t v259 = (uint64_t)v491;
              goto LABEL_241;
            }
          }
        }
        swift_bridgeObjectRelease();
LABEL_241:
        uint64_t v286 = sub_1B29B69E0(0);
        v491 = (void *)v286;
        uint64_t v287 = sub_1B2A6A084(v259);
        if (v287)
        {
          uint64_t v288 = v287;
          if (v287 < 1) {
            goto LABEL_364;
          }
          char v289 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
          swift_retain();
          uint64_t v290 = 88;
          do
          {
            if ((v289 & 1) == 0) {
              goto LABEL_368;
            }
            long long v291 = *(_OWORD *)(v259 + v290);
            long long v292 = *(_OWORD *)(v259 + v290 + 16);
            __int16 v511 = *(_WORD *)(v259 + v290 + 32);
            v510[0] = v291;
            v510[1] = v292;
            sub_1B29E52BC((uint64_t)v510);
            sub_1B2E31514();
            uint64_t v293 = v491[2];
            sub_1B2E31B10(v293);
            sub_1B2E3215C(v293, (uint64_t)v510);
            nullsub_1(v294);
            v290 += 144;
            --v288;
          }
          while (v288);
          swift_release_n();
          sub_1B29A53F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v286 = (uint64_t)v491;
        }
        else
        {
          swift_release();
          sub_1B29A53F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v295 = sub_1B2A6A084(v286);
        uint64_t v296 = *(void *)&v488[0];
        uint64_t v297 = sub_1B2A6A084(*(uint64_t *)&v488[0]);
        uint64_t v298 = v297 + v295;
        if (__OFADD__(v297, v295)) {
          goto LABEL_362;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || (uint64_t v299 = *(void *)(v296 + 24) >> 1, v299 < v298))
        {
          sub_1B2D96F04();
          sub_1B29B7260();
          uint64_t v296 = v300;
          *(void *)&v488[0] = v300;
          sub_1B2D96ED0();
        }
        uint64_t v301 = v299 - *(void *)(v296 + 16);
        if (sub_1B2A6A084(v286))
        {
          if (v301 < v295) {
            goto LABEL_365;
          }
          sub_1B2AEF060();
          if (v295 >= 1)
          {
            uint64_t v302 = *(void *)(v296 + 16);
            BOOL v17 = __OFADD__(v302, v295);
            uint64_t v303 = v302 + v295;
            if (v17) {
              goto LABEL_366;
            }
            *(void *)(v296 + 16) = v303;
          }
        }
        else
        {
          if (v295 > 0) {
            goto LABEL_363;
          }
          uint64_t v295 = 0;
        }
        uint64_t v304 = swift_bridgeObjectRelease();
        if (v295 == v301) {
          *(void *)&v488[0] = v296;
        }
        else {
          nullsub_1(v304);
        }
        uint64_t v22 = (uint64_t)v444;
        uint64_t v3 = v463;
        uint64_t v219 = v438;
        uint64_t v0 = HIDWORD(v428);
      }
      while (v438 != v466);
      swift_bridgeObjectRelease_n();
      uint64_t v305 = *(void *)&v488[0];
LABEL_265:
      uint64_t v10 = v460 + 1;
      *(void *)&v488[0] = v305;
      sub_1B2AD2FD0();
      sub_1B29C5B68(v456, (uint64_t)v455, v453, v452, v450, v449);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v0 = (uint64_t)v505;
      sub_1B2AD2FD0();
      uint64_t v125 = v10;
      uint64_t v124 = v447;
      if (v10 == v447) {
        goto LABEL_339;
      }
    }
  }
  swift_unknownObjectRelease();
  uint64_t v103 = MEMORY[0x1E4FBC860];
  uint64_t v3 = v463;
  while (1)
  {
    uint64_t v0 = sub_1B2CC8A88(v103, v461);
    if (*(void *)(v3 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v491) = 0;
      LOBYTE(v505[0]) = 0;
      LOBYTE(v490) = 0;
      LOBYTE(v489) = 0;
      unsigned __int8 v487 = 0;
      static TriplesQuery.Clause.match(subjectMatchType:subjects:subjectClauses:predicateMatchType:predicates:objectMatchType:objects:relationshipIdMatchType:relationshipIds:relationshipPredicateMatchType:relationshipPredicates:)((unsigned __int8 *)&v491, v3, 0, (unsigned __int8 *)v505, v0, (unsigned __int8 *)&v490, 0, (unsigned __int8 *)&v489, (uint64_t)v488, 0, &v487, v0);
      swift_bridgeObjectRelease();
      uint64_t v482 = *((void *)&v488[0] + 1);
      v483 = *(NSObject **)&v488[0];
      uint64_t v480 = *((void *)&v488[1] + 1);
      uint64_t v481 = *(void *)&v488[1];
      uint64_t v478 = *((void *)&v488[2] + 1);
      uint64_t v479 = *(void *)&v488[2];
      uint64_t v104 = *((void *)&v488[3] + 1);
      uint64_t v477 = *(void *)&v488[3];
      uint64_t v106 = *((void *)&v488[4] + 1);
      uint64_t v105 = *(void *)&v488[4];
      uint64_t v108 = *((void *)&v488[5] + 1);
      uint64_t v107 = *(void *)&v488[5];
      uint64_t v109 = *(void *)&v488[6];
      unsigned __int8 v110 = BYTE8(v488[6]);
      LOBYTE(v491) = 6;
      uint64_t v111 = v446;
      uint64_t v112 = sub_1B2D93ECC((uint64_t)v488, (char *)&v491);
      uint64_t v426 = v108;
      uint64_t v72 = v111;
      uint64_t v425 = v107;
      uint64_t v22 = (uint64_t)v444;
      sub_1B2A34B34((uint64_t)v483, v482, v481, v480, v479, v478, v477, v104, v105, v106, v425, v426, v109, v110);
      uint64_t v113 = swift_bridgeObjectRetain();
      id v114 = v442;
      uint64_t v115 = sub_1B2D8F4A0(v113);
      id v442 = v114;
      uint64_t v437 = v112;
      swift_bridgeObjectRelease();
      uint64_t v116 = swift_bridgeObjectRetain();
      uint64_t v117 = sub_1B2D94B8C(v116);
      uint64_t v118 = sub_1B29A3EB4(&qword_1E9C420C8);
      swift_allocObject();
      uint64_t v0 = sub_1B29C83C8(v117);
      uint64_t v433 = v115;
      swift_bridgeObjectRelease();
      *((void *)&v488[1] + 1) = v118;
      *(void *)&v488[2] = sub_1B29D22C4(&qword_1E9C43CC0, &qword_1E9C420C8);
      *(void *)&v488[0] = v0;
      type metadata accessor for K2TInProcessService();
      uint64_t v3 = swift_allocObject();
      sub_1B29D1D20(v488, v3 + 16);
      id v119 = v436;
      *(void *)(v3 + 56) = v434;
      *(void *)(v3 + 64) = v119;
      id v120 = v443;
      *(void *)(v3 + 72) = v22;
      *(void *)(v3 + 80) = v120;
      swift_retain();
      swift_retain();
      id v121 = v119;
      id v122 = (id)v22;
      id v123 = v120;
      uint64_t v10 = v463;
      uint64_t v435 = sub_1B2D95778(v463);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v433 = MEMORY[0x1E4FBC860];
      uint64_t v72 = v446;
    }
LABEL_270:
    int64_t v307 = v469 + 1;
    int64_t v308 = v451;
    if (__OFADD__(v469, 1)) {
      goto LABEL_350;
    }
    if (v307 < v451) {
      goto LABEL_351;
    }
    uint64_t v10 = (uint64_t)v443;
    if (v451 == v307)
    {
LABEL_273:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();

      id v309 = v436;
      swift_bridgeObjectRelease();
      goto LABEL_320;
    }
    uint64_t v310 = &qword_1E9CAF000;
    v438 = "";
    int64_t v439 = v469 + 1;
LABEL_275:
    if (v308 >= v307) {
      goto LABEL_333;
    }
    int64_t v451 = v308;
    uint64_t v311 = *(void *)(v72 + v441);
    uint64_t v22 = *(void *)(v311 + 16);
    if (v22) {
      break;
    }
LABEL_285:
    uint64_t v314 = *v445;
    uint64_t v3 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
    uint64_t v10 = v451;
    sub_1B2B47524(v451, v3 & 1, v314);
    if (v3)
    {
      uint64_t v315 = v314 + 112 * v10;
      uint64_t v10 = 112;
      __int16 v316 = *(_WORD *)(v315 + 64);
      char v317 = *(unsigned char *)(v315 + 66);
      v488[0] = *(_OWORD *)(v315 + 32);
      v488[1] = *(_OWORD *)(v315 + 48);
      LOWORD(v488[2]) = v316;
      BYTE2(v488[2]) = v317;
      uint64_t v318 = GraphNode.id.getter();
      uint64_t v319 = sub_1B29B2504(v318);
      swift_bridgeObjectRelease();
      if (!v319) {
        uint64_t v319 = sub_1B29B69A4(0);
      }
      uint64_t v320 = v445;
      sub_1B2D9533C();
      uint64_t v22 = v451;
      sub_1B2D9537C(v451, *v320);
      sub_1B2CBC150(v319);
      uint64_t v321 = swift_bridgeObjectRelease();
      nullsub_1(v321);
      goto LABEL_292;
    }
LABEL_338:
    sub_1B2D0CAE0(v10);
    __break(1u);
LABEL_339:
    swift_unknownObjectRelease_n();
    uint64_t v103 = v505[0];
  }
  swift_bridgeObjectRetain_n();
  uint64_t v312 = 0;
  while (2)
  {
    if (!*(unsigned char *)(v311 + v312 + 32))
    {
      sub_1B2C9FA60();
LABEL_282:
      char v313 = sub_1B299FC40();
      swift_bridgeObjectRelease();
      if (v313)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_291;
      }
      if (v22 == ++v312)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v72 = v446;
        goto LABEL_285;
      }
      continue;
    }
    break;
  }
  if (*(unsigned char *)(v311 + v312 + 32) == 2) {
    goto LABEL_282;
  }
  swift_bridgeObjectRelease_n();
  sub_1B2D96F34();
LABEL_291:
  uint64_t v320 = v445;
  uint64_t v72 = v446;
  uint64_t v22 = v451;
  uint64_t v10 = 112;
LABEL_292:
  sub_1B2D9533C();
  sub_1B2D9537C(v22, *v320);
  uint64_t v322 = sub_1B2CBB830();
  nullsub_1(v322);
  uint64_t v323 = *v320;
  uint64_t v3 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  sub_1B2B47524(v22, v3 & 1, v323);
  if ((v3 & 1) == 0) {
    goto LABEL_334;
  }
  uint64_t v324 = v323 + 112 * v22;
  __int16 v325 = *(_WORD *)(v324 + 64);
  char v326 = *(unsigned char *)(v324 + 66);
  uint64_t v327 = *(void *)(v324 + 120);
  char v328 = *(unsigned char *)(v324 + 128);
  uint64_t v329 = *(void *)(v324 + 136);
  v488[0] = *(_OWORD *)(v324 + 32);
  v488[1] = *(_OWORD *)(v324 + 48);
  LOWORD(v488[2]) = v325;
  BYTE2(v488[2]) = v326;
  *(long long *)((char *)&v488[2] + 8) = *(_OWORD *)(v324 + 72);
  *(long long *)((char *)&v488[3] + 8) = *(_OWORD *)(v324 + 88);
  *(long long *)((char *)&v488[4] + 8) = *(_OWORD *)(v324 + 104);
  *((void *)&v488[5] + 1) = v327;
  LOBYTE(v488[6]) = v328;
  *((void *)&v488[6] + 1) = v329;
  uint64_t v330 = sub_1B2CB7D34();
  sub_1B2D9533C();
  uint64_t v331 = *v320;
  sub_1B2D9537C(v22, *v320);
  *(void *)(v331 + 112 * v22 + 136) = v330;
  uint64_t v332 = swift_bridgeObjectRelease();
  uint64_t v333 = v320;
  nullsub_1(v332);
  uint64_t v10 = v468;
  sub_1B2D94F00(v72, v468, (void (*)(void))type metadata accessor for AnswerRenderIterator);
  uint64_t v334 = *v320;
  uint64_t v3 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  sub_1B2B47524(v22, v3 & 1, v334);
  if ((v3 & 1) == 0) {
    goto LABEL_335;
  }
  uint64_t v335 = v334 + 112 * v22;
  uint64_t v336 = *(void *)(v335 + 32);
  uint64_t v337 = *(void *)(v335 + 40);
  uint64_t v482 = *(void *)(v335 + 48);
  uint64_t v450 = *(void *)(v335 + 56);
  unsigned int v449 = *(unsigned __int16 *)(v335 + 64);
  LODWORD(v448) = *(unsigned __int8 *)(v335 + 66);
  uint64_t v338 = *(void *)(v335 + 72);
  uint64_t v22 = *(void *)(v335 + 80);
  uint64_t v3 = *(void *)(v335 + 88);
  uint64_t v339 = *(void *)(v335 + 96);
  uint64_t v340 = *(void *)(v335 + 112);
  uint64_t v460 = *(void *)(v335 + 104);
  uint64_t v461 = v340;
  uint64_t v341 = *(void *)(v335 + 120);
  LODWORD(v463) = *(unsigned __int8 *)(v335 + 128);
  uint64_t v452 = *(void *)(v335 + 136);
  uint64_t v469 = *(void *)(v10 + v454[9]);
  uint64_t v342 = sub_1B2A6A084(v469);
  uint64_t v447 = v22;
  uint64_t v464 = v338;
  uint64_t v458 = v336;
  uint64_t v459 = v339;
  if (!v342)
  {
    uint64_t v470 = v3;
    uint64_t v376 = sub_1B2CF6A7C();
    sub_1B29C5A24(v376, v377, v482, v450, v449, v448);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v375 = v337;
    goto LABEL_309;
  }
  if (v342 < 1) {
    goto LABEL_337;
  }
  uint64_t v472 = v342;
  uint64_t v343 = sub_1B2CF6A7C();
  uint64_t v344 = v482;
  uint64_t v345 = v450;
  uint64_t v346 = v449;
  sub_1B29C5A24(v343, v347, v482, v450, v449, v448);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v348 = sub_1B2CF6A7C();
  uint64_t v349 = v345;
  uint64_t v350 = v460;
  uint64_t v351 = v346;
  int v352 = v448;
  sub_1B29C5A24(v348, v353, v344, v349, v351, v448);
  uint64_t v354 = qword_1E9C38AE8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v354 != -1) {
    swift_once();
  }
  uint64_t v355 = 0;
  uint64_t v475 = v337;
  v476 = (void *)v336;
  uint64_t v462 = v482;
  LODWORD(v478) = v449;
  LODWORD(v483) = v352;
  uint64_t v480 = v339;
  uint64_t v481 = v22;
  uint64_t v479 = v350;
  uint64_t v477 = v461;
  uint64_t v473 = v452;
  uint64_t v474 = v450;
  uint64_t v356 = v472;
  uint64_t v453 = v337;
  do
  {
    uint64_t v357 = v310[256];
    if (*(void *)(v357 + 16) && (v358 = sub_1B29DAF2C(), uint64_t v356 = v472, (v359 & 1) != 0))
    {
      sub_1B29C3B84(*(void *)(v357 + 56) + 40 * v358, (uint64_t)v488);
      sub_1B29D1D20(v488, (uint64_t)v505);
      uint64_t v467 = v506;
      uint64_t v471 = v507;
      v466 = (char *)sub_1B29AEC7C(v505, v506);
      uint64_t v361 = v475;
      uint64_t v360 = (uint64_t)v476;
      v491 = v476;
      uint64_t v492 = v475;
      uint64_t v362 = v462;
      uint64_t v493 = v462;
      uint64_t v363 = v474;
      uint64_t v494 = v474;
      LOWORD(v495) = v478;
      BYTE2(v495) = (_BYTE)v483;
      uint64_t v496 = v464;
      uint64_t v497 = v481;
      uint64_t v498 = v3;
      uint64_t v499 = v480;
      uint64_t v500 = v479;
      uint64_t v501 = v477;
      uint64_t v502 = v341;
      char v503 = v463;
      uint64_t v364 = v473;
      uint64_t v504 = v473;
      uint64_t v365 = *(void *)(v468 + v454[5]);
      uint64_t v470 = v3;
      uint64_t v366 = *(void *)(v471 + 8);
      *(void *)&long long v465 = v365;
      *((void *)&v465 + 1) = v366;
      sub_1B29C5A24((uint64_t)v476, v475, v462, v474, v478, v483);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      (*((void (**)(long long *__return_ptr, void **, uint64_t, void, uint64_t, uint64_t))&v465 + 1))(v488, &v491, v468, v465, v467, v471);
      uint64_t v475 = v361;
      v476 = (void *)v360;
      uint64_t v474 = v363;
      uint64_t v367 = v363;
      uint64_t v368 = v478;
      sub_1B29C5B68(v360, v361, v362, v367, v478, v483);
      uint64_t v473 = v364;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v369 = *((void *)&v488[4] + 1);
      if (*((void *)&v488[4] + 1))
      {
        uint64_t v370 = *((void *)&v488[6] + 1);
        uint64_t v341 = *((void *)&v488[5] + 1);
        uint64_t v470 = *((void *)&v488[3] + 1);
        uint64_t v471 = *(void *)&v488[5];
        v466 = *(char **)&v488[3];
        uint64_t v467 = *(void *)&v488[4];
        int v371 = v488[2];
        uint64_t v464 = *((void *)&v488[2] + 1);
        long long v465 = v488[1];
        v455 = *(void **)&v488[0];
        uint64_t v456 = *(void *)&v488[2] >> 16;
        uint64_t v457 = *((void *)&v488[0] + 1);
        LODWORD(v463) = LOBYTE(v488[6]);
        sub_1B29C5B68((uint64_t)v476, v475, v362, v474, v368, v483);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v505);
        uint64_t v475 = v457;
        v476 = v455;
        uint64_t v462 = v465;
        uint64_t v310 = &qword_1E9CAF000;
        uint64_t v473 = v370;
        uint64_t v474 = *((void *)&v465 + 1);
        LODWORD(v478) = v371;
        LODWORD(v483) = v456;
        uint64_t v480 = v467;
        uint64_t v481 = (uint64_t)v466;
        uint64_t v479 = v369;
        uint64_t v3 = v470;
        uint64_t v477 = v471;
      }
      else
      {
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v505);
        uint64_t v3 = v470;
        uint64_t v310 = &qword_1E9CAF000;
      }
      uint64_t v372 = v482;
      uint64_t v356 = v472;
    }
    else
    {
      uint64_t v372 = v482;
    }
    ++v355;
  }
  while (v356 != v355);
  uint64_t v470 = v3;
  swift_bridgeObjectRelease();
  uint64_t v373 = sub_1B2CF6A7C();
  sub_1B29C5B68(v373, v374, v372, v450, v449, v448);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v375 = v475;
  uint64_t v482 = v462;
  uint64_t v450 = v474;
  unsigned int v449 = v478;
  LODWORD(v448) = v483;
  uint64_t v447 = v481;
  uint64_t v458 = (uint64_t)v476;
  uint64_t v459 = v480;
  uint64_t v460 = v479;
  uint64_t v461 = v477;
  uint64_t v452 = v473;
  uint64_t v10 = v468;
  uint64_t v333 = v445;
LABEL_309:
  sub_1B2D94F60(v10, (void (*)(void))type metadata accessor for AnswerRenderIterator);
  sub_1B2D9533C();
  uint64_t v378 = *v333;
  unint64_t v379 = v451;
  sub_1B2D9537C(v451, *v333);
  unint64_t v380 = v378 + 112 * v379;
  uint64_t v381 = *(void *)(v380 + 32);
  uint64_t v382 = *(void *)(v380 + 40);
  uint64_t v383 = *(void *)(v380 + 48);
  uint64_t v384 = *(void *)(v380 + 56);
  uint64_t v3 = *(void *)(v380 + 96);
  *(void *)(v380 + 32) = v458;
  *(void *)(v380 + 40) = v375;
  uint64_t v385 = v450;
  *(void *)(v380 + 48) = v482;
  *(void *)(v380 + 56) = v385;
  uint64_t v386 = *(unsigned __int16 *)(v380 + 64);
  *(_WORD *)(v380 + 64) = v449;
  unsigned __int8 v387 = *(unsigned char *)(v380 + 66);
  *(unsigned char *)(v380 + 66) = v448;
  uint64_t v388 = v447;
  *(void *)(v380 + 72) = v464;
  *(void *)(v380 + 80) = v388;
  uint64_t v389 = v459;
  *(void *)(v380 + 88) = v470;
  *(void *)(v380 + 96) = v389;
  uint64_t v390 = v461;
  *(void *)(v380 + 104) = v460;
  *(void *)(v380 + 112) = v390;
  *(void *)(v380 + 120) = v341;
  *(unsigned char *)(v380 + 128) = v463;
  *(void *)(v380 + 136) = v452;
  sub_1B29C5B68(v381, v382, v383, v384, v386, v387);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v391 = swift_bridgeObjectRelease();
  nullsub_1(v391);
  uint64_t v72 = v446;
  if ((*(unsigned char *)(v446 + v440) & 1) == 0)
  {
    uint64_t v10 = (uint64_t)v443;
    uint64_t v22 = (uint64_t)v444;
LABEL_313:
    int64_t v308 = v451 + 1;
    int64_t v307 = v439;
    uint64_t v310 = &qword_1E9CAF000;
    if (v451 + 1 == v439) {
      goto LABEL_273;
    }
    goto LABEL_275;
  }
  *(void *)&v488[0] = v434;
  *((void *)&v488[0] + 1) = v436;
  uint64_t v10 = (uint64_t)v443;
  *(void *)&v488[1] = v444;
  *((void *)&v488[1] + 1) = v443;
  sub_1B2D9533C();
  sub_1B2D9537C(v379, *v333);
  uint64_t v3 = (uint64_t)v442;
  sub_1B2CB9B3C();
  uint64_t v22 = v432;
  id v442 = (id)v3;
  if (!v3)
  {
    nullsub_1(v392);
    uint64_t v22 = (uint64_t)v444;
    goto LABEL_313;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v393 = swift_bridgeObjectRelease();
  nullsub_1(v393);
  uint64_t v3 = v430;
  uint64_t v0 = v431;
  if (qword_1EB7E30F0 != -1) {
    goto LABEL_360;
  }
LABEL_316:
  uint64_t v394 = sub_1B29A4B98(v0, (uint64_t)qword_1EB7E30D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v22, v394, v0);
  uint64_t v395 = swift_allocObject();
  id v396 = v442;
  *(void *)(v395 + 16) = v442;
  id v397 = v396;
  id v398 = v396;
  unsigned __int8 v399 = sub_1B2E81F98();
  os_log_type_t v400 = sub_1B2E82DB8();
  uint64_t v401 = sub_1B2ADAC1C();
  *(unsigned char *)(v401 + 16) = 32;
  uint64_t v402 = sub_1B2ADAC1C();
  *(unsigned char *)(v402 + 16) = 8;
  uint64_t v403 = sub_1B29A2D00();
  *(void *)(v403 + 16) = sub_1B2D96E38;
  *(void *)(v403 + 24) = v395;
  uint64_t v404 = sub_1B29A2D00();
  *(void *)(v404 + 16) = sub_1B2C35C18;
  *(void *)(v404 + 24) = v403;
  sub_1B29A3EB4(qword_1EB7E5068);
  uint64_t v405 = swift_allocObject();
  sub_1B2A6A088(v405, 3);
  *unint64_t v406 = sub_1B2C35D58;
  v406[1] = v401;
  v406[2] = sub_1B2C35D58;
  v406[3] = v402;
  v406[4] = sub_1B2C35D30;
  v406[5] = v404;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v407 = v400;
  v483 = v399;
  if (os_log_type_enabled(v399, v400))
  {
    uint64_t v408 = (uint8_t *)sub_1B29B6960();
    uint64_t v482 = sub_1B2C36DF0();
    *(void *)&v488[0] = v482;
    *(_WORD *)uint64_t v408 = 258;
    v408[2] = 32;
    swift_release();
    v408[3] = 8;
    swift_release();
    v491 = v396;
    id v409 = v396;
    sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
    uint64_t v410 = sub_1B2E823E8();
    sub_1B29BF6BC(v410, v411, (uint64_t)v488, v412, v413, v414, v415, v416, v427, v428, v429, v430, v431, v432, v433, v434, v435, (uint64_t)v436, v437,
      (uint64_t)v438);
    v491 = (void *)v417;
    sub_1B2E82FB8();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    v418 = v483;
    _os_log_impl(&dword_1B2996000, v483, v407, "KGRenderer: textualizing answer failed: %s", v408, 0xCu);
    swift_arrayDestroy();
    sub_1B299B750();
    sub_1B299B750();
    id v419 = v443;

    id v420 = v444;
    id v421 = v436;

    swift_release();
  }
  else
  {
    swift_release();
    id v422 = v443;

    id v423 = v444;
    id v424 = v436;

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v430 + 8))(v432, v431);
LABEL_320:
  sub_1B29E5528();
}

uint64_t sub_1B2D93CE0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v11 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 96);
  int v13 = *(unsigned __int8 *)(a1 + 104);
  v45[1] = *(void *)(a1 + 8);
  v45[2] = v2;
  _OWORD v45[3] = v3;
  v45[4] = v5;
  v45[5] = v4;
  void v45[6] = v6;
  v45[7] = v7;
  v45[8] = v8;
  v45[9] = v9;
  v45[10] = v10;
  v45[11] = v11;
  v45[12] = v12;
  int v47 = v13;
  char v46 = v13;
  uint64_t v14 = sub_1B2D96EB4(6, v26, v12, v11, v10, v9, v8, v7, v6, v4);
  uint64_t v15 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v45[0] = v15;
  sub_1B2D95398(v14, (uint64_t)sub_1B2D95698, 0, isUniquelyReferenced_nonNull_native, v45);
  if (v1)
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    uint64_t v17 = v45[0];
    swift_bridgeObjectRelease();
    sub_1B2D96E3C();
    uint64_t v18 = sub_1B2D96EB4(4, v27, v29, v31, v33, v35, v37, v39, v41, v43);
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    v45[0] = v17;
    sub_1B2D95398(v18, (uint64_t)sub_1B2D95698, 0, v19, v45);
    uint64_t v20 = v45[0];
    swift_bridgeObjectRelease();
    sub_1B2D96E3C();
    uint64_t v21 = sub_1B2D96EB4(7, v28, v30, v32, v34, v36, v38, v40, v42, v44);
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    v45[0] = v20;
    sub_1B2D95398(v21, (uint64_t)sub_1B2D95698, 0, v22, v45);
    swift_bridgeObjectRelease();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_1B2D94FB8(v23);
    swift_bridgeObjectRelease_n();
    return v24;
  }
  return result;
}

uint64_t sub_1B2D93ECC(uint64_t a1, char *a2)
{
  uint64_t v2 = *(void *)(a1 + 96);
  char v3 = *(unsigned char *)(a1 + 104);
  v8[0] = *a2;
  long long v4 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  id v9[2] = *(_OWORD *)(a1 + 32);
  long long v9[3] = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  uint64_t v9[4] = *(_OWORD *)(a1 + 64);
  void v9[5] = v6;
  uint64_t v10 = v2;
  char v11 = v3;
  return sub_1B2D944C0(v8, v9);
}

uint64_t sub_1B2D9428C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!v3)
  {
LABEL_23:
    *a2 = v4;
    return result;
  }
  uint64_t v20 = a2;
  swift_bridgeObjectRetain();
  memcpy(__dst, (const void *)(v2 + 32), sizeof(__dst));
  uint64_t v5 = KnosisFact.extendedTriples()();
  long long v6 = (void *)(v5 + 16);
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = v8 + v7;
  if (__OFADD__(v8, v7))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v20;
    goto LABEL_23;
  }
  uint64_t v10 = v5;
  uint64_t v11 = 176;
  while (1)
  {
    if (!swift_isUniquelyReferenced_nonNull_native() || v9 > *(void *)(v4 + 24) >> 1)
    {
      sub_1B29B717C();
      uint64_t v4 = v12;
    }
    if (!*v6) {
      break;
    }
    uint64_t v13 = *(void *)(v4 + 16);
    if ((*(void *)(v4 + 24) >> 1) - v13 < v7) {
      goto LABEL_25;
    }
    unint64_t v14 = v4 + 112 * v13 + 32;
    if (v10 + 32 < v14 + 112 * v7 && v14 < v10 + 32 + 112 * v7) {
      goto LABEL_27;
    }
    swift_arrayInitWithCopy();
    if (v7)
    {
      uint64_t v16 = *(void *)(v4 + 16);
      BOOL v17 = __OFADD__(v16, v7);
      uint64_t v18 = v16 + v7;
      if (v17) {
        goto LABEL_26;
      }
      *(void *)(v4 + 16) = v18;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    if (!--v3) {
      goto LABEL_22;
    }
    memcpy(__dst, (const void *)(v2 + v11), sizeof(__dst));
    uint64_t v10 = KnosisFact.extendedTriples()();
    long long v6 = (void *)(v10 + 16);
    uint64_t v7 = *(void *)(v10 + 16);
    uint64_t v19 = *(void *)(v4 + 16);
    v11 += 144;
    uint64_t v9 = v19 + v7;
    if (__OFADD__(v19, v7)) {
      goto LABEL_21;
    }
  }
  if (!v7) {
    goto LABEL_18;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_1B2E834A8();
  __break(1u);
  return result;
}

uint64_t sub_1B2D94484(void *a1)
{
  id v1 = a1;
  sub_1B29A3EB4((uint64_t *)&unk_1EB7E3A10);
  return sub_1B2E823E8();
}

uint64_t sub_1B2D944C0(char *a1, long long *a2)
{
  uint64_t v3 = v2;
  uint64_t v70 = type metadata accessor for AnswerRenderIterator(0);
  sub_1B2999864();
  MEMORY[0x1F4188790](v6);
  sub_1B299B6D0();
  uint64_t v69 = v7;
  char v8 = *a1;
  long long v82 = a2[1];
  long long v83 = *a2;
  long long v80 = a2[3];
  long long v81 = a2[2];
  long long v78 = a2[5];
  long long v79 = a2[4];
  uint64_t v75 = *((void *)a2 + 12);
  char v72 = *((unsigned char *)a2 + 104);
  sub_1B29A3EB4(&qword_1E9C41EB8);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v98 = sub_1B2E82148();
  uint64_t Context = type metadata accessor for QueryContext();
  uint64_t v11 = v3 + *(int *)(Context + 44);
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = *(void *)(v11 + 8);
  unsigned __int8 v14 = *(unsigned char *)(v11 + 16);
  uint64_t v71 = v3;
  uint64_t v15 = *(void *)(v11 + 24);
  uint64_t v92 = *(void **)(v3 + *(int *)(Context + 36));
  LOBYTE(v85[0]) = v8;
  v85[1] = -50;
  v85[2] = v9;
  v85[3] = v12;
  v85[4] = v13;
  LOBYTE(v85[5]) = v14;
  v85[6] = v15;
  v91[0] = v83;
  v91[1] = v82;
  v91[2] = v81;
  v91[3] = v80;
  v91[4] = v79;
  v91[5] = v78;
  *(void *)&v91[6] = v75;
  BYTE8(v91[6]) = v72;
  sub_1B29C65EC(v12, v13, v14);
  swift_bridgeObjectRetain();
  sub_1B2C45950((unsigned __int8 *)v85, (uint64_t *)v91, v86);
  uint64_t v16 = v84;
  swift_bridgeObjectRelease();
  if (v84)
  {
    swift_bridgeObjectRelease();
    sub_1B2A2A2C8(v12, v13, v14);
    return swift_bridgeObjectRelease();
  }
  sub_1B2A2A2C8(v12, v13, v14);
  swift_bridgeObjectRelease();
  uint64_t v18 = v86[0];
  if (!v86[0])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v98;
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v18 + 16);
  if (!v19)
  {
    swift_bridgeObjectRelease();
    uint64_t v67 = 0;
LABEL_32:
    sub_1B2AF182C(v67);
    return v98;
  }
  int v73 = 0;
  uint64_t v68 = v18;
  uint64_t v20 = v18 + 56;
  for (uint64_t i = v19 - 1; ; --i)
  {
    uint64_t v22 = *(void *)v20;
    uint64_t v23 = *(void *)(v20 + 8);
    uint64_t v24 = *(void *)(v20 + 48);
    uint64_t v25 = *(void *)(v20 + 56);
    uint64_t v26 = *(void *)(v20 - 8);
    uint64_t v27 = *(void *)(v20 - 16);
    v86[0] = *(void *)(v20 - 24);
    v86[1] = v27;
    v86[2] = v26;
    uint64_t v28 = v22;
    v86[3] = v22;
    v86[4] = v23;
    long long v29 = *(_OWORD *)(v20 + 32);
    *(void *)&long long v80 = v20;
    long long v87 = *(_OWORD *)(v20 + 16);
    long long v88 = v29;
    uint64_t v30 = v29;
    uint64_t v89 = v24;
    uint64_t v90 = v25;
    *(void *)&long long v81 = v24;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    *(void *)&long long v82 = v30;
    swift_bridgeObjectRetain_n();
    sub_1B2CBF68C();
    if (v16)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1B2AF182C((uint64_t)v73);
    }
    uint64_t v76 = v27;
    memcpy(v85, v91, sizeof(v85));
    uint64_t v31 = *(void *)(*(void *)(v71 + *(int *)(v70 + 20)) + 16);
    sub_1B2D94F00(v71, v69, (void (*)(void))type metadata accessor for AnswerRenderIterator);
    if (v31)
    {
      uint64_t v93 = v85[7];
      uint64_t v94 = v85[8];
      uint64_t v95 = v85[9];
      uint64_t v96 = v85[10];
      __int16 v97 = v85[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B29FB8A4();
      char v33 = v32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B2D94F60(v69, (void (*)(void))type metadata accessor for AnswerRenderIterator);
      uint64_t v34 = v23;
      if ((v33 & 1) == 0)
      {
        sub_1B29C5A88((uint64_t)v85);
        uint64_t v16 = 0;
        goto LABEL_26;
      }
    }
    else
    {
      sub_1B2D94F60(v69, (void (*)(void))type metadata accessor for AnswerRenderIterator);
      uint64_t v34 = v23;
    }
    swift_bridgeObjectRetain();
    sub_1B2AF182C((uint64_t)v73);
    uint64_t v35 = v98;
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v92 = (void *)v35;
    uint64_t v42 = sub_1B29DB060(v28, v34, v36, v37, v38, v39, v40, v41, v68, v69, v70, v71, (uint64_t)v73, v76, i, *((uint64_t *)&v78 + 1), 0, *((uint64_t *)&v79 + 1), v80,
            *((uint64_t *)&v80 + 1),
            v81,
            *((uint64_t *)&v81 + 1),
            v82,
            *((uint64_t *)&v82 + 1),
            v25,
            *((uint64_t *)&v83 + 1));
    if (__OFADD__(*(void *)(v35 + 16), (v43 & 1) == 0)) {
      break;
    }
    unint64_t v44 = v42;
    char v45 = v43;
    sub_1B29A3EB4(&qword_1E9C43CC8);
    char v46 = sub_1B2E83398();
    uint64_t v53 = v92;
    if (v46)
    {
      uint64_t v54 = sub_1B29DB060(v28, v34, v47, v48, v49, v50, v51, v52, v68, v69, v70, v71, v74, v77, v78, *((uint64_t *)&v78 + 1), v79, *((uint64_t *)&v79 + 1), v80,
              *((uint64_t *)&v80 + 1),
              v81,
              *((uint64_t *)&v81 + 1),
              v82,
              *((uint64_t *)&v82 + 1),
              v83,
              *((uint64_t *)&v83 + 1));
      if ((v45 & 1) != (v55 & 1)) {
        goto LABEL_36;
      }
      unint64_t v44 = v54;
    }
    swift_bridgeObjectRelease();
    if ((v45 & 1) == 0)
    {
      sub_1B299EB3C((uint64_t)&v53[v44 >> 6]);
      uint64_t v56 = (uint64_t *)(v53[6] + 16 * v44);
      *uint64_t v56 = v28;
      v56[1] = v34;
      *(void *)(v53[7] + 8 * v44) = MEMORY[0x1E4FBC860];
      uint64_t v57 = v53[2];
      uint64_t v58 = v57 + 1;
      BOOL v59 = __OFADD__(v57, 1);
      swift_bridgeObjectRetain();
      if (v59) {
        goto LABEL_35;
      }
      v53[2] = v58;
    }
    swift_bridgeObjectRetain();
    uint64_t v60 = v53[7];
    swift_bridgeObjectRelease();
    uint64_t v61 = *(void *)(v60 + 8 * v44);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v60 + 8 * v44) = v61;
    uint64_t v98 = (uint64_t)v53;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B2C83E7C();
      sub_1B29B707C();
      uint64_t v61 = v65;
      *(void *)(v60 + 8 * v44) = v65;
    }
    unint64_t v64 = *(void *)(v61 + 16);
    unint64_t v63 = *(void *)(v61 + 24);
    if (v64 >= v63 >> 1)
    {
      sub_1B299B984(v63);
      sub_1B29B707C();
      uint64_t v61 = v66;
      *(void *)(v60 + 8 * v44) = v66;
    }
    uint64_t v16 = v79;
    uint64_t i = v78;
    *(void *)(v61 + 16) = v64 + 1;
    memcpy((void *)(v61 + 144 * v64 + 32), v85, 0x90uLL);
    swift_bridgeObjectRelease();
    int v73 = sub_1B2CBC3F0;
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!i)
    {
      swift_bridgeObjectRelease();
      uint64_t v67 = (uint64_t)v73;
      goto LABEL_32;
    }
    uint64_t v20 = v80 + 88;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2D94B48@<X0>(uint64_t a1@<X8>)
{
  sub_1B2D90D9C(a1);
  return sub_1B2D94F60(v1, (void (*)(void))type metadata accessor for AnswerRenderIterator);
}

uint64_t sub_1B2D94B8C(uint64_t a1)
{
  uint64_t v1 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v58 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (uint64_t)v1;
  }
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  uint64_t v1 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v46 = v3;
  while (1)
  {
    uint64_t v48 = v2;
    uint64_t v47 = v4;
    uint64_t v5 = *(void *)(v3 + v4 + 48);
    uint64_t v50 = *(void *)(v3 + v4 + 40);
    uint64_t v51 = *(void *)(v3 + v4 + 56);
    uint64_t v6 = *(void *)(v3 + v4 + 64);
    __int16 v52 = *(_WORD *)(v3 + v4 + 72);
    uint64_t v53 = *(void *)(v3 + v4 + 80);
    uint64_t v7 = *(void *)(v3 + v4 + 96);
    uint64_t v8 = *(void *)(v3 + v4 + 112);
    uint64_t v54 = *(void *)(v3 + v4 + 88);
    uint64_t v55 = *(void *)(v3 + v4 + 104);
    __int16 v56 = *(_WORD *)(v3 + v4 + 120);
    uint64_t v9 = *(void *)(v3 + v4 + 136);
    uint64_t v57 = *(void *)(v3 + v4 + 128);
    uint64_t v49 = *(void *)(v3 + v4 + 32);
    uint64_t v10 = v1;
    unint64_t v11 = sub_1B29DAE70();
    uint64_t v13 = v1;
    uint64_t v14 = v1[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      break;
    }
    unint64_t v17 = v11;
    char v18 = v12;
    uint64_t v19 = v13[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    BOOL v20 = v19 < v16;
    char v21 = v18;
    unint64_t v22 = v17;
    if (v20)
    {
      sub_1B2B04800();
      uint64_t v10 = v58;
      unint64_t v23 = sub_1B29DAE70();
      if ((v21 & 1) != (v24 & 1)) {
        goto LABEL_21;
      }
      unint64_t v22 = v23;
    }
    if (v21)
    {
      uint64_t v25 = v10[7];
      uint64_t v26 = *(void *)(v25 + 8 * v22);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v45 = v25;
      *(void *)(v25 + 8 * v22) = v26;
      uint64_t v3 = v46;
      uint64_t v28 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B299B8BC();
        uint64_t v40 = v39;
        sub_1B29B717C();
        uint64_t v3 = v40;
        uint64_t v26 = v41;
        *(void *)(v45 + 8 * v22) = v41;
      }
      unint64_t v29 = *(void *)(v26 + 16);
      unint64_t v30 = v29 + 1;
      uint64_t v31 = v9;
      if (v29 >= *(void *)(v26 + 24) >> 1)
      {
        uint64_t v42 = v3;
        sub_1B29B717C();
        unint64_t v30 = v29 + 1;
        uint64_t v3 = v42;
        uint64_t v26 = v43;
        uint64_t v31 = v9;
        *(void *)(v45 + 8 * v22) = v43;
      }
      uint64_t v32 = v48;
      *(void *)(v26 + 16) = v30;
      uint64_t v33 = v26 + 112 * v29;
      *(void *)(v33 + 32) = v49;
      *(void *)(v33 + 40) = v50;
      *(void *)(v33 + 48) = v5;
      *(void *)(v33 + 56) = v51;
      *(void *)(v33 + 64) = v6;
      *(_WORD *)(v33 + 72) = v52;
      *(void *)(v33 + 80) = v53;
      *(void *)(v33 + 88) = v54;
      *(void *)(v33 + 96) = v7;
      *(void *)(v33 + 104) = v55;
      *(void *)(v33 + 112) = v8;
      *(_WORD *)(v33 + 120) = v56;
      *(void *)(v33 + 128) = v57;
      *(void *)(v33 + 136) = v31;
      uint64_t v1 = v28;
    }
    else
    {
      sub_1B29A3EB4((uint64_t *)&unk_1E9C39F78);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1B2EC00A0;
      *(void *)(v34 + 32) = v49;
      *(void *)(v34 + 40) = v50;
      *(void *)(v34 + 48) = v5;
      *(void *)(v34 + 56) = v51;
      *(void *)(v34 + 64) = v6;
      *(_WORD *)(v34 + 72) = v52;
      *(void *)(v34 + 80) = v53;
      *(void *)(v34 + 88) = v54;
      *(void *)(v34 + 96) = v7;
      *(void *)(v34 + 104) = v55;
      *(void *)(v34 + 112) = v8;
      *(_WORD *)(v34 + 120) = v56;
      *(void *)(v34 + 128) = v57;
      *(void *)(v34 + 136) = v9;
      sub_1B299EB3C((uint64_t)&v10[v22 >> 6]);
      *(void *)(v10[6] + 8 * v22) = v49;
      *(void *)(v10[7] + 8 * v22) = v35;
      uint64_t v36 = v10[2];
      BOOL v37 = __OFADD__(v36, 1);
      uint64_t v38 = v36 + 1;
      uint64_t v3 = v46;
      if (v37) {
        goto LABEL_20;
      }
      uint64_t v1 = v10;
      id v10[2] = v38;
      uint64_t v32 = v48;
    }
    uint64_t v4 = v47 + 112;
    uint64_t v2 = v32 - 1;
    if (!v2)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2D94F00(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1B2999864();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1B2D94F60(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1B2999864();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1B2D94FB8(uint64_t a1)
{
  sub_1B29A3EB4(&qword_1E9C3E080);
  uint64_t result = sub_1B2E83468();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v35 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v32 = v6;
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v34 = result + 64;
  uint64_t v31 = (void *)result;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v35 + 48) + 16 * i);
    uint64_t v17 = v16[1];
    uint64_t v37 = *v16;
    uint64_t v18 = *(void *)(*(void *)(v35 + 56) + 8 * i);
    sub_1B2D95CE0();
    swift_bridgeObjectRetain_n();
    uint64_t v38 = v17;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1B2E82B28();
    uint64_t v42 = v19;
    uint64_t v20 = *(void *)(v18 + 16);
    if (v20)
    {
      uint64_t v21 = v20 - 1;
      for (uint64_t j = 32; ; j += 144)
      {
        memcpy(__dst, (const void *)(v18 + j), 0x90uLL);
        sub_1B29C5944((uint64_t)__dst);
        sub_1B2A02684();
        memcpy(v40, __src, sizeof(v40));
        sub_1B29C5A88((uint64_t)v40);
        if (!v21) {
          break;
        }
        --v21;
      }
      swift_bridgeObjectRelease();
      uint64_t v23 = v42;
    }
    else
    {
      uint64_t v23 = v19;
      swift_bridgeObjectRelease();
    }
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      sub_1B29A3EB4(&qword_1E9C39FA0);
      uint64_t v25 = swift_allocObject();
      size_t v26 = j__malloc_size((const void *)v25);
      *(void *)(v25 + 16) = v24;
      *(void *)(v25 + 24) = 2 * ((uint64_t)(v26 - 32) / 144);
      uint64_t v36 = sub_1B2A49AB0(v40, (char *)(v25 + 32), v24, v23);
      swift_bridgeObjectRetain();
      uint64_t result = sub_1B2A47690();
      if (v36 != (void *)v24) {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v3 = v31;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v25 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v27 = (void *)(v3[6] + 16 * i);
    *uint64_t v27 = v37;
    v27[1] = v38;
    *(void *)(v3[7] + 8 * i) = v25;
    uint64_t v28 = v3[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29)
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v3[2] = v30;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_35;
    }
    if (v13 >= v33) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v32 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v33) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v32 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v33) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v32 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v33) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v33) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v32 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

void sub_1B2D9533C()
{
  uint64_t v1 = *v0;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B2CC3364();
    *uint64_t v0 = v3;
  }
}

unint64_t sub_1B2D9537C(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(void *)(a2 + 16) <= result) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1B2D95398(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  sub_1B2CD7374(&v64);
  long long v60 = v64;
  long long v61 = v65;
  long long v62 = v66;
  uint64_t v63 = v67;
  uint64_t v58 = a1;
  swift_bridgeObjectRetain();
  uint64_t v59 = a3;
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_1B2CD73B4(v9);
  if (v11)
  {
    uint64_t v18 = v10;
    uint64_t v19 = v11;
    uint64_t v20 = v12;
    while (1)
    {
      uint64_t v21 = (void *)*a5;
      unint64_t v23 = sub_1B29DB060(v18, v19, v12, v13, v14, v15, v16, v17, v54, v55, v56, v57, v58, v59, v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), v62,
              *((uint64_t *)&v62 + 1),
              v63,
              v64,
              *((uint64_t *)&v64 + 1),
              v65,
              *((uint64_t *)&v65 + 1),
              v66);
      uint64_t v24 = v21[2];
      BOOL v25 = (v22 & 1) == 0;
      uint64_t v26 = v24 + v25;
      if (__OFADD__(v24, v25)) {
        break;
      }
      char v27 = v22;
      if (v21[3] >= v26)
      {
        if ((a4 & 1) == 0)
        {
          sub_1B29A3EB4(&qword_1E9C43CC8);
          sub_1B2E833A8();
        }
      }
      else
      {
        sub_1B2B04B78(v26, a4 & 1);
        uint64_t v34 = sub_1B29DB060(v18, v19, v28, v29, v30, v31, v32, v33, v54, v55, v56, v57, v58, v59, v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), v62,
                *((uint64_t *)&v62 + 1),
                v63,
                v64,
                *((uint64_t *)&v64 + 1),
                v65,
                *((uint64_t *)&v65 + 1),
                v66);
        if ((v27 & 1) != (v35 & 1)) {
          goto LABEL_36;
        }
        unint64_t v23 = v34;
      }
      uint64_t v36 = (void *)*a5;
      if (v27)
      {
        uint64_t v37 = *(void *)(v36[7] + 8 * v23);
        uint64_t v38 = *(void *)(v20 + 16);
        uint64_t v39 = *(void *)(v37 + 16);
        if (__OFADD__(v39, v38)) {
          goto LABEL_31;
        }
        swift_bridgeObjectRetain();
        if (!swift_isUniquelyReferenced_nonNull_native() || v39 + v38 > *(void *)(v37 + 24) >> 1)
        {
          sub_1B29B707C();
          uint64_t v37 = v40;
        }
        if (*(void *)(v20 + 16))
        {
          if ((*(void *)(v37 + 24) >> 1) - *(void *)(v37 + 16) < v38) {
            goto LABEL_34;
          }
          sub_1B29A4750();
          BOOL v43 = v43 || v41 >= v42;
          if (!v43) {
            goto LABEL_37;
          }
          swift_arrayInitWithCopy();
          if (v38)
          {
            uint64_t v44 = *(void *)(v37 + 16);
            BOOL v45 = __OFADD__(v44, v38);
            uint64_t v46 = v44 + v38;
            if (v45) {
              goto LABEL_35;
            }
            *(void *)(v37 + 16) = v46;
          }
        }
        else if (v38)
        {
          goto LABEL_33;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v51 = v36[7];
        uint64_t v47 = swift_bridgeObjectRelease();
        *(void *)(v51 + 8 * v23) = v37;
      }
      else
      {
        sub_1B299EB3C((uint64_t)&v36[v23 >> 6]);
        uint64_t v48 = (uint64_t *)(v36[6] + 16 * v23);
        *uint64_t v48 = v18;
        v48[1] = v19;
        *(void *)(v36[7] + 8 * v23) = v20;
        uint64_t v49 = v36[2];
        BOOL v45 = __OFADD__(v49, 1);
        uint64_t v50 = v49 + 1;
        if (v45) {
          goto LABEL_32;
        }
        v36[2] = v50;
      }
      uint64_t v18 = sub_1B2CD73B4(v47);
      uint64_t v19 = v52;
      uint64_t v20 = v12;
      a4 = 1;
      if (!v52) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    sub_1B2E83858();
    __break(1u);
LABEL_37:
    sub_1B299D294();
    uint64_t result = sub_1B2E834A8();
    __break(1u);
  }
  else
  {
LABEL_29:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B2A47690();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B2D95698@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B2CF2C64(&v6, *a1, a1[1], a1[2]);
  uint64_t v4 = v6;
  *a2 = result;
  a2[1] = v5;
  a2[2] = v4;
  return result;
}

uint64_t sub_1B2D956DC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B2D95714()
{
  return sub_1B2D94484(*(void **)(v0 + 16));
}

uint64_t sub_1B2D95738()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B2D95778(uint64_t a1)
{
  uint64_t v43 = sub_1B29A3EB4(&qword_1EB7E2BD0);
  uint64_t v44 = sub_1B29D22C4((unint64_t *)&qword_1EB7D9510, &qword_1EB7E2BD0);
  v42[0] = a1;
  uint64_t v2 = sub_1B29AEC7C(v42, v43);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v6 = sub_1B29D1C70(v39);
  uint64_t v7 = -1 << *(unsigned char *)(*(void *)v4 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = (uint64_t *)(*(void *)v4 + 56);
  uint64_t v10 = *v9;
  uint64_t v11 = -v7;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  *uint64_t v6 = *(void *)v4;
  v6[1] = (uint64_t)v9;
  uint64_t v6[2] = v8;
  v6[3] = 0;
  v6[4] = v12 & v10;
  swift_bridgeObjectRetain();
  sub_1B2A49CD8((uint64_t)v39, AssociatedTypeWitness);
  sub_1B2E82FA8();
  if (v38)
  {
    uint64_t v14 = MEMORY[0x1E4FBC868];
LABEL_20:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v39);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v42);
    return v14;
  }
  else
  {
    uint64_t v14 = MEMORY[0x1E4FBC868];
    uint64_t v15 = (uint64_t)v37;
    *(void *)&long long v13 = 136315138;
    long long v36 = v13;
    v35[1] = MEMORY[0x1E4FBC840] + 8;
    while (1)
    {
      v35[0] = v14;
      while (1)
      {
        uint64_t v37 = (void *)v15;
        uint64_t v16 = sub_1B2C84CB4((uint64_t *)&v37);
        uint64_t v18 = v17;
        if (v17) {
          break;
        }
        sub_1B2A49CD8((uint64_t)v39, AssociatedTypeWitness);
        sub_1B2E82FA8();
        uint64_t v15 = (uint64_t)v37;
        if (v38)
        {
          uint64_t v14 = v35[0];
          goto LABEL_20;
        }
      }
      uint64_t v19 = v16;
      uint64_t v20 = v35[0];
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v37 = (void *)v20;
      unint64_t v21 = sub_1B29DAE70();
      if (__OFADD__(*(void *)(v20 + 16), (v22 & 1) == 0)) {
        break;
      }
      unint64_t v23 = v21;
      char v24 = v22;
      sub_1B29A3EB4(&qword_1E9C41C98);
      if (sub_1B2E83398())
      {
        unint64_t v25 = sub_1B29DAE70();
        if ((v24 & 1) != (v26 & 1)) {
          goto LABEL_23;
        }
        unint64_t v23 = v25;
      }
      char v27 = v37;
      if (v24)
      {
        uint64_t v28 = (uint64_t)v37;
        uint64_t v29 = (uint64_t *)(v37[7] + 16 * v23);
        *uint64_t v29 = v19;
        v29[1] = v18;
        swift_bridgeObjectRelease();
      }
      else
      {
        v37[(v23 >> 6) + 8] |= 1 << v23;
        *(void *)(v27[6] + 8 * v23) = v15;
        uint64_t v30 = (uint64_t *)(v27[7] + 16 * v23);
        *uint64_t v30 = v19;
        v30[1] = v18;
        uint64_t v31 = v27[2];
        BOOL v32 = __OFADD__(v31, 1);
        uint64_t v33 = v31 + 1;
        if (v32) {
          goto LABEL_22;
        }
        uint64_t v28 = (uint64_t)v27;
        _OWORD v27[2] = v33;
      }
      swift_bridgeObjectRelease();
      sub_1B2A49CD8((uint64_t)v39, AssociatedTypeWitness);
      sub_1B2E82FA8();
      uint64_t v15 = (uint64_t)v37;
      uint64_t v14 = v28;
      if (v38) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    uint64_t result = sub_1B2E83858();
    __break(1u);
  }
  return result;
}

unint64_t sub_1B2D95CE0()
{
  unint64_t result = qword_1E9C43CD0;
  if (!qword_1E9C43CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43CD0);
  }
  return result;
}

void *sub_1B2D95D2C(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t Context = (int *)type metadata accessor for QueryContext();
    uint64_t v9 = Context[7];
    uint64_t v10 = (char *)v6 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1B2E80668();
    long long v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    swift_retain();
    v13(v10, v11, v12);
    uint64_t v14 = Context[8];
    uint64_t v15 = (void *)((char *)v6 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    unint64_t v17 = *(void *)((char *)a2 + v14 + 88);
    unsigned __int8 v18 = *((unsigned char *)a2 + v14 + 104);
    if (v17 >> 1 == 0xFFFFFFFF && (v18 & 0x1E) == 0)
    {
      memcpy(v15, v16, 0x69uLL);
    }
    else
    {
      uint64_t v20 = *v16;
      uint64_t v21 = v16[1];
      uint64_t v22 = v16[2];
      uint64_t v23 = v16[3];
      uint64_t v41 = v16[5];
      uint64_t v42 = v16[4];
      uint64_t v39 = v16[7];
      uint64_t v40 = v16[6];
      uint64_t v43 = v16[8];
      uint64_t v44 = v16[9];
      uint64_t v45 = v16[10];
      uint64_t v46 = v16[12];
      sub_1B29C6430(*v16, v21, v22, v23, v42, v41, v40, v39, v43, v44, v45, v17, v46, v18);
      *uint64_t v15 = v20;
      v15[1] = v21;
      void v15[2] = v22;
      v15[3] = v23;
      v15[4] = v42;
      v15[5] = v41;
      void v15[6] = v40;
      v15[7] = v39;
      v15[8] = v43;
      v15[9] = v44;
      v15[10] = v45;
      v15[11] = v17;
      v15[12] = v46;
      *((unsigned char *)v15 + 104) = v18;
    }
    *(void *)((char *)v6 + Context[9]) = *(void *)((char *)a2 + Context[9]);
    *(void *)((char *)v6 + Context[10]) = *(void *)((char *)a2 + Context[10]);
    uint64_t v24 = Context[11];
    unint64_t v25 = (char *)v6 + v24;
    char v26 = (char *)a2 + v24;
    uint64_t v27 = *(void *)((char *)a2 + v24);
    uint64_t v28 = *(void *)((char *)a2 + v24 + 8);
    unsigned __int8 v29 = *((unsigned char *)a2 + v24 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B29C65EC(v27, v28, v29);
    *(void *)unint64_t v25 = v27;
    *((void *)v25 + 1) = v28;
    v25[16] = v29;
    *((void *)v25 + 3) = *((void *)v26 + 3);
    uint64_t v30 = Context[12];
    uint64_t v31 = (void *)((char *)v6 + v30);
    BOOL v32 = (void *)((char *)a2 + v30);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    v31[2] = v32[2];
    *((unsigned char *)v6 + Context[13]) = *((unsigned char *)a2 + Context[13]);
    *((unsigned char *)v6 + Context[14]) = *((unsigned char *)a2 + Context[14]);
    uint64_t v34 = a3[6];
    *(void *)((char *)v6 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)v6 + v34) = *(void *)((char *)a2 + v34);
    uint64_t v35 = a3[8];
    *(void *)((char *)v6 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    long long v36 = (char *)v6 + v35;
    uint64_t v37 = (char *)a2 + v35;
    *(void *)long long v36 = *(void *)v37;
    v36[8] = v37[8];
    *(void *)((char *)v6 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t sub_1B2D96010(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v3 = a1 + Context[7];
  uint64_t v4 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = a1 + Context[8];
  unint64_t v6 = *(void *)(v5 + 88);
  unsigned __int8 v7 = *(unsigned char *)(v5 + 104);
  if (v6 >> 1 != 0xFFFFFFFF || (v7 & 0x1E) != 0) {
    sub_1B2A34A94(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), v6, *(void *)(v5 + 96), v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2A2A2C8(*(void *)(a1 + Context[11]), *(void *)(a1 + Context[11] + 8), *(unsigned char *)(a1 + Context[11] + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1B2D96170(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v7 = Context[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = Context[8];
  long long v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  unint64_t v15 = *(void *)((char *)a2 + v12 + 88);
  unsigned __int8 v16 = *((unsigned char *)a2 + v12 + 104);
  if (v15 >> 1 == 0xFFFFFFFF && (v16 & 0x1E) == 0)
  {
    memcpy(v13, v14, 0x69uLL);
  }
  else
  {
    uint64_t v18 = *v14;
    uint64_t v19 = v14[1];
    uint64_t v20 = v14[2];
    uint64_t v21 = v14[3];
    uint64_t v39 = v14[5];
    uint64_t v40 = v14[4];
    uint64_t v37 = v14[7];
    uint64_t v38 = v14[6];
    uint64_t v41 = v14[8];
    uint64_t v42 = v14[9];
    uint64_t v43 = v14[10];
    uint64_t v44 = v14[12];
    sub_1B29C6430(*v14, v19, v20, v21, v40, v39, v38, v37, v41, v42, v43, v15, v44, v16);
    *long long v13 = v18;
    v13[1] = v19;
    void v13[2] = v20;
    v13[3] = v21;
    v13[4] = v40;
    void v13[5] = v39;
    v13[6] = v38;
    v13[7] = v37;
    v13[8] = v41;
    v13[9] = v42;
    v13[10] = v43;
    v13[11] = v15;
    v13[12] = v44;
    *((unsigned char *)v13 + 104) = v16;
  }
  *(void *)((char *)a1 + Context[9]) = *(void *)((char *)a2 + Context[9]);
  *(void *)((char *)a1 + Context[10]) = *(void *)((char *)a2 + Context[10]);
  uint64_t v22 = Context[11];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)((char *)a2 + v22);
  uint64_t v26 = *(void *)((char *)a2 + v22 + 8);
  unsigned __int8 v27 = *((unsigned char *)a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B29C65EC(v25, v26, v27);
  *(void *)uint64_t v23 = v25;
  *((void *)v23 + 1) = v26;
  v23[16] = v27;
  *((void *)v23 + 3) = *((void *)v24 + 3);
  uint64_t v28 = Context[12];
  unsigned __int8 v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v31 = v30[1];
  *unsigned __int8 v29 = *v30;
  v29[1] = v31;
  _OWORD v29[2] = v30[2];
  *((unsigned char *)a1 + Context[13]) = *((unsigned char *)a2 + Context[13]);
  *((unsigned char *)a1 + Context[14]) = *((unsigned char *)a2 + Context[14]);
  uint64_t v32 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
  uint64_t v33 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1B2D96408(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v7 = Context[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = Context[8];
  uint64_t v12 = (char *)a1 + v11;
  long long v13 = (void *)((char *)a2 + v11);
  unint64_t v14 = *(void *)((char *)a1 + v11 + 88);
  int v15 = *((unsigned char *)a1 + v11 + 104) & 0x1E;
  unint64_t v16 = *(void *)((char *)a2 + v11 + 88);
  unsigned __int8 v17 = *((unsigned char *)a2 + v11 + 104);
  BOOL v19 = (v17 & 0x1E) == 0 && v16 >> 1 == 0xFFFFFFFF;
  if (v14 >> 1 == 0xFFFFFFFF && v15 == 0)
  {
    if (!v19)
    {
      uint64_t v39 = v13[1];
      uint64_t v40 = v13[2];
      uint64_t v41 = v13[4];
      uint64_t v68 = v41;
      uint64_t v70 = v13[3];
      uint64_t v42 = v13[6];
      uint64_t v64 = v42;
      uint64_t v66 = v13[5];
      uint64_t v62 = v13[7];
      uint64_t v72 = v13[8];
      uint64_t v74 = v13[9];
      uint64_t v76 = v13[10];
      uint64_t v78 = v13[12];
      uint64_t v43 = *v13;
      sub_1B29C6430(v43, v39, v40, v70, v41, v66, v42, v62, v72, v74, v76, v16, v78, v17);
      *(void *)uint64_t v12 = v43;
      *((void *)v12 + 1) = v39;
      *((void *)v12 + 2) = v40;
      *((void *)v12 + 3) = v70;
      *((void *)v12 + 4) = v68;
      *((void *)v12 + 5) = v66;
      *((void *)v12 + 6) = v64;
      *((void *)v12 + 7) = v62;
      *((void *)v12 + 8) = v72;
      *((void *)v12 + 9) = v74;
      *((void *)v12 + 10) = v76;
      *((void *)v12 + 11) = v16;
      *((void *)v12 + 12) = v78;
      v12[104] = v17;
      goto LABEL_17;
    }
  }
  else
  {
    if (!v19)
    {
      uint64_t v21 = v13[1];
      uint64_t v69 = v21;
      uint64_t v71 = *v13;
      uint64_t v22 = v13[2];
      uint64_t v23 = v13[3];
      uint64_t v24 = v13[5];
      uint64_t v65 = v24;
      uint64_t v67 = v13[4];
      uint64_t v25 = v13[7];
      uint64_t v61 = v25;
      uint64_t v63 = v13[6];
      uint64_t v73 = v13[8];
      uint64_t v75 = v13[9];
      uint64_t v77 = v13[10];
      uint64_t v26 = v13[12];
      sub_1B29C6430(v71, v21, v22, v23, v67, v24, v63, v25, v73, v75, v77, v16, v26, v17);
      uint64_t v27 = *(void *)v12;
      uint64_t v28 = *((void *)v12 + 1);
      uint64_t v29 = *((void *)v12 + 2);
      uint64_t v30 = *((void *)v12 + 3);
      uint64_t v31 = *((void *)v12 + 4);
      uint64_t v32 = *((void *)v12 + 5);
      uint64_t v33 = *((void *)v12 + 6);
      uint64_t v34 = *((void *)v12 + 7);
      long long v35 = *((_OWORD *)v12 + 4);
      long long v36 = *((_OWORD *)v12 + 5);
      uint64_t v37 = *((void *)v12 + 12);
      unsigned __int8 v38 = v12[104];
      *(void *)uint64_t v12 = v71;
      *((void *)v12 + 1) = v69;
      *((void *)v12 + 2) = v22;
      *((void *)v12 + 3) = v23;
      *((void *)v12 + 4) = v67;
      *((void *)v12 + 5) = v65;
      *((void *)v12 + 6) = v63;
      *((void *)v12 + 7) = v61;
      *((void *)v12 + 8) = v73;
      *((void *)v12 + 9) = v75;
      *((void *)v12 + 10) = v77;
      *((void *)v12 + 11) = v16;
      *((void *)v12 + 12) = v26;
      v12[104] = v17;
      sub_1B2A34A94(v27, v28, v29, v30, v31, v32, v33, v34, v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37, v38);
      goto LABEL_17;
    }
    sub_1B2C40FF8((uint64_t)v12);
  }
  memcpy(v12, v13, 0x69uLL);
LABEL_17:
  *(void *)((char *)a1 + Context[9]) = *(void *)((char *)a2 + Context[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + Context[10]) = *(void *)((char *)a2 + Context[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = Context[11];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  uint64_t v47 = *(void *)((char *)a2 + v44);
  uint64_t v48 = *(void *)((char *)a2 + v44 + 8);
  unsigned __int8 v49 = *((unsigned char *)a2 + v44 + 16);
  sub_1B29C65EC(v47, v48, v49);
  uint64_t v50 = *(void *)v45;
  uint64_t v51 = *((void *)v45 + 1);
  *(void *)uint64_t v45 = v47;
  *((void *)v45 + 1) = v48;
  unsigned __int8 v52 = v45[16];
  v45[16] = v49;
  sub_1B2A2A2C8(v50, v51, v52);
  *((void *)v45 + 3) = *((void *)v46 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = Context[12];
  uint64_t v54 = (void *)((char *)a1 + v53);
  uint64_t v55 = (char *)a2 + v53;
  *uint64_t v54 = *(void *)((char *)a2 + v53);
  v54[1] = *(void *)((char *)a2 + v53 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54[2] = *((void *)v55 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + Context[13]) = *((unsigned char *)a2 + Context[13]);
  *((unsigned char *)a1 + Context[14]) = *((unsigned char *)a2 + Context[14]);
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v56 = a3[8];
  uint64_t v57 = (char *)a1 + v56;
  uint64_t v58 = (char *)a2 + v56;
  char v59 = v58[8];
  *(void *)uint64_t v57 = *(void *)v58;
  v57[8] = v59;
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2D96804(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v7 = Context[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  memcpy((void *)(a1 + Context[8]), (const void *)(a2 + Context[8]), 0x69uLL);
  *(void *)(a1 + Context[9]) = *(void *)(a2 + Context[9]);
  *(void *)(a1 + Context[10]) = *(void *)(a2 + Context[10]);
  uint64_t v11 = Context[11];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  long long v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = Context[12];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(unsigned char *)(a1 + Context[13]) = *(unsigned char *)(a2 + Context[13]);
  *(unsigned char *)(a1 + Context[14]) = *(unsigned char *)(a2 + Context[14]);
  uint64_t v18 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

void *sub_1B2D9695C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  uint64_t Context = (int *)type metadata accessor for QueryContext();
  uint64_t v7 = Context[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B2E80668();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = Context[8];
  uint64_t v12 = (void *)((char *)a1 + v11);
  long long v13 = (_OWORD *)((char *)a2 + v11);
  unint64_t v14 = *(void *)((char *)a1 + v11 + 88);
  unsigned __int8 v15 = *((unsigned char *)v12 + 104);
  if (v14 >> 1 == 0xFFFFFFFF && (v15 & 0x1E) == 0) {
    goto LABEL_11;
  }
  unint64_t v17 = *((void *)v13 + 11);
  char v18 = *((unsigned char *)v13 + 104);
  if (v17 >> 1 == 0xFFFFFFFF && (v18 & 0x1E) == 0)
  {
    sub_1B2C40FF8((uint64_t)v12);
LABEL_11:
    memcpy(v12, v13, 0x69uLL);
    goto LABEL_12;
  }
  uint64_t v20 = *((void *)v13 + 10);
  uint64_t v21 = *((void *)v13 + 12);
  uint64_t v22 = *v12;
  uint64_t v23 = v12[1];
  uint64_t v24 = v12[2];
  uint64_t v25 = v12[3];
  uint64_t v26 = v12[4];
  uint64_t v27 = v12[5];
  uint64_t v28 = v12[6];
  uint64_t v29 = v12[7];
  long long v30 = *((_OWORD *)v12 + 4);
  uint64_t v31 = v12[10];
  uint64_t v32 = v12[12];
  long long v33 = v13[1];
  *(_OWORD *)uint64_t v12 = *v13;
  *((_OWORD *)v12 + 1) = v33;
  long long v34 = v13[3];
  *((_OWORD *)v12 + 2) = v13[2];
  *((_OWORD *)v12 + 3) = v34;
  *((_OWORD *)v12 + 4) = v13[4];
  v12[10] = v20;
  v12[11] = v17;
  v12[12] = v21;
  *((unsigned char *)v12 + 104) = v18;
  sub_1B2A34A94(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, v14, v32, v15);
LABEL_12:
  *(void *)((char *)a1 + Context[9]) = *(void *)((char *)a2 + Context[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + Context[10]) = *(void *)((char *)a2 + Context[10]);
  swift_bridgeObjectRelease();
  uint64_t v35 = Context[11];
  long long v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  LOBYTE(v35) = *((unsigned char *)a2 + v35 + 16);
  uint64_t v38 = *(void *)v36;
  uint64_t v39 = *((void *)v36 + 1);
  *(_OWORD *)long long v36 = *(_OWORD *)v37;
  unsigned __int8 v40 = v36[16];
  v36[16] = v35;
  sub_1B2A2A2C8(v38, v39, v40);
  *((void *)v36 + 3) = *((void *)v37 + 3);
  swift_bridgeObjectRelease();
  uint64_t v41 = Context[12];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = *(void *)((char *)a2 + v41 + 8);
  *uint64_t v42 = *(void *)((char *)a2 + v41);
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v42[2] = *((void *)v43 + 2);
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + Context[13]) = *((unsigned char *)a2 + Context[13]);
  *((unsigned char *)a1 + Context[14]) = *((unsigned char *)a2 + Context[14]);
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  *(void *)uint64_t v46 = *(void *)v47;
  v46[8] = v47[8];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2D96BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2D96BF0);
}

uint64_t sub_1B2D96BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for QueryContext();
  sub_1B299B768();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_1B2D96C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2D96C94);
}

void sub_1B2D96C98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for QueryContext();
  sub_1B299B768();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1B2D96D20()
{
  uint64_t result = type metadata accessor for QueryContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1B2D96DD8()
{
  unint64_t result = qword_1E9C43CE0;
  if (!qword_1E9C43CE0)
  {
    type metadata accessor for AnswerRenderIterator(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43CE0);
  }
  return result;
}

double sub_1B2D96E98()
{
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  return result;
}

uint64_t sub_1B2D96EB4@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  *(unsigned char *)(v10 - 65) = a1;
  return sub_1B2D93ECC((uint64_t)va, (char *)(v10 - 65));
}

uint64_t sub_1B2D96F34()
{
  return swift_bridgeObjectRelease();
}

uint64_t IndexResult.init(facts:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  a2[1] = 0;
  a2[2] = 0;
  *a2 = result;
  return result;
}

uint64_t IndexResult.init(errMsg:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = result;
  a3[2] = a2;
  return result;
}

unint64_t IndexResult.description.getter()
{
  uint64_t v1 = *v0;
  sub_1B2E831F8();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  MEMORY[0x1B3EB1020](v2, &type metadata for KnosisInternalFact);
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  swift_bridgeObjectRetain();
  sub_1B2E82518();
  swift_bridgeObjectRelease();
  sub_1B2E82518();
  return 0xD000000000000013;
}

uint64_t destroy for IndexResult()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s20IntelligencePlatform11IndexResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IndexResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for IndexResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for IndexResult()
{
  return &type metadata for IndexResult;
}

BOOL sub_1B2D971EC()
{
  sub_1B299D804();
  return *(void *)(*(void *)(v0 + 16) + 16) == 0;
}

uint64_t sub_1B2D97224(uint64_t a1)
{
  uint64_t result = sub_1B2D971EC();
  if (result) {
    return result;
  }
  if (sub_1B2D971EC()) {
    sub_1B2D980CC(a1);
  }
  sub_1B299D804();
  uint64_t v85 = *(void *)(a1 + 16) + 64;
  sub_1B299F9C0();
  unint64_t v6 = v5 & v4;
  uint64_t v7 = v1 + 16;
  id v86 = (uint64_t *)(v1 + 24);
  int64_t v87 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v88 = v9;
  swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      uint64_t v93 = (v6 - 1) & v6;
      unint64_t v11 = __clz(__rbit64(v6)) | (v10 << 6);
      goto LABEL_21;
    }
    int64_t v12 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_43;
    }
    if (v12 >= v87) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v85 + 8 * v12);
    ++v10;
    if (!v13)
    {
      uint64_t v10 = v12 + 1;
      if (v12 + 1 >= v87) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v85 + 8 * v10);
      if (!v13)
      {
        uint64_t v10 = v12 + 2;
        if (v12 + 2 >= v87) {
          return swift_release();
        }
        unint64_t v13 = *(void *)(v85 + 8 * v10);
        if (!v13) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v93 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v10 << 6);
LABEL_21:
    unsigned __int8 v15 = (uint64_t *)(*(void *)(v88 + 48) + 16 * v11);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = *(void *)(v88 + 56) + 40 * v11;
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v91 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 16);
    uint64_t v21 = *(void *)(v18 + 24);
    char v22 = *(unsigned char *)(v18 + 32);
    sub_1B2D99B98();
    uint64_t v23 = *(void *)(*(void *)v7 + 16);
    swift_bridgeObjectRetain();
    uint64_t v96 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23
      && (sub_1B29DB060(v17, v16, v24, v25, v26, v27, v28, v29, v84, v85, (uint64_t)v86, v87, v88, v89, v91, v93, v19, v98, v99,
            v100,
            v101,
            (uint64_t)v102,
            v103,
            v104,
            v105,
            v106),
          (v30 & 1) != 0))
    {
      swift_endAccess();
      sub_1B29A0E20();
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1B29D9C68(&v98, v17, v16);
      uint64_t v39 = v31;
      if (*(void *)(v32 + 8))
      {
        uint64_t v40 = swift_bridgeObjectRetain();
        sub_1B2DCA660(v40);
        uint64_t v42 = v41;
        swift_bridgeObjectRelease();
        uint64_t v43 = sub_1B2DC2268(v42);
        uint64_t v51 = sub_1B2D99BF8(v43, v44, v45, v46, v47, v48, v49, v50, v84, v85, (uint64_t)v86, v87, v88, v90, v91, v93, v96, v98);
        ((void (*)(char *))v39)(v51);
        swift_endAccess();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        long long v81 = sub_1B2D99BF8((uint64_t)v31, v32, v33, v34, v35, v36, v37, v38, v84, v85, (uint64_t)v86, v87, v88, v90, v91, v93, v96, v98);
        ((void (*)(char *))v39)(v81);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      unint64_t v6 = v94;
    }
    else
    {
      swift_endAccess();
      sub_1B29A0E20();
      swift_bridgeObjectRetain();
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v102 = *(void **)v7;
      *(void *)uint64_t v7 = 0x8000000000000000;
      sub_1B29DB060(v17, v16, v52, v53, v54, v55, v56, v57, v84, v85, (uint64_t)v86, v87, v88, v10, v91, v93, v96, v98, v99,
        v100,
        v101,
        (uint64_t)v102,
        v103,
        v104,
        v105,
        v106);
      sub_1B29A5414();
      if (v60)
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      unint64_t v61 = v58;
      char v62 = v59;
      sub_1B29A3EB4(&qword_1E9C3A6A8);
      if (sub_1B2E83398())
      {
        uint64_t v69 = sub_1B29DB060(v17, v16, v63, v64, v65, v66, v67, v68, v84, v85, (uint64_t)v86, v87, v88, v89, v92, v95, v97, v98, v99,
                v100,
                v101,
                (uint64_t)v102,
                v103,
                v104,
                v105,
                v106);
        if ((v62 & 1) != (v70 & 1)) {
          goto LABEL_46;
        }
        unint64_t v61 = v69;
      }
      uint64_t v71 = v102;
      if (v62)
      {
        uint64_t v72 = v102[7] + 40 * v61;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)uint64_t v72 = v92;
        *(void *)(v72 + 8) = v97;
        *(void *)(v72 + 16) = v20;
        *(void *)(v72 + 24) = v21;
        *(unsigned char *)(v72 + 32) = v22;
      }
      else
      {
        v102[(v61 >> 6) + 8] |= 1 << v61;
        uint64_t v73 = (uint64_t *)(v71[6] + 16 * v61);
        *uint64_t v73 = v17;
        v73[1] = v16;
        uint64_t v74 = v71[7] + 40 * v61;
        *(void *)uint64_t v74 = v92;
        *(void *)(v74 + 8) = v97;
        *(void *)(v74 + 16) = v20;
        *(void *)(v74 + 24) = v21;
        *(unsigned char *)(v74 + 32) = v22;
        uint64_t v75 = v71[2];
        BOOL v60 = __OFADD__(v75, 1);
        uint64_t v76 = v75 + 1;
        if (v60) {
          goto LABEL_44;
        }
        v71[2] = v76;
        swift_bridgeObjectRetain();
      }
      *(void *)uint64_t v7 = v71;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_1B29A0E20();
      uint64_t v77 = *v86;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *id v86 = v77;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B29B7048();
        uint64_t v77 = v82;
        *id v86 = v82;
      }
      unint64_t v79 = *(void *)(v77 + 16);
      if (v79 >= *(void *)(v77 + 24) >> 1)
      {
        sub_1B29B7048();
        uint64_t v77 = v83;
        *id v86 = v83;
      }
      *(void *)(v77 + 16) = v79 + 1;
      uint64_t v80 = v77 + 16 * v79;
      *(void *)(v80 + 32) = v17;
      *(void *)(v80 + 40) = v16;
      swift_endAccess();
      uint64_t v10 = v89;
      unint64_t v6 = v95;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v87) {
    return swift_release();
  }
  unint64_t v13 = *(void *)(v85 + 8 * v14);
  if (v13)
  {
    uint64_t v10 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v87) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v85 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2D97734()
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  uint64_t v2 = sub_1B2E82148();
  swift_beginAccess();
  *(void *)(v0 + 16) = v2;
  swift_bridgeObjectRelease();
  sub_1B2D99C30();
  *(void *)(v0 + 24) = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D977BC(uint64_t a1)
{
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(inited + 16) = sub_1B2E82148();
  uint64_t v182 = (uint64_t *)(inited + 16);
  *(void *)(inited + 24) = v4;
  sub_1B299D804();
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    goto LABEL_42;
  }
  unint64_t v7 = sub_1B2D97D38();
  uint64_t v156 = inited + 24;
  if (v7 < sub_1B2D97D38())
  {
    uint64_t v133 = v1;
    uint64_t v141 = inited;
    uint64_t v8 = v1 + 16;
    swift_bridgeObjectRetain();
    uint64_t v125 = v5;
    uint64_t v9 = v5 + 40;
    uint64_t v148 = v1 + 16;
    while (1)
    {
      uint64_t v10 = *(void *)(v9 - 8);
      sub_1B2D99B98();
      uint64_t v11 = *(void *)(*(void *)v8 + 16);
      swift_bridgeObjectRetain();
      if (!v11) {
        goto LABEL_12;
      }
      uint64_t v12 = swift_bridgeObjectRetain();
      sub_1B29A49AC(v12, v13, v14, v15, v16, v17, v18, v19, v125, v133, v141, v148, v156, v163, v170, v177, (uint64_t)v182, v185, v187,
        v189,
        v190,
        v191,
        v192,
        v193,
        v194,
        v195);
      if ((v20 & 1) == 0) {
        break;
      }
      sub_1B29A0F8C();
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1B29A0E20();
      swift_bridgeObjectRetain();
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v188 = *v182;
      *uint64_t v182 = 0x8000000000000000;
      sub_1B29A49AC(isUniquelyReferenced_nonNull_native, v22, v23, v24, v25, v26, v27, v28, v125, v133, v141, v148, v156, v163, v170, v10, (uint64_t)v182, v185, v188,
        v189,
        v190,
        v191,
        v192,
        v193,
        v194,
        v195);
      sub_1B29A5414();
      if (v30)
      {
        __break(1u);
        goto LABEL_44;
      }
      char v31 = v29;
      sub_1B29A3EB4(&qword_1E9C3A6A8);
      uint64_t v32 = sub_1B2E83398();
      if (v32)
      {
        uint64_t v32 = sub_1B29A49AC(v32, v33, v34, v35, v36, v37, v38, v39, v126, v134, v142, v149, v157, v164, v171, v178, (uint64_t)v183, v185, v187,
                v189,
                v190,
                v191,
                v192,
                v193,
                v194,
                v195);
        if ((v31 & 1) != (v33 & 1)) {
          goto LABEL_47;
        }
      }
      if (v31)
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = swift_bridgeObjectRelease();
        sub_1B2D99BB4(v40, v41, v42, v43, v44, v45, v46, v47, v126, v134, v142, v149, v157, v164, v171, SBYTE4(v171));
      }
      else
      {
        sub_1B299E0A8(v32, v33, v34, v35, v36, v37, v38, v39, v126, v134, v142, v149, v157, v164, v171, SBYTE4(v171));
        if (v30) {
          goto LABEL_45;
        }
        *(void *)(v187 + 16) = v56;
        uint64_t v48 = swift_bridgeObjectRetain();
      }
      sub_1B2D99C10(v48, v49, v50, v51, v52, v53, v54, v55, v127, v135, v143, v150, v158, v165, v172, v178, v183);
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_1B29A0E20();
      uint64_t v57 = *v159;
      uint64_t v58 = swift_isUniquelyReferenced_nonNull_native();
      if ((v58 & 1) == 0)
      {
        sub_1B299AF84();
        uint64_t v57 = v58;
      }
      if (*(void *)(v57 + 16) >= *(void *)(v57 + 24) >> 1) {
        sub_1B2C83CD4();
      }
      sub_1B2D99BE0(v58, v59, v60, v61, v62, v63, v64, v65, v128, v136, v144, v151, (uint64_t)v159, v166, v173, v179);
      swift_endAccess();
      uint64_t v8 = v148;
LABEL_20:
      v9 += 16;
      if (!--v6) {
        goto LABEL_41;
      }
    }
    swift_bridgeObjectRelease();
LABEL_12:
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_1B299D804();
  uint64_t v66 = *(void *)(*(void *)(v1 + 24) + 16);
  if (!v66)
  {
LABEL_42:
    sub_1B2D980CC(inited);
    return swift_release();
  }
  uint64_t v137 = v1;
  uint64_t v141 = inited;
  uint64_t v67 = a1 + 16;
  uint64_t v129 = swift_bridgeObjectRetain();
  uint64_t v68 = v129 + 40;
  uint64_t v152 = a1 + 16;
  while (1)
  {
    uint64_t v69 = *(void *)(v68 - 8);
    sub_1B2D99B98();
    uint64_t v70 = *(void *)(*(void *)v67 + 16);
    swift_bridgeObjectRetain();
    if (!v70) {
      goto LABEL_32;
    }
    uint64_t v71 = swift_bridgeObjectRetain();
    sub_1B29A49AC(v71, v72, v73, v74, v75, v76, v77, v78, v129, v137, v141, v152, v156, v163, v170, v177, (uint64_t)v182, v185, v187,
      v189,
      v190,
      v191,
      v192,
      v193,
      v194,
      v195);
    if ((v79 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_32:
      swift_endAccess();
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
    sub_1B29A0F8C();
    swift_endAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1B29A0E20();
    swift_bridgeObjectRetain();
    uint64_t v80 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v186 = *v182;
    *uint64_t v182 = 0x8000000000000000;
    sub_1B29A49AC(v80, v81, v82, v83, v84, v85, v86, v87, v129, v137, v141, v152, v156, v163, v170, v69, (uint64_t)v182, v186, v187,
      v189,
      v190,
      v191,
      v192,
      v193,
      v194,
      v195);
    sub_1B29A5414();
    if (v30) {
      break;
    }
    char v89 = v88;
    sub_1B29A3EB4(&qword_1E9C3A6A8);
    uint64_t v90 = sub_1B2E83398();
    if (v90)
    {
      uint64_t v90 = sub_1B29A49AC(v90, v91, v92, v93, v94, v95, v96, v97, v130, v138, v145, v153, v160, v167, v174, v180, (uint64_t)v184, v185, v187,
              v189,
              v190,
              v191,
              v192,
              v193,
              v194,
              v195);
      if ((v89 & 1) != (v91 & 1)) {
        goto LABEL_47;
      }
    }
    if (v89)
    {
      swift_bridgeObjectRelease();
      uint64_t v98 = swift_bridgeObjectRelease();
      sub_1B2D99BB4(v98, v99, v100, v101, v102, v103, v104, v105, v130, v138, v145, v153, v160, v167, v174, SBYTE4(v174));
    }
    else
    {
      sub_1B299E0A8(v90, v91, v92, v93, v94, v95, v96, v97, v130, v138, v145, v153, v160, v167, v174, SBYTE4(v174));
      if (v30) {
        goto LABEL_46;
      }
      *(void *)(v185 + 16) = v114;
      uint64_t v106 = swift_bridgeObjectRetain();
    }
    sub_1B2D99C10(v106, v107, v108, v109, v110, v111, v112, v113, v131, v139, v146, v154, v161, v168, v175, v180, v184);
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1B29A0E20();
    uint64_t v115 = *v162;
    uint64_t v116 = swift_isUniquelyReferenced_nonNull_native();
    if ((v116 & 1) == 0)
    {
      sub_1B299AF84();
      uint64_t v115 = v116;
    }
    if (*(void *)(v115 + 16) >= *(void *)(v115 + 24) >> 1) {
      sub_1B2C83CD4();
    }
    sub_1B2D99BE0(v116, v117, v118, v119, v120, v121, v122, v123, v132, v140, v147, v155, (uint64_t)v162, v169, v176, v181);
    swift_endAccess();
    uint64_t v67 = v152;
LABEL_40:
    v68 += 16;
    if (!--v66)
    {
LABEL_41:
      uint64_t inited = v141;
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t result = sub_1B2E83858();
  __break(1u);
  return result;
}

uint64_t sub_1B2D97CCC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B2DCA590();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1B2D99008(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1B2D97D38()
{
  sub_1B299D804();
  return *(void *)(*(void *)(v0 + 16) + 16);
}

uint64_t sub_1B2D97D68()
{
  sub_1B29A0E20();
  swift_retain();
  sub_1B2DB4A30((uint64_t *)(v0 + 24), v0);
  swift_endAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2D97DCC()
{
  sub_1B29A0E20();
  swift_retain();
  sub_1B2DB4A30((uint64_t *)(v0 + 24), v0);
  swift_endAccess();
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = v0 + 16;
  uint64_t v29 = swift_bridgeObjectRetain();
  uint64_t v3 = (uint64_t *)(v29 + 40);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v5 = *(v3 - 1);
    uint64_t v6 = *v3;
    sub_1B2D99B98();
    uint64_t v7 = *(void *)v2;
    uint64_t v8 = *(void *)(*(void *)v2 + 16);
    swift_bridgeObjectRetain();
    if (!v8) {
      goto LABEL_11;
    }
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1B29DB060(v5, v6, v9, v10, v11, v12, v13, v14, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,
            v39,
            v40,
            v41,
            v42,
            v43,
            v44,
            v45);
    if ((v16 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_11:
      swift_endAccess();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    uint64_t v17 = *(void *)(v7 + 56) + 40 * v15;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 24);
    char v22 = *(unsigned char *)(v17 + 32);
    swift_endAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B29B7768();
      uint64_t v4 = v25;
    }
    unint64_t v23 = *(void *)(v4 + 16);
    if (v23 >= *(void *)(v4 + 24) >> 1)
    {
      sub_1B29B7768();
      uint64_t v4 = v26;
    }
    *(void *)(v4 + 16) = v23 + 1;
    uint64_t v24 = v4 + 40 * v23;
    *(void *)(v24 + 32) = v19;
    *(void *)(v24 + 40) = v18;
    *(void *)(v24 + 48) = v20;
    *(void *)(v24 + 56) = v21;
    *(unsigned char *)(v24 + 64) = v22;
LABEL_12:
    v3 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B2D97FA4(long long *a1)
{
  long long v2 = a1[1];
  long long v18 = *a1;
  long long v19 = v2;
  LOBYTE(v20) = *((unsigned char *)a1 + 32);
  long long v3 = v18;
  sub_1B2D99B98();
  if (!*(void *)(*(void *)(v1 + 16) + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  sub_1B29DB060(v18, *((uint64_t *)&v18 + 1), v4, v5, v6, v7, v8, v9, v14, v15, v16, v17, v18, *((uint64_t *)&v18 + 1), v19, *((uint64_t *)&v19 + 1), v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    vars0,
    vars8);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    sub_1B29A0E20();
    swift_bridgeObjectRetain();
    sub_1B2E31454();
    uint64_t v11 = *(void *)(*(void *)(v1 + 24) + 16);
    sub_1B2E31A98(v11);
    uint64_t v12 = *(void *)(v1 + 24);
    *(void *)(v12 + 16) = v11 + 1;
    *(_OWORD *)(v12 + 16 * v11 + 32) = v3;
    swift_endAccess();
    goto LABEL_6;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
LABEL_6:
  sub_1B29A0E20();
  swift_bridgeObjectRetain();
  sub_1B2D99B60((uint64_t)&v18);
  sub_1B2B2A134(&v18, v3, *((void *)&v3 + 1));
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D980CC(uint64_t a1)
{
  sub_1B299D804();
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *(void *)(v1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1B299D804();
  uint64_t v4 = *(void *)(a1 + 24);
  sub_1B2D99C30();
  *(void *)(v1 + 24) = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D98164(uint64_t a1, char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  char v8 = *a2;
  v12[0] = *(void *)a1;
  v12[1] = v2;
  v12[2] = v3;
  _OWORD v12[3] = v4;
  void v12[4] = v5;
  long long v9 = *(_OWORD *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 40);
  long long v14 = v9;
  uint64_t v15 = v6;
  uint64_t v16 = v7;
  char v11 = v8;
  return sub_1B2D988C8(v12, &v11, 1);
}

unint64_t sub_1B2D981C4(unint64_t a1)
{
  unint64_t v2 = v1;
  unint64_t result = sub_1B2D97D38();
  if (result > a1)
  {
    uint64_t v30 = a1;
    if (a1) {
      goto LABEL_7;
    }
    if (qword_1EB7E30F0 != -1) {
      goto LABEL_23;
    }
    while (1)
    {
      uint64_t v5 = sub_1B2E81FB8();
      sub_1B29A4B98(v5, (uint64_t)qword_1EB7E30D8);
      uint64_t v6 = sub_1B2E81F98();
      os_log_type_t v7 = sub_1B2E82DB8();
      if (os_log_type_enabled(v6, v7))
      {
        char v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v8 = 0;
        _os_log_impl(&dword_1B2996000, v6, v7, "limit 0 on operator should be avoided", v8, 2u);
        MEMORY[0x1B3EB30C0](v8, -1, -1);
      }

      a1 = v30;
LABEL_7:
      unint64_t v9 = v2 + 24;
      sub_1B29A0E20();
      swift_retain();
      sub_1B2DB4A30((uint64_t *)(v2 + 24), v2);
      swift_endAccess();
      unint64_t v10 = sub_1B2D97D38();
      uint64_t v32 = v10;
      if (v10 < a1) {
        goto LABEL_20;
      }
      if (v10 == a1) {
        break;
      }
      if (v10 > v30)
      {
        char v11 = (uint64_t *)(v2 + 16);
        unint64_t v2 = v30;
        uint64_t v12 = 16 * v30;
        uint64_t v33 = v11;
        uint64_t v31 = v9;
        while (v2 < *(void *)(*(void *)v9 + 16))
        {
          uint64_t v13 = *(void *)v9 + v12;
          uint64_t v14 = *(void *)(v13 + 32);
          uint64_t v15 = *(void *)(v13 + 40);
          sub_1B29A0E20();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v22 = sub_1B29DB060(v14, v15, v16, v17, v18, v19, v20, v21, v29, v30, v31, v32, (uint64_t)v33, v34, v35, v36, v37, v38, v39,
                  v40,
                  v41,
                  v42,
                  v43,
                  v44,
                  v45,
                  v46);
          LOBYTE(v14) = v23;
          swift_bridgeObjectRelease();
          if (v14)
          {
            swift_isUniquelyReferenced_nonNull_native();
            uint64_t v34 = *v11;
            *char v11 = 0x8000000000000000;
            sub_1B29A3EB4(&qword_1E9C3A6A8);
            sub_1B2E83398();
            swift_bridgeObjectRelease();
            uint64_t v24 = (uint64_t *)(*(void *)(v34 + 56) + 40 * v22);
            uint64_t v25 = *v24;
            uint64_t v26 = v24[1];
            sub_1B2E833B8();
            *uint64_t v33 = v34;
            unint64_t v9 = v31;
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v25 = 0;
            uint64_t v26 = 0;
          }
          ++v2;
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_1B29E4D3C(v25, v26);
          v12 += 16;
          char v11 = v33;
          if (v32 == v2) {
            goto LABEL_16;
          }
        }
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
      __break(1u);
LABEL_23:
      swift_once();
    }
LABEL_16:
    if (*(void *)(*(void *)v9 + 16) >= v30)
    {
      uint64_t v27 = *(void *)v9 + 32;
      uint64_t v28 = swift_bridgeObjectRetain();
      *(void *)unint64_t v9 = sub_1B2D2BDEC(v28, v27, 0, (2 * v30) | 1);
      return swift_bridgeObjectRelease();
    }
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1B2D984EC()
{
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1B299D804();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + 64;
  sub_1B299F9C0();
  unint64_t v5 = v4 & v3;
  int64_t v7 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    uint64_t v14 = *(void *)(*(void *)(v1 + 56) + 40 * i + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_1B2DCA660(v14);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v18 = v16;
    swift_retain();
    sub_1B2D97CCC(&v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B2AD355C();
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v8 >= v7) {
      goto LABEL_20;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    if (!v12) {
      break;
    }
LABEL_13:
    unint64_t v5 = (v12 - 1) & v12;
  }
  int64_t v13 = v8 + 1;
  if (v8 + 1 >= v7) {
    goto LABEL_20;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12) {
    goto LABEL_12;
  }
  int64_t v13 = v8 + 2;
  if (v8 + 2 >= v7) {
    goto LABEL_20;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12) {
    goto LABEL_12;
  }
  int64_t v13 = v8 + 3;
  if (v8 + 3 >= v7)
  {
LABEL_20:
    swift_release();
    return v19;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
LABEL_12:
    int64_t v8 = v13;
    goto LABEL_13;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v7) {
      goto LABEL_20;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_13;
    }
  }
LABEL_22:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1B2D986BC()
{
  return 0xD000000000000017;
}

uint64_t sub_1B2D98788(uint64_t result, char *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    char v3 = *a2;
    uint64_t v4 = swift_bridgeObjectRetain() + 56;
    do
    {
      uint64_t v5 = *(void *)(v4 - 16);
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)v4;
      uint64_t v8 = *(void *)(v4 + 8);
      uint64_t v9 = *(void *)(v4 + 48);
      uint64_t v10 = *(void *)(v4 + 56);
      v13[0] = *(void *)(v4 - 24);
      v13[1] = v5;
      void v13[2] = v6;
      v13[3] = v7;
      v13[4] = v8;
      long long v11 = *(_OWORD *)(v4 + 32);
      long long v14 = *(_OWORD *)(v4 + 16);
      long long v15 = v11;
      uint64_t v16 = v9;
      uint64_t v17 = v10;
      char v12 = v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2D988C8(v13, &v12, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 88;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2D988C8(uint64_t *a1, char *a2, int a3)
{
  HIDWORD(v32) = a3;
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v37 = a1[1];
  uint64_t v38 = a1[5];
  uint64_t v33 = a1[6];
  uint64_t v34 = v6;
  uint64_t v7 = a1[8];
  uint64_t v39 = a1[7];
  unint64_t v8 = a1[9];
  uint64_t v35 = *a1;
  uint64_t v36 = a1[10];
  char v9 = *a2;
  if (*a2)
  {
    char v10 = sub_1B2E837A8();
    swift_bridgeObjectRelease();
    if (v8) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = 0;
    }
    unint64_t v12 = 0xE000000000000000;
    if (v8) {
      unint64_t v12 = v8;
    }
    if (v10)
    {
      uint64_t v13 = v5;
    }
    else
    {
      uint64_t v6 = v11;
      uint64_t v13 = v12;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = v5;
  }
  swift_bridgeObjectRetain();
  swift_beginAccess();
  if (*(void *)(*(void *)(v3 + 16) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1B29DB060(v6, v13, v14, v15, v16, v17, v18, v19, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48);
    if (v20)
    {
      sub_1B2D99BD0();
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = v21[2];
      uint64_t v25 = v21[3];
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&long long v49 = v23;
      *((void *)&v49 + 1) = v22;
      *(void *)&long long v50 = v24;
      *((void *)&v50 + 1) = v25;
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  swift_bridgeObjectRetain();
  sub_1B29A3EB4(&qword_1E9C43CE8);
  *(void *)&long long v49 = v6;
  *((void *)&v49 + 1) = v13;
  long long v50 = (unint64_t)sub_1B2E82148();
  sub_1B29A0E20();
  swift_bridgeObjectRetain();
  sub_1B2E31454();
  uint64_t v26 = *(void *)(*(void *)(v3 + 24) + 16);
  sub_1B2E31A98(v26);
  uint64_t v27 = *(void *)(v3 + 24);
  *(void *)(v27 + 16) = v26 + 1;
  uint64_t v28 = v27 + 16 * v26;
  *(void *)(v28 + 32) = v6;
  *(void *)(v28 + 40) = v13;
  swift_endAccess();
LABEL_16:
  if ((v32 & 0x100000000) != 0) {
    *((void *)&v50 + 1) = v4;
  }
  sub_1B29A3EB4((uint64_t *)&unk_1E9C3BD50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B2EC00A0;
  *(void *)(inited + 32) = v35;
  *(void *)(inited + 40) = v37;
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 56) = v34;
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = v38;
  *(void *)(inited + 80) = v33;
  *(void *)(inited + 88) = v39;
  *(void *)(inited + 96) = v7;
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 112) = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2DC2268(inited);
  swift_setDeallocating();
  sub_1B2D98F24();
  v51[0] = v49;
  v51[1] = v50;
  char v52 = v9;
  sub_1B29A0E20();
  sub_1B2B2A134(v51, v6, v13);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D98BF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a3 + 16;
  sub_1B2D99C50();
  if (*(void *)(*(void *)(a3 + 16) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1B29DB060(v4, v5, v9, v10, v11, v12, v13, v14, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      vars0,
      vars8);
    if (v15)
    {
      sub_1B2D99BD0();
      double v18 = *v16;
      unint64_t v17 = *((void *)v16 + 1);
      double v19 = v16[3];
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  sub_1B29A3EB4(&qword_1E9C43CE8);
  sub_1B2E82148();
  double v18 = 0.0;
  double v19 = 0.0;
  unint64_t v17 = 0xE000000000000000;
LABEL_6:
  sub_1B2D99C50();
  if (*(void *)(*(void *)v8 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1B29DB060(v7, v6, v20, v21, v22, v23, v24, v25, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      vars0,
      vars8);
    if (v26)
    {
      sub_1B2D99BD0();
      double v29 = *v27;
      unint64_t v28 = *((void *)v27 + 1);
      double v30 = v27[3];
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  sub_1B29A3EB4(&qword_1E9C43CE8);
  sub_1B2E82148();
  double v29 = 0.0;
  double v30 = 0.0;
  unint64_t v28 = 0xE000000000000000;
LABEL_11:
  if (v19 == v30)
  {
    if (*(void *)&v29 == *(void *)&v18 && v28 == v17) {
      char v32 = 0;
    }
    else {
      char v32 = sub_1B2E837A8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v32 = v30 < v19;
  }
  return v32 & 1;
}

uint64_t sub_1B2D98E34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B2D98E5C()
{
  sub_1B2D98E34();
  sub_1B29A1EB0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResultGraph()
{
  return self;
}

unint64_t sub_1B2D98EAC()
{
  return sub_1B2D986BC();
}

uint64_t sub_1B2D98ED0()
{
  swift_arrayDestroy();
  sub_1B29A1EB0();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2D98F0C()
{
  return sub_1B2D98F78((uint64_t *)&unk_1E9C43CF0);
}

uint64_t sub_1B2D98F18()
{
  return sub_1B2D98F78(&qword_1EB7E3BB8);
}

uint64_t sub_1B2D98F24()
{
  swift_arrayDestroy();
  sub_1B29A1EB0();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2D98F60()
{
  return sub_1B2D98F78(&qword_1E9C38110);
}

uint64_t sub_1B2D98F6C()
{
  return sub_1B2D98F78(&qword_1EB7D9790);
}

uint64_t sub_1B2D98F78(uint64_t *a1)
{
  sub_1B29A3EB4(a1);
  swift_arrayDestroy();
  sub_1B29A1EB0();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2D98FCC()
{
  swift_arrayDestroy();
  sub_1B29A1EB0();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2D99008(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B2E83738();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1B2D99810(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_165;
  }
  uint64_t v109 = result;
  uint64_t v107 = a1;
  uint64_t v108 = sub_1B29B6974(v3 / 2);
  uint64_t v117 = v5;
  uint64_t v110 = v3;
  if (v3 <= 0)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    unint64_t v48 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_128:
    if (v48 < 2)
    {
LABEL_141:
      uint64_t result = swift_bridgeObjectRelease();
      if (v110 >= -1)
      {
        *(void *)(v108 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_170;
    }
    uint64_t v97 = *v107;
    while (1)
    {
      unint64_t v98 = v48 - 2;
      if (v48 < 2) {
        break;
      }
      if (!v97) {
        goto LABEL_174;
      }
      uint64_t v99 = result;
      uint64_t v100 = *(void *)(result + 32 + 16 * v98);
      uint64_t v101 = *(void *)(result + 32 + 16 * (v48 - 1) + 8);
      uint64_t result = sub_1B2D99968((char *)(v97 + 88 * v100), (char *)(v97 + 88 * *(void *)(result + 32 + 16 * (v48 - 1))), v97 + 88 * v101, v117);
      if (v1) {
        goto LABEL_124;
      }
      if (v101 < v100) {
        goto LABEL_160;
      }
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t result = v99;
      }
      else {
        uint64_t result = (uint64_t)sub_1B2DCA54C();
      }
      if (v98 >= *(void *)(result + 16)) {
        goto LABEL_161;
      }
      uint64_t v102 = (void *)(result + 32 + 16 * v98);
      *uint64_t v102 = v100;
      v102[1] = v101;
      unint64_t v103 = *(void *)(result + 16);
      if (v48 > v103) {
        goto LABEL_162;
      }
      uint64_t v104 = result;
      memmove((void *)(result + 32 + 16 * (v48 - 1)), (const void *)(result + 32 + 16 * v48), 16 * (v103 - v48));
      uint64_t result = v104;
      *(void *)(v104 + 16) = v103 - 1;
      unint64_t v48 = v103 - 1;
      if (v103 <= 2) {
        goto LABEL_141;
      }
    }
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
    goto LABEL_167;
  }
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v105 = *a1 + 80;
  uint64_t v106 = *a1 + 16;
  uint64_t result = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v6 + 1;
    uint64_t v113 = result;
    uint64_t v114 = v6;
    if (v6 + 1 >= v3) {
      goto LABEL_48;
    }
    uint64_t v10 = v7 + 88 * v9;
    double v11 = *(double *)(v10 + 16);
    uint64_t v12 = v7 + 88 * v6;
    double v13 = *(double *)(v12 + 16);
    if (v11 < v13)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v3) {
        goto LABEL_39;
      }
      char v15 = 1;
      goto LABEL_19;
    }
    if (v11 == v13)
    {
      if (*(void *)v10 != *(void *)v12 || *(void *)(v10 + 8) != *(void *)(v12 + 8))
      {
        char v15 = sub_1B2E837A8();
        uint64_t v14 = v8 + 2;
        uint64_t result = v113;
        if (v8 + 2 >= v3) {
          goto LABEL_35;
        }
        goto LABEL_19;
      }
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v3) {
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v3) {
        goto LABEL_47;
      }
    }
    char v15 = 0;
LABEL_19:
    unint64_t v17 = (double *)(v106 + 88 * v14);
    uint64_t v18 = v14;
    do
    {
      uint64_t v14 = v18;
      uint64_t v19 = v7 + 88 * v9;
      double v20 = *(double *)(v19 + 16);
      if (*v17 >= v20)
      {
        if (*v17 != v20) {
          goto LABEL_31;
        }
        if (*((void *)v17 - 2) == *(void *)v19 && *((void *)v17 - 1) == *(void *)(v19 + 8))
        {
          uint64_t result = v113;
LABEL_31:
          if ((v15 & 1) == 0) {
            goto LABEL_32;
          }
          uint64_t v8 = v114;
LABEL_38:
          if (v14 >= v8)
          {
LABEL_39:
            if (v8 >= v14)
            {
LABEL_47:
              uint64_t v9 = v14;
              goto LABEL_48;
            }
            uint64_t v23 = v8;
            uint64_t v24 = 88 * v14;
            uint64_t v111 = v14;
            uint64_t v25 = v14;
            uint64_t v26 = v23;
            uint64_t v27 = 88 * v23;
            do
            {
              if (v26 != --v25)
              {
                if (!v7) {
                  goto LABEL_173;
                }
                uint64_t v28 = v7 + v24;
                uint64_t v29 = *(void *)(v7 + v27);
                uint64_t v30 = *(void *)(v7 + v27 + 8);
                uint64_t v31 = *(void *)(v7 + v27 + 16);
                uint64_t v32 = *(void *)(v7 + v27 + 24);
                uint64_t v121 = *(void *)(v7 + v27 + 32);
                uint64_t v125 = *(void *)(v7 + v27 + 72);
                uint64_t v123 = *(void *)(v7 + v27 + 80);
                long long v118 = *(_OWORD *)(v7 + v27 + 40);
                long long v115 = *(_OWORD *)(v7 + v27 + 56);
                memmove((void *)(v7 + v27), (const void *)(v7 + v24 - 88), 0x58uLL);
                *(void *)(v28 - 88) = v29;
                *(void *)(v28 - 80) = v30;
                *(void *)(v28 - 72) = v31;
                *(void *)(v28 - 64) = v32;
                *(void *)(v28 - 56) = v121;
                *(_OWORD *)(v28 - 48) = v118;
                *(_OWORD *)(v28 - 32) = v115;
                *(void *)(v28 - 16) = v125;
                *(void *)(v28 - 8) = v123;
                uint64_t result = v113;
              }
              ++v26;
              v24 -= 88;
              v27 += 88;
            }
            while (v26 < v25);
            uint64_t v3 = v110;
            uint64_t v9 = v111;
LABEL_46:
            uint64_t v8 = v114;
            goto LABEL_48;
          }
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
          return result;
        }
        char v22 = v15 ^ sub_1B2E837A8();
        uint64_t result = v113;
        if (v22) {
          goto LABEL_34;
        }
      }
      else if ((v15 & 1) == 0)
      {
        uint64_t v9 = v14;
        goto LABEL_46;
      }
LABEL_32:
      uint64_t v18 = v14 + 1;
      v17 += 11;
      uint64_t v9 = v14;
    }
    while (v14 + 1 < v3);
    ++v14;
LABEL_34:
    uint64_t v8 = v114;
LABEL_35:
    uint64_t v9 = v14;
    if (v15) {
      goto LABEL_38;
    }
LABEL_48:
    if (v9 >= v3) {
      goto LABEL_70;
    }
    if (__OFSUB__(v9, v8)) {
      goto LABEL_164;
    }
    if (v9 - v8 >= v109) {
      goto LABEL_70;
    }
    if (__OFADD__(v8, v109)) {
      goto LABEL_168;
    }
    if (v8 + v109 >= v3) {
      uint64_t v33 = v3;
    }
    else {
      uint64_t v33 = v8 + v109;
    }
    if (v33 < v8) {
      goto LABEL_169;
    }
    if (v9 != v33)
    {
      uint64_t v34 = (double *)(v105 + 88 * v9);
      uint64_t v112 = v33;
      do
      {
        uint64_t v119 = v9;
        uint64_t v35 = v7 + 88 * v9;
        uint64_t v36 = *(void *)v35;
        uint64_t v37 = *(void *)(v35 + 8);
        double v38 = *(double *)(v35 + 16);
        uint64_t v39 = v8;
        uint64_t v116 = v34;
        uint64_t v40 = v34;
        do
        {
          double v41 = *(v40 - 19);
          if (v38 >= v41)
          {
            if (v38 != v41) {
              break;
            }
            if (v36 == *((void *)v40 - 21) && v37 == *((void *)v40 - 20)) {
              break;
            }
            uint64_t result = sub_1B2E837A8();
            if ((result & 1) == 0) {
              break;
            }
          }
          if (!v7) {
            goto LABEL_171;
          }
          uint64_t v36 = *((void *)v40 - 10);
          uint64_t v37 = *((void *)v40 - 9);
          double v38 = *(v40 - 8);
          uint64_t v43 = *((void *)v40 - 7);
          uint64_t v44 = *((void *)v40 - 6);
          double v45 = *v40;
          uint64_t v126 = *((void *)v40 - 1);
          long long v124 = *(_OWORD *)(v40 - 5);
          long long v122 = *(_OWORD *)(v40 - 3);
          uint64_t result = (uint64_t)memcpy(v40 - 10, v40 - 21, 0x58uLL);
          *(v40 - 11) = v45;
          v40 -= 11;
          *((void *)v40 - 10) = v36;
          *((void *)v40 - 9) = v37;
          *(v40 - 8) = v38;
          *((void *)v40 - 7) = v43;
          *((void *)v40 - 6) = v44;
          *(_OWORD *)(v40 - 5) = v124;
          *(_OWORD *)(v40 - 3) = v122;
          ++v39;
          *((void *)v40 - 1) = v126;
        }
        while (v119 != v39);
        uint64_t v9 = v119 + 1;
        uint64_t v8 = v114;
        uint64_t v34 = v116 + 11;
      }
      while (v119 + 1 != v112);
      uint64_t v9 = v112;
      uint64_t result = v113;
    }
LABEL_70:
    if (v9 < v8) {
      goto LABEL_163;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t result = v113;
    }
    else {
      uint64_t result = (uint64_t)sub_1B2DCA454(0, *(void *)(v113 + 16) + 1, 1, (char *)v113);
    }
    unint64_t v47 = *(void *)(result + 16);
    unint64_t v46 = *(void *)(result + 24);
    unint64_t v48 = v47 + 1;
    uint64_t v120 = v9;
    if (v47 >= v46 >> 1) {
      uint64_t result = (uint64_t)sub_1B2DCA454((char *)(v46 > 1), v47 + 1, 1, (char *)result);
    }
    *(void *)(result + 16) = v48;
    uint64_t v49 = result + 32;
    long long v50 = (uint64_t *)(result + 32 + 16 * v47);
    *long long v50 = v114;
    v50[1] = v120;
    if (v47) {
      break;
    }
    unint64_t v48 = 1;
LABEL_118:
    uint64_t v3 = v110;
    uint64_t v6 = v120;
    if (v120 >= v110) {
      goto LABEL_128;
    }
  }
  while (1)
  {
    unint64_t v51 = v48 - 1;
    if (v48 >= 4)
    {
      unint64_t v56 = v49 + 16 * v48;
      uint64_t v57 = *(void *)(v56 - 64);
      uint64_t v58 = *(void *)(v56 - 56);
      BOOL v62 = __OFSUB__(v58, v57);
      uint64_t v59 = v58 - v57;
      if (v62) {
        goto LABEL_148;
      }
      uint64_t v61 = *(void *)(v56 - 48);
      uint64_t v60 = *(void *)(v56 - 40);
      BOOL v62 = __OFSUB__(v60, v61);
      uint64_t v54 = v60 - v61;
      char v55 = v62;
      if (v62) {
        goto LABEL_149;
      }
      unint64_t v63 = v48 - 2;
      uint64_t v64 = (uint64_t *)(v49 + 16 * (v48 - 2));
      uint64_t v66 = *v64;
      uint64_t v65 = v64[1];
      BOOL v62 = __OFSUB__(v65, v66);
      uint64_t v67 = v65 - v66;
      if (v62) {
        goto LABEL_150;
      }
      BOOL v62 = __OFADD__(v54, v67);
      uint64_t v68 = v54 + v67;
      if (v62) {
        goto LABEL_152;
      }
      if (v68 >= v59)
      {
        uint64_t v86 = (uint64_t *)(v49 + 16 * v51);
        uint64_t v88 = *v86;
        uint64_t v87 = v86[1];
        BOOL v62 = __OFSUB__(v87, v88);
        uint64_t v89 = v87 - v88;
        if (v62) {
          goto LABEL_158;
        }
        BOOL v79 = v54 < v89;
        goto LABEL_107;
      }
    }
    else
    {
      if (v48 != 3)
      {
        uint64_t v80 = *(void *)(result + 32);
        uint64_t v81 = *(void *)(result + 40);
        BOOL v62 = __OFSUB__(v81, v80);
        uint64_t v73 = v81 - v80;
        char v74 = v62;
        goto LABEL_101;
      }
      uint64_t v53 = *(void *)(result + 32);
      uint64_t v52 = *(void *)(result + 40);
      BOOL v62 = __OFSUB__(v52, v53);
      uint64_t v54 = v52 - v53;
      char v55 = v62;
    }
    if (v55) {
      goto LABEL_151;
    }
    unint64_t v63 = v48 - 2;
    uint64_t v69 = (uint64_t *)(v49 + 16 * (v48 - 2));
    uint64_t v71 = *v69;
    uint64_t v70 = v69[1];
    BOOL v72 = __OFSUB__(v70, v71);
    uint64_t v73 = v70 - v71;
    char v74 = v72;
    if (v72) {
      goto LABEL_153;
    }
    uint64_t v75 = (uint64_t *)(v49 + 16 * v51);
    uint64_t v77 = *v75;
    uint64_t v76 = v75[1];
    BOOL v62 = __OFSUB__(v76, v77);
    uint64_t v78 = v76 - v77;
    if (v62) {
      goto LABEL_156;
    }
    if (__OFADD__(v73, v78)) {
      goto LABEL_157;
    }
    if (v73 + v78 >= v54)
    {
      BOOL v79 = v54 < v78;
LABEL_107:
      if (v79) {
        unint64_t v51 = v63;
      }
      goto LABEL_109;
    }
LABEL_101:
    if (v74) {
      goto LABEL_154;
    }
    uint64_t v82 = (uint64_t *)(v49 + 16 * v51);
    uint64_t v84 = *v82;
    uint64_t v83 = v82[1];
    BOOL v62 = __OFSUB__(v83, v84);
    uint64_t v85 = v83 - v84;
    if (v62) {
      goto LABEL_155;
    }
    if (v85 < v73) {
      goto LABEL_118;
    }
LABEL_109:
    unint64_t v90 = v51 - 1;
    if (v51 - 1 >= v48)
    {
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
      goto LABEL_159;
    }
    if (!v7) {
      goto LABEL_172;
    }
    uint64_t v91 = result;
    uint64_t v92 = (uint64_t *)(v49 + 16 * v90);
    uint64_t v93 = *v92;
    uint64_t v94 = (void *)(v49 + 16 * v51);
    uint64_t v95 = v94[1];
    uint64_t result = sub_1B2D99968((char *)(v7 + 88 * *v92), (char *)(v7 + 88 * *v94), v7 + 88 * v95, v117);
    if (v1) {
      break;
    }
    if (v95 < v93) {
      goto LABEL_145;
    }
    if (v51 > *(void *)(v91 + 16)) {
      goto LABEL_146;
    }
    *uint64_t v92 = v93;
    *(void *)(v49 + 16 * v90 + 8) = v95;
    unint64_t v96 = *(void *)(v91 + 16);
    if (v51 >= v96) {
      goto LABEL_147;
    }
    unint64_t v48 = v96 - 1;
    memmove((void *)(v49 + 16 * v51), v94 + 2, 16 * (v96 - 1 - v51));
    uint64_t result = v91;
    *(void *)(v91 + 16) = v96 - 1;
    if (v96 <= 2) {
      goto LABEL_118;
    }
  }
LABEL_124:
  uint64_t result = swift_bridgeObjectRelease();
  if (v110 < -1) {
    goto LABEL_166;
  }
  *(void *)(v108 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D99810(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v17 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v19 = *a4;
    uint64_t v5 = (double *)(*a4 + 88 * a3 + 80);
    while (2)
    {
      uint64_t v6 = (double *)(v19 + 88 * v4);
      double v7 = *v6;
      uint64_t v8 = *((void *)v6 + 1);
      double v9 = v6[2];
      uint64_t v10 = v17;
      uint64_t v18 = v5;
      do
      {
        double v11 = *(v5 - 19);
        if (v9 >= v11)
        {
          if (v9 != v11) {
            break;
          }
          if (*(void *)&v7 == *((void *)v5 - 21) && v8 == *((void *)v5 - 20)) {
            break;
          }
          uint64_t result = sub_1B2E837A8();
          if ((result & 1) == 0) {
            break;
          }
        }
        if (!v19)
        {
          __break(1u);
          return result;
        }
        double v7 = *(v5 - 10);
        uint64_t v8 = *((void *)v5 - 9);
        double v9 = *(v5 - 8);
        uint64_t v14 = *((void *)v5 - 7);
        uint64_t v13 = *((void *)v5 - 6);
        double v15 = *v5;
        uint64_t v22 = *((void *)v5 - 1);
        long long v20 = *(_OWORD *)(v5 - 3);
        long long v21 = *(_OWORD *)(v5 - 5);
        uint64_t result = (uint64_t)memcpy(v5 - 10, v5 - 21, 0x58uLL);
        *(v5 - 11) = v15;
        v5 -= 11;
        *(v5 - 10) = v7;
        *((void *)v5 - 9) = v8;
        *(v5 - 8) = v9;
        *((void *)v5 - 7) = v14;
        *((void *)v5 - 6) = v13;
        *(_OWORD *)(v5 - 5) = v21;
        *(_OWORD *)(v5 - 3) = v20;
        ++v10;
        *((void *)v5 - 1) = v22;
      }
      while (v4 != v10);
      ++v4;
      uint64_t v5 = v18 + 11;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1B2D99968(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  double v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 88;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 88;
  if (v9 >= v11)
  {
    sub_1B29BE2B8(a2, (uint64_t)(a3 - (void)a2) / 88, a4);
    unint64_t v12 = (unint64_t)&v4[88 * v11];
    if (v7 >= v6 || v10 < 88) {
      goto LABEL_49;
    }
    uint64_t v18 = (char *)(a3 - 88);
    while (1)
    {
      uint64_t v19 = v18 + 88;
      long long v20 = (char *)(v12 - 88);
      double v21 = *(double *)(v12 - 72);
      double v22 = *((double *)v6 - 9);
      if (v21 < v22
        || v21 == v22
        && (*(void *)(v12 - 88) == *((void *)v6 - 11)
          ? (BOOL v25 = *(void *)(v12 - 80) == *((void *)v6 - 10))
          : (BOOL v25 = 0),
            !v25 && (sub_1B2E837A8() & 1) != 0))
      {
        BOOL v23 = v19 != v6 || v18 >= v6;
        long long v20 = v6 - 88;
        v6 -= 88;
        if (!v23) {
          goto LABEL_32;
        }
      }
      else
      {
        BOOL v26 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 88;
        if (!v26) {
          goto LABEL_32;
        }
      }
      memmove(v18, v20, 0x58uLL);
LABEL_32:
      v18 -= 88;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_49;
      }
    }
  }
  sub_1B29BE2B8(a1, (a2 - a1) / 88, a4);
  unint64_t v12 = (unint64_t)&v4[88 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 88)
  {
    while (1)
    {
      double v13 = *((double *)v6 + 2);
      double v14 = *((double *)v4 + 2);
      if (v13 >= v14)
      {
        if (v13 != v14) {
          break;
        }
        BOOL v17 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v17 || (sub_1B2E837A8() & 1) == 0) {
          break;
        }
      }
      double v15 = v6;
      BOOL v17 = v7 == v6;
      v6 += 88;
      if (!v17) {
        goto LABEL_6;
      }
LABEL_7:
      v7 += 88;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_48;
      }
    }
    double v15 = v4;
    BOOL v17 = v7 == v4;
    v4 += 88;
    if (v17) {
      goto LABEL_7;
    }
LABEL_6:
    memmove(v7, v15, 0x58uLL);
    goto LABEL_7;
  }
LABEL_48:
  uint64_t v6 = v7;
LABEL_49:
  sub_1B29BE2B8(v4, (uint64_t)(v12 - (void)v4) / 88, v6);
  return 1;
}

uint64_t sub_1B2D99B60(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B2D99B98()
{
  return swift_beginAccess();
}

void sub_1B2D99BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16)
{
  *(void *)uint64_t v16 = a14;
  *(void *)(v16 + 8) = v17;
  *(void *)(v16 + 16) = v18;
  *(void *)(v16 + 24) = v19;
  *(unsigned char *)(v16 + 32) = a16;
}

void sub_1B2D99BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(void *)(v16 + 16) = v17;
  uint64_t v21 = v16 + 16 * v18;
  *(void *)(v21 + 32) = a16;
  *(void *)(v21 + 40) = v20;
  *uint64_t v19 = v16;
}

char *sub_1B2D99BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  return &a18;
}

uint64_t sub_1B2D99C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  *a17 = v17;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D99C30()
{
  return swift_beginAccess();
}

uint64_t sub_1B2D99C50()
{
  return swift_beginAccess();
}

unint64_t sub_1B2D99C70()
{
  return 0xD00000000000001ALL;
}

void sub_1B2D99C90(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 48);
}

uint64_t sub_1B2D99CA0()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B2D99CD0()
{
  return sub_1B299E0FC(0x797469746E65);
}

uint64_t sub_1B2D99CE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1B2D99D30(a1);
}

unint64_t sub_1B2D99CF8()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1B2D99D14()
{
  return 0xD000000000000010;
}

uint64_t sub_1B2D99D30@<X0>(uint64_t a1@<X8>)
{
  sub_1B2A201E0();
  sub_1B2A203C8();
  sub_1B2A20214();
  sub_1B2A203C8();
  sub_1B2A1F188();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t result = swift_release();
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = v14;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = v16;
  *(_WORD *)(a1 + 40) = v17;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v10;
  *(_WORD *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v3;
  *(void *)(a1 + 104) = v5;
  return result;
}

unint64_t sub_1B2D99EEC()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1B2D99F08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  __int16 v5 = *(_WORD *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 8);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2D99F54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 80);
  __int16 v5 = *(_WORD *)(v1 + 88);
  *(void *)a1 = *(void *)(v1 + 56);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2D99FA0()
{
  return sub_1B299E0FC(0x656C706F6570);
}

void type metadata accessor for EntitySubgraphViewTripleRecord()
{
}

void type metadata accessor for IFContextSubgraphViewTripleRecord()
{
}

void type metadata accessor for PeopleSubgraphViewTripleRecord()
{
}

uint64_t sub_1B2D99FEC()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_1B2D9A030(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *sub_1B2D9A090(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = a2[4];
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = v4;
  return a1;
}

uint64_t sub_1B2D9A114(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t type metadata accessor for SearchableSubgraphView()
{
  return sub_1B29A1278();
}

uint64_t sub_1B2D9A184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2D9A338(a1, a2, a3, (uint64_t (*)(void))sub_1B2D9A1B0, (uint64_t (*)(void))sub_1B2D9A1FC);
}

unint64_t sub_1B2D9A1B0()
{
  unint64_t result = qword_1E9C43D00;
  if (!qword_1E9C43D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43D00);
  }
  return result;
}

unint64_t sub_1B2D9A1FC()
{
  unint64_t result = qword_1E9C43D08;
  if (!qword_1E9C43D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43D08);
  }
  return result;
}

uint64_t sub_1B2D9A248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2D9A338(a1, a2, a3, (uint64_t (*)(void))sub_1B2D9A274, (uint64_t (*)(void))sub_1B2D9A2C0);
}

unint64_t sub_1B2D9A274()
{
  unint64_t result = qword_1E9C43D10;
  if (!qword_1E9C43D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43D10);
  }
  return result;
}

unint64_t sub_1B2D9A2C0()
{
  unint64_t result = qword_1E9C43D18;
  if (!qword_1E9C43D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43D18);
  }
  return result;
}

uint64_t sub_1B2D9A30C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2D9A338(a1, a2, a3, (uint64_t (*)(void))sub_1B2D9A374, (uint64_t (*)(void))sub_1B2D9A3C0);
}

uint64_t sub_1B2D9A338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B2D9A374()
{
  unint64_t result = qword_1E9C371D0;
  if (!qword_1E9C371D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C371D0);
  }
  return result;
}

unint64_t sub_1B2D9A3C0()
{
  unint64_t result = qword_1E9C37CD8;
  if (!qword_1E9C37CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C37CD8);
  }
  return result;
}

uint64_t sub_1B2D9A40C(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  swift_getObjectType();
  sub_1B2E82968();
  uint64_t result = sub_1B2E80C28();
  if (!v1) {
    return v4;
  }
  return result;
}

uint64_t sub_1B2D9A4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X5>, const void *a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, void *a10)
{
  uint64_t v43 = a7;
  uint64_t v40 = a1;
  double v38 = a9;
  uint64_t v42 = sub_1B2E81118();
  uint64_t v49 = *(void *)(v42 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v42);
  MEMORY[0x1F4188790](v16);
  uint64_t v46 = v18;
  unint64_t v47 = (char *)&v37 - v17;
  if (a4 == 1)
  {
    uint64_t v45 = 0;
    uint64_t v50 = 0;
    int v39 = 0;
    int v44 = 1;
  }
  else
  {
    int v44 = a3 & 1;
    int v39 = a5 & 1;
    uint64_t v45 = a2;
    uint64_t v50 = a4;
  }
  uint64_t v19 = *a6;
  uint64_t v20 = a6[1];
  uint64_t v41 = v19;
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))a10[4];
  swift_bridgeObjectRetain();
  sub_1B2D9A980(a2, a3, a4);
  uint64_t v22 = v21(a8, a10);
  uint64_t v24 = v23;
  v56[3] = sub_1B2E80BE8();
  v56[4] = MEMORY[0x1E4F62D00];
  sub_1B29D1C70(v56);
  memcpy(v57, v43, 0x69uLL);
  sub_1B2D9A994((uint64_t)v57, (uint64_t)v58);
  sub_1B2D9A994((uint64_t)v58, (uint64_t)&v55);
  uint64_t v51 = v41;
  uint64_t v52 = v20;
  uint64_t v53 = v22;
  uint64_t v54 = v24;
  TriplesQuery.Clause.Impl.graphIdentifierSQLExpression(config:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = a10;
  BOOL v25 = v47;
  sub_1B2E80978();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v56);
  if (v50)
  {
    uint64_t v26 = v50;
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = v48;
    sub_1B2DFFC34(v27, v26, v39);
    uint64_t v29 = v28;
    uint64_t v30 = v42;
    swift_getWitnessTable();
    uint64_t v31 = v46;
    sub_1B2E80C68();
    swift_bridgeObjectRelease();
    uint64_t v32 = v49;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v25, v30);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v25, v31, v30);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v34 = v45;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v29 = v48;
    uint64_t v32 = v49;
    uint64_t v34 = v45;
    uint64_t v31 = v46;
    uint64_t v30 = v42;
  }
  if ((v44 & 1) == 0)
  {
    if (v34 < 0)
    {
      __break(1u);
      return result;
    }
    swift_getWitnessTable();
    sub_1B2E80F28();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v30);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v25, v31, v30);
  }
  swift_getWitnessTable();
  uint64_t v35 = sub_1B2E809F8();
  if (v29) {
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v25, v30);
  }
  uint64_t v36 = v35;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v25, v30);
  *double v38 = v36;
  return result;
}

uint64_t sub_1B2D9A90C(void *a1)
{
  return sub_1B2D9A40C(a1);
}

uint64_t sub_1B2D9A948@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B2D9A4F4(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(unsigned char *)(v2 + 56), *(uint64_t **)(v2 + 64), *(const void **)(v2 + 72), *(void *)(v2 + 16), a2, *(void **)(v2 + 24));
}

uint64_t sub_1B2D9A980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B2D9A994(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_1B2D9A9F8(void *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    uint64_t v9 = a2[2];
    *a1 = v5;
    a1[1] = v8;
    uint64_t v10 = a2[3];
    a1[2] = v9;
    a1[3] = v10;
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B29A3EB4(&qword_1EB7E2E90);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (void *)((char *)a1 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    *(void *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v20 = a3[9];
    uint64_t v21 = (void *)((char *)a1 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1B2D9AB30(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1B29A3EB4(&qword_1EB7E2E90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B2D9ABE8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B29A3EB4(&qword_1EB7E2E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1B2D9ACD4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v6;
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B29A3EB4(&qword_1EB7E2E90);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1B2D9AE0C(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B29A3EB4(&qword_1EB7E2E90);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  return a1;
}

void *sub_1B2D9AEBC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1B29A3EB4(&qword_1EB7E2E90);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2D9AFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B2D9AFC8);
}

uint64_t sub_1B2D9AFC8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1B29A3EB4(&qword_1EB7E2E90);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 24);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1B2D9B054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B2D9B068);
}

void *sub_1B2D9B068(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1B29A3EB4(&qword_1EB7E2E90);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 24);
    return (void *)_s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SearchableViewDatabaseTable()
{
  uint64_t result = qword_1EB7E5668;
  if (!qword_1EB7E5668) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B2D9B134()
{
  sub_1B2A18C90();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1B2D9B1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = *(void *)(sub_1B2E818C8() - 8);
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    uint64_t v23 = v8;
    uint64_t v24 = a2;
    do
    {
      uint64_t v9 = sub_1B2E81888();
      if (*(void *)(a2 + 16))
      {
        uint64_t v10 = sub_1B29E5378(v9);
        if (v11)
        {
          uint64_t v12 = (uint64_t *)(*(void *)(a2 + 56) + 72 * v10);
          uint64_t v13 = *v12;
          uint64_t v14 = v12[2];
          uint64_t v27 = v12[3];
          uint64_t v28 = v12[1];
          uint64_t v15 = v12[4];
          uint64_t v16 = v12[6];
          uint64_t v25 = v12[7];
          uint64_t v26 = v12[5];
          uint64_t v17 = v12[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v18 = sub_1B2E81888();
          sub_1B2E81878();
          float v20 = v19;
          v29[0] = v13;
          v29[1] = v28;
          _OWORD v29[2] = v14;
          v29[3] = v27;
          v29[4] = v15;
          void v29[5] = v26;
          v29[6] = v16;
          v29[7] = v25;
          v29[8] = v17;
          type metadata accessor for SemanticSearchService.SemanticSearchResult();
          swift_allocObject();
          uint64_t v21 = SemanticSearchService.SemanticSearchResult.init(assetId:similarity:semanticSearchItem:)(v18, (uint64_t)v29, v20);
          MEMORY[0x1B3EB0FE0](v21);
          if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1B2E828A8();
          }
          sub_1B2E828F8();
          sub_1B2E82878();
          uint64_t v8 = v23;
          a2 = v24;
        }
      }
      v7 += v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v3 = v30;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1B2D9B3F4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      unint64_t v7 = 0;
      uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8;
      uint64_t v15 = a2;
      while ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = MEMORY[0x1B3EB1A20](v7, a1);
LABEL_7:
        unint64_t v10 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_20;
        }
        uint64_t v11 = *(void *)(v9 + 80);
        if (v11 && (*(void *)(v9 + 72) == a2 ? (BOOL v12 = v11 == a3) : (BOOL v12 = 0), !v12 && (sub_1B2E837A8() & 1) != 0))
        {
          sub_1B2E832C8();
          sub_1B2E83308();
          uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_1B2E83318();
          sub_1B2E832D8();
          a2 = v15;
        }
        else
        {
          swift_release();
        }
        ++v7;
        if (v10 == v6)
        {
          uint64_t v13 = v16;
          goto LABEL_23;
        }
      }
      if (v7 < *(void *)(v8 + 16)) {
        break;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      uint64_t v6 = sub_1B2E83448();
      if (!v6) {
        goto LABEL_22;
      }
    }
    uint64_t v9 = *(void *)(a1 + 8 * v7 + 32);
    swift_retain();
    goto LABEL_7;
  }
LABEL_22:
  uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1B2D9B5A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      unint64_t v7 = 0;
      uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8;
      uint64_t v15 = a2;
      while ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = MEMORY[0x1B3EB1A20](v7, a1);
LABEL_7:
        unint64_t v10 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_20;
        }
        uint64_t v11 = *(void *)(v9 + 64);
        if (v11 && (*(void *)(v9 + 56) == a2 ? (BOOL v12 = v11 == a3) : (BOOL v12 = 0), !v12 && (sub_1B2E837A8() & 1) != 0))
        {
          sub_1B2E832C8();
          sub_1B2E83308();
          uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_1B2E83318();
          sub_1B2E832D8();
          a2 = v15;
        }
        else
        {
          swift_release();
        }
        ++v7;
        if (v10 == v6)
        {
          uint64_t v13 = v16;
          goto LABEL_23;
        }
      }
      if (v7 < *(void *)(v8 + 16)) {
        break;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      uint64_t v6 = sub_1B2E83448();
      if (!v6) {
        goto LABEL_22;
      }
    }
    uint64_t v9 = *(void *)(a1 + 8 * v7 + 32);
    swift_retain();
    goto LABEL_7;
  }
LABEL_22:
  uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1B2D9B75C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B2E818C8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v28 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27)
  {
    unint64_t v13 = 0;
    v20[1] = v2;
    uint64_t v21 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
    uint64_t v25 = v6 + 16;
    uint64_t v26 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v22 = v5;
    uint64_t v23 = a2;
    uint64_t v24 = a1;
    while (v13 < *(void *)(a1 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v15 = *(void *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, a1 + v14 + v15 * v13, v5);
      sub_1B2E81878();
      if (*(float *)(*(void *)(a2 + 40) + 24) >= v16)
      {
        uint64_t result = (*v21)(v11, v5);
      }
      else
      {
        uint64_t v17 = *v26;
        (*v26)(v28, v11, v5);
        uint64_t v18 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29C1730();
          uint64_t v18 = v29;
        }
        unint64_t v19 = *(void *)(v18 + 16);
        if (v19 >= *(void *)(v18 + 24) >> 1)
        {
          sub_1B29C1730();
          uint64_t v18 = v29;
        }
        *(void *)(v18 + 16) = v19 + 1;
        uint64_t v5 = v22;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v17)(v18 + v14 + v19 * v15, v28, v22);
        uint64_t v29 = v18;
        a2 = v23;
        a1 = v24;
      }
      if (v27 == ++v13)
      {
        uint64_t v12 = v29;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_release();
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

void *sub_1B2D9B9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a1;
  __int16 v5 = a2;
  char v6 = BYTE2(a2);
  char v7 = BYTE3(a2);
  char v8 = BYTE4(a2);
  char v9 = BYTE5(a2);
  return sub_1B2A46D4C((uint64_t)&v4, a3 / 4);
}

BOOL static SemanticSearchServiceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SemanticSearchServiceError.hash(into:)()
{
  return sub_1B2E83998();
}

uint64_t SemanticSearchServiceError.hashValue.getter()
{
  return sub_1B2E839E8();
}

uint64_t static SemanticSearchService.SemanticSearchOptions.defaultSemanticSearchOptions.getter()
{
  uint64_t v0 = type metadata accessor for SemanticSearchService.SemanticSearchOptions();

  return MEMORY[0x1F41866B0](v0, &unk_1E9C38D90);
}

uint64_t type metadata accessor for SemanticSearchService.SemanticSearchOptions()
{
  return self;
}

uint64_t SemanticSearchService.__allocating_init(options:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  SemanticSearchService.init(options:)(a1);
  return v2;
}

uint64_t SemanticSearchService.init(options:)(uint64_t a1)
{
  uint64_t v3 = v1;
  v35[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1B2E81868();
  sub_1B299D278();
  MEMORY[0x1F4188790](v4);
  sub_1B299E4A0();
  uint64_t v5 = sub_1B2E80498();
  uint64_t v6 = sub_1B299B0F0(v5);
  MEMORY[0x1F4188790](v6);
  sub_1B299E4A0();
  sub_1B2E81838();
  sub_1B299D278();
  uint64_t v32 = v8;
  uint64_t v33 = v7;
  MEMORY[0x1F4188790](v7);
  sub_1B299B860();
  uint64_t v11 = v9 - v10;
  MEMORY[0x1F4188790](v12);
  sub_1B2D9EF38();
  type metadata accessor for ViewService();
  uint64_t v13 = static ViewService.clientService.getter();
  *(void *)(v1 + 16) = v13;
  unint64_t v14 = (id *)(v1 + 16);
  uint64_t v15 = *(void **)(v13 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  swift_unknownObjectRetain();
  float v16 = (void *)sub_1B2E82348();
  v35[0] = 0;
  id v17 = objc_msgSend(v15, sel_requestAssertionForViewName_error_, v16, v35);
  swift_unknownObjectRelease();

  id v18 = v35[0];
  if (!v17)
  {
    id v29 = v35[0];
    sub_1B2E80388();

    swift_willThrow();
LABEL_6:
    swift_release();

    type metadata accessor for SemanticSearchService();
    swift_deallocPartialClassInstance();
    return v3;
  }
  *(void *)(v3 + 40) = a1;
  id v19 = objc_allocWithZone(MEMORY[0x1E4F28C10]);
  swift_retain();
  id v20 = v18;
  id v21 = objc_msgSend(v19, sel_init);
  *(void *)(v3 + 48) = v21;
  unint64_t v14 = (id *)(v3 + 48);
  id v22 = v21;
  unint64_t v23 = sub_1B2D9EF24();
  sub_1B2D9E778(v23, v24, v22);

  id v25 = objc_msgSend(self, sel_contextualEmbeddingWithLanguage_, *MEMORY[0x1E4F386F0]);
  if (!v25)
  {
    sub_1B2D9E7D0();
    swift_allocError();
    *uint64_t v30 = 0;
    swift_willThrow();
    swift_unknownObjectRelease();
    swift_release();

    goto LABEL_6;
  }
  *(void *)(v3 + 24) = v25;
  id v26 = v25;
  id v27 = objc_msgSend(v17, sel_viewArtifactURL);
  sub_1B2E80448();

  sub_1B2D9EE70();
  v28();
  objc_msgSend(*(id *)(v3 + 24), sel_sentenceVectorDimension);
  sub_1B2E81818();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v11, v2, v33);
  sub_1B2E81808();
  swift_allocObject();
  *(void *)(v3 + 32) = sub_1B2E817B8();
  sub_1B2E817E8();

  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v2, v33);
  return v3;
}

uint64_t type metadata accessor for SemanticSearchService()
{
  return self;
}

id *SemanticSearchService.deinit()
{
  sub_1B2E817F8();

  swift_release();
  swift_release();

  return v0;
}

uint64_t SemanticSearchService.__deallocating_deinit()
{
  SemanticSearchService.deinit();

  return swift_deallocClassInstance();
}

void *sub_1B2D9C0C4()
{
  uint64_t v2 = v1;
  v25[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void **)(v0 + 24);
  id v4 = objc_msgSend(v3, sel_maximumSequenceLength);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B2C7B708((uint64_t)v4);
  uint64_t v6 = (void *)MEMORY[0x1B3EB0C00](v5);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = *MEMORY[0x1E4F386F0];
  v25[0] = 0;
  id v10 = sub_1B2D9EDD8((uint64_t)v6, v8, v9, (uint64_t)v25, v3);
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = v25[0];
    uint64_t v13 = sub_1B2E80588();
    unint64_t v15 = v14;

    switch(v15 >> 62)
    {
      case 1uLL:
        if (v13 >> 32 < (int)v13) {
          __break(1u);
        }
        swift_retain();
        unint64_t v23 = sub_1B2D9E6E4((int)v13, v13 >> 32);
        if (v2) {
          goto LABEL_16;
        }
        uint64_t v6 = v23;
        sub_1B29C34DC(v13, v15);
        break;
      case 2uLL:
        uint64_t v20 = *(void *)(v13 + 16);
        uint64_t v21 = *(void *)(v13 + 24);
        swift_retain();
        swift_retain();
        id v22 = sub_1B2D9E6E4(v20, v21);
        if (v2)
        {
          swift_release();
          swift_release();
          __break(1u);
LABEL_16:
          sub_1B29C34DC(v13, v15);
          __break(1u);
          JUMPOUT(0x1B2D9C308);
        }
        uint64_t v6 = v22;
        swift_release();
        swift_release();
        break;
      case 3uLL:
        uint64_t v18 = 0;
        uint64_t v17 = 0;
        uint64_t v16 = 0;
        goto LABEL_8;
      default:
        uint64_t v16 = BYTE6(v15);
        uint64_t v17 = v15 & 0xFFFFFFFFFFFFLL;
        uint64_t v18 = v13;
LABEL_8:
        uint64_t v6 = sub_1B2D9B9DC(v18, v17, v16);
        break;
    }
    sub_1B29C34DC(v13, v15);
  }
  else
  {
    id v19 = v25[0];
    sub_1B2E80388();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1B2D9C318(uint64_t a1)
{
  uint64_t v3 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v4 = sub_1B299B0F0(v3);
  MEMORY[0x1F4188790](v4);
  sub_1B299B860();
  uint64_t v7 = (void *)(v5 - v6);
  MEMORY[0x1F4188790](v8);
  sub_1B2D9EF38();
  uint64_t v9 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1B2999940();
  uint64_t v98 = v13;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v89 - v15;
  uint64_t v111 = sub_1B2E80B98();
  sub_1B299D278();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  sub_1B299B6D0();
  uint64_t v110 = v20;
  sub_1B2999C2C();
  uint64_t v113 = sub_1B2E81908();
  sub_1B299D278();
  uint64_t v99 = v21;
  MEMORY[0x1F4188790](v22);
  sub_1B299B6D0();
  uint64_t v112 = v23;
  sub_1B2999C2C();
  uint64_t v24 = sub_1B2E818F8();
  uint64_t v25 = sub_1B299B0F0(v24);
  MEMORY[0x1F4188790](v25);
  sub_1B299B6D0();
  uint64_t v114 = v26;
  sub_1B2999C2C();
  sub_1B2E81858();
  sub_1B299D278();
  uint64_t v115 = v27;
  uint64_t v116 = v28;
  MEMORY[0x1F4188790](v27);
  sub_1B2999940();
  uint64_t v97 = v29;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v30);
  unint64_t v96 = (char *)&v89 - v31;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v32);
  if (a1)
  {
    uint64_t v94 = v1;
    uint64_t v34 = *(void *)(a1 + 16);
    uint64_t v95 = v16;
    if (v34 && (uint64_t v35 = (char *)&v89 - v33, (v109 = *(void *)(v34 + 16)) != 0))
    {
      uint64_t v90 = a1;
      uint64_t v91 = v7;
      uint64_t v92 = v11;
      uint64_t v93 = v9;
      unsigned int v107 = *MEMORY[0x1E4FB3B90];
      uint64_t v105 = *(void (**)(void *, void, uint64_t))(v99 + 104);
      uint64_t v106 = v99 + 104;
      int v104 = *MEMORY[0x1E4FB3B38];
      unint64_t v103 = (void (**)(uint64_t, uint64_t))(v18 + 8);
      int v102 = *MEMORY[0x1E4FB3BA8];
      uint64_t v101 = v116 + 32;
      swift_bridgeObjectRetain();
      uint64_t v36 = 0;
      uint64_t v37 = MEMORY[0x1E4FBC860];
      long long v100 = xmmword_1B2EC00A0;
      uint64_t v108 = v34;
      uint64_t v38 = v110;
      do
      {
        uint64_t v39 = *(void *)(v34 + 8 * v36 + 32);
        uint64_t v41 = v112;
        uint64_t v40 = v113;
        *uint64_t v112 = 0;
        v41[1] = 0;
        v105(v41, v107, v40);
        sub_1B2E818E8();
        sub_1B29A3EB4(&qword_1E9C43D58);
        uint64_t v42 = (int *)(sub_1B29A3EB4((uint64_t *)&unk_1E9C43D60) - 8);
        unint64_t v43 = (*(unsigned __int8 *)(*(void *)v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v42 + 80);
        uint64_t v44 = swift_allocObject();
        *(_OWORD *)(v44 + 16) = v100;
        uint64_t v45 = (uint64_t *)(v44 + v43 + v42[14]);
        sub_1B2E818D8();
        sub_1B2999864();
        sub_1B2D9EE70();
        v46();
        uint64_t v117 = 37;
        unint64_t v118 = 0xE100000000000000;
        MEMORY[0x1B3EB20F0](v39);
        sub_1B2A710E0();
        uint64_t v47 = v37;
        uint64_t v48 = v111;
        sub_1B2E83748();
        sub_1B2E82518();
        swift_bridgeObjectRelease();
        uint64_t v49 = v48;
        uint64_t v37 = v47;
        (*v103)(v38, v49);
        sub_1B2E82518();
        unint64_t v50 = v118;
        *uint64_t v45 = v117;
        v45[1] = v50;
        uint64_t v51 = sub_1B2E81918();
        sub_1B2999864();
        sub_1B2D9EE70();
        v52();
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v45, 0, 1, v51);
        sub_1B2E81848();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v37 = sub_1B29A49C4();
        }
        unint64_t v54 = *(void *)(v37 + 16);
        unint64_t v53 = *(void *)(v37 + 24);
        uint64_t v34 = v108;
        if (v54 >= v53 >> 1) {
          uint64_t v37 = sub_1B29BA060(v53 > 1, v54 + 1, 1, v37);
        }
        ++v36;
        *(void *)(v37 + 16) = v54 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v116 + 32))(v37+ ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(void *)(v116 + 72) * v54, v35, v115);
      }
      while (v109 != v36);
      swift_bridgeObjectRelease();
      uint64_t v9 = v93;
      uint64_t v11 = v92;
      uint64_t v7 = v91;
      a1 = v90;
    }
    else
    {
      uint64_t v37 = MEMORY[0x1E4FBC860];
    }
    uint64_t v55 = a1;
    uint64_t v56 = v94;
    sub_1B29C8A80(a1 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_startFilter, v94);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v56, 1, v9) != 1)
    {
      uint64_t v57 = v7;
      uint64_t v93 = v9;
      sub_1B29F83D8();
      v58();
      uint64_t v60 = v112;
      uint64_t v59 = v113;
      *uint64_t v112 = 0;
      v60[1] = 0;
      (*(void (**)(void *, void, uint64_t))(v99 + 104))(v60, *MEMORY[0x1E4FB3B90], v59);
      sub_1B2E818E8();
      sub_1B29A3EB4(&qword_1E9C43D58);
      sub_1B29A3EB4((uint64_t *)&unk_1E9C43D60);
      sub_1B2D9EE54();
      uint64_t v61 = (__n128 *)sub_1B2D9EEAC();
      sub_1B2D9EF8C(v61, (__n128)xmmword_1B2EC00A0);
      sub_1B2E818D8();
      sub_1B2999864();
      sub_1B2D9EE70();
      v62();
      unint64_t v63 = (void *)sub_1B2999DC4();
      id v64 = objc_msgSend(v7, sel_stringFromDate_, v63);

      uint64_t v65 = sub_1B2E82378();
      uint64_t v67 = v66;

      *uint64_t v11 = v65;
      v11[1] = v67;
      sub_1B2E81918();
      sub_1B2999864();
      sub_1B2D9EE70();
      v68();
      sub_1B2D9EFA0();
      sub_1B2E81848();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v37 = sub_1B29A49C4();
      }
      unint64_t v70 = *(void *)(v37 + 16);
      unint64_t v69 = *(void *)(v37 + 24);
      uint64_t v7 = v57;
      if (v70 >= v69 >> 1) {
        uint64_t v37 = sub_1B2D9EEF0(v69);
      }
      *(void *)(v37 + 16) = v70 + 1;
      sub_1B29F83D8();
      v71();
      uint64_t v9 = v93;
      ((void (*)(char *, uint64_t))v11[1])(v95, v93);
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v55 = 0;
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, v9);
    uint64_t v37 = MEMORY[0x1E4FBC860];
    uint64_t v56 = v1;
  }
  sub_1B2B2D5F8(v56);
  if (!v55)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v9);
LABEL_22:
    sub_1B2B2D5F8((uint64_t)v7);
    return v37;
  }
LABEL_21:
  sub_1B29C8A80(v55 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_endFilter, (uint64_t)v7);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v7, 1, v9) == 1) {
    goto LABEL_22;
  }
  BOOL v72 = v11;
  uint64_t v73 = v9;
  sub_1B29F83D8();
  v74();
  uint64_t v75 = v112;
  *uint64_t v112 = 0;
  v75[1] = 0;
  sub_1B2D9EE70();
  v76();
  sub_1B2E818E8();
  sub_1B29A3EB4(&qword_1E9C43D58);
  sub_1B29A3EB4((uint64_t *)&unk_1E9C43D60);
  sub_1B2D9EE54();
  uint64_t v77 = (__n128 *)sub_1B2D9EEAC();
  sub_1B2D9EF8C(v77, (__n128)xmmword_1B2EC00A0);
  sub_1B2E818D8();
  sub_1B2999864();
  sub_1B2D9EE70();
  v78();
  BOOL v79 = (void *)sub_1B2999DC4();
  id v80 = objc_msgSend(v7, sel_stringFromDate_, v79);

  uint64_t v81 = sub_1B2E82378();
  uint64_t v83 = v82;

  *uint64_t v11 = v81;
  v11[1] = v83;
  sub_1B2E81918();
  sub_1B2999864();
  sub_1B2D9EE70();
  v84();
  sub_1B2D9EFA0();
  uint64_t v85 = v97;
  sub_1B2E81848();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v37 = sub_1B29A49C4();
  }
  unint64_t v87 = *(void *)(v37 + 16);
  unint64_t v86 = *(void *)(v37 + 24);
  if (v87 >= v86 >> 1) {
    uint64_t v37 = sub_1B2D9EEF0(v86);
  }
  *(void *)(v37 + 16) = v87 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v116 + 32))(v37+ ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(void *)(v116 + 72) * v87, v85, v115);
  ((void (*)(uint64_t, uint64_t))v72[1])(v98, v73);
  return v37;
}

uint64_t sub_1B2D9CE14(unsigned __int8 *a1, unint64_t a2)
{
  uint64_t v5 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1B299E4A0();
  uint64_t v11 = v10 - v9;
  int v12 = *a1;
  uint64_t v13 = *(void **)(v2 + 48);
  sub_1B2E80658();
  uint64_t v14 = (void *)sub_1B2E805E8();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  uint64_t v15 = (uint64_t)objc_msgSend(v13, sel_stringFromDate_, v14);

  uint64_t v16 = sub_1B2E82378();
  uint64_t v18 = v17;

  if (!v12)
  {
    unint64_t v30 = swift_bridgeObjectRetain();
    unint64_t v31 = sub_1B2D9B3F4(v30, v16, v18);
    unint64_t v32 = v31;
    if (v31 >> 62)
    {
      sub_1B2B1263C();
      uint64_t v33 = sub_1B2E83448();
      if (v33)
      {
LABEL_29:
        sub_1B2D9EE7C();
        if (v11)
        {
          uint64_t result = MEMORY[0x1B3EB1A20](0, v32);
          unint64_t v23 = (void *)result;
        }
        else
        {
          unint64_t v23 = *(void **)(v32 + 32);
          uint64_t result = swift_retain();
        }
        uint64_t v34 = v33 - 1;
        if (v33 != 1)
        {
          if (v33 >= 2)
          {
            sub_1B29A5428();
            sub_1B299BD4C();
            uint64_t v35 = 0;
            do
            {
              if (v11) {
                uint64_t v33 = MEMORY[0x1B3EB1A20](v35 + 1, v32);
              }
              else {
                sub_1B2D9EED4();
              }
              uint64_t v36 = v23[10];
              if (v36 && (uint64_t v37 = *(void *)(v33 + 80)) != 0)
              {
                BOOL v38 = v23[9] == *(void *)(v33 + 72) && v36 == v37;
                if (!v38 && (sub_1B2E837A8() & 1) != 0) {
                  unint64_t v23 = (void *)v33;
                }
              }
              else if (*(void *)(v33 + 64))
              {
                if (v23[8]) {
                  unint64_t v23 = (void *)v33;
                }
              }
              else
              {
                unint64_t v23 = (void *)v33;
              }
              swift_release();
              ++v35;
            }
            while (v34 != v35);
            goto LABEL_52;
          }
LABEL_105:
          __break(1u);
          goto LABEL_106;
        }
LABEL_52:
        swift_bridgeObjectRelease_n();
LABEL_96:
        sub_1B29A3EB4(&qword_1E9C38A78);
        uint64_t v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = xmmword_1B2EE4DB0;
        *(void *)(v46 + 32) = v23;
        uint64_t v48 = v46;
        sub_1B2E82878();
        return v48;
      }
    }
    else
    {
      uint64_t v33 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v33) {
        goto LABEL_29;
      }
    }
LABEL_69:
    swift_bridgeObjectRelease_n();
    return MEMORY[0x1E4FBC860];
  }
  if (v12 == 1)
  {
    unint64_t v19 = swift_bridgeObjectRetain();
    unint64_t v20 = sub_1B2D9B5A8(v19, v16, v18);
    unint64_t v21 = v20;
    if (v20 >> 62)
    {
      sub_1B2B1263C();
      uint64_t v22 = sub_1B2E83448();
      if (v22)
      {
LABEL_5:
        sub_1B2D9EE7C();
        if (v11)
        {
          uint64_t result = MEMORY[0x1B3EB1A20](0, v21);
          unint64_t v23 = (void *)result;
        }
        else
        {
          unint64_t v23 = *(void **)(v21 + 32);
          uint64_t result = swift_retain();
        }
        uint64_t v25 = v22 - 1;
        if (v22 != 1)
        {
          if (v22 >= 2)
          {
            sub_1B29A5428();
            sub_1B299BD4C();
            uint64_t v26 = 0;
            do
            {
              if (v11) {
                uint64_t v22 = MEMORY[0x1B3EB1A20](v26 + 1, v21);
              }
              else {
                sub_1B2D9EED4();
              }
              uint64_t v27 = *(void *)(v22 + 64);
              if (v27)
              {
                uint64_t v28 = v23[8];
                if (v28)
                {
                  BOOL v29 = *(void *)(v22 + 56) == v23[7] && v27 == v28;
                  if (!v29 && (sub_1B2E837A8() & 1) != 0) {
                    unint64_t v23 = (void *)v22;
                  }
                }
                else
                {
                  unint64_t v23 = (void *)v22;
                }
              }
              else if (!v23[8])
              {
                unint64_t v23 = (void *)v22;
              }
              swift_release();
              ++v26;
            }
            while (v25 != v26);
            goto LABEL_52;
          }
          __break(1u);
          goto LABEL_105;
        }
        goto LABEL_52;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v22) {
        goto LABEL_5;
      }
    }
    goto LABEL_69;
  }
  swift_bridgeObjectRelease();
  unint64_t v47 = MEMORY[0x1E4FBC860];
  if (a2 >> 62)
  {
    sub_1B2B1263C();
    uint64_t v39 = sub_1B2E83448();
    if (v39)
    {
LABEL_55:
      if (v39 < 1)
      {
        __break(1u);
        goto LABEL_103;
      }
      for (uint64_t i = 0; i != v39; ++i)
      {
        if ((a2 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = MEMORY[0x1B3EB1A20](i, a2);
        }
        else
        {
          uint64_t v11 = *(void *)(a2 + 8 * i + 32);
          swift_retain();
        }
        if (*(void *)(v11 + 64))
        {
          sub_1B2E832C8();
          sub_1B2E83308();
          sub_1B2E83318();
          sub_1B2E832D8();
        }
        else
        {
          swift_release();
        }
      }
      swift_bridgeObjectRelease();
      a2 = v47;
      if ((v47 & 0x8000000000000000) != 0) {
        goto LABEL_97;
      }
      goto LABEL_72;
    }
  }
  else
  {
    uint64_t v39 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v39) {
      goto LABEL_55;
    }
  }
  swift_bridgeObjectRelease();
  a2 = MEMORY[0x1E4FBC860];
  if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
    goto LABEL_97;
  }
LABEL_72:
  if ((a2 & 0x4000000000000000) != 0)
  {
LABEL_97:
    swift_retain();
    uint64_t v15 = sub_1B2E83448();
    if (!v15) {
      goto LABEL_98;
    }
    goto LABEL_74;
  }
  uint64_t v15 = *(void *)(a2 + 16);
  swift_retain();
  if (!v15)
  {
LABEL_98:
    swift_release_n();
    return MEMORY[0x1E4FBC860];
  }
LABEL_74:
  sub_1B2D9EE7C();
  if (!v11)
  {
    unint64_t v23 = *(void **)(a2 + 32);
    uint64_t result = swift_retain();
    goto LABEL_76;
  }
LABEL_103:
  uint64_t result = MEMORY[0x1B3EB1A20](0, a2);
  unint64_t v23 = (void *)result;
LABEL_76:
  uint64_t v41 = v15 - 1;
  if (v15 == 1)
  {
LABEL_95:
    swift_release_n();
    goto LABEL_96;
  }
  if (v15 >= 2)
  {
    sub_1B29A5428();
    sub_1B299BD4C();
    uint64_t v42 = 0;
    do
    {
      if (v11) {
        uint64_t v15 = MEMORY[0x1B3EB1A20](v42 + 1, a2);
      }
      else {
        sub_1B2D9EED4();
      }
      uint64_t v43 = *(void *)(v15 + 64);
      if (v43)
      {
        uint64_t v44 = v23[8];
        if (v44)
        {
          BOOL v45 = *(void *)(v15 + 56) == v23[7] && v43 == v44;
          if (!v45 && (sub_1B2E837A8() & 1) != 0) {
            unint64_t v23 = (void *)v15;
          }
        }
        else
        {
          unint64_t v23 = (void *)v15;
        }
      }
      else if (!v23[8])
      {
        unint64_t v23 = (void *)v15;
      }
      swift_release();
      ++v42;
    }
    while (v41 != v42);
    goto LABEL_95;
  }
LABEL_106:
  __break(1u);
  return result;
}

unint64_t sub_1B2D9D3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v4;
  uint64_t v7 = v3;
  uint64_t v9 = sub_1B2E818C8();
  sub_1B299D278();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1B299E4A0();
  uint64_t v15 = v14 - v13;
  sub_1B2D9C0C4();
  if (!v4)
  {
    uint64_t v53 = v9;
    uint64_t v56 = v11;
    sub_1B2D9C318(a3);
    uint64_t v16 = sub_1B2E817D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v17 = sub_1B2D9B75C(v16, v7);
    ViewService.semanticSearchView.getter(v57);
    uint64_t v51 = a3;
    uint64_t v60 = v58;
    v59[0] = v57[0];
    v59[1] = v57[1];
    uint64_t v19 = *(void *)(v17 + 16);
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t v50 = v17;
    if (v19)
    {
      uint64_t v48 = v7;
      uint64_t v49 = 0;
      uint64_t v61 = MEMORY[0x1E4FBC860];
      sub_1B29C0848();
      unint64_t v21 = *(void (**)(uint64_t, unint64_t, uint64_t))(v56 + 16);
      unint64_t v22 = v17 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
      uint64_t v54 = *(void *)(v56 + 72);
      uint64_t v55 = v21;
      unint64_t v23 = (void (**)(uint64_t, uint64_t))(v56 + 8);
      v56 += 16;
      uint64_t v24 = v53;
      do
      {
        v55(v15, v22, v24);
        uint64_t v25 = sub_1B2E81888();
        (*v23)(v15, v24);
        uint64_t v20 = v61;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B29C0848();
          uint64_t v20 = v61;
        }
        unint64_t v26 = *(void *)(v20 + 16);
        if (v26 >= *(void *)(v20 + 24) >> 1)
        {
          sub_1B29C0848();
          uint64_t v20 = v61;
        }
        *(void *)(v20 + 16) = v26 + 1;
        *(void *)(v20 + 8 * v26 + 32) = v25;
        v22 += v54;
        --v19;
      }
      while (v19);
      uint64_t v27 = v48;
      uint64_t v6 = v49;
    }
    else
    {
      uint64_t v27 = v7;
    }
    uint64_t v28 = sub_1B2DDCF40(v20);
    unint64_t ObjectType = swift_getObjectType();
    MEMORY[0x1F4188790](ObjectType);
    v47[-2] = v59;
    v47[-1] = v28;
    sub_1B29A3EB4(&qword_1E9C43D70);
    sub_1B2E80C28();
    sub_1B2B876B4((uint64_t)v59);
    uint64_t v29 = v51;
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = v61;
      uint64_t v31 = *(void *)(v61 + 16);
      if (v31)
      {
        uint64_t v48 = v27;
        uint64_t v49 = 0;
        *(void *)&v57[0] = MEMORY[0x1E4FBC860];
        sub_1B29C16E0();
        uint64_t v32 = *(void *)&v57[0];
        v47[1] = v30;
        uint64_t v33 = (uint64_t *)(v30 + 48);
        do
        {
          unint64_t v34 = *(v33 - 2);
          uint64_t v35 = *(v33 - 1);
          uint64_t v36 = *v33;
          uint64_t v37 = v33[2];
          uint64_t v55 = (void (*)(uint64_t, unint64_t, uint64_t))v33[1];
          uint64_t v56 = v35;
          uint64_t v38 = v33[4];
          uint64_t v54 = v33[3];
          uint64_t v39 = v33[5];
          uint64_t v40 = v33[6];
          unint64_t v52 = v34;
          uint64_t v53 = v39;
          unint64_t v41 = *(void *)(v32 + 16);
          unint64_t v42 = *(void *)(v32 + 24);
          *(void *)&v57[0] = v32;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v41 >= v42 >> 1)
          {
            sub_1B29C16E0();
            uint64_t v32 = *(void *)&v57[0];
          }
          v33 += 9;
          int64x2_t v43 = vdupq_n_s64(v52);
          *(void *)(v32 + 16) = v41 + 1;
          uint64_t v44 = (int64x2_t *)(v32 + 80 * v41);
          v44[2] = v43;
          v44[3].i64[0] = v56;
          v44[3].i64[1] = v36;
          v44[4].i64[0] = (uint64_t)v55;
          v44[4].i64[1] = v37;
          v44[5].i64[0] = v54;
          v44[5].i64[1] = v38;
          v44[6].i64[0] = v53;
          v44[6].i64[1] = v40;
          --v31;
        }
        while (v31);
        swift_bridgeObjectRelease();
        uint64_t v29 = v51;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = MEMORY[0x1E4FBC860];
      }
      uint64_t v45 = sub_1B2AF8EB8(v32);
      swift_bridgeObjectRetain();
      unint64_t ObjectType = sub_1B2D9B1DC(v50, v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v29
        && *(unsigned char *)(v29
                    + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_orderAndLimit) != 3)
      {
        LOBYTE(v57[0]) = *(unsigned char *)(v29
                                  + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_orderAndLimit);
        uint64_t v46 = sub_1B2D9CE14((unsigned __int8 *)v57, ObjectType);
        swift_bridgeObjectRelease();
        return v46;
      }
    }
  }
  return ObjectType;
}

uint64_t SemanticSearchService.SemanticSearchResult.__allocating_init(assetId:similarity:semanticSearchItem:)(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v6 = swift_allocObject();
  SemanticSearchService.SemanticSearchResult.init(assetId:similarity:semanticSearchItem:)(a1, a2, a3);
  return v6;
}

uint64_t sub_1B2D9D92C()
{
  return sub_1B2E817A8();
}

uint64_t SemanticSearchService.SemanticSearchOptions.__allocating_init(maxResults:similarityThreshold:)(uint64_t a1, float a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(float *)(result + 24) = a2;
  return result;
}

uint64_t SemanticSearchService.SemanticSearchOptions.init(maxResults:similarityThreshold:)(uint64_t a1, float a2)
{
  *(void *)(v2 + 16) = a1;
  *(float *)(v2 + 24) = a2;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

uint64_t SemanticSearchService.SemanticSearchOptions.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t SemanticSearchService.SemanticSearchFilters.__allocating_init(entityIds:startFilter:endFilter:orderAndLimit:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v8 = swift_allocObject();
  SemanticSearchService.SemanticSearchFilters.init(entityIds:startFilter:endFilter:orderAndLimit:)(a1, a2, a3, a4);
  return v8;
}

uint64_t SemanticSearchService.SemanticSearchFilters.init(entityIds:startFilter:endFilter:orderAndLimit:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  char v6 = *a4;
  *(void *)(v4 + 16) = a1;
  sub_1B29CA4E0(a2, v4 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_startFilter);
  sub_1B29CA4E0(a3, v4 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_endFilter);
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_orderAndLimit) = v6;
  return v4;
}

IntelligencePlatform::SemanticSearchService::SemanticSearchFilters::OrderAndLimit_optional __swiftcall SemanticSearchService.SemanticSearchFilters.OrderAndLimit.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B2E834D8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static SemanticSearchService.SemanticSearchFilters.OrderAndLimit.allCases.getter()
{
  return &unk_1F0ABAA48;
}

uint64_t SemanticSearchService.SemanticSearchFilters.OrderAndLimit.rawValue.getter()
{
  uint64_t v1 = 1954047342;
  if (*v0 != 1) {
    uint64_t v1 = 0x7473726966;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1953718636;
  }
}

uint64_t sub_1B2D9DB38(unsigned __int8 *a1, char *a2)
{
  return sub_1B29AC404(*a1, *a2);
}

uint64_t sub_1B2D9DB44()
{
  return sub_1B29AE884();
}

uint64_t sub_1B2D9DB4C()
{
  return sub_1B2AA5388();
}

uint64_t sub_1B2D9DB54()
{
  return sub_1B29F9248();
}

IntelligencePlatform::SemanticSearchService::SemanticSearchFilters::OrderAndLimit_optional sub_1B2D9DB5C(Swift::String *a1)
{
  return SemanticSearchService.SemanticSearchFilters.OrderAndLimit.init(rawValue:)(*a1);
}

uint64_t sub_1B2D9DB68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SemanticSearchService.SemanticSearchFilters.OrderAndLimit.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B2D9DB90(void *a1@<X8>)
{
  *a1 = &unk_1F0ABAA48;
}

BOOL sub_1B2D9DBA0()
{
  uint64_t v1 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v2 = sub_1B299B0F0(v1);
  MEMORY[0x1F4188790](v2);
  sub_1B299B860();
  uint64_t v5 = v3 - v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = *(void *)(v0 + 16);
  if (v9 && *(void *)(v9 + 16)) {
    return 0;
  }
  sub_1B29C8A80(v0 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_startFilter, (uint64_t)&v14 - v7);
  uint64_t v10 = sub_1B2E80668();
  int v11 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v10);
  sub_1B2B2D5F8((uint64_t)v8);
  if (v11 != 1) {
    return 0;
  }
  sub_1B29C8A80(v0 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_endFilter, v5);
  int v12 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v5, 1, v10);
  sub_1B2B2D5F8(v5);
  return v12 == 1
      && *(unsigned char *)(v0
                  + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_orderAndLimit) == 3;
}

uint64_t sub_1B2D9DCD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B29A3EB4(&qword_1EB7D87C0);
  uint64_t v3 = sub_1B299B0F0(v2);
  MEMORY[0x1F4188790](v3);
  sub_1B2999940();
  uint64_t v58 = (void *)v4;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v52 - v6;
  uint64_t v8 = sub_1B2E80668();
  sub_1B299D278();
  uint64_t v60 = v9;
  MEMORY[0x1F4188790](v10);
  sub_1B2999940();
  uint64_t v59 = v11;
  sub_1B299E6B8();
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v52 - v13;
  sub_1B2999C2C();
  uint64_t v14 = sub_1B2E80B98();
  sub_1B299D278();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  sub_1B299E4A0();
  uint64_t v20 = (void *)(v19 - v18);
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  unint64_t v22 = sub_1B2D9EF24();
  sub_1B2D9E778(v22, v23, v21);
  uint64_t v24 = *(void *)(v0 + 16);
  if (v24)
  {
    uint64_t v55 = v7;
    id v56 = v21;
    strcpy((char *)v62, "EntityIds: ");
    HIDWORD(v62[1]) = -352321536;
    uint64_t v25 = *(void *)(v24 + 16);
    uint64_t v26 = MEMORY[0x1E4FBC860];
    if (v25)
    {
      uint64_t v53 = v8;
      uint64_t v54 = v0;
      uint64_t v61 = MEMORY[0x1E4FBC860];
      sub_1B29BFDD0();
      uint64_t v26 = v61;
      uint64_t v27 = (uint64_t *)(v24 + 32);
      do
      {
        uint64_t v28 = *v27++;
        MEMORY[0x1B3EB20F0](v28);
        uint64_t v61 = v26;
        unint64_t v29 = *(void *)(v26 + 16);
        if (v29 >= *(void *)(v26 + 24) >> 1)
        {
          sub_1B29BFDD0();
          uint64_t v26 = v61;
        }
        *(void *)(v26 + 16) = v29 + 1;
        (*(void (**)(unint64_t, void *, uint64_t))(v16 + 32))(v26+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v29, v20, v14);
        --v25;
      }
      while (v25);
      uint64_t v8 = v53;
      uint64_t v1 = v54;
    }
    MEMORY[0x1B3EB1020](v26, v14);
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B29B7048();
    uint64_t v31 = v30;
    unint64_t v32 = *(void *)(v30 + 16);
    uint64_t v20 = (void *)(v32 + 1);
    uint64_t v33 = v60;
    if (v32 >= *(void *)(v30 + 24) >> 1)
    {
      sub_1B29A33E8();
      uint64_t v31 = v45;
    }
    sub_1B2D9EE9C();
    uint64_t v7 = v55;
    id v21 = v56;
  }
  else
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    uint64_t v33 = v60;
  }
  sub_1B29C8A80(v1 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_startFilter, (uint64_t)v7);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_1B2B2D5F8((uint64_t)v7);
  }
  else
  {
    sub_1B29F83D8();
    v34();
    strcpy((char *)v62, "StartFilter: ");
    HIWORD(v62[1]) = -4864;
    uint64_t v35 = sub_1B2E805E8();
    id v36 = sub_1B2D9EF6C(v35);

    sub_1B2E82378();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B29A0C54();
      uint64_t v31 = v46;
    }
    sub_1B2D9EF14();
    if (v37)
    {
      sub_1B29A33E8();
      uint64_t v31 = v47;
    }
    sub_1B2D9EE9C();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v57, v8);
  }
  uint64_t v38 = v58;
  sub_1B29C8A80(v1 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_endFilter, (uint64_t)v58);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v38, 1, v8) == 1)
  {
    sub_1B2B2D5F8((uint64_t)v38);
  }
  else
  {
    sub_1B29F83D8();
    v39();
    strcpy((char *)v62, "EndFilter: ");
    HIDWORD(v62[1]) = -352321536;
    uint64_t v40 = sub_1B2E805E8();
    id v41 = sub_1B2D9EF6C(v40);

    sub_1B2E82378();
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B29A0C54();
      uint64_t v31 = v48;
    }
    sub_1B2D9EF14();
    if (v37)
    {
      sub_1B29A33E8();
      uint64_t v31 = v49;
    }
    sub_1B2D9EE9C();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v59, v8);
  }
  int v42 = *(unsigned __int8 *)(v1
                           + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_orderAndLimit);
  if (v42 != 3)
  {
    v62[0] = 0;
    v62[1] = 0xE000000000000000;
    sub_1B2E831F8();
    swift_bridgeObjectRelease();
    v62[0] = 0x646E41726564724FLL;
    v62[1] = 0xEF203A74696D694CLL;
    sub_1B2E82518();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B29A0C54();
      uint64_t v31 = v50;
    }
    sub_1B2D9EF14();
    if (v37)
    {
      sub_1B29A33E8();
      uint64_t v31 = v51;
    }
    sub_1B2D9EE9C();
    goto LABEL_34;
  }
  if (*(void *)(v31 + 16))
  {
LABEL_34:
    v62[0] = v31;
    sub_1B29A3EB4(&qword_1EB7E3B30);
    sub_1B29D22C4((unint64_t *)&qword_1EB7E2800, &qword_1EB7E3B30);
    uint64_t v43 = sub_1B2E822D8();
    swift_bridgeObjectRelease();

    return v43;
  }

  swift_bridgeObjectRelease();
  return 4271950;
}

uint64_t SemanticSearchService.SemanticSearchFilters.deinit()
{
  swift_bridgeObjectRelease();
  sub_1B2B2D5F8(v0 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_startFilter);
  sub_1B2B2D5F8(v0 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_endFilter);
  return v0;
}

uint64_t SemanticSearchService.SemanticSearchFilters.__deallocating_deinit()
{
  SemanticSearchService.SemanticSearchFilters.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2D9E3E0()
{
  return sub_1B2D9DCD4();
}

uint64_t SemanticSearchService.SemanticSearchResult.assetId.getter()
{
  return *(void *)(v0 + 16);
}

float SemanticSearchService.SemanticSearchResult.similarity.getter()
{
  return *(float *)(v0 + 24);
}

uint64_t SemanticSearchService.SemanticSearchResult.semanticSearchItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  long long v3 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SemanticSearchService.SemanticSearchResult.init(assetId:similarity:semanticSearchItem:)(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(v3 + 16) = a1;
  *(float *)(v3 + 24) = a3;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 80) = v6;
  *(void *)(v3 + 96) = v4;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

uint64_t sub_1B2D9E4A8()
{
  return 0;
}

uint64_t SemanticSearchService.SemanticSearchResult.deinit()
{
  sub_1B2D9EF4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SemanticSearchService.SemanticSearchResult.__deallocating_deinit()
{
  sub_1B2D9EF4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1B2D9E6C0()
{
  return sub_1B2D9E4A8();
}

void *sub_1B2D9E6E4(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)sub_1B2E80188();
  uint64_t v5 = (uint64_t)result;
  if (result)
  {
    uint64_t result = (void *)sub_1B2E801A8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - (void)result;
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = sub_1B2E80198();
  if (v5)
  {
    if (v8 >= v7) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = v8;
    }
    uint64_t v10 = v9 / 4;
  }
  else
  {
    uint64_t v10 = 0;
  }
  return sub_1B2A46D4C(v5, v10);
}

void sub_1B2D9E778(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1B2E82348();
  objc_msgSend(a3, sel_setDateFormat_, v4);
}

unint64_t sub_1B2D9E7D0()
{
  unint64_t result = qword_1E9C43D20;
  if (!qword_1E9C43D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43D20);
  }
  return result;
}

uint64_t sub_1B2D9E81C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B2DA00A4(*(void *)(v1 + 24), a1);
}

unint64_t sub_1B2D9E83C()
{
  unint64_t result = qword_1E9C43D28;
  if (!qword_1E9C43D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43D28);
  }
  return result;
}

unint64_t sub_1B2D9E88C()
{
  unint64_t result = qword_1E9C43D30;
  if (!qword_1E9C43D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9C43D30);
  }
  return result;
}

uint64_t sub_1B2D9E8D8()
{
  return sub_1B29D22C4(&qword_1E9C43D38, &qword_1E9C43D40);
}

unsigned char *storeEnumTagSinglePayload for SemanticSearchServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D9E9E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SemanticSearchServiceError()
{
  return &type metadata for SemanticSearchServiceError;
}

uint64_t method lookup function for SemanticSearchService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SemanticSearchService);
}

uint64_t dispatch thunk of SemanticSearchService.__allocating_init(options:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SemanticSearchService.search(query:searchFilters:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of SemanticSearchService.countVectorDbContent()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t method lookup function for SemanticSearchService.SemanticSearchOptions(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SemanticSearchService.SemanticSearchOptions);
}

uint64_t dispatch thunk of SemanticSearchService.SemanticSearchOptions.__allocating_init(maxResults:similarityThreshold:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1B2D9EAF4()
{
  return type metadata accessor for SemanticSearchService.SemanticSearchFilters();
}

uint64_t type metadata accessor for SemanticSearchService.SemanticSearchFilters()
{
  uint64_t result = qword_1E9C43D48;
  if (!qword_1E9C43D48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B2D9EB44()
{
  sub_1B29CB028();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SemanticSearchService.SemanticSearchFilters(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SemanticSearchService.SemanticSearchFilters);
}

uint64_t dispatch thunk of SemanticSearchService.SemanticSearchFilters.__allocating_init(entityIds:startFilter:endFilter:orderAndLimit:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SemanticSearchService.SemanticSearchFilters.isEmpty.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SemanticSearchService.SemanticSearchFilters.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

unsigned char *storeEnumTagSinglePayload for SemanticSearchService.SemanticSearchFilters.OrderAndLimit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B2D9ED2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SemanticSearchService.SemanticSearchFilters.OrderAndLimit()
{
  return &type metadata for SemanticSearchService.SemanticSearchFilters.OrderAndLimit;
}

uint64_t type metadata accessor for SemanticSearchService.SemanticSearchResult()
{
  return self;
}

uint64_t method lookup function for SemanticSearchService.SemanticSearchResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SemanticSearchService.SemanticSearchResult);
}

uint64_t dispatch thunk of SemanticSearchService.SemanticSearchResult.__allocating_init(assetId:similarity:semanticSearchItem:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of SemanticSearchService.SemanticSearchResult.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

id sub_1B2D9EDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = (void *)sub_1B2E82348();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(a5, sel_sentenceEmbeddingVectorDataForString_language_error_, v8, a3, a4);

  return v9;
}

uint64_t sub_1B2D9EE7C()
{
  return sub_1B2B47548(0, (v0 & 0xC000000000000001) == 0, v0);
}

void sub_1B2D9EE9C()
{
  *(void *)(v4 + 16) = v0;
  uint64_t v5 = v4 + 16 * v3;
  *(void *)(v5 + 32) = v1;
  *(void *)(v5 + 40) = v2;
}

uint64_t sub_1B2D9EEAC()
{
  return swift_allocObject();
}

uint64_t sub_1B2D9EED4()
{
  return swift_retain();
}

uint64_t sub_1B2D9EEF0@<X0>(unint64_t a1@<X8>)
{
  return sub_1B29BA060(a1 > 1, v1, 1, v2);
}

unint64_t sub_1B2D9EF24()
{
  return 0xD000000000000013;
}

uint64_t sub_1B2D9EF38()
{
  return 0;
}

uint64_t sub_1B2D9EF4C()
{
  return swift_bridgeObjectRelease();
}

id sub_1B2D9EF6C(uint64_t a1)
{
  return objc_msgSend(v2, (SEL)(v1 + 2968), a1);
}

__n128 *sub_1B2D9EF8C(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_1B2D9EFA0()
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 0, 1, v1);
}

uint64_t ViewService.semanticSearchView.getter@<X0>(void *a1@<X8>)
{
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  uint64_t v5 = (void *)sub_1B2E82348();
  v17[0] = 0;
  id v6 = objc_msgSend(v4, sel_requestAssertionForViewName_error_, v5, v17);

  id v7 = v17[0];
  if (v6)
  {
    uint64_t v8 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    uint64_t v9 = v8[5];
    uint64_t v10 = v8[6];
    sub_1B29AEC7C(v8 + 2, v9);
    uint64_t v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 8);
    id v12 = v7;
    uint64_t v13 = v11(v6, v9, v10);
    if (v2) {
      return swift_unknownObjectRelease();
    }
    else {
      return sub_1B2D9FFDC(v6, v13, v14, a1);
    }
  }
  else
  {
    id v16 = v17[0];
    sub_1B2E80388();

    return swift_willThrow();
  }
}

uint64_t ViewService.SemanticSearchView.getSemanticSearchItems(subjectIds:)()
{
  swift_getObjectType();
  sub_1B29A3EB4(&qword_1E9C43D70);
  uint64_t result = sub_1B2E80C28();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t SemanticSearchItem.subject.getter()
{
  return *(void *)v0;
}

uint64_t SemanticSearchItem.subject.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*SemanticSearchItem.subject.modify())(void)
{
  return nullsub_1;
}

uint64_t SemanticSearchItem.textualization.getter()
{
  return sub_1B2999874();
}

uint64_t SemanticSearchItem.textualization.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v0;
  return result;
}

uint64_t (*SemanticSearchItem.textualization.modify())(void)
{
  return nullsub_1;
}

uint64_t SemanticSearchItem.starttime.getter()
{
  return sub_1B2999874();
}

uint64_t SemanticSearchItem.starttime.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v0;
  return result;
}

uint64_t (*SemanticSearchItem.starttime.modify())(void)
{
  return nullsub_1;
}

uint64_t SemanticSearchItem.endtime.getter()
{
  return sub_1B2999874();
}

uint64_t SemanticSearchItem.endtime.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0;
  return result;
}

uint64_t (*SemanticSearchItem.endtime.modify())(void)
{
  return nullsub_1;
}

uint64_t SemanticSearchItem.entities.getter()
{
  return sub_1B2999874();
}

uint64_t SemanticSearchItem.entities.setter()
{
  sub_1B29A08D4();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v0;
  return result;
}

uint64_t (*SemanticSearchItem.entities.modify())(void)
{
  return nullsub_1;
}

uint64_t SemanticSearchItem.description.getter()
{
  return 0x203A74786554;
}

uint64_t sub_1B2D9F5D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B2E837A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x696C617574786574 && a2 == 0xEE006E6F6974617ALL;
    if (v6 || (sub_1B2E837A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6D69747472617473 && a2 == 0xE900000000000065;
      if (v7 || (sub_1B2E837A8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x656D6974646E65 && a2 == 0xE700000000000000;
        if (v8 || (sub_1B2E837A8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_1B2E837A8();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}